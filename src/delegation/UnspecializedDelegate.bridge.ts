// generated by Stellar Contracts dataBridgeGenerator
// based on types defined in BasicDelegate (src/delegation/BasicDelegate.hl)
// recommended: CHECK THIS FILE INTO YOUR VERSION CONTROL SYSTEM
//   ... and keep checking in the changes as your on-chain types evolve.
//
// NOTE: this file is auto-generated; do not edit directly

import { Cast } from "@helios-lang/contract-utils"
import type { UplcData } from "@helios-lang/uplc";
import type { 
    IntLike,
    ByteArrayLike,
 } from "@helios-lang/codec-utils";
import type {
    Address,
    AssetClass,
    DatumHash,
    MintingPolicyHash,
    PubKey,
    PubKeyHash,
    ScriptHash,
    SpendingCredential,
    StakingCredential,
    StakingHash,
    StakingValidatorHash,
    TimeRange,
    TxId,
    TxInput,
    TxOutput,
    TxOutputId,
    TxOutputDatum,
    ValidatorHash,
    Value,
} from "@helios-lang/ledger";
import type { EnumTypeSchema, StructTypeSchema } from "@helios-lang/type-utils";


import { someDataMaker } from "../helios/dataBridge/someDataMaker.js"
import type { tagOnly } from "../helios/HeliosScriptBundle.js"
import type {hasSeed} from "../StellarContract.js"


import type {
    AnyData, AnyDataLike,
    DelegationDetail, DelegationDetailLike,
    DelegateDatum$Cip68RefToken, DelegateDatum$Cip68RefTokenLike,
    DelegateDatum, DelegateDatumLike,
    CapoLifecycleActivity$CreatingDelegate, CapoLifecycleActivity$CreatingDelegateLike,
    CapoLifecycleActivity, CapoLifecycleActivityLike,
    DelegateLifecycleActivity$ReplacingMe, DelegateLifecycleActivity$ReplacingMeLike,
    DelegateLifecycleActivity, DelegateLifecycleActivityLike,
    SpendingActivity, SpendingActivityLike,
    MintingActivity, MintingActivityLike,
    BurningActivity, BurningActivityLike,
    DelegateActivity$CreatingDelegatedData, DelegateActivity$CreatingDelegatedDataLike,
    DelegateActivity$UpdatingDelegatedData, DelegateActivity$UpdatingDelegatedDataLike,
    DelegateActivity$DeletingDelegatedData, DelegateActivity$DeletingDelegatedDataLike,
    DelegateActivity, DelegateActivityLike
} from "./UnspecializedDelegate.typeInfo.js"

export default class BasicDelegateDataBridge extends someDataMaker {
    datum: DelegateDatumHelper = new DelegateDatumHelper(this.bundle)   // datumAccessor/enum 
    DelegateDatum: DelegateDatumHelper = this.datum;

    // include accessors for activity types

    // include accessors for other enums (other than datum/activity)

    // include accessors for any other structs (other than datum/activity)

    // TODO: include any utility functions defined in the contract
}

/**
 * Helper class for generating UplcData for variants of the DelegateDatum enum type.
 */
class DelegateDatumHelper extends someDataMaker {
    enumCast = new Cast<
       DelegateDatum,
       DelegateDatumLike
   >(DelegateDatumSchema, { isMainnet: true });

    /**
     * generates UplcData for "unspecializedDelegate::DelegateDatum.Cip68RefToken"
     * @remarks - DelegateDatum$Cip68RefTokenLike is the same as the expanded field-types.     */
    Cip68RefToken(fields: DelegateDatum$Cip68RefTokenLike | { 
        cip68meta: AnyDataLike,
        cip68version: IntLike,
        dd: Option<{
    capoAddr: /*minStructField*/ Address | string
    mph: /*minStructField*/ MintingPolicyHash | string | number[]
    tn: /*minStructField*/ number[]
}
> } ) {
        const uplc = this.enumCast.toUplcData({
            Cip68RefToken: fields 
        });
       uplc.dataPath = "unspecializedDelegate::DelegateDatum.Cip68RefToken";
       return uplc;
    } /*multiFieldVariant enum accessor*/

    IsDelegation(
        value: DelegationDetailLike
    ) {
        const uplc = this.enumCast.toUplcData({ 
           IsDelegation: { dd: value } 
        }); /*SingleField enum variant*/
       uplc.dataPath = "unspecializedDelegate::DelegateDatum.IsDelegation";
       return uplc;
    }

/**
 * (property getter): UplcData for "unspecializedDelegate::DelegateDatum.ScriptReference"
 */
    get ScriptReference() {
        const uplc = this.enumCast.toUplcData({ ScriptReference: {} });
       uplc.dataPath = "unspecializedDelegate::DelegateDatum.ScriptReference";
       return uplc;
    } /* tagOnly variant accessor */
}


/**
 * Helper class for generating UplcData for variants of the CapoLifecycleActivity enum type.
 */
class CapoLifecycleActivityHelper extends someDataMaker {
    enumCast = new Cast<
       CapoLifecycleActivity,
       CapoLifecycleActivityLike
   >(CapoLifecycleActivitySchema, { isMainnet: true });

    /**
     * generates UplcData for "CapoDelegateHelpers::CapoLifecycleActivity.CreatingDelegate", given a transaction-context with a seed utxo and other field details
     * @remarks
     * See the `tcxWithSeedUtxo()` method in your contract's off-chain StellarContracts subclass.     */
    CreatingDelegate(value: hasSeed, fields: { 
        purpose: string 
    } ) : UplcData
    /**
    * generates UplcData for "CapoDelegateHelpers::CapoLifecycleActivity.CreatingDelegate" with raw seed details included in fields.
    */
    CreatingDelegate(fields: CapoLifecycleActivity$CreatingDelegateLike | {
            seed: TxOutputId | string,
            purpose: string
    } ): UplcData
    CreatingDelegate(
        seedOrUf: hasSeed | CapoLifecycleActivity$CreatingDelegateLike, 
        filteredFields?: { 
            purpose: string
    }) : UplcData {
        if (filteredFields) {
            const seedTxOutputId = this.getSeed(seedOrUf as hasSeed);
            const uplc = this.enumCast.toUplcData({
                CreatingDelegate: { seed: seedTxOutputId, ...filteredFields } 
            }, "CapoDelegateHelpers::CapoLifecycleActivity.CreatingDelegate");
           uplc.dataPath = "CapoDelegateHelpers::CapoLifecycleActivity.CreatingDelegate";
           return uplc;
        } else {
            const fields = seedOrUf as CapoLifecycleActivity$CreatingDelegateLike; 
           const uplc = this.enumCast.toUplcData({
                CreatingDelegate: fields 
            });
           uplc.dataPath = "CapoDelegateHelpers::CapoLifecycleActivity.CreatingDelegate";
           return uplc;
        }
    } /*multiFieldVariant/seeded enum accessor*/ 

}


/**
 * Helper class for generating UplcData for variants of the DelegateLifecycleActivity enum type.
 */
class DelegateLifecycleActivityHelper extends someDataMaker {
    enumCast = new Cast<
       DelegateLifecycleActivity,
       DelegateLifecycleActivityLike
   >(DelegateLifecycleActivitySchema, { isMainnet: true });

    /**
     * generates UplcData for "CapoDelegateHelpers::DelegateLifecycleActivity.ReplacingMe", given a transaction-context with a seed utxo and other field details
     * @remarks
     * See the `tcxWithSeedUtxo()` method in your contract's off-chain StellarContracts subclass.     */
    ReplacingMe(value: hasSeed, fields: { 
        purpose: string 
    } ) : UplcData
    /**
    * generates UplcData for "CapoDelegateHelpers::DelegateLifecycleActivity.ReplacingMe" with raw seed details included in fields.
    */
    ReplacingMe(fields: DelegateLifecycleActivity$ReplacingMeLike | {
            seed: TxOutputId | string,
            purpose: string
    } ): UplcData
    ReplacingMe(
        seedOrUf: hasSeed | DelegateLifecycleActivity$ReplacingMeLike, 
        filteredFields?: { 
            purpose: string
    }) : UplcData {
        if (filteredFields) {
            const seedTxOutputId = this.getSeed(seedOrUf as hasSeed);
            const uplc = this.enumCast.toUplcData({
                ReplacingMe: { seed: seedTxOutputId, ...filteredFields } 
            }, "CapoDelegateHelpers::DelegateLifecycleActivity.ReplacingMe");
           uplc.dataPath = "CapoDelegateHelpers::DelegateLifecycleActivity.ReplacingMe";
           return uplc;
        } else {
            const fields = seedOrUf as DelegateLifecycleActivity$ReplacingMeLike; 
           const uplc = this.enumCast.toUplcData({
                ReplacingMe: fields 
            });
           uplc.dataPath = "CapoDelegateHelpers::DelegateLifecycleActivity.ReplacingMe";
           return uplc;
        }
    } /*multiFieldVariant/seeded enum accessor*/ 


/**
 * (property getter): UplcData for "CapoDelegateHelpers::DelegateLifecycleActivity.Retiring"
 */
    get Retiring() {
        const uplc = this.enumCast.toUplcData({ Retiring: {} });
       uplc.dataPath = "CapoDelegateHelpers::DelegateLifecycleActivity.Retiring";
       return uplc;
    } /* tagOnly variant accessor */

/**
 * (property getter): UplcData for "CapoDelegateHelpers::DelegateLifecycleActivity.ValidatingSettings"
 */
    get ValidatingSettings() {
        const uplc = this.enumCast.toUplcData({ ValidatingSettings: {} });
       uplc.dataPath = "CapoDelegateHelpers::DelegateLifecycleActivity.ValidatingSettings";
       return uplc;
    } /* tagOnly variant accessor */
}


/**
 * Helper class for generating UplcData for variants of the SpendingActivity enum type.
 */
class SpendingActivityHelper extends someDataMaker {
    enumCast = new Cast<
       SpendingActivity,
       SpendingActivityLike
   >(SpendingActivitySchema, { isMainnet: true });

    _placeholder1SA(
        value: number[]
    ) {
        const uplc = this.enumCast.toUplcData({ 
           _placeholder1SA: { recId: value } 
        }); /*SingleField enum variant*/
       uplc.dataPath = "unspecializedDelegate::SpendingActivity._placeholder1SA";
       return uplc;
    }
}


/**
 * Helper class for generating UplcData for variants of the MintingActivity enum type.
 */
class MintingActivityHelper extends someDataMaker {
    enumCast = new Cast<
       MintingActivity,
       MintingActivityLike
   >(MintingActivitySchema, { isMainnet: true });

    _placeholder1MA(value: hasSeed | TxOutputId | string) {
        const seedTxOutputId = "string" == typeof value ? value : this.getSeed(value);
        const uplc = this.enumCast.toUplcData({ 
           _placeholder1MA: { seed: seedTxOutputId } 
        },);  /*SingleField/seeded enum variant*/
       uplc.dataPath = "unspecializedDelegate::MintingActivity._placeholder1MA";
       return uplc;
    }
}


/**
 * Helper class for generating UplcData for variants of the BurningActivity enum type.
 */
class BurningActivityHelper extends someDataMaker {
    enumCast = new Cast<
       BurningActivity,
       BurningActivityLike
   >(BurningActivitySchema, { isMainnet: true });

    _placeholder1BA(
        value: number[]
    ) {
        const uplc = this.enumCast.toUplcData({ 
           _placeholder1BA: { recId: value } 
        }); /*SingleField enum variant*/
       uplc.dataPath = "unspecializedDelegate::BurningActivity._placeholder1BA";
       return uplc;
    }
}


/**
 * Helper class for generating UplcData for variants of the DelegateActivity enum type.
 */
class DelegateActivityHelper extends someDataMaker {
    enumCast = new Cast<
       DelegateActivity,
       DelegateActivityLike
   >(DelegateActivitySchema, { isMainnet: true });

    CapoLifecycleActivities(
        value: CapoLifecycleActivityLike
    ) {
        const uplc = this.enumCast.toUplcData({ 
           CapoLifecycleActivities: { activity: value } 
        }); /*SingleField enum variant*/
       uplc.dataPath = "unspecializedDelegate::DelegateActivity.CapoLifecycleActivities";
       return uplc;
    }

    DelegateLifecycleActivities(
        value: DelegateLifecycleActivityLike
    ) {
        const uplc = this.enumCast.toUplcData({ 
           DelegateLifecycleActivities: { activity: value } 
        }); /*SingleField enum variant*/
       uplc.dataPath = "unspecializedDelegate::DelegateActivity.DelegateLifecycleActivities";
       return uplc;
    }

    SpendingActivities(
        value: SpendingActivityLike
    ) {
        const uplc = this.enumCast.toUplcData({ 
           SpendingActivities: { activity: value } 
        }); /*SingleField enum variant*/
       uplc.dataPath = "unspecializedDelegate::DelegateActivity.SpendingActivities";
       return uplc;
    }

    MintingActivities(
        value: MintingActivityLike
    ) {
        const uplc = this.enumCast.toUplcData({ 
           MintingActivities: { activity: value } 
        }); /*SingleField enum variant*/
       uplc.dataPath = "unspecializedDelegate::DelegateActivity.MintingActivities";
       return uplc;
    }

    BurningActivities(
        value: BurningActivityLike
    ) {
        const uplc = this.enumCast.toUplcData({ 
           BurningActivities: { activity: value } 
        }); /*SingleField enum variant*/
       uplc.dataPath = "unspecializedDelegate::DelegateActivity.BurningActivities";
       return uplc;
    }

    /**
     * generates UplcData for "unspecializedDelegate::DelegateActivity.CreatingDelegatedData", given a transaction-context with a seed utxo and other field details
     * @remarks
     * See the `tcxWithSeedUtxo()` method in your contract's off-chain StellarContracts subclass.     */
    CreatingDelegatedData(value: hasSeed, fields: { 
        dataType: string 
    } ) : UplcData
    /**
    * generates UplcData for "unspecializedDelegate::DelegateActivity.CreatingDelegatedData" with raw seed details included in fields.
    */
    CreatingDelegatedData(fields: DelegateActivity$CreatingDelegatedDataLike | {
            seed: TxOutputId | string,
            dataType: string
    } ): UplcData
    CreatingDelegatedData(
        seedOrUf: hasSeed | DelegateActivity$CreatingDelegatedDataLike, 
        filteredFields?: { 
            dataType: string
    }) : UplcData {
        if (filteredFields) {
            const seedTxOutputId = this.getSeed(seedOrUf as hasSeed);
            const uplc = this.enumCast.toUplcData({
                CreatingDelegatedData: { seed: seedTxOutputId, ...filteredFields } 
            }, "unspecializedDelegate::DelegateActivity.CreatingDelegatedData");
           uplc.dataPath = "unspecializedDelegate::DelegateActivity.CreatingDelegatedData";
           return uplc;
        } else {
            const fields = seedOrUf as DelegateActivity$CreatingDelegatedDataLike; 
           const uplc = this.enumCast.toUplcData({
                CreatingDelegatedData: fields 
            });
           uplc.dataPath = "unspecializedDelegate::DelegateActivity.CreatingDelegatedData";
           return uplc;
        }
    } /*multiFieldVariant/seeded enum accessor*/ 


    /**
     * generates UplcData for "unspecializedDelegate::DelegateActivity.UpdatingDelegatedData"
     * @remarks - DelegateActivity$UpdatingDelegatedDataLike is the same as the expanded field-types.     */
    UpdatingDelegatedData(fields: DelegateActivity$UpdatingDelegatedDataLike | { 
        dataType: string,
        recId: number[] } ) {
        const uplc = this.enumCast.toUplcData({
            UpdatingDelegatedData: fields 
        });
       uplc.dataPath = "unspecializedDelegate::DelegateActivity.UpdatingDelegatedData";
       return uplc;
    } /*multiFieldVariant enum accessor*/

    /**
     * generates UplcData for "unspecializedDelegate::DelegateActivity.DeletingDelegatedData"
     * @remarks - DelegateActivity$DeletingDelegatedDataLike is the same as the expanded field-types.     */
    DeletingDelegatedData(fields: DelegateActivity$DeletingDelegatedDataLike | { 
        dataType: string,
        recId: number[] } ) {
        const uplc = this.enumCast.toUplcData({
            DeletingDelegatedData: fields 
        });
       uplc.dataPath = "unspecializedDelegate::DelegateActivity.DeletingDelegatedData";
       return uplc;
    } /*multiFieldVariant enum accessor*/

    MultipleDelegateActivities(
        value: Array<UplcData>
    ) {
        const uplc = this.enumCast.toUplcData({ 
           MultipleDelegateActivities: { activities: value } 
        }); /*SingleField enum variant*/
       uplc.dataPath = "unspecializedDelegate::DelegateActivity.MultipleDelegateActivities";
       return uplc;
    }
}


export const AnyDataSchema : StructTypeSchema = {
    "kind": "struct",
    "format": "map",
    "id": "__module__StellarHeliosHelpers__AnyData[]",
    "name": "AnyData",
    "fieldTypes": [
        {
            "name": "id",
            "type": {
                "kind": "internal",
                "name": "ByteArray"
            },
            "key": "@id"
        },
        {
            "name": "type",
            "type": {
                "kind": "internal",
                "name": "String"
            },
            "key": "tpe"
        }
    ]
};

export const DelegationDetailSchema : StructTypeSchema = {
    "kind": "struct",
    "format": "list",
    "id": "__module__CapoDelegateHelpers__DelegationDetail[]",
    "name": "DelegationDetail",
    "fieldTypes": [
        {
            "name": "capoAddr",
            "type": {
                "kind": "internal",
                "name": "Address"
            }
        },
        {
            "name": "mph",
            "type": {
                "kind": "internal",
                "name": "MintingPolicyHash"
            }
        },
        {
            "name": "tn",
            "type": {
                "kind": "internal",
                "name": "ByteArray"
            }
        }
    ]
};

export const DelegateDatumSchema : EnumTypeSchema = {
    "kind": "enum",
    "name": "DelegateDatum",
    "id": "__module__unspecializedDelegate__DelegateDatum[]",
    "variantTypes": [
        {
            "kind": "variant",
            "tag": 0,
            "id": "__module__unspecializedDelegate__DelegateDatum[]__Cip68RefToken",
            "name": "Cip68RefToken",
            "fieldTypes": [
                {
                    "name": "cip68meta",
                    "type": {
                        "kind": "struct",
                        "format": "map",
                        "id": "__module__StellarHeliosHelpers__AnyData[]",
                        "name": "AnyData",
                        "fieldTypes": [
                            {
                                "name": "id",
                                "type": {
                                    "kind": "internal",
                                    "name": "ByteArray"
                                },
                                "key": "@id"
                            },
                            {
                                "name": "type",
                                "type": {
                                    "kind": "internal",
                                    "name": "String"
                                },
                                "key": "tpe"
                            }
                        ]
                    }
                },
                {
                    "name": "cip68version",
                    "type": {
                        "kind": "internal",
                        "name": "Int"
                    }
                },
                {
                    "name": "dd",
                    "type": {
                        "kind": "option",
                        "someType": {
                            "kind": "struct",
                            "format": "list",
                            "id": "__module__CapoDelegateHelpers__DelegationDetail[]",
                            "name": "DelegationDetail",
                            "fieldTypes": [
                                {
                                    "name": "capoAddr",
                                    "type": {
                                        "kind": "internal",
                                        "name": "Address"
                                    }
                                },
                                {
                                    "name": "mph",
                                    "type": {
                                        "kind": "internal",
                                        "name": "MintingPolicyHash"
                                    }
                                },
                                {
                                    "name": "tn",
                                    "type": {
                                        "kind": "internal",
                                        "name": "ByteArray"
                                    }
                                }
                            ]
                        }
                    }
                }
            ]
        },
        {
            "kind": "variant",
            "tag": 1,
            "id": "__module__unspecializedDelegate__DelegateDatum[]__IsDelegation",
            "name": "IsDelegation",
            "fieldTypes": [
                {
                    "name": "dd",
                    "type": {
                        "kind": "struct",
                        "format": "list",
                        "id": "__module__CapoDelegateHelpers__DelegationDetail[]",
                        "name": "DelegationDetail",
                        "fieldTypes": [
                            {
                                "name": "capoAddr",
                                "type": {
                                    "kind": "internal",
                                    "name": "Address"
                                }
                            },
                            {
                                "name": "mph",
                                "type": {
                                    "kind": "internal",
                                    "name": "MintingPolicyHash"
                                }
                            },
                            {
                                "name": "tn",
                                "type": {
                                    "kind": "internal",
                                    "name": "ByteArray"
                                }
                            }
                        ]
                    }
                }
            ]
        },
        {
            "kind": "variant",
            "tag": 2,
            "id": "__module__unspecializedDelegate__DelegateDatum[]__ScriptReference",
            "name": "ScriptReference",
            "fieldTypes": []
        }
    ]
};

export const CapoLifecycleActivitySchema : EnumTypeSchema = {
    "kind": "enum",
    "name": "CapoLifecycleActivity",
    "id": "__module__CapoDelegateHelpers__CapoLifecycleActivity[]",
    "variantTypes": [
        {
            "kind": "variant",
            "tag": 0,
            "id": "__module__CapoDelegateHelpers__CapoLifecycleActivity[]__CreatingDelegate",
            "name": "CreatingDelegate",
            "fieldTypes": [
                {
                    "name": "seed",
                    "type": {
                        "kind": "internal",
                        "name": "TxOutputId"
                    }
                },
                {
                    "name": "purpose",
                    "type": {
                        "kind": "internal",
                        "name": "String"
                    }
                }
            ]
        }
    ]
};

export const DelegateLifecycleActivitySchema : EnumTypeSchema = {
    "kind": "enum",
    "name": "DelegateLifecycleActivity",
    "id": "__module__CapoDelegateHelpers__DelegateLifecycleActivity[]",
    "variantTypes": [
        {
            "kind": "variant",
            "tag": 0,
            "id": "__module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ReplacingMe",
            "name": "ReplacingMe",
            "fieldTypes": [
                {
                    "name": "seed",
                    "type": {
                        "kind": "internal",
                        "name": "TxOutputId"
                    }
                },
                {
                    "name": "purpose",
                    "type": {
                        "kind": "internal",
                        "name": "String"
                    }
                }
            ]
        },
        {
            "kind": "variant",
            "tag": 1,
            "id": "__module__CapoDelegateHelpers__DelegateLifecycleActivity[]__Retiring",
            "name": "Retiring",
            "fieldTypes": []
        },
        {
            "kind": "variant",
            "tag": 2,
            "id": "__module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ValidatingSettings",
            "name": "ValidatingSettings",
            "fieldTypes": []
        }
    ]
};

export const SpendingActivitySchema : EnumTypeSchema = {
    "kind": "enum",
    "name": "SpendingActivity",
    "id": "__module__unspecializedDelegate__SpendingActivity[]",
    "variantTypes": [
        {
            "kind": "variant",
            "tag": 0,
            "id": "__module__unspecializedDelegate__SpendingActivity[]___placeholder1SA",
            "name": "_placeholder1SA",
            "fieldTypes": [
                {
                    "name": "recId",
                    "type": {
                        "kind": "internal",
                        "name": "ByteArray"
                    }
                }
            ]
        }
    ]
};

export const MintingActivitySchema : EnumTypeSchema = {
    "kind": "enum",
    "name": "MintingActivity",
    "id": "__module__unspecializedDelegate__MintingActivity[]",
    "variantTypes": [
        {
            "kind": "variant",
            "tag": 0,
            "id": "__module__unspecializedDelegate__MintingActivity[]___placeholder1MA",
            "name": "_placeholder1MA",
            "fieldTypes": [
                {
                    "name": "seed",
                    "type": {
                        "kind": "internal",
                        "name": "TxOutputId"
                    }
                }
            ]
        }
    ]
};

export const BurningActivitySchema : EnumTypeSchema = {
    "kind": "enum",
    "name": "BurningActivity",
    "id": "__module__unspecializedDelegate__BurningActivity[]",
    "variantTypes": [
        {
            "kind": "variant",
            "tag": 0,
            "id": "__module__unspecializedDelegate__BurningActivity[]___placeholder1BA",
            "name": "_placeholder1BA",
            "fieldTypes": [
                {
                    "name": "recId",
                    "type": {
                        "kind": "internal",
                        "name": "ByteArray"
                    }
                }
            ]
        }
    ]
};

export const DelegateActivitySchema : EnumTypeSchema = {
    "kind": "enum",
    "name": "DelegateActivity",
    "id": "__module__unspecializedDelegate__DelegateActivity[]",
    "variantTypes": [
        {
            "kind": "variant",
            "tag": 0,
            "id": "__module__unspecializedDelegate__DelegateActivity[]__CapoLifecycleActivities",
            "name": "CapoLifecycleActivities",
            "fieldTypes": [
                {
                    "name": "activity",
                    "type": {
                        "kind": "enum",
                        "name": "CapoLifecycleActivity",
                        "id": "__module__CapoDelegateHelpers__CapoLifecycleActivity[]",
                        "variantTypes": [
                            {
                                "kind": "variant",
                                "tag": 0,
                                "id": "__module__CapoDelegateHelpers__CapoLifecycleActivity[]__CreatingDelegate",
                                "name": "CreatingDelegate",
                                "fieldTypes": [
                                    {
                                        "name": "seed",
                                        "type": {
                                            "kind": "internal",
                                            "name": "TxOutputId"
                                        }
                                    },
                                    {
                                        "name": "purpose",
                                        "type": {
                                            "kind": "internal",
                                            "name": "String"
                                        }
                                    }
                                ]
                            }
                        ]
                    }
                }
            ]
        },
        {
            "kind": "variant",
            "tag": 1,
            "id": "__module__unspecializedDelegate__DelegateActivity[]__DelegateLifecycleActivities",
            "name": "DelegateLifecycleActivities",
            "fieldTypes": [
                {
                    "name": "activity",
                    "type": {
                        "kind": "enum",
                        "name": "DelegateLifecycleActivity",
                        "id": "__module__CapoDelegateHelpers__DelegateLifecycleActivity[]",
                        "variantTypes": [
                            {
                                "kind": "variant",
                                "tag": 0,
                                "id": "__module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ReplacingMe",
                                "name": "ReplacingMe",
                                "fieldTypes": [
                                    {
                                        "name": "seed",
                                        "type": {
                                            "kind": "internal",
                                            "name": "TxOutputId"
                                        }
                                    },
                                    {
                                        "name": "purpose",
                                        "type": {
                                            "kind": "internal",
                                            "name": "String"
                                        }
                                    }
                                ]
                            },
                            {
                                "kind": "variant",
                                "tag": 1,
                                "id": "__module__CapoDelegateHelpers__DelegateLifecycleActivity[]__Retiring",
                                "name": "Retiring",
                                "fieldTypes": []
                            },
                            {
                                "kind": "variant",
                                "tag": 2,
                                "id": "__module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ValidatingSettings",
                                "name": "ValidatingSettings",
                                "fieldTypes": []
                            }
                        ]
                    }
                }
            ]
        },
        {
            "kind": "variant",
            "tag": 2,
            "id": "__module__unspecializedDelegate__DelegateActivity[]__SpendingActivities",
            "name": "SpendingActivities",
            "fieldTypes": [
                {
                    "name": "activity",
                    "type": {
                        "kind": "enum",
                        "name": "SpendingActivity",
                        "id": "__module__unspecializedDelegate__SpendingActivity[]",
                        "variantTypes": [
                            {
                                "kind": "variant",
                                "tag": 0,
                                "id": "__module__unspecializedDelegate__SpendingActivity[]___placeholder1SA",
                                "name": "_placeholder1SA",
                                "fieldTypes": [
                                    {
                                        "name": "recId",
                                        "type": {
                                            "kind": "internal",
                                            "name": "ByteArray"
                                        }
                                    }
                                ]
                            }
                        ]
                    }
                }
            ]
        },
        {
            "kind": "variant",
            "tag": 3,
            "id": "__module__unspecializedDelegate__DelegateActivity[]__MintingActivities",
            "name": "MintingActivities",
            "fieldTypes": [
                {
                    "name": "activity",
                    "type": {
                        "kind": "enum",
                        "name": "MintingActivity",
                        "id": "__module__unspecializedDelegate__MintingActivity[]",
                        "variantTypes": [
                            {
                                "kind": "variant",
                                "tag": 0,
                                "id": "__module__unspecializedDelegate__MintingActivity[]___placeholder1MA",
                                "name": "_placeholder1MA",
                                "fieldTypes": [
                                    {
                                        "name": "seed",
                                        "type": {
                                            "kind": "internal",
                                            "name": "TxOutputId"
                                        }
                                    }
                                ]
                            }
                        ]
                    }
                }
            ]
        },
        {
            "kind": "variant",
            "tag": 4,
            "id": "__module__unspecializedDelegate__DelegateActivity[]__BurningActivities",
            "name": "BurningActivities",
            "fieldTypes": [
                {
                    "name": "activity",
                    "type": {
                        "kind": "enum",
                        "name": "BurningActivity",
                        "id": "__module__unspecializedDelegate__BurningActivity[]",
                        "variantTypes": [
                            {
                                "kind": "variant",
                                "tag": 0,
                                "id": "__module__unspecializedDelegate__BurningActivity[]___placeholder1BA",
                                "name": "_placeholder1BA",
                                "fieldTypes": [
                                    {
                                        "name": "recId",
                                        "type": {
                                            "kind": "internal",
                                            "name": "ByteArray"
                                        }
                                    }
                                ]
                            }
                        ]
                    }
                }
            ]
        },
        {
            "kind": "variant",
            "tag": 5,
            "id": "__module__unspecializedDelegate__DelegateActivity[]__CreatingDelegatedData",
            "name": "CreatingDelegatedData",
            "fieldTypes": [
                {
                    "name": "seed",
                    "type": {
                        "kind": "internal",
                        "name": "TxOutputId"
                    }
                },
                {
                    "name": "dataType",
                    "type": {
                        "kind": "internal",
                        "name": "String"
                    }
                }
            ]
        },
        {
            "kind": "variant",
            "tag": 6,
            "id": "__module__unspecializedDelegate__DelegateActivity[]__UpdatingDelegatedData",
            "name": "UpdatingDelegatedData",
            "fieldTypes": [
                {
                    "name": "dataType",
                    "type": {
                        "kind": "internal",
                        "name": "String"
                    }
                },
                {
                    "name": "recId",
                    "type": {
                        "kind": "internal",
                        "name": "ByteArray"
                    }
                }
            ]
        },
        {
            "kind": "variant",
            "tag": 7,
            "id": "__module__unspecializedDelegate__DelegateActivity[]__DeletingDelegatedData",
            "name": "DeletingDelegatedData",
            "fieldTypes": [
                {
                    "name": "dataType",
                    "type": {
                        "kind": "internal",
                        "name": "String"
                    }
                },
                {
                    "name": "recId",
                    "type": {
                        "kind": "internal",
                        "name": "ByteArray"
                    }
                }
            ]
        },
        {
            "kind": "variant",
            "tag": 8,
            "id": "__module__unspecializedDelegate__DelegateActivity[]__MultipleDelegateActivities",
            "name": "MultipleDelegateActivities",
            "fieldTypes": [
                {
                    "name": "activities",
                    "type": {
                        "kind": "list",
                        "itemType": {
                            "kind": "internal",
                            "name": "Data"
                        }
                    }
                }
            ]
        }
    ]
};
