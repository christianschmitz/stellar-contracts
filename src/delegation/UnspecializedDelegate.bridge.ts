// generated by Stellar Contracts dataBridgeGenerator
// based on types defined in BasicDelegate (src/delegation/BasicDelegate.hl)
// recommended: CHECK THIS FILE INTO YOUR VERSION CONTROL SYSTEM
//   ... and keep checking in the changes as your on-chain types evolve.
//
// NOTE: this file is auto-generated; do not edit directly

import { Cast } from "@helios-lang/contract-utils"
import type { UplcData, ConstrData } from "@helios-lang/uplc";
import type { 
    IntLike,
    ByteArrayLike,
 } from "@helios-lang/codec-utils";
import type {
    Address,
    AssetClass,
    DatumHash,
    MintingPolicyHash,
    PubKey,
    PubKeyHash,
    ScriptHash,
    SpendingCredential,
    StakingCredential,
    StakingHash,
    StakingValidatorHash,
    TimeRange,
    TxId,
    TxInput,
    TxOutput,
    TxOutputId,
    TxOutputDatum,
    ValidatorHash,
    Value,
} from "@helios-lang/ledger";
import type { EnumTypeSchema, StructTypeSchema } from "@helios-lang/type-utils";


import { 
    DataBridge, 
    ContractDataBridge, 
    DataBridgeReaderClass,
    type callWith,
} from "../helios/dataBridge/DataBridge.js"
import { 
    EnumBridge,
    type JustAnEnum,
} from "../helios/dataBridge/EnumBridge.js"
import type { tagOnly } from "../helios/HeliosScriptBundle.js"
import type { IntersectedEnum } from "../helios/typeUtils.js"
import type {hasSeed, isActivity} from "../StellarContract.js"


import type {
    AnyData, AnyDataLike,
    DelegationDetail, DelegationDetailLike,
    DelegateDatum$Cip68RefToken, DelegateDatum$Cip68RefTokenLike,
    DelegateDatum, DelegateDatumLike,
    CapoLifecycleActivity$CreatingDelegate, CapoLifecycleActivity$CreatingDelegateLike,
    CapoLifecycleActivity, CapoLifecycleActivityLike,
    DelegateLifecycleActivity$ReplacingMe, DelegateLifecycleActivity$ReplacingMeLike,
    DelegateLifecycleActivity, DelegateLifecycleActivityLike,
    SpendingActivity, SpendingActivityLike,
    MintingActivity, MintingActivityLike,
    BurningActivity, BurningActivityLike,
    DelegateActivity$CreatingDelegatedData, DelegateActivity$CreatingDelegatedDataLike,
    DelegateActivity$UpdatingDelegatedData, DelegateActivity$UpdatingDelegatedDataLike,
    DelegateActivity$DeletingDelegatedData, DelegateActivity$DeletingDelegatedDataLike,
    DelegateActivity, DelegateActivityLike
} from "./UnspecializedDelegate.typeInfo.js";

export type * as types from "./UnspecializedDelegate.typeInfo.js";
import type * as types from "./UnspecializedDelegate.typeInfo.js";



//Note about @ts-expect-error drilling through protected accessors: This 
//   allows the interface for the nested accessor to show only the public details,
//   while allowing us to collaborate between these two closely-related classes.
//   Like "friends" in C++.

/**
 * data bridge for **BasicDelegate** script (defined in class ***UnspecializedDgtBundle***)}
 * main: **src/delegation/BasicDelegate.hl**, project: **stellar-contracts**
 * @remarks - note that you may override get dataBridgeName() { return "..." } to customize the name of this bridge class
 */
export class UnspecializedDelegateBridge extends ContractDataBridge {
    static isAbstract = false as const;
    isAbstract = false as const;
    /**
     * Helper class for generating UplcData for the datum type ***
     * for this contract script. 
     */
    datum: DelegateDatumHelper
     = new DelegateDatumHelper(this.bundle, {})   // datumAccessor/enum

    /**
     * this is the specific type of datum for the `BasicDelegate` script
     */
    DelegateDatum: DelegateDatumHelper = this.datum;

    readDatum : (d: UplcData) => IntersectedEnum<DelegateDatum> = (d) =>  {
        //XXX@ts-expect-error drilling through the protected accessor.
        //   ... see more comments about that above
        //return this.datum.__cast.fromUplcData(d);
        return this.reader.DelegateDatum(d)
    }


    /**
     * generates UplcData for the activity type (***DelegateActivity***) for the `BasicDelegate` script
     */
    activity : DelegateActivityHelper= new DelegateActivityHelper(this.bundle, {isActivity: true}); // activityAccessor/enum
        DelegateActivity: DelegateActivityHelper = this.activity;

    reader = new UnspecializedDelegateBridgeReader(this);

    /**
     * accessors for all the types defined in the `BasicDelegate` script
     * @remarks - these accessors are used to generate UplcData for each type
     */
    types = {
      /**
       * generates UplcData for the enum type ***DelegateDatum*** for the `BasicDelegate` script
       */
        DelegateDatum: new DelegateDatumHelper(this.bundle),
      /**
       * generates UplcData for the enum type ***CapoLifecycleActivity*** for the `BasicDelegate` script
       */
        CapoLifecycleActivity: new CapoLifecycleActivityHelper(this.bundle),
      /**
       * generates UplcData for the enum type ***DelegateLifecycleActivity*** for the `BasicDelegate` script
       */
        DelegateLifecycleActivity: new DelegateLifecycleActivityHelper(this.bundle),
      /**
       * generates UplcData for the enum type ***SpendingActivity*** for the `BasicDelegate` script
       */
        SpendingActivity: new SpendingActivityHelper(this.bundle),
      /**
       * generates UplcData for the enum type ***MintingActivity*** for the `BasicDelegate` script
       */
        MintingActivity: new MintingActivityHelper(this.bundle),
      /**
       * generates UplcData for the enum type ***BurningActivity*** for the `BasicDelegate` script
       */
        BurningActivity: new BurningActivityHelper(this.bundle),
      /**
       * generates UplcData for the enum type ***DelegateActivity*** for the `BasicDelegate` script
       */
        DelegateActivity: new DelegateActivityHelper(this.bundle),

      /**
       * generates UplcData for the enum type ***AnyData*** for the `BasicDelegate` script
       */
        AnyData: (fields: AnyDataLike | {
    id: /*minStructField*/ number[]
    type: /*minStructField*/ string
}
) => {
        return this.__AnyDataCast.toUplcData(fields);
    },
      /**
       * generates UplcData for the enum type ***DelegationDetail*** for the `BasicDelegate` script
       */
        DelegationDetail: (fields: DelegationDetailLike | {
    capoAddr: /*minStructField*/ Address | string
    mph: /*minStructField*/ MintingPolicyHash | string | number[]
    tn: /*minStructField*/ number[]
}
) => {
        return this.__DelegationDetailCast.toUplcData(fields);
    },    }    

    protected __AnyDataCast = new Cast<
                AnyData, AnyDataLike
            >(AnyDataSchema, { isMainnet: true });
    protected __DelegationDetailCast = new Cast<
                DelegationDetail, DelegationDetailLike
            >(DelegationDetailSchema, { isMainnet: true });


}
export default UnspecializedDelegateBridge;

class UnspecializedDelegateBridgeReader extends DataBridgeReaderClass {
    constructor(public bridge: UnspecializedDelegateBridge) {
        super();
    }
    /**
        * reads UplcData *known to fit the **DelegateDatum*** enum type,
        * for the BasicDelegate script.
        * ### Standard WARNING
        * 
        * This is a low-level data-reader for use in ***advanced development scenarios***.
        * 
        * Used correctly with data that matches the enum type, this reader
        * returns strongly-typed data - your code using these types will be safe.
        * 
        * On the other hand, reading non-matching data will not give you a valid result.  
        * It may throw an error, or it may throw no error, but return a value that
        * causes some error later on in your code, when you try to use it.
        */
    DelegateDatum(d : UplcData) { 
        const typeHelper = this.bridge.types.DelegateDatum;
        //@ts-expect-error drilling through the protected accessor.
        const cast = typeHelper.__cast;

        return cast.fromUplcData(d) as IntersectedEnum<DelegateDatum>;        
    } /* enumReader helper */

    /**
        * reads UplcData *known to fit the **CapoLifecycleActivity*** enum type,
        * for the BasicDelegate script.
        * ### Standard WARNING
        * 
        * This is a low-level data-reader for use in ***advanced development scenarios***.
        * 
        * Used correctly with data that matches the enum type, this reader
        * returns strongly-typed data - your code using these types will be safe.
        * 
        * On the other hand, reading non-matching data will not give you a valid result.  
        * It may throw an error, or it may throw no error, but return a value that
        * causes some error later on in your code, when you try to use it.
        */
    CapoLifecycleActivity(d : UplcData) { 
        const typeHelper = this.bridge.types.CapoLifecycleActivity;
        //@ts-expect-error drilling through the protected accessor.
        const cast = typeHelper.__cast;

        return cast.fromUplcData(d) as IntersectedEnum<CapoLifecycleActivity>;        
    } /* enumReader helper */

    /**
        * reads UplcData *known to fit the **DelegateLifecycleActivity*** enum type,
        * for the BasicDelegate script.
        * ### Standard WARNING
        * 
        * This is a low-level data-reader for use in ***advanced development scenarios***.
        * 
        * Used correctly with data that matches the enum type, this reader
        * returns strongly-typed data - your code using these types will be safe.
        * 
        * On the other hand, reading non-matching data will not give you a valid result.  
        * It may throw an error, or it may throw no error, but return a value that
        * causes some error later on in your code, when you try to use it.
        */
    DelegateLifecycleActivity(d : UplcData) { 
        const typeHelper = this.bridge.types.DelegateLifecycleActivity;
        //@ts-expect-error drilling through the protected accessor.
        const cast = typeHelper.__cast;

        return cast.fromUplcData(d) as IntersectedEnum<DelegateLifecycleActivity>;        
    } /* enumReader helper */

    /**
        * reads UplcData *known to fit the **SpendingActivity*** enum type,
        * for the BasicDelegate script.
        * ### Standard WARNING
        * 
        * This is a low-level data-reader for use in ***advanced development scenarios***.
        * 
        * Used correctly with data that matches the enum type, this reader
        * returns strongly-typed data - your code using these types will be safe.
        * 
        * On the other hand, reading non-matching data will not give you a valid result.  
        * It may throw an error, or it may throw no error, but return a value that
        * causes some error later on in your code, when you try to use it.
        */
    SpendingActivity(d : UplcData) { 
        const typeHelper = this.bridge.types.SpendingActivity;
        //@ts-expect-error drilling through the protected accessor.
        const cast = typeHelper.__cast;

        return cast.fromUplcData(d) as IntersectedEnum<SpendingActivity>;        
    } /* enumReader helper */

    /**
        * reads UplcData *known to fit the **MintingActivity*** enum type,
        * for the BasicDelegate script.
        * ### Standard WARNING
        * 
        * This is a low-level data-reader for use in ***advanced development scenarios***.
        * 
        * Used correctly with data that matches the enum type, this reader
        * returns strongly-typed data - your code using these types will be safe.
        * 
        * On the other hand, reading non-matching data will not give you a valid result.  
        * It may throw an error, or it may throw no error, but return a value that
        * causes some error later on in your code, when you try to use it.
        */
    MintingActivity(d : UplcData) { 
        const typeHelper = this.bridge.types.MintingActivity;
        //@ts-expect-error drilling through the protected accessor.
        const cast = typeHelper.__cast;

        return cast.fromUplcData(d) as IntersectedEnum<MintingActivity>;        
    } /* enumReader helper */

    /**
        * reads UplcData *known to fit the **BurningActivity*** enum type,
        * for the BasicDelegate script.
        * ### Standard WARNING
        * 
        * This is a low-level data-reader for use in ***advanced development scenarios***.
        * 
        * Used correctly with data that matches the enum type, this reader
        * returns strongly-typed data - your code using these types will be safe.
        * 
        * On the other hand, reading non-matching data will not give you a valid result.  
        * It may throw an error, or it may throw no error, but return a value that
        * causes some error later on in your code, when you try to use it.
        */
    BurningActivity(d : UplcData) { 
        const typeHelper = this.bridge.types.BurningActivity;
        //@ts-expect-error drilling through the protected accessor.
        const cast = typeHelper.__cast;

        return cast.fromUplcData(d) as IntersectedEnum<BurningActivity>;        
    } /* enumReader helper */

    /**
        * reads UplcData *known to fit the **DelegateActivity*** enum type,
        * for the BasicDelegate script.
        * ### Standard WARNING
        * 
        * This is a low-level data-reader for use in ***advanced development scenarios***.
        * 
        * Used correctly with data that matches the enum type, this reader
        * returns strongly-typed data - your code using these types will be safe.
        * 
        * On the other hand, reading non-matching data will not give you a valid result.  
        * It may throw an error, or it may throw no error, but return a value that
        * causes some error later on in your code, when you try to use it.
        */
    DelegateActivity(d : UplcData) { 
        const typeHelper = this.bridge.types.DelegateActivity;
        //@ts-expect-error drilling through the protected accessor.
        const cast = typeHelper.__cast;

        return cast.fromUplcData(d) as IntersectedEnum<DelegateActivity>;        
    } /* enumReader helper */

    /**
        * reads UplcData *known to fit the **AnyData*** struct type,
        * for the BasicDelegate script.
        * ### Standard WARNING
        * 
        * This is a low-level data-reader for use in ***advanced development scenarios***.
        * 
        * Used correctly with data that matches the struct type, this reader
        * returns strongly-typed data - your code using these types will be safe.
        * 
        * On the other hand, reading non-matching data will not give you a valid result.  
        * It may throw an error, or it may throw no error, but return a value that
        * causes some error later on in your code, when you try to use it.
        */
    AnyData(d: UplcData) {
        //@ts-expect-error drilling through the protected accessor.
        const cast = this.bridge.__AnyDataCast;
        return cast.fromUplcData(d);        
    } /* structReader helper */

    /**
        * reads UplcData *known to fit the **DelegationDetail*** struct type,
        * for the BasicDelegate script.
        * ### Standard WARNING
        * 
        * This is a low-level data-reader for use in ***advanced development scenarios***.
        * 
        * Used correctly with data that matches the struct type, this reader
        * returns strongly-typed data - your code using these types will be safe.
        * 
        * On the other hand, reading non-matching data will not give you a valid result.  
        * It may throw an error, or it may throw no error, but return a value that
        * causes some error later on in your code, when you try to use it.
        */
    DelegationDetail(d: UplcData) {
        //@ts-expect-error drilling through the protected accessor.
        const cast = this.bridge.__DelegationDetailCast;
        return cast.fromUplcData(d);        
    } /* structReader helper */

}

/**
 * Helper class for generating UplcData for the ***AnyData*** struct type.
 */
export class AnyDataHelper extends DataBridge {
    isCallable = true
    protected __cast = new Cast<
        AnyData,
        AnyDataLike
    >(AnyDataSchema, { isMainnet: true });

    // You might expect a function as follows, but no.  However, a similar uplc-generating capability
    // is instead provided, with that same sort of interface, by a proxy in the inheritance chain.
    // see the callableDataBridge type on the 'datum' property in the contract bridge.
    //
    //Also: if you're reading this, ask in our discord server about a 🎁 for curiosity-seekers! 
    //
    // AnyData(fields: AnyDataLike) {
    //    return this.__cast.toUplcData(fields);
    //}
} //mkStructHelperClass 


/**
 * Helper class for generating UplcData for the ***DelegationDetail*** struct type.
 */
export class DelegationDetailHelper extends DataBridge {
    isCallable = true
    protected __cast = new Cast<
        DelegationDetail,
        DelegationDetailLike
    >(DelegationDetailSchema, { isMainnet: true });

    // You might expect a function as follows, but no.  However, a similar uplc-generating capability
    // is instead provided, with that same sort of interface, by a proxy in the inheritance chain.
    // see the callableDataBridge type on the 'datum' property in the contract bridge.
    //
    //Also: if you're reading this, ask in our discord server about a 🎁 for curiosity-seekers! 
    //
    // DelegationDetail(fields: DelegationDetailLike) {
    //    return this.__cast.toUplcData(fields);
    //}
} //mkStructHelperClass 


/**
 * Helper class for generating UplcData for variants of the ***DelegateDatum*** enum type.
 */
export class DelegateDatumHelper extends EnumBridge<JustAnEnum> {
    protected __cast = new Cast<
       DelegateDatum,
       DelegateDatumLike
   >(DelegateDatumSchema, { isMainnet: true });

    /**
     * generates  UplcData for ***"unspecializedDelegate::DelegateDatum.Cip68RefToken"***
     * @remarks - ***DelegateDatum$Cip68RefTokenLike*** is the same as the expanded field-types.
     */
    Cip68RefToken(fields: DelegateDatum$Cip68RefTokenLike | { 
        cip68meta: AnyDataLike,
        cip68version: IntLike,
        dd: Option<{
    capoAddr: /*minStructField*/ Address | string
    mph: /*minStructField*/ MintingPolicyHash | string | number[]
    tn: /*minStructField*/ number[]
}
> } ) : UplcData {
        const uplc = this.mkUplcData({
            Cip68RefToken: fields 
        }, "unspecializedDelegate::DelegateDatum.Cip68RefToken");
       return uplc;
    } /*multiFieldVariant enum accessor*/

    /**
     * generates  UplcData for ***"unspecializedDelegate::DelegateDatum.IsDelegation"***
     * @remarks - ***DelegationDetailLike*** is the same as the expanded field-type.
     */
    IsDelegation(
        dd: DelegationDetailLike | {
    capoAddr: /*minStructField*/ Address | string
    mph: /*minStructField*/ MintingPolicyHash | string | number[]
    tn: /*minStructField*/ number[]
}
    ) : UplcData {
        const uplc = this.mkUplcData({ 
           IsDelegation: { dd: dd } 
        }, "unspecializedDelegate::DelegateDatum.IsDelegation"); /*SingleField enum variant*/
       return uplc;
    }

/**
 * (property getter): UplcData for ***"unspecializedDelegate::DelegateDatum.ScriptReference"***
 * @remarks - ***tagOnly*** variant accessor returns an empty ***constrData#2***
 */
    get ScriptReference() {
        const uplc = this.mkUplcData({ ScriptReference: {} }, 
            "unspecializedDelegate::DelegateDatum.ScriptReference");
       return uplc;
    } /* tagOnly variant accessor */
}


/**
 * Helper class for generating UplcData for variants of the ***CapoLifecycleActivity*** enum type.
 */
export class CapoLifecycleActivityHelper extends EnumBridge<JustAnEnum> {
    protected __cast = new Cast<
       CapoLifecycleActivity,
       CapoLifecycleActivityLike
   >(CapoLifecycleActivitySchema, { isMainnet: true });

    /**
     * generates  UplcData for ***"CapoDelegateHelpers::CapoLifecycleActivity.CreatingDelegate"***, 
     * given a transaction-context ***with a seed utxo*** and other field details
     * @remarks
     * See the `tcxWithSeedUtxo()` method in your contract's off-chain StellarContracts subclass 
     * to create a context satisfying `hasSeed`.
     */
    CreatingDelegate(value: hasSeed, fields: { 
        purpose: string 
    } ) : UplcData
    /**
     * generates  UplcData for ***"CapoDelegateHelpers::CapoLifecycleActivity.CreatingDelegate"*** 
     * with raw seed details included in fields.
     */
    CreatingDelegate(fields: CapoLifecycleActivity$CreatingDelegateLike | {
            seed: TxOutputId | string,
            purpose: string
    } ): UplcData
    CreatingDelegate(
        seedOrUf: hasSeed | CapoLifecycleActivity$CreatingDelegateLike, 
        filteredFields?: { 
            purpose: string
    }) : UplcData {
        if (filteredFields) {
            const seedTxOutputId = this.getSeed(seedOrUf as hasSeed);
            const uplc = this.mkUplcData({
                CreatingDelegate: { seed: seedTxOutputId, ...filteredFields } 
            }, "CapoDelegateHelpers::CapoLifecycleActivity.CreatingDelegate");
           return uplc;
        } else {
            const fields = seedOrUf as CapoLifecycleActivity$CreatingDelegateLike; 
           const uplc = this.mkUplcData({
                CreatingDelegate: fields 
            }, "CapoDelegateHelpers::CapoLifecycleActivity.CreatingDelegate");
           return uplc;
        }
    } /*multiFieldVariant/seeded enum accessor*/ 

}


/**
 * Helper class for generating UplcData for variants of the ***DelegateLifecycleActivity*** enum type.
 */
export class DelegateLifecycleActivityHelper extends EnumBridge<JustAnEnum> {
    protected __cast = new Cast<
       DelegateLifecycleActivity,
       DelegateLifecycleActivityLike
   >(DelegateLifecycleActivitySchema, { isMainnet: true });

    /**
     * generates  UplcData for ***"CapoDelegateHelpers::DelegateLifecycleActivity.ReplacingMe"***, 
     * given a transaction-context ***with a seed utxo*** and other field details
     * @remarks
     * See the `tcxWithSeedUtxo()` method in your contract's off-chain StellarContracts subclass 
     * to create a context satisfying `hasSeed`.
     */
    ReplacingMe(value: hasSeed, fields: { 
        purpose: string 
    } ) : UplcData
    /**
     * generates  UplcData for ***"CapoDelegateHelpers::DelegateLifecycleActivity.ReplacingMe"*** 
     * with raw seed details included in fields.
     */
    ReplacingMe(fields: DelegateLifecycleActivity$ReplacingMeLike | {
            seed: TxOutputId | string,
            purpose: string
    } ): UplcData
    ReplacingMe(
        seedOrUf: hasSeed | DelegateLifecycleActivity$ReplacingMeLike, 
        filteredFields?: { 
            purpose: string
    }) : UplcData {
        if (filteredFields) {
            const seedTxOutputId = this.getSeed(seedOrUf as hasSeed);
            const uplc = this.mkUplcData({
                ReplacingMe: { seed: seedTxOutputId, ...filteredFields } 
            }, "CapoDelegateHelpers::DelegateLifecycleActivity.ReplacingMe");
           return uplc;
        } else {
            const fields = seedOrUf as DelegateLifecycleActivity$ReplacingMeLike; 
           const uplc = this.mkUplcData({
                ReplacingMe: fields 
            }, "CapoDelegateHelpers::DelegateLifecycleActivity.ReplacingMe");
           return uplc;
        }
    } /*multiFieldVariant/seeded enum accessor*/ 


/**
 * (property getter): UplcData for ***"CapoDelegateHelpers::DelegateLifecycleActivity.Retiring"***
 * @remarks - ***tagOnly*** variant accessor returns an empty ***constrData#1***
 */
    get Retiring() {
        const uplc = this.mkUplcData({ Retiring: {} }, 
            "CapoDelegateHelpers::DelegateLifecycleActivity.Retiring");
       return uplc;
    } /* tagOnly variant accessor */

/**
 * (property getter): UplcData for ***"CapoDelegateHelpers::DelegateLifecycleActivity.ValidatingSettings"***
 * @remarks - ***tagOnly*** variant accessor returns an empty ***constrData#2***
 */
    get ValidatingSettings() {
        const uplc = this.mkUplcData({ ValidatingSettings: {} }, 
            "CapoDelegateHelpers::DelegateLifecycleActivity.ValidatingSettings");
       return uplc;
    } /* tagOnly variant accessor */
}


/**
 * Helper class for generating UplcData for variants of the ***SpendingActivity*** enum type.
 */
export class SpendingActivityHelper extends EnumBridge<JustAnEnum> {
    protected __cast = new Cast<
       SpendingActivity,
       SpendingActivityLike
   >(SpendingActivitySchema, { isMainnet: true });

    /**
     * generates  UplcData for ***"unspecializedDelegate::SpendingActivity._placeholder1SA"***
     */
    _placeholder1SA(
        recId: number[]
    ) : UplcData {
        const uplc = this.mkUplcData({ 
           _placeholder1SA: { recId: recId } 
        }, "unspecializedDelegate::SpendingActivity._placeholder1SA"); /*SingleField enum variant*/
       return uplc;
    }
}


/**
 * Helper class for generating UplcData for variants of the ***MintingActivity*** enum type.
 */
export class MintingActivityHelper extends EnumBridge<JustAnEnum> {
    protected __cast = new Cast<
       MintingActivity,
       MintingActivityLike
   >(MintingActivitySchema, { isMainnet: true });

    /**
    * generates  UplcData for ***"unspecializedDelegate::MintingActivity._placeholder1MA"***, 
    * given a transaction-context with a ***seed utxo*** and other field details
    * @remarks - to get a transaction context having the seed needed for this argment, 
    * see the `tcxWithSeedUtxo()` method in your contract's off-chain StellarContracts subclass.    */
    _placeholder1MA(value: hasSeed | TxOutputId | string) : UplcData {
        const seedTxOutputId = "string" == typeof value ? value : this.getSeed(value);
        const uplc = this.mkUplcData({ 
           _placeholder1MA: { seed: seedTxOutputId } 
        },"unspecializedDelegate::MintingActivity._placeholder1MA");  /*SingleField/seeded enum variant*/
       return uplc;
    }
}


/**
 * Helper class for generating UplcData for variants of the ***BurningActivity*** enum type.
 */
export class BurningActivityHelper extends EnumBridge<JustAnEnum> {
    protected __cast = new Cast<
       BurningActivity,
       BurningActivityLike
   >(BurningActivitySchema, { isMainnet: true });

    /**
     * generates  UplcData for ***"unspecializedDelegate::BurningActivity._placeholder1BA"***
     */
    _placeholder1BA(
        recId: number[]
    ) : UplcData {
        const uplc = this.mkUplcData({ 
           _placeholder1BA: { recId: recId } 
        }, "unspecializedDelegate::BurningActivity._placeholder1BA"); /*SingleField enum variant*/
       return uplc;
    }
}


/**
 * Helper class for generating UplcData for variants of the ***CapoLifecycleActivity*** enum type.
 */
export class CapoLifecycleActivityHelperNested extends EnumBridge<isActivity> {
    protected __cast = new Cast<
       CapoLifecycleActivity,
       CapoLifecycleActivityLike
   >(CapoLifecycleActivitySchema, { isMainnet: true });

    /**
     * generates isActivity/redeemer wrapper with UplcData for ***"CapoDelegateHelpers::CapoLifecycleActivity.CreatingDelegate"***, 
     * given a transaction-context ***with a seed utxo*** and other field details
     * @remarks
     * See the `tcxWithSeedUtxo()` method in your contract's off-chain StellarContracts subclass 
     * to create a context satisfying `hasSeed`.
     */
    CreatingDelegate(value: hasSeed, fields: { 
        purpose: string 
    } ) : isActivity
    /**
     * generates isActivity/redeemer wrapper with UplcData for ***"CapoDelegateHelpers::CapoLifecycleActivity.CreatingDelegate"*** 
     * with raw seed details included in fields.
     */
    CreatingDelegate(fields: CapoLifecycleActivity$CreatingDelegateLike | {
            seed: TxOutputId | string,
            purpose: string
    } ): isActivity
    CreatingDelegate(
        seedOrUf: hasSeed | CapoLifecycleActivity$CreatingDelegateLike, 
        filteredFields?: { 
            purpose: string
    }) : isActivity {
        if (filteredFields) {
            const seedTxOutputId = this.getSeed(seedOrUf as hasSeed);
            const uplc = this.mkUplcData({
                CreatingDelegate: { seed: seedTxOutputId, ...filteredFields } 
            }, "CapoDelegateHelpers::CapoLifecycleActivity.CreatingDelegate");
           return uplc;
        } else {
            const fields = seedOrUf as CapoLifecycleActivity$CreatingDelegateLike; 
           const uplc = this.mkUplcData({
                CreatingDelegate: fields 
            }, "CapoDelegateHelpers::CapoLifecycleActivity.CreatingDelegate");
           return uplc;
        }
    } /*multiFieldVariant/seeded enum accessor*/ 

}


/**
 * Helper class for generating UplcData for variants of the ***DelegateLifecycleActivity*** enum type.
 */
export class DelegateLifecycleActivityHelperNested extends EnumBridge<isActivity> {
    protected __cast = new Cast<
       DelegateLifecycleActivity,
       DelegateLifecycleActivityLike
   >(DelegateLifecycleActivitySchema, { isMainnet: true });

    /**
     * generates isActivity/redeemer wrapper with UplcData for ***"CapoDelegateHelpers::DelegateLifecycleActivity.ReplacingMe"***, 
     * given a transaction-context ***with a seed utxo*** and other field details
     * @remarks
     * See the `tcxWithSeedUtxo()` method in your contract's off-chain StellarContracts subclass 
     * to create a context satisfying `hasSeed`.
     */
    ReplacingMe(value: hasSeed, fields: { 
        purpose: string 
    } ) : isActivity
    /**
     * generates isActivity/redeemer wrapper with UplcData for ***"CapoDelegateHelpers::DelegateLifecycleActivity.ReplacingMe"*** 
     * with raw seed details included in fields.
     */
    ReplacingMe(fields: DelegateLifecycleActivity$ReplacingMeLike | {
            seed: TxOutputId | string,
            purpose: string
    } ): isActivity
    ReplacingMe(
        seedOrUf: hasSeed | DelegateLifecycleActivity$ReplacingMeLike, 
        filteredFields?: { 
            purpose: string
    }) : isActivity {
        if (filteredFields) {
            const seedTxOutputId = this.getSeed(seedOrUf as hasSeed);
            const uplc = this.mkUplcData({
                ReplacingMe: { seed: seedTxOutputId, ...filteredFields } 
            }, "CapoDelegateHelpers::DelegateLifecycleActivity.ReplacingMe");
           return uplc;
        } else {
            const fields = seedOrUf as DelegateLifecycleActivity$ReplacingMeLike; 
           const uplc = this.mkUplcData({
                ReplacingMe: fields 
            }, "CapoDelegateHelpers::DelegateLifecycleActivity.ReplacingMe");
           return uplc;
        }
    } /*multiFieldVariant/seeded enum accessor*/ 


/**
 * (property getter): UplcData for ***"CapoDelegateHelpers::DelegateLifecycleActivity.Retiring"***
 * @remarks - ***tagOnly*** variant accessor returns an empty ***constrData#1***
 */
    get Retiring() {
        const uplc = this.mkUplcData({ Retiring: {} }, 
            "CapoDelegateHelpers::DelegateLifecycleActivity.Retiring");
       return uplc;
    } /* tagOnly variant accessor */

/**
 * (property getter): UplcData for ***"CapoDelegateHelpers::DelegateLifecycleActivity.ValidatingSettings"***
 * @remarks - ***tagOnly*** variant accessor returns an empty ***constrData#2***
 */
    get ValidatingSettings() {
        const uplc = this.mkUplcData({ ValidatingSettings: {} }, 
            "CapoDelegateHelpers::DelegateLifecycleActivity.ValidatingSettings");
       return uplc;
    } /* tagOnly variant accessor */
}


/**
 * Helper class for generating UplcData for variants of the ***SpendingActivity*** enum type.
 */
export class SpendingActivityHelperNested extends EnumBridge<isActivity> {
    protected __cast = new Cast<
       SpendingActivity,
       SpendingActivityLike
   >(SpendingActivitySchema, { isMainnet: true });

    /**
     * generates isActivity/redeemer wrapper with UplcData for ***"unspecializedDelegate::SpendingActivity._placeholder1SA"***
     */
    _placeholder1SA(
        recId: number[]
    ) : isActivity {
        const uplc = this.mkUplcData({ 
           _placeholder1SA: { recId: recId } 
        }, "unspecializedDelegate::SpendingActivity._placeholder1SA"); /*SingleField enum variant*/
       return uplc;
    }
}


/**
 * Helper class for generating UplcData for variants of the ***MintingActivity*** enum type.
 */
export class MintingActivityHelperNested extends EnumBridge<isActivity> {
    protected __cast = new Cast<
       MintingActivity,
       MintingActivityLike
   >(MintingActivitySchema, { isMainnet: true });

    /**
    * generates isActivity/redeemer wrapper with UplcData for ***"unspecializedDelegate::MintingActivity._placeholder1MA"***, 
    * given a transaction-context with a ***seed utxo*** and other field details
    * @remarks - to get a transaction context having the seed needed for this argment, 
    * see the `tcxWithSeedUtxo()` method in your contract's off-chain StellarContracts subclass.    */
    _placeholder1MA(value: hasSeed | TxOutputId | string) : isActivity {
        const seedTxOutputId = "string" == typeof value ? value : this.getSeed(value);
        const uplc = this.mkUplcData({ 
           _placeholder1MA: { seed: seedTxOutputId } 
        },"unspecializedDelegate::MintingActivity._placeholder1MA");  /*SingleField/seeded enum variant*/
       return uplc;
    }
}


/**
 * Helper class for generating UplcData for variants of the ***BurningActivity*** enum type.
 */
export class BurningActivityHelperNested extends EnumBridge<isActivity> {
    protected __cast = new Cast<
       BurningActivity,
       BurningActivityLike
   >(BurningActivitySchema, { isMainnet: true });

    /**
     * generates isActivity/redeemer wrapper with UplcData for ***"unspecializedDelegate::BurningActivity._placeholder1BA"***
     */
    _placeholder1BA(
        recId: number[]
    ) : isActivity {
        const uplc = this.mkUplcData({ 
           _placeholder1BA: { recId: recId } 
        }, "unspecializedDelegate::BurningActivity._placeholder1BA"); /*SingleField enum variant*/
       return uplc;
    }
}


/**
 * Helper class for generating UplcData for variants of the ***DelegateActivity*** enum type.
 */
export class DelegateActivityHelper extends EnumBridge<isActivity> {
    protected __cast = new Cast<
       DelegateActivity,
       DelegateActivityLike
   >(DelegateActivitySchema, { isMainnet: true });

    /**
     * access to different variants of the ***nested CapoLifecycleActivity*** type needed for ***DelegateActivity:CapoLifecycleActivities***.
     */
    get CapoLifecycleActivities() {
        const nestedAccessor = new CapoLifecycleActivityHelperNested(this.bundle,
            {isNested: true, isActivity: true 
        });
        //@ts-expect-error drilling through the protected accessor.  See more comments about that above
        nestedAccessor.mkDataVia((nested: CapoLifecycleActivityLike) => {
           return  this.mkUplcData({ CapoLifecycleActivities: { activity: nested } }, 
            "unspecializedDelegate::DelegateActivity.CapoLifecycleActivities");
        });
        return nestedAccessor;
    } /* nested enum accessor */

    /**
     * access to different variants of the ***nested DelegateLifecycleActivity*** type needed for ***DelegateActivity:DelegateLifecycleActivities***.
     */
    get DelegateLifecycleActivities() {
        const nestedAccessor = new DelegateLifecycleActivityHelperNested(this.bundle,
            {isNested: true, isActivity: true 
        });
        //@ts-expect-error drilling through the protected accessor.  See more comments about that above
        nestedAccessor.mkDataVia((nested: DelegateLifecycleActivityLike) => {
           return  this.mkUplcData({ DelegateLifecycleActivities: { activity: nested } }, 
            "unspecializedDelegate::DelegateActivity.DelegateLifecycleActivities");
        });
        return nestedAccessor;
    } /* nested enum accessor */

    /**
     * access to different variants of the ***nested SpendingActivity*** type needed for ***DelegateActivity:SpendingActivities***.
     */
    get SpendingActivities() {
        const nestedAccessor = new SpendingActivityHelperNested(this.bundle,
            {isNested: true, isActivity: true 
        });
        //@ts-expect-error drilling through the protected accessor.  See more comments about that above
        nestedAccessor.mkDataVia((nested: SpendingActivityLike) => {
           return  this.mkUplcData({ SpendingActivities: { activity: nested } }, 
            "unspecializedDelegate::DelegateActivity.SpendingActivities");
        });
        return nestedAccessor;
    } /* nested enum accessor */

    /**
     * access to different variants of the ***nested MintingActivity*** type needed for ***DelegateActivity:MintingActivities***.
     */
    get MintingActivities() {
        const nestedAccessor = new MintingActivityHelperNested(this.bundle,
            {isNested: true, isActivity: true 
        });
        //@ts-expect-error drilling through the protected accessor.  See more comments about that above
        nestedAccessor.mkDataVia((nested: MintingActivityLike) => {
           return  this.mkUplcData({ MintingActivities: { activity: nested } }, 
            "unspecializedDelegate::DelegateActivity.MintingActivities");
        });
        return nestedAccessor;
    } /* nested enum accessor */

    /**
     * access to different variants of the ***nested BurningActivity*** type needed for ***DelegateActivity:BurningActivities***.
     */
    get BurningActivities() {
        const nestedAccessor = new BurningActivityHelperNested(this.bundle,
            {isNested: true, isActivity: true 
        });
        //@ts-expect-error drilling through the protected accessor.  See more comments about that above
        nestedAccessor.mkDataVia((nested: BurningActivityLike) => {
           return  this.mkUplcData({ BurningActivities: { activity: nested } }, 
            "unspecializedDelegate::DelegateActivity.BurningActivities");
        });
        return nestedAccessor;
    } /* nested enum accessor */

    /**
     * generates isActivity/redeemer wrapper with UplcData for ***"unspecializedDelegate::DelegateActivity.CreatingDelegatedData"***, 
     * given a transaction-context ***with a seed utxo*** and other field details
     * @remarks
     * See the `tcxWithSeedUtxo()` method in your contract's off-chain StellarContracts subclass 
     * to create a context satisfying `hasSeed`.
     */
    CreatingDelegatedData(value: hasSeed, fields: { 
        dataType: string 
    } ) : isActivity
    /**
     * generates isActivity/redeemer wrapper with UplcData for ***"unspecializedDelegate::DelegateActivity.CreatingDelegatedData"*** 
     * with raw seed details included in fields.
     */
    CreatingDelegatedData(fields: DelegateActivity$CreatingDelegatedDataLike | {
            seed: TxOutputId | string,
            dataType: string
    } ): isActivity
    CreatingDelegatedData(
        seedOrUf: hasSeed | DelegateActivity$CreatingDelegatedDataLike, 
        filteredFields?: { 
            dataType: string
    }) : isActivity {
        if (filteredFields) {
            const seedTxOutputId = this.getSeed(seedOrUf as hasSeed);
            const uplc = this.mkUplcData({
                CreatingDelegatedData: { seed: seedTxOutputId, ...filteredFields } 
            }, "unspecializedDelegate::DelegateActivity.CreatingDelegatedData");
           return uplc;
        } else {
            const fields = seedOrUf as DelegateActivity$CreatingDelegatedDataLike; 
           const uplc = this.mkUplcData({
                CreatingDelegatedData: fields 
            }, "unspecializedDelegate::DelegateActivity.CreatingDelegatedData");
           return uplc;
        }
    } /*multiFieldVariant/seeded enum accessor*/ 


    /**
     * generates isActivity/redeemer wrapper with UplcData for ***"unspecializedDelegate::DelegateActivity.UpdatingDelegatedData"***
     * @remarks - ***DelegateActivity$UpdatingDelegatedDataLike*** is the same as the expanded field-types.
     */
    UpdatingDelegatedData(fields: DelegateActivity$UpdatingDelegatedDataLike | { 
        dataType: string,
        recId: number[] } ) : isActivity {
        const uplc = this.mkUplcData({
            UpdatingDelegatedData: fields 
        }, "unspecializedDelegate::DelegateActivity.UpdatingDelegatedData");
       return uplc;
    } /*multiFieldVariant enum accessor*/

    /**
     * generates isActivity/redeemer wrapper with UplcData for ***"unspecializedDelegate::DelegateActivity.DeletingDelegatedData"***
     * @remarks - ***DelegateActivity$DeletingDelegatedDataLike*** is the same as the expanded field-types.
     */
    DeletingDelegatedData(fields: DelegateActivity$DeletingDelegatedDataLike | { 
        dataType: string,
        recId: number[] } ) : isActivity {
        const uplc = this.mkUplcData({
            DeletingDelegatedData: fields 
        }, "unspecializedDelegate::DelegateActivity.DeletingDelegatedData");
       return uplc;
    } /*multiFieldVariant enum accessor*/

    /**
     * generates isActivity/redeemer wrapper with UplcData for ***"unspecializedDelegate::DelegateActivity.MultipleDelegateActivities"***
     */
    MultipleDelegateActivities(
        activities: Array<UplcData>
    ) : isActivity {
        const uplc = this.mkUplcData({ 
           MultipleDelegateActivities: { activities: activities } 
        }, "unspecializedDelegate::DelegateActivity.MultipleDelegateActivities"); /*SingleField enum variant*/
       return uplc;
    }
}


export const AnyDataSchema : StructTypeSchema = {
    "kind": "struct",
    "format": "map",
    "id": "__module__StellarHeliosHelpers__AnyData[]",
    "name": "AnyData",
    "fieldTypes": [
        {
            "name": "id",
            "type": {
                "kind": "internal",
                "name": "ByteArray"
            },
            "key": "@id"
        },
        {
            "name": "type",
            "type": {
                "kind": "internal",
                "name": "String"
            },
            "key": "tpe"
        }
    ]
};

export const DelegationDetailSchema : StructTypeSchema = {
    "kind": "struct",
    "format": "list",
    "id": "__module__CapoDelegateHelpers__DelegationDetail[]",
    "name": "DelegationDetail",
    "fieldTypes": [
        {
            "name": "capoAddr",
            "type": {
                "kind": "internal",
                "name": "Address"
            }
        },
        {
            "name": "mph",
            "type": {
                "kind": "internal",
                "name": "MintingPolicyHash"
            }
        },
        {
            "name": "tn",
            "type": {
                "kind": "internal",
                "name": "ByteArray"
            }
        }
    ]
};

export const DelegateDatumSchema : EnumTypeSchema = {
    "kind": "enum",
    "name": "DelegateDatum",
    "id": "__module__unspecializedDelegate__DelegateDatum[]",
    "variantTypes": [
        {
            "kind": "variant",
            "tag": 0,
            "id": "__module__unspecializedDelegate__DelegateDatum[]__Cip68RefToken",
            "name": "Cip68RefToken",
            "fieldTypes": [
                {
                    "name": "cip68meta",
                    "type": {
                        "kind": "struct",
                        "format": "map",
                        "id": "__module__StellarHeliosHelpers__AnyData[]",
                        "name": "AnyData",
                        "fieldTypes": [
                            {
                                "name": "id",
                                "type": {
                                    "kind": "internal",
                                    "name": "ByteArray"
                                },
                                "key": "@id"
                            },
                            {
                                "name": "type",
                                "type": {
                                    "kind": "internal",
                                    "name": "String"
                                },
                                "key": "tpe"
                            }
                        ]
                    }
                },
                {
                    "name": "cip68version",
                    "type": {
                        "kind": "internal",
                        "name": "Int"
                    }
                },
                {
                    "name": "dd",
                    "type": {
                        "kind": "option",
                        "someType": {
                            "kind": "struct",
                            "format": "list",
                            "id": "__module__CapoDelegateHelpers__DelegationDetail[]",
                            "name": "DelegationDetail",
                            "fieldTypes": [
                                {
                                    "name": "capoAddr",
                                    "type": {
                                        "kind": "internal",
                                        "name": "Address"
                                    }
                                },
                                {
                                    "name": "mph",
                                    "type": {
                                        "kind": "internal",
                                        "name": "MintingPolicyHash"
                                    }
                                },
                                {
                                    "name": "tn",
                                    "type": {
                                        "kind": "internal",
                                        "name": "ByteArray"
                                    }
                                }
                            ]
                        }
                    }
                }
            ]
        },
        {
            "kind": "variant",
            "tag": 1,
            "id": "__module__unspecializedDelegate__DelegateDatum[]__IsDelegation",
            "name": "IsDelegation",
            "fieldTypes": [
                {
                    "name": "dd",
                    "type": {
                        "kind": "struct",
                        "format": "list",
                        "id": "__module__CapoDelegateHelpers__DelegationDetail[]",
                        "name": "DelegationDetail",
                        "fieldTypes": [
                            {
                                "name": "capoAddr",
                                "type": {
                                    "kind": "internal",
                                    "name": "Address"
                                }
                            },
                            {
                                "name": "mph",
                                "type": {
                                    "kind": "internal",
                                    "name": "MintingPolicyHash"
                                }
                            },
                            {
                                "name": "tn",
                                "type": {
                                    "kind": "internal",
                                    "name": "ByteArray"
                                }
                            }
                        ]
                    }
                }
            ]
        },
        {
            "kind": "variant",
            "tag": 2,
            "id": "__module__unspecializedDelegate__DelegateDatum[]__ScriptReference",
            "name": "ScriptReference",
            "fieldTypes": []
        }
    ]
};

export const CapoLifecycleActivitySchema : EnumTypeSchema = {
    "kind": "enum",
    "name": "CapoLifecycleActivity",
    "id": "__module__CapoDelegateHelpers__CapoLifecycleActivity[]",
    "variantTypes": [
        {
            "kind": "variant",
            "tag": 0,
            "id": "__module__CapoDelegateHelpers__CapoLifecycleActivity[]__CreatingDelegate",
            "name": "CreatingDelegate",
            "fieldTypes": [
                {
                    "name": "seed",
                    "type": {
                        "kind": "internal",
                        "name": "TxOutputId"
                    }
                },
                {
                    "name": "purpose",
                    "type": {
                        "kind": "internal",
                        "name": "String"
                    }
                }
            ]
        }
    ]
};

export const DelegateLifecycleActivitySchema : EnumTypeSchema = {
    "kind": "enum",
    "name": "DelegateLifecycleActivity",
    "id": "__module__CapoDelegateHelpers__DelegateLifecycleActivity[]",
    "variantTypes": [
        {
            "kind": "variant",
            "tag": 0,
            "id": "__module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ReplacingMe",
            "name": "ReplacingMe",
            "fieldTypes": [
                {
                    "name": "seed",
                    "type": {
                        "kind": "internal",
                        "name": "TxOutputId"
                    }
                },
                {
                    "name": "purpose",
                    "type": {
                        "kind": "internal",
                        "name": "String"
                    }
                }
            ]
        },
        {
            "kind": "variant",
            "tag": 1,
            "id": "__module__CapoDelegateHelpers__DelegateLifecycleActivity[]__Retiring",
            "name": "Retiring",
            "fieldTypes": []
        },
        {
            "kind": "variant",
            "tag": 2,
            "id": "__module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ValidatingSettings",
            "name": "ValidatingSettings",
            "fieldTypes": []
        }
    ]
};

export const SpendingActivitySchema : EnumTypeSchema = {
    "kind": "enum",
    "name": "SpendingActivity",
    "id": "__module__unspecializedDelegate__SpendingActivity[]",
    "variantTypes": [
        {
            "kind": "variant",
            "tag": 0,
            "id": "__module__unspecializedDelegate__SpendingActivity[]___placeholder1SA",
            "name": "_placeholder1SA",
            "fieldTypes": [
                {
                    "name": "recId",
                    "type": {
                        "kind": "internal",
                        "name": "ByteArray"
                    }
                }
            ]
        }
    ]
};

export const MintingActivitySchema : EnumTypeSchema = {
    "kind": "enum",
    "name": "MintingActivity",
    "id": "__module__unspecializedDelegate__MintingActivity[]",
    "variantTypes": [
        {
            "kind": "variant",
            "tag": 0,
            "id": "__module__unspecializedDelegate__MintingActivity[]___placeholder1MA",
            "name": "_placeholder1MA",
            "fieldTypes": [
                {
                    "name": "seed",
                    "type": {
                        "kind": "internal",
                        "name": "TxOutputId"
                    }
                }
            ]
        }
    ]
};

export const BurningActivitySchema : EnumTypeSchema = {
    "kind": "enum",
    "name": "BurningActivity",
    "id": "__module__unspecializedDelegate__BurningActivity[]",
    "variantTypes": [
        {
            "kind": "variant",
            "tag": 0,
            "id": "__module__unspecializedDelegate__BurningActivity[]___placeholder1BA",
            "name": "_placeholder1BA",
            "fieldTypes": [
                {
                    "name": "recId",
                    "type": {
                        "kind": "internal",
                        "name": "ByteArray"
                    }
                }
            ]
        }
    ]
};

export const DelegateActivitySchema : EnumTypeSchema = {
    "kind": "enum",
    "name": "DelegateActivity",
    "id": "__module__unspecializedDelegate__DelegateActivity[]",
    "variantTypes": [
        {
            "kind": "variant",
            "tag": 0,
            "id": "__module__unspecializedDelegate__DelegateActivity[]__CapoLifecycleActivities",
            "name": "CapoLifecycleActivities",
            "fieldTypes": [
                {
                    "name": "activity",
                    "type": {
                        "kind": "enum",
                        "name": "CapoLifecycleActivity",
                        "id": "__module__CapoDelegateHelpers__CapoLifecycleActivity[]",
                        "variantTypes": [
                            {
                                "kind": "variant",
                                "tag": 0,
                                "id": "__module__CapoDelegateHelpers__CapoLifecycleActivity[]__CreatingDelegate",
                                "name": "CreatingDelegate",
                                "fieldTypes": [
                                    {
                                        "name": "seed",
                                        "type": {
                                            "kind": "internal",
                                            "name": "TxOutputId"
                                        }
                                    },
                                    {
                                        "name": "purpose",
                                        "type": {
                                            "kind": "internal",
                                            "name": "String"
                                        }
                                    }
                                ]
                            }
                        ]
                    }
                }
            ]
        },
        {
            "kind": "variant",
            "tag": 1,
            "id": "__module__unspecializedDelegate__DelegateActivity[]__DelegateLifecycleActivities",
            "name": "DelegateLifecycleActivities",
            "fieldTypes": [
                {
                    "name": "activity",
                    "type": {
                        "kind": "enum",
                        "name": "DelegateLifecycleActivity",
                        "id": "__module__CapoDelegateHelpers__DelegateLifecycleActivity[]",
                        "variantTypes": [
                            {
                                "kind": "variant",
                                "tag": 0,
                                "id": "__module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ReplacingMe",
                                "name": "ReplacingMe",
                                "fieldTypes": [
                                    {
                                        "name": "seed",
                                        "type": {
                                            "kind": "internal",
                                            "name": "TxOutputId"
                                        }
                                    },
                                    {
                                        "name": "purpose",
                                        "type": {
                                            "kind": "internal",
                                            "name": "String"
                                        }
                                    }
                                ]
                            },
                            {
                                "kind": "variant",
                                "tag": 1,
                                "id": "__module__CapoDelegateHelpers__DelegateLifecycleActivity[]__Retiring",
                                "name": "Retiring",
                                "fieldTypes": []
                            },
                            {
                                "kind": "variant",
                                "tag": 2,
                                "id": "__module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ValidatingSettings",
                                "name": "ValidatingSettings",
                                "fieldTypes": []
                            }
                        ]
                    }
                }
            ]
        },
        {
            "kind": "variant",
            "tag": 2,
            "id": "__module__unspecializedDelegate__DelegateActivity[]__SpendingActivities",
            "name": "SpendingActivities",
            "fieldTypes": [
                {
                    "name": "activity",
                    "type": {
                        "kind": "enum",
                        "name": "SpendingActivity",
                        "id": "__module__unspecializedDelegate__SpendingActivity[]",
                        "variantTypes": [
                            {
                                "kind": "variant",
                                "tag": 0,
                                "id": "__module__unspecializedDelegate__SpendingActivity[]___placeholder1SA",
                                "name": "_placeholder1SA",
                                "fieldTypes": [
                                    {
                                        "name": "recId",
                                        "type": {
                                            "kind": "internal",
                                            "name": "ByteArray"
                                        }
                                    }
                                ]
                            }
                        ]
                    }
                }
            ]
        },
        {
            "kind": "variant",
            "tag": 3,
            "id": "__module__unspecializedDelegate__DelegateActivity[]__MintingActivities",
            "name": "MintingActivities",
            "fieldTypes": [
                {
                    "name": "activity",
                    "type": {
                        "kind": "enum",
                        "name": "MintingActivity",
                        "id": "__module__unspecializedDelegate__MintingActivity[]",
                        "variantTypes": [
                            {
                                "kind": "variant",
                                "tag": 0,
                                "id": "__module__unspecializedDelegate__MintingActivity[]___placeholder1MA",
                                "name": "_placeholder1MA",
                                "fieldTypes": [
                                    {
                                        "name": "seed",
                                        "type": {
                                            "kind": "internal",
                                            "name": "TxOutputId"
                                        }
                                    }
                                ]
                            }
                        ]
                    }
                }
            ]
        },
        {
            "kind": "variant",
            "tag": 4,
            "id": "__module__unspecializedDelegate__DelegateActivity[]__BurningActivities",
            "name": "BurningActivities",
            "fieldTypes": [
                {
                    "name": "activity",
                    "type": {
                        "kind": "enum",
                        "name": "BurningActivity",
                        "id": "__module__unspecializedDelegate__BurningActivity[]",
                        "variantTypes": [
                            {
                                "kind": "variant",
                                "tag": 0,
                                "id": "__module__unspecializedDelegate__BurningActivity[]___placeholder1BA",
                                "name": "_placeholder1BA",
                                "fieldTypes": [
                                    {
                                        "name": "recId",
                                        "type": {
                                            "kind": "internal",
                                            "name": "ByteArray"
                                        }
                                    }
                                ]
                            }
                        ]
                    }
                }
            ]
        },
        {
            "kind": "variant",
            "tag": 5,
            "id": "__module__unspecializedDelegate__DelegateActivity[]__CreatingDelegatedData",
            "name": "CreatingDelegatedData",
            "fieldTypes": [
                {
                    "name": "seed",
                    "type": {
                        "kind": "internal",
                        "name": "TxOutputId"
                    }
                },
                {
                    "name": "dataType",
                    "type": {
                        "kind": "internal",
                        "name": "String"
                    }
                }
            ]
        },
        {
            "kind": "variant",
            "tag": 6,
            "id": "__module__unspecializedDelegate__DelegateActivity[]__UpdatingDelegatedData",
            "name": "UpdatingDelegatedData",
            "fieldTypes": [
                {
                    "name": "dataType",
                    "type": {
                        "kind": "internal",
                        "name": "String"
                    }
                },
                {
                    "name": "recId",
                    "type": {
                        "kind": "internal",
                        "name": "ByteArray"
                    }
                }
            ]
        },
        {
            "kind": "variant",
            "tag": 7,
            "id": "__module__unspecializedDelegate__DelegateActivity[]__DeletingDelegatedData",
            "name": "DeletingDelegatedData",
            "fieldTypes": [
                {
                    "name": "dataType",
                    "type": {
                        "kind": "internal",
                        "name": "String"
                    }
                },
                {
                    "name": "recId",
                    "type": {
                        "kind": "internal",
                        "name": "ByteArray"
                    }
                }
            ]
        },
        {
            "kind": "variant",
            "tag": 8,
            "id": "__module__unspecializedDelegate__DelegateActivity[]__MultipleDelegateActivities",
            "name": "MultipleDelegateActivities",
            "fieldTypes": [
                {
                    "name": "activities",
                    "type": {
                        "kind": "list",
                        "itemType": {
                            "kind": "internal",
                            "name": "Data"
                        }
                    }
                }
            ]
        }
    ]
};
// }
