// generated by StellarHeliosProject using Stellar heliosRollupTypeGen()
        
import type { UplcData } from "@helios-lang/uplc";
import {
    Address,
    AssetClass,
    DatumHash,
    MintingPolicyHash,
    PubKey,
    PubKeyHash,
    ScriptHash,
    SpendingCredential,
    StakingCredential,
    StakingHash,
    StakingValidatorHash,
    TimeRange,
    TxId,
    TxInput,
    TxOutput,
    TxOutputId,
    TxOutputDatum,
    ValidatorHash,
    Value,
} from "@helios-lang/ledger";
import { Cast } from "@helios-lang/contract-utils";

import type {CapoBundle} from "src/CapoHeliosBundle.ts"   // todo import  from @stellar-contracts
import type {CapoDelegateBundle} from "src/delegation/CapoDelegateBundle.ts"   // todo import  from @stellar-contracts
import {
    HeliosScriptBundle,
    mkEnum,
    type EnumType,
    type EnumVariant,
} from "src/helios/HeliosScriptBundle.ts" // todo import from @stellar-contracts

export type AnyData = {
    id: number[]
    type: string
};

export type AnyDataLike = {
    id: number[]
    type: string
};


export type DelegationDetail = {
    capoAddr: Address
    mph: MintingPolicyHash
    tn: number[]
};

export type DelegationDetailLike = {
    capoAddr: Address | string
    mph: MintingPolicyHash | string | number[]
    tn: number[]
};


export type DelegateDatum = EnumType<{module: "unspecializedDelegate", enumName: "DelegateDatum"}, {
        Cip68RefToken: EnumVariant<{module: "unspecializedDelegate", enumName: "DelegateDatum"},
            "Constr#0", 
            "fields", {
                cip68meta: AnyData,
                cip68version: bigint,
                dd: Option<DelegationDetail>
            }
        >,
        IsDelegation: EnumVariant<{module: "unspecializedDelegate", enumName: "DelegateDatum"},
            "Constr#1", "singletonField", 
            DelegationDetail
        >,
        ScriptReference: EnumVariant<{module: "unspecializedDelegate", enumName: "DelegateDatum"},
            "Constr#2", "tagOnly", never
        >
    }
>;

export type DelegateDatumLike = EnumType<{module: "unspecializedDelegate", enumName: "DelegateDatumLike"}, {
        Cip68RefToken: EnumVariant<{module: "unspecializedDelegate", enumName: "DelegateDatumLike"},
            "Constr#0", 
            "fields", {
                cip68meta: AnyDataLike,
                cip68version: IntLike,
                dd: Option<DelegationDetailLike>
            }
        >,
        IsDelegation: EnumVariant<{module: "unspecializedDelegate", enumName: "DelegateDatumLike"},
            "Constr#1", "singletonField", 
            DelegationDetailLike
        >,
        ScriptReference: EnumVariant<{module: "unspecializedDelegate", enumName: "DelegateDatumLike"},
            "Constr#2", "tagOnly", never
        >
    }
>;


export type CapoLifecycleActivity = EnumType<{module: "CapoDelegateHelpers", enumName: "CapoLifecycleActivity"}, {
        CreatingDelegate: EnumVariant<{module: "CapoDelegateHelpers", enumName: "CapoLifecycleActivity"},
            "Constr#0", 
            "fields", {
                seed: TxOutputId,
                purpose: string
            }
        >
    }
>;

export type CapoLifecycleActivityLike = EnumType<{module: "CapoDelegateHelpers", enumName: "CapoLifecycleActivityLike"}, {
        CreatingDelegate: EnumVariant<{module: "CapoDelegateHelpers", enumName: "CapoLifecycleActivityLike"},
            "Constr#0", 
            "fields", {
                seed: TxOutputId | string,
                purpose: string
            }
        >
    }
>;


export type DelegateLifecycleActivity = EnumType<{module: "CapoDelegateHelpers", enumName: "DelegateLifecycleActivity"}, {
        ReplacingMe: EnumVariant<{module: "CapoDelegateHelpers", enumName: "DelegateLifecycleActivity"},
            "Constr#0", 
            "fields", {
                seed: TxOutputId,
                purpose: string
            }
        >,
        Retiring: EnumVariant<{module: "CapoDelegateHelpers", enumName: "DelegateLifecycleActivity"},
            "Constr#1", "tagOnly", never
        >,
        ValidatingSettings: EnumVariant<{module: "CapoDelegateHelpers", enumName: "DelegateLifecycleActivity"},
            "Constr#2", "tagOnly", never
        >
    }
>;

export type DelegateLifecycleActivityLike = EnumType<{module: "CapoDelegateHelpers", enumName: "DelegateLifecycleActivityLike"}, {
        ReplacingMe: EnumVariant<{module: "CapoDelegateHelpers", enumName: "DelegateLifecycleActivityLike"},
            "Constr#0", 
            "fields", {
                seed: TxOutputId | string,
                purpose: string
            }
        >,
        Retiring: EnumVariant<{module: "CapoDelegateHelpers", enumName: "DelegateLifecycleActivityLike"},
            "Constr#1", "tagOnly", never
        >,
        ValidatingSettings: EnumVariant<{module: "CapoDelegateHelpers", enumName: "DelegateLifecycleActivityLike"},
            "Constr#2", "tagOnly", never
        >
    }
>;


export type SpendingActivity = EnumType<{module: "unspecializedDelegate", enumName: "SpendingActivity"}, {
        _placeholder1SA: EnumVariant<{module: "unspecializedDelegate", enumName: "SpendingActivity"},
            "Constr#0", "singletonField", 
            number[]
        >
    }
>;

export type SpendingActivityLike = EnumType<{module: "unspecializedDelegate", enumName: "SpendingActivityLike"}, {
        _placeholder1SA: EnumVariant<{module: "unspecializedDelegate", enumName: "SpendingActivityLike"},
            "Constr#0", "singletonField", 
            number[]
        >
    }
>;


export type MintingActivity = EnumType<{module: "unspecializedDelegate", enumName: "MintingActivity"}, {
        _placeholder1MA: EnumVariant<{module: "unspecializedDelegate", enumName: "MintingActivity"},
            "Constr#0", "singletonField", 
            TxOutputId
        >
    }
>;

export type MintingActivityLike = EnumType<{module: "unspecializedDelegate", enumName: "MintingActivityLike"}, {
        _placeholder1MA: EnumVariant<{module: "unspecializedDelegate", enumName: "MintingActivityLike"},
            "Constr#0", "singletonField", 
            TxOutputId | string
        >
    }
>;


export type BurningActivity = EnumType<{module: "unspecializedDelegate", enumName: "BurningActivity"}, {
        _placeholder1BA: EnumVariant<{module: "unspecializedDelegate", enumName: "BurningActivity"},
            "Constr#0", "singletonField", 
            number[]
        >
    }
>;

export type BurningActivityLike = EnumType<{module: "unspecializedDelegate", enumName: "BurningActivityLike"}, {
        _placeholder1BA: EnumVariant<{module: "unspecializedDelegate", enumName: "BurningActivityLike"},
            "Constr#0", "singletonField", 
            number[]
        >
    }
>;


export type DelegateActivity = EnumType<{module: "unspecializedDelegate", enumName: "DelegateActivity"}, {
        CapoLifecycleActivities: EnumVariant<{module: "unspecializedDelegate", enumName: "DelegateActivity"},
            "Constr#0", "singletonField", 
            CapoLifecycleActivity
        >,
        DelegateLifecycleActivities: EnumVariant<{module: "unspecializedDelegate", enumName: "DelegateActivity"},
            "Constr#1", "singletonField", 
            DelegateLifecycleActivity
        >,
        SpendingActivities: EnumVariant<{module: "unspecializedDelegate", enumName: "DelegateActivity"},
            "Constr#2", "singletonField", 
            SpendingActivity
        >,
        MintingActivities: EnumVariant<{module: "unspecializedDelegate", enumName: "DelegateActivity"},
            "Constr#3", "singletonField", 
            MintingActivity
        >,
        BurningActivities: EnumVariant<{module: "unspecializedDelegate", enumName: "DelegateActivity"},
            "Constr#4", "singletonField", 
            BurningActivity
        >,
        CreatingDelegatedData: EnumVariant<{module: "unspecializedDelegate", enumName: "DelegateActivity"},
            "Constr#5", 
            "fields", {
                seed: TxOutputId,
                dataType: string
            }
        >,
        UpdatingDelegatedData: EnumVariant<{module: "unspecializedDelegate", enumName: "DelegateActivity"},
            "Constr#6", 
            "fields", {
                dataType: string,
                recId: number[]
            }
        >,
        DeletingDelegatedData: EnumVariant<{module: "unspecializedDelegate", enumName: "DelegateActivity"},
            "Constr#7", 
            "fields", {
                dataType: string,
                recId: number[]
            }
        >,
        MultipleDelegateActivities: EnumVariant<{module: "unspecializedDelegate", enumName: "DelegateActivity"},
            "Constr#8", "singletonField", 
            Array<UplcData>
        >
    }
>;

export type DelegateActivityLike = EnumType<{module: "unspecializedDelegate", enumName: "DelegateActivityLike"}, {
        CapoLifecycleActivities: EnumVariant<{module: "unspecializedDelegate", enumName: "DelegateActivityLike"},
            "Constr#0", "singletonField", 
            CapoLifecycleActivityLike
        >,
        DelegateLifecycleActivities: EnumVariant<{module: "unspecializedDelegate", enumName: "DelegateActivityLike"},
            "Constr#1", "singletonField", 
            DelegateLifecycleActivityLike
        >,
        SpendingActivities: EnumVariant<{module: "unspecializedDelegate", enumName: "DelegateActivityLike"},
            "Constr#2", "singletonField", 
            SpendingActivityLike
        >,
        MintingActivities: EnumVariant<{module: "unspecializedDelegate", enumName: "DelegateActivityLike"},
            "Constr#3", "singletonField", 
            MintingActivityLike
        >,
        BurningActivities: EnumVariant<{module: "unspecializedDelegate", enumName: "DelegateActivityLike"},
            "Constr#4", "singletonField", 
            BurningActivityLike
        >,
        CreatingDelegatedData: EnumVariant<{module: "unspecializedDelegate", enumName: "DelegateActivityLike"},
            "Constr#5", 
            "fields", {
                seed: TxOutputId | string,
                dataType: string
            }
        >,
        UpdatingDelegatedData: EnumVariant<{module: "unspecializedDelegate", enumName: "DelegateActivityLike"},
            "Constr#6", 
            "fields", {
                dataType: string,
                recId: number[]
            }
        >,
        DeletingDelegatedData: EnumVariant<{module: "unspecializedDelegate", enumName: "DelegateActivityLike"},
            "Constr#7", 
            "fields", {
                dataType: string,
                recId: number[]
            }
        >,
        MultipleDelegateActivities: EnumVariant<{module: "unspecializedDelegate", enumName: "DelegateActivityLike"},
            "Constr#8", "singletonField", 
            Array<UplcData>
        >
    }
>;



export default 
class UnspecializedDgtBundle 
extends CapoDelegateBundle {
    mkDatum: mkEnum<DelegateDatumLike>;
    readDatum: readEnum<DelegateDatum>;

    Activity: mkEnum<DelegateActivityLike>;

}
