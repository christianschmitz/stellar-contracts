import type CapoBundle from "../Capo.hlbundle.js";
import { mkHeliosModule, type HeliosModuleSrc } from "../helios/HeliosModuleSrc.js";
import { HeliosScriptBundle } from "../helios/HeliosScriptBundle.js";
import BasicDelegate from "./BasicDelegate.hl";
/**
 * for any Capo delegate; combines the BasicDelegate with a
 *  concrete specialization
 **/
export abstract class CapoDelegateBundle extends HeliosScriptBundle {
    abstract get specializedDelegateModule(): HeliosModuleSrc;

    constructor(public capoBundle: CapoBundle) {
        super();
    }

    get main() {
        return BasicDelegate;
    }

    get modules() {
        const specialDgt = this.specializedDelegateModule;
        const delegateWrapper = this.mkDelegateWrapper(specialDgt.moduleName);

        return [
            ...this.capoBundle.modules, 
            delegateWrapper,
            this.specializedDelegateModule
        ];
    }

    mkDelegateWrapper(moduleName) {
        const indent = " ".repeat(8);
        const src = `module specializedDelegate
import {
    DelegateActivity,
    DelegateDatum,
    BurningActivity,
    MintingActivity,
    SpendingActivity
} from ${moduleName}\n`;
        // console.log("mkDelegateWrapper:", new Error( src));
        return mkHeliosModule(src, `generatedSpecializedDelegateModule`, {
            project: "stellar-contracts",
            moreInfo:
                `${indent}- wraps ${moduleName} provided by ${this.constructor.name}\n` +
                `${indent}  (generated by stellar-contracts:src/delegation/ContractBasedDelegate.ts:mkDelegateWrapper())`,
        });
    }

}
