// generated by StellarHeliosProject using Stellar heliosRollupTypeGen()
/// <reference types="@helios-lang/uplc" />
/// <reference types="@helios-lang/ledger" />
/// <reference types="@helios-lang/contract-utils" />
/// <reference types="../delegation/CapoDelegateBundle.ts">;  // development
/// <reference types="./CapoHeliosBundle.ts">
/// <reference types="./HeliosScriptBundle.ts">
/// <reference types="@donecollectively/stellar-contracts" /> // production



/** ------------ BEGIN hlbundle imports --------- */
/** if you want to maintain these in a .ts file, you can use the following imports there */
// import type { UplcData } from "@helios-lang/uplc";
// import type {
//     Address,
//     AssetClass,
//     DatumHash,
//     MintingPolicyHash,
//     PubKey,
//     PubKeyHash,
//     ScriptHash,
//     SpendingCredential,
//     StakingCredential,
//     StakingHash,
//     StakingValidatorHash,
//     TimeRange,
//     TxId,
//     TxInput,
//     TxOutput,
//     TxOutputId,
//     TxOutputDatum,
//     ValidatorHash,
//     Value,
// } from "@helios-lang/ledger";
// import type { Cast } from "@helios-lang/contract-utils";
// import type { 
//     IntLike,
//     ByteArrayLike,
//  } from "@helios-lang/codec-utils";

// import type {CapoHeliosBundle} from "@donecollectively/stellar-contracts"
// import type {CapoDelegateBundle} from "@donecollectively/stellar-contracts"
// import type {
//     HeliosScriptBundle,
//     mkEnum,
//     type EnumType,
//     type singleEnumVariant,
// } from "@donecollectively/stellar-contracts"

/** ------------ BEGIN hlbundle types ------------ */
export type MinterActivity = EnumType<{module: "CapoMintHelpers", enumName: "MinterActivity"}, {
        mintingCharter: singleEnumVariant<MinterActivity, "mintingCharter",
            "Constr#0", "singletonField", 
            Address, "noSpecialFlags"
        >,
        mintWithDelegateAuthorizing: singleEnumVariant<MinterActivity, "mintWithDelegateAuthorizing",
            "Constr#1", "tagOnly", never, "noSpecialFlags"
        >,
        addingMintInvariant: singleEnumVariant<MinterActivity, "addingMintInvariant",
            "Constr#2", "singletonField", 
            TxOutputId, "isSeededActivity"
        >,
        addingSpendInvariant: singleEnumVariant<MinterActivity, "addingSpendInvariant",
            "Constr#3", "singletonField", 
            TxOutputId, "isSeededActivity"
        >,
        ForcingNewMintDelegate: singleEnumVariant<MinterActivity, "ForcingNewMintDelegate",
            "Constr#4", "singletonField", 
            TxOutputId, "isSeededActivity"
        >,
        CreatingNewSpendDelegate: singleEnumVariant<MinterActivity, "CreatingNewSpendDelegate",
            "Constr#5", 
            "fields", {
                seed: TxOutputId,
                replacingUut: Option<number[]>
            }, "isSeededActivity"
        >
    }
>;

export type MinterActivityLike = EnumType<{module: "CapoMintHelpers", enumName: "MinterActivity"}, {
        mintingCharter: singleEnumVariant<MinterActivity, "mintingCharter",
            "Constr#0", "singletonField", 
            Address | string, "noSpecialFlags"
        >,
        mintWithDelegateAuthorizing: singleEnumVariant<MinterActivity, "mintWithDelegateAuthorizing",
            "Constr#1", "tagOnly", never, "noSpecialFlags"
        >,
        addingMintInvariant: singleEnumVariant<MinterActivity, "addingMintInvariant",
            "Constr#2", "singletonField", 
            TxOutputId | string, "isSeededActivity"
        >,
        addingSpendInvariant: singleEnumVariant<MinterActivity, "addingSpendInvariant",
            "Constr#3", "singletonField", 
            TxOutputId | string, "isSeededActivity"
        >,
        ForcingNewMintDelegate: singleEnumVariant<MinterActivity, "ForcingNewMintDelegate",
            "Constr#4", "singletonField", 
            TxOutputId | string, "isSeededActivity"
        >,
        CreatingNewSpendDelegate: singleEnumVariant<MinterActivity, "CreatingNewSpendDelegate",
            "Constr#5", 
            "fields", {
                seed: TxOutputId | string,
                replacingUut: Option<number[]>
            }, "isSeededActivity"
        >
    }
>;


/** ------------- hlbundle types END ------------- */

export default
class CapoMinterBundle 
extends HeliosScriptBundle {
// no datum types in this script
    Activity: makesUplcActivityEnumData<MinterActivityLike>;

}
