// generated by StellarHeliosProject using Stellar heliosRollupTypeGen()
        
import type { UplcData } from "@helios-lang/uplc";
import {
    Address,
    AssetClass,
    DatumHash,
    MintingPolicyHash,
    PubKey,
    PubKeyHash,
    ScriptHash,
    SpendingCredential,
    StakingCredential,
    StakingHash,
    StakingValidatorHash,
    TimeRange,
    TxId,
    TxInput,
    TxOutput,
    TxOutputId,
    TxOutputDatum,
    ValidatorHash,
    Value,
} from "@helios-lang/ledger";
import { Cast } from "@helios-lang/contract-utils";

import type {CapoBundle} from "src/CapoHeliosBundle.ts"   // todo import  from @stellar-contracts
import type {CapoDelegateBundle} from "src/delegation/CapoDelegateBundle.ts"   // todo import  from @stellar-contracts
import {
    HeliosScriptBundle,
    mkEnum,
    type EnumType,
    type EnumVariant,
} from "src/helios/HeliosScriptBundle.ts" // todo import from @stellar-contracts

export type MinterActivity = EnumType<{module: "CapoMintHelpers", enumName: "MinterActivity"}, {
        mintingCharter: EnumVariant<MinterActivity, "mintingCharter",
            "Constr#0", "singletonField", 
            Address
        >,
        mintWithDelegateAuthorizing: EnumVariant<MinterActivity, "mintWithDelegateAuthorizing",
            "Constr#1", "tagOnly", never
        >,
        addingMintInvariant: EnumVariant<MinterActivity, "addingMintInvariant",
            "Constr#2", "singletonField", 
            TxOutputId
        >,
        addingSpendInvariant: EnumVariant<MinterActivity, "addingSpendInvariant",
            "Constr#3", "singletonField", 
            TxOutputId
        >,
        ForcingNewMintDelegate: EnumVariant<MinterActivity, "ForcingNewMintDelegate",
            "Constr#4", "singletonField", 
            TxOutputId
        >,
        CreatingNewSpendDelegate: EnumVariant<MinterActivity, "CreatingNewSpendDelegate",
            "Constr#5", 
            "fields", {
                seed: TxOutputId,
                replacingUut: Option<number[]>
            }
        >
    }
>;

export type MinterActivityLike = EnumType<{module: "CapoMintHelpers", enumName: "MinterActivity"}, {
        mintingCharter: EnumVariant<MinterActivity, "mintingCharter",
            "Constr#0", "singletonField", 
            Address | string
        >,
        mintWithDelegateAuthorizing: EnumVariant<MinterActivity, "mintWithDelegateAuthorizing",
            "Constr#1", "tagOnly", never
        >,
        addingMintInvariant: EnumVariant<MinterActivity, "addingMintInvariant",
            "Constr#2", "singletonField", 
            TxOutputId | string
        >,
        addingSpendInvariant: EnumVariant<MinterActivity, "addingSpendInvariant",
            "Constr#3", "singletonField", 
            TxOutputId | string
        >,
        ForcingNewMintDelegate: EnumVariant<MinterActivity, "ForcingNewMintDelegate",
            "Constr#4", "singletonField", 
            TxOutputId | string
        >,
        CreatingNewSpendDelegate: EnumVariant<MinterActivity, "CreatingNewSpendDelegate",
            "Constr#5", 
            "fields", {
                seed: TxOutputId | string,
                replacingUut: Option<number[]>
            }
        >
    }
>;



export default 
class CapoMinterBundle 
extends HeliosScriptBundle {
// no datum types in this script
    Activity: mkEnum<MinterActivityLike>;

}
