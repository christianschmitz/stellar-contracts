// generated by StellarHeliosProject using Stellar heliosRollupTypeGen()
        
import type { UplcData } from "@helios-lang/uplc";
import {
    Address,
    AssetClass,
    DatumHash,
    MintingPolicyHash,
    PubKey,
    PubKeyHash,
    ScriptHash,
    SpendingCredential,
    StakingCredential,
    StakingHash,
    StakingValidatorHash,
    TimeRange,
    TxId,
    TxInput,
    TxOutput,
    TxOutputId,
    TxOutputDatum,
    ValidatorHash,
    Value,
} from "@helios-lang/ledger";
import { Cast } from "@helios-lang/contract-utils";

import type {CapoBundle} from "src/CapoHeliosBundle.ts"   // todo import  from @stellar-contracts
import type {CapoDelegateBundle} from "src/delegation/CapoDelegateBundle.ts"   // todo import  from @stellar-contracts
import {
    HeliosScriptBundle,
    mkEnum,
    type EnumType,
    type EnumVariant,
} from "src/helios/HeliosScriptBundle.ts" // todo import from @stellar-contracts

export type CapoActivity = EnumType<{module: "CapoHelpers", enumName: "CapoActivity"}, {
        usingAuthority: EnumVariant<{module: "CapoHelpers", enumName: "CapoActivity"},
            "Constr#0", "tagOnly", never
        >,
        updatingCharter: EnumVariant<{module: "CapoHelpers", enumName: "CapoActivity"},
            "Constr#1", "tagOnly", never
        >,
        retiringRefScript: EnumVariant<{module: "CapoHelpers", enumName: "CapoActivity"},
            "Constr#2", "tagOnly", never
        >,
        addingSpendInvariant: EnumVariant<{module: "CapoHelpers", enumName: "CapoActivity"},
            "Constr#3", "tagOnly", never
        >,
        spendingDelegatedDatum: EnumVariant<{module: "CapoHelpers", enumName: "CapoActivity"},
            "Constr#4", "tagOnly", never
        >,
        updatingTypeMap: EnumVariant<{module: "CapoHelpers", enumName: "CapoActivity"},
            "Constr#5", "tagOnly", never
        >
    }
>;

export type CapoActivityLike = EnumType<{module: "CapoHelpers", enumName: "CapoActivityLike"}, {
        usingAuthority: EnumVariant<{module: "CapoHelpers", enumName: "CapoActivityLike"},
            "Constr#0", "tagOnly", never
        >,
        updatingCharter: EnumVariant<{module: "CapoHelpers", enumName: "CapoActivityLike"},
            "Constr#1", "tagOnly", never
        >,
        retiringRefScript: EnumVariant<{module: "CapoHelpers", enumName: "CapoActivityLike"},
            "Constr#2", "tagOnly", never
        >,
        addingSpendInvariant: EnumVariant<{module: "CapoHelpers", enumName: "CapoActivityLike"},
            "Constr#3", "tagOnly", never
        >,
        spendingDelegatedDatum: EnumVariant<{module: "CapoHelpers", enumName: "CapoActivityLike"},
            "Constr#4", "tagOnly", never
        >,
        updatingTypeMap: EnumVariant<{module: "CapoHelpers", enumName: "CapoActivityLike"},
            "Constr#5", "tagOnly", never
        >
    }
>;



export default 
class withGenericUuts 
extends CapoHeliosBundle {
    mkDatum: dataMaker<DataLike>;
    readDatum: dataReader<Data>;

    Activity: mkEnum<CapoActivityLike>;

}
