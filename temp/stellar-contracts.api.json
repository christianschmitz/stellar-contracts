{
  "metadata": {
    "toolPackage": "@microsoft/api-extractor",
    "toolVersion": "7.47.11",
    "schemaVersion": 1011,
    "oldestForwardsCompatibleVersion": 1001,
    "tsdocConfig": {
      "$schema": "https://developer.microsoft.com/json-schemas/tsdoc/v0/tsdoc.schema.json",
      "noStandardTags": true,
      "tagDefinitions": [
        {
          "tagName": "@alpha",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@beta",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@defaultValue",
          "syntaxKind": "block"
        },
        {
          "tagName": "@decorator",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@deprecated",
          "syntaxKind": "block"
        },
        {
          "tagName": "@eventProperty",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@example",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@experimental",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@inheritDoc",
          "syntaxKind": "inline"
        },
        {
          "tagName": "@internal",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@label",
          "syntaxKind": "inline"
        },
        {
          "tagName": "@link",
          "syntaxKind": "inline",
          "allowMultiple": true
        },
        {
          "tagName": "@override",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@packageDocumentation",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@param",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@privateRemarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@public",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@readonly",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@remarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@returns",
          "syntaxKind": "block"
        },
        {
          "tagName": "@sealed",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@see",
          "syntaxKind": "block"
        },
        {
          "tagName": "@throws",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@typeParam",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@virtual",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@reqt",
          "syntaxKind": "block"
        },
        {
          "tagName": "@todo",
          "syntaxKind": "block"
        }
      ],
      "supportForTags": {
        "@alpha": true,
        "@beta": true,
        "@deprecated": true,
        "@example": true,
        "@inheritDoc": true,
        "@internal": true,
        "@link": true,
        "@param": true,
        "@public": true,
        "@remarks": true,
        "@see": true,
        "@typeParam": true,
        "@reqt": true,
        "@todo": true
      },
      "reportUnsupportedHtmlElements": false
    }
  },
  "kind": "Package",
  "canonicalReference": "@donecollectively/stellar-contracts!",
  "docComment": "",
  "name": "@donecollectively/stellar-contracts",
  "preserveMemberOrder": false,
  "members": [
    {
      "kind": "EntryPoint",
      "canonicalReference": "@donecollectively/stellar-contracts!",
      "name": "",
      "preserveMemberOrder": false,
      "members": [
        {
          "kind": "Variable",
          "canonicalReference": "@donecollectively/stellar-contracts!Activity:var",
          "docComment": "/**\n * Decorators for on-chain activity (redeemer) factory functions\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "Activity: "
            },
            {
              "kind": "Content",
              "text": "{\n    partialTxn(proto: any, thingName: any, descriptor: any): any;\n    redeemer(proto: any, thingName: any, descriptor: any): any;\n    redeemerData(proto: any, thingName: any, descriptor: any): any;\n}"
            }
          ],
          "fileUrlPath": "src/StellarContract.ts",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "Activity",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "@donecollectively/stellar-contracts!ADA:var",
          "docComment": "/**\n * 1 million as bigint. Multiply by this a `Bigint` ADA value to get lovelace\n *\n * @example\n *\n * const three = 3n * ADA const four = Bigint(4) * ADA\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "ADA = "
            },
            {
              "kind": "Content",
              "text": "1000000n"
            }
          ],
          "fileUrlPath": "src/testing/types.ts",
          "initializerTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "ADA",
          "variableTypeTokenRange": {
            "startIndex": 0,
            "endIndex": 0
          }
        },
        {
          "kind": "Function",
          "canonicalReference": "@donecollectively/stellar-contracts!addrAsString:function(1)",
          "docComment": "/**\n * Renders an address in shortened bech32 form, with prefix and part of the bech32 suffix\n *\n * @remarks\n *\n * @param address - address\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function addrAsString(address: "
            },
            {
              "kind": "Reference",
              "text": "Address",
              "canonicalReference": "@helios-lang/ledger!Address:type"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/diagnostics.ts",
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "address",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            }
          ],
          "name": "addrAsString"
        },
        {
          "kind": "Function",
          "canonicalReference": "@donecollectively/stellar-contracts!addTestContext:function(1)",
          "docComment": "/**\n * Adds a test helper class to a `vitest` testing context.\n *\n * @remarks\n *\n * @param context - a vitest context, typically created with StellarTestContext\n *\n * @param TestHelperClass - typically created with DefaultCapoTestHelper\n *\n * @param stConfig - preset configuration for the contract under test\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function addTestContext<SC extends "
            },
            {
              "kind": "Reference",
              "text": "StellarContract",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarContract:class"
            },
            {
              "kind": "Content",
              "text": "<any>"
            },
            {
              "kind": "Content",
              "text": ", ST_CONFIG extends "
            },
            {
              "kind": "Reference",
              "text": "configBaseWithRev",
              "canonicalReference": "@donecollectively/stellar-contracts!configBase:interface"
            },
            {
              "kind": "Content",
              "text": " & "
            },
            {
              "kind": "Reference",
              "text": "ConfigFor",
              "canonicalReference": "@donecollectively/stellar-contracts!ConfigFor:type"
            },
            {
              "kind": "Content",
              "text": "<SC>"
            },
            {
              "kind": "Content",
              "text": " = "
            },
            {
              "kind": "Reference",
              "text": "ConfigFor",
              "canonicalReference": "@donecollectively/stellar-contracts!ConfigFor:type"
            },
            {
              "kind": "Content",
              "text": "<SC>"
            },
            {
              "kind": "Content",
              "text": ">(context: "
            },
            {
              "kind": "Reference",
              "text": "StellarTestContext",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarTestContext:interface"
            },
            {
              "kind": "Content",
              "text": "<any, SC>"
            },
            {
              "kind": "Content",
              "text": ", TestHelperClass: "
            },
            {
              "kind": "Reference",
              "text": "stellarTestHelperSubclass",
              "canonicalReference": "@donecollectively/stellar-contracts!~stellarTestHelperSubclass:type"
            },
            {
              "kind": "Content",
              "text": "<SC>"
            },
            {
              "kind": "Content",
              "text": ", stConfig?: "
            },
            {
              "kind": "Content",
              "text": "ST_CONFIG"
            },
            {
              "kind": "Content",
              "text": ", helperState?: "
            },
            {
              "kind": "Reference",
              "text": "TestHelperState",
              "canonicalReference": "@donecollectively/stellar-contracts!TestHelperState:type"
            },
            {
              "kind": "Content",
              "text": "<SC>"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<void>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/testing/types.ts",
          "returnTypeTokenRange": {
            "startIndex": 23,
            "endIndex": 25
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "context",
              "parameterTypeTokenRange": {
                "startIndex": 12,
                "endIndex": 14
              },
              "isOptional": false
            },
            {
              "parameterName": "TestHelperClass",
              "parameterTypeTokenRange": {
                "startIndex": 15,
                "endIndex": 17
              },
              "isOptional": false
            },
            {
              "parameterName": "stConfig",
              "parameterTypeTokenRange": {
                "startIndex": 18,
                "endIndex": 19
              },
              "isOptional": true
            },
            {
              "parameterName": "helperState",
              "parameterTypeTokenRange": {
                "startIndex": 20,
                "endIndex": 22
              },
              "isOptional": true
            }
          ],
          "typeParameters": [
            {
              "typeParameterName": "SC",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "ST_CONFIG",
              "constraintTokenRange": {
                "startIndex": 4,
                "endIndex": 8
              },
              "defaultTypeTokenRange": {
                "startIndex": 9,
                "endIndex": 11
              }
            }
          ],
          "name": "addTestContext"
        },
        {
          "kind": "Class",
          "canonicalReference": "@donecollectively/stellar-contracts!AnyAddressAuthorityPolicy:class",
          "docComment": "/**\n * Token-based authority\n *\n * @remarks\n *\n * Transferrable authority using a unique token and no smart-contract. Network, Wallet,\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class AnyAddressAuthorityPolicy extends "
            },
            {
              "kind": "Reference",
              "text": "AuthorityPolicy",
              "canonicalReference": "@donecollectively/stellar-contracts!AuthorityPolicy:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/authority/AnyAddressAuthorityPolicy.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "AnyAddressAuthorityPolicy",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!AnyAddressAuthorityPolicy#DelegateAddsAuthorityToken:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "DelegateAddsAuthorityToken<TCX extends "
                },
                {
                  "kind": "Reference",
                  "text": "StellarTxnContext",
                  "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext:class"
                },
                {
                  "kind": "Content",
                  "text": ">(tcx: "
                },
                {
                  "kind": "Content",
                  "text": "TCX"
                },
                {
                  "kind": "Content",
                  "text": ", fromFoundUtxo: "
                },
                {
                  "kind": "Reference",
                  "text": "TxInput",
                  "canonicalReference": "@helios-lang/ledger!TxInput:type"
                },
                {
                  "kind": "Content",
                  "text": ", redeemer?: "
                },
                {
                  "kind": "Reference",
                  "text": "isActivity",
                  "canonicalReference": "@donecollectively/stellar-contracts!isActivity:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<TCX>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "TCX",
                  "constraintTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 9,
                "endIndex": 11
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "tcx",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "fromFoundUtxo",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "redeemer",
                  "parameterTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 8
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "DelegateAddsAuthorityToken"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!AnyAddressAuthorityPolicy#DelegateMustFindAuthorityToken:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "DelegateMustFindAuthorityToken(tcx: "
                },
                {
                  "kind": "Reference",
                  "text": "StellarTxnContext",
                  "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext:class"
                },
                {
                  "kind": "Content",
                  "text": ", label: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "TxInput",
                  "canonicalReference": "@helios-lang/ledger!TxInput:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "tcx",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "label",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "DelegateMustFindAuthorityToken"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!AnyAddressAuthorityPolicy#DelegateRetiresAuthorityToken:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "DelegateRetiresAuthorityToken<TCX extends "
                },
                {
                  "kind": "Reference",
                  "text": "StellarTxnContext",
                  "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext:class"
                },
                {
                  "kind": "Content",
                  "text": ">(tcx: "
                },
                {
                  "kind": "Content",
                  "text": "TCX"
                },
                {
                  "kind": "Content",
                  "text": ", fromFoundUtxo: "
                },
                {
                  "kind": "Reference",
                  "text": "TxInput",
                  "canonicalReference": "@helios-lang/ledger!TxInput:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<TCX>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "TCX",
                  "constraintTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "tcx",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "fromFoundUtxo",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "DelegateRetiresAuthorityToken"
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!AnyAddressAuthorityPolicy#delegateValidatorHash:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get delegateValidatorHash(): "
                },
                {
                  "kind": "Content",
                  "text": "undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "delegateValidatorHash",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!AnyAddressAuthorityPolicy#getContractScriptParamsUplc:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getContractScriptParamsUplc(): "
                },
                {
                  "kind": "Content",
                  "text": "{\n        rev: import(\"@helios-lang/uplc\")."
                },
                {
                  "kind": "Reference",
                  "text": "IntData",
                  "canonicalReference": "@helios-lang/uplc!IntData:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "getContractScriptParamsUplc"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!AnyAddressAuthorityPolicy#loadBundle:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "loadBundle(params: "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "params",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "loadBundle"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!AnyAddressAuthorityPolicy#txnReceiveAuthorityToken:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "txnReceiveAuthorityToken<TCX extends "
                },
                {
                  "kind": "Reference",
                  "text": "StellarTxnContext",
                  "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext:class"
                },
                {
                  "kind": "Content",
                  "text": ">(tcx: "
                },
                {
                  "kind": "Content",
                  "text": "TCX"
                },
                {
                  "kind": "Content",
                  "text": ", tokenValue: "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "@helios-lang/ledger!Value:type"
                },
                {
                  "kind": "Content",
                  "text": ", fromFoundUtxo: "
                },
                {
                  "kind": "Reference",
                  "text": "TxInput",
                  "canonicalReference": "@helios-lang/ledger!TxInput:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<TCX>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "TCX",
                  "constraintTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 9,
                "endIndex": 11
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "tcx",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "tokenValue",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "fromFoundUtxo",
                  "parameterTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 8
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "txnReceiveAuthorityToken"
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!AnyAddressAuthorityPolicy#usesContractScript:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "usesContractScript: "
                },
                {
                  "kind": "Content",
                  "text": "false"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "usesContractScript",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@donecollectively/stellar-contracts!AnyDataTemplate:type",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type AnyDataTemplate<TYPENAME extends "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ", others extends "
            },
            {
              "kind": "Reference",
              "text": "anyDatumProps",
              "canonicalReference": "@donecollectively/stellar-contracts!anyDatumProps:type"
            },
            {
              "kind": "Content",
              "text": "> = "
            },
            {
              "kind": "Content",
              "text": "{\n    [key in string & (\"id\" | \"type\" | keyof "
            },
            {
              "kind": "Reference",
              "text": "Omit",
              "canonicalReference": "!Omit:type"
            },
            {
              "kind": "Content",
              "text": "<others, \"id\">)]: key extends \"id\" ? string : key extends \"type\" ? TYPENAME : others[key];\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/delegation/DelegatedData.ts",
          "releaseTag": "Public",
          "name": "AnyDataTemplate",
          "typeParameters": [
            {
              "typeParameterName": "TYPENAME",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "others",
              "constraintTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 5,
            "endIndex": 8
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@donecollectively/stellar-contracts!anyDatumProps:type",
          "docComment": "/**\n * Properties for Datum structures for on-chain scripts\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type anyDatumProps = "
            },
            {
              "kind": "Reference",
              "text": "Record",
              "canonicalReference": "!Record:type"
            },
            {
              "kind": "Content",
              "text": "<string, any>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/StellarContract.ts",
          "releaseTag": "Public",
          "name": "anyDatumProps",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 3
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "@donecollectively/stellar-contracts!anyState:interface",
          "docComment": "/**\n * A base state for a transaction context\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface anyState "
            }
          ],
          "fileUrlPath": "src/StellarTxnContext.ts",
          "releaseTag": "Public",
          "name": "anyState",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@donecollectively/stellar-contracts!anyState#uuts:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "uuts: "
                },
                {
                  "kind": "Reference",
                  "text": "uutMap",
                  "canonicalReference": "@donecollectively/stellar-contracts!~uutMap:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "uuts",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Function",
          "canonicalReference": "@donecollectively/stellar-contracts!assetsAsString:function(1)",
          "docComment": "/**\n * Converts an array of [ policyId, ‹tokens› ] tuples for on-screen presentation\n *\n * @remarks\n *\n * Presents policy-ids with shortened identifiers, and shows a readable & printable representation of token names even if they're not UTF-8 encoded.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function assetsAsString(a: "
            },
            {
              "kind": "Reference",
              "text": "Assets",
              "canonicalReference": "@helios-lang/ledger!Assets:type"
            },
            {
              "kind": "Content",
              "text": ", joiner?: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ", showNegativeAsBurn?: "
            },
            {
              "kind": "Content",
              "text": "\"withBURN\""
            },
            {
              "kind": "Content",
              "text": ", mintRedeemers?: "
            },
            {
              "kind": "Reference",
              "text": "Record",
              "canonicalReference": "!Record:type"
            },
            {
              "kind": "Content",
              "text": "<number, string>"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/diagnostics.ts",
          "returnTypeTokenRange": {
            "startIndex": 10,
            "endIndex": 11
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "a",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            },
            {
              "parameterName": "joiner",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": true
            },
            {
              "parameterName": "showNegativeAsBurn",
              "parameterTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "isOptional": true
            },
            {
              "parameterName": "mintRedeemers",
              "parameterTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 9
              },
              "isOptional": true
            }
          ],
          "name": "assetsAsString"
        },
        {
          "kind": "Class",
          "canonicalReference": "@donecollectively/stellar-contracts!AuthorityPolicy:class",
          "docComment": "/**\n * Generic class as base for pure authorization\n *\n * @remarks\n *\n * This isn't different from StellarDelegate, but using it as a base class more specific than \"any delegate\" gives useful semantics for Capo's govAuthority role\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare abstract class AuthorityPolicy extends "
            },
            {
              "kind": "Reference",
              "text": "StellarDelegate",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarDelegate:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/authority/AuthorityPolicy.ts",
          "releaseTag": "Public",
          "isAbstract": true,
          "name": "AuthorityPolicy",
          "preserveMemberOrder": false,
          "members": [],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "@donecollectively/stellar-contracts!BasicMintDelegate:class",
          "docComment": "/**\n * Serves a delegated minting-policy role for Capo contracts\n *\n * @remarks\n *\n * shifts detailed minting policy out of the minter and into the delegate.\n *\n * By default, this delegate policy serves also as a spend delegate. To use a separate spend delegate, define `get isMintAndSpendDelegate() { return false; }` in the subclass, define a separate ContractBasedDelegate subclass for the spend delegate, and register it in the Capo contract's `delegateRoles.spendDelegate`.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class BasicMintDelegate extends "
            },
            {
              "kind": "Reference",
              "text": "ContractBasedDelegate",
              "canonicalReference": "@donecollectively/stellar-contracts!ContractBasedDelegate:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/minting/BasicMintDelegate.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "BasicMintDelegate",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!BasicMintDelegate#activityCreatingDataDelegate:member(1)",
              "docComment": "/**\n * A mint-delegate activity indicating that a delegated-data controller UUT is being created to govern a class of delegated data. ONLY the indicated data-controller UUT must be minted, and is expected to be deposited into the data-controller's policy-script address. Use the {@link DelegatedDataContract} class to create the off-chain data controller and its on-chain policy.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "activityCreatingDataDelegate(seedFrom: "
                },
                {
                  "kind": "Reference",
                  "text": "hasSeed",
                  "canonicalReference": "@donecollectively/stellar-contracts!hasSeed:type"
                },
                {
                  "kind": "Content",
                  "text": ", uutPurpose: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "isActivity",
                  "canonicalReference": "@donecollectively/stellar-contracts!isActivity:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "seedFrom",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "uutPurpose",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "activityCreatingDataDelegate"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!BasicMintDelegate#activityCreatingDelegatedData:member(1)",
              "docComment": "/**\n * A mint-delegate activity indicating that a delegated-data controller will be governing creation of a specific piece of delegated data. No further redeemer details are needed here, but the data-delegate's controller-token may have additional details in ITS redeemer, which will be aligned with the one, as described in {@link BasicMintDelegate.activityUpdatingDelegatedData}. See that topic for more details including multi-activity scenarios.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "activityCreatingDelegatedData(seedFrom: "
                },
                {
                  "kind": "Reference",
                  "text": "hasSeed",
                  "canonicalReference": "@donecollectively/stellar-contracts!hasSeed:type"
                },
                {
                  "kind": "Content",
                  "text": ", uutPurpose: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "{\n        redeemer: import(\"@helios-lang/uplc\")."
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "seedFrom",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "uutPurpose",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "activityCreatingDelegatedData"
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!BasicMintDelegate.currentRev:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static currentRev: "
                },
                {
                  "kind": "Content",
                  "text": "bigint"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "currentRev",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": true,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!BasicMintDelegate#dataBridgeClass:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "dataBridgeClass: "
                },
                {
                  "kind": "Reference",
                  "text": "GenericDelegateBridgeClass",
                  "canonicalReference": "@donecollectively/stellar-contracts!GenericDelegateBridgeClass:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "dataBridgeClass",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!BasicMintDelegate.defaultParams:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static get defaultParams(): "
                },
                {
                  "kind": "Content",
                  "text": "{\n        delegateName: string;\n        isMintDelegate: boolean;\n        isSpendDelegate: boolean;\n        rev: bigint;\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "defaultParams",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": true,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!BasicMintDelegate#delegateName:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get delegateName(): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "delegateName",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!BasicMintDelegate#isMintAndSpendDelegate:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get isMintAndSpendDelegate(): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "isMintAndSpendDelegate",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!BasicMintDelegate#mkDatumScriptReference:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "mkDatumScriptReference(): "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "mkDatumScriptReference"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!BasicMintDelegate#scriptBundle:member(1)",
              "docComment": "/**\n * the scriptBundle for the BasicMintDelegate looks concrete, but it's actually just referencing a generic, unspecialized delegate script that may not provide much value to any specific application.\n *\n * Subclasses should expect to override this and provide a specialized `get scriptBundle() { return new ‹YourMintDelegateBundle› }`, using a class you derive from CapoDelegateBundle and your own delegate specialization. TODO: a generator to make this easier. Until then, you can copy the UnspecializedDelegate.hl and specialize it.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "scriptBundle(): "
                },
                {
                  "kind": "Reference",
                  "text": "UnspecializedDelegateBundle",
                  "canonicalReference": "@donecollectively/stellar-contracts!~UnspecializedDgtBundle:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "scriptBundle"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!BasicMintDelegate#txnGrantAuthority:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "txnGrantAuthority<TCX extends "
                },
                {
                  "kind": "Reference",
                  "text": "StellarTxnContext",
                  "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext:class"
                },
                {
                  "kind": "Content",
                  "text": ">(tcx: "
                },
                {
                  "kind": "Content",
                  "text": "TCX"
                },
                {
                  "kind": "Content",
                  "text": ", redeemer: "
                },
                {
                  "kind": "Reference",
                  "text": "isActivity",
                  "canonicalReference": "@donecollectively/stellar-contracts!isActivity:type"
                },
                {
                  "kind": "Content",
                  "text": ", skipReturningDelegate?: "
                },
                {
                  "kind": "Content",
                  "text": "\"skipDelegateReturn\""
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<TCX>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "TCX",
                  "constraintTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 9,
                "endIndex": 11
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "tcx",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "redeemer",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "skipReturningDelegate",
                  "parameterTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 8
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "txnGrantAuthority"
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@donecollectively/stellar-contracts!BasicMinterParams:type",
          "docComment": "/**\n * The parameters for the Capo's basic minter\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type BasicMinterParams = "
            },
            {
              "kind": "Reference",
              "text": "configBaseWithRev",
              "canonicalReference": "@donecollectively/stellar-contracts!configBase:interface"
            },
            {
              "kind": "Content",
              "text": " & "
            },
            {
              "kind": "Reference",
              "text": "SeedTxnScriptParams",
              "canonicalReference": "@donecollectively/stellar-contracts!SeedTxnScriptParams:type"
            },
            {
              "kind": "Content",
              "text": " & {\n    capo: "
            },
            {
              "kind": "Reference",
              "text": "Capo",
              "canonicalReference": "@donecollectively/stellar-contracts!Capo:class"
            },
            {
              "kind": "Content",
              "text": "<any>;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/minting/CapoMinter.ts",
          "releaseTag": "Public",
          "name": "BasicMinterParams",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 7
          }
        },
        {
          "kind": "Function",
          "canonicalReference": "@donecollectively/stellar-contracts!betterJsonSerializer:function(1)",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "betterJsonSerializer: (key: "
            },
            {
              "kind": "Content",
              "text": "any"
            },
            {
              "kind": "Content",
              "text": ", value: "
            },
            {
              "kind": "Content",
              "text": "any"
            },
            {
              "kind": "Content",
              "text": ") => "
            },
            {
              "kind": "Content",
              "text": "any"
            }
          ],
          "fileUrlPath": "src/diagnostics.ts",
          "returnTypeTokenRange": {
            "startIndex": 5,
            "endIndex": 6
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "key",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            },
            {
              "parameterName": "value",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": false
            }
          ],
          "name": "betterJsonSerializer"
        },
        {
          "kind": "Class",
          "canonicalReference": "@donecollectively/stellar-contracts!BundleTypeGenerator:class",
          "docComment": "/**\n * Gathers any number of types expressible for an on-chain Helios script, and generates types and type aliases for the off-chain TypeScript context.\n *\n * Each struct type is directly expressed as its name Each enum type is expressed as a proxy type, unioned with the possible raw enum variants for that type As each type is encountered (as a **nested field** within a datum or redeemer), any named types encountered are added to the context, with any recursive expansions generated and added to the context, depth-first, ... then the named type is used for the **nested field** where it was encountered.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class BundleTypeGenerator extends "
            },
            {
              "kind": "Reference",
              "text": "BundleBasedGenerator",
              "canonicalReference": "@donecollectively/stellar-contracts!~BundleBasedGenerator:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/helios/dataBridge/BundleTypeGenerator.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "BundleTypeGenerator",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!BundleTypeGenerator#createAllTypesSource:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "createAllTypesSource(className: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", parentClassName: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", inputFile: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "className",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "parentClassName",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "inputFile",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "createAllTypesSource"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!BundleTypeGenerator#generateEnumTypeSource:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "generateEnumTypeSource(name: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", typeInfo: "
                },
                {
                  "kind": "Reference",
                  "text": "enumTypeDetails",
                  "canonicalReference": "@donecollectively/stellar-contracts!~enumTypeDetails:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "name",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "typeInfo",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "generateEnumTypeSource"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!BundleTypeGenerator#generateNamedDependencyTypes:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "generateNamedDependencyTypes(): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "generateNamedDependencyTypes"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!BundleTypeGenerator#generateOtherNamedTypeSource:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "generateOtherNamedTypeSource(name: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", typeInfo: "
                },
                {
                  "kind": "Reference",
                  "text": "typeDetails",
                  "canonicalReference": "@donecollectively/stellar-contracts!~typeDetails:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "name",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "typeInfo",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "generateOtherNamedTypeSource"
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Function",
          "canonicalReference": "@donecollectively/stellar-contracts!byteArrayAsString:function(1)",
          "docComment": "/**\n * Renders a byteArray in printable form, assuming it contains (mostly) text\n *\n * @remarks\n *\n * Because it uses {@link hexToPrintableString | hexToPrintableString()}, it will render any non-printable characters using ‹hex› notation.\n *\n * @param ba - the byte array\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function byteArrayAsString(ba: "
            },
            {
              "kind": "Reference",
              "text": "ByteArrayData",
              "canonicalReference": "@helios-lang/uplc!ByteArrayData:type"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/diagnostics.ts",
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "ba",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            }
          ],
          "name": "byteArrayAsString"
        },
        {
          "kind": "Function",
          "canonicalReference": "@donecollectively/stellar-contracts!byteArrayListAsString:function(1)",
          "docComment": "/**\n * Converts a list of ByteArrays to printable form\n *\n * @remarks\n *\n * ... using {@link hexToPrintableString}\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function byteArrayListAsString(items: "
            },
            {
              "kind": "Reference",
              "text": "ByteArrayData",
              "canonicalReference": "@helios-lang/uplc!ByteArrayData:type"
            },
            {
              "kind": "Content",
              "text": "[]"
            },
            {
              "kind": "Content",
              "text": ", joiner?: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/diagnostics.ts",
          "returnTypeTokenRange": {
            "startIndex": 6,
            "endIndex": 7
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "items",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isOptional": false
            },
            {
              "parameterName": "joiner",
              "parameterTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 5
              },
              "isOptional": true
            }
          ],
          "name": "byteArrayListAsString"
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@donecollectively/stellar-contracts!callWith:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type callWith<ARGS, T extends "
            },
            {
              "kind": "Reference",
              "text": "DataBridge",
              "canonicalReference": "@donecollectively/stellar-contracts!DataBridge:class"
            },
            {
              "kind": "Content",
              "text": "> = "
            },
            {
              "kind": "Content",
              "text": "T & ((x: ARGS) => "
            },
            {
              "kind": "Reference",
              "text": "ReturnType",
              "canonicalReference": "!ReturnType:type"
            },
            {
              "kind": "Content",
              "text": "<T[\"ᱺᱺcast\"][\"toUplcData\"]>)"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/helios/dataBridge/DataBridge.ts",
          "releaseTag": "Public",
          "name": "callWith",
          "typeParameters": [
            {
              "typeParameterName": "ARGS",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 3,
            "endIndex": 6
          }
        },
        {
          "kind": "Class",
          "canonicalReference": "@donecollectively/stellar-contracts!Capo:class",
          "docComment": "/**\n * Base class for leader contracts, with predefined roles for cooperating/delegated policies\n *\n * @remarks\n *\n * A Capo contract provides a central contract address that can act as a treasury or data registry; it can mint tokens using its connected minting-policy, and it can delegate policies to other contract scripts. Capo contract can use these capabilities in custom ways for strong flexibility.\n *\n * ### Defining Delegates Any Capo contract can define delegateRoles() to establish custom collaborating scripts; these are used for separating granular responsbilities for different functional purposes within your (on-chain and off-chain) application; this approach enables delegates to use any one of multiple strategies with different functional logic to serve in any given role, thus providing flexibility and extensibility.\n *\n * Capo provides roles for govAuthority and mintDelegate, and methods to facilitate the lifecycle of charter creation & update. Define a delegateRoles data structure using the standalone helper function of that name, use its type in your `extends Capo<...>` clause, and return that delegate map from the `delegateRoles()` method in your subclass.\n *\n * You may wish to use the `basicRoles()` helper function to easily access any of the default mint/ spend/ authority delegate definitions, and the defineRole() method to make additional roles for your application's data types.\n *\n * ### The Delegation Pattern and UUTs\n *\n * The delegation pattern uses UUTs, which are non-fungible / ***unique utility tokens***. This is equivalent to a \"thread token\" - a provable source of self-authority or legitimacy for contract UTxOs. Without the UUT, a contract UTxO is just a piece of untrusted data; with the UUT, it can be blessed with proactive policy enforcement during creation.\n *\n * Architecturally, UUTs provide a simple and unique handle for the Capo to use as a **required transaction element** in key operational activities (like updating the charter details); so that the delegate holding the UUT is entrusted to approved the UUT's inclusion in a transaction, with all the policy-enforcement implicated on the other end of the delegation.\n *\n * UUTs can be used to form a positive linkage between the Capo (which should normally retain a reference to that UUT) and any delegate; that delegate is most commonly another contract script also referenced within the roles() definition.\n *\n * * **Example: Multisig authority delegation** - a Capo contract would get much more complicated if it contained multisig logic. Instead, the governance authority for the Capo can be delegated to a standalone multi-sig contract, which can contain all (and only) the multi-sig logic. Separating the responsibilities makes each part simpler, easing the process of ensuring each part is doing its job :pray:\n *\n * ### UUTs and Delegated Data\n *\n * UUTs can also be used as a form of uniqueness for data stored in the Capo's UTxOs (i.e. a record id). The UTxO only lasts until it is spent, but the UUT's identity can continue along with any value and connected data.\n *\n * Policy delegates provide on-chain delegation of authority for the Capo's data, while being upgradable to support the evolving needs of the application. Delegated datums store data of various types at the Capo's address, while delegate policies, each at its own address are invoked to enforce creation and update rules for each type of data.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare abstract class Capo<SELF extends "
            },
            {
              "kind": "Reference",
              "text": "Capo",
              "canonicalReference": "@donecollectively/stellar-contracts!Capo:class"
            },
            {
              "kind": "Content",
              "text": "<any>"
            },
            {
              "kind": "Content",
              "text": "> extends "
            },
            {
              "kind": "Reference",
              "text": "StellarContract",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarContract:class"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "CapoConfig",
              "canonicalReference": "@donecollectively/stellar-contracts!CapoConfig:type"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/Capo.ts",
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "SELF",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "isAbstract": true,
          "name": "Capo",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!Capo#_delegateRoles:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "_delegateRoles: "
                },
                {
                  "kind": "Reference",
                  "text": "basicDelegateMap",
                  "canonicalReference": "@donecollectively/stellar-contracts!~basicDelegateMap:type"
                },
                {
                  "kind": "Content",
                  "text": "<any> & "
                },
                {
                  "kind": "Reference",
                  "text": "ReturnType",
                  "canonicalReference": "!ReturnType:type"
                },
                {
                  "kind": "Content",
                  "text": "<SELF[\"initDelegateRoles\"]>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "_delegateRoles",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!Capo#activity:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get activity(): "
                },
                {
                  "kind": "Reference",
                  "text": "mustFindActivityType",
                  "canonicalReference": "@donecollectively/stellar-contracts!~mustFindActivityType:type"
                },
                {
                  "kind": "Content",
                  "text": "<this>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "activity",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!Capo#activitySpendingDelegatedDatum:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "activitySpendingDelegatedDatum(): "
                },
                {
                  "kind": "Content",
                  "text": "{\n        redeemer: "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "activitySpendingDelegatedDatum"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!Capo#activityUpdatingCharter:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "activityUpdatingCharter(): "
                },
                {
                  "kind": "Reference",
                  "text": "isActivity",
                  "canonicalReference": "@donecollectively/stellar-contracts!isActivity:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "activityUpdatingCharter"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!Capo#activityUsingAuthority:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "activityUsingAuthority(): "
                },
                {
                  "kind": "Reference",
                  "text": "isActivity",
                  "canonicalReference": "@donecollectively/stellar-contracts!isActivity:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "activityUsingAuthority"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!Capo#addressAuthorityConfig:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "addressAuthorityConfig(): "
                },
                {
                  "kind": "Reference",
                  "text": "DelegateConfigDetails",
                  "canonicalReference": "@donecollectively/stellar-contracts!DelegateConfigDetails:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "AuthorityPolicy",
                  "canonicalReference": "@donecollectively/stellar-contracts!AuthorityPolicy:class"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "addressAuthorityConfig"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!Capo#addSeedUtxo:member(1)",
              "docComment": "/**\n * @remarks\n *\n * adds a seed utxo to a transaction-context,\n *\n * @deprecated\n *\n * use tcxWithSeedUtxo() instead\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "addSeedUtxo<TCX extends "
                },
                {
                  "kind": "Reference",
                  "text": "StellarTxnContext",
                  "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext:class"
                },
                {
                  "kind": "Content",
                  "text": ">(tcx?: "
                },
                {
                  "kind": "Content",
                  "text": "TCX"
                },
                {
                  "kind": "Content",
                  "text": ", seedUtxo?: "
                },
                {
                  "kind": "Reference",
                  "text": "TxInput",
                  "canonicalReference": "@helios-lang/ledger!TxInput:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<TCX & "
                },
                {
                  "kind": "Reference",
                  "text": "hasSeedUtxo",
                  "canonicalReference": "@donecollectively/stellar-contracts!hasSeedUtxo:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "TCX",
                  "constraintTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 11
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "tcx",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": true
                },
                {
                  "parameterName": "seedUtxo",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "addSeedUtxo"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!Capo#basicDelegateRoles:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "basicDelegateRoles(): "
                },
                {
                  "kind": "Reference",
                  "text": "basicDelegateMap",
                  "canonicalReference": "@donecollectively/stellar-contracts!~basicDelegateMap:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "basicDelegateRoles"
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!Capo#bootstrapping:member",
              "docComment": "/**\n * Reveals any bootstrapping details that may be present during initial creation of the Capo contract, for use during and immediately after charter-creation.\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "bootstrapping?: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        [key in \"govAuthority\" | \"mintDelegate\" | \"spendDelegate\"]: "
                },
                {
                  "kind": "Reference",
                  "text": "ConfiguredDelegate",
                  "canonicalReference": "@donecollectively/stellar-contracts!ConfiguredDelegate:type"
                },
                {
                  "kind": "Content",
                  "text": "<any>;\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "bootstrapping",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!Capo.bootstrapWith:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static bootstrapWith(args: "
                },
                {
                  "kind": "Reference",
                  "text": "StellarFactoryArgs",
                  "canonicalReference": "@donecollectively/stellar-contracts!StellarFactoryArgs:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "CapoConfig",
                  "canonicalReference": "@donecollectively/stellar-contracts!CapoConfig:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "args",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 5
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "bootstrapWith"
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!Capo#charterTokenAsValue:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get charterTokenAsValue(): "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "@helios-lang/ledger!Value:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "charterTokenAsValue",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!Capo#charterTokenPredicate:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get charterTokenPredicate(): "
                },
                {
                  "kind": "Reference",
                  "text": "tokenPredicate",
                  "canonicalReference": "@donecollectively/stellar-contracts!~tokenPredicate:type"
                },
                {
                  "kind": "Content",
                  "text": "<any>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "charterTokenPredicate",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!Capo#connectDelegateWithOnchainRDLink:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "connectDelegateWithOnchainRDLink<RN extends "
                },
                {
                  "kind": "Content",
                  "text": "string & keyof SELF[\"_delegateRoles\"]"
                },
                {
                  "kind": "Content",
                  "text": ", DT extends "
                },
                {
                  "kind": "Reference",
                  "text": "StellarDelegate",
                  "canonicalReference": "@donecollectively/stellar-contracts!StellarDelegate:class"
                },
                {
                  "kind": "Content",
                  "text": " = "
                },
                {
                  "kind": "Reference",
                  "text": "ContractBasedDelegate",
                  "canonicalReference": "@donecollectively/stellar-contracts!ContractBasedDelegate:class"
                },
                {
                  "kind": "Content",
                  "text": ">(roleLabel: "
                },
                {
                  "kind": "Content",
                  "text": "RN"
                },
                {
                  "kind": "Content",
                  "text": ", delegateLink: "
                },
                {
                  "kind": "Reference",
                  "text": "RelativeDelegateLinkLike",
                  "canonicalReference": "@donecollectively/stellar-contracts!~RelativeDelegateLinkLike:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<DT>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "RN",
                  "constraintTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "typeParameterName": "DT",
                  "constraintTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  }
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 11,
                "endIndex": 13
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "roleLabel",
                  "parameterTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 8
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "delegateLink",
                  "parameterTypeTokenRange": {
                    "startIndex": 9,
                    "endIndex": 10
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "connectDelegateWithOnchainRDLink"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!Capo#connectMintingScript:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "connectMintingScript(params: "
                },
                {
                  "kind": "Reference",
                  "text": "SeedTxnScriptParams",
                  "canonicalReference": "@donecollectively/stellar-contracts!SeedTxnScriptParams:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "CapoMinter",
                  "canonicalReference": "@donecollectively/stellar-contracts!CapoMinter:class"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "params",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "connectMintingScript"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!Capo.currentConfig:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static currentConfig(): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<void>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "currentConfig"
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!Capo.currentRev:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static currentRev: "
                },
                {
                  "kind": "Content",
                  "text": "bigint"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "currentRev",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": true,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!Capo#dataBridgeClass:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "dataBridgeClass: "
                },
                {
                  "kind": "Content",
                  "text": "typeof "
                },
                {
                  "kind": "Reference",
                  "text": "CapoDataBridge",
                  "canonicalReference": "@donecollectively/stellar-contracts!~CapoDataBridge:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "dataBridgeClass",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!Capo.defaultParams:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static get defaultParams(): "
                },
                {
                  "kind": "Content",
                  "text": "{\n        rev: bigint;\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "defaultParams",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": true,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!Capo#delegateRoles:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get delegateRoles(): "
                },
                {
                  "kind": "Reference",
                  "text": "basicDelegateMap",
                  "canonicalReference": "@donecollectively/stellar-contracts!~basicDelegateMap:type"
                },
                {
                  "kind": "Content",
                  "text": "<any> & "
                },
                {
                  "kind": "Reference",
                  "text": "ReturnType",
                  "canonicalReference": "!ReturnType:type"
                },
                {
                  "kind": "Content",
                  "text": "<SELF[\"initDelegateRoles\"]>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "delegateRoles",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!Capo#didDryRun:member",
              "docComment": "/**\n * helper for test environment, allowing an abortive initial charter-creation, without most of the costs, but enabling named-delegate scripts to be compiled/validated much earlier in the test lifecycle. The real charter process can then continue without duplicating any of the dry-run setup costs.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "didDryRun: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        minter: "
                },
                {
                  "kind": "Reference",
                  "text": "CapoMinter",
                  "canonicalReference": "@donecollectively/stellar-contracts!CapoMinter:class"
                },
                {
                  "kind": "Content",
                  "text": ";\n        seedUtxo: "
                },
                {
                  "kind": "Reference",
                  "text": "TxInput",
                  "canonicalReference": "@helios-lang/ledger!TxInput:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        configIn: "
                },
                {
                  "kind": "Reference",
                  "text": "CapoConfig",
                  "canonicalReference": "@donecollectively/stellar-contracts!CapoConfig:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        args: "
                },
                {
                  "kind": "Reference",
                  "text": "MinimalCharterDataArgs",
                  "canonicalReference": "@donecollectively/stellar-contracts!MinimalCharterDataArgs:interface"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "didDryRun",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 10
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!Capo#extractDelegateLinkDetails:member(1)",
              "docComment": "/**\n * extracts the key details of a delegate link, given a delegate configuration.\n *\n * @remarks\n *\n * This is valid only during the setup phase of creating a delegate, and does not encode the config entry.\n *\n * use mkRelativeDelegateLink() to encode the config entry, and use this.parseDgtConfig() to decode it.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "extractDelegateLinkDetails<CT extends "
                },
                {
                  "kind": "Reference",
                  "text": "ConfiguredDelegate",
                  "canonicalReference": "@donecollectively/stellar-contracts!ConfiguredDelegate:type"
                },
                {
                  "kind": "Content",
                  "text": "<DT> | "
                },
                {
                  "kind": "Reference",
                  "text": "OffchainPartialDelegateLink",
                  "canonicalReference": "@donecollectively/stellar-contracts!OffchainPartialDelegateLink:type"
                },
                {
                  "kind": "Content",
                  "text": ", DT extends "
                },
                {
                  "kind": "Reference",
                  "text": "StellarDelegate",
                  "canonicalReference": "@donecollectively/stellar-contracts!StellarDelegate:class"
                },
                {
                  "kind": "Content",
                  "text": " | never"
                },
                {
                  "kind": "Content",
                  "text": " = "
                },
                {
                  "kind": "Content",
                  "text": "CT extends "
                },
                {
                  "kind": "Reference",
                  "text": "ConfiguredDelegate",
                  "canonicalReference": "@donecollectively/stellar-contracts!ConfiguredDelegate:type"
                },
                {
                  "kind": "Content",
                  "text": "<infer D> ? D : never"
                },
                {
                  "kind": "Content",
                  "text": ">(configured: "
                },
                {
                  "kind": "Content",
                  "text": "CT"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "CT extends "
                },
                {
                  "kind": "Reference",
                  "text": "ConfiguredDelegate",
                  "canonicalReference": "@donecollectively/stellar-contracts!ConfiguredDelegate:type"
                },
                {
                  "kind": "Content",
                  "text": "<any> ? CT & "
                },
                {
                  "kind": "Reference",
                  "text": "OffchainPartialDelegateLink",
                  "canonicalReference": "@donecollectively/stellar-contracts!OffchainPartialDelegateLink:type"
                },
                {
                  "kind": "Content",
                  "text": " : "
                },
                {
                  "kind": "Reference",
                  "text": "OffchainPartialDelegateLink",
                  "canonicalReference": "@donecollectively/stellar-contracts!OffchainPartialDelegateLink:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "CT",
                  "constraintTokenRange": {
                    "startIndex": 1,
                    "endIndex": 4
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "typeParameterName": "DT",
                  "constraintTokenRange": {
                    "startIndex": 5,
                    "endIndex": 7
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 8,
                    "endIndex": 11
                  }
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 14,
                "endIndex": 20
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "configured",
                  "parameterTypeTokenRange": {
                    "startIndex": 12,
                    "endIndex": 13
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "extractDelegateLinkDetails"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!Capo#findActorUut:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "findActorUut(uutPrefix: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", mph?: "
                },
                {
                  "kind": "Reference",
                  "text": "MintingPolicyHash",
                  "canonicalReference": "@helios-lang/ledger!MintingPolicyHash:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "FoundUut",
                  "canonicalReference": "@donecollectively/stellar-contracts!FoundUut:type"
                },
                {
                  "kind": "Content",
                  "text": " | undefined>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "uutPrefix",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "mph",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "findActorUut"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!Capo#findCharterData:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "findCharterData(currentCharterUtxo?: "
                },
                {
                  "kind": "Reference",
                  "text": "TxInput",
                  "canonicalReference": "@helios-lang/ledger!TxInput:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "CharterData",
                  "canonicalReference": "@donecollectively/stellar-contracts!CharterData:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "currentCharterUtxo",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "findCharterData"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!Capo#findDelegatedDataUtxos:member(1)",
              "docComment": "/**\n * Queries a chain-index to find utxos having a specific type of delegated datum\n *\n * @remarks\n *\n * Optionally filters records by `id`, `type` and/or `predicate`\n *\n * The `predicate` function, if provided, can implement any logic suitable for a specific case of data-finding.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "findDelegatedDataUtxos<const T extends "
                },
                {
                  "kind": "Content",
                  "text": "undefined | (string & keyof SELF[\"_delegateRoles\"])"
                },
                {
                  "kind": "Content",
                  "text": ", RAW_DATUM_TYPE extends "
                },
                {
                  "kind": "Content",
                  "text": "T extends string ? "
                },
                {
                  "kind": "Reference",
                  "text": "AnyDataTemplate",
                  "canonicalReference": "@donecollectively/stellar-contracts!AnyDataTemplate:type"
                },
                {
                  "kind": "Content",
                  "text": "<T, any> : never"
                },
                {
                  "kind": "Content",
                  "text": ", PARSED_DATUM_TYPE>(this: "
                },
                {
                  "kind": "Content",
                  "text": "SELF"
                },
                {
                  "kind": "Content",
                  "text": ", { type, id, predicate, query, }: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        type?: T;\n        id?: string | number[] | "
                },
                {
                  "kind": "Reference",
                  "text": "UutName",
                  "canonicalReference": "@donecollectively/stellar-contracts!UutName:class"
                },
                {
                  "kind": "Content",
                  "text": ";\n        predicate?: "
                },
                {
                  "kind": "Reference",
                  "text": "DelegatedDataPredicate",
                  "canonicalReference": "@donecollectively/stellar-contracts!DelegatedDataPredicate:type"
                },
                {
                  "kind": "Content",
                  "text": "<RAW_DATUM_TYPE>;\n        query?: never;\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "FoundDatumUtxo",
                  "canonicalReference": "@donecollectively/stellar-contracts!FoundDatumUtxo:type"
                },
                {
                  "kind": "Content",
                  "text": "<RAW_DATUM_TYPE, PARSED_DATUM_TYPE>[]>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "T",
                  "constraintTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "typeParameterName": "RAW_DATUM_TYPE",
                  "constraintTokenRange": {
                    "startIndex": 3,
                    "endIndex": 6
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "typeParameterName": "PARSED_DATUM_TYPE",
                  "constraintTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 15,
                "endIndex": 19
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "this",
                  "parameterTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 8
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "{ type, id, predicate, query, }",
                  "parameterTypeTokenRange": {
                    "startIndex": 9,
                    "endIndex": 14
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "findDelegatedDataUtxos"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!Capo#findGovDelegate:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "findGovDelegate(charterData?: "
                },
                {
                  "kind": "Reference",
                  "text": "CharterData",
                  "canonicalReference": "@donecollectively/stellar-contracts!CharterData:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "ContractBasedDelegate",
                  "canonicalReference": "@donecollectively/stellar-contracts!ContractBasedDelegate:class"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "charterData",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "findGovDelegate"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!Capo#findScriptReferences:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "findScriptReferences(): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<["
                },
                {
                  "kind": "Reference",
                  "text": "TxInput",
                  "canonicalReference": "@helios-lang/ledger!TxInput:type"
                },
                {
                  "kind": "Content",
                  "text": ", any][]>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "findScriptReferences"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!Capo#findSettingsInfo:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "findSettingsInfo(this: "
                },
                {
                  "kind": "Content",
                  "text": "SELF"
                },
                {
                  "kind": "Content",
                  "text": ", charterRefOrInputOrProps?: "
                },
                {
                  "kind": "Reference",
                  "text": "hasCharterRef",
                  "canonicalReference": "@donecollectively/stellar-contracts!hasCharterRef:type"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "TxInput",
                  "canonicalReference": "@helios-lang/ledger!TxInput:type"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "CapoDatum$Ergo$CharterData",
                  "canonicalReference": "@donecollectively/stellar-contracts!~CapoDatum$Ergo$CharterData:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "FoundDatumUtxo",
                  "canonicalReference": "@donecollectively/stellar-contracts!FoundDatumUtxo:type"
                },
                {
                  "kind": "Content",
                  "text": "<any, any>>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 9,
                "endIndex": 13
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "this",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "charterRefOrInputOrProps",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 8
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "findSettingsInfo"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!Capo#getContractScriptParamsUplc:member(1)",
              "docComment": "/**\n * extracts from the input configuration the key details needed to construct/reconstruct the on-chain contract address\n *\n * @remarks\n *\n * extracts the details that are key to parameterizing the Capo / leader's on-chain contract script\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getContractScriptParamsUplc(config: "
                },
                {
                  "kind": "Reference",
                  "text": "CapoConfig",
                  "canonicalReference": "@donecollectively/stellar-contracts!CapoConfig:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcRecord",
                  "canonicalReference": "@donecollectively/stellar-contracts!~UplcRecord:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "configBaseWithRev",
                  "canonicalReference": "@donecollectively/stellar-contracts!configBase:interface"
                },
                {
                  "kind": "Content",
                  "text": " & "
                },
                {
                  "kind": "Reference",
                  "text": "Pick",
                  "canonicalReference": "!Pick:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "CapoConfig",
                  "canonicalReference": "@donecollectively/stellar-contracts!CapoConfig:type"
                },
                {
                  "kind": "Content",
                  "text": ", \"seedTxn\" | \"seedIndex\" | \"mph\">>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 11
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "config",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "getContractScriptParamsUplc"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!Capo#getDelegateRoles:member(1)",
              "docComment": "/**\n * USE THE `delegateRoles` GETTER INSTEAD\n *\n * @remarks\n *\n * - this no-op method is a convenience for Stellar Contracts maintainers and intuitive developers using autocomplete. - Including it enables an entry in VSCode \"Outline\" view, which doesn't include the delegateRoles getter : /\n *\n * @deprecated\n *\n * but please keep as a kind of redirect\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getDelegateRoles(): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "getDelegateRoles"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!Capo#getDgDataController:member(1)",
              "docComment": "/**\n * Finds the delegated-data controller for a given typeName.\n *\n * @remarks\n *\n * REQUIRES that the Capo manifest contains an installed DgDataPolicy and that the off-chain Capo delegateMap provides an off-chain controller for that typeName.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getDgDataController<RN extends "
                },
                {
                  "kind": "Content",
                  "text": "string & keyof SELF[\"_delegateRoles\"]"
                },
                {
                  "kind": "Content",
                  "text": ">(this: "
                },
                {
                  "kind": "Content",
                  "text": "SELF"
                },
                {
                  "kind": "Content",
                  "text": ", roleName: "
                },
                {
                  "kind": "Content",
                  "text": "RN"
                },
                {
                  "kind": "Content",
                  "text": ", charterData?: "
                },
                {
                  "kind": "Reference",
                  "text": "CharterData",
                  "canonicalReference": "@donecollectively/stellar-contracts!CharterData:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "DelegatedDataContract",
                  "canonicalReference": "@donecollectively/stellar-contracts!DelegatedDataContract:class"
                },
                {
                  "kind": "Content",
                  "text": "<any, any>>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "RN",
                  "constraintTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 9,
                "endIndex": 13
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "this",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "roleName",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "charterData",
                  "parameterTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 8
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "getDgDataController"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!Capo#getGovDelegate:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getGovDelegate(charterData?: "
                },
                {
                  "kind": "Reference",
                  "text": "CharterData",
                  "canonicalReference": "@donecollectively/stellar-contracts!CharterData:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<void>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "charterData",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "getGovDelegate"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!Capo#getMintDelegate:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getMintDelegate(charterData?: "
                },
                {
                  "kind": "Reference",
                  "text": "CharterData",
                  "canonicalReference": "@donecollectively/stellar-contracts!CharterData:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "BasicMintDelegate",
                  "canonicalReference": "@donecollectively/stellar-contracts!BasicMintDelegate:class"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "charterData",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "getMintDelegate"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!Capo#getMinterParams:member(1)",
              "docComment": "/**\n * provides minter-targeted params extracted from the input configuration\n *\n * @remarks\n *\n * extracts the seed-txn details that are key to parameterizing the minter contract\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getMinterParams(): "
                },
                {
                  "kind": "Content",
                  "text": "{\n        seedTxn: import(\"@helios-lang/ledger\")."
                },
                {
                  "kind": "Reference",
                  "text": "TxId",
                  "canonicalReference": "@helios-lang/ledger!TxId:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        seedIndex: bigint;\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "getMinterParams"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!Capo#getNamedDelegate:member(1)",
              "docComment": "/**\n * @deprecated\n *\n * - use getOtherNamedDelegate() or getDgDataController() instead\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getNamedDelegate(): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "getNamedDelegate"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!Capo#getNamedDelegates:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getNamedDelegates(charterData?: "
                },
                {
                  "kind": "Reference",
                  "text": "CharterData",
                  "canonicalReference": "@donecollectively/stellar-contracts!CharterData:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<{\n        [k: string]: "
                },
                {
                  "kind": "Reference",
                  "text": "ContractBasedDelegate",
                  "canonicalReference": "@donecollectively/stellar-contracts!ContractBasedDelegate:class"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "charterData",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "getNamedDelegates"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!Capo#getOtherNamedDelegate:member(1)",
              "docComment": "/**\n * Finds a contract's named delegate, given the expected delegateName.\n *\n * @remarks\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getOtherNamedDelegate(delegateName: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", charterData?: "
                },
                {
                  "kind": "Reference",
                  "text": "CharterData",
                  "canonicalReference": "@donecollectively/stellar-contracts!CharterData:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "ContractBasedDelegate",
                  "canonicalReference": "@donecollectively/stellar-contracts!ContractBasedDelegate:class"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "delegateName",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "charterData",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "getOtherNamedDelegate"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!Capo#getSettingsController:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getSettingsController(this: "
                },
                {
                  "kind": "Content",
                  "text": "SELF"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "DelegatedDataContract",
                  "canonicalReference": "@donecollectively/stellar-contracts!DelegatedDataContract:class"
                },
                {
                  "kind": "Content",
                  "text": "<any, any>>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "this",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "getSettingsController"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!Capo#getSpendDelegate:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getSpendDelegate(charterData?: "
                },
                {
                  "kind": "Reference",
                  "text": "CharterData",
                  "canonicalReference": "@donecollectively/stellar-contracts!CharterData:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "BasicMintDelegate",
                  "canonicalReference": "@donecollectively/stellar-contracts!BasicMintDelegate:class"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "charterData",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "getSpendDelegate"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!Capo#init:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "init(args: "
                },
                {
                  "kind": "Reference",
                  "text": "StellarFactoryArgs",
                  "canonicalReference": "@donecollectively/stellar-contracts!StellarFactoryArgs:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "CapoConfig",
                  "canonicalReference": "@donecollectively/stellar-contracts!CapoConfig:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<this>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "args",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 5
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "init"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!Capo#initDelegateRoles:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "abstract initDelegateRoles(): "
                },
                {
                  "kind": "Reference",
                  "text": "basicDelegateMap",
                  "canonicalReference": "@donecollectively/stellar-contracts!~basicDelegateMap:type"
                },
                {
                  "kind": "Content",
                  "text": "<any>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": true,
              "name": "initDelegateRoles"
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!Capo#isConfigured:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get isConfigured(): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<boolean>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "isConfigured",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!Capo#minter:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "minter: "
                },
                {
                  "kind": "Reference",
                  "text": "CapoMinter",
                  "canonicalReference": "@donecollectively/stellar-contracts!CapoMinter:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "minter",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!Capo#minterClass:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get minterClass(): "
                },
                {
                  "kind": "Reference",
                  "text": "stellarSubclass",
                  "canonicalReference": "@donecollectively/stellar-contracts!stellarSubclass:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "CapoMinter",
                  "canonicalReference": "@donecollectively/stellar-contracts!CapoMinter:class"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "minterClass",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!Capo#mintingPolicyHash:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get mintingPolicyHash(): "
                },
                {
                  "kind": "Reference",
                  "text": "MintingPolicyHash",
                  "canonicalReference": "@helios-lang/ledger!MintingPolicyHash:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "mintingPolicyHash",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!Capo#mkAdditionalTxnsForCharter:member(1)",
              "docComment": "/**\n * Creates any additional transactions needed during charter creation\n *\n * @remarks\n *\n * This method is a hook for subclasses to add extra transactions during the charter creation process. It is called during the creation of the charter transaction.\n *\n * The Capo has a {@link Capo.bootstrapping | `bootstrapping`} property that can be referenced as needed during extra transaction creation.\n *\n * This method should use {@link StellarTxnContext.includeAddlTxn} to add transactions to the context.\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "mkAdditionalTxnsForCharter<TCX extends "
                },
                {
                  "kind": "Reference",
                  "text": "StellarTxnContext",
                  "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext:class"
                },
                {
                  "kind": "Content",
                  "text": ">(tcx: "
                },
                {
                  "kind": "Content",
                  "text": "TCX"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<TCX>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "TCX",
                  "constraintTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "tcx",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "mkAdditionalTxnsForCharter"
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!Capo#mkDatum:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get mkDatum(): "
                },
                {
                  "kind": "Reference",
                  "text": "mustFindDatumType",
                  "canonicalReference": "@donecollectively/stellar-contracts!~mustFindDatumType:type"
                },
                {
                  "kind": "Content",
                  "text": "<this>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "mkDatum",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!Capo#mkDatumScriptReference:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "mkDatumScriptReference(): "
                },
                {
                  "kind": "Content",
                  "text": "import(\"@helios-lang/ledger\")."
                },
                {
                  "kind": "Reference",
                  "text": "InlineTxOutputDatum",
                  "canonicalReference": "@helios-lang/ledger!InlineTxOutputDatum:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "mkDatumScriptReference"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!Capo#mkDelegatePredicate:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "mkDelegatePredicate(dgtLink: "
                },
                {
                  "kind": "Reference",
                  "text": "ErgoRelativeDelegateLink",
                  "canonicalReference": "@donecollectively/stellar-contracts!~ErgoRelativeDelegateLink:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "tokenPredicate",
                  "canonicalReference": "@donecollectively/stellar-contracts!~tokenPredicate:type"
                },
                {
                  "kind": "Content",
                  "text": "<any>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "dgtLink",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "mkDelegatePredicate"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!Capo#mkImpliedDelegationDetails:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "mkImpliedDelegationDetails(uut: "
                },
                {
                  "kind": "Reference",
                  "text": "UutName",
                  "canonicalReference": "@donecollectively/stellar-contracts!UutName:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "DelegationDetail",
                  "canonicalReference": "@donecollectively/stellar-contracts!~DelegationDetail_2:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "uut",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "mkImpliedDelegationDetails"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!Capo#mkOnchainRelativeDelegateLink:member(1)",
              "docComment": "/**\n * extracts the key details for creating an on-chain delegate link, given a setup-phase configuration for that delegate.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "mkOnchainRelativeDelegateLink<CT extends "
                },
                {
                  "kind": "Reference",
                  "text": "ConfiguredDelegate",
                  "canonicalReference": "@donecollectively/stellar-contracts!ConfiguredDelegate:type"
                },
                {
                  "kind": "Content",
                  "text": "<any>"
                },
                {
                  "kind": "Content",
                  "text": ">(configured: "
                },
                {
                  "kind": "Content",
                  "text": "CT"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "RelativeDelegateLinkLike",
                  "canonicalReference": "@donecollectively/stellar-contracts!~RelativeDelegateLinkLike:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "CT",
                  "constraintTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "configured",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "mkOnchainRelativeDelegateLink"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!Capo#mkRefScriptTxn:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "mkRefScriptTxn(script: "
                },
                {
                  "kind": "Reference",
                  "text": "anyUplcProgram",
                  "canonicalReference": "@donecollectively/stellar-contracts!~anyUplcProgram:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "StellarTxnContext",
                  "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "script",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "mkRefScriptTxn"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!Capo#mkTxnAddingMintInvariant:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "mkTxnAddingMintInvariant<THIS extends "
                },
                {
                  "kind": "Reference",
                  "text": "Capo",
                  "canonicalReference": "@donecollectively/stellar-contracts!Capo:class"
                },
                {
                  "kind": "Content",
                  "text": "<any>"
                },
                {
                  "kind": "Content",
                  "text": ", TCX extends "
                },
                {
                  "kind": "Reference",
                  "text": "hasSeedUtxo",
                  "canonicalReference": "@donecollectively/stellar-contracts!hasSeedUtxo:type"
                },
                {
                  "kind": "Content",
                  "text": " = "
                },
                {
                  "kind": "Reference",
                  "text": "hasSeedUtxo",
                  "canonicalReference": "@donecollectively/stellar-contracts!hasSeedUtxo:type"
                },
                {
                  "kind": "Content",
                  "text": ">(this: "
                },
                {
                  "kind": "Content",
                  "text": "THIS"
                },
                {
                  "kind": "Content",
                  "text": ", delegateInfo: "
                },
                {
                  "kind": "Reference",
                  "text": "OffchainPartialDelegateLink",
                  "canonicalReference": "@donecollectively/stellar-contracts!OffchainPartialDelegateLink:type"
                },
                {
                  "kind": "Content",
                  "text": ", tcx?: "
                },
                {
                  "kind": "Content",
                  "text": "TCX"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "StellarTxnContext",
                  "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext:class"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "THIS",
                  "constraintTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "typeParameterName": "TCX",
                  "constraintTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 6,
                    "endIndex": 7
                  }
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 14,
                "endIndex": 18
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "this",
                  "parameterTypeTokenRange": {
                    "startIndex": 8,
                    "endIndex": 9
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "delegateInfo",
                  "parameterTypeTokenRange": {
                    "startIndex": 10,
                    "endIndex": 11
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "tcx",
                  "parameterTypeTokenRange": {
                    "startIndex": 12,
                    "endIndex": 13
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "mkTxnAddingMintInvariant"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!Capo#mkTxnAddingNamedDelegate:member(1)",
              "docComment": "/**\n * Adds or replaces a named delegate in the Capo contract\n *\n * @remarks\n *\n * Registers a new delegate, keyed by its name. The delegate may replace another\n *\n * Other contract scripts can reference named delegates through the contract's charter, requiring their presence in a transaction - thus delegating some portion of validation responsibility to the other script\n *\n * @param delegateName - the key that will be used in the on-chain data structures and in dependent contracts.\n *\n * @param options - configuration for the delegate\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "mkTxnAddingNamedDelegate<DT extends "
                },
                {
                  "kind": "Reference",
                  "text": "StellarDelegate",
                  "canonicalReference": "@donecollectively/stellar-contracts!StellarDelegate:class"
                },
                {
                  "kind": "Content",
                  "text": ", thisType extends "
                },
                {
                  "kind": "Reference",
                  "text": "Capo",
                  "canonicalReference": "@donecollectively/stellar-contracts!Capo:class"
                },
                {
                  "kind": "Content",
                  "text": "<any>"
                },
                {
                  "kind": "Content",
                  "text": ", const delegateName extends "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", TCX extends "
                },
                {
                  "kind": "Reference",
                  "text": "hasSeedUtxo",
                  "canonicalReference": "@donecollectively/stellar-contracts!hasSeedUtxo:type"
                },
                {
                  "kind": "Content",
                  "text": " = "
                },
                {
                  "kind": "Reference",
                  "text": "hasSeedUtxo",
                  "canonicalReference": "@donecollectively/stellar-contracts!hasSeedUtxo:type"
                },
                {
                  "kind": "Content",
                  "text": ">(this: "
                },
                {
                  "kind": "Content",
                  "text": "thisType"
                },
                {
                  "kind": "Content",
                  "text": ", delegateName: "
                },
                {
                  "kind": "Content",
                  "text": "delegateName"
                },
                {
                  "kind": "Content",
                  "text": ", options: "
                },
                {
                  "kind": "Reference",
                  "text": "OffchainPartialDelegateLink",
                  "canonicalReference": "@donecollectively/stellar-contracts!OffchainPartialDelegateLink:type"
                },
                {
                  "kind": "Content",
                  "text": " & "
                },
                {
                  "kind": "Reference",
                  "text": "NamedPolicyCreationOptions",
                  "canonicalReference": "@donecollectively/stellar-contracts!NamedPolicyCreationOptions:type"
                },
                {
                  "kind": "Content",
                  "text": "<thisType, DT>"
                },
                {
                  "kind": "Content",
                  "text": ", tcx?: "
                },
                {
                  "kind": "Content",
                  "text": "TCX"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "hasAddlTxns",
                  "canonicalReference": "@donecollectively/stellar-contracts!hasAddlTxns:type"
                },
                {
                  "kind": "Content",
                  "text": "<TCX & "
                },
                {
                  "kind": "Reference",
                  "text": "hasSeedUtxo",
                  "canonicalReference": "@donecollectively/stellar-contracts!hasSeedUtxo:type"
                },
                {
                  "kind": "Content",
                  "text": " & "
                },
                {
                  "kind": "Reference",
                  "text": "hasNamedDelegate",
                  "canonicalReference": "@donecollectively/stellar-contracts!hasNamedDelegate:type"
                },
                {
                  "kind": "Content",
                  "text": "<DT, delegateName>>>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "DT",
                  "constraintTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "typeParameterName": "thisType",
                  "constraintTokenRange": {
                    "startIndex": 3,
                    "endIndex": 5
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "typeParameterName": "delegateName",
                  "constraintTokenRange": {
                    "startIndex": 6,
                    "endIndex": 7
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "typeParameterName": "TCX",
                  "constraintTokenRange": {
                    "startIndex": 8,
                    "endIndex": 9
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 10,
                    "endIndex": 11
                  }
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 23,
                "endIndex": 31
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "this",
                  "parameterTypeTokenRange": {
                    "startIndex": 12,
                    "endIndex": 13
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "delegateName",
                  "parameterTypeTokenRange": {
                    "startIndex": 14,
                    "endIndex": 15
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 16,
                    "endIndex": 20
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "tcx",
                  "parameterTypeTokenRange": {
                    "startIndex": 21,
                    "endIndex": 22
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "mkTxnAddingNamedDelegate"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!Capo#mkTxnAddingSpendInvariant:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "mkTxnAddingSpendInvariant<THIS extends "
                },
                {
                  "kind": "Reference",
                  "text": "Capo",
                  "canonicalReference": "@donecollectively/stellar-contracts!Capo:class"
                },
                {
                  "kind": "Content",
                  "text": "<any>"
                },
                {
                  "kind": "Content",
                  "text": ", const SN extends "
                },
                {
                  "kind": "Content",
                  "text": "string & keyof THIS[\"delegateRoles\"][\"spendDelegate\"][\"variants\"]"
                },
                {
                  "kind": "Content",
                  "text": ", TCX extends "
                },
                {
                  "kind": "Reference",
                  "text": "hasSeedUtxo",
                  "canonicalReference": "@donecollectively/stellar-contracts!hasSeedUtxo:type"
                },
                {
                  "kind": "Content",
                  "text": " = "
                },
                {
                  "kind": "Reference",
                  "text": "hasSeedUtxo",
                  "canonicalReference": "@donecollectively/stellar-contracts!hasSeedUtxo:type"
                },
                {
                  "kind": "Content",
                  "text": ">(this: "
                },
                {
                  "kind": "Content",
                  "text": "THIS"
                },
                {
                  "kind": "Content",
                  "text": ", delegateInfo: "
                },
                {
                  "kind": "Reference",
                  "text": "OffchainPartialDelegateLink",
                  "canonicalReference": "@donecollectively/stellar-contracts!OffchainPartialDelegateLink:type"
                },
                {
                  "kind": "Content",
                  "text": ", tcx?: "
                },
                {
                  "kind": "Content",
                  "text": "TCX"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "hasUutContext",
                  "canonicalReference": "@donecollectively/stellar-contracts!hasUutContext:type"
                },
                {
                  "kind": "Content",
                  "text": "<\"spendDelegate\" | \"spendDgt\"> & TCX & "
                },
                {
                  "kind": "Reference",
                  "text": "hasSeedUtxo",
                  "canonicalReference": "@donecollectively/stellar-contracts!hasSeedUtxo:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "THIS",
                  "constraintTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "typeParameterName": "SN",
                  "constraintTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "typeParameterName": "TCX",
                  "constraintTokenRange": {
                    "startIndex": 6,
                    "endIndex": 7
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 8,
                    "endIndex": 9
                  }
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 16,
                "endIndex": 22
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "this",
                  "parameterTypeTokenRange": {
                    "startIndex": 10,
                    "endIndex": 11
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "delegateInfo",
                  "parameterTypeTokenRange": {
                    "startIndex": 12,
                    "endIndex": 13
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "tcx",
                  "parameterTypeTokenRange": {
                    "startIndex": 14,
                    "endIndex": 15
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "mkTxnAddingSpendInvariant"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!Capo#mkTxnAddManifestEntry:member(1)",
              "docComment": "/**\n * Adds a new entry to the Capo's manifest\n *\n * @remarks\n *\n * Use mkTxnQueueingDelegateChange for changing DgDataPolicy entries.\n *\n * The type exclusions here mean this CURRENTLY works only with the NamedTokenRef variety of manifest entry, but that's just pragmatic because the other types don't yet have an implementation. Other types can be eligible for adding to this API or to a different call.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "mkTxnAddManifestEntry<THIS extends "
                },
                {
                  "kind": "Reference",
                  "text": "Capo",
                  "canonicalReference": "@donecollectively/stellar-contracts!Capo:class"
                },
                {
                  "kind": "Content",
                  "text": "<any>"
                },
                {
                  "kind": "Content",
                  "text": ", TCX extends "
                },
                {
                  "kind": "Reference",
                  "text": "StellarTxnContext",
                  "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext:class"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "anyState",
                  "canonicalReference": "@donecollectively/stellar-contracts!anyState:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": " = "
                },
                {
                  "kind": "Reference",
                  "text": "StellarTxnContext",
                  "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext:class"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "anyState",
                  "canonicalReference": "@donecollectively/stellar-contracts!anyState:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ">(this: "
                },
                {
                  "kind": "Content",
                  "text": "THIS"
                },
                {
                  "kind": "Content",
                  "text": ", key: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", utxo: "
                },
                {
                  "kind": "Reference",
                  "text": "FoundDatumUtxo",
                  "canonicalReference": "@donecollectively/stellar-contracts!FoundDatumUtxo:type"
                },
                {
                  "kind": "Content",
                  "text": "<any, any>"
                },
                {
                  "kind": "Content",
                  "text": ", entry: "
                },
                {
                  "kind": "Reference",
                  "text": "ManifestEntryTokenRef",
                  "canonicalReference": "@donecollectively/stellar-contracts!~ManifestEntryTokenRef:type"
                },
                {
                  "kind": "Content",
                  "text": ", tcx?: "
                },
                {
                  "kind": "Content",
                  "text": "TCX"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "StellarTxnContext",
                  "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext:class"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "anyState",
                  "canonicalReference": "@donecollectively/stellar-contracts!anyState:interface"
                },
                {
                  "kind": "Content",
                  "text": ">>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "THIS",
                  "constraintTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "typeParameterName": "TCX",
                  "constraintTokenRange": {
                    "startIndex": 4,
                    "endIndex": 8
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 9,
                    "endIndex": 13
                  }
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 25,
                "endIndex": 31
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "this",
                  "parameterTypeTokenRange": {
                    "startIndex": 14,
                    "endIndex": 15
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "key",
                  "parameterTypeTokenRange": {
                    "startIndex": 16,
                    "endIndex": 17
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "utxo",
                  "parameterTypeTokenRange": {
                    "startIndex": 18,
                    "endIndex": 20
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "entry",
                  "parameterTypeTokenRange": {
                    "startIndex": 21,
                    "endIndex": 22
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "tcx",
                  "parameterTypeTokenRange": {
                    "startIndex": 23,
                    "endIndex": 24
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "mkTxnAddManifestEntry"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!Capo#mkTxnCommittingPendingChanges:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "mkTxnCommittingPendingChanges<TCX extends "
                },
                {
                  "kind": "Reference",
                  "text": "StellarTxnContext",
                  "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext:class"
                },
                {
                  "kind": "Content",
                  "text": ">(tcx?: "
                },
                {
                  "kind": "Content",
                  "text": "TCX"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "StellarTxnContext",
                  "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext:class"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "anyState",
                  "canonicalReference": "@donecollectively/stellar-contracts!anyState:interface"
                },
                {
                  "kind": "Content",
                  "text": ">>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "TCX",
                  "constraintTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 11
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "tcx",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "mkTxnCommittingPendingChanges"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!Capo#mkTxnInstallingPolicyDelegate:member(1)",
              "docComment": "/**\n * Helper for installing a named policy delegate\n *\n * @remarks\n *\n * Creates a transaction for adding a delegate-data-policy to the Capo. TODO: support also updating an existing delegate to a new policy script.\n *\n * The designated role name refers to the a key in the Capo's delegateRoles list - typically the full `typename` of a delegated-data-policy.\n *\n * The idPrefix refers to the short prefix used for UUT id's for this data-type.\n *\n * An addlTxn for ref-script creation is included.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "mkTxnInstallingPolicyDelegate<const RoLabel extends "
                },
                {
                  "kind": "Content",
                  "text": "string & keyof SELF[\"delegateRoles\"]"
                },
                {
                  "kind": "Content",
                  "text": ", THIS extends "
                },
                {
                  "kind": "Reference",
                  "text": "Capo",
                  "canonicalReference": "@donecollectively/stellar-contracts!Capo:class"
                },
                {
                  "kind": "Content",
                  "text": "<any>"
                },
                {
                  "kind": "Content",
                  "text": ">(this: "
                },
                {
                  "kind": "Content",
                  "text": "THIS"
                },
                {
                  "kind": "Content",
                  "text": ", dgtRole: "
                },
                {
                  "kind": "Content",
                  "text": "RoLabel"
                },
                {
                  "kind": "Content",
                  "text": ", idPrefix: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", charter?: "
                },
                {
                  "kind": "Reference",
                  "text": "CapoDatum$Ergo$CharterData",
                  "canonicalReference": "@donecollectively/stellar-contracts!~CapoDatum$Ergo$CharterData:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "hasAddlTxns",
                  "canonicalReference": "@donecollectively/stellar-contracts!hasAddlTxns:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "StellarTxnContext",
                  "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext:class"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "anyState",
                  "canonicalReference": "@donecollectively/stellar-contracts!anyState:interface"
                },
                {
                  "kind": "Content",
                  "text": "> & "
                },
                {
                  "kind": "Reference",
                  "text": "hasSeedUtxo",
                  "canonicalReference": "@donecollectively/stellar-contracts!hasSeedUtxo:type"
                },
                {
                  "kind": "Content",
                  "text": " & "
                },
                {
                  "kind": "Reference",
                  "text": "hasNamedDelegate",
                  "canonicalReference": "@donecollectively/stellar-contracts!hasNamedDelegate:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "StellarDelegate",
                  "canonicalReference": "@donecollectively/stellar-contracts!StellarDelegate:class"
                },
                {
                  "kind": "Content",
                  "text": ", RoLabel, \"dgData\">> & "
                },
                {
                  "kind": "Reference",
                  "text": "hasUutContext",
                  "canonicalReference": "@donecollectively/stellar-contracts!hasUutContext:type"
                },
                {
                  "kind": "Content",
                  "text": "<\"dgDataPolicy\" | RoLabel>>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "RoLabel",
                  "constraintTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "typeParameterName": "THIS",
                  "constraintTokenRange": {
                    "startIndex": 3,
                    "endIndex": 5
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 14,
                "endIndex": 30
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "this",
                  "parameterTypeTokenRange": {
                    "startIndex": 6,
                    "endIndex": 7
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "dgtRole",
                  "parameterTypeTokenRange": {
                    "startIndex": 8,
                    "endIndex": 9
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "idPrefix",
                  "parameterTypeTokenRange": {
                    "startIndex": 10,
                    "endIndex": 11
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "charter",
                  "parameterTypeTokenRange": {
                    "startIndex": 12,
                    "endIndex": 13
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "mkTxnInstallingPolicyDelegate"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!Capo#mkTxnMintCharterToken:member(1)",
              "docComment": "/**\n * Initiates a seeding transaction, creating a new Capo contract of this type\n *\n * @remarks\n *\n * The returned transaction context has `state.bootstrappedConfig` for capturing the details for reproducing the contract's settings and on-chain address.\n *\n * @param charterDataArgs - initial details for the charter datum\n *\n * @param existinTcx - any existing transaction context\n *\n * @typeParam TCX - inferred type of a provided transaction context\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "mkTxnMintCharterToken<TCX extends "
                },
                {
                  "kind": "Content",
                  "text": "undefined | "
                },
                {
                  "kind": "Reference",
                  "text": "StellarTxnContext",
                  "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext:class"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "anyState",
                  "canonicalReference": "@donecollectively/stellar-contracts!anyState:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ", TCX2 extends "
                },
                {
                  "kind": "Reference",
                  "text": "StellarTxnContext",
                  "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext:class"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "anyState",
                  "canonicalReference": "@donecollectively/stellar-contracts!anyState:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": " = "
                },
                {
                  "kind": "Reference",
                  "text": "hasBootstrappedCapoConfig",
                  "canonicalReference": "@donecollectively/stellar-contracts!hasBootstrappedConfig:type"
                },
                {
                  "kind": "Content",
                  "text": " & (TCX extends "
                },
                {
                  "kind": "Reference",
                  "text": "StellarTxnContext",
                  "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext:class"
                },
                {
                  "kind": "Content",
                  "text": "<infer TCXT> ? "
                },
                {
                  "kind": "Reference",
                  "text": "StellarTxnContext",
                  "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext:class"
                },
                {
                  "kind": "Content",
                  "text": "<TCXT> : unknown)"
                },
                {
                  "kind": "Content",
                  "text": ", TCX3 = "
                },
                {
                  "kind": "Content",
                  "text": "TCX2 & "
                },
                {
                  "kind": "Reference",
                  "text": "hasAddlTxns",
                  "canonicalReference": "@donecollectively/stellar-contracts!hasAddlTxns:type"
                },
                {
                  "kind": "Content",
                  "text": "<TCX2> & "
                },
                {
                  "kind": "Reference",
                  "text": "hasUutContext",
                  "canonicalReference": "@donecollectively/stellar-contracts!hasUutContext:type"
                },
                {
                  "kind": "Content",
                  "text": "<\"govAuthority\" | \"capoGov\" | \"mintDelegate\" | \"mintDgt\" | \"setting\">"
                },
                {
                  "kind": "Content",
                  "text": ">(charterDataArgs: "
                },
                {
                  "kind": "Reference",
                  "text": "MinimalCharterDataArgs",
                  "canonicalReference": "@donecollectively/stellar-contracts!MinimalCharterDataArgs:interface"
                },
                {
                  "kind": "Content",
                  "text": ", existingTcx?: "
                },
                {
                  "kind": "Content",
                  "text": "TCX"
                },
                {
                  "kind": "Content",
                  "text": ", dryRun?: "
                },
                {
                  "kind": "Content",
                  "text": "\"DRY_RUN\""
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<TCX3 & "
                },
                {
                  "kind": "Reference",
                  "text": "Awaited",
                  "canonicalReference": "!Awaited:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "hasUutContext",
                  "canonicalReference": "@donecollectively/stellar-contracts!hasUutContext:type"
                },
                {
                  "kind": "Content",
                  "text": "<\"mintDelegate\" | \"capoGov\" | \"spendDelegate\" | \"govAuthority\" | \"mintDgt\" | \"spendDgt\"> & TCX2 & "
                },
                {
                  "kind": "Reference",
                  "text": "hasBootstrappedCapoConfig",
                  "canonicalReference": "@donecollectively/stellar-contracts!hasBootstrappedConfig:type"
                },
                {
                  "kind": "Content",
                  "text": " & "
                },
                {
                  "kind": "Reference",
                  "text": "hasSeedUtxo",
                  "canonicalReference": "@donecollectively/stellar-contracts!hasSeedUtxo:type"
                },
                {
                  "kind": "Content",
                  "text": ">>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "TCX",
                  "constraintTokenRange": {
                    "startIndex": 1,
                    "endIndex": 6
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "typeParameterName": "TCX2",
                  "constraintTokenRange": {
                    "startIndex": 7,
                    "endIndex": 11
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 12,
                    "endIndex": 18
                  }
                },
                {
                  "typeParameterName": "TCX3",
                  "constraintTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 19,
                    "endIndex": 24
                  }
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 31,
                "endIndex": 41
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "charterDataArgs",
                  "parameterTypeTokenRange": {
                    "startIndex": 25,
                    "endIndex": 26
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "existingTcx",
                  "parameterTypeTokenRange": {
                    "startIndex": 27,
                    "endIndex": 28
                  },
                  "isOptional": true
                },
                {
                  "parameterName": "dryRun",
                  "parameterTypeTokenRange": {
                    "startIndex": 29,
                    "endIndex": 30
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "mkTxnMintCharterToken"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!Capo#mkTxnQueuingDelegateChange:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "mkTxnQueuingDelegateChange<DT extends "
                },
                {
                  "kind": "Reference",
                  "text": "StellarDelegate",
                  "canonicalReference": "@donecollectively/stellar-contracts!StellarDelegate:class"
                },
                {
                  "kind": "Content",
                  "text": ", THIS extends "
                },
                {
                  "kind": "Reference",
                  "text": "Capo",
                  "canonicalReference": "@donecollectively/stellar-contracts!Capo:class"
                },
                {
                  "kind": "Content",
                  "text": "<any>"
                },
                {
                  "kind": "Content",
                  "text": ", const RoLabel extends "
                },
                {
                  "kind": "Content",
                  "text": "string & keyof SELF[\"delegateRoles\"]"
                },
                {
                  "kind": "Content",
                  "text": ", OPTIONS extends "
                },
                {
                  "kind": "Reference",
                  "text": "OffchainPartialDelegateLink",
                  "canonicalReference": "@donecollectively/stellar-contracts!OffchainPartialDelegateLink:type"
                },
                {
                  "kind": "Content",
                  "text": ", TCX extends "
                },
                {
                  "kind": "Reference",
                  "text": "StellarTxnContext",
                  "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext:class"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "anyState",
                  "canonicalReference": "@donecollectively/stellar-contracts!anyState:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": " = "
                },
                {
                  "kind": "Reference",
                  "text": "StellarTxnContext",
                  "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext:class"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "anyState",
                  "canonicalReference": "@donecollectively/stellar-contracts!anyState:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ">(this: "
                },
                {
                  "kind": "Content",
                  "text": "THIS"
                },
                {
                  "kind": "Content",
                  "text": ", change: "
                },
                {
                  "kind": "Content",
                  "text": "\"Add\" | \"Replace\""
                },
                {
                  "kind": "Content",
                  "text": ", policyName: "
                },
                {
                  "kind": "Content",
                  "text": "RoLabel"
                },
                {
                  "kind": "Content",
                  "text": ", idPrefix: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", options?: "
                },
                {
                  "kind": "Content",
                  "text": "OPTIONS"
                },
                {
                  "kind": "Content",
                  "text": ", // & NamedPolicyCreationOptions<THIS, DT>,\n    tcx?: "
                },
                {
                  "kind": "Content",
                  "text": "TCX"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "hasAddlTxns",
                  "canonicalReference": "@donecollectively/stellar-contracts!hasAddlTxns:type"
                },
                {
                  "kind": "Content",
                  "text": "<TCX & "
                },
                {
                  "kind": "Reference",
                  "text": "hasNamedDelegate",
                  "canonicalReference": "@donecollectively/stellar-contracts!hasNamedDelegate:type"
                },
                {
                  "kind": "Content",
                  "text": "<DT, RoLabel, \"dgData\">> & "
                },
                {
                  "kind": "Reference",
                  "text": "hasUutContext",
                  "canonicalReference": "@donecollectively/stellar-contracts!hasUutContext:type"
                },
                {
                  "kind": "Content",
                  "text": "<\"dgDataPolicy\" | RoLabel>>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "DT",
                  "constraintTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "typeParameterName": "THIS",
                  "constraintTokenRange": {
                    "startIndex": 3,
                    "endIndex": 5
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "typeParameterName": "RoLabel",
                  "constraintTokenRange": {
                    "startIndex": 6,
                    "endIndex": 7
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "typeParameterName": "OPTIONS",
                  "constraintTokenRange": {
                    "startIndex": 8,
                    "endIndex": 9
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "typeParameterName": "TCX",
                  "constraintTokenRange": {
                    "startIndex": 10,
                    "endIndex": 14
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 15,
                    "endIndex": 19
                  }
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 32,
                "endIndex": 40
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "this",
                  "parameterTypeTokenRange": {
                    "startIndex": 20,
                    "endIndex": 21
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "change",
                  "parameterTypeTokenRange": {
                    "startIndex": 22,
                    "endIndex": 23
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "policyName",
                  "parameterTypeTokenRange": {
                    "startIndex": 24,
                    "endIndex": 25
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "idPrefix",
                  "parameterTypeTokenRange": {
                    "startIndex": 26,
                    "endIndex": 27
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 28,
                    "endIndex": 29
                  },
                  "isOptional": true
                },
                {
                  "parameterName": "tcx",
                  "parameterTypeTokenRange": {
                    "startIndex": 30,
                    "endIndex": 31
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "mkTxnQueuingDelegateChange"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!Capo#mkTxnUpdateCharter:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "mkTxnUpdateCharter<TCX extends "
                },
                {
                  "kind": "Reference",
                  "text": "StellarTxnContext",
                  "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext:class"
                },
                {
                  "kind": "Content",
                  "text": ">(args: "
                },
                {
                  "kind": "Reference",
                  "text": "CharterDataLike",
                  "canonicalReference": "@donecollectively/stellar-contracts!CharterDataLike:type"
                },
                {
                  "kind": "Content",
                  "text": ", activity?: "
                },
                {
                  "kind": "Reference",
                  "text": "isActivity",
                  "canonicalReference": "@donecollectively/stellar-contracts!isActivity:type"
                },
                {
                  "kind": "Content",
                  "text": ", tcx?: "
                },
                {
                  "kind": "Content",
                  "text": "TCX"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "StellarTxnContext",
                  "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext:class"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "TCX",
                  "constraintTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 9,
                "endIndex": 13
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "args",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "activity",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": true
                },
                {
                  "parameterName": "tcx",
                  "parameterTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 8
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "mkTxnUpdateCharter"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!Capo#mkTxnUpdatingMintDelegate:member(1)",
              "docComment": "/**\n * Installs a new Minting delegate to the Capo contract\n *\n * @remarks\n *\n * Updates the policy by which minting under the contract's minting policy is allowed.\n *\n * This supports the evolution of logic for token-minting. Note that updating the minting policy can't modify or interfere with constraints enforced by any existing mintInvariants.\n *\n * Normally, the existing minting delegate is signalled to be Retiring its delegation token, burning it as part of the update transaction and cleaning things up. The minUtxo from the old delegation UUT will be recycled for use in the new delegate.\n *\n * @param delegateInfo - the new minting delegate's info\n *\n * @param options - allows a forced update, which leaves a dangling delegation token in the old minting delegate, but allows the new minting delegate to take over without involving the old delegate in the transaction.\n *\n * @param tcx - any existing transaction context\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "mkTxnUpdatingMintDelegate<THIS extends "
                },
                {
                  "kind": "Reference",
                  "text": "Capo",
                  "canonicalReference": "@donecollectively/stellar-contracts!Capo:class"
                },
                {
                  "kind": "Content",
                  "text": "<any>"
                },
                {
                  "kind": "Content",
                  "text": ", TCX extends "
                },
                {
                  "kind": "Reference",
                  "text": "hasSeedUtxo",
                  "canonicalReference": "@donecollectively/stellar-contracts!hasSeedUtxo:type"
                },
                {
                  "kind": "Content",
                  "text": " = "
                },
                {
                  "kind": "Reference",
                  "text": "hasSeedUtxo",
                  "canonicalReference": "@donecollectively/stellar-contracts!hasSeedUtxo:type"
                },
                {
                  "kind": "Content",
                  "text": ">(this: "
                },
                {
                  "kind": "Content",
                  "text": "THIS"
                },
                {
                  "kind": "Content",
                  "text": ", delegateInfo: "
                },
                {
                  "kind": "Reference",
                  "text": "MinimalDelegateUpdateLink",
                  "canonicalReference": "@donecollectively/stellar-contracts!~MinimalDelegateUpdateLink:type"
                },
                {
                  "kind": "Content",
                  "text": ", tcx?: "
                },
                {
                  "kind": "Content",
                  "text": "TCX"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<TCX & "
                },
                {
                  "kind": "Reference",
                  "text": "hasUutContext",
                  "canonicalReference": "@donecollectively/stellar-contracts!hasUutContext:type"
                },
                {
                  "kind": "Content",
                  "text": "<\"mintDelegate\" | \"mintDgt\"> & "
                },
                {
                  "kind": "Reference",
                  "text": "hasSeedUtxo",
                  "canonicalReference": "@donecollectively/stellar-contracts!hasSeedUtxo:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "THIS",
                  "constraintTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "typeParameterName": "TCX",
                  "constraintTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 6,
                    "endIndex": 7
                  }
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 14,
                "endIndex": 20
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "this",
                  "parameterTypeTokenRange": {
                    "startIndex": 8,
                    "endIndex": 9
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "delegateInfo",
                  "parameterTypeTokenRange": {
                    "startIndex": 10,
                    "endIndex": 11
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "tcx",
                  "parameterTypeTokenRange": {
                    "startIndex": 12,
                    "endIndex": 13
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "mkTxnUpdatingMintDelegate"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!Capo#mkTxnUpdatingSpendDelegate:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "mkTxnUpdatingSpendDelegate<THIS extends "
                },
                {
                  "kind": "Reference",
                  "text": "Capo",
                  "canonicalReference": "@donecollectively/stellar-contracts!Capo:class"
                },
                {
                  "kind": "Content",
                  "text": "<any>"
                },
                {
                  "kind": "Content",
                  "text": ", TCX extends "
                },
                {
                  "kind": "Reference",
                  "text": "hasSeedUtxo",
                  "canonicalReference": "@donecollectively/stellar-contracts!hasSeedUtxo:type"
                },
                {
                  "kind": "Content",
                  "text": " = "
                },
                {
                  "kind": "Reference",
                  "text": "hasSeedUtxo",
                  "canonicalReference": "@donecollectively/stellar-contracts!hasSeedUtxo:type"
                },
                {
                  "kind": "Content",
                  "text": ">(this: "
                },
                {
                  "kind": "Content",
                  "text": "THIS"
                },
                {
                  "kind": "Content",
                  "text": ", delegateInfo: "
                },
                {
                  "kind": "Reference",
                  "text": "MinimalDelegateUpdateLink",
                  "canonicalReference": "@donecollectively/stellar-contracts!~MinimalDelegateUpdateLink:type"
                },
                {
                  "kind": "Content",
                  "text": ", tcx?: "
                },
                {
                  "kind": "Content",
                  "text": "TCX"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<TCX>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "THIS",
                  "constraintTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "typeParameterName": "TCX",
                  "constraintTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 6,
                    "endIndex": 7
                  }
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 14,
                "endIndex": 16
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "this",
                  "parameterTypeTokenRange": {
                    "startIndex": 8,
                    "endIndex": 9
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "delegateInfo",
                  "parameterTypeTokenRange": {
                    "startIndex": 10,
                    "endIndex": 11
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "tcx",
                  "parameterTypeTokenRange": {
                    "startIndex": 12,
                    "endIndex": 13
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "mkTxnUpdatingSpendDelegate"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!Capo#mkValuesBurningDelegateUut:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "mkValuesBurningDelegateUut(current: "
                },
                {
                  "kind": "Reference",
                  "text": "ErgoRelativeDelegateLink",
                  "canonicalReference": "@donecollectively/stellar-contracts!~ErgoRelativeDelegateLink:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "import(\"./HeliosPromotedTypes.js\")."
                },
                {
                  "kind": "Reference",
                  "text": "valuesEntry",
                  "canonicalReference": "@donecollectively/stellar-contracts!valuesEntry:type"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "current",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "mkValuesBurningDelegateUut"
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!Capo#mph:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get mph(): "
                },
                {
                  "kind": "Reference",
                  "text": "MintingPolicyHash",
                  "canonicalReference": "@helios-lang/ledger!MintingPolicyHash:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "mph",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!Capo#mustFindCharterUtxo:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "mustFindCharterUtxo(): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "TxInput",
                  "canonicalReference": "@helios-lang/ledger!TxInput:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "mustFindCharterUtxo"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!Capo#mustGetDelegate:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "mustGetDelegate<T extends "
                },
                {
                  "kind": "Reference",
                  "text": "StellarDelegate",
                  "canonicalReference": "@donecollectively/stellar-contracts!StellarDelegate:class"
                },
                {
                  "kind": "Content",
                  "text": ">(configuredDelegate: "
                },
                {
                  "kind": "Reference",
                  "text": "PreconfiguredDelegate",
                  "canonicalReference": "@donecollectively/stellar-contracts!~PreconfiguredDelegate:type"
                },
                {
                  "kind": "Content",
                  "text": "<T>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<T>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "T",
                  "constraintTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "configuredDelegate",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 5
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "mustGetDelegate"
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!Capo#newReadDatum:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get newReadDatum(): "
                },
                {
                  "kind": "Reference",
                  "text": "mustFindReadDatumType",
                  "canonicalReference": "@donecollectively/stellar-contracts!~mustFindReadDatumType:type"
                },
                {
                  "kind": "Content",
                  "text": "<this>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "newReadDatum",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!Capo#offchain:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get offchain(): "
                },
                {
                  "kind": "Reference",
                  "text": "mustFindConcreteContractBridgeType",
                  "canonicalReference": "@donecollectively/stellar-contracts!~mustFindConcreteContractBridgeType:type"
                },
                {
                  "kind": "Content",
                  "text": "<this>[\"reader\"]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "offchain",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!Capo#offchainLink:member(1)",
              "docComment": "/**\n * parses details in a delegate-link\n *\n * @deprecated\n *\n * - use an adapter for CharterData instead?\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "offchainLink<T extends "
                },
                {
                  "kind": "Reference",
                  "text": "MinimalDelegateLink",
                  "canonicalReference": "@donecollectively/stellar-contracts!MinimalDelegateLink:type"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "OffchainPartialDelegateLink",
                  "canonicalReference": "@donecollectively/stellar-contracts!OffchainPartialDelegateLink:type"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "RelativeDelegateLinkLike",
                  "canonicalReference": "@donecollectively/stellar-contracts!~RelativeDelegateLinkLike:type"
                },
                {
                  "kind": "Content",
                  "text": ">(link: "
                },
                {
                  "kind": "Content",
                  "text": "T"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "T"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "T",
                  "constraintTokenRange": {
                    "startIndex": 1,
                    "endIndex": 6
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 9,
                "endIndex": 10
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "link",
                  "parameterTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 8
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "offchainLink"
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!Capo#onchain:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get onchain(): "
                },
                {
                  "kind": "Reference",
                  "text": "mustFindConcreteContractBridgeType",
                  "canonicalReference": "@donecollectively/stellar-contracts!~mustFindConcreteContractBridgeType:type"
                },
                {
                  "kind": "Content",
                  "text": "<this>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "onchain",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!Capo.parseConfig:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static parseConfig(rawJsonConfig: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        mph: {\n            bytes: string;\n        };\n        rev: bigint;\n        seedTxn?: {\n            bytes: string;\n        };\n        seedIndex: bigint;\n        rootCapoScriptHash: {\n            bytes: string;\n        };\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "rawJsonConfig",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "parseConfig"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!Capo#parseDelegateLinksInCharter:member(1)",
              "docComment": "/**\n * @deprecated\n *\n * - use the bridge type directly, and parseDgtConfig iff we ever need that.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "parseDelegateLinksInCharter(charterData: "
                },
                {
                  "kind": "Reference",
                  "text": "CharterData",
                  "canonicalReference": "@donecollectively/stellar-contracts!CharterData:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "charterData",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "parseDelegateLinksInCharter"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!Capo#parseDgtConfig:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "parseDgtConfig(inLink: // | MinimalDelegateLink\n    "
                },
                {
                  "kind": "Reference",
                  "text": "ErgoRelativeDelegateLink",
                  "canonicalReference": "@donecollectively/stellar-contracts!~ErgoRelativeDelegateLink:type"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "RelativeDelegateLinkLike",
                  "canonicalReference": "@donecollectively/stellar-contracts!~RelativeDelegateLinkLike:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Partial",
                  "canonicalReference": "!Partial:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "capoDelegateConfig",
                  "canonicalReference": "@donecollectively/stellar-contracts!capoDelegateConfig:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "inLink",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "parseDgtConfig"
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!Capo#reader:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get reader(): "
                },
                {
                  "kind": "Reference",
                  "text": "mustFindConcreteContractBridgeType",
                  "canonicalReference": "@donecollectively/stellar-contracts!~mustFindConcreteContractBridgeType:type"
                },
                {
                  "kind": "Content",
                  "text": "<this>[\"reader\"]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "reader",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!Capo#requirements:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "requirements(): "
                },
                {
                  "kind": "Content",
                  "text": "import(\"./Requirements.js\")."
                },
                {
                  "kind": "Reference",
                  "text": "ReqtsMap",
                  "canonicalReference": "@donecollectively/stellar-contracts!ReqtsMap:type"
                },
                {
                  "kind": "Content",
                  "text": "<\"is a base class for leader/Capo pattern\" | \"can create unique utility tokens\" | \"supports the Delegation pattern using roles and strategy-variants\" | \"supports well-typed role declarations and strategy-adding\" | \"supports just-in-time strategy-selection using txnCreateDelegateLink()\" | \"given a configured delegate-link, it can create a ready-to-use Stellar subclass with all the right settings\" | \"supports concrete resolution of existing role delegates\" | \"Each role uses a RoleVariants structure which can accept new variants\" | \"provides a Strategy type for binding a contract to a strategy-variant name\" | \"can locate UUTs in the user's wallet\" | \"positively governs all administrative actions\" | \"has a unique, permanent charter token\" | \"has a unique, permanent treasury address\" | \"the charter token is always kept in the contract\" | \"the charter details can be updated by authority of the capoGov-* token\" | \"can mint other tokens, on the authority of the charter's registered mintDgt- token\" | \"can handle large transactions with reference scripts\" | \"has a singleton minting policy\" | \"can update the minting delegate in the charter data\" | \"can update the spending delegate in the charter data\" | \"can add invariant minting delegates to the charter data\" | \"can add invariant spending delegates to the charter data\" | \"supports an abstract Settings structure stored in the contact\" | \"added and updated delegates always validate the present configuration data\" | \"can commit new delegates\" | \"supports storing new types of datum not pre-defined in the Capo's on-chain script\" | \"the charter has a namedDelegates structure for semantic delegate links\" | \"CreatingDelegatedDatum: creates a UTxO with any custom datum\" | \"UpdatingDelegatedDatum: checks that a custom data element can be updated\", never>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "requirements"
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!Capo#scriptActivitiesName:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get scriptActivitiesName(): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "scriptActivitiesName",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!Capo#scriptBundle:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "scriptBundle(): "
                },
                {
                  "kind": "Reference",
                  "text": "CapoHeliosBundle",
                  "canonicalReference": "@donecollectively/stellar-contracts!CapoHeliosBundle:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "scriptBundle"
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!Capo#scriptDatumName:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get scriptDatumName(): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "scriptDatumName",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!Capo#serializeDgtConfig:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "serializeDgtConfig(config: "
                },
                {
                  "kind": "Reference",
                  "text": "Partial",
                  "canonicalReference": "!Partial:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "capoDelegateConfig",
                  "canonicalReference": "@donecollectively/stellar-contracts!capoDelegateConfig:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "number[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "config",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 5
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "serializeDgtConfig"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!Capo#singleItem:member(1)",
              "docComment": "/**\n * Returns a single item from a list, throwing an error if it has multiple items\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "singleItem<T>(xs: "
                },
                {
                  "kind": "Reference",
                  "text": "Array",
                  "canonicalReference": "!Array:interface"
                },
                {
                  "kind": "Content",
                  "text": "<T>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "T"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "T",
                  "constraintTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "xs",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "singleItem"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!Capo#tcxWithCharterRef:member(1)",
              "docComment": "/**\n * Ensures the transaction context has a reference to the charter token\n *\n * @remarks\n *\n * Accepts a transaction context that may already have a charter reference. Returns a typed tcx with hasCharterRef type.\n *\n * The transaction is typed with the presence of the charter reference (found in tcx.state.charterRef).\n *\n * If the charter reference is already present in the transaction context, the transaction will not be modified.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "tcxWithCharterRef<TCX extends "
                },
                {
                  "kind": "Reference",
                  "text": "StellarTxnContext",
                  "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext:class"
                },
                {
                  "kind": "Content",
                  "text": ">(tcx: "
                },
                {
                  "kind": "Content",
                  "text": "TCX"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<TCX & "
                },
                {
                  "kind": "Reference",
                  "text": "hasCharterRef",
                  "canonicalReference": "@donecollectively/stellar-contracts!hasCharterRef:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "TCX",
                  "constraintTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "tcx",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "tcxWithCharterRef"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!Capo#tcxWithSettingsRef:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "tcxWithSettingsRef<TCX extends "
                },
                {
                  "kind": "Reference",
                  "text": "StellarTxnContext",
                  "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext:class"
                },
                {
                  "kind": "Content",
                  "text": ">(this: "
                },
                {
                  "kind": "Content",
                  "text": "SELF"
                },
                {
                  "kind": "Content",
                  "text": ", tcx: "
                },
                {
                  "kind": "Content",
                  "text": "TCX"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<TCX & "
                },
                {
                  "kind": "Reference",
                  "text": "hasSettingsRef",
                  "canonicalReference": "@donecollectively/stellar-contracts!hasSettingsRef:type"
                },
                {
                  "kind": "Content",
                  "text": "<any, any>>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "TCX",
                  "constraintTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 11
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "this",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "tcx",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "tcxWithSettingsRef"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!Capo#tempMkDelegateLinkForQueuingDgtChange:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "tempMkDelegateLinkForQueuingDgtChange(seedUtxo: "
                },
                {
                  "kind": "Reference",
                  "text": "TxInput",
                  "canonicalReference": "@helios-lang/ledger!TxInput:type"
                },
                {
                  "kind": "Content",
                  "text": ", mintDgtActivity: "
                },
                {
                  "kind": "Reference",
                  "text": "SomeDgtActivityHelper",
                  "canonicalReference": "@donecollectively/stellar-contracts!SomeDgtActivityHelper:type"
                },
                {
                  "kind": "Content",
                  "text": ", purpose: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", policyName: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", idPrefix: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", options: "
                },
                {
                  "kind": "Reference",
                  "text": "OffchainPartialDelegateLink",
                  "canonicalReference": "@donecollectively/stellar-contracts!OffchainPartialDelegateLink:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<{\n        delegateClass: "
                },
                {
                  "kind": "Reference",
                  "text": "stellarSubclass",
                  "canonicalReference": "@donecollectively/stellar-contracts!stellarSubclass:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "ContractBasedDelegate",
                  "canonicalReference": "@donecollectively/stellar-contracts!ContractBasedDelegate:class"
                },
                {
                  "kind": "Content",
                  "text": ">;\n        delegate: "
                },
                {
                  "kind": "Reference",
                  "text": "ContractBasedDelegate",
                  "canonicalReference": "@donecollectively/stellar-contracts!ContractBasedDelegate:class"
                },
                {
                  "kind": "Content",
                  "text": ";\n        roleName: string;\n        fullCapoDgtConfig: "
                },
                {
                  "kind": "Reference",
                  "text": "Partial",
                  "canonicalReference": "!Partial:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "CapoConfig",
                  "canonicalReference": "@donecollectively/stellar-contracts!CapoConfig:type"
                },
                {
                  "kind": "Content",
                  "text": "> & "
                },
                {
                  "kind": "Reference",
                  "text": "capoDelegateConfig",
                  "canonicalReference": "@donecollectively/stellar-contracts!capoDelegateConfig:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n    } & "
                },
                {
                  "kind": "Reference",
                  "text": "OffchainPartialDelegateLink",
                  "canonicalReference": "@donecollectively/stellar-contracts!OffchainPartialDelegateLink:type"
                },
                {
                  "kind": "Content",
                  "text": " & "
                },
                {
                  "kind": "Reference",
                  "text": "Required",
                  "canonicalReference": "!Required:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "OffchainPartialDelegateLink",
                  "canonicalReference": "@donecollectively/stellar-contracts!OffchainPartialDelegateLink:type"
                },
                {
                  "kind": "Content",
                  "text": ">>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 13,
                "endIndex": 33
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "seedUtxo",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "mintDgtActivity",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "purpose",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "policyName",
                  "parameterTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 8
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "idPrefix",
                  "parameterTypeTokenRange": {
                    "startIndex": 9,
                    "endIndex": 10
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 11,
                    "endIndex": 12
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "tempMkDelegateLinkForQueuingDgtChange"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!Capo#tokenAsValue:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "tokenAsValue(tokenName: "
                },
                {
                  "kind": "Content",
                  "text": "string | number[] | "
                },
                {
                  "kind": "Reference",
                  "text": "UutName",
                  "canonicalReference": "@donecollectively/stellar-contracts!UutName:class"
                },
                {
                  "kind": "Content",
                  "text": ", count?: "
                },
                {
                  "kind": "Content",
                  "text": "bigint"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "@helios-lang/ledger!Value:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "tokenName",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "count",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "tokenAsValue"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!Capo#tvCharter:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "tvCharter(): "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "@helios-lang/ledger!Value:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "tvCharter"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!Capo#tvForDelegate:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "tvForDelegate(dgtLink: "
                },
                {
                  "kind": "Reference",
                  "text": "ErgoRelativeDelegateLink",
                  "canonicalReference": "@donecollectively/stellar-contracts!~ErgoRelativeDelegateLink:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "@helios-lang/ledger!Value:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "dgtLink",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "tvForDelegate"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!Capo#txnAddCharterRef:member(1)",
              "docComment": "/**\n * @deprecated\n *\n * - use tcxWithCharterRef() instead\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "txnAddCharterRef<TCX extends "
                },
                {
                  "kind": "Reference",
                  "text": "StellarTxnContext",
                  "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext:class"
                },
                {
                  "kind": "Content",
                  "text": ">(tcx: "
                },
                {
                  "kind": "Content",
                  "text": "TCX"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<TCX & "
                },
                {
                  "kind": "Reference",
                  "text": "hasCharterRef",
                  "canonicalReference": "@donecollectively/stellar-contracts!hasCharterRef:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "TCX",
                  "constraintTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "tcx",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "txnAddCharterRef"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!Capo#txnAddGovAuthority:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "txnAddGovAuthority<TCX extends "
                },
                {
                  "kind": "Reference",
                  "text": "StellarTxnContext",
                  "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext:class"
                },
                {
                  "kind": "Content",
                  "text": ">(tcx: "
                },
                {
                  "kind": "Content",
                  "text": "TCX"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<TCX & "
                },
                {
                  "kind": "Reference",
                  "text": "hasGovAuthority",
                  "canonicalReference": "@donecollectively/stellar-contracts!~hasGovAuthority:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "TCX",
                  "constraintTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "tcx",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "txnAddGovAuthority"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!Capo#txnAddGovAuthorityTokenRef:member(1)",
              "docComment": "/**\n * adds the charter-token, along with its gov-authority UUT, to a transaction context\n *\n * @remarks\n *\n * Uses txnAddGovAuthority() to locate the govAuthority delegate and txnGrantAuthority() to add its authority token to a transaction.\n *\n * The charter-token is included as a reference input.\n *\n * @param tcx - the transaction context\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "txnAddGovAuthorityTokenRef<TCX extends "
                },
                {
                  "kind": "Reference",
                  "text": "StellarTxnContext",
                  "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext:class"
                },
                {
                  "kind": "Content",
                  "text": ">(tcx: "
                },
                {
                  "kind": "Content",
                  "text": "TCX"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<TCX>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "TCX",
                  "constraintTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "tcx",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "txnAddGovAuthorityTokenRef"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!Capo#txnAddNamedDelegateAuthority:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "txnAddNamedDelegateAuthority<TCX extends "
                },
                {
                  "kind": "Reference",
                  "text": "StellarTxnContext",
                  "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext:class"
                },
                {
                  "kind": "Content",
                  "text": ">(tcx: "
                },
                {
                  "kind": "Content",
                  "text": "TCX"
                },
                {
                  "kind": "Content",
                  "text": ", delegateName: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", delegate: "
                },
                {
                  "kind": "Reference",
                  "text": "ContractBasedDelegate",
                  "canonicalReference": "@donecollectively/stellar-contracts!ContractBasedDelegate:class"
                },
                {
                  "kind": "Content",
                  "text": ", activity: "
                },
                {
                  "kind": "Reference",
                  "text": "isActivity",
                  "canonicalReference": "@donecollectively/stellar-contracts!isActivity:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<TCX>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "TCX",
                  "constraintTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 11,
                "endIndex": 13
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "tcx",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "delegateName",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "delegate",
                  "parameterTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 8
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "activity",
                  "parameterTypeTokenRange": {
                    "startIndex": 9,
                    "endIndex": 10
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "txnAddNamedDelegateAuthority"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!Capo#txnAttachScriptOrRefScript:member(1)",
              "docComment": "/**\n * Attach the given script by reference to a transaction\n *\n * @remarks\n *\n * If the given script is found in the Capo's known list of reference scripts, it is used to attach the refScript to the transaction context. Otherwise, the script's bytes are added directly to the transaction.\n *\n * The indicated script is expected to be found in one of the Capo's refScript utxos. Otherwise, a missing-refScript warning is emitted, and the program is added directly to the transaction. If this makes the transaction too big, the console warning will be followed by a thrown error during the transaction's wallet-submission sequence.\n *\n * @param program - the UPLC program to attach to the script\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "txnAttachScriptOrRefScript<TCX extends "
                },
                {
                  "kind": "Reference",
                  "text": "StellarTxnContext",
                  "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext:class"
                },
                {
                  "kind": "Content",
                  "text": ">(tcx: "
                },
                {
                  "kind": "Content",
                  "text": "TCX"
                },
                {
                  "kind": "Content",
                  "text": ", program?: "
                },
                {
                  "kind": "Reference",
                  "text": "anyUplcProgram",
                  "canonicalReference": "@donecollectively/stellar-contracts!~anyUplcProgram:type"
                },
                {
                  "kind": "Content",
                  "text": ", useRefScript?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<TCX>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "TCX",
                  "constraintTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 9,
                "endIndex": 11
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "tcx",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "program",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": true
                },
                {
                  "parameterName": "useRefScript",
                  "parameterTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 8
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "txnAttachScriptOrRefScript"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!Capo#txnCreateConfiguredDelegate:member(1)",
              "docComment": "/**\n * Generates and returns a complete set of delegate settings, given a delegation role and strategy-selection details.\n *\n * @remarks\n *\n * Maps the indicated delegation role to specific UUT details from the provided transaction-context to provide the resulting settings. The transaction context isn't modified.\n *\n * Behaves exactly like (and provides the core implementation of) {@link Capo.txnCreateOffchainDelegateLink | txnCreateDelegateLink()}, returning additional `roleName` and `delegateClass`, to conform with the DelegateSettings type.\n *\n * ### Overriding the Delegate Type The configuration is typed for a contract-based delegate by default. If you need a more general StellarDelegate type (for AuthorityPolicy, for example), you can override the type-parameters (if you are finding that you need to specify a more specific contract-based delegate type, please let us know, as our expectation is that the general type for a contract-based delegate should already provide all the necessary type information for all kinds of contract-based delegate subclasses).\n *\n * See txnCreateDelegateLink for further details.\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "txnCreateConfiguredDelegate<RN extends "
                },
                {
                  "kind": "Content",
                  "text": "string & keyof SELF[\"_delegateRoles\"]"
                },
                {
                  "kind": "Content",
                  "text": ", DT extends "
                },
                {
                  "kind": "Reference",
                  "text": "StellarDelegate",
                  "canonicalReference": "@donecollectively/stellar-contracts!StellarDelegate:class"
                },
                {
                  "kind": "Content",
                  "text": " = "
                },
                {
                  "kind": "Reference",
                  "text": "ContractBasedDelegate",
                  "canonicalReference": "@donecollectively/stellar-contracts!ContractBasedDelegate:class"
                },
                {
                  "kind": "Content",
                  "text": ">(tcx: "
                },
                {
                  "kind": "Reference",
                  "text": "hasUutContext",
                  "canonicalReference": "@donecollectively/stellar-contracts!hasUutContext:type"
                },
                {
                  "kind": "Content",
                  "text": "<RN>"
                },
                {
                  "kind": "Content",
                  "text": ", roleName: "
                },
                {
                  "kind": "Content",
                  "text": "RN"
                },
                {
                  "kind": "Content",
                  "text": ", delegateInfo: "
                },
                {
                  "kind": "Reference",
                  "text": "OffchainPartialDelegateLink",
                  "canonicalReference": "@donecollectively/stellar-contracts!OffchainPartialDelegateLink:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "ConfiguredDelegate",
                  "canonicalReference": "@donecollectively/stellar-contracts!ConfiguredDelegate:type"
                },
                {
                  "kind": "Content",
                  "text": "<DT>>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "RN",
                  "constraintTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "typeParameterName": "DT",
                  "constraintTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  }
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 14,
                "endIndex": 18
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "tcx",
                  "parameterTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 9
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "roleName",
                  "parameterTypeTokenRange": {
                    "startIndex": 10,
                    "endIndex": 11
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "delegateInfo",
                  "parameterTypeTokenRange": {
                    "startIndex": 12,
                    "endIndex": 13
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "txnCreateConfiguredDelegate"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!Capo#txnCreateOffchainDelegateLink:member(1)",
              "docComment": "/**\n * Creates a new delegate link, given a delegation role and and strategy-selection details\n *\n * @remarks\n *\n * Combines partal and implied configuration settings, validating the resulting configuration.\n *\n * It expects the transaction-context to have a UUT whose name (or a UUT roleName) matching the indicated `roleName`. Use {@link Capo.txnWillMintUuts | txnWillMintUuts()} or {@link Capo.txnMintingUuts | txnMintingUuts()} to construct a transaction having that and a compliant txn-type.\n *\n * The resulting delegate-linking details can be used with this.mkRelativeDelegateLink() to encode it as an on-chain RelativeLinkLink in the Capo's charter.\n *\n * The delegate-link is by default a contract-based delegate. If that's not what you want, you can the type-parameters to override it to a more general StellarDelegate type (NOTE: if you find you're needing to specify a more specific contract-based delegate type, please let us know, as our expectation is that the general type for a contract-based delegate should already provide all the necessary type information for all kinds of contract-based delegate subclasses).\n *\n * To get a full DelegateSettings object, use txnCreateDelegateSettings() instead.\n *\n * @param tcx - A transaction-context having state.uuts[roleName] matching the roleName\n *\n * @param roleLabel - the role of the delegate, matched with the `delegateRoles()` of `this`\n *\n * @param delegateInfo - partial detail of the delegation with any details required by the particular role. Its delegate type may be a subclass of the type indicated by the `roleName`.\n *\n * @reqt\n *\n * throws DelegateConfigNeeded with an `errors` entry ... if there are any problems in validating the net configuration settings.\n *\n * @reqt\n *\n * EXPECTS the `tcx` to be minting a UUT for the delegation, ... whose UutName can be found in `tcx.state.uuts[roleName]`\n *\n * @reqt\n *\n * combines base settings from the selected delegate class's `defaultParams` ... adding the delegateRoles()[roleName] configuration for the selected roleName, ... along with any explicit `config` from the provided `delegateInfo` ... and automatically applies a `uut` setting. ... The later properties in this sequence take precedence.\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "txnCreateOffchainDelegateLink<RoLabel extends "
                },
                {
                  "kind": "Content",
                  "text": "string & keyof SELF[\"_delegateRoles\"]"
                },
                {
                  "kind": "Content",
                  "text": ", DT extends "
                },
                {
                  "kind": "Reference",
                  "text": "StellarDelegate",
                  "canonicalReference": "@donecollectively/stellar-contracts!StellarDelegate:class"
                },
                {
                  "kind": "Content",
                  "text": " = "
                },
                {
                  "kind": "Reference",
                  "text": "ContractBasedDelegate",
                  "canonicalReference": "@donecollectively/stellar-contracts!ContractBasedDelegate:class"
                },
                {
                  "kind": "Content",
                  "text": ">(tcx: "
                },
                {
                  "kind": "Reference",
                  "text": "hasUutContext",
                  "canonicalReference": "@donecollectively/stellar-contracts!hasUutContext:type"
                },
                {
                  "kind": "Content",
                  "text": "<RoLabel>"
                },
                {
                  "kind": "Content",
                  "text": ", roleLabel: "
                },
                {
                  "kind": "Content",
                  "text": "RoLabel"
                },
                {
                  "kind": "Content",
                  "text": ", delegateInfo: "
                },
                {
                  "kind": "Reference",
                  "text": "OffchainPartialDelegateLink",
                  "canonicalReference": "@donecollectively/stellar-contracts!OffchainPartialDelegateLink:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "ConfiguredDelegate",
                  "canonicalReference": "@donecollectively/stellar-contracts!ConfiguredDelegate:type"
                },
                {
                  "kind": "Content",
                  "text": "<DT> & "
                },
                {
                  "kind": "Reference",
                  "text": "Required",
                  "canonicalReference": "!Required:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "OffchainPartialDelegateLink",
                  "canonicalReference": "@donecollectively/stellar-contracts!OffchainPartialDelegateLink:type"
                },
                {
                  "kind": "Content",
                  "text": ">>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "RoLabel",
                  "constraintTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "typeParameterName": "DT",
                  "constraintTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  }
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 14,
                "endIndex": 22
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "tcx",
                  "parameterTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 9
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "roleLabel",
                  "parameterTypeTokenRange": {
                    "startIndex": 10,
                    "endIndex": 11
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "delegateInfo",
                  "parameterTypeTokenRange": {
                    "startIndex": 12,
                    "endIndex": 13
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "txnCreateOffchainDelegateLink"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!Capo#txnKeepCharterToken:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "txnKeepCharterToken<TCX extends "
                },
                {
                  "kind": "Reference",
                  "text": "StellarTxnContext",
                  "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext:class"
                },
                {
                  "kind": "Content",
                  "text": ">(tcx: "
                },
                {
                  "kind": "Content",
                  "text": "TCX"
                },
                {
                  "kind": "Content",
                  "text": ", datum: "
                },
                {
                  "kind": "Reference",
                  "text": "TxOutputDatum",
                  "canonicalReference": "@helios-lang/ledger!TxOutputDatum:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "TCX"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "TCX",
                  "constraintTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "tcx",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "datum",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "txnKeepCharterToken"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!Capo#txnMintingUuts:member(1)",
              "docComment": "/**\n * Adds UUT minting to a transaction\n *\n * @remarks\n *\n * Constructs UUTs with the indicated purposes, and adds them to the contract state. This is a useful generic capability to support any application-specific purpose.\n *\n * The provided transaction context must have a seedUtxo - use {@link Capo.tcxWithSeedUtxo | tcxWithSeedUtxo()} to add one from the current user's wallet. The seed utxo is consumed, so it can never be used again; its value will be returned to the user wallet. All the uuts named in the uutPurposes argument will be minted from the same seedUtxo, and will share the same suffix, because it is derived from the seedUtxo's outputId.\n *\n * Many cases of UUT minting are covered by the delegation pattern, where this method is used implicitly.\n *\n * @param initialTcx - an existing transaction context\n *\n * @param uutPurposes - a set of purpose-names (prefixes) for the UUTs to be minted\n *\n * @param options - additional options for the minting operation. In particular, you likely want to provide a custom activity instead of the default uutMinting activity.\n *\n * @param roles - a map of role-names to purpose-names\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "txnMintingUuts<const purposes extends "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", existingTcx extends "
                },
                {
                  "kind": "Reference",
                  "text": "hasSeedUtxo",
                  "canonicalReference": "@donecollectively/stellar-contracts!hasSeedUtxo:type"
                },
                {
                  "kind": "Content",
                  "text": ", const RM extends "
                },
                {
                  "kind": "Reference",
                  "text": "Record",
                  "canonicalReference": "!Record:type"
                },
                {
                  "kind": "Content",
                  "text": "<ROLES, purposes>"
                },
                {
                  "kind": "Content",
                  "text": ", const ROLES extends "
                },
                {
                  "kind": "Content",
                  "text": "keyof RM & string"
                },
                {
                  "kind": "Content",
                  "text": " = "
                },
                {
                  "kind": "Content",
                  "text": "string & keyof RM"
                },
                {
                  "kind": "Content",
                  "text": ">(initialTcx: "
                },
                {
                  "kind": "Content",
                  "text": "existingTcx"
                },
                {
                  "kind": "Content",
                  "text": ", uutPurposes: "
                },
                {
                  "kind": "Content",
                  "text": "purposes[]"
                },
                {
                  "kind": "Content",
                  "text": ", options: "
                },
                {
                  "kind": "Reference",
                  "text": "NormalDelegateSetup",
                  "canonicalReference": "@donecollectively/stellar-contracts!~NormalDelegateSetup:type"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "DelegateSetupWithoutMintDelegate",
                  "canonicalReference": "@donecollectively/stellar-contracts!~DelegateSetupWithoutMintDelegate:type"
                },
                {
                  "kind": "Content",
                  "text": ", roles?: "
                },
                {
                  "kind": "Content",
                  "text": "RM"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "hasUutContext",
                  "canonicalReference": "@donecollectively/stellar-contracts!hasUutContext:type"
                },
                {
                  "kind": "Content",
                  "text": "<ROLES | purposes> & existingTcx>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "purposes",
                  "constraintTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "typeParameterName": "existingTcx",
                  "constraintTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "typeParameterName": "RM",
                  "constraintTokenRange": {
                    "startIndex": 5,
                    "endIndex": 7
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "typeParameterName": "ROLES",
                  "constraintTokenRange": {
                    "startIndex": 8,
                    "endIndex": 9
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 10,
                    "endIndex": 11
                  }
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 22,
                "endIndex": 26
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "initialTcx",
                  "parameterTypeTokenRange": {
                    "startIndex": 12,
                    "endIndex": 13
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "uutPurposes",
                  "parameterTypeTokenRange": {
                    "startIndex": 14,
                    "endIndex": 15
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 16,
                    "endIndex": 19
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "roles",
                  "parameterTypeTokenRange": {
                    "startIndex": 20,
                    "endIndex": 21
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "txnMintingUuts"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!Capo#txnMkAddlRefScriptTxn:member(1)",
              "docComment": "/**\n * Creates an additional reference-script-creation txn\n *\n * @remarks\n *\n * Creates a txn for reference-script creation, and adds it to the current transaction context to also be submitted.\n *\n * The reference script is stored in the Capo contract with a special Datum, and it can be used in future transactions to save space and fees.\n *\n * @param tcx - the transaction context\n *\n * @param scriptName - the name of the script, used in the addlTxn's name\n *\n * @param script - the script to be stored onchain for future reference\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "txnMkAddlRefScriptTxn<TCX extends "
                },
                {
                  "kind": "Reference",
                  "text": "StellarTxnContext",
                  "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext:class"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "anyState",
                  "canonicalReference": "@donecollectively/stellar-contracts!anyState:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ", RETURNS extends "
                },
                {
                  "kind": "Reference",
                  "text": "hasAddlTxns",
                  "canonicalReference": "@donecollectively/stellar-contracts!hasAddlTxns:type"
                },
                {
                  "kind": "Content",
                  "text": "<TCX>"
                },
                {
                  "kind": "Content",
                  "text": " = "
                },
                {
                  "kind": "Content",
                  "text": "TCX extends "
                },
                {
                  "kind": "Reference",
                  "text": "hasAddlTxns",
                  "canonicalReference": "@donecollectively/stellar-contracts!hasAddlTxns:type"
                },
                {
                  "kind": "Content",
                  "text": "<any> ? TCX : "
                },
                {
                  "kind": "Reference",
                  "text": "hasAddlTxns",
                  "canonicalReference": "@donecollectively/stellar-contracts!hasAddlTxns:type"
                },
                {
                  "kind": "Content",
                  "text": "<TCX>"
                },
                {
                  "kind": "Content",
                  "text": ">(tcx: "
                },
                {
                  "kind": "Content",
                  "text": "TCX"
                },
                {
                  "kind": "Content",
                  "text": ", scriptName: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", script: "
                },
                {
                  "kind": "Reference",
                  "text": "anyUplcProgram",
                  "canonicalReference": "@donecollectively/stellar-contracts!~anyUplcProgram:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<RETURNS>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "TCX",
                  "constraintTokenRange": {
                    "startIndex": 1,
                    "endIndex": 5
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "typeParameterName": "RETURNS",
                  "constraintTokenRange": {
                    "startIndex": 6,
                    "endIndex": 8
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 9,
                    "endIndex": 14
                  }
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 21,
                "endIndex": 23
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "tcx",
                  "parameterTypeTokenRange": {
                    "startIndex": 15,
                    "endIndex": 16
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "scriptName",
                  "parameterTypeTokenRange": {
                    "startIndex": 17,
                    "endIndex": 18
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "script",
                  "parameterTypeTokenRange": {
                    "startIndex": 19,
                    "endIndex": 20
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "txnMkAddlRefScriptTxn"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!Capo#txnMustGetSeedUtxo:member(1)",
              "docComment": "/**\n * Finds a sufficient-sized utxo for seeding one or more named tokens\n *\n * @remarks\n *\n * For allocating a charter token (/its minter), one or more UUTs, or other token name(s) to be minted, this function calculates the size of minUtxo needed for all the needed tokens, assuming they'll each be stored in separate utxos. It then finds and returns a UTxO from the current actor's wallet. The utxo is NOT implicitly added to the transaction (use tcx.addInput() to add it).\n *\n * When the transaction context already has some utxo's being consumed, they're not eligible for selection.\n *\n * If the transaction doesn't store the new tokens in separate utxos, any spare lovelace are returned as change in the transaction.\n *\n * @param tcx - transaction context\n *\n * @param purpose - a descriptive purpose used during utxo-finding in case of problems\n *\n * @param tokenNames - the token names to be seeded.\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "txnMustGetSeedUtxo(tcx: "
                },
                {
                  "kind": "Reference",
                  "text": "StellarTxnContext",
                  "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext:class"
                },
                {
                  "kind": "Content",
                  "text": ", purpose: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", tokenNames: "
                },
                {
                  "kind": "Content",
                  "text": "string[]"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "TxInput",
                  "canonicalReference": "@helios-lang/ledger!TxInput:type"
                },
                {
                  "kind": "Content",
                  "text": " | never>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 11
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "tcx",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "purpose",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "tokenNames",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "txnMustGetSeedUtxo"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!Capo#txnMustUseCharterUtxo:member(1)",
              "docComment": "/**\n * finds and spends the Capo's charter utxo, typically for updating its CharterData datum.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "txnMustUseCharterUtxo<TCX extends "
                },
                {
                  "kind": "Reference",
                  "text": "StellarTxnContext",
                  "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext:class"
                },
                {
                  "kind": "Content",
                  "text": ">(tcx: "
                },
                {
                  "kind": "Content",
                  "text": "TCX"
                },
                {
                  "kind": "Content",
                  "text": ", redeemer: "
                },
                {
                  "kind": "Reference",
                  "text": "isActivity",
                  "canonicalReference": "@donecollectively/stellar-contracts!isActivity:type"
                },
                {
                  "kind": "Content",
                  "text": ", newCharterData?: "
                },
                {
                  "kind": "Reference",
                  "text": "CharterDataLike",
                  "canonicalReference": "@donecollectively/stellar-contracts!CharterDataLike:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<TCX>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "TCX",
                  "constraintTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 9,
                "endIndex": 11
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "tcx",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "redeemer",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "newCharterData",
                  "parameterTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 8
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "txnMustUseCharterUtxo"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!Capo#txnMustUseCharterUtxo:member(2)",
              "docComment": "/**\n * @deprecated\n *\n * - use {@link Capo.tcxWithCharterRef | tcxWithCharterRef(tcx)} instead\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "txnMustUseCharterUtxo<TCX extends "
                },
                {
                  "kind": "Reference",
                  "text": "StellarTxnContext",
                  "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext:class"
                },
                {
                  "kind": "Content",
                  "text": ">(tcx: "
                },
                {
                  "kind": "Content",
                  "text": "TCX"
                },
                {
                  "kind": "Content",
                  "text": ", useReferenceInput: "
                },
                {
                  "kind": "Content",
                  "text": "\"refInput\" | true"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<TCX>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "TCX",
                  "constraintTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 2,
              "parameters": [
                {
                  "parameterName": "tcx",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "useReferenceInput",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "txnMustUseCharterUtxo"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!Capo#txnMustUseSpendDelegate:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "txnMustUseSpendDelegate<TCX extends "
                },
                {
                  "kind": "Reference",
                  "text": "hasCharterRef",
                  "canonicalReference": "@donecollectively/stellar-contracts!hasCharterRef:type"
                },
                {
                  "kind": "Content",
                  "text": ">(tcx: "
                },
                {
                  "kind": "Content",
                  "text": "TCX"
                },
                {
                  "kind": "Content",
                  "text": ", spendDelegate: "
                },
                {
                  "kind": "Reference",
                  "text": "ContractBasedDelegate",
                  "canonicalReference": "@donecollectively/stellar-contracts!ContractBasedDelegate:class"
                },
                {
                  "kind": "Content",
                  "text": ", activity: "
                },
                {
                  "kind": "Reference",
                  "text": "isActivity",
                  "canonicalReference": "@donecollectively/stellar-contracts!isActivity:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<TCX & "
                },
                {
                  "kind": "Reference",
                  "text": "hasSpendDelegate",
                  "canonicalReference": "@donecollectively/stellar-contracts!~hasSpendDelegate:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "TCX",
                  "constraintTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 9,
                "endIndex": 13
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "tcx",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "spendDelegate",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "activity",
                  "parameterTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 8
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "txnMustUseSpendDelegate"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!Capo#txnUpdateCharterUtxo:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "txnUpdateCharterUtxo<TCX extends "
                },
                {
                  "kind": "Reference",
                  "text": "StellarTxnContext",
                  "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext:class"
                },
                {
                  "kind": "Content",
                  "text": ">(tcx: "
                },
                {
                  "kind": "Content",
                  "text": "TCX"
                },
                {
                  "kind": "Content",
                  "text": ", redeemer: "
                },
                {
                  "kind": "Reference",
                  "text": "isActivity",
                  "canonicalReference": "@donecollectively/stellar-contracts!isActivity:type"
                },
                {
                  "kind": "Content",
                  "text": ", newDatum: "
                },
                {
                  "kind": "Reference",
                  "text": "CharterDataLike",
                  "canonicalReference": "@donecollectively/stellar-contracts!CharterDataLike:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "StellarTxnContext",
                  "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext:class"
                },
                {
                  "kind": "Content",
                  "text": " | never>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "TCX",
                  "constraintTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 9,
                "endIndex": 13
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "tcx",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "redeemer",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "newDatum",
                  "parameterTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 8
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "txnUpdateCharterUtxo"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!Capo#txnWillMintUuts:member(1)",
              "docComment": "/**\n * Adds UUT types to the transaction context\n *\n * @remarks\n *\n * adds tcx.state.uut entries for each purpose.\n *\n * also adds a second uut entry for each role-name found in the roles map, corresponding to the uut entry for its purpose.\n *\n * NOTE: this method doesn't add a minting instruction to the transaction, so that all the minting/burning needed for the txn can (because it must) be done in one minting instruction.\n *\n * If the uuts being minted are the only minting/burning needed in the transaction, then you can use {@link Capo.txnMintingUuts | txnMintingUuts()} instead of this method.\n *\n * @param tcx - the transaction context\n *\n * @param uutPurposes - a list of short names for the UUTs (will be augmented with unique suffixes)\n *\n * @param usingSeedUtxo - the seed utxo to be used for minting the UUTs (consumed in the transaction, and controls the suffixes)\n *\n * @param roles - a map of role-names to purpose-names\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "txnWillMintUuts<const purposes extends "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", existingTcx extends "
                },
                {
                  "kind": "Reference",
                  "text": "StellarTxnContext",
                  "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext:class"
                },
                {
                  "kind": "Content",
                  "text": ", const RM extends "
                },
                {
                  "kind": "Reference",
                  "text": "Record",
                  "canonicalReference": "!Record:type"
                },
                {
                  "kind": "Content",
                  "text": "<ROLES, purposes>"
                },
                {
                  "kind": "Content",
                  "text": ", const ROLES extends "
                },
                {
                  "kind": "Content",
                  "text": "string & keyof RM"
                },
                {
                  "kind": "Content",
                  "text": " = "
                },
                {
                  "kind": "Content",
                  "text": "string & keyof RM"
                },
                {
                  "kind": "Content",
                  "text": ">(tcx: "
                },
                {
                  "kind": "Content",
                  "text": "existingTcx"
                },
                {
                  "kind": "Content",
                  "text": ", uutPurposes: "
                },
                {
                  "kind": "Content",
                  "text": "purposes[]"
                },
                {
                  "kind": "Content",
                  "text": ", { usingSeedUtxo }: "
                },
                {
                  "kind": "Reference",
                  "text": "UutCreationAttrsWithSeed",
                  "canonicalReference": "@donecollectively/stellar-contracts!~UutCreationAttrsWithSeed:type"
                },
                {
                  "kind": "Content",
                  "text": ", roles?: "
                },
                {
                  "kind": "Content",
                  "text": "RM"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "hasUutContext",
                  "canonicalReference": "@donecollectively/stellar-contracts!hasUutContext:type"
                },
                {
                  "kind": "Content",
                  "text": "<ROLES | purposes> & existingTcx>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "purposes",
                  "constraintTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "typeParameterName": "existingTcx",
                  "constraintTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "typeParameterName": "RM",
                  "constraintTokenRange": {
                    "startIndex": 5,
                    "endIndex": 7
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "typeParameterName": "ROLES",
                  "constraintTokenRange": {
                    "startIndex": 8,
                    "endIndex": 9
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 10,
                    "endIndex": 11
                  }
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 20,
                "endIndex": 24
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "tcx",
                  "parameterTypeTokenRange": {
                    "startIndex": 12,
                    "endIndex": 13
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "uutPurposes",
                  "parameterTypeTokenRange": {
                    "startIndex": 14,
                    "endIndex": 15
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "{ usingSeedUtxo }",
                  "parameterTypeTokenRange": {
                    "startIndex": 16,
                    "endIndex": 17
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "roles",
                  "parameterTypeTokenRange": {
                    "startIndex": 18,
                    "endIndex": 19
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "txnWillMintUuts"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!Capo#uutsValue:member(1)",
              "docComment": "/**\n * returns a value representing the provided UUT(s)\n *\n * @remarks\n *\n * The inputs can be of a few forms - see the overload variants\n *\n * @param uutMap - a set of UUTs, all of which will be represented in the returned value\n *\n * @param tcx - a transaction context, whose `state.uuts` will be processed as in the `uutMap` variant\n *\n * @param uutName - a UutName object representinga single UUT\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "uutsValue(uutMap: "
                },
                {
                  "kind": "Reference",
                  "text": "uutPurposeMap",
                  "canonicalReference": "@donecollectively/stellar-contracts!uutPurposeMap:type"
                },
                {
                  "kind": "Content",
                  "text": "<any>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "@helios-lang/ledger!Value:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "uutMap",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "uutsValue"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!Capo#uutsValue:member(2)",
              "docComment": "/**\n * from all the uuts in the transaction context\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "uutsValue(tcx: "
                },
                {
                  "kind": "Reference",
                  "text": "hasUutContext",
                  "canonicalReference": "@donecollectively/stellar-contracts!hasUutContext:type"
                },
                {
                  "kind": "Content",
                  "text": "<any>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "@helios-lang/ledger!Value:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 2,
              "parameters": [
                {
                  "parameterName": "tcx",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "uutsValue"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!Capo#uutsValue:member(3)",
              "docComment": "/**\n * from a single uut name or byte array\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "uutsValue(uutName: "
                },
                {
                  "kind": "Reference",
                  "text": "UutName",
                  "canonicalReference": "@donecollectively/stellar-contracts!UutName:class"
                },
                {
                  "kind": "Content",
                  "text": " | number[]"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "@helios-lang/ledger!Value:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 3,
              "parameters": [
                {
                  "parameterName": "uutName",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "uutsValue"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!Capo#verifyConfigs:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "verifyConfigs(): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<any>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "verifyConfigs"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!Capo#verifyCoreDelegates:member(1)",
              "docComment": "/**\n * Performs a validation of all critical delegate connections\n *\n * @remarks\n *\n * Checks that each delegate connection is correct and that the underlying scripts for those delegates have not been modified in unplanned ways.\n *\n * Every Capo subclass that adds new delegate types SHOULD implement this method, performing any checks needed to verify the scripts underlying those delegate-types. It should return `Promise.all([ super(), ...myOwnChecks])`.\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "verifyCoreDelegates(): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<["
                },
                {
                  "kind": "Reference",
                  "text": "BasicMintDelegate",
                  "canonicalReference": "@donecollectively/stellar-contracts!BasicMintDelegate:class"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "AuthorityPolicy",
                  "canonicalReference": "@donecollectively/stellar-contracts!AuthorityPolicy:class"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "ContractBasedDelegate",
                  "canonicalReference": "@donecollectively/stellar-contracts!ContractBasedDelegate:class"
                },
                {
                  "kind": "Content",
                  "text": "]>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "verifyCoreDelegates"
            }
          ],
          "extendsTokenRange": {
            "startIndex": 4,
            "endIndex": 8
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@donecollectively/stellar-contracts!CapoConfig:type",
          "docComment": "/**\n * Configuration details for a Capo\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type CapoConfig = "
            },
            {
              "kind": "Reference",
              "text": "configBaseWithRev",
              "canonicalReference": "@donecollectively/stellar-contracts!configBase:interface"
            },
            {
              "kind": "Content",
              "text": " & "
            },
            {
              "kind": "Reference",
              "text": "rootCapoConfig",
              "canonicalReference": "@donecollectively/stellar-contracts!~rootCapoConfig:type"
            },
            {
              "kind": "Content",
              "text": " & "
            },
            {
              "kind": "Reference",
              "text": "SeedTxnScriptParams",
              "canonicalReference": "@donecollectively/stellar-contracts!SeedTxnScriptParams:type"
            },
            {
              "kind": "Content",
              "text": " & {\n    mph: "
            },
            {
              "kind": "Reference",
              "text": "MintingPolicyHash",
              "canonicalReference": "@helios-lang/ledger!MintingPolicyHash:type"
            },
            {
              "kind": "Content",
              "text": ";\n    rev: bigint;\n    bootstrapping?: true;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/CapoTypes.ts",
          "releaseTag": "Public",
          "name": "CapoConfig",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 9
          }
        },
        {
          "kind": "Class",
          "canonicalReference": "@donecollectively/stellar-contracts!CapoDelegateBundle:class",
          "docComment": "/**\n * for any Capo delegate; combines the BasicDelegate with a concrete specialization\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare abstract class CapoDelegateBundle extends "
            },
            {
              "kind": "Reference",
              "text": "HeliosScriptBundle",
              "canonicalReference": "@donecollectively/stellar-contracts!HeliosScriptBundle:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/delegation/CapoDelegateBundle.ts",
          "releaseTag": "Public",
          "isAbstract": true,
          "name": "CapoDelegateBundle",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@donecollectively/stellar-contracts!CapoDelegateBundle:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `CapoDelegateBundle` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(isUsingExtension: "
                },
                {
                  "kind": "Content",
                  "text": "typeof "
                },
                {
                  "kind": "Reference",
                  "text": "USING_EXTENSION",
                  "canonicalReference": "@donecollectively/stellar-contracts!~USING_EXTENSION:var"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "isUsingExtension",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                }
              ]
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!CapoDelegateBundle#capoBundle:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "capoBundle: "
                },
                {
                  "kind": "Reference",
                  "text": "CapoHeliosBundle",
                  "canonicalReference": "@donecollectively/stellar-contracts!CapoHeliosBundle:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "capoBundle",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!CapoDelegateBundle#includeFromCapoModules:member(1)",
              "docComment": "/**\n * specifies a list module names to be included in the build for this delegate\n *\n * @remarks\n *\n * Each of these modules MUST be provided by the CapoHeliosBundle used to create this delegate. By default, only those modules mentioned in {@link implicitIncludedModules()}, plus those modules defined by {@link modules | get modules()} will be available for import to the delegate policy script.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "includeFromCapoModules(): "
                },
                {
                  "kind": "Content",
                  "text": "string[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "includeFromCapoModules"
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!CapoDelegateBundle#isConcrete:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "isConcrete: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "isConcrete",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!CapoDelegateBundle#main:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get main(): "
                },
                {
                  "kind": "Reference",
                  "text": "Source",
                  "canonicalReference": "@helios-lang/compiler-utils!Source:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "main",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!CapoDelegateBundle#mkDelegateWrapper:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "mkDelegateWrapper(moduleName: "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Source",
                  "canonicalReference": "@helios-lang/compiler-utils!Source:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "moduleName",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "mkDelegateWrapper"
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!CapoDelegateBundle#moduleName:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get moduleName(): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "moduleName",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!CapoDelegateBundle#modules:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get modules(): "
                },
                {
                  "kind": "Reference",
                  "text": "Source",
                  "canonicalReference": "@helios-lang/compiler-utils!Source:type"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "modules",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!CapoDelegateBundle#specializedDelegateModule:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "abstract get specializedDelegateModule(): "
                },
                {
                  "kind": "Reference",
                  "text": "Source",
                  "canonicalReference": "@helios-lang/compiler-utils!Source:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "specializedDelegateModule",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": true
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!CapoDelegateBundle.usingCapoBundleClass:member(1)",
              "docComment": "/**\n * Creates a CapoDelegateBundle subclass based on a specific CapoHeliosBundle class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static usingCapoBundleClass<THIS extends "
                },
                {
                  "kind": "Content",
                  "text": "typeof "
                },
                {
                  "kind": "Reference",
                  "text": "CapoDelegateBundle",
                  "canonicalReference": "@donecollectively/stellar-contracts!CapoDelegateBundle:class"
                },
                {
                  "kind": "Content",
                  "text": ", CB extends "
                },
                {
                  "kind": "Reference",
                  "text": "CapoBundleClass",
                  "canonicalReference": "@donecollectively/stellar-contracts!~CapoBundleClass:type"
                },
                {
                  "kind": "Content",
                  "text": ">(this: "
                },
                {
                  "kind": "Content",
                  "text": "THIS"
                },
                {
                  "kind": "Content",
                  "text": ", c: "
                },
                {
                  "kind": "Content",
                  "text": "CB"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "ConcreteCapoDelegateBundle",
                  "canonicalReference": "@donecollectively/stellar-contracts!~ConcreteCapoDelegateBundle:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "THIS",
                  "constraintTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "typeParameterName": "CB",
                  "constraintTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 10,
                "endIndex": 11
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "this",
                  "parameterTypeTokenRange": {
                    "startIndex": 6,
                    "endIndex": 7
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "c",
                  "parameterTypeTokenRange": {
                    "startIndex": 8,
                    "endIndex": 9
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "usingCapoBundleClass"
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@donecollectively/stellar-contracts!capoDelegateConfig:type",
          "docComment": "/**\n * Allows any targeted delegate class to access & use certain details originating in the leader contract\n *\n * @remarks\n *\n * This setting is implicitly defined on all Delegate configurations.\n *\n * These allow any Capo delegate class to reference details from its essential delegation context\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type capoDelegateConfig = "
            },
            {
              "kind": "Reference",
              "text": "configBaseWithRev",
              "canonicalReference": "@donecollectively/stellar-contracts!configBase:interface"
            },
            {
              "kind": "Content",
              "text": " & {\n    capoAddr: "
            },
            {
              "kind": "Reference",
              "text": "Address",
              "canonicalReference": "@helios-lang/ledger!Address:type"
            },
            {
              "kind": "Content",
              "text": ";\n    capo: "
            },
            {
              "kind": "Reference",
              "text": "Capo",
              "canonicalReference": "@donecollectively/stellar-contracts!Capo:class"
            },
            {
              "kind": "Content",
              "text": "<any>;\n    mph: "
            },
            {
              "kind": "Reference",
              "text": "MintingPolicyHash",
              "canonicalReference": "@helios-lang/ledger!MintingPolicyHash:type"
            },
            {
              "kind": "Content",
              "text": ";\n    delegateName: string;\n    tn: number[];\n    rev: bigint;\n    addrHint: "
            },
            {
              "kind": "Reference",
              "text": "Address",
              "canonicalReference": "@helios-lang/ledger!Address:type"
            },
            {
              "kind": "Content",
              "text": "[];\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/delegation/RolesAndDelegates.ts",
          "releaseTag": "Public",
          "name": "capoDelegateConfig",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 11
          }
        },
        {
          "kind": "Class",
          "canonicalReference": "@donecollectively/stellar-contracts!CapoHeliosBundle:class",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class CapoHeliosBundle extends "
            },
            {
              "kind": "Reference",
              "text": "HeliosScriptBundle",
              "canonicalReference": "@donecollectively/stellar-contracts!HeliosScriptBundle:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/CapoHeliosBundle.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "CapoHeliosBundle",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!CapoHeliosBundle#bridgeClassName:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get bridgeClassName(): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "bridgeClassName",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!CapoHeliosBundle#capoBundle:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "capoBundle: "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "capoBundle",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!CapoHeliosBundle#datumTypeName:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "datumTypeName: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "datumTypeName",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!CapoHeliosBundle.isCapoBundle:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static isCapoBundle: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "isCapoBundle",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": true,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!CapoHeliosBundle#main:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get main(): "
                },
                {
                  "kind": "Content",
                  "text": "import(\"@helios-lang/compiler-utils\")."
                },
                {
                  "kind": "Reference",
                  "text": "Source",
                  "canonicalReference": "@helios-lang/compiler-utils!Source:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "main",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!CapoHeliosBundle#modules:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get modules(): "
                },
                {
                  "kind": "Content",
                  "text": "import(\"@helios-lang/compiler-utils\")."
                },
                {
                  "kind": "Reference",
                  "text": "Source",
                  "canonicalReference": "@helios-lang/compiler-utils!Source:type"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "modules",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!CapoHeliosBundle#scripts:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "scripts?: "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "scripts",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "@donecollectively/stellar-contracts!CapoMinter:class",
          "docComment": "/**\n * A basic minting validator serving a Capo's family of contract scripts\n *\n * @remarks\n *\n * NOTE that this class provides the actual MINTING script, which is DIFFERENT from the minting delegate. The minting delegate is a separate contract that can be updated within the scope of a Capo, with this minting script remaining unchanged.\n *\n * Because this minter always defers to the minting delegate, that delegate always expresses the true policy for minting application-layer tokens. This minter contains only the most basic minting constraints - mostly, those needed for supporting Capo lifeycle activities in which the minting delegate isn't yet available, or is being replaced.\n *\n * Mints charter tokens based on seed UTxOs. Can also mint UUTs and other tokens as approved by the Capo's minting delegate.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class CapoMinter extends "
            },
            {
              "kind": "Reference",
              "text": "StellarContract",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarContract:class"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "BasicMinterParams",
              "canonicalReference": "@donecollectively/stellar-contracts!BasicMinterParams:type"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": " implements "
            },
            {
              "kind": "Reference",
              "text": "MinterBaseMethods",
              "canonicalReference": "@donecollectively/stellar-contracts!~MinterBaseMethods:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/minting/CapoMinter.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "CapoMinter",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!CapoMinter#activity:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get activity(): "
                },
                {
                  "kind": "Reference",
                  "text": "mustFindActivityType",
                  "canonicalReference": "@donecollectively/stellar-contracts!~mustFindActivityType:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "CapoMinter",
                  "canonicalReference": "@donecollectively/stellar-contracts!CapoMinter:class"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "activity",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!CapoMinter#activityAddingMintInvariant:member(1)",
              "docComment": "/**\n * Mints a new UUT specifically for a minting invariant\n *\n * @remarks\n *\n * When adding a minting invariant, the Capo's existing mint delegate doesn't get to be involved, as it could otherwise block a critical administrative change needed. The Capo's authority token is all the minter requires to create the needed UUT.\n *\n * @param seedFrom - either a transaction-context with seedUtxo, or `{seedTxn, seedIndex}`\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "activityAddingMintInvariant(seedFrom: "
                },
                {
                  "kind": "Reference",
                  "text": "hasSeed",
                  "canonicalReference": "@donecollectively/stellar-contracts!hasSeed:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "isActivity",
                  "canonicalReference": "@donecollectively/stellar-contracts!isActivity:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "seedFrom",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "activityAddingMintInvariant"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!CapoMinter#activityAddingSpendInvariant:member(1)",
              "docComment": "/**\n * Mints a new UUT specifically for a spending invariant\n *\n * @remarks\n *\n * When adding a spending invariant, the Capo's existing mint delegate is not consulted, as this administrative function works on a higher level than the usual minting delegate's authority.\n *\n * *\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "activityAddingSpendInvariant(seedFrom: "
                },
                {
                  "kind": "Reference",
                  "text": "hasSeed",
                  "canonicalReference": "@donecollectively/stellar-contracts!hasSeed:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "isActivity",
                  "canonicalReference": "@donecollectively/stellar-contracts!isActivity:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "seedFrom",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "activityAddingSpendInvariant"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!CapoMinter#activityForcingNewMintDelegate:member(1)",
              "docComment": "/**\n * Forces replacement of the Capo's mint delegate\n *\n * @remarks\n *\n * Forces the minting of a new UUT to replace the Capo's mint delegate.\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "activityForcingNewMintDelegate(seedFrom: "
                },
                {
                  "kind": "Reference",
                  "text": "hasSeed",
                  "canonicalReference": "@donecollectively/stellar-contracts!hasSeed:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "{\n        redeemer: import(\"@helios-lang/uplc\")."
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "seedFrom",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "activityForcingNewMintDelegate"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!CapoMinter#activityForcingNewSpendDelegate:member(1)",
              "docComment": "/**\n * Forces replacement of the Capo's spend delegate\n *\n * @remarks\n *\n * Creates a new UUT to replace the Capo's spend delegate. The mint delegate is bypassed in this operation. There is always some existing spend delegate when this is called, and it's normally burned in the process, when replacingUut is provided. If replacingUut is not provided, the existing spend delegate is left in place, although it won't be useful because the new spend delegate will have been installed.\n *\n * @param seedFrom - either a transaction-context with seedUtxo, or `{seedTxn, seedIndex}`\n *\n * @param replacingUut - the name of an exiting delegate being replaced\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "activityForcingNewSpendDelegate(seedFrom: "
                },
                {
                  "kind": "Reference",
                  "text": "hasSeed",
                  "canonicalReference": "@donecollectively/stellar-contracts!hasSeed:type"
                },
                {
                  "kind": "Content",
                  "text": ", replacingUut?: "
                },
                {
                  "kind": "Content",
                  "text": "number[]"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "isActivity",
                  "canonicalReference": "@donecollectively/stellar-contracts!isActivity:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "seedFrom",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "replacingUut",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "activityForcingNewSpendDelegate"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!CapoMinter#activityMintingCharter:member(1)",
              "docComment": "/**\n * Mints initial charter token for a Capo contract\n *\n * @remarks\n *\n * This is the fundamental bootstrapping event for a Capo.\n *\n * @param ownerInfo - contains the `{owner}` address of the Capo contract\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "activityMintingCharter(ownerInfo: "
                },
                {
                  "kind": "Reference",
                  "text": "MintCharterActivityArgs",
                  "canonicalReference": "@donecollectively/stellar-contracts!~MintCharterActivityArgs:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "isActivity",
                  "canonicalReference": "@donecollectively/stellar-contracts!isActivity:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "ownerInfo",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "activityMintingCharter"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!CapoMinter#activityMintWithDelegateAuthorizing:member(1)",
              "docComment": "/**\n * Mints any tokens on sole authority of the Capo contract's minting delegage\n *\n * @remarks\n *\n * The Capo's minting delegate takes on the responsibility of validating a mint. It can validate mintingUuts, burningUuts and any application-specific use-cases for minting and/or burning tokens from the policy.\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "activityMintWithDelegateAuthorizing(): "
                },
                {
                  "kind": "Reference",
                  "text": "isActivity",
                  "canonicalReference": "@donecollectively/stellar-contracts!isActivity:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "activityMintWithDelegateAuthorizing"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!CapoMinter#attachScript:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "attachScript<TCX extends "
                },
                {
                  "kind": "Reference",
                  "text": "StellarTxnContext",
                  "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext:class"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "anyState",
                  "canonicalReference": "@donecollectively/stellar-contracts!anyState:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ">(tcx: "
                },
                {
                  "kind": "Content",
                  "text": "TCX"
                },
                {
                  "kind": "Content",
                  "text": ", useRefScript?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<TCX>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "TCX",
                  "constraintTokenRange": {
                    "startIndex": 1,
                    "endIndex": 5
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 10,
                "endIndex": 12
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "tcx",
                  "parameterTypeTokenRange": {
                    "startIndex": 6,
                    "endIndex": 7
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "useRefScript",
                  "parameterTypeTokenRange": {
                    "startIndex": 8,
                    "endIndex": 9
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "attachScript"
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!CapoMinter#charterTokenAsValue:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get charterTokenAsValue(): "
                },
                {
                  "kind": "Content",
                  "text": "import(\"@helios-lang/ledger\")."
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "@helios-lang/ledger!Value:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "charterTokenAsValue",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!CapoMinter#charterTokenAsValuesEntry:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get charterTokenAsValuesEntry(): "
                },
                {
                  "kind": "Reference",
                  "text": "valuesEntry",
                  "canonicalReference": "@donecollectively/stellar-contracts!valuesEntry:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "charterTokenAsValuesEntry",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!CapoMinter#currentRev:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "currentRev: "
                },
                {
                  "kind": "Content",
                  "text": "bigint"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "currentRev",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!CapoMinter#dataBridgeClass:member",
              "docComment": "/**\n * the data bridge for this minter is fixed to one particular type\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "dataBridgeClass: "
                },
                {
                  "kind": "Content",
                  "text": "typeof "
                },
                {
                  "kind": "Reference",
                  "text": "CapoMinterDataBridge",
                  "canonicalReference": "@donecollectively/stellar-contracts!~CapoMinterDataBridge:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "dataBridgeClass",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!CapoMinter#getContractScriptParamsUplc:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getContractScriptParamsUplc(config: "
                },
                {
                  "kind": "Reference",
                  "text": "BasicMinterParams",
                  "canonicalReference": "@donecollectively/stellar-contracts!BasicMinterParams:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcRecord",
                  "canonicalReference": "@donecollectively/stellar-contracts!~UplcRecord:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "configBaseWithRev",
                  "canonicalReference": "@donecollectively/stellar-contracts!configBase:interface"
                },
                {
                  "kind": "Content",
                  "text": " & "
                },
                {
                  "kind": "Reference",
                  "text": "SeedTxnScriptParams",
                  "canonicalReference": "@donecollectively/stellar-contracts!SeedTxnScriptParams:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "config",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "getContractScriptParamsUplc"
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!CapoMinter#mintingPolicyHash:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get mintingPolicyHash(): "
                },
                {
                  "kind": "Reference",
                  "text": "MintingPolicyHash",
                  "canonicalReference": "@helios-lang/ledger!MintingPolicyHash:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "mintingPolicyHash",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!CapoMinter#onchain:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get onchain(): "
                },
                {
                  "kind": "Reference",
                  "text": "mustFindConcreteContractBridgeType",
                  "canonicalReference": "@donecollectively/stellar-contracts!~mustFindConcreteContractBridgeType:type"
                },
                {
                  "kind": "Content",
                  "text": "<this>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "onchain",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!CapoMinter#scriptActivitiesName:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get scriptActivitiesName(): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "scriptActivitiesName",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!CapoMinter#scriptBundle:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "scriptBundle(): "
                },
                {
                  "kind": "Reference",
                  "text": "CapoMinterBundle",
                  "canonicalReference": "@donecollectively/stellar-contracts!~CapoMinterBundle:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "scriptBundle"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!CapoMinter#tvCharter:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "tvCharter(): "
                },
                {
                  "kind": "Content",
                  "text": "import(\"@helios-lang/ledger\")."
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "@helios-lang/ledger!Value:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "tvCharter"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!CapoMinter#txnMintingCharter:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "txnMintingCharter<TCX extends "
                },
                {
                  "kind": "Reference",
                  "text": "StellarTxnContext",
                  "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext:class"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "anyState",
                  "canonicalReference": "@donecollectively/stellar-contracts!anyState:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ">(this: "
                },
                {
                  "kind": "Reference",
                  "text": "CapoMinter",
                  "canonicalReference": "@donecollectively/stellar-contracts!CapoMinter:class"
                },
                {
                  "kind": "Content",
                  "text": ", tcx: "
                },
                {
                  "kind": "Content",
                  "text": "TCX"
                },
                {
                  "kind": "Content",
                  "text": ", { owner, capoGov, mintDelegate, spendDelegate, }: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        owner: "
                },
                {
                  "kind": "Reference",
                  "text": "Address",
                  "canonicalReference": "@helios-lang/ledger!Address:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        capoGov: "
                },
                {
                  "kind": "Reference",
                  "text": "UutName",
                  "canonicalReference": "@donecollectively/stellar-contracts!UutName:class"
                },
                {
                  "kind": "Content",
                  "text": ";\n        mintDelegate: "
                },
                {
                  "kind": "Reference",
                  "text": "UutName",
                  "canonicalReference": "@donecollectively/stellar-contracts!UutName:class"
                },
                {
                  "kind": "Content",
                  "text": ";\n        spendDelegate: "
                },
                {
                  "kind": "Reference",
                  "text": "UutName",
                  "canonicalReference": "@donecollectively/stellar-contracts!UutName:class"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<TCX>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "TCX",
                  "constraintTokenRange": {
                    "startIndex": 1,
                    "endIndex": 5
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 20,
                "endIndex": 22
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "this",
                  "parameterTypeTokenRange": {
                    "startIndex": 6,
                    "endIndex": 7
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "tcx",
                  "parameterTypeTokenRange": {
                    "startIndex": 8,
                    "endIndex": 9
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "{ owner, capoGov, mintDelegate, spendDelegate, }",
                  "parameterTypeTokenRange": {
                    "startIndex": 10,
                    "endIndex": 19
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "txnMintingCharter"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!CapoMinter#txnMintingWithoutDelegate:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "txnMintingWithoutDelegate<TCX extends "
                },
                {
                  "kind": "Reference",
                  "text": "StellarTxnContext",
                  "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext:class"
                },
                {
                  "kind": "Content",
                  "text": ">(tcx: "
                },
                {
                  "kind": "Content",
                  "text": "TCX"
                },
                {
                  "kind": "Content",
                  "text": ", vEntries: "
                },
                {
                  "kind": "Reference",
                  "text": "valuesEntry",
                  "canonicalReference": "@donecollectively/stellar-contracts!valuesEntry:type"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ", minterActivity: "
                },
                {
                  "kind": "Reference",
                  "text": "isActivity",
                  "canonicalReference": "@donecollectively/stellar-contracts!isActivity:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<TCX>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "TCX",
                  "constraintTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 10,
                "endIndex": 12
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "tcx",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "vEntries",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 7
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "minterActivity",
                  "parameterTypeTokenRange": {
                    "startIndex": 8,
                    "endIndex": 9
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "txnMintingWithoutDelegate"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!CapoMinter#txnMintWithDelegateAuthorizing:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "txnMintWithDelegateAuthorizing<TCX extends "
                },
                {
                  "kind": "Reference",
                  "text": "StellarTxnContext",
                  "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext:class"
                },
                {
                  "kind": "Content",
                  "text": ">(tcx: "
                },
                {
                  "kind": "Content",
                  "text": "TCX"
                },
                {
                  "kind": "Content",
                  "text": ", vEntries: "
                },
                {
                  "kind": "Reference",
                  "text": "valuesEntry",
                  "canonicalReference": "@donecollectively/stellar-contracts!valuesEntry:type"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ", mintDelegate: "
                },
                {
                  "kind": "Reference",
                  "text": "BasicMintDelegate",
                  "canonicalReference": "@donecollectively/stellar-contracts!BasicMintDelegate:class"
                },
                {
                  "kind": "Content",
                  "text": ", mintDgtRedeemer: "
                },
                {
                  "kind": "Reference",
                  "text": "isActivity",
                  "canonicalReference": "@donecollectively/stellar-contracts!isActivity:type"
                },
                {
                  "kind": "Content",
                  "text": ", skipReturningDelegate?: "
                },
                {
                  "kind": "Content",
                  "text": "\"skipDelegateReturn\""
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<TCX>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "TCX",
                  "constraintTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 14,
                "endIndex": 16
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "tcx",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "vEntries",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 7
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "mintDelegate",
                  "parameterTypeTokenRange": {
                    "startIndex": 8,
                    "endIndex": 9
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "mintDgtRedeemer",
                  "parameterTypeTokenRange": {
                    "startIndex": 10,
                    "endIndex": 11
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "skipReturningDelegate",
                  "parameterTypeTokenRange": {
                    "startIndex": 12,
                    "endIndex": 13
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "txnMintWithDelegateAuthorizing"
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          },
          "implementsTokenRanges": [
            {
              "startIndex": 6,
              "endIndex": 7
            }
          ]
        },
        {
          "kind": "Class",
          "canonicalReference": "@donecollectively/stellar-contracts!CapoTestHelper:class",
          "docComment": "/**\n * Base class for test helpers for Capo contracts\n *\n * @remarks\n *\n * You should probably use DefaultCapoTestHelper instead of this class.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare abstract class CapoTestHelper<SC extends "
            },
            {
              "kind": "Reference",
              "text": "Capo",
              "canonicalReference": "@donecollectively/stellar-contracts!Capo:class"
            },
            {
              "kind": "Content",
              "text": "<any>"
            },
            {
              "kind": "Content",
              "text": "> extends "
            },
            {
              "kind": "Reference",
              "text": "StellarTestHelper",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarTestHelper:class"
            },
            {
              "kind": "Content",
              "text": "<SC>"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/testing/CapoTestHelper.ts",
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "SC",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "isAbstract": true,
          "name": "CapoTestHelper",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!CapoTestHelper#bootstrap:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "bootstrap(args?: "
                },
                {
                  "kind": "Reference",
                  "text": "Partial",
                  "canonicalReference": "!Partial:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "MinimalCharterDataArgs",
                  "canonicalReference": "@donecollectively/stellar-contracts!MinimalCharterDataArgs:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ", submitOptions?: "
                },
                {
                  "kind": "Reference",
                  "text": "SubmitOptions",
                  "canonicalReference": "@donecollectively/stellar-contracts!~SubmitOptions:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<SC>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 8,
                "endIndex": 10
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "args",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 5
                  },
                  "isOptional": true
                },
                {
                  "parameterName": "submitOptions",
                  "parameterTypeTokenRange": {
                    "startIndex": 6,
                    "endIndex": 7
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "bootstrap"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!CapoTestHelper#bootstrapSettings:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "abstract bootstrapSettings(): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<any>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": true,
              "name": "bootstrapSettings"
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!CapoTestHelper#capo:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get capo(): "
                },
                {
                  "kind": "Content",
                  "text": "SC"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "capo",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!CapoTestHelper#checkDelegateScripts:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "checkDelegateScripts(args?: "
                },
                {
                  "kind": "Reference",
                  "text": "Partial",
                  "canonicalReference": "!Partial:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "MinimalCharterDataArgs",
                  "canonicalReference": "@donecollectively/stellar-contracts!MinimalCharterDataArgs:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<void>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "args",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 5
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "checkDelegateScripts"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!CapoTestHelper#extraBootstrapping:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "extraBootstrapping(args?: "
                },
                {
                  "kind": "Reference",
                  "text": "Partial",
                  "canonicalReference": "!Partial:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "MinimalCharterDataArgs",
                  "canonicalReference": "@donecollectively/stellar-contracts!MinimalCharterDataArgs:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<SC>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "args",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 5
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "extraBootstrapping"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!CapoTestHelper#findOrCreateSnapshot:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "findOrCreateSnapshot(snapshotName: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", actorName: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", contentBuilder: "
                },
                {
                  "kind": "Content",
                  "text": "() => "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "StellarTxnContext",
                  "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext:class"
                },
                {
                  "kind": "Content",
                  "text": "<any>>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<SC>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 11,
                "endIndex": 13
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "snapshotName",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "actorName",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "contentBuilder",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 10
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "findOrCreateSnapshot"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!CapoTestHelper.hasNamedSnapshot:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static hasNamedSnapshot(snapshotName: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", actorName: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "(target: any, propertyKey: string, descriptor: "
                },
                {
                  "kind": "Reference",
                  "text": "PropertyDescriptor",
                  "canonicalReference": "!PropertyDescriptor:interface"
                },
                {
                  "kind": "Content",
                  "text": ") => "
                },
                {
                  "kind": "Reference",
                  "text": "PropertyDescriptor",
                  "canonicalReference": "!PropertyDescriptor:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "snapshotName",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "actorName",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "hasNamedSnapshot"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!CapoTestHelper#hasSnapshot:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "hasSnapshot(snapshotName: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "snapshotName",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "hasSnapshot"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!CapoTestHelper#initialize:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "initialize({ randomSeed, }?: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        randomSeed?: number;\n    }"
                },
                {
                  "kind": "Content",
                  "text": ", args?: "
                },
                {
                  "kind": "Reference",
                  "text": "Partial",
                  "canonicalReference": "!Partial:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "MinimalCharterDataArgs",
                  "canonicalReference": "@donecollectively/stellar-contracts!MinimalCharterDataArgs:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<SC>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 8,
                "endIndex": 10
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "{ randomSeed, }",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": true
                },
                {
                  "parameterName": "args",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 7
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "initialize"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!CapoTestHelper#loadSnapshot:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "loadSnapshot(snapName: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "snapName",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "loadSnapshot"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!CapoTestHelper#mintCharterToken:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "abstract mintCharterToken(args?: "
                },
                {
                  "kind": "Reference",
                  "text": "Partial",
                  "canonicalReference": "!Partial:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "MinimalCharterDataArgs",
                  "canonicalReference": "@donecollectively/stellar-contracts!MinimalCharterDataArgs:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ", submitOptions?: "
                },
                {
                  "kind": "Reference",
                  "text": "SubmitOptions",
                  "canonicalReference": "@donecollectively/stellar-contracts!~SubmitOptions:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "hasUutContext",
                  "canonicalReference": "@donecollectively/stellar-contracts!hasUutContext:type"
                },
                {
                  "kind": "Content",
                  "text": "<\"govAuthority\" | \"capoGov\" | \"mintDelegate\" | \"mintDgt\"> & "
                },
                {
                  "kind": "Reference",
                  "text": "hasBootstrappedCapoConfig",
                  "canonicalReference": "@donecollectively/stellar-contracts!hasBootstrappedConfig:type"
                },
                {
                  "kind": "Content",
                  "text": " & "
                },
                {
                  "kind": "Reference",
                  "text": "hasAddlTxns",
                  "canonicalReference": "@donecollectively/stellar-contracts!hasAddlTxns:type"
                },
                {
                  "kind": "Content",
                  "text": "<any>>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 8,
                "endIndex": 16
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "args",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 5
                  },
                  "isOptional": true
                },
                {
                  "parameterName": "submitOptions",
                  "parameterTypeTokenRange": {
                    "startIndex": 6,
                    "endIndex": 7
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": true,
              "name": "mintCharterToken"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!CapoTestHelper#mkDefaultCharterArgs:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "abstract mkDefaultCharterArgs(): "
                },
                {
                  "kind": "Reference",
                  "text": "Partial",
                  "canonicalReference": "!Partial:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "MinimalCharterDataArgs",
                  "canonicalReference": "@donecollectively/stellar-contracts!MinimalCharterDataArgs:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": true,
              "name": "mkDefaultCharterArgs"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!CapoTestHelper#mkTcx:member(1)",
              "docComment": "/**\n * Creates a new transaction-context with the helper's current or default actor\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "mkTcx<T extends "
                },
                {
                  "kind": "Reference",
                  "text": "anyState",
                  "canonicalReference": "@donecollectively/stellar-contracts!anyState:interface"
                },
                {
                  "kind": "Content",
                  "text": " = "
                },
                {
                  "kind": "Reference",
                  "text": "anyState",
                  "canonicalReference": "@donecollectively/stellar-contracts!anyState:interface"
                },
                {
                  "kind": "Content",
                  "text": ">(txnName?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "StellarTxnContext",
                  "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext:class"
                },
                {
                  "kind": "Content",
                  "text": "<T>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "T",
                  "constraintTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "txnName",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "mkTcx"
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!CapoTestHelper#ready:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get ready(): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "ready",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!CapoTestHelper#restoreFrom:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "restoreFrom(snapshotName: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<SC>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "snapshotName",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "restoreFrom"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!CapoTestHelper#reusableBootstrap:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "reusableBootstrap(snap?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<any>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "snap",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "reusableBootstrap"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!CapoTestHelper#snapshot:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "snapshot(snapshotName: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "snapshotName",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "snapshot"
            }
          ],
          "extendsTokenRange": {
            "startIndex": 4,
            "endIndex": 6
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@donecollectively/stellar-contracts!CharterData:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type CharterData = "
            },
            {
              "kind": "Reference",
              "text": "CapoDatum$Ergo$CharterData",
              "canonicalReference": "@donecollectively/stellar-contracts!~CapoDatum$Ergo$CharterData:type"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/CapoTypes.ts",
          "releaseTag": "Public",
          "name": "CharterData",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@donecollectively/stellar-contracts!CharterDataLike:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type CharterDataLike = "
            },
            {
              "kind": "Reference",
              "text": "CapoDatum$CharterDataLike",
              "canonicalReference": "@donecollectively/stellar-contracts!~CapoDatum$CharterDataLike:type"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/CapoTypes.ts",
          "releaseTag": "Public",
          "name": "CharterDataLike",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "@donecollectively/stellar-contracts!configBase:interface",
          "docComment": "/**\n * Configuration details for StellarContract classes\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface configBaseWithRev "
            }
          ],
          "fileUrlPath": "src/StellarContract.ts",
          "releaseTag": "Public",
          "name": "configBase",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@donecollectively/stellar-contracts!configBase#rev:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "rev: "
                },
                {
                  "kind": "Content",
                  "text": "bigint"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "rev",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@donecollectively/stellar-contracts!ConfigFor:type",
          "docComment": "/**\n * Extracts the config type for a Stellar Contract class\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ConfigFor<SC extends "
            },
            {
              "kind": "Reference",
              "text": "StellarContract",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarContract:class"
            },
            {
              "kind": "Content",
              "text": "<any>"
            },
            {
              "kind": "Content",
              "text": "> = "
            },
            {
              "kind": "Reference",
              "text": "configBaseWithRev",
              "canonicalReference": "@donecollectively/stellar-contracts!configBase:interface"
            },
            {
              "kind": "Content",
              "text": " & SC extends "
            },
            {
              "kind": "Reference",
              "text": "StellarContract",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarContract:class"
            },
            {
              "kind": "Content",
              "text": "<infer inferredConfig> ? inferredConfig : never"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/StellarContract.ts",
          "releaseTag": "Public",
          "name": "ConfigFor",
          "typeParameters": [
            {
              "typeParameterName": "SC",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 4,
            "endIndex": 8
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@donecollectively/stellar-contracts!ConfiguredDelegate:type",
          "docComment": "/**\n * A complete, validated and resolved configuration for a specific delegate\n *\n * @remarks\n *\n * Use StellarContract's `txnCreateDelegateSettings()` method to resolve from any (minimal or better) delegate details to a ResolvedDelegate object.\n *\n * @typeParam DT - a StellarContract class conforming to the `roleName`, within the scope of a Capo class's `roles()`.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ConfiguredDelegate<DT extends "
            },
            {
              "kind": "Reference",
              "text": "StellarDelegate",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarDelegate:class"
            },
            {
              "kind": "Content",
              "text": "> = "
            },
            {
              "kind": "Content",
              "text": "{\n    delegateClass: "
            },
            {
              "kind": "Reference",
              "text": "stellarSubclass",
              "canonicalReference": "@donecollectively/stellar-contracts!stellarSubclass:type"
            },
            {
              "kind": "Content",
              "text": "<DT>;\n    delegate: DT;\n    roleName: string;\n    fullCapoDgtConfig: "
            },
            {
              "kind": "Reference",
              "text": "Partial",
              "canonicalReference": "!Partial:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "CapoConfig",
              "canonicalReference": "@donecollectively/stellar-contracts!CapoConfig:type"
            },
            {
              "kind": "Content",
              "text": "> & "
            },
            {
              "kind": "Reference",
              "text": "capoDelegateConfig",
              "canonicalReference": "@donecollectively/stellar-contracts!capoDelegateConfig:type"
            },
            {
              "kind": "Content",
              "text": ";\n} & "
            },
            {
              "kind": "Reference",
              "text": "OffchainPartialDelegateLink",
              "canonicalReference": "@donecollectively/stellar-contracts!OffchainPartialDelegateLink:type"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/delegation/RolesAndDelegates.ts",
          "releaseTag": "Public",
          "name": "ConfiguredDelegate",
          "typeParameters": [
            {
              "typeParameterName": "DT",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 3,
            "endIndex": 13
          }
        },
        {
          "kind": "Class",
          "canonicalReference": "@donecollectively/stellar-contracts!ContractBasedDelegate:class",
          "docComment": "/**\n * Base class for delegates controlled by a smart contract, as opposed to a simple delegate backed by an issued token, whose presence grants delegated authority.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class ContractBasedDelegate extends "
            },
            {
              "kind": "Reference",
              "text": "StellarDelegate",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarDelegate:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/delegation/ContractBasedDelegate.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "ContractBasedDelegate",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!ContractBasedDelegate#_dataBridge:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "_dataBridge: "
                },
                {
                  "kind": "Reference",
                  "text": "GenericDelegateBridge",
                  "canonicalReference": "@donecollectively/stellar-contracts!GenericDelegateBridge:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "_dataBridge",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!ContractBasedDelegate#activity:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get activity(): "
                },
                {
                  "kind": "Reference",
                  "text": "mustFindActivityType",
                  "canonicalReference": "@donecollectively/stellar-contracts!~mustFindActivityType:type"
                },
                {
                  "kind": "Content",
                  "text": "<this>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "activity",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!ContractBasedDelegate#activityDeletingDelegatedData:member(1)",
              "docComment": "/**\n * A mint-delegate activity indicating that a delegated-data controller will be governing a deletion (burning its UUT) of a specific piece of delegated data. No further redeemer details are needed here, but the data-delegate's controller-token may have additional details in ITS redeemer, as described in {@link BasicMintDelegate.activityUpdatingDelegatedData}. See that topic for more details including multi-activity scenarios.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "activityDeletingDelegatedData(recId: "
                },
                {
                  "kind": "Content",
                  "text": "string | number[]"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "isActivity",
                  "canonicalReference": "@donecollectively/stellar-contracts!isActivity:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "recId",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "activityDeletingDelegatedData"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!ContractBasedDelegate#activityMultipleDelegateActivities:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "activityMultipleDelegateActivities(...activities: "
                },
                {
                  "kind": "Reference",
                  "text": "isActivity",
                  "canonicalReference": "@donecollectively/stellar-contracts!isActivity:type"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "isActivity",
                  "canonicalReference": "@donecollectively/stellar-contracts!isActivity:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "activities",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "activityMultipleDelegateActivities"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!ContractBasedDelegate#activityReplacingMe:member(1)",
              "docComment": "/**\n * redeemer for replacing the authority UUT with a new one\n *\n * @remarks\n *\n * When replacing the delegate, the current UUT will be burned, and a new one will be minted. It can be deposited to any next delegate address.\n *\n * @param seedTxnDetails - seed details for the new UUT\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "activityReplacingMe({ seed, purpose, }: "
                },
                {
                  "kind": "Reference",
                  "text": "Omit",
                  "canonicalReference": "!Omit:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "MintUutActivityArgs",
                  "canonicalReference": "@donecollectively/stellar-contracts!MintUutActivityArgs:type"
                },
                {
                  "kind": "Content",
                  "text": ", \"purposes\"> & {\n        purpose: string;\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "{ seed, purpose, }",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 5
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "activityReplacingMe"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!ContractBasedDelegate#activityRetiring:member(1)",
              "docComment": "/**\n * redeemer for spending the authority UUT for burning it.\n *\n * @remarks\n *\n * The Retiring redeemer indicates that the delegate is being removed.\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "activityRetiring(): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "activityRetiring"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!ContractBasedDelegate#activityValidatingSettings:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "activityValidatingSettings(): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "activityValidatingSettings"
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!ContractBasedDelegate#capo:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get capo(): "
                },
                {
                  "kind": "Reference",
                  "text": "Capo",
                  "canonicalReference": "@donecollectively/stellar-contracts!Capo:class"
                },
                {
                  "kind": "Content",
                  "text": "<any>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "capo",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!ContractBasedDelegate.currentRev:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static currentRev: "
                },
                {
                  "kind": "Content",
                  "text": "bigint"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "currentRev",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": true,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!ContractBasedDelegate#dataBridgeClass:member",
              "docComment": "/**\n * Each contract-based delegate must define its own dataBridgeClass, but they all use the same essential template for the outer layer of their activity & datum interface.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "dataBridgeClass: "
                },
                {
                  "kind": "Reference",
                  "text": "GenericDelegateBridgeClass",
                  "canonicalReference": "@donecollectively/stellar-contracts!GenericDelegateBridgeClass:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "dataBridgeClass",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!ContractBasedDelegate.defaultParams:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static get defaultParams(): "
                },
                {
                  "kind": "Content",
                  "text": "{\n        rev: bigint;\n        isSpendDelegate: boolean;\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "defaultParams",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": true,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!ContractBasedDelegate#DelegateAddsAuthorityToken:member(1)",
              "docComment": "/**\n * Adds the delegate's authority token to a transaction\n *\n * @remarks\n *\n * Given a delegate already configured by a Capo, this method implements transaction-building logic needed to include the UUT into the `tcx`. the `utxo` is discovered by {@link StellarDelegate.DelegateMustFindAuthorityToken | DelegateMustFindAuthorityToken()}\n *\n * The off-chain code shouldn't need to check the details; it can simply arrange the details properly and spend the delegate's authority token, using this method.\n *\n * ### Reliance on this delegate\n *\n * Other contract scripts can rely on the delegate script to have validated its on-chain policy and enforced its own \"return to the delegate script\" logic.\n *\n * ### Enforcing on-chain policy\n *\n * When spending the authority token in this way, the delegate's authority is typically narrowly scoped, and it's expected that the delegate's on-chain script validates that those parts of the transaction detail should be authorized, in accordance with the delegate's core purpose/responsbility - i.e. that the txn does all of what the delegate expects, and none of what it shouldn't do in that department.\n *\n * The on-chain code SHOULD typically enforce: * that the token is spent with an application-specific redeemer variant of its MintingActivity or SpendingActivitie.\n *\n * * that the authority token is returned to the contract with its datum unchanged * that any other tokens it may also hold in the same UTxO do not become inaccessible as a result of the transactions - perhaps by requiring them to be returned together with the authority token.\n *\n * It MAY enforce additional requirements as well.\n *\n * @param tcx - the transaction context\n *\n * @param utxo - the utxo having the authority UUT for this delegate\n *\n * @example\n *\n * A minting delegate should check that all the expected tokens are minted, AND that no other tokens are minted.\n *\n * @example\n *\n * A role-based authentication/signature-checking delegate can require an appropriate signature on the txn.\n *\n * @reqt\n *\n * Adds the uutxo to the transaction inputs with appropriate redeemer.\n *\n * @reqt\n *\n * Does not output the value; can EXPECT txnReceiveAuthorityToken to be called for that purpose.\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "DelegateAddsAuthorityToken<TCX extends "
                },
                {
                  "kind": "Reference",
                  "text": "StellarTxnContext",
                  "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext:class"
                },
                {
                  "kind": "Content",
                  "text": ">(tcx: "
                },
                {
                  "kind": "Content",
                  "text": "TCX"
                },
                {
                  "kind": "Content",
                  "text": ", uutxo: "
                },
                {
                  "kind": "Reference",
                  "text": "TxInput",
                  "canonicalReference": "@helios-lang/ledger!TxInput:type"
                },
                {
                  "kind": "Content",
                  "text": ", redeemer: "
                },
                {
                  "kind": "Reference",
                  "text": "isActivity",
                  "canonicalReference": "@donecollectively/stellar-contracts!isActivity:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<TCX>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "TCX",
                  "constraintTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 9,
                "endIndex": 11
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "tcx",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "uutxo",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "redeemer",
                  "parameterTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 8
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "DelegateAddsAuthorityToken"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!ContractBasedDelegate#DelegateMustFindAuthorityToken:member(1)",
              "docComment": "/**\n * Finds the delegate authority token, normally in the delegate's contract address\n *\n * @remarks\n *\n * The default implementation finds the UTxO having the authority token in the delegate's contract address.\n *\n * @param tcx - the transaction context\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "DelegateMustFindAuthorityToken(tcx: "
                },
                {
                  "kind": "Reference",
                  "text": "StellarTxnContext",
                  "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext:class"
                },
                {
                  "kind": "Content",
                  "text": ", label: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "TxInput",
                  "canonicalReference": "@helios-lang/ledger!TxInput:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "tcx",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "label",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "DelegateMustFindAuthorityToken"
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!ContractBasedDelegate#delegateName:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get delegateName(): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "delegateName",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!ContractBasedDelegate#DelegateRetiresAuthorityToken:member(1)",
              "docComment": "/**\n * Adds the delegate's authority token to a transaction\n *\n * @remarks\n *\n * Given a delegate already configured by a Capo, this method implements transaction-building logic needed to include the UUT into the `tcx`. the `utxo` is discovered by {@link StellarDelegate.DelegateMustFindAuthorityToken | DelegateMustFindAuthorityToken()}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "DelegateRetiresAuthorityToken<TCX extends "
                },
                {
                  "kind": "Reference",
                  "text": "StellarTxnContext",
                  "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext:class"
                },
                {
                  "kind": "Content",
                  "text": ">(this: "
                },
                {
                  "kind": "Reference",
                  "text": "ContractBasedDelegate",
                  "canonicalReference": "@donecollectively/stellar-contracts!ContractBasedDelegate:class"
                },
                {
                  "kind": "Content",
                  "text": ", tcx: "
                },
                {
                  "kind": "Reference",
                  "text": "StellarTxnContext",
                  "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext:class"
                },
                {
                  "kind": "Content",
                  "text": ", fromFoundUtxo: "
                },
                {
                  "kind": "Reference",
                  "text": "TxInput",
                  "canonicalReference": "@helios-lang/ledger!TxInput:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<TCX>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "TCX",
                  "constraintTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 9,
                "endIndex": 11
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "this",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "tcx",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "fromFoundUtxo",
                  "parameterTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 8
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "DelegateRetiresAuthorityToken"
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!ContractBasedDelegate#delegateValidatorHash:member",
              "docComment": "/**\n * returns the ValidatorHash of the delegate script, if relevant\n *\n * @remarks\n *\n * A delegate that doesn't use an on-chain validator should override this method and return undefined.\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get delegateValidatorHash(): "
                },
                {
                  "kind": "Reference",
                  "text": "ValidatorHash",
                  "canonicalReference": "@helios-lang/ledger!ValidatorHash:type"
                },
                {
                  "kind": "Content",
                  "text": " | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "delegateValidatorHash",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!ContractBasedDelegate#getContractScriptParamsUplc:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getContractScriptParamsUplc(config: "
                },
                {
                  "kind": "Reference",
                  "text": "capoDelegateConfig",
                  "canonicalReference": "@donecollectively/stellar-contracts!capoDelegateConfig:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "import(\"../StellarContract.js\")."
                },
                {
                  "kind": "Reference",
                  "text": "UplcRecord",
                  "canonicalReference": "@donecollectively/stellar-contracts!~UplcRecord:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "capoDelegateConfig",
                  "canonicalReference": "@donecollectively/stellar-contracts!capoDelegateConfig:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "config",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "getContractScriptParamsUplc"
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!ContractBasedDelegate#isSpendDelegate:member",
              "docComment": "/**\n * Configures the matching parameter name in the on-chain script, indicating that this delegate serves the Capo by enforcing policy for spending the Capo's utxos.\n *\n * @remarks\n *\n * Not used for any mint delegate. Howeever, a mint delegate class can instead provide a true isMintAndSpendDelegate, ... if a single script controls both the mintDgt-* and spendDgt-* tokens/delegation roles for your Capo.\n *\n * DO NOT enable this attribute for second-level delegates, such as named delegates or delegated-data controllers. The base on-chain delegate script recognizes this conditional role and enforces that its generic delegated-data activities are used only in the context the Capo's main spend delegate, re-delegating to the data-controller which can't use those generic activities, but instead implements its user-facing txns as variants of its SpendingActivities enum.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get isSpendDelegate(): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "isSpendDelegate",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!ContractBasedDelegate#mkCapoLifecycleActivity:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "mkCapoLifecycleActivity(capoLifecycleActivityName: "
                },
                {
                  "kind": "Content",
                  "text": "\"CreatingDelegate\" | \"ActivatingDelegate\""
                },
                {
                  "kind": "Content",
                  "text": ", { seed, purpose, ...otherArgs }: "
                },
                {
                  "kind": "Reference",
                  "text": "Omit",
                  "canonicalReference": "!Omit:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "MintUutActivityArgs",
                  "canonicalReference": "@donecollectively/stellar-contracts!MintUutActivityArgs:type"
                },
                {
                  "kind": "Content",
                  "text": ", \"purposes\"> & {\n        purpose?: string;\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "isActivity",
                  "canonicalReference": "@donecollectively/stellar-contracts!isActivity:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 8,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "capoLifecycleActivityName",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "{ seed, purpose, ...otherArgs }",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 7
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "mkCapoLifecycleActivity"
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!ContractBasedDelegate#mkDatum:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get mkDatum(): "
                },
                {
                  "kind": "Reference",
                  "text": "mustFindDatumType",
                  "canonicalReference": "@donecollectively/stellar-contracts!~mustFindDatumType:type"
                },
                {
                  "kind": "Content",
                  "text": "<this>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "mkDatum",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!ContractBasedDelegate#mkDatumIsDelegation:member(1)",
              "docComment": "/**\n * creates the essential datum for a delegate UTxO\n *\n * @remarks\n *\n * Every delegate is expected to have a two-field 'IsDelegation' variant in the first position of its on-chain Datum type. This helper method constructs a suitable UplcData structure, given appropriate inputs.\n *\n * @param dd - Delegation details\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "mkDatumIsDelegation(dd: "
                },
                {
                  "kind": "Reference",
                  "text": "DelegationDetail",
                  "canonicalReference": "@donecollectively/stellar-contracts!~DelegationDetail_2:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "import(\"@helios-lang/ledger\")."
                },
                {
                  "kind": "Reference",
                  "text": "InlineTxOutputDatum",
                  "canonicalReference": "@helios-lang/ledger!InlineTxOutputDatum:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "dd",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "mkDatumIsDelegation"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!ContractBasedDelegate#mkDelegateLifecycleActivity:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "mkDelegateLifecycleActivity(delegateActivityName: "
                },
                {
                  "kind": "Content",
                  "text": "\"ReplacingMe\" | \"Retiring\" | \"ValidatingSettings\""
                },
                {
                  "kind": "Content",
                  "text": ", args?: "
                },
                {
                  "kind": "Reference",
                  "text": "Record",
                  "canonicalReference": "!Record:type"
                },
                {
                  "kind": "Content",
                  "text": "<string, any>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "isActivity",
                  "canonicalReference": "@donecollectively/stellar-contracts!isActivity:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "delegateActivityName",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "args",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 5
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "mkDelegateLifecycleActivity"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!ContractBasedDelegate.mkDelegateWithArgs:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static mkDelegateWithArgs(a: "
                },
                {
                  "kind": "Reference",
                  "text": "capoDelegateConfig",
                  "canonicalReference": "@donecollectively/stellar-contracts!capoDelegateConfig:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "a",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "mkDelegateWithArgs"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!ContractBasedDelegate#mkDelegationDatum:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "mkDelegationDatum(txin?: "
                },
                {
                  "kind": "Reference",
                  "text": "TxInput",
                  "canonicalReference": "@helios-lang/ledger!TxInput:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "import(\"@helios-lang/ledger\")."
                },
                {
                  "kind": "Reference",
                  "text": "TxOutputDatum",
                  "canonicalReference": "@helios-lang/ledger!TxOutputDatum:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "txin",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "mkDelegationDatum"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!ContractBasedDelegate#mkSeededMintingActivity:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "mkSeededMintingActivity(mintingActivityName: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", args: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        seed: "
                },
                {
                  "kind": "Reference",
                  "text": "TxOutputId",
                  "canonicalReference": "@helios-lang/ledger!TxOutputId:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n    } & "
                },
                {
                  "kind": "Reference",
                  "text": "Record",
                  "canonicalReference": "!Record:type"
                },
                {
                  "kind": "Content",
                  "text": "<string, any>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "isActivity",
                  "canonicalReference": "@donecollectively/stellar-contracts!isActivity:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 9,
                "endIndex": 10
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "mintingActivityName",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "args",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 8
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "mkSeededMintingActivity"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!ContractBasedDelegate#mkSeedlessMintingActivity:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "mkSeedlessMintingActivity(mintingActivityName: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", args: "
                },
                {
                  "kind": "Reference",
                  "text": "Record",
                  "canonicalReference": "!Record:type"
                },
                {
                  "kind": "Content",
                  "text": "<string, any>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "isActivity",
                  "canonicalReference": "@donecollectively/stellar-contracts!isActivity:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "mintingActivityName",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "args",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 5
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "mkSeedlessMintingActivity"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!ContractBasedDelegate#mkSpendingActivity:member(1)",
              "docComment": "/**\n * Creates a reedemer for the indicated spending activity name\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "mkSpendingActivity(spendingActivityName: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", args: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        id: string | number[];\n    } & "
                },
                {
                  "kind": "Reference",
                  "text": "Record",
                  "canonicalReference": "!Record:type"
                },
                {
                  "kind": "Content",
                  "text": "<string, any>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "isActivity",
                  "canonicalReference": "@donecollectively/stellar-contracts!isActivity:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "spendingActivityName",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "args",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 6
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "mkSpendingActivity"
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!ContractBasedDelegate#newReadDatum:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get newReadDatum(): "
                },
                {
                  "kind": "Reference",
                  "text": "mustFindReadDatumType",
                  "canonicalReference": "@donecollectively/stellar-contracts!~mustFindReadDatumType:type"
                },
                {
                  "kind": "Content",
                  "text": "<this>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "newReadDatum",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!ContractBasedDelegate#offchain:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get offchain(): "
                },
                {
                  "kind": "Reference",
                  "text": "mustFindConcreteContractBridgeType",
                  "canonicalReference": "@donecollectively/stellar-contracts!~mustFindConcreteContractBridgeType:type"
                },
                {
                  "kind": "Content",
                  "text": "<this>[\"reader\"]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "offchain",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!ContractBasedDelegate#onchain:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get onchain(): "
                },
                {
                  "kind": "Reference",
                  "text": "mustFindConcreteContractBridgeType",
                  "canonicalReference": "@donecollectively/stellar-contracts!~mustFindConcreteContractBridgeType:type"
                },
                {
                  "kind": "Content",
                  "text": "<this>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "onchain",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!ContractBasedDelegate#reader:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get reader(): "
                },
                {
                  "kind": "Reference",
                  "text": "mustFindConcreteContractBridgeType",
                  "canonicalReference": "@donecollectively/stellar-contracts!~mustFindConcreteContractBridgeType:type"
                },
                {
                  "kind": "Content",
                  "text": "<this>[\"reader\"]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "reader",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!ContractBasedDelegate#scriptActivitiesName:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get scriptActivitiesName(): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "scriptActivitiesName",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!ContractBasedDelegate#scriptBundle:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "scriptBundle(): "
                },
                {
                  "kind": "Reference",
                  "text": "CapoDelegateBundle",
                  "canonicalReference": "@donecollectively/stellar-contracts!CapoDelegateBundle:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "scriptBundle"
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!ContractBasedDelegate#scriptDatumName:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get scriptDatumName(): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "scriptDatumName",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!ContractBasedDelegate#tcxWithCharterRef:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "tcxWithCharterRef<TCX extends "
                },
                {
                  "kind": "Reference",
                  "text": "StellarTxnContext",
                  "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext:class"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "hasCharterRef",
                  "canonicalReference": "@donecollectively/stellar-contracts!hasCharterRef:type"
                },
                {
                  "kind": "Content",
                  "text": ">(tcx: "
                },
                {
                  "kind": "Content",
                  "text": "TCX"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<TCX & "
                },
                {
                  "kind": "Reference",
                  "text": "hasCharterRef",
                  "canonicalReference": "@donecollectively/stellar-contracts!hasCharterRef:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "TCX",
                  "constraintTokenRange": {
                    "startIndex": 1,
                    "endIndex": 4
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 11
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "tcx",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "tcxWithCharterRef"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!ContractBasedDelegate#txnReceiveAuthorityToken:member(1)",
              "docComment": "/**\n * Adds a mint-delegate-specific authority token to the txn output\n *\n * @remarks\n *\n * Implements {@link StellarDelegate.txnReceiveAuthorityToken | txnReceiveAuthorityToken()}.\n *\n * Uses {@link ContractBasedDelegate.mkDelegationDatum | mkDelegationDatum()} to make the inline Datum for the output.\n *\n * @see\n *\n * {@link StellarDelegate.txnReceiveAuthorityToken | baseline txnReceiveAuthorityToken()'s doc}\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "txnReceiveAuthorityToken<TCX extends "
                },
                {
                  "kind": "Reference",
                  "text": "StellarTxnContext",
                  "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext:class"
                },
                {
                  "kind": "Content",
                  "text": ">(tcx: "
                },
                {
                  "kind": "Content",
                  "text": "TCX"
                },
                {
                  "kind": "Content",
                  "text": ", tokenValue: "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "@helios-lang/ledger!Value:type"
                },
                {
                  "kind": "Content",
                  "text": ", fromFoundUtxo?: "
                },
                {
                  "kind": "Reference",
                  "text": "TxInput",
                  "canonicalReference": "@helios-lang/ledger!TxInput:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<TCX>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "TCX",
                  "constraintTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 9,
                "endIndex": 11
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "tcx",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "tokenValue",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "fromFoundUtxo",
                  "parameterTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 8
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "txnReceiveAuthorityToken"
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "@donecollectively/stellar-contracts!ContractDataBridge:class",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class ContractDataBridge "
            }
          ],
          "fileUrlPath": "src/helios/dataBridge/DataBridge.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "ContractDataBridge",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@donecollectively/stellar-contracts!ContractDataBridge:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `ContractDataBridge` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor();"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": []
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!ContractDataBridge#activity:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "activity: "
                },
                {
                  "kind": "Reference",
                  "text": "DataBridge",
                  "canonicalReference": "@donecollectively/stellar-contracts!DataBridge:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "activity",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!ContractDataBridge#datum:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "datum: "
                },
                {
                  "kind": "Reference",
                  "text": "DataBridge",
                  "canonicalReference": "@donecollectively/stellar-contracts!DataBridge:class"
                },
                {
                  "kind": "Content",
                  "text": " | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "datum",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!ContractDataBridge#isAbstract:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "isAbstract: "
                },
                {
                  "kind": "Content",
                  "text": "(true | false)"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "isAbstract",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!ContractDataBridge.isAbstract:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static isAbstract: "
                },
                {
                  "kind": "Content",
                  "text": "(true | false)"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "isAbstract",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": true,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!ContractDataBridge#readData:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readData(x: "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "x",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "readData"
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!ContractDataBridge#readDatum:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readDatum: "
                },
                {
                  "kind": "Reference",
                  "text": "readsUplcData",
                  "canonicalReference": "@donecollectively/stellar-contracts!~readsUplcData:type"
                },
                {
                  "kind": "Content",
                  "text": "<any> | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "readDatum",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!ContractDataBridge#reader:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "reader: "
                },
                {
                  "kind": "Reference",
                  "text": "DataBridgeReaderClass",
                  "canonicalReference": "@donecollectively/stellar-contracts!DataBridgeReaderClass:class"
                },
                {
                  "kind": "Content",
                  "text": " | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "reader",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!ContractDataBridge#types:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "types: "
                },
                {
                  "kind": "Reference",
                  "text": "Record",
                  "canonicalReference": "!Record:type"
                },
                {
                  "kind": "Content",
                  "text": "<string, "
                },
                {
                  "kind": "Reference",
                  "text": "DataBridge",
                  "canonicalReference": "@donecollectively/stellar-contracts!DataBridge:class"
                },
                {
                  "kind": "Content",
                  "text": " | ((x: any) => "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ")>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "types",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 7
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            }
          ],
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "@donecollectively/stellar-contracts!ContractDataBridgeWithEnumDatum:class",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class ContractDataBridgeWithEnumDatum extends "
            },
            {
              "kind": "Reference",
              "text": "ContractDataBridge",
              "canonicalReference": "@donecollectively/stellar-contracts!ContractDataBridge:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/helios/dataBridge/DataBridge.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "ContractDataBridgeWithEnumDatum",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@donecollectively/stellar-contracts!ContractDataBridgeWithEnumDatum:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `ContractDataBridgeWithEnumDatum` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor();"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": []
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!ContractDataBridgeWithEnumDatum#datum:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "datum: "
                },
                {
                  "kind": "Reference",
                  "text": "EnumBridge",
                  "canonicalReference": "@donecollectively/stellar-contracts!EnumBridge:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "datum",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!ContractDataBridgeWithEnumDatum#isAbstract:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "isAbstract: "
                },
                {
                  "kind": "Content",
                  "text": "(true | false)"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "isAbstract",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!ContractDataBridgeWithEnumDatum.isAbstract:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static isAbstract: "
                },
                {
                  "kind": "Content",
                  "text": "(true | false)"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "isAbstract",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": true,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!ContractDataBridgeWithEnumDatum#readDatum:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readDatum: "
                },
                {
                  "kind": "Reference",
                  "text": "readsUplcData",
                  "canonicalReference": "@donecollectively/stellar-contracts!~readsUplcData:type"
                },
                {
                  "kind": "Content",
                  "text": "<unknown>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "readDatum",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "@donecollectively/stellar-contracts!ContractDataBridgeWithOtherDatum:class",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class ContractDataBridgeWithOtherDatum extends "
            },
            {
              "kind": "Reference",
              "text": "ContractDataBridge",
              "canonicalReference": "@donecollectively/stellar-contracts!ContractDataBridge:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/helios/dataBridge/DataBridge.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "ContractDataBridgeWithOtherDatum",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@donecollectively/stellar-contracts!ContractDataBridgeWithOtherDatum:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `ContractDataBridgeWithOtherDatum` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor();"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": []
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!ContractDataBridgeWithOtherDatum#isAbstract:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "isAbstract: "
                },
                {
                  "kind": "Content",
                  "text": "(true | false)"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "isAbstract",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!ContractDataBridgeWithOtherDatum.isAbstract:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static isAbstract: "
                },
                {
                  "kind": "Content",
                  "text": "(true | false)"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "isAbstract",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": true,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!ContractDataBridgeWithOtherDatum#readDatum:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readDatum: "
                },
                {
                  "kind": "Reference",
                  "text": "readsUplcData",
                  "canonicalReference": "@donecollectively/stellar-contracts!~readsUplcData:type"
                },
                {
                  "kind": "Content",
                  "text": "<unknown>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "readDatum",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "@donecollectively/stellar-contracts!DataBridge:class",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class DataBridge extends "
            },
            {
              "kind": "Reference",
              "text": "DataBridge_base",
              "canonicalReference": "@donecollectively/stellar-contracts!~DataBridge_base"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/helios/dataBridge/DataBridge.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "DataBridge",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@donecollectively/stellar-contracts!DataBridge:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `DataBridge` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(options?: "
                },
                {
                  "kind": "Reference",
                  "text": "DataBridgeOptions",
                  "canonicalReference": "@donecollectively/stellar-contracts!DataBridgeOptions:type"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": true
                }
              ]
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!DataBridge#getSeed:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getSeed(arg: "
                },
                {
                  "kind": "Reference",
                  "text": "hasSeed",
                  "canonicalReference": "@donecollectively/stellar-contracts!hasSeed:type"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "TxOutputId",
                  "canonicalReference": "@helios-lang/ledger!TxOutputId:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "TxOutputId",
                  "canonicalReference": "@helios-lang/ledger!TxOutputId:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "arg",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "getSeed"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!DataBridge#getTypeSchema:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "protected getTypeSchema(): "
                },
                {
                  "kind": "Reference",
                  "text": "TypeSchema",
                  "canonicalReference": "@helios-lang/type-utils!TypeSchema:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": true,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "getTypeSchema"
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!DataBridge#isActivity:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "protected isActivity: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "isActivity",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": true,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!DataBridge#isCallable:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "isCallable: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "isCallable",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!DataBridge#isEnum:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "protected get isEnum(): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "isEnum",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": true,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!DataBridge#isNested:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "protected isNested: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "isNested",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": true,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!DataBridge#mkData:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "mkData: "
                },
                {
                  "kind": "Content",
                  "text": "this[\"ᱺᱺcast\"][\"toUplcData\"]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "mkData",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!DataBridge#mkDataVia:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "protected mkDataVia(redirectionCallback: "
                },
                {
                  "kind": "Content",
                  "text": "(value: any) => void"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": true,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "redirectionCallback",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "mkDataVia"
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!DataBridge#readData:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readData: "
                },
                {
                  "kind": "Content",
                  "text": "this[\"ᱺᱺcast\"][\"fromUplcData\"]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "readData",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!DataBridge#redirectTo:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "protected redirectTo?: "
                },
                {
                  "kind": "Content",
                  "text": "(value: any) => void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "redirectTo",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": true,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!DataBridge#ᱺᱺcast:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ᱺᱺcast: "
                },
                {
                  "kind": "Reference",
                  "text": "Cast",
                  "canonicalReference": "@helios-lang/contract-utils!Cast:type"
                },
                {
                  "kind": "Content",
                  "text": "<any, any>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "ᱺᱺcast",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!DataBridge#ᱺᱺschema:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "protected ᱺᱺschema: "
                },
                {
                  "kind": "Reference",
                  "text": "TypeSchema",
                  "canonicalReference": "@helios-lang/type-utils!TypeSchema:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "ᱺᱺschema",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": true,
              "isAbstract": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "@donecollectively/stellar-contracts!dataBridgeGenerator:class",
          "docComment": "/**\n * Gathers any number of types expressible for an on-chain Helios script, and does code generation for a class, including accessors for generating typed data by converting expected data using the Cast class.\n *\n * The class uses a various subclasses of DataBridge for different types defined in the contract script.\n *\n * Uses the BundleTypes class as a helper, in which the bridge-generator is a \"collaborator\" in that class. Thus, the data-bridge has access to the same key events in the schema-finding process, and can tap into all the essential logic for finding types.\n *\n * This strategy is also used for generating the data-reader class.\n *\n * When generating methods in the new class, the following rules apply:\n *\n * 1. Each struct type is directly exposed as its name, making ‹bridge›.‹struct name› available for generating any data expected to match that form.\n *\n * 2. Each enum type is exposed as its name, with nested accessors for each enum variant, ... with the accessors for each variant depend on the number of fields in the variant.\n *\n * - if the variant has no fields, the accessor directly returns ‹cast›.toUplcData(\\{ variantName: \\{\\} \\})\n *\n * - if the variant has a single field, the accessor is a function that takes the field value (with a strong type) and returns ‹cast›.toUplcData(\\{ variantName: \\{ fieldName: value \\} \\}\n *\n * - if the variant has multiple fields, the accessor is a function that takes a strongly-typed object having the fields and returns ‹cast›.toUplcData(\\{ variantName: \\{ ...fields \\} \\})\n *\n * 3. Datum creator functions return a InlineTxOutputDatum, not just UplcData.\n *\n * 4. Reader types use an ergonomic type, where enum variants at any level are merged into a single type, not a union of its variants. Enums and Structs with nested enums are also ergonomic.\n *\n * While gathering types, all the known type names are registered in a local namespace, with function implementations gathered for each type.\n *\n * As each type is encountered (as a **nested field** within a datum or redeemer), any named types encountered are added to the context, with any recursive expansions generated and added to the context, depth-first... then the named type is used for the **nested field** where it was encountered.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class dataBridgeGenerator extends "
            },
            {
              "kind": "Reference",
              "text": "BundleBasedGenerator",
              "canonicalReference": "@donecollectively/stellar-contracts!~BundleBasedGenerator:class"
            },
            {
              "kind": "Content",
              "text": " implements "
            },
            {
              "kind": "Reference",
              "text": "TypeGenHooks",
              "canonicalReference": "@donecollectively/stellar-contracts!~TypeGenHooks:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "dataBridgeTypeInfo",
              "canonicalReference": "@donecollectively/stellar-contracts!~dataBridgeTypeInfo:type"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/helios/dataBridge/dataBridgeGenerator.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "dataBridgeGenerator",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!dataBridgeGenerator#additionalCastMemberDefs:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "additionalCastMemberDefs: "
                },
                {
                  "kind": "Reference",
                  "text": "Record",
                  "canonicalReference": "!Record:type"
                },
                {
                  "kind": "Content",
                  "text": "<string, string>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "additionalCastMemberDefs",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!dataBridgeGenerator#gatherHelperClasses:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "gatherHelperClasses(): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "gatherHelperClasses"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!dataBridgeGenerator#generateDataBridge:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "generateDataBridge(inputFile: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", projectName?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "inputFile",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "projectName",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "generateDataBridge"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!dataBridgeGenerator#generateDataReaderClass:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "generateDataReaderClass(className: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "className",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "generateDataReaderClass"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!dataBridgeGenerator#getEnumPathExpr:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getEnumPathExpr(variantDetails: "
                },
                {
                  "kind": "Reference",
                  "text": "variantTypeDetails",
                  "canonicalReference": "@donecollectively/stellar-contracts!~variantTypeDetails:type"
                },
                {
                  "kind": "Content",
                  "text": "<any>"
                },
                {
                  "kind": "Content",
                  "text": ", quoted?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "variantDetails",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "quoted",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "getEnumPathExpr"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!dataBridgeGenerator#getMoreEnumInfo:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getMoreEnumInfo?(typeDetails: "
                },
                {
                  "kind": "Reference",
                  "text": "enumTypeDetails",
                  "canonicalReference": "@donecollectively/stellar-contracts!~enumTypeDetails:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "dataBridgeTypeInfo",
                  "canonicalReference": "@donecollectively/stellar-contracts!~dataBridgeTypeInfo:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "typeDetails",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": true,
              "isAbstract": false,
              "name": "getMoreEnumInfo"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!dataBridgeGenerator#getMoreStructInfo:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getMoreStructInfo?(typeDetails: "
                },
                {
                  "kind": "Reference",
                  "text": "typeDetails",
                  "canonicalReference": "@donecollectively/stellar-contracts!~typeDetails:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "dataBridgeTypeInfo",
                  "canonicalReference": "@donecollectively/stellar-contracts!~dataBridgeTypeInfo:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "typeDetails",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": true,
              "isAbstract": false,
              "name": "getMoreStructInfo"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!dataBridgeGenerator#getMoreTypeInfo:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getMoreTypeInfo?(details: "
                },
                {
                  "kind": "Reference",
                  "text": "typeDetails",
                  "canonicalReference": "@donecollectively/stellar-contracts!~typeDetails:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "dataBridgeTypeInfo",
                  "canonicalReference": "@donecollectively/stellar-contracts!~dataBridgeTypeInfo:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "details",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": true,
              "isAbstract": false,
              "name": "getMoreTypeInfo"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!dataBridgeGenerator#getMoreVariantInfo:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getMoreVariantInfo?(details: "
                },
                {
                  "kind": "Reference",
                  "text": "variantTypeDetails",
                  "canonicalReference": "@donecollectively/stellar-contracts!~variantTypeDetails:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "dataBridgeTypeInfo",
                  "canonicalReference": "@donecollectively/stellar-contracts!~dataBridgeTypeInfo:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "details",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": true,
              "isAbstract": false,
              "name": "getMoreVariantInfo"
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!dataBridgeGenerator#helperClasses:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "helperClasses: "
                },
                {
                  "kind": "Reference",
                  "text": "Record",
                  "canonicalReference": "!Record:type"
                },
                {
                  "kind": "Content",
                  "text": "<string, string>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "helperClasses",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!dataBridgeGenerator#includeActivityCreator:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "includeActivityCreator(): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "includeActivityCreator"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!dataBridgeGenerator#includeAllHelperClasses:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "includeAllHelperClasses(): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "includeAllHelperClasses"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!dataBridgeGenerator#includeCastMemberInitializers:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "includeCastMemberInitializers(): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "includeCastMemberInitializers"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!dataBridgeGenerator#includeDataReaderHelper:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "includeDataReaderHelper(): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "includeDataReaderHelper"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!dataBridgeGenerator#includeDatumAccessors:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "includeDatumAccessors(): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "includeDatumAccessors"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!dataBridgeGenerator#includeEnumReaders:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "includeEnumReaders(): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "includeEnumReaders"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!dataBridgeGenerator#includeEnumTypeAccessors:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "includeEnumTypeAccessors(): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "includeEnumTypeAccessors"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!dataBridgeGenerator#includeNamedSchemas:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "includeNamedSchemas(): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "includeNamedSchemas"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!dataBridgeGenerator#includeScriptNamedTypes:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "includeScriptNamedTypes(inputFile: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "inputFile",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "includeScriptNamedTypes"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!dataBridgeGenerator#includeStructReaders:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "includeStructReaders(): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "includeStructReaders"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!dataBridgeGenerator#includeStructTypeAccessors:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "includeStructTypeAccessors(): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "includeStructTypeAccessors"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!dataBridgeGenerator#includeTypeAccessors:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "includeTypeAccessors(): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "includeTypeAccessors"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!dataBridgeGenerator#includeUtilityFunctions:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "includeUtilityFunctions(): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "includeUtilityFunctions"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!dataBridgeGenerator#mkEnumHelperClass:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "mkEnumHelperClass(typeDetails: "
                },
                {
                  "kind": "Reference",
                  "text": "fullEnumTypeDetails",
                  "canonicalReference": "@donecollectively/stellar-contracts!~fullEnumTypeDetails:type"
                },
                {
                  "kind": "Content",
                  "text": ", isActivity?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ", isNested?: "
                },
                {
                  "kind": "Content",
                  "text": "\"isNested\""
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "typeDetails",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "isActivity",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": true
                },
                {
                  "parameterName": "isNested",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "mkEnumHelperClass"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!dataBridgeGenerator#mkEnumVariantAccessors:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "mkEnumVariantAccessors(enumDetails: "
                },
                {
                  "kind": "Reference",
                  "text": "fullEnumTypeDetails",
                  "canonicalReference": "@donecollectively/stellar-contracts!~fullEnumTypeDetails:type"
                },
                {
                  "kind": "Content",
                  "text": ", isDatum: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ", isActivity: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ", isNested?: "
                },
                {
                  "kind": "Content",
                  "text": "\"isNested\""
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 9,
                "endIndex": 10
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "enumDetails",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "isDatum",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "isActivity",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "isNested",
                  "parameterTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 8
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "mkEnumVariantAccessors"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!dataBridgeGenerator#mkNestedEnumAccessor:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "mkNestedEnumAccessor(enumTypeDetails: "
                },
                {
                  "kind": "Reference",
                  "text": "fullEnumTypeDetails",
                  "canonicalReference": "@donecollectively/stellar-contracts!~fullEnumTypeDetails:type"
                },
                {
                  "kind": "Content",
                  "text": ", variantDetails: "
                },
                {
                  "kind": "Reference",
                  "text": "variantTypeDetails",
                  "canonicalReference": "@donecollectively/stellar-contracts!~variantTypeDetails:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "dataBridgeTypeInfo",
                  "canonicalReference": "@donecollectively/stellar-contracts!~dataBridgeTypeInfo:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ", variantName: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", fieldName: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", oneField: "
                },
                {
                  "kind": "Reference",
                  "text": "anyTypeDetails",
                  "canonicalReference": "@donecollectively/stellar-contracts!~anyTypeDetails:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "dataBridgeTypeInfo",
                  "canonicalReference": "@donecollectively/stellar-contracts!~dataBridgeTypeInfo:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ", isInActivity?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 19,
                "endIndex": 20
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "enumTypeDetails",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "variantDetails",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 7
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "variantName",
                  "parameterTypeTokenRange": {
                    "startIndex": 8,
                    "endIndex": 9
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "fieldName",
                  "parameterTypeTokenRange": {
                    "startIndex": 10,
                    "endIndex": 11
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "oneField",
                  "parameterTypeTokenRange": {
                    "startIndex": 12,
                    "endIndex": 16
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "isInActivity",
                  "parameterTypeTokenRange": {
                    "startIndex": 17,
                    "endIndex": 18
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "mkNestedEnumAccessor"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!dataBridgeGenerator#mkOtherDataHelperClass:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "mkOtherDataHelperClass(helperClassName: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", details: "
                },
                {
                  "kind": "Reference",
                  "text": "fullTypeDetails",
                  "canonicalReference": "@donecollectively/stellar-contracts!~fullTypeDetails:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "helperClassName",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "details",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "mkOtherDataHelperClass"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!dataBridgeGenerator#mkStructHelperClass:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "mkStructHelperClass(typeDetails: "
                },
                {
                  "kind": "Reference",
                  "text": "fullTypeDetails",
                  "canonicalReference": "@donecollectively/stellar-contracts!~fullTypeDetails:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "typeDetails",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "mkStructHelperClass"
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!dataBridgeGenerator#namedSchemas:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "namedSchemas: "
                },
                {
                  "kind": "Reference",
                  "text": "Record",
                  "canonicalReference": "!Record:type"
                },
                {
                  "kind": "Content",
                  "text": "<string, "
                },
                {
                  "kind": "Reference",
                  "text": "TypeSchema",
                  "canonicalReference": "@helios-lang/type-utils!TypeSchema:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "namedSchemas",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!dataBridgeGenerator#nestedHelperClassName:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "nestedHelperClassName(typeDetails: "
                },
                {
                  "kind": "Reference",
                  "text": "fullEnumTypeDetails",
                  "canonicalReference": "@donecollectively/stellar-contracts!~fullEnumTypeDetails:type"
                },
                {
                  "kind": "Content",
                  "text": ", isActivity: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "typeDetails",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "isActivity",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "nestedHelperClassName"
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!dataBridgeGenerator#redeemerTypeName:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get redeemerTypeName(): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "redeemerTypeName",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "implementsTokenRanges": [
            {
              "startIndex": 3,
              "endIndex": 7
            }
          ]
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@donecollectively/stellar-contracts!DataBridgeOptions:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type DataBridgeOptions = "
            },
            {
              "kind": "Content",
              "text": "{\n    isActivity?: boolean;\n    isNested?: boolean;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/helios/dataBridge/DataBridge.ts",
          "releaseTag": "Public",
          "name": "DataBridgeOptions",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Class",
          "canonicalReference": "@donecollectively/stellar-contracts!DataBridgeReaderClass:class",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class DataBridgeReaderClass "
            }
          ],
          "fileUrlPath": "src/helios/dataBridge/DataBridge.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "DataBridgeReaderClass",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!DataBridgeReaderClass#datum:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "datum: "
                },
                {
                  "kind": "Reference",
                  "text": "readsUplcTo",
                  "canonicalReference": "@donecollectively/stellar-contracts!~readsUplcTo:type"
                },
                {
                  "kind": "Content",
                  "text": "<unknown> | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "datum",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            }
          ],
          "implementsTokenRanges": []
        },
        {
          "kind": "Function",
          "canonicalReference": "@donecollectively/stellar-contracts!datum:function(1)",
          "docComment": "/**\n * Decorates datum-building functions\n *\n * @remarks\n *\n * function names must follow the mkDatum... convention.\n *\n * The function should accept a single argument with input type that feels Typescripty, and that can be fit to the on-chain type of the underlying Datum variant of the given name.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function datum(proto: "
            },
            {
              "kind": "Content",
              "text": "any"
            },
            {
              "kind": "Content",
              "text": ", thingName: "
            },
            {
              "kind": "Content",
              "text": "any"
            },
            {
              "kind": "Content",
              "text": ", descriptor: "
            },
            {
              "kind": "Content",
              "text": "any"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "any"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/StellarContract.ts",
          "returnTypeTokenRange": {
            "startIndex": 7,
            "endIndex": 8
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "proto",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            },
            {
              "parameterName": "thingName",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": false
            },
            {
              "parameterName": "descriptor",
              "parameterTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "isOptional": false
            }
          ],
          "name": "datum"
        },
        {
          "kind": "Function",
          "canonicalReference": "@donecollectively/stellar-contracts!datumSummary:function(1)",
          "docComment": "/**\n * converts a Datum to a printable summary\n *\n * @remarks\n *\n * using shortening techniques for the datumHash\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function datumSummary(d: "
            },
            {
              "kind": "Reference",
              "text": "TxOutputDatum",
              "canonicalReference": "@helios-lang/ledger!TxOutputDatum:type"
            },
            {
              "kind": "Content",
              "text": " | null | undefined"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/diagnostics.ts",
          "returnTypeTokenRange": {
            "startIndex": 4,
            "endIndex": 5
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "d",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isOptional": false
            }
          ],
          "name": "datumSummary"
        },
        {
          "kind": "Class",
          "canonicalReference": "@donecollectively/stellar-contracts!DefaultCapoTestHelper:class",
          "docComment": "/**\n * Test helper for classes extending Capo\n *\n * @remarks\n *\n * Arranges an test environment with predefined actor-names having various amounts of ADA in their (emulated) wallets, and default helpers for setting up test scenarios. Provides a simplified framework for testing Stellar contracts extending the Capo class.\n *\n * To use it, you MUST extend DefaultCapoTestHelper<YourStellarCapoClass>.\n *\n * You MUST also implement a getter for stellarClass, returning the specific class for YourStellarCapoClass\n *\n * You SHOULD also implement a setupActors method to arrange named actors for your test scenarios. It's recommended to identify general roles of different people who will interact with the contract, and create one or more actor names for each role, where the actor names start with the same letter as the role-names. For example, a set of Trustees in a contract might have actor names tina, tracy and tom, while unprivileged Public users might have actor names like pablo and peter. setupActors() also should pre-assign some ADA funds to each actor: e.g. `this.addActor(‹actorName›, 142n * ADA)`\n *\n * @typeParam DC - the specific Capo subclass under test\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class DefaultCapoTestHelper<CAPO extends "
            },
            {
              "kind": "Reference",
              "text": "Capo",
              "canonicalReference": "@donecollectively/stellar-contracts!Capo:class"
            },
            {
              "kind": "Content",
              "text": "<any>"
            },
            {
              "kind": "Content",
              "text": " = "
            },
            {
              "kind": "Reference",
              "text": "CapoWithoutSettings",
              "canonicalReference": "@donecollectively/stellar-contracts!CapoWithoutSettings:class"
            },
            {
              "kind": "Content",
              "text": "> extends "
            },
            {
              "kind": "Reference",
              "text": "CapoTestHelper",
              "canonicalReference": "@donecollectively/stellar-contracts!CapoTestHelper:class"
            },
            {
              "kind": "Content",
              "text": "<CAPO>"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/testing/DefaultCapoTestHelper.ts",
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "CAPO",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "defaultTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 5
              }
            }
          ],
          "isAbstract": false,
          "name": "DefaultCapoTestHelper",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!DefaultCapoTestHelper#bootstrapSettings:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "bootstrapSettings(): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<any[] | undefined>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "bootstrapSettings"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!DefaultCapoTestHelper#checkDelegateScripts:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "checkDelegateScripts(args?: "
                },
                {
                  "kind": "Reference",
                  "text": "Partial",
                  "canonicalReference": "!Partial:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "MinimalCharterDataArgs",
                  "canonicalReference": "@donecollectively/stellar-contracts!MinimalCharterDataArgs:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<void>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "args",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 5
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "checkDelegateScripts"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!DefaultCapoTestHelper.forCapoClass:member(1)",
              "docComment": "/**\n * Creates a prepared test helper for a given Capo class, with boilerplate built-in\n *\n * @remarks\n *\n * You may wish to provide an overridden setupActors() method, to arrange actor names that fit your project's user-roles / profiles.\n *\n * You may also wish to add methods that satisfy some of your application's key use-cases in simple predefined ways, so that your automated tests can re-use the logic and syntax instead of repeating them in multiple test-cases.\n *\n * @param s - your Capo subclass\n *\n * @typeParam CAPO - no need to specify it; it's inferred from your parameter\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static forCapoClass<CAPO extends "
                },
                {
                  "kind": "Reference",
                  "text": "Capo",
                  "canonicalReference": "@donecollectively/stellar-contracts!Capo:class"
                },
                {
                  "kind": "Content",
                  "text": "<any>"
                },
                {
                  "kind": "Content",
                  "text": ">(s: "
                },
                {
                  "kind": "Reference",
                  "text": "stellarSubclass",
                  "canonicalReference": "@donecollectively/stellar-contracts!stellarSubclass:type"
                },
                {
                  "kind": "Content",
                  "text": "<CAPO>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "DefaultCapoTestHelperClass",
                  "canonicalReference": "@donecollectively/stellar-contracts!DefaultCapoTestHelperClass:type"
                },
                {
                  "kind": "Content",
                  "text": "<CAPO>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "CAPO",
                  "constraintTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "s",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 6
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "forCapoClass"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!DefaultCapoTestHelper#mintCharterToken:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "mintCharterToken(args?: "
                },
                {
                  "kind": "Reference",
                  "text": "Partial",
                  "canonicalReference": "!Partial:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "MinimalCharterDataArgs",
                  "canonicalReference": "@donecollectively/stellar-contracts!MinimalCharterDataArgs:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ", submitOptions?: "
                },
                {
                  "kind": "Reference",
                  "text": "SubmitOptions",
                  "canonicalReference": "@donecollectively/stellar-contracts!~SubmitOptions:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<import(\"../CapoTypes.js\")."
                },
                {
                  "kind": "Reference",
                  "text": "hasBootstrappedCapoConfig",
                  "canonicalReference": "@donecollectively/stellar-contracts!hasBootstrappedConfig:type"
                },
                {
                  "kind": "Content",
                  "text": " & import(\"../StellarTxnContext.js\")."
                },
                {
                  "kind": "Reference",
                  "text": "hasAddlTxns",
                  "canonicalReference": "@donecollectively/stellar-contracts!hasAddlTxns:type"
                },
                {
                  "kind": "Content",
                  "text": "<import(\"../CapoTypes.js\")."
                },
                {
                  "kind": "Reference",
                  "text": "hasBootstrappedCapoConfig",
                  "canonicalReference": "@donecollectively/stellar-contracts!hasBootstrappedConfig:type"
                },
                {
                  "kind": "Content",
                  "text": "> & import(\"../CapoTypes.js\")."
                },
                {
                  "kind": "Reference",
                  "text": "hasUutContext",
                  "canonicalReference": "@donecollectively/stellar-contracts!hasUutContext:type"
                },
                {
                  "kind": "Content",
                  "text": "<\"mintDelegate\" | \"capoGov\" | \"govAuthority\" | \"mintDgt\" | \"setting\"> & import(\"../CapoTypes.js\")."
                },
                {
                  "kind": "Reference",
                  "text": "hasUutContext",
                  "canonicalReference": "@donecollectively/stellar-contracts!hasUutContext:type"
                },
                {
                  "kind": "Content",
                  "text": "<\"mintDelegate\" | \"capoGov\" | \"spendDelegate\" | \"govAuthority\" | \"mintDgt\" | \"spendDgt\"> & import(\"../StellarTxnContext.js\")."
                },
                {
                  "kind": "Reference",
                  "text": "hasSeedUtxo",
                  "canonicalReference": "@donecollectively/stellar-contracts!hasSeedUtxo:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 8,
                "endIndex": 22
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "args",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 5
                  },
                  "isOptional": true
                },
                {
                  "parameterName": "submitOptions",
                  "parameterTypeTokenRange": {
                    "startIndex": 6,
                    "endIndex": 7
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "mintCharterToken"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!DefaultCapoTestHelper#mkCharterSpendTx:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "mkCharterSpendTx(): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "StellarTxnContext",
                  "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext:class"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "mkCharterSpendTx"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!DefaultCapoTestHelper#mkDefaultCharterArgs:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "mkDefaultCharterArgs(): "
                },
                {
                  "kind": "Reference",
                  "text": "MinimalCharterDataArgs",
                  "canonicalReference": "@donecollectively/stellar-contracts!MinimalCharterDataArgs:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "mkDefaultCharterArgs"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!DefaultCapoTestHelper#setDefaultActor:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "setDefaultActor(): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<void>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "setDefaultActor"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!DefaultCapoTestHelper#setupActors:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "setupActors(): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<void>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "setupActors"
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!DefaultCapoTestHelper#stellarClass:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get stellarClass(): "
                },
                {
                  "kind": "Reference",
                  "text": "stellarSubclass",
                  "canonicalReference": "@donecollectively/stellar-contracts!stellarSubclass:type"
                },
                {
                  "kind": "Content",
                  "text": "<CAPO>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "stellarClass",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!DefaultCapoTestHelper#updateCharter:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "updateCharter(args: "
                },
                {
                  "kind": "Reference",
                  "text": "CharterDataLike",
                  "canonicalReference": "@donecollectively/stellar-contracts!CharterDataLike:type"
                },
                {
                  "kind": "Content",
                  "text": ", submitSettings?: "
                },
                {
                  "kind": "Reference",
                  "text": "SubmitOptions",
                  "canonicalReference": "@donecollectively/stellar-contracts!~SubmitOptions:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "StellarTxnContext",
                  "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext:class"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "args",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "submitSettings",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "updateCharter"
            }
          ],
          "extendsTokenRange": {
            "startIndex": 6,
            "endIndex": 8
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@donecollectively/stellar-contracts!DefaultCapoTestHelperClass:type",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type DefaultCapoTestHelperClass<SC extends "
            },
            {
              "kind": "Reference",
              "text": "Capo",
              "canonicalReference": "@donecollectively/stellar-contracts!Capo:class"
            },
            {
              "kind": "Content",
              "text": "<any>"
            },
            {
              "kind": "Content",
              "text": "> = "
            },
            {
              "kind": "Content",
              "text": "new (config: "
            },
            {
              "kind": "Reference",
              "text": "ConfigFor",
              "canonicalReference": "@donecollectively/stellar-contracts!ConfigFor:type"
            },
            {
              "kind": "Content",
              "text": "<SC> & "
            },
            {
              "kind": "Reference",
              "text": "canHaveRandomSeed",
              "canonicalReference": "@donecollectively/stellar-contracts!~canHaveRandomSeed:type"
            },
            {
              "kind": "Content",
              "text": ") => "
            },
            {
              "kind": "Reference",
              "text": "StellarTestHelper",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarTestHelper:class"
            },
            {
              "kind": "Content",
              "text": "<SC> & "
            },
            {
              "kind": "Reference",
              "text": "DefaultCapoTestHelper",
              "canonicalReference": "@donecollectively/stellar-contracts!DefaultCapoTestHelper:class"
            },
            {
              "kind": "Content",
              "text": "<SC>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/testing/types.ts",
          "releaseTag": "Public",
          "name": "DefaultCapoTestHelperClass",
          "typeParameters": [
            {
              "typeParameterName": "SC",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 4,
            "endIndex": 13
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "@donecollectively/stellar-contracts!defaultNoDefinedModuleName:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "defaultNoDefinedModuleName = "
            },
            {
              "kind": "Content",
              "text": "\"\\u2039default-needs-override\\u203A\""
            }
          ],
          "fileUrlPath": "src/helios/HeliosScriptBundle.ts",
          "initializerTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "defaultNoDefinedModuleName",
          "variableTypeTokenRange": {
            "startIndex": 0,
            "endIndex": 0
          }
        },
        {
          "kind": "Function",
          "canonicalReference": "@donecollectively/stellar-contracts!defineRole:function(1)",
          "docComment": "/**\n * Creates a strongly-typed definition of a delegation role used in a Capo contract\n *\n * @remarks\n *\n * The definition ncludes the different strategy variants that can serve in that role.\n *\n * NOTE: all type parameters are inferred from the function params.\n *\n * @param uutBaseName - token-name prefix for the tokens connecting delegates for the role\n *\n * @param delegate - class and configuration for a selected delegate - see {@link DelegateConfigDetails}\n *\n * @param delegateType - the variety of delegate\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function defineRole<DT extends "
            },
            {
              "kind": "Reference",
              "text": "DelegateTypes",
              "canonicalReference": "@donecollectively/stellar-contracts!~DelegateTypes:type"
            },
            {
              "kind": "Content",
              "text": ", SC extends "
            },
            {
              "kind": "Content",
              "text": "(DT extends \"dgDataPolicy\" ? "
            },
            {
              "kind": "Reference",
              "text": "DelegatedDataContract",
              "canonicalReference": "@donecollectively/stellar-contracts!DelegatedDataContract:class"
            },
            {
              "kind": "Content",
              "text": "<any, any> : "
            },
            {
              "kind": "Reference",
              "text": "StellarDelegate",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarDelegate:class"
            },
            {
              "kind": "Content",
              "text": ")"
            },
            {
              "kind": "Content",
              "text": ", const CONFIG extends "
            },
            {
              "kind": "Reference",
              "text": "DelegateConfigDetails",
              "canonicalReference": "@donecollectively/stellar-contracts!DelegateConfigDetails:interface"
            },
            {
              "kind": "Content",
              "text": "<SC>"
            },
            {
              "kind": "Content",
              "text": ">(delegateType: "
            },
            {
              "kind": "Content",
              "text": "DT"
            },
            {
              "kind": "Content",
              "text": ", delegateClass: "
            },
            {
              "kind": "Reference",
              "text": "stellarSubclass",
              "canonicalReference": "@donecollectively/stellar-contracts!stellarSubclass:type"
            },
            {
              "kind": "Content",
              "text": "<SC>"
            },
            {
              "kind": "Content",
              "text": ", config: "
            },
            {
              "kind": "Content",
              "text": "CONFIG"
            },
            {
              "kind": "Content",
              "text": ", uutBaseName?: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "DelegateSetup",
              "canonicalReference": "@donecollectively/stellar-contracts!DelegateSetup:type"
            },
            {
              "kind": "Content",
              "text": "<DT, SC, CONFIG>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/delegation/RolesAndDelegates.ts",
          "returnTypeTokenRange": {
            "startIndex": 21,
            "endIndex": 23
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "delegateType",
              "parameterTypeTokenRange": {
                "startIndex": 12,
                "endIndex": 13
              },
              "isOptional": false
            },
            {
              "parameterName": "delegateClass",
              "parameterTypeTokenRange": {
                "startIndex": 14,
                "endIndex": 16
              },
              "isOptional": false
            },
            {
              "parameterName": "config",
              "parameterTypeTokenRange": {
                "startIndex": 17,
                "endIndex": 18
              },
              "isOptional": false
            },
            {
              "parameterName": "uutBaseName",
              "parameterTypeTokenRange": {
                "startIndex": 19,
                "endIndex": 20
              },
              "isOptional": true
            }
          ],
          "typeParameters": [
            {
              "typeParameterName": "DT",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "SC",
              "constraintTokenRange": {
                "startIndex": 3,
                "endIndex": 8
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "CONFIG",
              "constraintTokenRange": {
                "startIndex": 9,
                "endIndex": 11
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "defineRole"
        },
        {
          "kind": "Interface",
          "canonicalReference": "@donecollectively/stellar-contracts!DelegateConfigDetails:interface",
          "docComment": "/**\n * declaration for one strategy-variant of a delegate role\n *\n * @remarks\n *\n * Indicates the details needed to construct a delegate script\n *\n * NOTE: the Type param is always inferred by defineRole()\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface DelegateConfigDetails<DT extends "
            },
            {
              "kind": "Reference",
              "text": "StellarDelegate",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarDelegate:class"
            },
            {
              "kind": "Content",
              "text": "> "
            }
          ],
          "fileUrlPath": "src/delegation/RolesAndDelegates.ts",
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "DT",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "DelegateConfigDetails",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@donecollectively/stellar-contracts!DelegateConfigDetails#partialConfig:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "partialConfig?: "
                },
                {
                  "kind": "Reference",
                  "text": "PartialParamConfig",
                  "canonicalReference": "@donecollectively/stellar-contracts!~PartialParamConfig:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "ConfigFor",
                  "canonicalReference": "@donecollectively/stellar-contracts!ConfigFor:type"
                },
                {
                  "kind": "Content",
                  "text": "<DT>>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "partialConfig",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@donecollectively/stellar-contracts!DelegateConfigDetails#validateConfig:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "validateConfig?: "
                },
                {
                  "kind": "Content",
                  "text": "(p: "
                },
                {
                  "kind": "Reference",
                  "text": "ConfigFor",
                  "canonicalReference": "@donecollectively/stellar-contracts!ConfigFor:type"
                },
                {
                  "kind": "Content",
                  "text": "<DT>) => "
                },
                {
                  "kind": "Reference",
                  "text": "delegateConfigValidation",
                  "canonicalReference": "@donecollectively/stellar-contracts!delegateConfigValidation:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "validateConfig",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "@donecollectively/stellar-contracts!DelegatedDataContract:class",
          "docComment": "/**\n * DelegatedDataContract provides a base class for utility functions to simplify implementation of delegate controllers. They are used to manage the creation and updating of records in a delegated data store, where the data is stored in a Capo, and the controller is forced into the transaction by the Capo's delegate policy (or its spend-delegate's).\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare abstract class DelegatedDataContract<T extends "
            },
            {
              "kind": "Reference",
              "text": "AnyDataTemplate",
              "canonicalReference": "@donecollectively/stellar-contracts!AnyDataTemplate:type"
            },
            {
              "kind": "Content",
              "text": "<any, any>"
            },
            {
              "kind": "Content",
              "text": ", TLike extends "
            },
            {
              "kind": "Reference",
              "text": "AnyDataTemplate",
              "canonicalReference": "@donecollectively/stellar-contracts!AnyDataTemplate:type"
            },
            {
              "kind": "Content",
              "text": "<any, any>"
            },
            {
              "kind": "Content",
              "text": "> extends "
            },
            {
              "kind": "Reference",
              "text": "ContractBasedDelegate",
              "canonicalReference": "@donecollectively/stellar-contracts!ContractBasedDelegate:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/delegation/DelegatedDataContract.ts",
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "TLike",
              "constraintTokenRange": {
                "startIndex": 4,
                "endIndex": 6
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "isAbstract": true,
          "name": "DelegatedDataContract",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!DelegatedDataContract#abstractBundleClass:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get abstractBundleClass(): "
                },
                {
                  "kind": "Content",
                  "text": "undefined | typeof "
                },
                {
                  "kind": "Reference",
                  "text": "CapoDelegateBundle",
                  "canonicalReference": "@donecollectively/stellar-contracts!CapoDelegateBundle:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "abstractBundleClass",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!DelegatedDataContract#creationDefaultDetails:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "creationDefaultDetails(): "
                },
                {
                  "kind": "Reference",
                  "text": "Partial",
                  "canonicalReference": "!Partial:type"
                },
                {
                  "kind": "Content",
                  "text": "<TLike>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "creationDefaultDetails"
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!DelegatedDataContract#delegateName:member",
              "docComment": "/**\n * Provides a customized label for the delegate, used in place of a generic script name (\"BasicDelegate\"). DelegatedDataContract provides a default name with the record type name and \"Pol\" suffix.\n *\n * Affects the on-chain logging for the policy and the compiled script output in the script-cache on-disk or in browser's storage.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get delegateName(): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "delegateName",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!DelegatedDataContract#dgDatumHelper:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "dgDatumHelper: "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "dgDatumHelper",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!DelegatedDataContract#exampleData:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "abstract exampleData(): "
                },
                {
                  "kind": "Reference",
                  "text": "minimalData",
                  "canonicalReference": "@donecollectively/stellar-contracts!minimalData:type"
                },
                {
                  "kind": "Content",
                  "text": "<TLike>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": true,
              "name": "exampleData"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!DelegatedDataContract#findRecords:member(1)",
              "docComment": "/**\n * Finds records of this delegate's type, optionally by ID.\n *\n * @remarks\n *\n * Returns a record list when no ID is provided, or a single record when an ID is provided.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "findRecords<THIS extends "
                },
                {
                  "kind": "Reference",
                  "text": "DelegatedDataContract",
                  "canonicalReference": "@donecollectively/stellar-contracts!DelegatedDataContract:class"
                },
                {
                  "kind": "Content",
                  "text": "<any, any>"
                },
                {
                  "kind": "Content",
                  "text": ", ID extends "
                },
                {
                  "kind": "Content",
                  "text": "undefined | string | "
                },
                {
                  "kind": "Reference",
                  "text": "UutName",
                  "canonicalReference": "@donecollectively/stellar-contracts!UutName:class"
                },
                {
                  "kind": "Content",
                  "text": " | number[]"
                },
                {
                  "kind": "Content",
                  "text": ">(this: "
                },
                {
                  "kind": "Content",
                  "text": "THIS"
                },
                {
                  "kind": "Content",
                  "text": ", options?: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        id?: T;\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<ID extends undefined ? "
                },
                {
                  "kind": "Reference",
                  "text": "FoundDatumUtxo",
                  "canonicalReference": "@donecollectively/stellar-contracts!FoundDatumUtxo:type"
                },
                {
                  "kind": "Content",
                  "text": "<T, TLike>[] : "
                },
                {
                  "kind": "Reference",
                  "text": "FoundDatumUtxo",
                  "canonicalReference": "@donecollectively/stellar-contracts!FoundDatumUtxo:type"
                },
                {
                  "kind": "Content",
                  "text": "<T, TLike>>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "THIS",
                  "constraintTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "typeParameterName": "ID",
                  "constraintTokenRange": {
                    "startIndex": 4,
                    "endIndex": 7
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 12,
                "endIndex": 18
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "this",
                  "parameterTypeTokenRange": {
                    "startIndex": 8,
                    "endIndex": 9
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 10,
                    "endIndex": 11
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "findRecords"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!DelegatedDataContract#getReturnAddress:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getReturnAddress(): "
                },
                {
                  "kind": "Content",
                  "text": "import(\"@helios-lang/ledger\")."
                },
                {
                  "kind": "Reference",
                  "text": "Address",
                  "canonicalReference": "@helios-lang/ledger!Address:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "getReturnAddress"
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!DelegatedDataContract#idPrefix:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "abstract get idPrefix(): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "idPrefix",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": true
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!DelegatedDataContract#mkDgDatum:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "mkDgDatum<THIS extends "
                },
                {
                  "kind": "Reference",
                  "text": "DelegatedDataContract",
                  "canonicalReference": "@donecollectively/stellar-contracts!DelegatedDataContract:class"
                },
                {
                  "kind": "Content",
                  "text": "<any, any>"
                },
                {
                  "kind": "Content",
                  "text": ">(this: "
                },
                {
                  "kind": "Content",
                  "text": "THIS"
                },
                {
                  "kind": "Content",
                  "text": ", record: "
                },
                {
                  "kind": "Content",
                  "text": "TLike"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "InlineDatum",
                  "canonicalReference": "@donecollectively/stellar-contracts!InlineDatum:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "THIS",
                  "constraintTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 8,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "this",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "record",
                  "parameterTypeTokenRange": {
                    "startIndex": 6,
                    "endIndex": 7
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "mkDgDatum"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!DelegatedDataContract#mkTxnCreateRecord:member(1)",
              "docComment": "/**\n * builds a txn creating a record of this type in the data store\n *\n * @remarks\n *\n * The {activity} option can be a {@link SeedActivity} object provided by `this.activity.MintingActivities.$seeded$‹activityName›` accessors/methods, which creates a record id based on the (unique) spend of a seed value.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "mkTxnCreateRecord<TCX extends "
                },
                {
                  "kind": "Reference",
                  "text": "StellarTxnContext",
                  "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext:class"
                },
                {
                  "kind": "Content",
                  "text": ">(options: "
                },
                {
                  "kind": "Reference",
                  "text": "DgDataCreationOptions",
                  "canonicalReference": "@donecollectively/stellar-contracts!~DgDataCreationOptions:type"
                },
                {
                  "kind": "Content",
                  "text": "<TLike>"
                },
                {
                  "kind": "Content",
                  "text": ", tcx?: "
                },
                {
                  "kind": "Content",
                  "text": "TCX"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<TCX>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "TCX",
                  "constraintTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 8,
                "endIndex": 10
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 5
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "tcx",
                  "parameterTypeTokenRange": {
                    "startIndex": 6,
                    "endIndex": 7
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "mkTxnCreateRecord"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!DelegatedDataContract#mkTxnUpdateRecord:member(1)",
              "docComment": "/**\n * Creates a transaction for updating a record in the delegated data store\n *\n * @remarks\n *\n * Provide a transaction name, an existing item, and a controller activity to trigger. The activity MUST either be an activity triggering one of the controller's SpendingActivity variants, or the result of calling {@link DelegatedDataContract.usesUpdateActivity | usesUpdateActivity()}. **or TODO support a multi-activity**\n *\n * The updatedRecord only needs to contain the fields that are being updated.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "mkTxnUpdateRecord<TCX extends "
                },
                {
                  "kind": "Reference",
                  "text": "StellarTxnContext",
                  "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext:class"
                },
                {
                  "kind": "Content",
                  "text": ">(this: "
                },
                {
                  "kind": "Reference",
                  "text": "DelegatedDataContract",
                  "canonicalReference": "@donecollectively/stellar-contracts!DelegatedDataContract:class"
                },
                {
                  "kind": "Content",
                  "text": "<any, any>"
                },
                {
                  "kind": "Content",
                  "text": ", txnName: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", item: "
                },
                {
                  "kind": "Reference",
                  "text": "FoundDatumUtxo",
                  "canonicalReference": "@donecollectively/stellar-contracts!FoundDatumUtxo:type"
                },
                {
                  "kind": "Content",
                  "text": "<T, any>"
                },
                {
                  "kind": "Content",
                  "text": ", options: "
                },
                {
                  "kind": "Reference",
                  "text": "DgDataUpdateOptions",
                  "canonicalReference": "@donecollectively/stellar-contracts!~DgDataUpdateOptions:type"
                },
                {
                  "kind": "Content",
                  "text": "<TLike>"
                },
                {
                  "kind": "Content",
                  "text": ", tcx?: "
                },
                {
                  "kind": "Content",
                  "text": "TCX"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<TCX>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "TCX",
                  "constraintTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 16,
                "endIndex": 18
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "this",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 5
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "txnName",
                  "parameterTypeTokenRange": {
                    "startIndex": 6,
                    "endIndex": 7
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "item",
                  "parameterTypeTokenRange": {
                    "startIndex": 8,
                    "endIndex": 10
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 11,
                    "endIndex": 13
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "tcx",
                  "parameterTypeTokenRange": {
                    "startIndex": 14,
                    "endIndex": 15
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "mkTxnUpdateRecord"
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!DelegatedDataContract#needsGovAuthority:member",
              "docComment": "/**\n * when set to true, the controller class will include the Capo's gov authority in the transaction, to ease transaction setup.\n *\n * @remarks\n *\n * This is a convenience for the controller, and should be used along with the appropriate on-chain policy to require the gov token's presence.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "needsGovAuthority: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "needsGovAuthority",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!DelegatedDataContract#recordTypeName:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "abstract get recordTypeName(): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "recordTypeName",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": true
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!DelegatedDataContract#requirements:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "abstract requirements(): "
                },
                {
                  "kind": "Reference",
                  "text": "ReqtsMap",
                  "canonicalReference": "@donecollectively/stellar-contracts!ReqtsMap:type"
                },
                {
                  "kind": "Content",
                  "text": "<any, any> | "
                },
                {
                  "kind": "Reference",
                  "text": "ReqtsMap",
                  "canonicalReference": "@donecollectively/stellar-contracts!ReqtsMap:type"
                },
                {
                  "kind": "Content",
                  "text": "<any, never>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": true,
              "name": "requirements"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!DelegatedDataContract#returnUpdatedRecord:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "returnUpdatedRecord<TCX extends "
                },
                {
                  "kind": "Reference",
                  "text": "StellarTxnContext",
                  "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext:class"
                },
                {
                  "kind": "Content",
                  "text": " & "
                },
                {
                  "kind": "Reference",
                  "text": "hasCharterRef",
                  "canonicalReference": "@donecollectively/stellar-contracts!hasCharterRef:type"
                },
                {
                  "kind": "Content",
                  "text": ">(tcx: "
                },
                {
                  "kind": "Content",
                  "text": "TCX"
                },
                {
                  "kind": "Content",
                  "text": ", returnedValue: "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "@helios-lang/ledger!Value:type"
                },
                {
                  "kind": "Content",
                  "text": ", updatedRecord: "
                },
                {
                  "kind": "Content",
                  "text": "TLike"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "TCX"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "TCX",
                  "constraintTokenRange": {
                    "startIndex": 1,
                    "endIndex": 4
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 11,
                "endIndex": 12
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "tcx",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "returnedValue",
                  "parameterTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 8
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "updatedRecord",
                  "parameterTypeTokenRange": {
                    "startIndex": 9,
                    "endIndex": 10
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "returnUpdatedRecord"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!DelegatedDataContract#scriptBundle:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "scriptBundle(): "
                },
                {
                  "kind": "Reference",
                  "text": "CapoDelegateBundle",
                  "canonicalReference": "@donecollectively/stellar-contracts!CapoDelegateBundle:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "scriptBundle"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!DelegatedDataContract#txnCreatingRecord:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "txnCreatingRecord<TCX extends "
                },
                {
                  "kind": "Reference",
                  "text": "StellarTxnContext",
                  "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext:class"
                },
                {
                  "kind": "Content",
                  "text": " & "
                },
                {
                  "kind": "Reference",
                  "text": "hasCharterRef",
                  "canonicalReference": "@donecollectively/stellar-contracts!hasCharterRef:type"
                },
                {
                  "kind": "Content",
                  "text": " & "
                },
                {
                  "kind": "Reference",
                  "text": "hasSeedUtxo",
                  "canonicalReference": "@donecollectively/stellar-contracts!hasSeedUtxo:type"
                },
                {
                  "kind": "Content",
                  "text": " & "
                },
                {
                  "kind": "Reference",
                  "text": "hasUutContext",
                  "canonicalReference": "@donecollectively/stellar-contracts!hasUutContext:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "DelegatedDatumIdPrefix",
                  "canonicalReference": "@donecollectively/stellar-contracts!~DelegatedDatumIdPrefix:type"
                },
                {
                  "kind": "Content",
                  "text": "<this>>"
                },
                {
                  "kind": "Content",
                  "text": ">(tcx: "
                },
                {
                  "kind": "Content",
                  "text": "TCX"
                },
                {
                  "kind": "Content",
                  "text": ", options: "
                },
                {
                  "kind": "Reference",
                  "text": "CoreDgDataCreationOptions",
                  "canonicalReference": "@donecollectively/stellar-contracts!~CoreDgDataCreationOptions:type"
                },
                {
                  "kind": "Content",
                  "text": "<TLike>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<TCX>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "TCX",
                  "constraintTokenRange": {
                    "startIndex": 1,
                    "endIndex": 11
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 17,
                "endIndex": 19
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "tcx",
                  "parameterTypeTokenRange": {
                    "startIndex": 12,
                    "endIndex": 13
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 14,
                    "endIndex": 16
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "txnCreatingRecord"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!DelegatedDataContract#txnUpdatingRecord:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "txnUpdatingRecord<TCX extends "
                },
                {
                  "kind": "Reference",
                  "text": "StellarTxnContext",
                  "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext:class"
                },
                {
                  "kind": "Content",
                  "text": " & "
                },
                {
                  "kind": "Reference",
                  "text": "hasCharterRef",
                  "canonicalReference": "@donecollectively/stellar-contracts!hasCharterRef:type"
                },
                {
                  "kind": "Content",
                  "text": ">(tcx: "
                },
                {
                  "kind": "Content",
                  "text": "TCX"
                },
                {
                  "kind": "Content",
                  "text": ", id: "
                },
                {
                  "kind": "Reference",
                  "text": "hasRecId",
                  "canonicalReference": "@donecollectively/stellar-contracts!~hasRecId:type"
                },
                {
                  "kind": "Content",
                  "text": ", item: "
                },
                {
                  "kind": "Reference",
                  "text": "FoundDatumUtxo",
                  "canonicalReference": "@donecollectively/stellar-contracts!FoundDatumUtxo:type"
                },
                {
                  "kind": "Content",
                  "text": "<T, any>"
                },
                {
                  "kind": "Content",
                  "text": ", options: "
                },
                {
                  "kind": "Reference",
                  "text": "CoreDgDataUpdateOptions",
                  "canonicalReference": "@donecollectively/stellar-contracts!~CoreDgDataUpdateOptions:type"
                },
                {
                  "kind": "Content",
                  "text": "<TLike>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<TCX>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "TCX",
                  "constraintTokenRange": {
                    "startIndex": 1,
                    "endIndex": 4
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 15,
                "endIndex": 17
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "tcx",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "id",
                  "parameterTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 8
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "item",
                  "parameterTypeTokenRange": {
                    "startIndex": 9,
                    "endIndex": 11
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 12,
                    "endIndex": 14
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "txnUpdatingRecord"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!DelegatedDataContract#usesSeedActivity:member(1)",
              "docComment": "/**\n * Intuition hook redirecting to activity.MintingActivities.$seeded$...\n *\n * @remarks\n *\n * @deprecated\n *\n * use activites.MintingActivites.$seeded$* accessors/methods instead.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "usesSeedActivity<SA extends "
                },
                {
                  "kind": "Reference",
                  "text": "seedActivityFunc",
                  "canonicalReference": "@donecollectively/stellar-contracts!seedActivityFunc:type"
                },
                {
                  "kind": "Content",
                  "text": "<any, any>"
                },
                {
                  "kind": "Content",
                  "text": ">(a: "
                },
                {
                  "kind": "Content",
                  "text": "SA"
                },
                {
                  "kind": "Content",
                  "text": ", seedPlaceholder: "
                },
                {
                  "kind": "Content",
                  "text": "\"...seed\""
                },
                {
                  "kind": "Content",
                  "text": ", ...args: "
                },
                {
                  "kind": "Reference",
                  "text": "SeedActivityArg",
                  "canonicalReference": "@donecollectively/stellar-contracts!SeedActivityArg:type"
                },
                {
                  "kind": "Content",
                  "text": "<SA>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "SA",
                  "constraintTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 11,
                "endIndex": 12
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "a",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "seedPlaceholder",
                  "parameterTypeTokenRange": {
                    "startIndex": 6,
                    "endIndex": 7
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "args",
                  "parameterTypeTokenRange": {
                    "startIndex": 8,
                    "endIndex": 10
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "usesSeedActivity"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!DelegatedDataContract#usesUpdateActivity:member(1)",
              "docComment": "/**\n * Creates an indirect reference to an an update activity with arguments, using a record-id placeholder.\n *\n * @remarks\n *\n * Provide an update activity function, a placeholder for the record-id, any other args for the on-chain activity/redeemer. The update-activity function can be any of this contract's `activity.SpendingActivities.*` functions.\n *\n * This approach is similar to the creation-time {@link DelegatedDataContract.usesSeedActivity | usesSeedActivity()} method, with a \"...recId\" placeholder instead of a \"...seed\" placeholder.\n *\n * The arguments are passed to the update activity function, which is expected to return an {@link isActivity} object serializing the `{redeemer}` data as a UplcData object. Normally that's done with {@link ContractBasedDelegate.mkSpendingActivity | mkSpendingActivity()}.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "usesUpdateActivity<UA extends "
                },
                {
                  "kind": "Reference",
                  "text": "updateActivityFunc",
                  "canonicalReference": "@donecollectively/stellar-contracts!updateActivityFunc:type"
                },
                {
                  "kind": "Content",
                  "text": "<any>"
                },
                {
                  "kind": "Content",
                  "text": ">(a: "
                },
                {
                  "kind": "Content",
                  "text": "UA"
                },
                {
                  "kind": "Content",
                  "text": ", _idPlaceholder: "
                },
                {
                  "kind": "Content",
                  "text": "\"...recId\""
                },
                {
                  "kind": "Content",
                  "text": ", ...args: "
                },
                {
                  "kind": "Reference",
                  "text": "UpdateActivityArgs",
                  "canonicalReference": "@donecollectively/stellar-contracts!~UpdateActivityArgs:type"
                },
                {
                  "kind": "Content",
                  "text": "<UA>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "UpdateActivity",
                  "canonicalReference": "@donecollectively/stellar-contracts!~UpdateActivity:class"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "updateActivityFunc",
                  "canonicalReference": "@donecollectively/stellar-contracts!updateActivityFunc:type"
                },
                {
                  "kind": "Content",
                  "text": "<any>, "
                },
                {
                  "kind": "Reference",
                  "text": "UpdateActivityArgs",
                  "canonicalReference": "@donecollectively/stellar-contracts!~UpdateActivityArgs:type"
                },
                {
                  "kind": "Content",
                  "text": "<UA>>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "UA",
                  "constraintTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 11,
                "endIndex": 17
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "a",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "_idPlaceholder",
                  "parameterTypeTokenRange": {
                    "startIndex": 6,
                    "endIndex": 7
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "args",
                  "parameterTypeTokenRange": {
                    "startIndex": 8,
                    "endIndex": 10
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "usesUpdateActivity"
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!DelegatedDataContract#usesWrappedData:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "usesWrappedData?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "usesWrappedData",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 7,
            "endIndex": 8
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@donecollectively/stellar-contracts!DelegatedDataPredicate:type",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type DelegatedDataPredicate<DATUM_TYPE extends "
            },
            {
              "kind": "Reference",
              "text": "AnyDataTemplate",
              "canonicalReference": "@donecollectively/stellar-contracts!AnyDataTemplate:type"
            },
            {
              "kind": "Content",
              "text": "<any, any>"
            },
            {
              "kind": "Content",
              "text": "> = "
            },
            {
              "kind": "Content",
              "text": "(utxo: "
            },
            {
              "kind": "Reference",
              "text": "TxInput",
              "canonicalReference": "@helios-lang/ledger!TxInput:type"
            },
            {
              "kind": "Content",
              "text": ", data: DATUM_TYPE) => boolean"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/CapoTypes.ts",
          "releaseTag": "Public",
          "name": "DelegatedDataPredicate",
          "typeParameters": [
            {
              "typeParameterName": "DATUM_TYPE",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 4,
            "endIndex": 7
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@donecollectively/stellar-contracts!DelegatedDatumTypeName:type",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type DelegatedDatumTypeName<T extends "
            },
            {
              "kind": "Reference",
              "text": "DelegatedDataContract",
              "canonicalReference": "@donecollectively/stellar-contracts!DelegatedDataContract:class"
            },
            {
              "kind": "Content",
              "text": "<any, any>"
            },
            {
              "kind": "Content",
              "text": ", TN extends "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": " = "
            },
            {
              "kind": "Content",
              "text": "T[\"recordTypeName\"]"
            },
            {
              "kind": "Content",
              "text": "> = "
            },
            {
              "kind": "Content",
              "text": "TN"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/delegation/DelegatedDataContract.ts",
          "releaseTag": "Public",
          "name": "DelegatedDatumTypeName",
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "TN",
              "constraintTokenRange": {
                "startIndex": 4,
                "endIndex": 5
              },
              "defaultTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 8,
            "endIndex": 9
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@donecollectively/stellar-contracts!DelegateMap:type",
          "docComment": "/**\n * Richly-typed structure that can capture the various delegation roles available in a Capo contract\n *\n * @remarks\n *\n * Defined in a delegateRoles() method using the standalone delegateRoles() and defineRole() helper functions.\n *\n * @typeParam KR - deep, strong type of the role map - always inferred by delegateRoles() helper.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type DelegateMap<KR extends "
            },
            {
              "kind": "Reference",
              "text": "Record",
              "canonicalReference": "!Record:type"
            },
            {
              "kind": "Content",
              "text": "<string, "
            },
            {
              "kind": "Reference",
              "text": "DelegateSetup",
              "canonicalReference": "@donecollectively/stellar-contracts!DelegateSetup:type"
            },
            {
              "kind": "Content",
              "text": "<any, any, any>>"
            },
            {
              "kind": "Content",
              "text": "> = "
            },
            {
              "kind": "Content",
              "text": "{\n    [roleName in keyof KR]: KR[roleName];\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/delegation/RolesAndDelegates.ts",
          "releaseTag": "Public",
          "name": "DelegateMap",
          "typeParameters": [
            {
              "typeParameterName": "KR",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 6,
            "endIndex": 7
          }
        },
        {
          "kind": "Function",
          "canonicalReference": "@donecollectively/stellar-contracts!delegateRoles:function(1)",
          "docComment": "/**\n * Standalone helper method defining a specific DelegateMap; used in a Capo's delegateRoles() instance method\n *\n * @remarks\n *\n * Called with a set of literal role defintitions, the full type of the DelegateMap is inferred.\n *\n * Use {@link defineRole}() to create each role entry\n *\n * @param roleMap - maps role-names to role-definitions\n *\n * @typeParam RM - inferred type of the `delegateMap` param\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function delegateRoles<const RM extends "
            },
            {
              "kind": "Reference",
              "text": "DelegateMap",
              "canonicalReference": "@donecollectively/stellar-contracts!DelegateMap:type"
            },
            {
              "kind": "Content",
              "text": "<any>"
            },
            {
              "kind": "Content",
              "text": ">(delegateMap: "
            },
            {
              "kind": "Content",
              "text": "RM"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "DelegateMap",
              "canonicalReference": "@donecollectively/stellar-contracts!DelegateMap:type"
            },
            {
              "kind": "Content",
              "text": "<RM>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/delegation/RolesAndDelegates.ts",
          "returnTypeTokenRange": {
            "startIndex": 6,
            "endIndex": 8
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "delegateMap",
              "parameterTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 5
              },
              "isOptional": false
            }
          ],
          "typeParameters": [
            {
              "typeParameterName": "RM",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "delegateRoles"
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@donecollectively/stellar-contracts!DelegateSetup:type",
          "docComment": "/**\n * Describes one delegation role used in a Capo contract\n *\n * @remarks\n *\n * Includes the controller / delegate class, the configuration details for that class, and a uutPurpose (base name for the authority tokens).\n *\n * All type-parameters are normally inferred from {@link defineRole}()\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type DelegateSetup<DT extends "
            },
            {
              "kind": "Reference",
              "text": "DelegateTypes",
              "canonicalReference": "@donecollectively/stellar-contracts!~DelegateTypes:type"
            },
            {
              "kind": "Content",
              "text": ", SC extends "
            },
            {
              "kind": "Content",
              "text": "(DT extends \"dgDataPolicy\" ? "
            },
            {
              "kind": "Reference",
              "text": "DelegatedDataContract",
              "canonicalReference": "@donecollectively/stellar-contracts!DelegatedDataContract:class"
            },
            {
              "kind": "Content",
              "text": "<any, any> : "
            },
            {
              "kind": "Reference",
              "text": "StellarDelegate",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarDelegate:class"
            },
            {
              "kind": "Content",
              "text": ")"
            },
            {
              "kind": "Content",
              "text": ", CONFIG extends "
            },
            {
              "kind": "Reference",
              "text": "DelegateConfigDetails",
              "canonicalReference": "@donecollectively/stellar-contracts!DelegateConfigDetails:interface"
            },
            {
              "kind": "Content",
              "text": "<SC>"
            },
            {
              "kind": "Content",
              "text": "> = "
            },
            {
              "kind": "Content",
              "text": "{\n    uutPurpose: string;\n    delegateType: "
            },
            {
              "kind": "Reference",
              "text": "DelegateTypes",
              "canonicalReference": "@donecollectively/stellar-contracts!~DelegateTypes:type"
            },
            {
              "kind": "Content",
              "text": ";\n    delegateClass: "
            },
            {
              "kind": "Reference",
              "text": "stellarSubclass",
              "canonicalReference": "@donecollectively/stellar-contracts!stellarSubclass:type"
            },
            {
              "kind": "Content",
              "text": "<SC>;\n    config: CONFIG;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/delegation/RolesAndDelegates.ts",
          "releaseTag": "Public",
          "name": "DelegateSetup",
          "typeParameters": [
            {
              "typeParameterName": "DT",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "SC",
              "constraintTokenRange": {
                "startIndex": 3,
                "endIndex": 8
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "CONFIG",
              "constraintTokenRange": {
                "startIndex": 9,
                "endIndex": 11
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 12,
            "endIndex": 17
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@donecollectively/stellar-contracts!DgDataCreationAttrs:type",
          "docComment": "/**\n * @deprecated\n *\n * use minimalDgDataTypeLike instead\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type DgDataCreationAttrs<T extends "
            },
            {
              "kind": "Reference",
              "text": "DelegatedDataContract",
              "canonicalReference": "@donecollectively/stellar-contracts!DelegatedDataContract:class"
            },
            {
              "kind": "Content",
              "text": "<any, any>"
            },
            {
              "kind": "Content",
              "text": "> = "
            },
            {
              "kind": "Reference",
              "text": "Omit",
              "canonicalReference": "!Omit:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "DgDataTypeLike",
              "canonicalReference": "@donecollectively/stellar-contracts!~DgDataTypeLike:type"
            },
            {
              "kind": "Content",
              "text": "<T>, \"id\" | \"type\">"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/delegation/DelegatedDataContract.ts",
          "releaseTag": "Public",
          "name": "DgDataCreationAttrs",
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 4,
            "endIndex": 8
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@donecollectively/stellar-contracts!dgtStateKey:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type dgtStateKey<N extends "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ", PREFIX extends "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": " = "
            },
            {
              "kind": "Content",
              "text": "\"dgPol\""
            },
            {
              "kind": "Content",
              "text": "> = "
            },
            {
              "kind": "Content",
              "text": "`${PREFIX}${"
            },
            {
              "kind": "Reference",
              "text": "Capitalize",
              "canonicalReference": "!Capitalize:type"
            },
            {
              "kind": "Content",
              "text": "<N>}`"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/CapoTypes.ts",
          "releaseTag": "Public",
          "name": "dgtStateKey",
          "typeParameters": [
            {
              "typeParameterName": "N",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "PREFIX",
              "constraintTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "defaultTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 7,
            "endIndex": 10
          }
        },
        {
          "kind": "Function",
          "canonicalReference": "@donecollectively/stellar-contracts!displayTokenName:function(1)",
          "docComment": "/**\n * Displays a token name in a human-readable form\n *\n * @remarks\n *\n * Recognizes CIP-68 token names and displays them in a special format.\n *\n * @param nameBytesOrString - the token name, as a string or byte array\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function displayTokenName(nameBytesOrString: "
            },
            {
              "kind": "Content",
              "text": "string | number[]"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/diagnostics.ts",
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "nameBytesOrString",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            }
          ],
          "name": "displayTokenName"
        },
        {
          "kind": "Function",
          "canonicalReference": "@donecollectively/stellar-contracts!dumpAny:function(1)",
          "docComment": "/**\n * Converts any (supported) input arg to string\n *\n * @remarks\n *\n * more types to be supported TODO\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function dumpAny(x: "
            },
            {
              "kind": "Content",
              "text": "undefined | "
            },
            {
              "kind": "Reference",
              "text": "Tx",
              "canonicalReference": "@helios-lang/ledger!Tx:type"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "StellarTxnContext",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext:class"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "Address",
              "canonicalReference": "@helios-lang/ledger!Address:type"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "MintingPolicyHash",
              "canonicalReference": "@helios-lang/ledger!MintingPolicyHash:type"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "Value",
              "canonicalReference": "@helios-lang/ledger!Value:type"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "TxOutputId",
              "canonicalReference": "@helios-lang/ledger!TxOutputId:type"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "TxOutput",
              "canonicalReference": "@helios-lang/ledger!TxOutput:type"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "TxOutput",
              "canonicalReference": "@helios-lang/ledger!TxOutput:type"
            },
            {
              "kind": "Content",
              "text": "[] | "
            },
            {
              "kind": "Reference",
              "text": "TxInput",
              "canonicalReference": "@helios-lang/ledger!TxInput:type"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "TxInput",
              "canonicalReference": "@helios-lang/ledger!TxInput:type"
            },
            {
              "kind": "Content",
              "text": "[] | "
            },
            {
              "kind": "Reference",
              "text": "TxId",
              "canonicalReference": "@helios-lang/ledger!TxId:type"
            },
            {
              "kind": "Content",
              "text": " | number[] | "
            },
            {
              "kind": "Reference",
              "text": "ByteArrayData",
              "canonicalReference": "@helios-lang/uplc!ByteArrayData:type"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "ByteArrayData",
              "canonicalReference": "@helios-lang/uplc!ByteArrayData:type"
            },
            {
              "kind": "Content",
              "text": "[]"
            },
            {
              "kind": "Content",
              "text": ", networkParams?: "
            },
            {
              "kind": "Reference",
              "text": "NetworkParams",
              "canonicalReference": "@helios-lang/ledger!NetworkParams:type"
            },
            {
              "kind": "Content",
              "text": ", forJson?: "
            },
            {
              "kind": "Content",
              "text": "boolean"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "any"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/diagnostics.ts",
          "returnTypeTokenRange": {
            "startIndex": 33,
            "endIndex": 34
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "x",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 28
              },
              "isOptional": false
            },
            {
              "parameterName": "networkParams",
              "parameterTypeTokenRange": {
                "startIndex": 29,
                "endIndex": 30
              },
              "isOptional": true
            },
            {
              "parameterName": "forJson",
              "parameterTypeTokenRange": {
                "startIndex": 31,
                "endIndex": 32
              },
              "isOptional": true
            }
          ],
          "name": "dumpAny"
        },
        {
          "kind": "Class",
          "canonicalReference": "@donecollectively/stellar-contracts!EnumBridge:class",
          "docComment": "/**\n * EnumMaker provides a way to create UplcData for enums. It optionally includes an activity wrapper { redeemer: UplcData } ... and honors a nested context to inject (instead of UPLC-ing) typed, nested data into a parent context for uplc formatting.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class EnumBridge<TYPE extends "
            },
            {
              "kind": "Reference",
              "text": "isActivity",
              "canonicalReference": "@donecollectively/stellar-contracts!isActivity:type"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "isDatum",
              "canonicalReference": "@donecollectively/stellar-contracts!~isDatum:type"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "JustAnEnum",
              "canonicalReference": "@donecollectively/stellar-contracts!JustAnEnum:type"
            },
            {
              "kind": "Content",
              "text": " = "
            },
            {
              "kind": "Reference",
              "text": "JustAnEnum",
              "canonicalReference": "@donecollectively/stellar-contracts!JustAnEnum:type"
            },
            {
              "kind": "Content",
              "text": ", uplcReturnType = "
            },
            {
              "kind": "Reference",
              "text": "isActivity",
              "canonicalReference": "@donecollectively/stellar-contracts!isActivity:type"
            },
            {
              "kind": "Content",
              "text": " extends TYPE ? {\n    redeemer: "
            },
            {
              "kind": "Reference",
              "text": "UplcData",
              "canonicalReference": "@helios-lang/uplc!UplcData:type"
            },
            {
              "kind": "Content",
              "text": ";\n} : "
            },
            {
              "kind": "Reference",
              "text": "UplcData",
              "canonicalReference": "@helios-lang/uplc!UplcData:type"
            },
            {
              "kind": "Content",
              "text": "> extends "
            },
            {
              "kind": "Reference",
              "text": "DataBridge",
              "canonicalReference": "@donecollectively/stellar-contracts!DataBridge:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/helios/dataBridge/EnumBridge.ts",
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "TYPE",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 6
              },
              "defaultTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              }
            },
            {
              "typeParameterName": "uplcReturnType",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 9,
                "endIndex": 14
              }
            }
          ],
          "isAbstract": false,
          "name": "EnumBridge",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@donecollectively/stellar-contracts!EnumBridge:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `EnumBridge` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(options?: "
                },
                {
                  "kind": "Reference",
                  "text": "DataBridgeOptions",
                  "canonicalReference": "@donecollectively/stellar-contracts!DataBridgeOptions:type"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": true
                }
              ]
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!EnumBridge#mkUplcData:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "protected mkUplcData(value: "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": ", enumPathExpr: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "uplcReturnType"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": true,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "value",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "enumPathExpr",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "mkUplcData"
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@donecollectively/stellar-contracts!EnumBridge#redeemer:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "redeemer: "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "redeemer",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRange": {
            "startIndex": 15,
            "endIndex": 16
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@donecollectively/stellar-contracts!ErrorMap:type",
          "docComment": "/**\n * Reveals errors found during delegate selection\n *\n * @remarks\n *\n * Each field name is mapped to an array of string error messages found on that field.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ErrorMap = "
            },
            {
              "kind": "Reference",
              "text": "Record",
              "canonicalReference": "!Record:type"
            },
            {
              "kind": "Content",
              "text": "<string, string[]>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/delegation/RolesAndDelegates.ts",
          "releaseTag": "Public",
          "name": "ErrorMap",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 3
          }
        },
        {
          "kind": "Function",
          "canonicalReference": "@donecollectively/stellar-contracts!errorMapAsString:function(1)",
          "docComment": "/**\n * Converts an Errors object to a string for onscreen presentation\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function errorMapAsString(em: "
            },
            {
              "kind": "Reference",
              "text": "ErrorMap",
              "canonicalReference": "@donecollectively/stellar-contracts!ErrorMap:type"
            },
            {
              "kind": "Content",
              "text": ", prefix?: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/diagnostics.ts",
          "returnTypeTokenRange": {
            "startIndex": 5,
            "endIndex": 6
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "em",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            },
            {
              "parameterName": "prefix",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": true
            }
          ],
          "name": "errorMapAsString"
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@donecollectively/stellar-contracts!FoundDatumUtxo:type",
          "docComment": "/**\n * Pre-parsed results of finding and matching contract-held UTxOs with datum details.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type FoundDatumUtxo<DelegatedDatumType extends "
            },
            {
              "kind": "Reference",
              "text": "AnyDataTemplate",
              "canonicalReference": "@donecollectively/stellar-contracts!AnyDataTemplate:type"
            },
            {
              "kind": "Content",
              "text": "<any, any>"
            },
            {
              "kind": "Content",
              "text": ", WRAPPED_DatumType extends "
            },
            {
              "kind": "Content",
              "text": "any"
            },
            {
              "kind": "Content",
              "text": " = "
            },
            {
              "kind": "Content",
              "text": "any"
            },
            {
              "kind": "Content",
              "text": "> = "
            },
            {
              "kind": "Content",
              "text": "{\n    utxo: "
            },
            {
              "kind": "Reference",
              "text": "TxInput",
              "canonicalReference": "@helios-lang/ledger!TxInput:type"
            },
            {
              "kind": "Content",
              "text": ";\n    datum: "
            },
            {
              "kind": "Reference",
              "text": "InlineDatum",
              "canonicalReference": "@donecollectively/stellar-contracts!InlineDatum:type"
            },
            {
              "kind": "Content",
              "text": ";\n    data?: DelegatedDatumType;\n    dataWrapped?: WRAPPED_DatumType;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/CapoTypes.ts",
          "releaseTag": "Public",
          "name": "FoundDatumUtxo",
          "typeParameters": [
            {
              "typeParameterName": "DelegatedDatumType",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "WRAPPED_DatumType",
              "constraintTokenRange": {
                "startIndex": 4,
                "endIndex": 5
              },
              "defaultTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 8,
            "endIndex": 13
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@donecollectively/stellar-contracts!FoundUut:type",
          "docComment": "/**\n * represents a UUT found in a user-wallet, for use in authorizing a transaction\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type FoundUut = "
            },
            {
              "kind": "Content",
              "text": "{\n    utxo: "
            },
            {
              "kind": "Reference",
              "text": "TxInput",
              "canonicalReference": "@helios-lang/ledger!TxInput:type"
            },
            {
              "kind": "Content",
              "text": ";\n    uut: "
            },
            {
              "kind": "Reference",
              "text": "UutName",
              "canonicalReference": "@donecollectively/stellar-contracts!UutName:class"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/CapoTypes.ts",
          "releaseTag": "Public",
          "name": "FoundUut",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 6
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@donecollectively/stellar-contracts!funcWithImpliedSeed:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type funcWithImpliedSeed<FACTORY_FUNC extends "
            },
            {
              "kind": "Reference",
              "text": "seedActivityFunc",
              "canonicalReference": "@donecollectively/stellar-contracts!seedActivityFunc:type"
            },
            {
              "kind": "Content",
              "text": "<any, any>"
            },
            {
              "kind": "Content",
              "text": "> = "
            },
            {
              "kind": "Reference",
              "text": "IFISNEVER",
              "canonicalReference": "@donecollectively/stellar-contracts!~IFISNEVER:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "SeedActivityArg",
              "canonicalReference": "@donecollectively/stellar-contracts!SeedActivityArg:type"
            },
            {
              "kind": "Content",
              "text": "<FACTORY_FUNC>, () => "
            },
            {
              "kind": "Reference",
              "text": "SeedActivity",
              "canonicalReference": "@donecollectively/stellar-contracts!SeedActivity:class"
            },
            {
              "kind": "Content",
              "text": "<FACTORY_FUNC>, "
            },
            {
              "kind": "Reference",
              "text": "SeedActivityArg",
              "canonicalReference": "@donecollectively/stellar-contracts!SeedActivityArg:type"
            },
            {
              "kind": "Content",
              "text": "<FACTORY_FUNC> extends "
            },
            {
              "kind": "Reference",
              "text": "NeedsSingleArgError",
              "canonicalReference": "@donecollectively/stellar-contracts!~NeedsSingleArgError:type"
            },
            {
              "kind": "Content",
              "text": " ? never : (fields: "
            },
            {
              "kind": "Reference",
              "text": "SeedActivityArg",
              "canonicalReference": "@donecollectively/stellar-contracts!SeedActivityArg:type"
            },
            {
              "kind": "Content",
              "text": "<FACTORY_FUNC>) => "
            },
            {
              "kind": "Reference",
              "text": "SeedActivity",
              "canonicalReference": "@donecollectively/stellar-contracts!SeedActivity:class"
            },
            {
              "kind": "Content",
              "text": "<FACTORY_FUNC>>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/ActivityTypes.ts",
          "releaseTag": "Public",
          "name": "funcWithImpliedSeed",
          "typeParameters": [
            {
              "typeParameterName": "FACTORY_FUNC",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 4,
            "endIndex": 18
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@donecollectively/stellar-contracts!GenericDelegateBridge:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type GenericDelegateBridge = "
            },
            {
              "kind": "Reference",
              "text": "ContractDataBridgeWithEnumDatum",
              "canonicalReference": "@donecollectively/stellar-contracts!ContractDataBridgeWithEnumDatum:class"
            },
            {
              "kind": "Content",
              "text": " & "
            },
            {
              "kind": "Reference",
              "text": "Pick",
              "canonicalReference": "!Pick:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "UnspecializedDelegateBridge",
              "canonicalReference": "@donecollectively/stellar-contracts!~UnspecializedDelegateBridge:class"
            },
            {
              "kind": "Content",
              "text": ", \"isAbstract\" | \"readData\"> & {\n    reader: "
            },
            {
              "kind": "Reference",
              "text": "SomeDgtBridgeReader",
              "canonicalReference": "@donecollectively/stellar-contracts!SomeDgtBridgeReader:type"
            },
            {
              "kind": "Content",
              "text": ";\n    activity: "
            },
            {
              "kind": "Reference",
              "text": "EnumBridge",
              "canonicalReference": "@donecollectively/stellar-contracts!EnumBridge:class"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "isActivity",
              "canonicalReference": "@donecollectively/stellar-contracts!isActivity:type"
            },
            {
              "kind": "Content",
              "text": "> & "
            },
            {
              "kind": "Reference",
              "text": "SomeDgtActivityHelper",
              "canonicalReference": "@donecollectively/stellar-contracts!SomeDgtActivityHelper:type"
            },
            {
              "kind": "Content",
              "text": ";\n    DelegateActivity: "
            },
            {
              "kind": "Reference",
              "text": "EnumBridge",
              "canonicalReference": "@donecollectively/stellar-contracts!EnumBridge:class"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "isActivity",
              "canonicalReference": "@donecollectively/stellar-contracts!isActivity:type"
            },
            {
              "kind": "Content",
              "text": "> & "
            },
            {
              "kind": "Reference",
              "text": "SomeDgtActivityHelper",
              "canonicalReference": "@donecollectively/stellar-contracts!SomeDgtActivityHelper:type"
            },
            {
              "kind": "Content",
              "text": ";\n    datum: "
            },
            {
              "kind": "Reference",
              "text": "EnumBridge",
              "canonicalReference": "@donecollectively/stellar-contracts!EnumBridge:class"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "JustAnEnum",
              "canonicalReference": "@donecollectively/stellar-contracts!JustAnEnum:type"
            },
            {
              "kind": "Content",
              "text": "> & "
            },
            {
              "kind": "Reference",
              "text": "SomeDgtDatumHelper",
              "canonicalReference": "@donecollectively/stellar-contracts!SomeDgtDatumHelper:type"
            },
            {
              "kind": "Content",
              "text": "<any>;\n    DelegateDatum: "
            },
            {
              "kind": "Reference",
              "text": "SomeDgtDatumHelper",
              "canonicalReference": "@donecollectively/stellar-contracts!SomeDgtDatumHelper:type"
            },
            {
              "kind": "Content",
              "text": "<any>;\n    readDatum: (d: "
            },
            {
              "kind": "Reference",
              "text": "UplcData",
              "canonicalReference": "@helios-lang/uplc!UplcData:type"
            },
            {
              "kind": "Content",
              "text": ") => "
            },
            {
              "kind": "Reference",
              "text": "GenericDelegateDatum",
              "canonicalReference": "@donecollectively/stellar-contracts!GenericDelegateDatum:type"
            },
            {
              "kind": "Content",
              "text": ";\n    types: "
            },
            {
              "kind": "Reference",
              "text": "Pick",
              "canonicalReference": "!Pick:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "UnspecializedDelegateBridge",
              "canonicalReference": "@donecollectively/stellar-contracts!~UnspecializedDelegateBridge:class"
            },
            {
              "kind": "Content",
              "text": "[\"types\"], \"DelegateRole\" | \"ManifestActivity\" | \"CapoLifecycleActivity\" | \"DelegateLifecycleActivity\" | \"DelegationDetail\"> & {\n        SpendingActivity: "
            },
            {
              "kind": "Reference",
              "text": "EnumBridge",
              "canonicalReference": "@donecollectively/stellar-contracts!EnumBridge:class"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "JustAnEnum",
              "canonicalReference": "@donecollectively/stellar-contracts!JustAnEnum:type"
            },
            {
              "kind": "Content",
              "text": ">;\n        MintingActivity: "
            },
            {
              "kind": "Reference",
              "text": "EnumBridge",
              "canonicalReference": "@donecollectively/stellar-contracts!EnumBridge:class"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "JustAnEnum",
              "canonicalReference": "@donecollectively/stellar-contracts!JustAnEnum:type"
            },
            {
              "kind": "Content",
              "text": ">;\n        BurningActivity: "
            },
            {
              "kind": "Reference",
              "text": "EnumBridge",
              "canonicalReference": "@donecollectively/stellar-contracts!EnumBridge:class"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "JustAnEnum",
              "canonicalReference": "@donecollectively/stellar-contracts!JustAnEnum:type"
            },
            {
              "kind": "Content",
              "text": ">;\n        DelegateDatum: "
            },
            {
              "kind": "Reference",
              "text": "SomeDgtDatumHelper",
              "canonicalReference": "@donecollectively/stellar-contracts!SomeDgtDatumHelper:type"
            },
            {
              "kind": "Content",
              "text": "<any>;\n        DelegateActivity: "
            },
            {
              "kind": "Reference",
              "text": "EnumBridge",
              "canonicalReference": "@donecollectively/stellar-contracts!EnumBridge:class"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "isActivity",
              "canonicalReference": "@donecollectively/stellar-contracts!isActivity:type"
            },
            {
              "kind": "Content",
              "text": ">;\n    };\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/delegation/GenericDelegateBridge.ts",
          "releaseTag": "Public",
          "name": "GenericDelegateBridge",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 55
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@donecollectively/stellar-contracts!GenericDelegateBridgeClass:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type GenericDelegateBridgeClass = "
            },
            {
              "kind": "Reference",
              "text": "AbstractNew",
              "canonicalReference": "@donecollectively/stellar-contracts!~AbstractNew:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "GenericDelegateBridge",
              "canonicalReference": "@donecollectively/stellar-contracts!GenericDelegateBridge:type"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/delegation/GenericDelegateBridge.ts",
          "releaseTag": "Public",
          "name": "GenericDelegateBridgeClass",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@donecollectively/stellar-contracts!GenericDelegateDatum:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type GenericDelegateDatum = "
            },
            {
              "kind": "Reference",
              "text": "Pick",
              "canonicalReference": "!Pick:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "ErgoDelegateDatum",
              "canonicalReference": "@donecollectively/stellar-contracts!~ErgoDelegateDatum:type"
            },
            {
              "kind": "Content",
              "text": ", \"Cip68RefToken\" | \"IsDelegation\"> & {\n    capoStoredData?: {\n        data: "
            },
            {
              "kind": "Reference",
              "text": "AnyDataTemplate",
              "canonicalReference": "@donecollectively/stellar-contracts!AnyDataTemplate:type"
            },
            {
              "kind": "Content",
              "text": "<any, any>;\n        version: bigint;\n        otherDetails: unknown;\n    };\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/delegation/GenericDelegateBridge.ts",
          "releaseTag": "Public",
          "name": "GenericDelegateDatum",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 7
          }
        },
        {
          "kind": "Function",
          "canonicalReference": "@donecollectively/stellar-contracts!getSeed:function(1)",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function getSeed(arg: "
            },
            {
              "kind": "Reference",
              "text": "hasSeed",
              "canonicalReference": "@donecollectively/stellar-contracts!hasSeed:type"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "TxOutputId",
              "canonicalReference": "@helios-lang/ledger!TxOutputId:type"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "TxOutputId",
              "canonicalReference": "@helios-lang/ledger!TxOutputId:type"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/ActivityTypes.ts",
          "returnTypeTokenRange": {
            "startIndex": 5,
            "endIndex": 6
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "arg",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              },
              "isOptional": false
            }
          ],
          "name": "getSeed"
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@donecollectively/stellar-contracts!hasAddlTxns:type",
          "docComment": "/**\n * A transaction context that includes additional transactions in its state for later execution\n *\n * @remarks\n *\n * During the course of creating a transaction, the transaction-building functions for a contract suite may suggest or require further transactions, which may not be executable until after the current transaction is executed. This type allows the transaction context to include such future transactions in its state, so that they can be executed later.\n *\n * The future transactions can be executed using the {@link StellarTxnContext.submitAddlTxns} helper method.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type hasAddlTxns<TCX extends "
            },
            {
              "kind": "Reference",
              "text": "StellarTxnContext",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext:class"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "anyState",
              "canonicalReference": "@donecollectively/stellar-contracts!anyState:interface"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": ", existingStateType extends "
            },
            {
              "kind": "Reference",
              "text": "anyState",
              "canonicalReference": "@donecollectively/stellar-contracts!anyState:interface"
            },
            {
              "kind": "Content",
              "text": " = "
            },
            {
              "kind": "Content",
              "text": "TCX[\"state\"]"
            },
            {
              "kind": "Content",
              "text": "> = "
            },
            {
              "kind": "Reference",
              "text": "StellarTxnContext",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext:class"
            },
            {
              "kind": "Content",
              "text": "<existingStateType & {\n    addlTxns: "
            },
            {
              "kind": "Reference",
              "text": "Record",
              "canonicalReference": "!Record:type"
            },
            {
              "kind": "Content",
              "text": "<string, "
            },
            {
              "kind": "Reference",
              "text": "TxDescription",
              "canonicalReference": "@donecollectively/stellar-contracts!TxDescription:type"
            },
            {
              "kind": "Content",
              "text": "<any>>;\n}>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/StellarTxnContext.ts",
          "releaseTag": "Public",
          "name": "hasAddlTxns",
          "typeParameters": [
            {
              "typeParameterName": "TCX",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "existingStateType",
              "constraintTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "defaultTypeTokenRange": {
                "startIndex": 8,
                "endIndex": 9
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 10,
            "endIndex": 16
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@donecollectively/stellar-contracts!hasAllUuts:type",
          "docComment": "/**\n * used for transaction-context state having specific uut-purposes\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type hasAllUuts<uutEntries extends "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": "> = "
            },
            {
              "kind": "Content",
              "text": "{\n    uuts: "
            },
            {
              "kind": "Reference",
              "text": "uutPurposeMap",
              "canonicalReference": "@donecollectively/stellar-contracts!uutPurposeMap:type"
            },
            {
              "kind": "Content",
              "text": "<uutEntries>;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/CapoTypes.ts",
          "releaseTag": "Public",
          "name": "hasAllUuts",
          "typeParameters": [
            {
              "typeParameterName": "uutEntries",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 3,
            "endIndex": 6
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "@donecollectively/stellar-contracts!hasAnyDataTemplate:interface",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface hasAnyDataTemplate<DATA_TYPE extends "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ", T extends "
            },
            {
              "kind": "Reference",
              "text": "anyDatumProps",
              "canonicalReference": "@donecollectively/stellar-contracts!anyDatumProps:type"
            },
            {
              "kind": "Content",
              "text": "> "
            }
          ],
          "fileUrlPath": "src/delegation/DelegatedData.ts",
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "DATA_TYPE",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "hasAnyDataTemplate",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@donecollectively/stellar-contracts!hasAnyDataTemplate#data:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "data: "
                },
                {
                  "kind": "Reference",
                  "text": "AnyDataTemplate",
                  "canonicalReference": "@donecollectively/stellar-contracts!AnyDataTemplate:type"
                },
                {
                  "kind": "Content",
                  "text": "<DATA_TYPE, T>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "data",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@donecollectively/stellar-contracts!hasBootstrappedConfig:type",
          "docComment": "/**\n * StellarTransactionContext exposing a bootstrapped Capo configuration\n *\n * @remarks\n *\n * During first-time setup of a Capo contract, its manifest configuration details should be captured for reproducibility, and this type allows the bootstrap transaction to expose that configuration.\n *\n * {@link Capo.mkTxnMintCharterToken | mkTxnMintCharterToken()} returns a transaction context of this type, with `state.bootstrappedConfig`;\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type hasBootstrappedCapoConfig = "
            },
            {
              "kind": "Reference",
              "text": "StellarTxnContext",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext:class"
            },
            {
              "kind": "Content",
              "text": "<{\n    bsc: "
            },
            {
              "kind": "Reference",
              "text": "CapoConfig",
              "canonicalReference": "@donecollectively/stellar-contracts!CapoConfig:type"
            },
            {
              "kind": "Content",
              "text": ";\n    uuts: "
            },
            {
              "kind": "Reference",
              "text": "uutMap",
              "canonicalReference": "@donecollectively/stellar-contracts!~uutMap:type"
            },
            {
              "kind": "Content",
              "text": ";\n    bootstrappedConfig: any;\n}>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/CapoTypes.ts",
          "releaseTag": "Public",
          "name": "hasBootstrappedConfig",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 7
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@donecollectively/stellar-contracts!hasCharterRef:type",
          "docComment": "/**\n * A transaction context having a reference to the Capo's charter\n *\n * The transaction will have a refInput pointing to the charter, for on-chain delegate scripts' use\n *\n * The transaction context will have {charterData, charterRef} in its state\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type hasCharterRef = "
            },
            {
              "kind": "Reference",
              "text": "StellarTxnContext",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext:class"
            },
            {
              "kind": "Content",
              "text": "<{\n    charterRef: "
            },
            {
              "kind": "Reference",
              "text": "TxInput",
              "canonicalReference": "@helios-lang/ledger!TxInput:type"
            },
            {
              "kind": "Content",
              "text": ";\n    charterData: "
            },
            {
              "kind": "Reference",
              "text": "CharterData",
              "canonicalReference": "@donecollectively/stellar-contracts!CharterData:type"
            },
            {
              "kind": "Content",
              "text": ";\n} & "
            },
            {
              "kind": "Reference",
              "text": "anyState",
              "canonicalReference": "@donecollectively/stellar-contracts!anyState:interface"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/CapoTypes.ts",
          "releaseTag": "Public",
          "name": "hasCharterRef",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 9
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@donecollectively/stellar-contracts!hasNamedDelegate:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type hasNamedDelegate<DT extends "
            },
            {
              "kind": "Reference",
              "text": "StellarDelegate",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarDelegate:class"
            },
            {
              "kind": "Content",
              "text": ", N extends "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ", PREFIX extends "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": " = "
            },
            {
              "kind": "Content",
              "text": "\"namedDelegate\""
            },
            {
              "kind": "Content",
              "text": "> = "
            },
            {
              "kind": "Reference",
              "text": "StellarTxnContext",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext:class"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "anyState",
              "canonicalReference": "@donecollectively/stellar-contracts!anyState:interface"
            },
            {
              "kind": "Content",
              "text": " & {\n    [k in "
            },
            {
              "kind": "Reference",
              "text": "dgtStateKey",
              "canonicalReference": "@donecollectively/stellar-contracts!dgtStateKey:type"
            },
            {
              "kind": "Content",
              "text": "<N, PREFIX>]: "
            },
            {
              "kind": "Reference",
              "text": "ConfiguredDelegate",
              "canonicalReference": "@donecollectively/stellar-contracts!ConfiguredDelegate:type"
            },
            {
              "kind": "Content",
              "text": "<DT> & "
            },
            {
              "kind": "Reference",
              "text": "ErgoRelativeDelegateLink",
              "canonicalReference": "@donecollectively/stellar-contracts!~ErgoRelativeDelegateLink:type"
            },
            {
              "kind": "Content",
              "text": ";\n}>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/CapoTypes.ts",
          "releaseTag": "Public",
          "name": "hasNamedDelegate",
          "typeParameters": [
            {
              "typeParameterName": "DT",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "N",
              "constraintTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "PREFIX",
              "constraintTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "defaultTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 9,
            "endIndex": 19
          }
        },
        {
          "kind": "Function",
          "canonicalReference": "@donecollectively/stellar-contracts!hasReqts:function(1)",
          "docComment": "/**\n * Factory for type-safe requirements details for a unit of software\n *\n * @remarks\n *\n * return `hasReqts({... requirements})` from a requirements() or other method in a class, to express requirements using a standardized form that supports arbitrary amounts of detailed requirements with references to unit-test labels that can verify the impl details.\n *\n * You don't need to provide the type params or TS type annotations. `requirements() { return hasReqts({...yourReqts}) }` will work fine.\n *\n * See the {@link ReqtsMap} and {@link RequirementEntry} types for more details about expressing requirements.\n *\n * NOTE: Type parameters are inferred from the provided data structure\n *\n * @param reqtsMap - the ReqtsMap structure for the software unit\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function hasReqts<R extends "
            },
            {
              "kind": "Reference",
              "text": "ReqtsMap",
              "canonicalReference": "@donecollectively/stellar-contracts!ReqtsMap:type"
            },
            {
              "kind": "Content",
              "text": "<validReqts, inheritedNames>"
            },
            {
              "kind": "Content",
              "text": ", const validReqts extends "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": " = "
            },
            {
              "kind": "Content",
              "text": "string & keyof R"
            },
            {
              "kind": "Content",
              "text": ", const inheritedNames extends "
            },
            {
              "kind": "Content",
              "text": "string | never"
            },
            {
              "kind": "Content",
              "text": " = "
            },
            {
              "kind": "Content",
              "text": "never"
            },
            {
              "kind": "Content",
              "text": ">(reqtsMap: "
            },
            {
              "kind": "Content",
              "text": "R"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "ReqtsMap",
              "canonicalReference": "@donecollectively/stellar-contracts!ReqtsMap:type"
            },
            {
              "kind": "Content",
              "text": "<validReqts, inheritedNames>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/Requirements.ts",
          "returnTypeTokenRange": {
            "startIndex": 14,
            "endIndex": 16
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "reqtsMap",
              "parameterTypeTokenRange": {
                "startIndex": 12,
                "endIndex": 13
              },
              "isOptional": false
            }
          ],
          "typeParameters": [
            {
              "typeParameterName": "R",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "validReqts",
              "constraintTokenRange": {
                "startIndex": 4,
                "endIndex": 5
              },
              "defaultTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              }
            },
            {
              "typeParameterName": "inheritedNames",
              "constraintTokenRange": {
                "startIndex": 8,
                "endIndex": 9
              },
              "defaultTypeTokenRange": {
                "startIndex": 10,
                "endIndex": 11
              }
            }
          ],
          "name": "hasReqts"
        },
        {
          "kind": "Namespace",
          "canonicalReference": "@donecollectively/stellar-contracts!hasReqts:namespace",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare namespace hasReqts "
            }
          ],
          "fileUrlPath": "src/Requirements.ts",
          "releaseTag": "Public",
          "name": "hasReqts",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Variable",
              "canonicalReference": "@donecollectively/stellar-contracts!hasReqts.TODO:var",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "TODO: "
                },
                {
                  "kind": "Content",
                  "text": "unique symbol"
                }
              ],
              "isReadonly": false,
              "releaseTag": "Public",
              "name": "TODO",
              "variableTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ]
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@donecollectively/stellar-contracts!hasSeed:type",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type hasSeed = "
            },
            {
              "kind": "Reference",
              "text": "SeedAttrs",
              "canonicalReference": "@donecollectively/stellar-contracts!SeedAttrs:type"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "hasSeedUtxo",
              "canonicalReference": "@donecollectively/stellar-contracts!hasSeedUtxo:type"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "TxOutputIdLike",
              "canonicalReference": "@helios-lang/ledger!TxOutputIdLike:type"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/ActivityTypes.ts",
          "releaseTag": "Public",
          "name": "hasSeed",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 6
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@donecollectively/stellar-contracts!hasSeedUtxo:type",
          "docComment": "/**\n * A txn context having a seedUtxo in its state\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type hasSeedUtxo = "
            },
            {
              "kind": "Reference",
              "text": "StellarTxnContext",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext:class"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "anyState",
              "canonicalReference": "@donecollectively/stellar-contracts!anyState:interface"
            },
            {
              "kind": "Content",
              "text": " & {\n    seedUtxo: "
            },
            {
              "kind": "Reference",
              "text": "TxInput",
              "canonicalReference": "@helios-lang/ledger!TxInput:type"
            },
            {
              "kind": "Content",
              "text": ";\n}>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/StellarTxnContext.ts",
          "releaseTag": "Public",
          "name": "hasSeedUtxo",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 7
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@donecollectively/stellar-contracts!hasSettingsRef:type",
          "docComment": "/**\n * A transaction context having a reference to the Capo's settings\n *\n * The transaction will have a refInput pointing to the settings record, for any on-chain delegate scripts' use\n *\n * The transaction context will have {settingsRef, settingsUtxo} in its state.\n *\n * For more specific typing of the contents of the utxo's {data, dataWrapped}, you may add a type parameter to this type.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type hasSettingsRef<SETTINGS_TYPE extends "
            },
            {
              "kind": "Reference",
              "text": "AnyDataTemplate",
              "canonicalReference": "@donecollectively/stellar-contracts!AnyDataTemplate:type"
            },
            {
              "kind": "Content",
              "text": "<any, any>"
            },
            {
              "kind": "Content",
              "text": " = "
            },
            {
              "kind": "Reference",
              "text": "AnyDataTemplate",
              "canonicalReference": "@donecollectively/stellar-contracts!AnyDataTemplate:type"
            },
            {
              "kind": "Content",
              "text": "<any, any>"
            },
            {
              "kind": "Content",
              "text": ", WRAPPED_SETTINGS = "
            },
            {
              "kind": "Content",
              "text": "any"
            },
            {
              "kind": "Content",
              "text": "> = "
            },
            {
              "kind": "Reference",
              "text": "StellarTxnContext",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext:class"
            },
            {
              "kind": "Content",
              "text": "<{\n    settingsInfo: "
            },
            {
              "kind": "Reference",
              "text": "FoundDatumUtxo",
              "canonicalReference": "@donecollectively/stellar-contracts!FoundDatumUtxo:type"
            },
            {
              "kind": "Content",
              "text": "<SETTINGS_TYPE, WRAPPED_SETTINGS>;\n} & "
            },
            {
              "kind": "Reference",
              "text": "anyState",
              "canonicalReference": "@donecollectively/stellar-contracts!anyState:interface"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/CapoTypes.ts",
          "releaseTag": "Public",
          "name": "hasSettingsRef",
          "typeParameters": [
            {
              "typeParameterName": "SETTINGS_TYPE",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "defaultTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 6
              }
            },
            {
              "typeParameterName": "WRAPPED_SETTINGS",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 9,
            "endIndex": 15
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@donecollectively/stellar-contracts!hasUutContext:type",
          "docComment": "/**\n * A txn context having specifically-purposed UUTs in its state\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type hasUutContext<uutEntries extends "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": "> = "
            },
            {
              "kind": "Reference",
              "text": "StellarTxnContext",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext:class"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "hasAllUuts",
              "canonicalReference": "@donecollectively/stellar-contracts!hasAllUuts:type"
            },
            {
              "kind": "Content",
              "text": "<uutEntries>>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/CapoTypes.ts",
          "releaseTag": "Public",
          "name": "hasUutContext",
          "typeParameters": [
            {
              "typeParameterName": "uutEntries",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 3,
            "endIndex": 7
          }
        },
        {
          "kind": "Class",
          "canonicalReference": "@donecollectively/stellar-contracts!HeliosScriptBundle:class",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare abstract class HeliosScriptBundle "
            }
          ],
          "fileUrlPath": "src/helios/HeliosScriptBundle.ts",
          "releaseTag": "Public",
          "isAbstract": true,
          "name": "HeliosScriptBundle",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!HeliosScriptBundle#_program:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "_program?: "
                },
                {
                  "kind": "Reference",
                  "text": "HeliosProgramWithCacheAPI",
                  "canonicalReference": "!unknown"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "_program",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Constructor",
              "canonicalReference": "@donecollectively/stellar-contracts!HeliosScriptBundle:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `HeliosScriptBundle` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor();"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": []
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!HeliosScriptBundle#addTypeProxies:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "addTypeProxies(): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "addTypeProxies"
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!HeliosScriptBundle#artifacts:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "artifacts: "
                },
                {
                  "kind": "Content",
                  "text": "null"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "artifacts",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!HeliosScriptBundle#bridgeClassName:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get bridgeClassName(): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "bridgeClassName",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!HeliosScriptBundle#capoBundle:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "capoBundle?: "
                },
                {
                  "kind": "Reference",
                  "text": "CapoHeliosBundle",
                  "canonicalReference": "@donecollectively/stellar-contracts!CapoHeliosBundle:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "capoBundle",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!HeliosScriptBundle#compiledScript:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "compiledScript(params: "
                },
                {
                  "kind": "Reference",
                  "text": "UplcRecord",
                  "canonicalReference": "@donecollectively/stellar-contracts!~UplcRecord:type"
                },
                {
                  "kind": "Content",
                  "text": "<any>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "anyUplcProgram",
                  "canonicalReference": "@donecollectively/stellar-contracts!~anyUplcProgram:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "params",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "compiledScript"
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!HeliosScriptBundle#config:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "config?: "
                },
                {
                  "kind": "Reference",
                  "text": "HeliosScriptSettings",
                  "canonicalReference": "@donecollectively/stellar-contracts!HeliosScriptSettings:type"
                },
                {
                  "kind": "Content",
                  "text": "<any>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "config",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!HeliosScriptBundle#datumTypeName:member",
              "docComment": "/**\n * optional attribute explicitly naming a type for the datum\n *\n * @remarks\n *\n * This can be used if needed for a contract whose entry point uses an abstract type for the datum; the type-bridge & type-gen system will use this data type instead of inferrring the type from the entry point.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "datumTypeName?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "datumTypeName",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!HeliosScriptBundle#effectiveDatumTypeName:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "effectiveDatumTypeName(): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "effectiveDatumTypeName"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!HeliosScriptBundle#getTopLevelTypes:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getTopLevelTypes(): "
                },
                {
                  "kind": "Reference",
                  "text": "HeliosBundleTypes",
                  "canonicalReference": "@donecollectively/stellar-contracts!~HeliosBundleTypes:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "getTopLevelTypes"
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!HeliosScriptBundle.isCapoBundle:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static isCapoBundle: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "isCapoBundle",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": true,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!HeliosScriptBundle#isConcrete:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "isConcrete: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "isConcrete",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!HeliosScriptBundle#isHeliosScriptBundle:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "isHeliosScriptBundle(): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "isHeliosScriptBundle"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!HeliosScriptBundle#locateDatumType:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "locateDatumType(): "
                },
                {
                  "kind": "Reference",
                  "text": "DataType",
                  "canonicalReference": "@helios-lang/compiler!DataType:type"
                },
                {
                  "kind": "Content",
                  "text": " | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "locateDatumType"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!HeliosScriptBundle#locateRedeemerType:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "locateRedeemerType(): "
                },
                {
                  "kind": "Reference",
                  "text": "DataType",
                  "canonicalReference": "@helios-lang/compiler!DataType:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "locateRedeemerType"
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!HeliosScriptBundle#main:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get main(): "
                },
                {
                  "kind": "Reference",
                  "text": "Source",
                  "canonicalReference": "@helios-lang/compiler-utils!Source:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "main",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!HeliosScriptBundle#moduleName:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get moduleName(): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "moduleName",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!HeliosScriptBundle#modules:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get modules(): "
                },
                {
                  "kind": "Reference",
                  "text": "Source",
                  "canonicalReference": "@helios-lang/compiler-utils!Source:type"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "modules",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!HeliosScriptBundle#program:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get program(): "
                },
                {
                  "kind": "Reference",
                  "text": "Program",
                  "canonicalReference": "@helios-lang/compiler!Program:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "program",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!HeliosScriptBundle#redeemerTypeName:member",
              "docComment": "/**\n * optional attribute explicitly naming a type for the redeemer\n *\n * @remarks\n *\n * This can be used if needed for a contract whose entry point uses an abstract type for the redeemer; the type-bridge & type-gen system will use this data type instead of inferring the type from the entry point.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "redeemerTypeName?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "redeemerTypeName",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!HeliosScriptBundle.usingCapoBundleClass:member(1)",
              "docComment": "/**\n * Constructs a base class for any Helios script bundle, given the class for an application-specific CapoHeliosBundle.\n *\n * @remarks\n *\n * The resulting class provides its own CapoHeliosBundle instance for independent use (specifically, for compiling this bundle using the dependency libraries provided by the Capo bundle).\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static usingCapoBundleClass<CB extends "
                },
                {
                  "kind": "Reference",
                  "text": "CapoBundleClass",
                  "canonicalReference": "@donecollectively/stellar-contracts!~CapoBundleClass:type"
                },
                {
                  "kind": "Content",
                  "text": ">(c: "
                },
                {
                  "kind": "Content",
                  "text": "CB"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "HeliosBundleClassWithCapo",
                  "canonicalReference": "@donecollectively/stellar-contracts!~HeliosBundleClassWithCapo:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "CB",
                  "constraintTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "c",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "usingCapoBundleClass"
            }
          ],
          "implementsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@donecollectively/stellar-contracts!HeliosScriptSettings:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type HeliosScriptSettings<ConfigType extends "
            },
            {
              "kind": "Reference",
              "text": "configBaseWithRev",
              "canonicalReference": "@donecollectively/stellar-contracts!configBase:interface"
            },
            {
              "kind": "Content",
              "text": "> = "
            },
            {
              "kind": "Content",
              "text": "{\n    config: ConfigType;\n    optimize?: boolean;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/helios/HeliosScriptBundle.ts",
          "releaseTag": "Public",
          "name": "HeliosScriptSettings",
          "typeParameters": [
            {
              "typeParameterName": "ConfigType",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          }
        },
        {
          "kind": "Function",
          "canonicalReference": "@donecollectively/stellar-contracts!hexToPrintableString:function(1)",
          "docComment": "/**\n * converts a hex string to a printable alternative, with no assumptions about the underlying data\n *\n * @remarks\n *\n * Unlike Helios' bytesToText, hexToPrintable() simply changes printable characters to characters, and represents non-printable characters in '‹XX›' format.\n *\n * @param hexStr - hex input\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function hexToPrintableString(hexStr: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/diagnostics.ts",
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "hexStr",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            }
          ],
          "name": "hexToPrintableString"
        },
        {
          "kind": "Function",
          "canonicalReference": "@donecollectively/stellar-contracts!impliedSeedActivityMaker:function(1)",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function impliedSeedActivityMaker<FACTORY_FUNC extends "
            },
            {
              "kind": "Reference",
              "text": "seedActivityFunc",
              "canonicalReference": "@donecollectively/stellar-contracts!seedActivityFunc:type"
            },
            {
              "kind": "Content",
              "text": "<any, any>"
            },
            {
              "kind": "Content",
              "text": ", IMPLIED_SEED_FUNC extends "
            },
            {
              "kind": "Reference",
              "text": "funcWithImpliedSeed",
              "canonicalReference": "@donecollectively/stellar-contracts!funcWithImpliedSeed:type"
            },
            {
              "kind": "Content",
              "text": "<FACTORY_FUNC>"
            },
            {
              "kind": "Content",
              "text": " = "
            },
            {
              "kind": "Reference",
              "text": "funcWithImpliedSeed",
              "canonicalReference": "@donecollectively/stellar-contracts!funcWithImpliedSeed:type"
            },
            {
              "kind": "Content",
              "text": "<FACTORY_FUNC>"
            },
            {
              "kind": "Content",
              "text": ", ARG extends "
            },
            {
              "kind": "Reference",
              "text": "SeedActivityArg",
              "canonicalReference": "@donecollectively/stellar-contracts!SeedActivityArg:type"
            },
            {
              "kind": "Content",
              "text": "<FACTORY_FUNC>"
            },
            {
              "kind": "Content",
              "text": " = "
            },
            {
              "kind": "Reference",
              "text": "SeedActivityArg",
              "canonicalReference": "@donecollectively/stellar-contracts!SeedActivityArg:type"
            },
            {
              "kind": "Content",
              "text": "<FACTORY_FUNC>"
            },
            {
              "kind": "Content",
              "text": ">(host: "
            },
            {
              "kind": "Content",
              "text": "{\n    getSeed(x: "
            },
            {
              "kind": "Reference",
              "text": "hasSeed",
              "canonicalReference": "@donecollectively/stellar-contracts!hasSeed:type"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "TxOutputId",
              "canonicalReference": "@helios-lang/ledger!TxOutputId:type"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            },
            {
              "kind": "Content",
              "text": ", factoryFunc: "
            },
            {
              "kind": "Content",
              "text": "FACTORY_FUNC"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "IMPLIED_SEED_FUNC"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/ActivityTypes.ts",
          "returnTypeTokenRange": {
            "startIndex": 24,
            "endIndex": 25
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "host",
              "parameterTypeTokenRange": {
                "startIndex": 16,
                "endIndex": 21
              },
              "isOptional": false
            },
            {
              "parameterName": "factoryFunc",
              "parameterTypeTokenRange": {
                "startIndex": 22,
                "endIndex": 23
              },
              "isOptional": false
            }
          ],
          "typeParameters": [
            {
              "typeParameterName": "FACTORY_FUNC",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "IMPLIED_SEED_FUNC",
              "constraintTokenRange": {
                "startIndex": 4,
                "endIndex": 6
              },
              "defaultTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 9
              }
            },
            {
              "typeParameterName": "ARG",
              "constraintTokenRange": {
                "startIndex": 10,
                "endIndex": 12
              },
              "defaultTypeTokenRange": {
                "startIndex": 13,
                "endIndex": 15
              }
            }
          ],
          "name": "impliedSeedActivityMaker"
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@donecollectively/stellar-contracts!InlineDatum:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type InlineDatum = "
            },
            {
              "kind": "Reference",
              "text": "InlineTxOutputDatum",
              "canonicalReference": "@helios-lang/ledger!InlineTxOutputDatum:type"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/HeliosPromotedTypes.ts",
          "releaseTag": "Public",
          "name": "InlineDatum",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@donecollectively/stellar-contracts!IntersectedEnum:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type IntersectedEnum<T, intersected = "
            },
            {
              "kind": "Reference",
              "text": "intersectedElements",
              "canonicalReference": "@donecollectively/stellar-contracts!~intersectedElements:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "EachUnionElement",
              "canonicalReference": "@donecollectively/stellar-contracts!~EachUnionElement:type"
            },
            {
              "kind": "Content",
              "text": "<T>>"
            },
            {
              "kind": "Content",
              "text": ", merged = "
            },
            {
              "kind": "Content",
              "text": "{\n    [key in keyof intersected]: key extends keyof intersected ? intersected[key] : never;\n}"
            },
            {
              "kind": "Content",
              "text": "> = "
            },
            {
              "kind": "Reference",
              "text": "Partial",
              "canonicalReference": "!Partial:type"
            },
            {
              "kind": "Content",
              "text": "<merged>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/helios/typeUtils.ts",
          "releaseTag": "Public",
          "name": "IntersectedEnum",
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "intersected",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              }
            },
            {
              "typeParameterName": "merged",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 8,
            "endIndex": 10
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@donecollectively/stellar-contracts!isActivity:type",
          "docComment": "/**\n * a type for redeemer/activity-factory functions declared with \\@Activity.redeemer\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type isActivity = "
            },
            {
              "kind": "Content",
              "text": "{\n    redeemer: "
            },
            {
              "kind": "Reference",
              "text": "UplcData",
              "canonicalReference": "@helios-lang/uplc!UplcData:type"
            },
            {
              "kind": "Content",
              "text": ";\n    details?: string;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/ActivityTypes.ts",
          "releaseTag": "Public",
          "name": "isActivity",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@donecollectively/stellar-contracts!JustAnEnum:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type JustAnEnum = "
            },
            {
              "kind": "Content",
              "text": "typeof "
            },
            {
              "kind": "Reference",
              "text": "JustAnEnum",
              "canonicalReference": "@donecollectively/stellar-contracts!~JustAnEnum_2:var"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/helios/dataBridge/EnumBridge.ts",
          "releaseTag": "Public",
          "name": "JustAnEnum",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 3
          }
        },
        {
          "kind": "Function",
          "canonicalReference": "@donecollectively/stellar-contracts!lovelaceToAda:function(1)",
          "docComment": "/**\n * Converts lovelace to approximate ADA, in consumable 3-decimal form\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function lovelaceToAda(l: "
            },
            {
              "kind": "Content",
              "text": "bigint | number"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/diagnostics.ts",
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "l",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            }
          ],
          "name": "lovelaceToAda"
        },
        {
          "kind": "Function",
          "canonicalReference": "@donecollectively/stellar-contracts!mergesInheritedReqts:function(1)",
          "docComment": "/**\n * Factory for type-safe requirements combining inherited requirements with subclass-specific requirements\n *\n * @remarks\n *\n * Use this method to combine the requirements of a subclass with the requirements of its superclass. This allows the subclass, in its requires: [ ... ] section, to reference capabilities of the base class that the subclass depends on.\n *\n * See the {@link ReqtsMap} and {@link RequirementEntry} types for more details about expressing requirements.\n *\n * @param inherits - the requirements of the base class\n *\n * @param reqtsMap - the requirements of the subclass\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function mergesInheritedReqts<IR extends "
            },
            {
              "kind": "Reference",
              "text": "ReqtsMap",
              "canonicalReference": "@donecollectively/stellar-contracts!ReqtsMap:type"
            },
            {
              "kind": "Content",
              "text": "<inheritedReqts>"
            },
            {
              "kind": "Content",
              "text": ", R extends "
            },
            {
              "kind": "Reference",
              "text": "ReqtsMap",
              "canonicalReference": "@donecollectively/stellar-contracts!ReqtsMap:type"
            },
            {
              "kind": "Content",
              "text": "<myReqts, inheritedReqts>"
            },
            {
              "kind": "Content",
              "text": ", const inheritedReqts extends "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": " = "
            },
            {
              "kind": "Content",
              "text": "string & keyof IR"
            },
            {
              "kind": "Content",
              "text": ", const myReqts extends "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": " = "
            },
            {
              "kind": "Content",
              "text": "keyof R extends keyof IR ? never : string & keyof R"
            },
            {
              "kind": "Content",
              "text": ">(inherits: "
            },
            {
              "kind": "Content",
              "text": "IR"
            },
            {
              "kind": "Content",
              "text": ", reqtsMap: "
            },
            {
              "kind": "Content",
              "text": "R"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "ReqtsMap",
              "canonicalReference": "@donecollectively/stellar-contracts!ReqtsMap:type"
            },
            {
              "kind": "Content",
              "text": "<myReqts | inheritedReqts, inheritedReqts> & IR"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/Requirements.ts",
          "returnTypeTokenRange": {
            "startIndex": 19,
            "endIndex": 21
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "inherits",
              "parameterTypeTokenRange": {
                "startIndex": 15,
                "endIndex": 16
              },
              "isOptional": false
            },
            {
              "parameterName": "reqtsMap",
              "parameterTypeTokenRange": {
                "startIndex": 17,
                "endIndex": 18
              },
              "isOptional": false
            }
          ],
          "typeParameters": [
            {
              "typeParameterName": "IR",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "R",
              "constraintTokenRange": {
                "startIndex": 4,
                "endIndex": 6
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "inheritedReqts",
              "constraintTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "defaultTypeTokenRange": {
                "startIndex": 9,
                "endIndex": 10
              }
            },
            {
              "typeParameterName": "myReqts",
              "constraintTokenRange": {
                "startIndex": 11,
                "endIndex": 12
              },
              "defaultTypeTokenRange": {
                "startIndex": 13,
                "endIndex": 14
              }
            }
          ],
          "name": "mergesInheritedReqts"
        },
        {
          "kind": "Interface",
          "canonicalReference": "@donecollectively/stellar-contracts!MinimalCharterDataArgs:interface",
          "docComment": "/**\n * Schema for initial setup of Charter Datum - state stored in the Leader contract together with its primary or \"charter\" utxo. Converted from this convenient form to the on-chain form during mkTxnMintCharterToken().\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface MinimalCharterDataArgs extends "
            },
            {
              "kind": "Reference",
              "text": "configBaseWithRev",
              "canonicalReference": "@donecollectively/stellar-contracts!configBase:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/CapoTypes.ts",
          "releaseTag": "Public",
          "name": "MinimalCharterDataArgs",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@donecollectively/stellar-contracts!MinimalCharterDataArgs#govAuthorityLink:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "govAuthorityLink: "
                },
                {
                  "kind": "Reference",
                  "text": "OffchainPartialDelegateLink",
                  "canonicalReference": "@donecollectively/stellar-contracts!OffchainPartialDelegateLink:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "govAuthorityLink",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@donecollectively/stellar-contracts!MinimalCharterDataArgs#manifest:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "manifest: "
                },
                {
                  "kind": "Reference",
                  "text": "Map",
                  "canonicalReference": "!Map:interface"
                },
                {
                  "kind": "Content",
                  "text": "<string, "
                },
                {
                  "kind": "Reference",
                  "text": "OffchainPartialDelegateLink",
                  "canonicalReference": "@donecollectively/stellar-contracts!OffchainPartialDelegateLink:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "manifest",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@donecollectively/stellar-contracts!MinimalCharterDataArgs#mintDelegateLink:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "mintDelegateLink: "
                },
                {
                  "kind": "Reference",
                  "text": "OffchainPartialDelegateLink",
                  "canonicalReference": "@donecollectively/stellar-contracts!OffchainPartialDelegateLink:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "mintDelegateLink",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@donecollectively/stellar-contracts!MinimalCharterDataArgs#mintInvariants:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "mintInvariants: "
                },
                {
                  "kind": "Reference",
                  "text": "OffchainPartialDelegateLink",
                  "canonicalReference": "@donecollectively/stellar-contracts!OffchainPartialDelegateLink:type"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "mintInvariants",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@donecollectively/stellar-contracts!MinimalCharterDataArgs#otherNamedDelegates:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "otherNamedDelegates: "
                },
                {
                  "kind": "Reference",
                  "text": "Map",
                  "canonicalReference": "!Map:interface"
                },
                {
                  "kind": "Content",
                  "text": "<string, "
                },
                {
                  "kind": "Reference",
                  "text": "OffchainPartialDelegateLink",
                  "canonicalReference": "@donecollectively/stellar-contracts!OffchainPartialDelegateLink:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "otherNamedDelegates",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@donecollectively/stellar-contracts!MinimalCharterDataArgs#spendDelegateLink:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "spendDelegateLink: "
                },
                {
                  "kind": "Reference",
                  "text": "OffchainPartialDelegateLink",
                  "canonicalReference": "@donecollectively/stellar-contracts!OffchainPartialDelegateLink:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "spendDelegateLink",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@donecollectively/stellar-contracts!MinimalCharterDataArgs#spendInvariants:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "spendInvariants: "
                },
                {
                  "kind": "Reference",
                  "text": "OffchainPartialDelegateLink",
                  "canonicalReference": "@donecollectively/stellar-contracts!OffchainPartialDelegateLink:type"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "spendInvariants",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 2
            }
          ]
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@donecollectively/stellar-contracts!minimalData:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type minimalData<T extends "
            },
            {
              "kind": "Reference",
              "text": "AnyDataTemplate",
              "canonicalReference": "@donecollectively/stellar-contracts!AnyDataTemplate:type"
            },
            {
              "kind": "Content",
              "text": "<any, "
            },
            {
              "kind": "Reference",
              "text": "anyDatumProps",
              "canonicalReference": "@donecollectively/stellar-contracts!anyDatumProps:type"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": "> = "
            },
            {
              "kind": "Reference",
              "text": "Omit",
              "canonicalReference": "!Omit:type"
            },
            {
              "kind": "Content",
              "text": "<T, \"id\" | \"type\">"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/delegation/DelegatedData.ts",
          "releaseTag": "Public",
          "name": "minimalData",
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 6,
            "endIndex": 8
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@donecollectively/stellar-contracts!MinimalDelegateLink:type",
          "docComment": "/**\n * Includes key details needed to create a delegate link\n *\n * @remarks\n *\n * uutName can't be specified in this structure because creating a delegate link should use txnMustGetSeedUtxo() instead, minting a new UUT for the purpose. If you seek to reuse an existing uutName, probably you're modifying an existing full RelativeDelegateLink structure instead - e.g. with a different `strategy` and `config`; this type wouldn't be involved in that case.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type MinimalDelegateLink = "
            },
            {
              "kind": "Reference",
              "text": "Partial",
              "canonicalReference": "!Partial:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "OffchainPartialDelegateLink",
              "canonicalReference": "@donecollectively/stellar-contracts!OffchainPartialDelegateLink:type"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/CapoTypes.ts",
          "releaseTag": "Public",
          "name": "MinimalDelegateLink",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@donecollectively/stellar-contracts!MintUutActivityArgs:type",
          "docComment": "/**\n * UUT minting should always use these settings to guard for uniqueness\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type MintUutActivityArgs = "
            },
            {
              "kind": "Content",
              "text": "{\n    seed: "
            },
            {
              "kind": "Reference",
              "text": "TxOutputId",
              "canonicalReference": "@helios-lang/ledger!TxOutputId:type"
            },
            {
              "kind": "Content",
              "text": ";\n    purposes: string[];\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/CapoTypes.ts",
          "releaseTag": "Public",
          "name": "MintUutActivityArgs",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "Function",
          "canonicalReference": "@donecollectively/stellar-contracts!mkDgtStateKey:function(1)",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function mkDgtStateKey<const N extends "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ", const PREFIX extends "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": " = "
            },
            {
              "kind": "Content",
              "text": "\"dgPoi\""
            },
            {
              "kind": "Content",
              "text": ">(n: "
            },
            {
              "kind": "Content",
              "text": "N"
            },
            {
              "kind": "Content",
              "text": ", p?: "
            },
            {
              "kind": "Content",
              "text": "PREFIX"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "dgtStateKey",
              "canonicalReference": "@donecollectively/stellar-contracts!dgtStateKey:type"
            },
            {
              "kind": "Content",
              "text": "<N, PREFIX>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/CapoTypes.ts",
          "returnTypeTokenRange": {
            "startIndex": 11,
            "endIndex": 13
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "n",
              "parameterTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "isOptional": false
            },
            {
              "parameterName": "p",
              "parameterTypeTokenRange": {
                "startIndex": 9,
                "endIndex": 10
              },
              "isOptional": true
            }
          ],
          "typeParameters": [
            {
              "typeParameterName": "N",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "PREFIX",
              "constraintTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "defaultTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              }
            }
          ],
          "name": "mkDgtStateKey"
        },
        {
          "kind": "Function",
          "canonicalReference": "@donecollectively/stellar-contracts!mkUutValuesEntries:function(1)",
          "docComment": "/**\n * Creates Value-creation entires for a list of uuts\n *\n * @remarks\n *\n * returns a list of `entries` usable in Value's `[mph, entries[]]` tuple.\n *\n * @param uuts - a list of {@link UutName}s or a {@link uutPurposeMap}\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function mkUutValuesEntries(uuts: "
            },
            {
              "kind": "Reference",
              "text": "UutName",
              "canonicalReference": "@donecollectively/stellar-contracts!UutName:class"
            },
            {
              "kind": "Content",
              "text": "[]"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "valuesEntry",
              "canonicalReference": "@donecollectively/stellar-contracts!valuesEntry:type"
            },
            {
              "kind": "Content",
              "text": "[]"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/utils.ts",
          "returnTypeTokenRange": {
            "startIndex": 4,
            "endIndex": 6
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "uuts",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isOptional": false
            }
          ],
          "name": "mkUutValuesEntries"
        },
        {
          "kind": "Function",
          "canonicalReference": "@donecollectively/stellar-contracts!mkUutValuesEntries:function(2)",
          "docComment": "/**\n * *\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function mkUutValuesEntries(uuts: "
            },
            {
              "kind": "Reference",
              "text": "uutPurposeMap",
              "canonicalReference": "@donecollectively/stellar-contracts!uutPurposeMap:type"
            },
            {
              "kind": "Content",
              "text": "<any>"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "valuesEntry",
              "canonicalReference": "@donecollectively/stellar-contracts!valuesEntry:type"
            },
            {
              "kind": "Content",
              "text": "[]"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/utils.ts",
          "returnTypeTokenRange": {
            "startIndex": 4,
            "endIndex": 6
          },
          "releaseTag": "Public",
          "overloadIndex": 2,
          "parameters": [
            {
              "parameterName": "uuts",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isOptional": false
            }
          ],
          "name": "mkUutValuesEntries"
        },
        {
          "kind": "Function",
          "canonicalReference": "@donecollectively/stellar-contracts!mkValuesEntry:function(1)",
          "docComment": "/**\n * Creates a tuple usable in a Value, converting token-name to byte-array if needed\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function mkValuesEntry(tokenName: "
            },
            {
              "kind": "Content",
              "text": "string | number[]"
            },
            {
              "kind": "Content",
              "text": ", count: "
            },
            {
              "kind": "Content",
              "text": "bigint"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "valuesEntry",
              "canonicalReference": "@donecollectively/stellar-contracts!valuesEntry:type"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/utils.ts",
          "returnTypeTokenRange": {
            "startIndex": 5,
            "endIndex": 6
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "tokenName",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            },
            {
              "parameterName": "count",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": false
            }
          ],
          "name": "mkValuesEntry"
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@donecollectively/stellar-contracts!MultiTxnCallback:type",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type MultiTxnCallback = "
            },
            {
              "kind": "Content",
              "text": "((futTx: "
            },
            {
              "kind": "Reference",
              "text": "TxDescription",
              "canonicalReference": "@donecollectively/stellar-contracts!TxDescription:type"
            },
            {
              "kind": "Content",
              "text": "<any>) => void) | ((futTx: "
            },
            {
              "kind": "Reference",
              "text": "TxDescription",
              "canonicalReference": "@donecollectively/stellar-contracts!TxDescription:type"
            },
            {
              "kind": "Content",
              "text": "<any>) => "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<void>) | ((futTx: "
            },
            {
              "kind": "Reference",
              "text": "TxDescription",
              "canonicalReference": "@donecollectively/stellar-contracts!TxDescription:type"
            },
            {
              "kind": "Content",
              "text": "<any>) => "
            },
            {
              "kind": "Reference",
              "text": "StellarTxnContext",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext:class"
            },
            {
              "kind": "Content",
              "text": "<any> | false) | ((futTx: "
            },
            {
              "kind": "Reference",
              "text": "TxDescription",
              "canonicalReference": "@donecollectively/stellar-contracts!TxDescription:type"
            },
            {
              "kind": "Content",
              "text": "<any>) => "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "StellarTxnContext",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext:class"
            },
            {
              "kind": "Content",
              "text": "<any> | false>)"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/StellarTxnContext.ts",
          "releaseTag": "Public",
          "name": "MultiTxnCallback",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 18
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@donecollectively/stellar-contracts!NamedPolicyCreationOptions:type",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type NamedPolicyCreationOptions<thisType extends "
            },
            {
              "kind": "Reference",
              "text": "Capo",
              "canonicalReference": "@donecollectively/stellar-contracts!Capo:class"
            },
            {
              "kind": "Content",
              "text": "<any>"
            },
            {
              "kind": "Content",
              "text": ", DT extends "
            },
            {
              "kind": "Reference",
              "text": "StellarDelegate",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarDelegate:class"
            },
            {
              "kind": "Content",
              "text": "> = "
            },
            {
              "kind": "Reference",
              "text": "PolicyCreationOptions",
              "canonicalReference": "@donecollectively/stellar-contracts!~PolicyCreationOptions:type"
            },
            {
              "kind": "Content",
              "text": " & {\n    uutName?: string;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/delegation/ContractBasedDelegate.ts",
          "releaseTag": "Public",
          "name": "NamedPolicyCreationOptions",
          "typeParameters": [
            {
              "typeParameterName": "thisType",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "DT",
              "constraintTokenRange": {
                "startIndex": 4,
                "endIndex": 5
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 6,
            "endIndex": 8
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@donecollectively/stellar-contracts!Nested:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type Nested = "
            },
            {
              "kind": "Content",
              "text": "typeof "
            },
            {
              "kind": "Reference",
              "text": "Nested",
              "canonicalReference": "@donecollectively/stellar-contracts!~Nested_2:var"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/helios/dataBridge/EnumBridge.ts",
          "releaseTag": "Public",
          "name": "Nested",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 3
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@donecollectively/stellar-contracts!NetworkSnapshot:type",
          "docComment": "/**\n * Captures details from emulated network, to be used for quickly restoring a network state.\n *\n * @alpha\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type NetworkSnapshot = "
            },
            {
              "kind": "Content",
              "text": "{\n    seed: number;\n    netNumber: number;\n    name: string;\n    slot: number;\n    genesis: "
            },
            {
              "kind": "Reference",
              "text": "EmulatorGenesisTx",
              "canonicalReference": "@helios-lang/tx-utils!EmulatorGenesisTx:type"
            },
            {
              "kind": "Content",
              "text": "[];\n    blocks: "
            },
            {
              "kind": "Reference",
              "text": "EmulatorTx",
              "canonicalReference": "@helios-lang/tx-utils!EmulatorTx:type"
            },
            {
              "kind": "Content",
              "text": "[][];\n    allUtxos: "
            },
            {
              "kind": "Reference",
              "text": "Record",
              "canonicalReference": "!Record:type"
            },
            {
              "kind": "Content",
              "text": "<string, "
            },
            {
              "kind": "Reference",
              "text": "TxInput",
              "canonicalReference": "@helios-lang/ledger!TxInput:type"
            },
            {
              "kind": "Content",
              "text": ">;\n    consumedUtxos: "
            },
            {
              "kind": "Reference",
              "text": "Set",
              "canonicalReference": "!Set:interface"
            },
            {
              "kind": "Content",
              "text": "<string>;\n    addressUtxos: "
            },
            {
              "kind": "Reference",
              "text": "Record",
              "canonicalReference": "!Record:type"
            },
            {
              "kind": "Content",
              "text": "<string, "
            },
            {
              "kind": "Reference",
              "text": "TxInput",
              "canonicalReference": "@helios-lang/ledger!TxInput:type"
            },
            {
              "kind": "Content",
              "text": "[]>;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/testing/StellarNetworkEmulator.ts",
          "releaseTag": "Alpha",
          "name": "NetworkSnapshot",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 16
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@donecollectively/stellar-contracts!NotNested:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type NotNested = "
            },
            {
              "kind": "Content",
              "text": "typeof "
            },
            {
              "kind": "Reference",
              "text": "NotNested",
              "canonicalReference": "@donecollectively/stellar-contracts!~NotNested_2:var"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/helios/dataBridge/EnumBridge.ts",
          "releaseTag": "Public",
          "name": "NotNested",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 3
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@donecollectively/stellar-contracts!OffchainPartialDelegateLink:type",
          "docComment": "/**\n * Minimal structure for connecting a specific Capo contract to a configured StellarDelegate\n *\n * @remarks\n *\n * This structure can always resolve to a reproducible delegate class (a {@link StellarDelegate}), given a specific Capo and roleName.\n *\n * When the delegate isn't backed by a specific on-chain contract script, the delegateValidatorHash is optional.\n *\n * Use Capo mkDelegateLink(x: OffchainRelativeDelegateLink) to convert this data for on-chain use in the Capo's charter data structure\n *\n * @typeParam DT - the base class, to which all role-strategy variants conform\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type OffchainPartialDelegateLink = "
            },
            {
              "kind": "Content",
              "text": "{\n    uutName?: string;\n    config: "
            },
            {
              "kind": "Reference",
              "text": "Partial",
              "canonicalReference": "!Partial:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "capoDelegateConfig",
              "canonicalReference": "@donecollectively/stellar-contracts!capoDelegateConfig:type"
            },
            {
              "kind": "Content",
              "text": ">;\n    delegateValidatorHash?: "
            },
            {
              "kind": "Reference",
              "text": "ValidatorHash",
              "canonicalReference": "@helios-lang/ledger!ValidatorHash:type"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/delegation/RolesAndDelegates.ts",
          "releaseTag": "Public",
          "name": "OffchainPartialDelegateLink",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 8
          }
        },
        {
          "kind": "Function",
          "canonicalReference": "@donecollectively/stellar-contracts!partialTxn:function(1)",
          "docComment": "/**\n * decorates functions that increment a transaction by adding needed details for a use-case\n *\n * @remarks\n *\n * Function names must follow the txn\\{...\\} naming convention. Typical partial-transaction names may describe the semantics of how the function augments the transaction. `txnAddSignatures` or `txnReceivePayment` could be example names following this guidance\n *\n * Partial transactions should have a \\<TCX extends StellarTxnContext\\<...\\>\\> type parameter, matched to its first function argument, and should return a type extending that same TCX, possibly with additional StellarTxnContext\\<...\\> type info.\n *\n * The TCX constraint can specify key requirements for an existing transaction context when that's relevant.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function partialTxn(proto: "
            },
            {
              "kind": "Content",
              "text": "any"
            },
            {
              "kind": "Content",
              "text": ", thingName: "
            },
            {
              "kind": "Content",
              "text": "any"
            },
            {
              "kind": "Content",
              "text": ", descriptor: "
            },
            {
              "kind": "Content",
              "text": "any"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "any"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/StellarContract.ts",
          "returnTypeTokenRange": {
            "startIndex": 7,
            "endIndex": 8
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "proto",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            },
            {
              "parameterName": "thingName",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": false
            },
            {
              "parameterName": "descriptor",
              "parameterTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "isOptional": false
            }
          ],
          "name": "partialTxn"
        },
        {
          "kind": "Function",
          "canonicalReference": "@donecollectively/stellar-contracts!policyIdAsString:function(1)",
          "docComment": "/**\n * Converts a MintingPolicyHash to a printable form\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function policyIdAsString(p: "
            },
            {
              "kind": "Reference",
              "text": "MintingPolicyHash",
              "canonicalReference": "@helios-lang/ledger!MintingPolicyHash:type"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/diagnostics.ts",
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "p",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            }
          ],
          "name": "policyIdAsString"
        },
        {
          "kind": "Function",
          "canonicalReference": "@donecollectively/stellar-contracts!realDiv:function(1)",
          "docComment": "/**\n * Divides two numbers using integer math semantics for matching with Helios on-chain Real math\n *\n * @remarks\n *\n * The numbers can be whole or fractional, with 6 decimal places of honored precision. The result is rounded to 6 decimal places.\n *\n * @todo\n *\n * - delegate this to a call into the on-chain version of same\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function realDiv(a: "
            },
            {
              "kind": "Content",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": ", b: "
            },
            {
              "kind": "Content",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/utils.ts",
          "returnTypeTokenRange": {
            "startIndex": 5,
            "endIndex": 6
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "a",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            },
            {
              "parameterName": "b",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": false
            }
          ],
          "name": "realDiv"
        },
        {
          "kind": "Function",
          "canonicalReference": "@donecollectively/stellar-contracts!realMul:function(1)",
          "docComment": "/**\n * Multiplies two numbers using integer math semantics for matching with Helios on-chain Real math\n *\n * @remarks\n *\n * The numbers can be whole or fractional, with 6 decimal places of honored precision. The result is rounded to 6 decimal places.\n *\n * @todo\n *\n * - delegate this to a call into the on-chain version of same\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function realMul(a: "
            },
            {
              "kind": "Content",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": ", b: "
            },
            {
              "kind": "Content",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/utils.ts",
          "returnTypeTokenRange": {
            "startIndex": 5,
            "endIndex": 6
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "a",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            },
            {
              "parameterName": "b",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": false
            }
          ],
          "name": "realMul"
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@donecollectively/stellar-contracts!ReqtsMap:type",
          "docComment": "/**\n * Describes the requirements for a unit of software\n *\n * @remarks\n *\n * A requirements map is a list of described requirements, in which each requirement has a synopsis, a description of its purpose, descriptive detail, and technical requirements for the mechanism used for implementation. The mech strings should be usable as unit-test titles.\n *\n * use the hasReqts() helper method to declare a type-safe set of requirements following this data structure.\n *\n * Each requirement also has space for nested 'requires', without the need for deeply nested data structures; these reference other requirements in the same hasReqts() data structure. As a result, high-level and detail- level requirements and 'impl' details can have progressive levels of detail.\n *\n * @typeParam reqts - the list of known requirement names. Implicitly detected by the hasReqts() helper.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ReqtsMap<validReqts extends "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ", inheritedNames extends "
            },
            {
              "kind": "Content",
              "text": "string | never"
            },
            {
              "kind": "Content",
              "text": " = "
            },
            {
              "kind": "Content",
              "text": "never"
            },
            {
              "kind": "Content",
              "text": "> = "
            },
            {
              "kind": "Content",
              "text": "{\n    [reqtDescription in validReqts]: "
            },
            {
              "kind": "Reference",
              "text": "TODO_TYPE",
              "canonicalReference": "@donecollectively/stellar-contracts!~TODO_TYPE:type"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "RequirementEntry",
              "canonicalReference": "@donecollectively/stellar-contracts!RequirementEntry:type"
            },
            {
              "kind": "Content",
              "text": "<reqtDescription, validReqts, inheritedNames>;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/Requirements.ts",
          "releaseTag": "Public",
          "name": "ReqtsMap",
          "typeParameters": [
            {
              "typeParameterName": "validReqts",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "inheritedNames",
              "constraintTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "defaultTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 7,
            "endIndex": 12
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@donecollectively/stellar-contracts!RequirementEntry:type",
          "docComment": "/**\n * Documents one specific requirement\n *\n * @remarks\n *\n * Describes the purpose, details, and implementation mechanism for a single requirement for a unit of software.\n *\n * Also references any other requirements in the host ReqtsMap structure, whose behavior this requirement depends on. The details of those other dependencies, are delegated entirely to the other requirement, facilitating narrowly-focused capture of for key expectations within each individual semantic expectation of a software unit's behavior.\n *\n * if there are inherited requirements, dependencies on them can be expressed in the `requiresInherited` field.\n *\n * @typeParam reqts - constrains `requires` entries to the list of requirements in the host ReqtsMap structure\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type RequirementEntry<reqtName extends "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ", reqts extends "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ", inheritedNames extends "
            },
            {
              "kind": "Content",
              "text": "string | never"
            },
            {
              "kind": "Content",
              "text": "> = "
            },
            {
              "kind": "Content",
              "text": "{\n    purpose: string;\n    details: string[];\n    mech: string[];\n    impl?: string;\n    requires?: reqtName extends inheritedNames ? inheritedNames[] : "
            },
            {
              "kind": "Reference",
              "text": "Exclude",
              "canonicalReference": "!Exclude:type"
            },
            {
              "kind": "Content",
              "text": "<reqts, reqtName | inheritedNames>[];\n    requiresInherited?: inheritedNames[];\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/Requirements.ts",
          "releaseTag": "Public",
          "name": "RequirementEntry",
          "typeParameters": [
            {
              "typeParameterName": "reqtName",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "reqts",
              "constraintTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "inheritedNames",
              "constraintTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 7,
            "endIndex": 10
          }
        },
        {
          "kind": "Class",
          "canonicalReference": "@donecollectively/stellar-contracts!SeedActivity:class",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class SeedActivity<FactoryFunc extends "
            },
            {
              "kind": "Reference",
              "text": "seedActivityFunc",
              "canonicalReference": "@donecollectively/stellar-contracts!seedActivityFunc:type"
            },
            {
              "kind": "Content",
              "text": "<any, any>"
            },
            {
              "kind": "Content",
              "text": "> "
            }
          ],
          "fileUrlPath": "src/ActivityTypes.ts",
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "FactoryFunc",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "isAbstract": false,
          "name": "SeedActivity",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@donecollectively/stellar-contracts!SeedActivity:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `SeedActivity` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(host: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        getSeed(x: "
                },
                {
                  "kind": "Reference",
                  "text": "hasSeed",
                  "canonicalReference": "@donecollectively/stellar-contracts!hasSeed:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "TxOutputId",
                  "canonicalReference": "@helios-lang/ledger!TxOutputId:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }"
                },
                {
                  "kind": "Content",
                  "text": ", factoryFunc: "
                },
                {
                  "kind": "Content",
                  "text": "FactoryFunc"
                },
                {
                  "kind": "Content",
                  "text": ", arg: "
                },
                {
                  "kind": "Reference",
                  "text": "SeedActivityArg",
                  "canonicalReference": "@donecollectively/stellar-contracts!SeedActivityArg:type"
                },
                {
                  "kind": "Content",
                  "text": "<FactoryFunc>"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "host",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 6
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "factoryFunc",
                  "parameterTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 8
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "arg",
                  "parameterTypeTokenRange": {
                    "startIndex": 9,
                    "endIndex": 11
                  },
                  "isOptional": false
                }
              ]
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!SeedActivity#arg:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "arg: "
                },
                {
                  "kind": "Reference",
                  "text": "SeedActivityArg",
                  "canonicalReference": "@donecollectively/stellar-contracts!SeedActivityArg:type"
                },
                {
                  "kind": "Content",
                  "text": "<FactoryFunc>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "arg",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!SeedActivity#mkRedeemer:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "mkRedeemer(seedFrom: "
                },
                {
                  "kind": "Reference",
                  "text": "hasSeed",
                  "canonicalReference": "@donecollectively/stellar-contracts!hasSeed:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "seedFrom",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "mkRedeemer"
            }
          ],
          "implementsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@donecollectively/stellar-contracts!SeedActivityArg:type",
          "docComment": "/**\n * @private\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type SeedActivityArg<SA extends "
            },
            {
              "kind": "Reference",
              "text": "seedFunc",
              "canonicalReference": "@donecollectively/stellar-contracts!~seedFunc:type"
            },
            {
              "kind": "Content",
              "text": "<any, any>"
            },
            {
              "kind": "Content",
              "text": "> = "
            },
            {
              "kind": "Content",
              "text": "SA extends "
            },
            {
              "kind": "Reference",
              "text": "seedFunc",
              "canonicalReference": "@donecollectively/stellar-contracts!~seedFunc:type"
            },
            {
              "kind": "Content",
              "text": "<SA, infer ARG, infer RV> ? ARG : never"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/ActivityTypes.ts",
          "releaseTag": "Public",
          "name": "SeedActivityArg",
          "typeParameters": [
            {
              "typeParameterName": "SA",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 4,
            "endIndex": 7
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@donecollectively/stellar-contracts!seedActivityFunc:type",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type seedActivityFunc<ARGS extends "
            },
            {
              "kind": "Content",
              "text": "[...any] | never"
            },
            {
              "kind": "Content",
              "text": ", RV extends "
            },
            {
              "kind": "Reference",
              "text": "isActivity",
              "canonicalReference": "@donecollectively/stellar-contracts!isActivity:type"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "UplcData",
              "canonicalReference": "@helios-lang/uplc!UplcData:type"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "TypeError",
              "canonicalReference": "@donecollectively/stellar-contracts!~TypeError_2:type"
            },
            {
              "kind": "Content",
              "text": "<any>"
            },
            {
              "kind": "Content",
              "text": "> = "
            },
            {
              "kind": "Reference",
              "text": "IFISNEVER",
              "canonicalReference": "@donecollectively/stellar-contracts!~IFISNEVER:type"
            },
            {
              "kind": "Content",
              "text": "<ARGS, (seed: "
            },
            {
              "kind": "Reference",
              "text": "hasSeed",
              "canonicalReference": "@donecollectively/stellar-contracts!hasSeed:type"
            },
            {
              "kind": "Content",
              "text": ") => RV, (seed: "
            },
            {
              "kind": "Reference",
              "text": "hasSeed",
              "canonicalReference": "@donecollectively/stellar-contracts!hasSeed:type"
            },
            {
              "kind": "Content",
              "text": ", ...args: ARGS) => RV>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/ActivityTypes.ts",
          "releaseTag": "Public",
          "name": "seedActivityFunc",
          "typeParameters": [
            {
              "typeParameterName": "ARGS",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "RV",
              "constraintTokenRange": {
                "startIndex": 3,
                "endIndex": 9
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 10,
            "endIndex": 16
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@donecollectively/stellar-contracts!SeedAttrs:type",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type SeedAttrs = "
            },
            {
              "kind": "Content",
              "text": "{\n    txId: "
            },
            {
              "kind": "Reference",
              "text": "TxId",
              "canonicalReference": "@helios-lang/ledger!TxId:type"
            },
            {
              "kind": "Content",
              "text": ";\n    idx: bigint;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/ActivityTypes.ts",
          "releaseTag": "Public",
          "name": "SeedAttrs",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@donecollectively/stellar-contracts!SeedTxnScriptParams:type",
          "docComment": "/**\n * details of seed transaction\n *\n * @remarks\n *\n * Provides attribute names used for parameterizing scripts based on the \"seed-txn\" pattern for guaranteed uniqueness.\n *\n * Note that when minting UUTs based on the same pattern, these attribute names are not used. See {@link UutName} and {@link Capo} for more.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type SeedTxnScriptParams = "
            },
            {
              "kind": "Content",
              "text": "{\n    seedTxn: "
            },
            {
              "kind": "Reference",
              "text": "TxId",
              "canonicalReference": "@helios-lang/ledger!TxId:type"
            },
            {
              "kind": "Content",
              "text": ";\n    seedIndex: bigint;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/SeedTxnScriptParams.ts",
          "releaseTag": "Public",
          "name": "SeedTxnScriptParams",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@donecollectively/stellar-contracts!SomeDgtActivityHelper:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type SomeDgtActivityHelper = "
            },
            {
              "kind": "Reference",
              "text": "EnumBridge",
              "canonicalReference": "@donecollectively/stellar-contracts!EnumBridge:class"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "isActivity",
              "canonicalReference": "@donecollectively/stellar-contracts!isActivity:type"
            },
            {
              "kind": "Content",
              "text": "> & "
            },
            {
              "kind": "Reference",
              "text": "Pick",
              "canonicalReference": "!Pick:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "DelegateActivityHelper",
              "canonicalReference": "@donecollectively/stellar-contracts!~DelegateActivityHelper:class"
            },
            {
              "kind": "Content",
              "text": ", \"CapoLifecycleActivities\" | \"DelegateLifecycleActivities\" | \"CreatingDelegatedData\" | \"UpdatingDelegatedData\" | \"DeletingDelegatedData\" | \"MultipleDelegateActivities\"> & {\n    SpendingActivities: "
            },
            {
              "kind": "Reference",
              "text": "EnumBridge",
              "canonicalReference": "@donecollectively/stellar-contracts!EnumBridge:class"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "isActivity",
              "canonicalReference": "@donecollectively/stellar-contracts!isActivity:type"
            },
            {
              "kind": "Content",
              "text": "> & {\n        isAbstract?: \"NOTE: use a specific delegate to get concrete delegate activities\";\n    };\n    MintingActivities: "
            },
            {
              "kind": "Reference",
              "text": "EnumBridge",
              "canonicalReference": "@donecollectively/stellar-contracts!EnumBridge:class"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "isActivity",
              "canonicalReference": "@donecollectively/stellar-contracts!isActivity:type"
            },
            {
              "kind": "Content",
              "text": "> & {\n        isAbstract?: \"NOTE: use a specific delegate to get concrete delegate activities\";\n    };\n    BurningActivities: "
            },
            {
              "kind": "Reference",
              "text": "EnumBridge",
              "canonicalReference": "@donecollectively/stellar-contracts!EnumBridge:class"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "isActivity",
              "canonicalReference": "@donecollectively/stellar-contracts!isActivity:type"
            },
            {
              "kind": "Content",
              "text": "> & {\n        isAbstract?: \"NOTE: use a specific delegate to get concrete delegate activities\";\n    };\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/delegation/GenericDelegateBridge.ts",
          "releaseTag": "Public",
          "name": "SomeDgtActivityHelper",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 21
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@donecollectively/stellar-contracts!SomeDgtBridgeReader:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type SomeDgtBridgeReader = "
            },
            {
              "kind": "Reference",
              "text": "DataBridgeReaderClass",
              "canonicalReference": "@donecollectively/stellar-contracts!DataBridgeReaderClass:class"
            },
            {
              "kind": "Content",
              "text": " & "
            },
            {
              "kind": "Reference",
              "text": "PartialReader",
              "canonicalReference": "@donecollectively/stellar-contracts!~PartialReader:type"
            },
            {
              "kind": "Content",
              "text": " & {\n    bridge: "
            },
            {
              "kind": "Reference",
              "text": "GenericDelegateBridge",
              "canonicalReference": "@donecollectively/stellar-contracts!GenericDelegateBridge:type"
            },
            {
              "kind": "Content",
              "text": ";\n    DelegateDatum(d: "
            },
            {
              "kind": "Reference",
              "text": "UplcData",
              "canonicalReference": "@helios-lang/uplc!UplcData:type"
            },
            {
              "kind": "Content",
              "text": "): unknown;\n    SpendingActivity(d: "
            },
            {
              "kind": "Reference",
              "text": "UplcData",
              "canonicalReference": "@helios-lang/uplc!UplcData:type"
            },
            {
              "kind": "Content",
              "text": "): unknown;\n    MintingActivity(d: "
            },
            {
              "kind": "Reference",
              "text": "UplcData",
              "canonicalReference": "@helios-lang/uplc!UplcData:type"
            },
            {
              "kind": "Content",
              "text": "): unknown;\n    BurningActivity(d: "
            },
            {
              "kind": "Reference",
              "text": "UplcData",
              "canonicalReference": "@helios-lang/uplc!UplcData:type"
            },
            {
              "kind": "Content",
              "text": "): unknown;\n    DelegateActivity(d: "
            },
            {
              "kind": "Reference",
              "text": "UplcData",
              "canonicalReference": "@helios-lang/uplc!UplcData:type"
            },
            {
              "kind": "Content",
              "text": "): unknown;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/delegation/GenericDelegateBridge.ts",
          "releaseTag": "Public",
          "name": "SomeDgtBridgeReader",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 17
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@donecollectively/stellar-contracts!SomeDgtDatumHelper:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type SomeDgtDatumHelper<T extends "
            },
            {
              "kind": "Reference",
              "text": "AnyDataTemplate",
              "canonicalReference": "@donecollectively/stellar-contracts!AnyDataTemplate:type"
            },
            {
              "kind": "Content",
              "text": "<any, any>"
            },
            {
              "kind": "Content",
              "text": "> = "
            },
            {
              "kind": "Reference",
              "text": "EnumBridge",
              "canonicalReference": "@donecollectively/stellar-contracts!EnumBridge:class"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "JustAnEnum",
              "canonicalReference": "@donecollectively/stellar-contracts!JustAnEnum:type"
            },
            {
              "kind": "Content",
              "text": "> & "
            },
            {
              "kind": "Reference",
              "text": "Pick",
              "canonicalReference": "!Pick:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "DelegateDatumHelper",
              "canonicalReference": "@donecollectively/stellar-contracts!~DelegateDatumHelper:class"
            },
            {
              "kind": "Content",
              "text": ", \"Cip68RefToken\" | \"IsDelegation\"> & {\n    capoStoredData(fields: {\n        data: T;\n        version: "
            },
            {
              "kind": "Reference",
              "text": "IntLike",
              "canonicalReference": "@helios-lang/codec-utils!IntLike:type"
            },
            {
              "kind": "Content",
              "text": ";\n        otherDetails: "
            },
            {
              "kind": "Reference",
              "text": "UplcData",
              "canonicalReference": "@helios-lang/uplc!UplcData:type"
            },
            {
              "kind": "Content",
              "text": ";\n    }): "
            },
            {
              "kind": "Reference",
              "text": "InlineTxOutputDatum",
              "canonicalReference": "@helios-lang/ledger!InlineTxOutputDatum:type"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/delegation/GenericDelegateBridge.ts",
          "releaseTag": "Public",
          "name": "SomeDgtDatumHelper",
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 4,
            "endIndex": 18
          }
        },
        {
          "kind": "Class",
          "canonicalReference": "@donecollectively/stellar-contracts!StellarContract:class",
          "docComment": "/**\n * Basic wrapper and off-chain facade for interacting with a single Plutus contract script\n *\n * @remarks\n *\n * This class is normally used only for individual components of a higher-level {@link Capo | Capo or Leader contract}, which act as delegates within its application context. Nonetheless, it is the base class for every Capo as well as simpler contract scripts.\n *\n * The StellarContract class serves as an off-chain facade for transaction-building and interfacing to any on-chain contract script. Each StellarContract subclass must define a `contractSource()`, which is currently a Helios-language script, compiled in any Javascript environment to an on-chain executable UPLC or \"plutus core\" form. This enables a static dApp to be self-sovereign, without need for any server (\"application back-end\") environment.\n *\n * @typeParam ConfigType - schema for the configuration needed for creating or reproducing a specific instance of the contract script on-chain.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class StellarContract<ConfigType extends "
            },
            {
              "kind": "Reference",
              "text": "configBaseWithRev",
              "canonicalReference": "@donecollectively/stellar-contracts!configBase:interface"
            },
            {
              "kind": "Content",
              "text": "> "
            }
          ],
          "fileUrlPath": "src/StellarContract.ts",
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "ConfigType",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "isAbstract": false,
          "name": "StellarContract",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarContract#_bundle:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "_bundle: "
                },
                {
                  "kind": "Reference",
                  "text": "HeliosScriptBundle",
                  "canonicalReference": "@donecollectively/stellar-contracts!HeliosScriptBundle:class"
                },
                {
                  "kind": "Content",
                  "text": " | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "_bundle",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarContract#_cache:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "_cache: "
                },
                {
                  "kind": "Reference",
                  "text": "ComputedScriptProperties",
                  "canonicalReference": "@donecollectively/stellar-contracts!~ComputedScriptProperties:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "_cache",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarContract#_dataBridge:member",
              "docComment": "/**\n * Provides access to the script's defined on-chain types, using a fluent API for type-safe generation of data conforming to on-chain data formats & types.\n *\n * @remarks\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "_dataBridge?: "
                },
                {
                  "kind": "Reference",
                  "text": "ContractDataBridge",
                  "canonicalReference": "@donecollectively/stellar-contracts!ContractDataBridge:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "_dataBridge",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarContract#_utxoHelper:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "_utxoHelper: "
                },
                {
                  "kind": "Reference",
                  "text": "UtxoHelper",
                  "canonicalReference": "@donecollectively/stellar-contracts!UtxoHelper:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "_utxoHelper",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Constructor",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarContract:constructor(1)",
              "docComment": "/**\n * obsolete public constructor. Use the createWith() factory function instead.\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(setup: "
                },
                {
                  "kind": "Reference",
                  "text": "SetupDetails",
                  "canonicalReference": "@donecollectively/stellar-contracts!~SetupDetails:type"
                },
                {
                  "kind": "Content",
                  "text": ", internal: "
                },
                {
                  "kind": "Content",
                  "text": "typeof "
                },
                {
                  "kind": "Reference",
                  "text": "isInternalConstructor",
                  "canonicalReference": "@donecollectively/stellar-contracts!~isInternalConstructor:var"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "setup",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "internal",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 5
                  },
                  "isOptional": false
                }
              ]
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarContract#activity:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get activity(): "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "activity",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarContract#activityRedeemer:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "activityRedeemer(activityName: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", data?: "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "{\n        redeemer: "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "activityName",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "data",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "activityRedeemer"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarContract#activityVariantToUplc:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "activityVariantToUplc(activityName: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", data: "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "activityName",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "data",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "activityVariantToUplc"
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarContract#actorContext:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "actorContext: "
                },
                {
                  "kind": "Reference",
                  "text": "ActorContext",
                  "canonicalReference": "@donecollectively/stellar-contracts!~ActorContext:type"
                },
                {
                  "kind": "Content",
                  "text": "<any>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "actorContext",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarContract#ADA:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ADA(n: "
                },
                {
                  "kind": "Content",
                  "text": "bigint | number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "bigint"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "n",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "ADA"
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarContract#address:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get address(): "
                },
                {
                  "kind": "Reference",
                  "text": "Address",
                  "canonicalReference": "@helios-lang/ledger!Address:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "address",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarContract#addStrellaWithConfig:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "addStrellaWithConfig<SC extends "
                },
                {
                  "kind": "Reference",
                  "text": "StellarContract",
                  "canonicalReference": "@donecollectively/stellar-contracts!StellarContract:class"
                },
                {
                  "kind": "Content",
                  "text": "<any>"
                },
                {
                  "kind": "Content",
                  "text": ">(TargetClass: "
                },
                {
                  "kind": "Reference",
                  "text": "stellarSubclass",
                  "canonicalReference": "@donecollectively/stellar-contracts!stellarSubclass:type"
                },
                {
                  "kind": "Content",
                  "text": "<SC>"
                },
                {
                  "kind": "Content",
                  "text": ", config: "
                },
                {
                  "kind": "Content",
                  "text": "SC extends "
                },
                {
                  "kind": "Reference",
                  "text": "StellarContract",
                  "canonicalReference": "@donecollectively/stellar-contracts!StellarContract:class"
                },
                {
                  "kind": "Content",
                  "text": "<infer iCT> ? iCT : never"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<SC>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "SC",
                  "constraintTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 11,
                "endIndex": 13
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "TargetClass",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 6
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "config",
                  "parameterTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 10
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "addStrellaWithConfig"
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarContract#compiledScript:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "compiledScript: "
                },
                {
                  "kind": "Reference",
                  "text": "anyUplcProgram",
                  "canonicalReference": "@donecollectively/stellar-contracts!~anyUplcProgram:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "compiledScript",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarContract#compileWithScriptParams:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "compileWithScriptParams(): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<void>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "compileWithScriptParams"
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarContract#configIn:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "configIn?: "
                },
                {
                  "kind": "Content",
                  "text": "ConfigType"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "configIn",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarContract#contractParams:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "contractParams?: "
                },
                {
                  "kind": "Reference",
                  "text": "UplcRecord",
                  "canonicalReference": "@donecollectively/stellar-contracts!~UplcRecord:type"
                },
                {
                  "kind": "Content",
                  "text": "<ConfigType>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "contractParams",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarContract.createWith:member(1)",
              "docComment": "/**\n * Factory function for a configured instance of the contract\n *\n * @remarks\n *\n * Due to boring details of initialization order, this factory function is needed for creating a new instance of the contract.\n *\n * @param args - setup and configuration details\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static createWith<thisType extends "
                },
                {
                  "kind": "Reference",
                  "text": "StellarContract",
                  "canonicalReference": "@donecollectively/stellar-contracts!StellarContract:class"
                },
                {
                  "kind": "Content",
                  "text": "<configType>"
                },
                {
                  "kind": "Content",
                  "text": ", configType extends "
                },
                {
                  "kind": "Reference",
                  "text": "configBaseWithRev",
                  "canonicalReference": "@donecollectively/stellar-contracts!configBase:interface"
                },
                {
                  "kind": "Content",
                  "text": " = "
                },
                {
                  "kind": "Content",
                  "text": "thisType extends "
                },
                {
                  "kind": "Reference",
                  "text": "StellarContract",
                  "canonicalReference": "@donecollectively/stellar-contracts!StellarContract:class"
                },
                {
                  "kind": "Content",
                  "text": "<infer iCT> ? iCT : never"
                },
                {
                  "kind": "Content",
                  "text": ">(this: "
                },
                {
                  "kind": "Reference",
                  "text": "stellarSubclass",
                  "canonicalReference": "@donecollectively/stellar-contracts!stellarSubclass:type"
                },
                {
                  "kind": "Content",
                  "text": "<any>"
                },
                {
                  "kind": "Content",
                  "text": ", args: "
                },
                {
                  "kind": "Reference",
                  "text": "StellarFactoryArgs",
                  "canonicalReference": "@donecollectively/stellar-contracts!StellarFactoryArgs:type"
                },
                {
                  "kind": "Content",
                  "text": "<configType>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "StellarContract",
                  "canonicalReference": "@donecollectively/stellar-contracts!StellarContract:class"
                },
                {
                  "kind": "Content",
                  "text": "<configType> & "
                },
                {
                  "kind": "Reference",
                  "text": "InstanceType",
                  "canonicalReference": "!InstanceType:type"
                },
                {
                  "kind": "Content",
                  "text": "<typeof "
                },
                {
                  "kind": "Reference",
                  "text": "this",
                  "canonicalReference": "@donecollectively/stellar-contracts!~this:var"
                },
                {
                  "kind": "Content",
                  "text": ">>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "thisType",
                  "constraintTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "typeParameterName": "configType",
                  "constraintTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 6,
                    "endIndex": 9
                  }
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 16,
                "endIndex": 24
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "this",
                  "parameterTypeTokenRange": {
                    "startIndex": 10,
                    "endIndex": 12
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "args",
                  "parameterTypeTokenRange": {
                    "startIndex": 13,
                    "endIndex": 15
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "createWith"
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarContract#dataBridgeClass:member",
              "docComment": "/**\n * the dataBridgeClass attribute MUST be defined for any bundle having a datum type - this is the bridge class for converting from off-chain data types to on-chain data - it provides convenient, type-safe interfaces for doing that\n *\n * @remarks\n *\n * Minters don't have datum, so they don't need to define this attribute. However, note that ***mint delegates*** do in fact have datum types. If you are defining a custom delegate of that kind, you will need to define this attribute.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "dataBridgeClass: "
                },
                {
                  "kind": "Reference",
                  "text": "AbstractNew",
                  "canonicalReference": "@donecollectively/stellar-contracts!~AbstractNew:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "ContractDataBridge",
                  "canonicalReference": "@donecollectively/stellar-contracts!ContractDataBridge:class"
                },
                {
                  "kind": "Content",
                  "text": "> | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "dataBridgeClass",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarContract#datumType:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get datumType(): "
                },
                {
                  "kind": "Reference",
                  "text": "DataType",
                  "canonicalReference": "@helios-lang/compiler!DataType:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "datumType",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarContract.defaultParams:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static get defaultParams(): "
                },
                {
                  "kind": "Content",
                  "text": "{}"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "defaultParams",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": true,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarContract#delegateAddrHint:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "delegateAddrHint(): "
                },
                {
                  "kind": "Reference",
                  "text": "Address",
                  "canonicalReference": "@helios-lang/ledger!Address:type"
                },
                {
                  "kind": "Content",
                  "text": "[] | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "delegateAddrHint"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarContract#delegateReqdAddress:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "delegateReqdAddress(): "
                },
                {
                  "kind": "Content",
                  "text": "false | "
                },
                {
                  "kind": "Reference",
                  "text": "Address",
                  "canonicalReference": "@helios-lang/ledger!Address:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "delegateReqdAddress"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarContract#findUutSeedUtxo:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "findUutSeedUtxo(uutPurposes: "
                },
                {
                  "kind": "Content",
                  "text": "string[]"
                },
                {
                  "kind": "Content",
                  "text": ", tcx: "
                },
                {
                  "kind": "Reference",
                  "text": "StellarTxnContext",
                  "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext:class"
                },
                {
                  "kind": "Content",
                  "text": "<any>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "TxInput",
                  "canonicalReference": "@helios-lang/ledger!TxInput:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 10
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "uutPurposes",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "tcx",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 5
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "findUutSeedUtxo"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarContract#getBundle:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getBundle(): "
                },
                {
                  "kind": "Reference",
                  "text": "HeliosScriptBundle",
                  "canonicalReference": "@donecollectively/stellar-contracts!HeliosScriptBundle:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "getBundle"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarContract#getContractScriptParamsUplc:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getContractScriptParamsUplc(config: "
                },
                {
                  "kind": "Content",
                  "text": "ConfigType"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcRecord",
                  "canonicalReference": "@donecollectively/stellar-contracts!~UplcRecord:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Partial",
                  "canonicalReference": "!Partial:type"
                },
                {
                  "kind": "Content",
                  "text": "<ConfigType> & "
                },
                {
                  "kind": "Reference",
                  "text": "Required",
                  "canonicalReference": "!Required:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Pick",
                  "canonicalReference": "!Pick:type"
                },
                {
                  "kind": "Content",
                  "text": "<ConfigType, \"rev\">>>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 11
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "config",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "getContractScriptParamsUplc"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarContract#getOnchainBridge:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getOnchainBridge(): "
                },
                {
                  "kind": "Reference",
                  "text": "possiblyAbstractContractBridgeType",
                  "canonicalReference": "@donecollectively/stellar-contracts!~possiblyAbstractContractBridgeType:type"
                },
                {
                  "kind": "Content",
                  "text": "<this>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "getOnchainBridge"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarContract#getSeed:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getSeed(arg: "
                },
                {
                  "kind": "Reference",
                  "text": "hasSeed",
                  "canonicalReference": "@donecollectively/stellar-contracts!hasSeed:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "TxOutputId",
                  "canonicalReference": "@helios-lang/ledger!TxOutputId:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "arg",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "getSeed"
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarContract#identity:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get identity(): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "identity",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarContract#init:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "init(args: "
                },
                {
                  "kind": "Reference",
                  "text": "StellarFactoryArgs",
                  "canonicalReference": "@donecollectively/stellar-contracts!StellarFactoryArgs:type"
                },
                {
                  "kind": "Content",
                  "text": "<ConfigType>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<this>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "args",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "init"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarContract#inlineDatum:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "inlineDatum(datumName: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", data: "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "import(\"@helios-lang/ledger\")."
                },
                {
                  "kind": "Reference",
                  "text": "InlineTxOutputDatum",
                  "canonicalReference": "@helios-lang/ledger!InlineTxOutputDatum:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "datumName",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "data",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "inlineDatum"
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarContract#isConnected:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get isConnected(): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "isConnected",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarContract#mintingPolicyHash:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get mintingPolicyHash(): "
                },
                {
                  "kind": "Reference",
                  "text": "MintingPolicyHash",
                  "canonicalReference": "@helios-lang/ledger!MintingPolicyHash:type"
                },
                {
                  "kind": "Content",
                  "text": " | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "mintingPolicyHash",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarContract#mkTcx:member(1)",
              "docComment": "/**\n * Reuses an existing transaction context, or creates a new one with the given name and the current actor context\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "mkTcx<TCX extends "
                },
                {
                  "kind": "Reference",
                  "text": "StellarTxnContext",
                  "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext:class"
                },
                {
                  "kind": "Content",
                  "text": ">(tcx: "
                },
                {
                  "kind": "Reference",
                  "text": "StellarTxnContext",
                  "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext:class"
                },
                {
                  "kind": "Content",
                  "text": " | undefined"
                },
                {
                  "kind": "Content",
                  "text": ", name?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "TCX"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "TCX",
                  "constraintTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 8,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "tcx",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 5
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "name",
                  "parameterTypeTokenRange": {
                    "startIndex": 6,
                    "endIndex": 7
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "mkTcx"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarContract#mkTcx:member(2)",
              "docComment": "/**\n * Creates a new transaction context with the current actor context\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "mkTcx(name?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "StellarTxnContext",
                  "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 2,
              "parameters": [
                {
                  "parameterName": "name",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "mkTcx"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarContract#mustFindMyUtxo:member(1)",
              "docComment": "/**\n * Locates a UTxO locked in a validator contract address\n *\n * @remarks\n *\n * Throws an error if no matching UTxO can be found\n *\n * @param semanticName - descriptive name; used in diagnostic messages and any errors thrown\n *\n * @param predicate - filter function; returns its utxo if it matches expectations\n *\n * @param exceptInTcx - any utxos already in the transaction context are disregarded and not passed to the predicate function\n *\n * @param extraErrorHint - user- or developer-facing guidance for guiding them to deal with the miss\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "mustFindMyUtxo(semanticName: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", predicate: "
                },
                {
                  "kind": "Reference",
                  "text": "utxoPredicate",
                  "canonicalReference": "@donecollectively/stellar-contracts!utxoPredicate:type"
                },
                {
                  "kind": "Content",
                  "text": ", exceptInTcx: "
                },
                {
                  "kind": "Reference",
                  "text": "StellarTxnContext",
                  "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext:class"
                },
                {
                  "kind": "Content",
                  "text": ", extraErrorHint?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "TxInput",
                  "canonicalReference": "@helios-lang/ledger!TxInput:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 9,
                "endIndex": 13
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "semanticName",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "predicate",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "exceptInTcx",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "extraErrorHint",
                  "parameterTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 8
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "mustFindMyUtxo"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarContract#mustFindMyUtxo:member(2)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "mustFindMyUtxo(semanticName: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", predicate: "
                },
                {
                  "kind": "Reference",
                  "text": "utxoPredicate",
                  "canonicalReference": "@donecollectively/stellar-contracts!utxoPredicate:type"
                },
                {
                  "kind": "Content",
                  "text": ", extraErrorHint?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "TxInput",
                  "canonicalReference": "@helios-lang/ledger!TxInput:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 11
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 2,
              "parameters": [
                {
                  "parameterName": "semanticName",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "predicate",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "extraErrorHint",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "mustFindMyUtxo"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarContract#mustGetActivity:member(1)",
              "docComment": "/**\n * @remarks\n *\n * Cross-checks the requested name against the available activities in the script. Throws a helpful error if the requested activity name isn't present.'\n *\n * @deprecated\n *\n * - see {@link StellarContract.activityVariantToUplc | this.activityVariantToUplc(variant, data)} instead Retrieves an on-chain type for a specific named activity (\"redeemer\")\n *\n * @param activityName - the name of the requested activity\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "mustGetActivity(activityName: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "EnumMemberType",
                  "canonicalReference": "@helios-lang/compiler!EnumMemberType:type"
                },
                {
                  "kind": "Content",
                  "text": " | null"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "activityName",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "mustGetActivity"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarContract#mustGetEnumVariant:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "mustGetEnumVariant(enumType: "
                },
                {
                  "kind": "Reference",
                  "text": "DataType",
                  "canonicalReference": "@helios-lang/compiler!DataType:type"
                },
                {
                  "kind": "Content",
                  "text": ", variantName: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "EnumMemberType",
                  "canonicalReference": "@helios-lang/compiler!EnumMemberType:type"
                },
                {
                  "kind": "Content",
                  "text": " | null"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "enumType",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "variantName",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "mustGetEnumVariant"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarContract#mustHaveActivity:member(1)",
              "docComment": "/**\n * asserts the presence of the indicated activity name in the on-chain script\n *\n * @remarks\n *\n * The activity name is expected to be found in the script's redeemer enum\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "mustHaveActivity(activityName: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "EnumMemberType",
                  "canonicalReference": "@helios-lang/compiler!EnumMemberType:type"
                },
                {
                  "kind": "Content",
                  "text": " | null"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "activityName",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "mustHaveActivity"
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarContract#network:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "network: "
                },
                {
                  "kind": "Reference",
                  "text": "CardanoClient",
                  "canonicalReference": "@helios-lang/tx-utils!CardanoClient:type"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "Emulator",
                  "canonicalReference": "@helios-lang/tx-utils!Emulator:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "network",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarContract#networkParams:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "networkParams: "
                },
                {
                  "kind": "Reference",
                  "text": "NetworkParams",
                  "canonicalReference": "@helios-lang/ledger!NetworkParams:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "networkParams",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarContract#newReadDatum:member",
              "docComment": "/**\n * Converts UPLC from an on-chain datum object to a typed off-chain datum object.\n *\n * Given a **utxo with a datum of the contract's datum type**, this method will convert the UPLC datum to a typed off-chain datum object.\n *\n * ### Standard WARNING\n *\n * If the datum's structure is not of the expected type, this method MAY throw an error, or it might return data that can cause problems somewhere else in your code. That won't happen if you're following the guidance above.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get newReadDatum(): "
                },
                {
                  "kind": "Reference",
                  "text": "findReadDatumType",
                  "canonicalReference": "@donecollectively/stellar-contracts!~findReadDatumType:type"
                },
                {
                  "kind": "Content",
                  "text": "<this>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "newReadDatum",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarContract#offchain:member",
              "docComment": "/**\n * The `offchain` object provides access to readers for the on-chain types of this contract script.\n *\n * @remarks\n *\n * Its nested attributes include all the on-chain types defined in the script, with data-reading helpers for each. This is useful for reading on-chain data in off-chain code.\n *\n * ### Warning: low-level typed-data access!\n *\n * Note that these readers will work properly with UPLC data known to be of the correct type. If you encounter errors related to these results, it's likely you are using the wrong reader for the data you have in hand.\n *\n * For the typical use-case of reading the datum type from a UTxO held in the contract, this is not a problem, and note that the `readDatum` helper provides a shortcut for this most-common use-case.\n *\n * If you're not sure what you're doing, it's likely that this is not the right tool for your job.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get offchain(): "
                },
                {
                  "kind": "Reference",
                  "text": "possiblyAbstractContractBridgeType",
                  "canonicalReference": "@donecollectively/stellar-contracts!~possiblyAbstractContractBridgeType:type"
                },
                {
                  "kind": "Content",
                  "text": "<this>[\"reader\"]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "offchain",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarContract#onchain:member",
              "docComment": "/**\n * The `onchain` object provides access to all bridging capabilities for this contract script.\n *\n * @remarks\n *\n * Its nested attributes include: - `types` - a collection of all the on-chain types defined in the script, with data-creation helpers for each - `activity` - a creation helper for the activities/redeemers defined in the script\n *\n * Scripts that use datum types (not including minters) will also have: - `datum` - a data-creation helper for the datum type of the script - `readDatum` - a data-reading helper for the datum type of the script\n *\n * ### Low-level type access For low-level access (it's likely you don't need to use this) for on-chain types, the `reader` attribute (aka `offchain`) exists: . - `reader` - a collection of data-reading helpers for the on-chain types, given UPLC data known to be of that type\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get onchain(): "
                },
                {
                  "kind": "Reference",
                  "text": "possiblyAbstractContractBridgeType",
                  "canonicalReference": "@donecollectively/stellar-contracts!~possiblyAbstractContractBridgeType:type"
                },
                {
                  "kind": "Content",
                  "text": "<this>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "onchain",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarContract#onChainActivitiesType:member",
              "docComment": "/**\n * returns the on-chain type for activities (\"redeemers\")\n *\n * @remarks\n *\n * Use mustGetActivityName() instead, to get the type for a specific activity.\n *\n * returns the on-chain enum used for spending contract utxos or for different use-cases of minting (in a minting script). the returned type (and its enum variants) are suitable for off-chain txn-creation override `get onChainActivitiesName()` if needed to match your contract script.\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get onChainActivitiesType(): "
                },
                {
                  "kind": "Reference",
                  "text": "DataType",
                  "canonicalReference": "@helios-lang/compiler!DataType:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "onChainActivitiesType",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarContract#onChainDatumType:member",
              "docComment": "/**\n * The on-chain type for datum\n *\n * @remarks\n *\n * This getter provides a class, representing the on-chain enum used for attaching data (or data hashes) to contract utxos the returned type (and its enum variants) are suitable for off-chain txn-creation override `get scriptDatumName()` if needed to match your contract script.\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get onChainDatumType(): "
                },
                {
                  "kind": "Reference",
                  "text": "DataType",
                  "canonicalReference": "@helios-lang/compiler!DataType:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "onChainDatumType",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarContract#onChainTypes:member",
              "docComment": "/**\n * Returns all the types exposed by the contract script\n *\n * @remarks\n *\n * Passed directly from Helios; property names match contract's defined type names\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get onChainTypes(): "
                },
                {
                  "kind": "Reference",
                  "text": "Program",
                  "canonicalReference": "@helios-lang/compiler!Program:class"
                },
                {
                  "kind": "Content",
                  "text": "[\"userTypes\"][string]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "onChainTypes",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarContract#optimize:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "optimize: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "optimize",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarContract#outputsSentToDatum:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "outputsSentToDatum(datum: "
                },
                {
                  "kind": "Reference",
                  "text": "InlineDatum",
                  "canonicalReference": "@donecollectively/stellar-contracts!InlineDatum:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "TxInput",
                  "canonicalReference": "@helios-lang/ledger!TxInput:type"
                },
                {
                  "kind": "Content",
                  "text": "[]>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "datum",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "outputsSentToDatum"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarContract#paramsToUplc:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "paramsToUplc(params: "
                },
                {
                  "kind": "Reference",
                  "text": "Record",
                  "canonicalReference": "!Record:type"
                },
                {
                  "kind": "Content",
                  "text": "<string, any>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcRecord",
                  "canonicalReference": "@donecollectively/stellar-contracts!~UplcRecord:type"
                },
                {
                  "kind": "Content",
                  "text": "<ConfigType>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "params",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "paramsToUplc"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarContract.parseConfig:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static parseConfig(rawJsonConfig: "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "rawJsonConfig",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "parseConfig"
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarContract#partialConfig:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "partialConfig?: "
                },
                {
                  "kind": "Reference",
                  "text": "Partial",
                  "canonicalReference": "!Partial:type"
                },
                {
                  "kind": "Content",
                  "text": "<ConfigType>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "partialConfig",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarContract#program:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get program(): "
                },
                {
                  "kind": "Reference",
                  "text": "Program",
                  "canonicalReference": "@helios-lang/compiler!Program:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "program",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarContract#reader:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get reader(): "
                },
                {
                  "kind": "Reference",
                  "text": "possiblyAbstractContractBridgeType",
                  "canonicalReference": "@donecollectively/stellar-contracts!~possiblyAbstractContractBridgeType:type"
                },
                {
                  "kind": "Content",
                  "text": "<this>[\"reader\"]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "reader",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarContract#scriptActivitiesName:member",
              "docComment": "/**\n * identifies the enum used for activities (redeemers) in the Helios script\n *\n * @remarks\n *\n * Override this if your contract script uses a type name other than Activity.\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get scriptActivitiesName(): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "scriptActivitiesName",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarContract#scriptBundle:member(1)",
              "docComment": "/**\n * each StellarContracts subclass needs to provide a scriptBundle class.\n *\n * @remarks\n *\n * Your script bundle MUST be defined in a separate file using a convention of `‹scriptName›.hlb.ts`, and exported as a default class. It should inherit from HeliosScriptBundle or one of its subclasses. Stellar Contracts processes this file, analyzes the on-chain types defined in your Helios sources, and generates Typescript types and a data-bridging class for your script.\n *\n * Once the data-bridge class is generated, you should import it into your contract module and assign it to your `dataBridgeClass` attribute.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "scriptBundle(): "
                },
                {
                  "kind": "Reference",
                  "text": "HeliosScriptBundle",
                  "canonicalReference": "@donecollectively/stellar-contracts!HeliosScriptBundle:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "scriptBundle"
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarContract#scriptDatumName:member",
              "docComment": "/**\n * identifies the enum used for the script Datum\n *\n * @remarks\n *\n * Override this if your contract script uses a type name other than Datum.\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get scriptDatumName(): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "scriptDatumName",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarContract#setup:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "setup: "
                },
                {
                  "kind": "Reference",
                  "text": "SetupDetails",
                  "canonicalReference": "@donecollectively/stellar-contracts!~SetupDetails:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "setup",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarContract#submit:member(1)",
              "docComment": "/**\n * @deprecated\n *\n * - use `tcx.submit()` instead.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "submit(tcx: "
                },
                {
                  "kind": "Reference",
                  "text": "StellarTxnContext",
                  "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext:class"
                },
                {
                  "kind": "Content",
                  "text": ", { signers, addlTxInfo, }?: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        signers?: "
                },
                {
                  "kind": "Reference",
                  "text": "Address",
                  "canonicalReference": "@helios-lang/ledger!Address:type"
                },
                {
                  "kind": "Content",
                  "text": "[];\n        addlTxInfo?: "
                },
                {
                  "kind": "Reference",
                  "text": "Pick",
                  "canonicalReference": "!Pick:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "TxDescription",
                  "canonicalReference": "@donecollectively/stellar-contracts!TxDescription:type"
                },
                {
                  "kind": "Content",
                  "text": "<any>, \"description\">;\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<import(\"@helios-lang/ledger\")."
                },
                {
                  "kind": "Reference",
                  "text": "TxId",
                  "canonicalReference": "@helios-lang/ledger!TxId:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 11,
                "endIndex": 15
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "tcx",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "{ signers, addlTxInfo, }",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 10
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "submit"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarContract#tcxWithSeedUtxo:member(1)",
              "docComment": "/**\n * Finds a free seed-utxo from the user wallet, and adds it to the transaction\n *\n * @remarks\n *\n * Accepts a transaction context that may already have a seed. Returns a typed tcx with hasSeedUtxo type.\n *\n * The seedUtxo will be consumed in the transaction, so it can never be used again; its value will be returned to the user wallet.\n *\n * The seedUtxo is needed for UUT minting, and the transaction is typed with the presence of that seed (found in tcx.state.seedUtxo).\n *\n * If a seedUtxo is already present in the transaction context, no additional seedUtxo will be added.\n *\n * If a seedUtxo is provided as an argument, that utxo must already be present in the transaction inputs; the state will be updated to reference it.\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "tcxWithSeedUtxo<TCX extends "
                },
                {
                  "kind": "Reference",
                  "text": "StellarTxnContext",
                  "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext:class"
                },
                {
                  "kind": "Content",
                  "text": ">(tcx?: "
                },
                {
                  "kind": "Content",
                  "text": "TCX"
                },
                {
                  "kind": "Content",
                  "text": ", seedUtxo?: "
                },
                {
                  "kind": "Reference",
                  "text": "TxInput",
                  "canonicalReference": "@helios-lang/ledger!TxInput:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<TCX & "
                },
                {
                  "kind": "Reference",
                  "text": "hasSeedUtxo",
                  "canonicalReference": "@donecollectively/stellar-contracts!hasSeedUtxo:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "TCX",
                  "constraintTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 11
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "tcx",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": true
                },
                {
                  "parameterName": "seedUtxo",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "tcxWithSeedUtxo"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarContract#txnKeepValue:member(1)",
              "docComment": "/**\n * Returns the indicated Value to the contract script\n *\n * @param tcx - transaction context\n *\n * @param value - a value already having minUtxo calculated\n *\n * @param datum - inline datum\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "txnKeepValue(tcx: "
                },
                {
                  "kind": "Reference",
                  "text": "StellarTxnContext",
                  "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext:class"
                },
                {
                  "kind": "Content",
                  "text": ", value: "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "@helios-lang/ledger!Value:type"
                },
                {
                  "kind": "Content",
                  "text": ", datum: "
                },
                {
                  "kind": "Reference",
                  "text": "InlineDatum",
                  "canonicalReference": "@donecollectively/stellar-contracts!InlineDatum:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "StellarTxnContext",
                  "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext:class"
                },
                {
                  "kind": "Content",
                  "text": "<import(\"./StellarTxnContext.js\")."
                },
                {
                  "kind": "Reference",
                  "text": "anyState",
                  "canonicalReference": "@donecollectively/stellar-contracts!anyState:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 11
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "tcx",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "value",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "datum",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "txnKeepValue"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarContract#typeToUplc:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "typeToUplc(type: "
                },
                {
                  "kind": "Reference",
                  "text": "DataType",
                  "canonicalReference": "@helios-lang/compiler!DataType:type"
                },
                {
                  "kind": "Content",
                  "text": ", data: "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": ", path?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "type",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "data",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "path",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "typeToUplc"
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarContract#uh:member",
              "docComment": "/**\n * Provides access to a UtxoHelper instance\n *\n * @remarks\n *\n * - same as utxoHelper, but with a shorter name\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get uh(): "
                },
                {
                  "kind": "Reference",
                  "text": "UtxoHelper",
                  "canonicalReference": "@donecollectively/stellar-contracts!UtxoHelper:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "uh",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarContract#usesContractScript:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "usesContractScript: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "usesContractScript",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarContract#utxoHelper:member",
              "docComment": "/**\n * Provides access to a UtxoHelper instance\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get utxoHelper(): "
                },
                {
                  "kind": "Reference",
                  "text": "UtxoHelper",
                  "canonicalReference": "@donecollectively/stellar-contracts!UtxoHelper:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "utxoHelper",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarContract#validatorHash:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get validatorHash(): "
                },
                {
                  "kind": "Reference",
                  "text": "ValidatorHash",
                  "canonicalReference": "@helios-lang/ledger!ValidatorHash:type"
                },
                {
                  "kind": "Content",
                  "text": "<unknown>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "validatorHash",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarContract#wallet:member",
              "docComment": "/**\n * returns the wallet connection used by the current actor\n *\n * @remarks\n *\n * Throws an error if the strella contract facade has not been initialized with a wallet in settings.actorContext\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get wallet(): "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "wallet",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarContract#walletNetworkCheck:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "walletNetworkCheck?: "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "NetworkName",
                  "canonicalReference": "@donecollectively/stellar-contracts!~NetworkName:type"
                },
                {
                  "kind": "Content",
                  "text": "> | "
                },
                {
                  "kind": "Reference",
                  "text": "NetworkName",
                  "canonicalReference": "@donecollectively/stellar-contracts!~NetworkName:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "walletNetworkCheck",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 6
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            }
          ],
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "@donecollectively/stellar-contracts!StellarDelegate:class",
          "docComment": "/**\n * Base class for modules that can serve as Capo delegates\n *\n * @remarks\n *\n * establishes a base protocol for delegates.\n *\n * @typeParam CT - type of any specialized configuration; use capoDelegateConfig by default.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare abstract class StellarDelegate extends "
            },
            {
              "kind": "Reference",
              "text": "StellarContract",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarContract:class"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "capoDelegateConfig",
              "canonicalReference": "@donecollectively/stellar-contracts!capoDelegateConfig:type"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/delegation/StellarDelegate.ts",
          "releaseTag": "Public",
          "isAbstract": true,
          "name": "StellarDelegate",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarDelegate#authorityTokenName:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get authorityTokenName(): "
                },
                {
                  "kind": "Content",
                  "text": "number[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "authorityTokenName",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarDelegate.currentRev:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static currentRev: "
                },
                {
                  "kind": "Content",
                  "text": "bigint"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "currentRev",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": true,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarDelegate#dataBridgeClass:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "dataBridgeClass: "
                },
                {
                  "kind": "Reference",
                  "text": "AbstractNew",
                  "canonicalReference": "@donecollectively/stellar-contracts!~AbstractNew:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "ContractDataBridgeWithEnumDatum",
                  "canonicalReference": "@donecollectively/stellar-contracts!ContractDataBridgeWithEnumDatum:class"
                },
                {
                  "kind": "Content",
                  "text": "> | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "dataBridgeClass",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarDelegate.defaultParams:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static get defaultParams(): "
                },
                {
                  "kind": "Content",
                  "text": "{\n        rev: bigint;\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "defaultParams",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": true,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarDelegate#DelegateAddsAuthorityToken:member(1)",
              "docComment": "/**\n * Adds the delegate's authority token to a transaction\n *\n * @remarks\n *\n * Given a delegate already configured by a Capo, this method implements transaction-building logic needed to include the UUT into the `tcx`. the `utxo` is discovered by {@link StellarDelegate.DelegateMustFindAuthorityToken | DelegateMustFindAuthorityToken()}\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "abstract DelegateAddsAuthorityToken<TCX extends "
                },
                {
                  "kind": "Reference",
                  "text": "StellarTxnContext",
                  "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext:class"
                },
                {
                  "kind": "Content",
                  "text": ">(tcx: "
                },
                {
                  "kind": "Content",
                  "text": "TCX"
                },
                {
                  "kind": "Content",
                  "text": ", uutxo: "
                },
                {
                  "kind": "Reference",
                  "text": "TxInput",
                  "canonicalReference": "@helios-lang/ledger!TxInput:type"
                },
                {
                  "kind": "Content",
                  "text": ", redeemer?: "
                },
                {
                  "kind": "Reference",
                  "text": "isActivity",
                  "canonicalReference": "@donecollectively/stellar-contracts!isActivity:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<TCX>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "TCX",
                  "constraintTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 9,
                "endIndex": 11
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "tcx",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "uutxo",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "redeemer",
                  "parameterTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 8
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": true,
              "name": "DelegateAddsAuthorityToken"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarDelegate#DelegateMustFindAuthorityToken:member(1)",
              "docComment": "/**\n * Finds the delegate authority token, normally in the delegate's contract address\n *\n * @remarks\n *\n * The default implementation finds the UTxO having the authority token in the delegate's contract address.\n *\n * @param tcx - the transaction context\n *\n * @reqt\n *\n * It MUST resolve and return the UTxO (a TxInput type ready for spending) ... or throw an informative error\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "abstract DelegateMustFindAuthorityToken(tcx: "
                },
                {
                  "kind": "Reference",
                  "text": "StellarTxnContext",
                  "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext:class"
                },
                {
                  "kind": "Content",
                  "text": ", label: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "TxInput",
                  "canonicalReference": "@helios-lang/ledger!TxInput:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "tcx",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "label",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": true,
              "name": "DelegateMustFindAuthorityToken"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarDelegate#delegateRequirements:member(1)",
              "docComment": "/**\n * Captures requirements as data\n *\n * @remarks\n *\n * see reqts structure\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "delegateRequirements(): "
                },
                {
                  "kind": "Content",
                  "text": "import(\"../Requirements.js\")."
                },
                {
                  "kind": "Reference",
                  "text": "ReqtsMap",
                  "canonicalReference": "@donecollectively/stellar-contracts!ReqtsMap:type"
                },
                {
                  "kind": "Content",
                  "text": "<\"provides an interface for providing arms-length proof of authority to any other contract\" | \"implementations SHOULD positively govern spend of the UUT\" | \"implementations MUST provide an essential interface for transaction-building\" | \"requires a txnReceiveAuthorityToken(tcx, delegateAddr, fromFoundUtxo?)\" | \"requires a mustFindAuthorityToken(tcx)\" | \"requires a txnGrantAuthority(tcx, delegateAddr, fromFoundUtxo)\" | \"requires txnRetireCred(tcx, fromFoundUtxo)\", never>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "delegateRequirements"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarDelegate#DelegateRetiresAuthorityToken:member(1)",
              "docComment": "/**\n * Adds any important transaction elemements supporting the authority token being retired, closing the delegate contracts' utxo.\n *\n * @remarks\n *\n * EXPECTS to receive a Utxo having the result of txnMustFindAuthorityToken()\n *\n * EXPECTS the `burn` instruction to be separately added to the transaction.\n *\n * The default implementation uses the conventional `Retiring` activity to spend the token.\n *\n * @param tcx - transaction context\n *\n * @param fromFoundUtxo - the utxo having the authority otken\n *\n * @reqt\n *\n * It MUST add the indicated utxo to the transaction as an input\n *\n * @reqt\n *\n * When backed by a contract: * it should use an activity/redeemer allowing the token to be spent **and NOT returned**. * the contract script SHOULD ensure any other UTXOs it may also hold, related to this delegation, do not become inaccessible as a result.\n *\n * It MAY enforce additional requirements and/or block the action.\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "abstract DelegateRetiresAuthorityToken<TCX extends "
                },
                {
                  "kind": "Reference",
                  "text": "StellarTxnContext",
                  "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext:class"
                },
                {
                  "kind": "Content",
                  "text": ">(tcx: "
                },
                {
                  "kind": "Content",
                  "text": "TCX"
                },
                {
                  "kind": "Content",
                  "text": ", fromFoundUtxo: "
                },
                {
                  "kind": "Reference",
                  "text": "TxInput",
                  "canonicalReference": "@helios-lang/ledger!TxInput:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<TCX>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "TCX",
                  "constraintTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "tcx",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "fromFoundUtxo",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": true,
              "name": "DelegateRetiresAuthorityToken"
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarDelegate#delegateValidatorHash:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get delegateValidatorHash(): "
                },
                {
                  "kind": "Reference",
                  "text": "ValidatorHash",
                  "canonicalReference": "@helios-lang/ledger!ValidatorHash:type"
                },
                {
                  "kind": "Content",
                  "text": " | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "delegateValidatorHash",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarDelegate#mkAuthorityTokenPredicate:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "mkAuthorityTokenPredicate(): "
                },
                {
                  "kind": "Content",
                  "text": "import(\"../UtxoHelper.js\")."
                },
                {
                  "kind": "Reference",
                  "text": "tokenPredicate",
                  "canonicalReference": "@donecollectively/stellar-contracts!~tokenPredicate:type"
                },
                {
                  "kind": "Content",
                  "text": "<any>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "mkAuthorityTokenPredicate"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarDelegate#tvAuthorityToken:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "tvAuthorityToken(useMinTv?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "@helios-lang/ledger!Value:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "useMinTv",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "tvAuthorityToken"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarDelegate#txnGrantAuthority:member(1)",
              "docComment": "/**\n * Finds and adds the delegate's authority token to the transaction\n *\n * @remarks\n *\n * calls the delegate-specific DelegateAddsAuthorityToken() method, with the uut found by DelegateMustFindAuthorityToken().\n *\n * returns the token back to the contract using {@link StellarDelegate.txnReceiveAuthorityToken | txnReceiveAuthorityToken()}\n *\n * @param tcx - transaction context\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "txnGrantAuthority<TCX extends "
                },
                {
                  "kind": "Reference",
                  "text": "StellarTxnContext",
                  "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext:class"
                },
                {
                  "kind": "Content",
                  "text": ">(tcx: "
                },
                {
                  "kind": "Content",
                  "text": "TCX"
                },
                {
                  "kind": "Content",
                  "text": ", redeemer?: "
                },
                {
                  "kind": "Reference",
                  "text": "isActivity",
                  "canonicalReference": "@donecollectively/stellar-contracts!isActivity:type"
                },
                {
                  "kind": "Content",
                  "text": ", skipReturningDelegate?: "
                },
                {
                  "kind": "Content",
                  "text": "\"skipDelegateReturn\""
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<TCX>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "TCX",
                  "constraintTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 9,
                "endIndex": 11
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "tcx",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "redeemer",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": true
                },
                {
                  "parameterName": "skipReturningDelegate",
                  "parameterTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 8
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "txnGrantAuthority"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarDelegate#txnReceiveAuthorityToken:member(1)",
              "docComment": "/**\n * Standard delegate method for receiving the authority token as a txn output\n *\n * @remarks\n *\n * creates a UTxO / TxOutput, depositing the indicated token-name into the delegated destination.\n *\n * Each implemented subclass can use it's own style to match its strategy & mechanism, and is EXPECTED to use tcx.addOutput() to receive the indicated `tokenValue` into the contract or other destination address.\n *\n * This method is used both for the original deposit and for returning the token during a grant-of-authority.\n *\n * Impls should normally preserve the datum from an already-present sourceUtxo, possibly with evolved details.\n *\n * @param tcx - transaction-context\n *\n * @param tokenValue - the Value of the token that needs to be received. Always includes the minUtxo needed for this authority token\n *\n * @param fromFoundUtxo - always present when the authority token already existed; can be used to duplicate or iterate on an existing datum, or to include any additional Value in the new UTxO, to match the previous UTxO with minimal extra heuristics\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "abstract txnReceiveAuthorityToken<TCX extends "
                },
                {
                  "kind": "Reference",
                  "text": "StellarTxnContext",
                  "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext:class"
                },
                {
                  "kind": "Content",
                  "text": ">(tcx: "
                },
                {
                  "kind": "Content",
                  "text": "TCX"
                },
                {
                  "kind": "Content",
                  "text": ", tokenValue: "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "@helios-lang/ledger!Value:type"
                },
                {
                  "kind": "Content",
                  "text": ", fromFoundUtxo?: "
                },
                {
                  "kind": "Reference",
                  "text": "TxInput",
                  "canonicalReference": "@helios-lang/ledger!TxInput:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<TCX>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "TCX",
                  "constraintTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 9,
                "endIndex": 11
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "tcx",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "tokenValue",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "fromFoundUtxo",
                  "parameterTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 8
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": true,
              "name": "txnReceiveAuthorityToken"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarDelegate#txnRetireAuthorityToken:member(1)",
              "docComment": "/**\n * Finds the authority token and adds it to the transaction, tagged for retirement\n *\n * @remarks\n *\n * Doesn't return the token back to the contract.\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "txnRetireAuthorityToken<TCX extends "
                },
                {
                  "kind": "Reference",
                  "text": "StellarTxnContext",
                  "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext:class"
                },
                {
                  "kind": "Content",
                  "text": ">(tcx: "
                },
                {
                  "kind": "Content",
                  "text": "TCX"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<TCX>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "TCX",
                  "constraintTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "tcx",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "txnRetireAuthorityToken"
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@donecollectively/stellar-contracts!StellarFactoryArgs:type",
          "docComment": "/**\n * Initializes a stellar contract class\n *\n * @remarks\n *\n * Includes network and other standard setup details, and any configuration needed for the specific class.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type StellarFactoryArgs<CT extends "
            },
            {
              "kind": "Reference",
              "text": "configBaseWithRev",
              "canonicalReference": "@donecollectively/stellar-contracts!configBase:interface"
            },
            {
              "kind": "Content",
              "text": "> = "
            },
            {
              "kind": "Content",
              "text": "{\n    setup: "
            },
            {
              "kind": "Reference",
              "text": "SetupDetails",
              "canonicalReference": "@donecollectively/stellar-contracts!~SetupDetails:type"
            },
            {
              "kind": "Content",
              "text": ";\n    config?: CT;\n    partialConfig?: "
            },
            {
              "kind": "Reference",
              "text": "Partial",
              "canonicalReference": "!Partial:type"
            },
            {
              "kind": "Content",
              "text": "<CT>;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/StellarContract.ts",
          "releaseTag": "Public",
          "name": "StellarFactoryArgs",
          "typeParameters": [
            {
              "typeParameterName": "CT",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 3,
            "endIndex": 8
          }
        },
        {
          "kind": "Class",
          "canonicalReference": "@donecollectively/stellar-contracts!StellarHeliosProject:class",
          "docComment": "/**\n * Gathers `*.hlb.[tj]s` files along with their status and attributes.\n *\n * @remarks\n *\n * For script bundles that have previously been loaded, the project will have access to the bundle's type information, and be able to instantiate the bundle, given a CapoBundle that typically provides library dependencies.\n *\n * For script bundles that are being loaded for the first time, the project can generate a \"placeholder\" type-definition, to be updated once the bundle has been transformed by the helios rollup loader to be able to do the above.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class StellarHeliosProject "
            }
          ],
          "fileUrlPath": "src/helios/StellarHeliosProject.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "StellarHeliosProject",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarHeliosProject#_isSC:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "_isSC: "
                },
                {
                  "kind": "Content",
                  "text": "boolean | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "_isSC",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Constructor",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarHeliosProject:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `StellarHeliosProject` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor();"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": []
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarHeliosProject#bundleEntries:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "bundleEntries: "
                },
                {
                  "kind": "Reference",
                  "text": "Map",
                  "canonicalReference": "!Map:interface"
                },
                {
                  "kind": "Content",
                  "text": "<string, "
                },
                {
                  "kind": "Reference",
                  "text": "BundleStatusEntry",
                  "canonicalReference": "@donecollectively/stellar-contracts!~BundleStatusEntry:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "bundleEntries",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarHeliosProject#capoBundle:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "capoBundle: "
                },
                {
                  "kind": "Reference",
                  "text": "HeliosScriptBundle",
                  "canonicalReference": "@donecollectively/stellar-contracts!HeliosScriptBundle:class"
                },
                {
                  "kind": "Content",
                  "text": " | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "capoBundle",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarHeliosProject.findProjectRoot:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static findProjectRoot(): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "findProjectRoot"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarHeliosProject#generateBundleTypes:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "generateBundleTypes(oneFile: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "oneFile",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "generateBundleTypes"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarHeliosProject#hasBundleClass:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "hasBundleClass(filename: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "filename",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "hasBundleClass"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarHeliosProject#isStellarContracts:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "isStellarContracts(): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "isStellarContracts"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarHeliosProject#loadBundleWithClass:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "loadBundleWithClass(absoluteFilename: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", bundleClass: "
                },
                {
                  "kind": "Content",
                  "text": "typeof "
                },
                {
                  "kind": "Reference",
                  "text": "HeliosScriptBundle",
                  "canonicalReference": "@donecollectively/stellar-contracts!HeliosScriptBundle:class"
                },
                {
                  "kind": "Content",
                  "text": ", harmlessSecondCapo?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 8,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "absoluteFilename",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "bundleClass",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 5
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "harmlessSecondCapo",
                  "parameterTypeTokenRange": {
                    "startIndex": 6,
                    "endIndex": 7
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "loadBundleWithClass"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarHeliosProject#normalizeFilePath:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "normalizeFilePath(filename: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "filename",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "normalizeFilePath"
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarHeliosProject#projectRoot:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "projectRoot: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "projectRoot",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarHeliosProject#replaceWithNewCapo:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "replaceWithNewCapo(absoluteFilename: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", newCapoClass: "
                },
                {
                  "kind": "Content",
                  "text": "typeof "
                },
                {
                  "kind": "Reference",
                  "text": "HeliosScriptBundle",
                  "canonicalReference": "@donecollectively/stellar-contracts!HeliosScriptBundle:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "StellarHeliosProject",
                  "canonicalReference": "@donecollectively/stellar-contracts!StellarHeliosProject:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "absoluteFilename",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "newCapoClass",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 5
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "replaceWithNewCapo"
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarHeliosProject.root:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static root: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "root",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": true,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarHeliosProject#writeDataBridgeCode:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "writeDataBridgeCode(oneFilename: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", bundleEntry: "
                },
                {
                  "kind": "Reference",
                  "text": "BundleStatusEntry",
                  "canonicalReference": "@donecollectively/stellar-contracts!~BundleStatusEntry:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "oneFilename",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "bundleEntry",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "writeDataBridgeCode"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarHeliosProject#writeIfUnchanged:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "writeIfUnchanged(filename: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", source: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "string | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "filename",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "source",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "writeIfUnchanged"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarHeliosProject#writeTypeInfo:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "writeTypeInfo(filename: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", bundleEntry: "
                },
                {
                  "kind": "Reference",
                  "text": "BundleStatusEntry",
                  "canonicalReference": "@donecollectively/stellar-contracts!~BundleStatusEntry:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "filename",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "bundleEntry",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "writeTypeInfo"
            }
          ],
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "@donecollectively/stellar-contracts!StellarNetworkEmulator:class",
          "docComment": "/**\n * A simple emulated Network. This can be used to do integration tests of whole dApps. Staking is not yet supported.\n *\n * @alpha\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class StellarNetworkEmulator implements "
            },
            {
              "kind": "Reference",
              "text": "Emulator",
              "canonicalReference": "@helios-lang/tx-utils!Emulator:type"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/testing/StellarNetworkEmulator.ts",
          "releaseTag": "Alpha",
          "isAbstract": false,
          "name": "StellarNetworkEmulator",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarNetworkEmulator#_addressUtxos:member",
              "docComment": "/**\n * Cached map of UTxOs at addresses  @private\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "_addressUtxos: "
                },
                {
                  "kind": "Reference",
                  "text": "Record",
                  "canonicalReference": "!Record:type"
                },
                {
                  "kind": "Content",
                  "text": "<string, "
                },
                {
                  "kind": "Reference",
                  "text": "TxInput",
                  "canonicalReference": "@helios-lang/ledger!TxInput:type"
                },
                {
                  "kind": "Content",
                  "text": "[]>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Alpha",
              "name": "_addressUtxos",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarNetworkEmulator#_allUtxos:member",
              "docComment": "/**\n * Cached map of all UTxOs ever created  @private\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "_allUtxos: "
                },
                {
                  "kind": "Reference",
                  "text": "Record",
                  "canonicalReference": "!Record:type"
                },
                {
                  "kind": "Content",
                  "text": "<string, "
                },
                {
                  "kind": "Reference",
                  "text": "TxInput",
                  "canonicalReference": "@helios-lang/ledger!TxInput:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Alpha",
              "name": "_allUtxos",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarNetworkEmulator#_consumedUtxos:member",
              "docComment": "/**\n * Cached set of all UTxOs ever consumed  @private\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "_consumedUtxos: "
                },
                {
                  "kind": "Reference",
                  "text": "Set",
                  "canonicalReference": "!Set:interface"
                },
                {
                  "kind": "Content",
                  "text": "<string>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Alpha",
              "name": "_consumedUtxos",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Constructor",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarNetworkEmulator:constructor(1)",
              "docComment": "/**\n * Instantiates a NetworkEmulator at slot 0. An optional seed number can be specified, from which all EMULATED RANDOMNESS is derived.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(seed?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", { params }?: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        params: "
                },
                {
                  "kind": "Reference",
                  "text": "NetworkParams",
                  "canonicalReference": "@helios-lang/ledger!NetworkParams:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Alpha",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "seed",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": true
                },
                {
                  "parameterName": "{ params }",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 6
                  },
                  "isOptional": true
                }
              ]
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarNetworkEmulator#blocks:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "blocks: "
                },
                {
                  "kind": "Reference",
                  "text": "EmulatorTx",
                  "canonicalReference": "@helios-lang/tx-utils!EmulatorTx:type"
                },
                {
                  "kind": "Content",
                  "text": "[][]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Alpha",
              "name": "blocks",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarNetworkEmulator#currentSlot:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "currentSlot: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Alpha",
              "name": "currentSlot",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarNetworkEmulator#fromSnapshot:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "fromSnapshot: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Alpha",
              "name": "fromSnapshot",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarNetworkEmulator#genesis:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "genesis: "
                },
                {
                  "kind": "Reference",
                  "text": "EmulatorGenesisTx",
                  "canonicalReference": "@helios-lang/tx-utils!EmulatorGenesisTx:type"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Alpha",
              "name": "genesis",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarNetworkEmulator#id:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "id: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Alpha",
              "name": "id",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarNetworkEmulator#mempool:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "mempool: "
                },
                {
                  "kind": "Reference",
                  "text": "EmulatorTx",
                  "canonicalReference": "@helios-lang/tx-utils!EmulatorTx:type"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Alpha",
              "name": "mempool",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarNetworkEmulator#mulberry32:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "mulberry32: "
                },
                {
                  "kind": "Content",
                  "text": "() => number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Alpha",
              "name": "mulberry32",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarNetworkEmulator#netPHelper:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "netPHelper: "
                },
                {
                  "kind": "Reference",
                  "text": "NetworkParamsHelper",
                  "canonicalReference": "@helios-lang/ledger!NetworkParamsHelper:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Alpha",
              "name": "netPHelper",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarNetworkEmulator#now:member",
              "docComment": "/**\n * Each slot is assumed to be 1000 milliseconds\n *\n * returns milliseconds since start of emulation\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get now(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Alpha",
              "name": "now",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarNetworkEmulator#parameters:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get parameters(): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "NetworkParams",
                  "canonicalReference": "@helios-lang/ledger!NetworkParams:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Alpha",
              "name": "parameters",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarNetworkEmulator#parametersSync:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get parametersSync(): "
                },
                {
                  "kind": "Content",
                  "text": "{\n        refTipSlot: number;\n        refTipTime: number;\n        txFeeFixed: number;\n        txFeePerByte: number;\n        exMemFeePerUnit: number;\n        exCpuFeePerUnit: number;\n        utxoDepositPerByte: number;\n        refScriptsFeePerByte: number;\n        collateralPercentage: number;\n        maxCollateralInputs: number;\n        maxTxExMem: number;\n        maxTxExCpu: number;\n        maxTxSize: number;\n        secondsPerSlot: number;\n        stakeAddrDeposit: number;\n        costModelParamsV1: number[];\n        costModelParamsV2: number[];\n        costModelParamsV3: number[];\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Alpha",
              "name": "parametersSync",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarNetworkEmulator#params:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "params: "
                },
                {
                  "kind": "Reference",
                  "text": "NetworkParams",
                  "canonicalReference": "@helios-lang/ledger!NetworkParams:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Alpha",
              "name": "params",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarNetworkEmulator#txIds:member",
              "docComment": "/**\n * Ignores the genesis txs  @type {TxId[]}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get txIds(): "
                },
                {
                  "kind": "Reference",
                  "text": "TxId",
                  "canonicalReference": "@helios-lang/ledger!TxId:type"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Alpha",
              "name": "txIds",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            }
          ],
          "implementsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 2
            }
          ]
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@donecollectively/stellar-contracts!stellarSubclass:type",
          "docComment": "/**\n * Type for the Class that constructs to a given type\n *\n * @remarks\n *\n * Type of the matching literal class\n *\n * note: Typescript should make this pattern easier\n *\n * @typeParam S - the type of objects of this class\n *\n * @typeParam CT - inferred type of the constructor args for the class\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type stellarSubclass<S extends "
            },
            {
              "kind": "Reference",
              "text": "StellarContract",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarContract:class"
            },
            {
              "kind": "Content",
              "text": "<any>"
            },
            {
              "kind": "Content",
              "text": "> = "
            },
            {
              "kind": "Content",
              "text": "(new (setup: "
            },
            {
              "kind": "Reference",
              "text": "SetupDetails",
              "canonicalReference": "@donecollectively/stellar-contracts!~SetupDetails:type"
            },
            {
              "kind": "Content",
              "text": ", ...args: any[]) => S) & {\n    defaultParams: "
            },
            {
              "kind": "Reference",
              "text": "Partial",
              "canonicalReference": "!Partial:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "ConfigFor",
              "canonicalReference": "@donecollectively/stellar-contracts!ConfigFor:type"
            },
            {
              "kind": "Content",
              "text": "<S>>;\n    createWith(args: "
            },
            {
              "kind": "Reference",
              "text": "StellarFactoryArgs",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarFactoryArgs:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "ConfigFor",
              "canonicalReference": "@donecollectively/stellar-contracts!ConfigFor:type"
            },
            {
              "kind": "Content",
              "text": "<S>>): "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<S>;\n    parseConfig(rawJsonConfig: any): any;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/StellarContract.ts",
          "releaseTag": "Public",
          "name": "stellarSubclass",
          "typeParameters": [
            {
              "typeParameterName": "S",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 4,
            "endIndex": 17
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "@donecollectively/stellar-contracts!StellarTestContext:interface",
          "docComment": "/**\n * Interface augmenting the generic vitest testing context with a convention for testing contracts created with Stellar Contracts.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface StellarTestContext<HTH extends "
            },
            {
              "kind": "Reference",
              "text": "StellarTestHelper",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarTestHelper:class"
            },
            {
              "kind": "Content",
              "text": "<SC>"
            },
            {
              "kind": "Content",
              "text": ", SC extends "
            },
            {
              "kind": "Reference",
              "text": "StellarContract",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarContract:class"
            },
            {
              "kind": "Content",
              "text": "<any>"
            },
            {
              "kind": "Content",
              "text": " = "
            },
            {
              "kind": "Content",
              "text": "HTH extends "
            },
            {
              "kind": "Reference",
              "text": "StellarTestHelper",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarTestHelper:class"
            },
            {
              "kind": "Content",
              "text": "<infer iSC> ? iSC : never"
            },
            {
              "kind": "Content",
              "text": "> extends "
            },
            {
              "kind": "Reference",
              "text": "canHaveRandomSeed",
              "canonicalReference": "@donecollectively/stellar-contracts!~canHaveRandomSeed:type"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "TestContext",
              "canonicalReference": "@vitest/runner!TestContext:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/testing/StellarTestContext.ts",
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "HTH",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "SC",
              "constraintTokenRange": {
                "startIndex": 4,
                "endIndex": 6
              },
              "defaultTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 10
              }
            }
          ],
          "name": "StellarTestContext",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarTestContext#h:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "h: "
                },
                {
                  "kind": "Content",
                  "text": "HTH"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "h",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarTestContext#initHelper:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "initHelper(config: "
                },
                {
                  "kind": "Reference",
                  "text": "Partial",
                  "canonicalReference": "!Partial:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "ConfigFor",
                  "canonicalReference": "@donecollectively/stellar-contracts!ConfigFor:type"
                },
                {
                  "kind": "Content",
                  "text": "<SC>> & "
                },
                {
                  "kind": "Reference",
                  "text": "canHaveRandomSeed",
                  "canonicalReference": "@donecollectively/stellar-contracts!~canHaveRandomSeed:type"
                },
                {
                  "kind": "Content",
                  "text": " & "
                },
                {
                  "kind": "Reference",
                  "text": "canSkipSetup",
                  "canonicalReference": "@donecollectively/stellar-contracts!~canSkipSetup:type"
                },
                {
                  "kind": "Content",
                  "text": ", helperState?: "
                },
                {
                  "kind": "Reference",
                  "text": "TestHelperState",
                  "canonicalReference": "@donecollectively/stellar-contracts!TestHelperState:type"
                },
                {
                  "kind": "Content",
                  "text": "<SC>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "StellarTestHelper",
                  "canonicalReference": "@donecollectively/stellar-contracts!StellarTestHelper:class"
                },
                {
                  "kind": "Content",
                  "text": "<SC>>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 12,
                "endIndex": 16
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "config",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 8
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "helperState",
                  "parameterTypeTokenRange": {
                    "startIndex": 9,
                    "endIndex": 11
                  },
                  "isOptional": true
                }
              ],
              "name": "initHelper"
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarTestContext#strella:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get strella(): "
                },
                {
                  "kind": "Content",
                  "text": "SC"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "strella",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 11,
              "endIndex": 12
            },
            {
              "startIndex": 13,
              "endIndex": 14
            }
          ]
        },
        {
          "kind": "Class",
          "canonicalReference": "@donecollectively/stellar-contracts!StellarTestHelper:class",
          "docComment": "/**\n * Base class for test-helpers on generic Stellar contracts\n *\n * @remarks\n *\n * NOTE: DefaultCapoTestHelper is likely to be a better fit for typical testing needs and typical contract-development scenarios. Use this class for specific unit-testing needs not sufficiently served by integration-testing on a Capo.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare abstract class StellarTestHelper<SC extends "
            },
            {
              "kind": "Reference",
              "text": "StellarContract",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarContract:class"
            },
            {
              "kind": "Content",
              "text": "<any>"
            },
            {
              "kind": "Content",
              "text": "> "
            }
          ],
          "fileUrlPath": "src/testing/StellarTestHelper.ts",
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "SC",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "isAbstract": true,
          "name": "StellarTestHelper",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarTestHelper#_actorName:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "protected _actorName: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "_actorName",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": true,
              "isAbstract": false
            },
            {
              "kind": "Constructor",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarTestHelper:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `StellarTestHelper` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(config?: "
                },
                {
                  "kind": "Reference",
                  "text": "ConfigFor",
                  "canonicalReference": "@donecollectively/stellar-contracts!ConfigFor:type"
                },
                {
                  "kind": "Content",
                  "text": "<SC> & "
                },
                {
                  "kind": "Reference",
                  "text": "canHaveRandomSeed",
                  "canonicalReference": "@donecollectively/stellar-contracts!~canHaveRandomSeed:type"
                },
                {
                  "kind": "Content",
                  "text": " & "
                },
                {
                  "kind": "Reference",
                  "text": "canSkipSetup",
                  "canonicalReference": "@donecollectively/stellar-contracts!~canSkipSetup:type"
                },
                {
                  "kind": "Content",
                  "text": ", helperState?: "
                },
                {
                  "kind": "Reference",
                  "text": "TestHelperState",
                  "canonicalReference": "@donecollectively/stellar-contracts!TestHelperState:type"
                },
                {
                  "kind": "Content",
                  "text": "<SC>"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "config",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 6
                  },
                  "isOptional": true
                },
                {
                  "parameterName": "helperState",
                  "parameterTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 9
                  },
                  "isOptional": true
                }
              ]
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarTestHelper#actorContext:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "actorContext: "
                },
                {
                  "kind": "Reference",
                  "text": "ActorContext",
                  "canonicalReference": "@donecollectively/stellar-contracts!~ActorContext:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "emulatedWallet",
                  "canonicalReference": "@donecollectively/stellar-contracts!~SimpleWallet_stellar:class"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "actorContext",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarTestHelper#actorName:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get actorName(): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "actorName",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarTestHelper#actors:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "actors: "
                },
                {
                  "kind": "Reference",
                  "text": "actorMap",
                  "canonicalReference": "@donecollectively/stellar-contracts!~actorMap:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "actors",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarTestHelper#addActor:member(1)",
              "docComment": "/**\n * creates a new Actor in the transaction context with initial funds, returning a Wallet object\n *\n * @remarks\n *\n * Given an actor name (\"marcie\") or role name (\"marketer\"), and a number of indicated lovelace, creates and returns a wallet having the indicated starting balance.\n *\n * By default, three additional, separate 5-ADA utxos are created, to ensure sufficient Collateral and small-change are existing, making typical transaction scenarios work easily. If you want to include other utxo's instead you can supply their lovelace sizes.\n *\n * To suppress creation of additional utxos, use `0n` for arg3.\n *\n * You may wish to import {@link ADA} = 1_000_000n from the testing/ module, and multiply smaller integers by that constant.\n *\n * @param roleName - an actor name or role-name for this wallet\n *\n * @param walletBalance - initial wallet balance\n *\n * @param moreUtxos - additional utxos to include\n *\n * @example\n *\n * this.addActor(\"cheapo\", 14n * ADA, 0n); // 14 ADA and no additional utxos this.addActor(\"flexible\", 14n * ADA); // 14 ADA + default 15 ADA in 3 additional utxos this.addActor(\"moneyBags\", 42_000_000n * ADA, 5n, 4n); // many ADA and two collaterals\n *\n * // 3O ADA in 6 separate utxos: this.addActor(\"smallChange\", 5n * ADA, 5n * ADA, 5n * ADA, 5n * ADA, 5n * ADA, 5n * ADA);\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "addActor(roleName: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", walletBalance: "
                },
                {
                  "kind": "Content",
                  "text": "bigint"
                },
                {
                  "kind": "Content",
                  "text": ", ...moreUtxos: "
                },
                {
                  "kind": "Content",
                  "text": "bigint[]"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Wallet",
                  "canonicalReference": "@helios-lang/tx-utils!Wallet:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "roleName",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "walletBalance",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "moreUtxos",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "addActor"
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarTestHelper#address:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "address?: "
                },
                {
                  "kind": "Reference",
                  "text": "Address",
                  "canonicalReference": "@helios-lang/ledger!Address:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "address",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarTestHelper#addrRegistry:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "addrRegistry: "
                },
                {
                  "kind": "Reference",
                  "text": "Record",
                  "canonicalReference": "!Record:type"
                },
                {
                  "kind": "Content",
                  "text": "<string, string>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "addrRegistry",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarTestHelper#advanceNetworkTimeForTx:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "advanceNetworkTimeForTx(tcx: "
                },
                {
                  "kind": "Reference",
                  "text": "StellarTxnContext",
                  "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext:class"
                },
                {
                  "kind": "Content",
                  "text": ", futureDate?: "
                },
                {
                  "kind": "Reference",
                  "text": "Date",
                  "canonicalReference": "!Date:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<void>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "tcx",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "futureDate",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "advanceNetworkTimeForTx"
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarTestHelper#config:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "config?: "
                },
                {
                  "kind": "Reference",
                  "text": "ConfigFor",
                  "canonicalReference": "@donecollectively/stellar-contracts!ConfigFor:type"
                },
                {
                  "kind": "Content",
                  "text": "<SC> & "
                },
                {
                  "kind": "Reference",
                  "text": "canHaveRandomSeed",
                  "canonicalReference": "@donecollectively/stellar-contracts!~canHaveRandomSeed:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "config",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarTestHelper#createWallet:member(1)",
              "docComment": "/**\n * Creates a new SimpleWallet and populates it with a given lovelace quantity and assets. Special genesis transactions are added to the emulated chain in order to create these assets.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "createWallet(lovelace?: "
                },
                {
                  "kind": "Content",
                  "text": "bigint"
                },
                {
                  "kind": "Content",
                  "text": ", assets?: "
                },
                {
                  "kind": "Content",
                  "text": "import(\"@helios-lang/ledger\")."
                },
                {
                  "kind": "Reference",
                  "text": "Assets",
                  "canonicalReference": "@helios-lang/ledger!Assets:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "SimpleWallet_stellar",
                  "canonicalReference": "@donecollectively/stellar-contracts!~SimpleWallet_stellar:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "lovelace",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": true
                },
                {
                  "parameterName": "assets",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 5
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "createWallet"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarTestHelper#currentSlot:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "currentSlot(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "currentSlot"
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarTestHelper#defaultActor:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "defaultActor?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "defaultActor",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarTestHelper#delay:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "delay(ms: "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<unknown>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "ms",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "delay"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarTestHelper#fixupParams:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "fixupParams(preProdParams: "
                },
                {
                  "kind": "Reference",
                  "text": "NetworkParams",
                  "canonicalReference": "@helios-lang/ledger!NetworkParams:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "NetworkParams",
                  "canonicalReference": "@helios-lang/ledger!NetworkParams:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "preProdParams",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "fixupParams"
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarTestHelper#helperState:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "helperState?: "
                },
                {
                  "kind": "Reference",
                  "text": "TestHelperState",
                  "canonicalReference": "@donecollectively/stellar-contracts!TestHelperState:type"
                },
                {
                  "kind": "Content",
                  "text": "<SC>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "helperState",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarTestHelper#initialize:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "initialize({ randomSeed, }?: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        randomSeed?: number;\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<SC>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "{ randomSeed, }",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "initialize"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarTestHelper#initStellarClass:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "initStellarClass(config?: "
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "ConfigFor",
                  "canonicalReference": "@donecollectively/stellar-contracts!ConfigFor:type"
                },
                {
                  "kind": "Content",
                  "text": "<SC> & "
                },
                {
                  "kind": "Reference",
                  "text": "canHaveRandomSeed",
                  "canonicalReference": "@donecollectively/stellar-contracts!~canHaveRandomSeed:type"
                },
                {
                  "kind": "Content",
                  "text": ") | undefined"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<SC>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "config",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 6
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "initStellarClass"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarTestHelper#initStrella:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "initStrella(TargetClass: "
                },
                {
                  "kind": "Reference",
                  "text": "stellarSubclass",
                  "canonicalReference": "@donecollectively/stellar-contracts!stellarSubclass:type"
                },
                {
                  "kind": "Content",
                  "text": "<SC>"
                },
                {
                  "kind": "Content",
                  "text": ", config?: "
                },
                {
                  "kind": "Reference",
                  "text": "ConfigFor",
                  "canonicalReference": "@donecollectively/stellar-contracts!ConfigFor:type"
                },
                {
                  "kind": "Content",
                  "text": "<SC>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<SC>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "TargetClass",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "config",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 6
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "initStrella"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarTestHelper#mkNetwork:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "mkNetwork(params: "
                },
                {
                  "kind": "Reference",
                  "text": "NetworkParams",
                  "canonicalReference": "@helios-lang/ledger!NetworkParams:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "["
                },
                {
                  "kind": "Reference",
                  "text": "StellarNetworkEmulator",
                  "canonicalReference": "@donecollectively/stellar-contracts!StellarNetworkEmulator:class"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "NetworkParamsHelper",
                  "canonicalReference": "@helios-lang/ledger!NetworkParamsHelper:type"
                },
                {
                  "kind": "Content",
                  "text": "]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "params",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "mkNetwork"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarTestHelper#mkRandomBytes:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "mkRandomBytes(length: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "number[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "length",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "mkRandomBytes"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarTestHelper#mkSeedUtxo:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "mkSeedUtxo(seedIndex?: "
                },
                {
                  "kind": "Content",
                  "text": "bigint"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "TxId",
                  "canonicalReference": "@helios-lang/ledger!TxId:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "seedIndex",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "mkSeedUtxo"
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarTestHelper#netPHelper:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "netPHelper: "
                },
                {
                  "kind": "Reference",
                  "text": "NetworkParamsHelper",
                  "canonicalReference": "@helios-lang/ledger!NetworkParamsHelper:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "netPHelper",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarTestHelper#network:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get network(): "
                },
                {
                  "kind": "Reference",
                  "text": "StellarNetworkEmulator",
                  "canonicalReference": "@donecollectively/stellar-contracts!StellarNetworkEmulator:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "network",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarTestHelper#networkCtx:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "networkCtx: "
                },
                {
                  "kind": "Reference",
                  "text": "NetworkContext",
                  "canonicalReference": "@donecollectively/stellar-contracts!~NetworkContext:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "StellarNetworkEmulator",
                  "canonicalReference": "@donecollectively/stellar-contracts!StellarNetworkEmulator:class"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "networkCtx",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarTestHelper#networkParams:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get networkParams(): "
                },
                {
                  "kind": "Reference",
                  "text": "NetworkParams",
                  "canonicalReference": "@helios-lang/ledger!NetworkParams:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "networkParams",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarTestHelper#optimize:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "optimize: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "optimize",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarTestHelper#rand:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "rand?: "
                },
                {
                  "kind": "Content",
                  "text": "() => number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "rand",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarTestHelper#randomSeed:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "randomSeed?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "randomSeed",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarTestHelper#setActor:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "setActor(actorName: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<void>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "actorName",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "setActor"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarTestHelper#setDefaultActor:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "setDefaultActor(): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<void>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "setDefaultActor"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarTestHelper#setupActors:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "setupActors(): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<void>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "setupActors"
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarTestHelper#setupPending:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "setupPending?: "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<any>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "setupPending",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarTestHelper#slotToTime:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "slotToTime(s: "
                },
                {
                  "kind": "Content",
                  "text": "bigint"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "number | "
                },
                {
                  "kind": "Reference",
                  "text": "Date",
                  "canonicalReference": "!Date:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "s",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "slotToTime"
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarTestHelper#state:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "state: "
                },
                {
                  "kind": "Reference",
                  "text": "Record",
                  "canonicalReference": "!Record:type"
                },
                {
                  "kind": "Content",
                  "text": "<string, any>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "state",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarTestHelper#stellarClass:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "abstract get stellarClass(): "
                },
                {
                  "kind": "Reference",
                  "text": "stellarSubclass",
                  "canonicalReference": "@donecollectively/stellar-contracts!stellarSubclass:type"
                },
                {
                  "kind": "Content",
                  "text": "<SC>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "stellarClass",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": true
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarTestHelper#strella:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "strella: "
                },
                {
                  "kind": "Content",
                  "text": "SC"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "strella",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarTestHelper#submitTx:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "submitTx(tx: "
                },
                {
                  "kind": "Reference",
                  "text": "Tx",
                  "canonicalReference": "@helios-lang/ledger!Tx:type"
                },
                {
                  "kind": "Content",
                  "text": ", force?: "
                },
                {
                  "kind": "Content",
                  "text": "\"force\""
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "TxId",
                  "canonicalReference": "@helios-lang/ledger!TxId:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "tx",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "force",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "submitTx"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarTestHelper#submitTxnWithBlock:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "submitTxnWithBlock(tcx: "
                },
                {
                  "kind": "Reference",
                  "text": "StellarTxnContext",
                  "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext:class"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "StellarTxnContext",
                  "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext:class"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ", options?: "
                },
                {
                  "kind": "Reference",
                  "text": "SubmitOptions",
                  "canonicalReference": "@donecollectively/stellar-contracts!~SubmitOptions:type"
                },
                {
                  "kind": "Content",
                  "text": " & {\n        futureDate?: "
                },
                {
                  "kind": "Reference",
                  "text": "Date",
                  "canonicalReference": "!Date:interface"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "StellarTxnContext",
                  "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext:class"
                },
                {
                  "kind": "Content",
                  "text": "<import(\"../StellarTxnContext.js\")."
                },
                {
                  "kind": "Reference",
                  "text": "anyState",
                  "canonicalReference": "@donecollectively/stellar-contracts!anyState:interface"
                },
                {
                  "kind": "Content",
                  "text": ">>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 13,
                "endIndex": 19
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "tcx",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 7
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 8,
                    "endIndex": 12
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "submitTxnWithBlock"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarTestHelper#waitUntil:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "waitUntil(time: "
                },
                {
                  "kind": "Reference",
                  "text": "Date",
                  "canonicalReference": "!Date:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "time",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "waitUntil"
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarTestHelper#wallet:member",
              "docComment": "/**\n * Gets the current actor wallet\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get wallet(): "
                },
                {
                  "kind": "Reference",
                  "text": "emulatedWallet",
                  "canonicalReference": "@donecollectively/stellar-contracts!~SimpleWallet_stellar:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "wallet",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            }
          ],
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext:class",
          "docComment": "/**\n * Transaction-building context for Stellar Contract transactions\n *\n * @remarks\n *\n * Uses same essential facade as Helios Tx.\n *\n * Adds a transaction-state container with strong typing of its contents, enabling transaction-building code to use type-sensitive auto-complete and allowing Stellar Contracts library code to require transaction contexts having known states.\n *\n * Retains reflection capabilities to allow utxo-finding utilities to exclude utxo's already included in the contract.\n *\n * @typeParam S - type of the context's `state` prop\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class StellarTxnContext<S extends "
            },
            {
              "kind": "Reference",
              "text": "anyState",
              "canonicalReference": "@donecollectively/stellar-contracts!anyState:interface"
            },
            {
              "kind": "Content",
              "text": " = "
            },
            {
              "kind": "Reference",
              "text": "anyState",
              "canonicalReference": "@donecollectively/stellar-contracts!anyState:interface"
            },
            {
              "kind": "Content",
              "text": "> "
            }
          ],
          "fileUrlPath": "src/StellarTxnContext.ts",
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "S",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              }
            }
          ],
          "isAbstract": false,
          "name": "StellarTxnContext",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext#_builtTx:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "_builtTx?: "
                },
                {
                  "kind": "Reference",
                  "text": "Tx",
                  "canonicalReference": "@helios-lang/ledger!Tx:type"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Tx",
                  "canonicalReference": "@helios-lang/ledger!Tx:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "_builtTx",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 7
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext#_txnTime:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "_txnTime?: "
                },
                {
                  "kind": "Reference",
                  "text": "Date",
                  "canonicalReference": "!Date:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "_txnTime",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Constructor",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `StellarTxnContext` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(setup: "
                },
                {
                  "kind": "Reference",
                  "text": "SetupDetails",
                  "canonicalReference": "@donecollectively/stellar-contracts!~SetupDetails:type"
                },
                {
                  "kind": "Content",
                  "text": ", state?: "
                },
                {
                  "kind": "Reference",
                  "text": "Partial",
                  "canonicalReference": "!Partial:type"
                },
                {
                  "kind": "Content",
                  "text": "<S>"
                },
                {
                  "kind": "Content",
                  "text": ", parentTcx?: "
                },
                {
                  "kind": "Reference",
                  "text": "StellarTxnContext",
                  "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext:class"
                },
                {
                  "kind": "Content",
                  "text": "<any>"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "setup",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "state",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 5
                  },
                  "isOptional": true
                },
                {
                  "parameterName": "parentTcx",
                  "parameterTypeTokenRange": {
                    "startIndex": 6,
                    "endIndex": 8
                  },
                  "isOptional": true
                }
              ]
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext#actorContext:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get actorContext(): "
                },
                {
                  "kind": "Reference",
                  "text": "ActorContext",
                  "canonicalReference": "@donecollectively/stellar-contracts!~ActorContext:type"
                },
                {
                  "kind": "Content",
                  "text": "<any>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "actorContext",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext#actorWallet:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get actorWallet(): "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "actorWallet",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext#addCollateral:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "addCollateral(collateral: "
                },
                {
                  "kind": "Reference",
                  "text": "TxInput",
                  "canonicalReference": "@helios-lang/ledger!TxInput:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "collateral",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "addCollateral"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext#addInput:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "addInput<TCX extends "
                },
                {
                  "kind": "Reference",
                  "text": "StellarTxnContext",
                  "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext:class"
                },
                {
                  "kind": "Content",
                  "text": "<S>"
                },
                {
                  "kind": "Content",
                  "text": ">(this: "
                },
                {
                  "kind": "Content",
                  "text": "TCX"
                },
                {
                  "kind": "Content",
                  "text": ", input: "
                },
                {
                  "kind": "Reference",
                  "text": "TxInput",
                  "canonicalReference": "@helios-lang/ledger!TxInput:type"
                },
                {
                  "kind": "Content",
                  "text": ", r?: "
                },
                {
                  "kind": "Reference",
                  "text": "isActivity",
                  "canonicalReference": "@donecollectively/stellar-contracts!isActivity:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "TCX"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "TCX",
                  "constraintTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 10,
                "endIndex": 11
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "this",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "input",
                  "parameterTypeTokenRange": {
                    "startIndex": 6,
                    "endIndex": 7
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "r",
                  "parameterTypeTokenRange": {
                    "startIndex": 8,
                    "endIndex": 9
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "addInput"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext#addOutput:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "addOutput<TCX extends "
                },
                {
                  "kind": "Reference",
                  "text": "StellarTxnContext",
                  "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext:class"
                },
                {
                  "kind": "Content",
                  "text": "<S>"
                },
                {
                  "kind": "Content",
                  "text": ">(this: "
                },
                {
                  "kind": "Content",
                  "text": "TCX"
                },
                {
                  "kind": "Content",
                  "text": ", output: "
                },
                {
                  "kind": "Reference",
                  "text": "TxOutput",
                  "canonicalReference": "@helios-lang/ledger!TxOutput:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "TCX"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "TCX",
                  "constraintTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 8,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "this",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "output",
                  "parameterTypeTokenRange": {
                    "startIndex": 6,
                    "endIndex": 7
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "addOutput"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext#addRefInput:member(1)",
              "docComment": "/**\n * adds a reference input to the transaction context\n *\n * @remarks\n *\n * idempotent version of helios addRefInput()\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "addRefInput<TCX extends "
                },
                {
                  "kind": "Reference",
                  "text": "StellarTxnContext",
                  "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext:class"
                },
                {
                  "kind": "Content",
                  "text": "<S>"
                },
                {
                  "kind": "Content",
                  "text": ">(this: "
                },
                {
                  "kind": "Content",
                  "text": "TCX"
                },
                {
                  "kind": "Content",
                  "text": ", ...inputArgs: "
                },
                {
                  "kind": "Reference",
                  "text": "addRefInputArgs",
                  "canonicalReference": "@donecollectively/stellar-contracts!~addRefInputArgs:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "TCX"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "TCX",
                  "constraintTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 8,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "this",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "inputArgs",
                  "parameterTypeTokenRange": {
                    "startIndex": 6,
                    "endIndex": 7
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "addRefInput"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext#addRefInputs:member(1)",
              "docComment": "/**\n * @deprecated\n *\n * - use addRefInput() instead.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "addRefInputs<TCX extends "
                },
                {
                  "kind": "Reference",
                  "text": "StellarTxnContext",
                  "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext:class"
                },
                {
                  "kind": "Content",
                  "text": "<S>"
                },
                {
                  "kind": "Content",
                  "text": ">(this: "
                },
                {
                  "kind": "Content",
                  "text": "TCX"
                },
                {
                  "kind": "Content",
                  "text": ", ...args: "
                },
                {
                  "kind": "Reference",
                  "text": "addRefInputArgs",
                  "canonicalReference": "@donecollectively/stellar-contracts!~addRefInputArgs:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "TCX",
                  "constraintTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 8,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "this",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "args",
                  "parameterTypeTokenRange": {
                    "startIndex": 6,
                    "endIndex": 7
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "addRefInputs"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext#addScript:member(1)",
              "docComment": "/**\n * To add a script to the transaction context, use `attachScript`\n *\n * @deprecated\n *\n * - invalid method name; use `addScriptProgram()` or capo's `txnAttachScriptOrRefScript()` method\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "addScript(): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "addScript"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext#addScriptProgram:member(1)",
              "docComment": "/**\n * Adds a UPLC program to the transaction context, increasing the transaction size.\n *\n * @remarks\n *\n * Use the Capo's `txnAttachScriptOrRefScript()` method to use a referenceScript when available. That method uses a fallback approach adding the script to the transaction if needed.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "addScriptProgram(...args: "
                },
                {
                  "kind": "Reference",
                  "text": "Parameters",
                  "canonicalReference": "!Parameters:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "TxBuilder",
                  "canonicalReference": "@helios-lang/tx-utils!TxBuilder:type"
                },
                {
                  "kind": "Content",
                  "text": "[\"attachUplcProgram\"]>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "args",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 5
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "addScriptProgram"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext#addSignature:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "addSignature(wallet: "
                },
                {
                  "kind": "Reference",
                  "text": "Wallet",
                  "canonicalReference": "@helios-lang/tx-utils!Wallet:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<void>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "wallet",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "addSignature"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext#addState:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "addState<TCX extends "
                },
                {
                  "kind": "Reference",
                  "text": "StellarTxnContext",
                  "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext:class"
                },
                {
                  "kind": "Content",
                  "text": ", K extends "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", V>(this: "
                },
                {
                  "kind": "Content",
                  "text": "TCX"
                },
                {
                  "kind": "Content",
                  "text": ", key: "
                },
                {
                  "kind": "Content",
                  "text": "K"
                },
                {
                  "kind": "Content",
                  "text": ", value: "
                },
                {
                  "kind": "Content",
                  "text": "V"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "StellarTxnContext",
                  "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext:class"
                },
                {
                  "kind": "Content",
                  "text": "<{\n        [keyName in K]: V;\n    } & "
                },
                {
                  "kind": "Reference",
                  "text": "anyState",
                  "canonicalReference": "@donecollectively/stellar-contracts!anyState:interface"
                },
                {
                  "kind": "Content",
                  "text": "> & TCX"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "TCX",
                  "constraintTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "typeParameterName": "K",
                  "constraintTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "typeParameterName": "V",
                  "constraintTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 11,
                "endIndex": 15
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "this",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "key",
                  "parameterTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 8
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "value",
                  "parameterTypeTokenRange": {
                    "startIndex": 9,
                    "endIndex": 10
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "addState"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext#addUut:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "addUut<T extends "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", TCX extends "
                },
                {
                  "kind": "Reference",
                  "text": "StellarTxnContext",
                  "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext:class"
                },
                {
                  "kind": "Content",
                  "text": ">(this: "
                },
                {
                  "kind": "Content",
                  "text": "TCX"
                },
                {
                  "kind": "Content",
                  "text": ", uutName: "
                },
                {
                  "kind": "Reference",
                  "text": "UutName",
                  "canonicalReference": "@donecollectively/stellar-contracts!UutName:class"
                },
                {
                  "kind": "Content",
                  "text": ", ...names: "
                },
                {
                  "kind": "Content",
                  "text": "T[]"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "hasUutContext",
                  "canonicalReference": "@donecollectively/stellar-contracts!hasUutContext:type"
                },
                {
                  "kind": "Content",
                  "text": "<T> & TCX"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "T",
                  "constraintTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "typeParameterName": "TCX",
                  "constraintTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 11,
                "endIndex": 13
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "this",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "uutName",
                  "parameterTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 8
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "names",
                  "parameterTypeTokenRange": {
                    "startIndex": 9,
                    "endIndex": 10
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "addUut"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext#assertNumber:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "assertNumber(obj: "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": ", msg?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "obj",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "msg",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "assertNumber"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext#attachScript:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "attachScript(...args: "
                },
                {
                  "kind": "Reference",
                  "text": "Parameters",
                  "canonicalReference": "!Parameters:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "TxBuilder",
                  "canonicalReference": "@helios-lang/tx-utils!TxBuilder:type"
                },
                {
                  "kind": "Content",
                  "text": "[\"attachUplcProgram\"]>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "args",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 5
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "attachScript"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext#build:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "build(this: "
                },
                {
                  "kind": "Reference",
                  "text": "StellarTxnContext",
                  "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext:class"
                },
                {
                  "kind": "Content",
                  "text": "<any>"
                },
                {
                  "kind": "Content",
                  "text": ", { signers, addlTxInfo, beforeValidate, }?: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        signers?: "
                },
                {
                  "kind": "Reference",
                  "text": "Address",
                  "canonicalReference": "@helios-lang/ledger!Address:type"
                },
                {
                  "kind": "Content",
                  "text": "[];\n        addlTxInfo?: "
                },
                {
                  "kind": "Reference",
                  "text": "Pick",
                  "canonicalReference": "!Pick:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "TxDescription",
                  "canonicalReference": "@donecollectively/stellar-contracts!TxDescription:type"
                },
                {
                  "kind": "Content",
                  "text": "<any>, \"description\">;\n        beforeValidate?: (tx: "
                },
                {
                  "kind": "Reference",
                  "text": "Tx",
                  "canonicalReference": "@helios-lang/ledger!Tx:type"
                },
                {
                  "kind": "Content",
                  "text": ") => "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<any> | any;\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<{\n        tx: "
                },
                {
                  "kind": "Reference",
                  "text": "Tx",
                  "canonicalReference": "@helios-lang/ledger!Tx:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        willSign: "
                },
                {
                  "kind": "Reference",
                  "text": "PubKeyHash",
                  "canonicalReference": "@helios-lang/ledger!PubKeyHash:type"
                },
                {
                  "kind": "Content",
                  "text": "[];\n        walletMustSign: boolean;\n        wallet: "
                },
                {
                  "kind": "Reference",
                  "text": "Wallet",
                  "canonicalReference": "@helios-lang/tx-utils!Wallet:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        wHelper: "
                },
                {
                  "kind": "Reference",
                  "text": "WalletHelper",
                  "canonicalReference": "@helios-lang/tx-utils!WalletHelper:type"
                },
                {
                  "kind": "Content",
                  "text": "<any>;\n        costs: {\n            total: "
                },
                {
                  "kind": "Reference",
                  "text": "Cost",
                  "canonicalReference": "@helios-lang/uplc!Cost:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n            [key: string]: "
                },
                {
                  "kind": "Reference",
                  "text": "Cost",
                  "canonicalReference": "@helios-lang/uplc!Cost:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        };\n    }>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 16,
                "endIndex": 30
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "this",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "{ signers, addlTxInfo, beforeValidate, }",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 15
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "build"
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext#builtTx:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get builtTx(): "
                },
                {
                  "kind": "Reference",
                  "text": "Tx",
                  "canonicalReference": "@helios-lang/ledger!Tx:type"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Tx",
                  "canonicalReference": "@helios-lang/ledger!Tx:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "builtTx",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 7
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext#childReservedUtxos:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "childReservedUtxos: "
                },
                {
                  "kind": "Reference",
                  "text": "TxInput",
                  "canonicalReference": "@helios-lang/ledger!TxInput:type"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "childReservedUtxos",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext#collateral:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "collateral?: "
                },
                {
                  "kind": "Reference",
                  "text": "TxInput",
                  "canonicalReference": "@helios-lang/ledger!TxInput:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "collateral",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext#currentSlot:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get currentSlot(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "currentSlot",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext#dump:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "dump(tx?: "
                },
                {
                  "kind": "Reference",
                  "text": "Tx",
                  "canonicalReference": "@helios-lang/ledger!Tx:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "tx",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "dump"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext#dump:member(2)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "dump(): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<string>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 2,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "dump"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext#emitCostDetails:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "emitCostDetails(tx: "
                },
                {
                  "kind": "Reference",
                  "text": "Tx",
                  "canonicalReference": "@helios-lang/ledger!Tx:type"
                },
                {
                  "kind": "Content",
                  "text": ", costs: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        total: "
                },
                {
                  "kind": "Reference",
                  "text": "Cost",
                  "canonicalReference": "@helios-lang/uplc!Cost:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        [key: string]: "
                },
                {
                  "kind": "Reference",
                  "text": "Cost",
                  "canonicalReference": "@helios-lang/uplc!Cost:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 9,
                "endIndex": 10
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "tx",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "costs",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 8
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "emitCostDetails"
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext#feeLimit:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "feeLimit?: "
                },
                {
                  "kind": "Content",
                  "text": "bigint"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "feeLimit",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext#findAnySpareUtxos:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "findAnySpareUtxos(): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "TxInput",
                  "canonicalReference": "@helios-lang/ledger!TxInput:type"
                },
                {
                  "kind": "Content",
                  "text": "[] | never>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "findAnySpareUtxos"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext#findChangeAddr:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "findChangeAddr(): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Address",
                  "canonicalReference": "@helios-lang/ledger!Address:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "findChangeAddr"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext#finish:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "finish(): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "finish"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext#flush:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "flush(): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "flush"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext#futureDate:member(1)",
              "docComment": "/**\n * Sets a future date for the transaction to be executed, returning the transaction context. Call this before calling validFor().\n *\n * @remarks\n *\n * Returns the txn context. Throws an error if the transaction already has a txnTime set.\n *\n * This method does not itself set the txn's validity interval. You MUST combine it with a call to validFor(), to set the txn's validity period. The resulting transaction will be valid from the moment set here until the end of the validity period set by validFor().\n *\n * This can be used anytime to construct a transaction valid in the future. This is particularly useful during test scenarios to verify time-sensitive behaviors.\n *\n * In the test environment, the network wil normally be advanced to this date before executing the transaction, unless a different execution time is indicated. Use the test helper's `submitTxnWithBlock(txn, {futureDate})` or `advanceNetworkTimeForTx()` methods, or args to use-case-specific functions that those methods.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "futureDate<TCX extends "
                },
                {
                  "kind": "Reference",
                  "text": "StellarTxnContext",
                  "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext:class"
                },
                {
                  "kind": "Content",
                  "text": "<S>"
                },
                {
                  "kind": "Content",
                  "text": ">(this: "
                },
                {
                  "kind": "Content",
                  "text": "TCX"
                },
                {
                  "kind": "Content",
                  "text": ", date: "
                },
                {
                  "kind": "Reference",
                  "text": "Date",
                  "canonicalReference": "!Date:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "TCX"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "TCX",
                  "constraintTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 8,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "this",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "date",
                  "parameterTypeTokenRange": {
                    "startIndex": 6,
                    "endIndex": 7
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "futureDate"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext#getSeedAttrs:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getSeedAttrs<TCX extends "
                },
                {
                  "kind": "Reference",
                  "text": "hasSeedUtxo",
                  "canonicalReference": "@donecollectively/stellar-contracts!hasSeedUtxo:type"
                },
                {
                  "kind": "Content",
                  "text": ">(this: "
                },
                {
                  "kind": "Content",
                  "text": "TCX"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "SeedAttrs",
                  "canonicalReference": "@donecollectively/stellar-contracts!SeedAttrs:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "TCX",
                  "constraintTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "this",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "getSeedAttrs"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext#getSeedUtxoDetails:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getSeedUtxoDetails(this: "
                },
                {
                  "kind": "Reference",
                  "text": "hasSeedUtxo",
                  "canonicalReference": "@donecollectively/stellar-contracts!hasSeedUtxo:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "SeedAttrs",
                  "canonicalReference": "@donecollectively/stellar-contracts!SeedAttrs:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "this",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "getSeedUtxoDetails"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext#includeAddlTxn:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "includeAddlTxn<TCX extends "
                },
                {
                  "kind": "Reference",
                  "text": "StellarTxnContext",
                  "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext:class"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "anyState",
                  "canonicalReference": "@donecollectively/stellar-contracts!anyState:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ", RETURNS extends "
                },
                {
                  "kind": "Reference",
                  "text": "hasAddlTxns",
                  "canonicalReference": "@donecollectively/stellar-contracts!hasAddlTxns:type"
                },
                {
                  "kind": "Content",
                  "text": "<TCX>"
                },
                {
                  "kind": "Content",
                  "text": " = "
                },
                {
                  "kind": "Content",
                  "text": "TCX extends "
                },
                {
                  "kind": "Reference",
                  "text": "hasAddlTxns",
                  "canonicalReference": "@donecollectively/stellar-contracts!hasAddlTxns:type"
                },
                {
                  "kind": "Content",
                  "text": "<any> ? TCX : "
                },
                {
                  "kind": "Reference",
                  "text": "hasAddlTxns",
                  "canonicalReference": "@donecollectively/stellar-contracts!hasAddlTxns:type"
                },
                {
                  "kind": "Content",
                  "text": "<TCX>"
                },
                {
                  "kind": "Content",
                  "text": ">(this: "
                },
                {
                  "kind": "Content",
                  "text": "TCX"
                },
                {
                  "kind": "Content",
                  "text": ", txnName: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", txInfo: "
                },
                {
                  "kind": "Reference",
                  "text": "TxDescription",
                  "canonicalReference": "@donecollectively/stellar-contracts!TxDescription:type"
                },
                {
                  "kind": "Content",
                  "text": "<any>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "RETURNS"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "TCX",
                  "constraintTokenRange": {
                    "startIndex": 1,
                    "endIndex": 5
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "typeParameterName": "RETURNS",
                  "constraintTokenRange": {
                    "startIndex": 6,
                    "endIndex": 8
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 9,
                    "endIndex": 14
                  }
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 22,
                "endIndex": 23
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "this",
                  "parameterTypeTokenRange": {
                    "startIndex": 15,
                    "endIndex": 16
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "txnName",
                  "parameterTypeTokenRange": {
                    "startIndex": 17,
                    "endIndex": 18
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "txInfo",
                  "parameterTypeTokenRange": {
                    "startIndex": 19,
                    "endIndex": 21
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "includeAddlTxn"
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext#inputs:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "inputs: "
                },
                {
                  "kind": "Reference",
                  "text": "TxInput",
                  "canonicalReference": "@helios-lang/ledger!TxInput:type"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "inputs",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext#log:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "log(...msgs: "
                },
                {
                  "kind": "Content",
                  "text": "string[]"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "msgs",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "log"
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext#logger:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "logger: "
                },
                {
                  "kind": "Reference",
                  "text": "UplcConsoleLogger",
                  "canonicalReference": "@donecollectively/stellar-contracts!~UplcConsoleLogger:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "logger",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext#mintTokens:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "mintTokens(...args: "
                },
                {
                  "kind": "Reference",
                  "text": "MintTokensParams",
                  "canonicalReference": "@donecollectively/stellar-contracts!~MintTokensParams:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "StellarTxnContext",
                  "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext:class"
                },
                {
                  "kind": "Content",
                  "text": "<S>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "args",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "mintTokens"
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext#neededSigners:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "neededSigners: "
                },
                {
                  "kind": "Reference",
                  "text": "Address",
                  "canonicalReference": "@helios-lang/ledger!Address:type"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "neededSigners",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext#networkParams:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get networkParams(): "
                },
                {
                  "kind": "Reference",
                  "text": "NetworkParams",
                  "canonicalReference": "@helios-lang/ledger!NetworkParams:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "networkParams",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext#outputs:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "outputs: "
                },
                {
                  "kind": "Reference",
                  "text": "TxOutput",
                  "canonicalReference": "@helios-lang/ledger!TxOutput:type"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "outputs",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext#parentTcx:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "parentTcx?: "
                },
                {
                  "kind": "Reference",
                  "text": "StellarTxnContext",
                  "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext:class"
                },
                {
                  "kind": "Content",
                  "text": "<any>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "parentTcx",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext#reservedUtxos:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "reservedUtxos(): "
                },
                {
                  "kind": "Reference",
                  "text": "TxInput",
                  "canonicalReference": "@helios-lang/ledger!TxInput:type"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "reservedUtxos"
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext#setup:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "setup: "
                },
                {
                  "kind": "Reference",
                  "text": "SetupDetails",
                  "canonicalReference": "@donecollectively/stellar-contracts!~SetupDetails:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "setup",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext#slotToTime:member(1)",
              "docComment": "/**\n * Calculates the time (in milliseconds in 01/01/1970) associated with a given slot number.\n *\n * @param slot - Slot number\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "slotToTime(slot: "
                },
                {
                  "kind": "Content",
                  "text": "bigint"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "bigint"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "slot",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "slotToTime"
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext#state:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "state: "
                },
                {
                  "kind": "Content",
                  "text": "S"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "state",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext#submit:member(1)",
              "docComment": "/**\n * Submits only the current transaction.\n *\n * @remarks\n *\n * To also submit additional transactions, use the `submitAll()` method.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "submit(this: "
                },
                {
                  "kind": "Reference",
                  "text": "StellarTxnContext",
                  "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext:class"
                },
                {
                  "kind": "Content",
                  "text": "<any>"
                },
                {
                  "kind": "Content",
                  "text": ", { signers, addlTxInfo, expectError, beforeError, beforeValidate, }?: "
                },
                {
                  "kind": "Reference",
                  "text": "SubmitOptions",
                  "canonicalReference": "@donecollectively/stellar-contracts!~SubmitOptions:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<import(\"@helios-lang/ledger\")."
                },
                {
                  "kind": "Reference",
                  "text": "TxId",
                  "canonicalReference": "@helios-lang/ledger!TxId:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 10
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "this",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "{ signers, addlTxInfo, expectError, beforeError, beforeValidate, }",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "submit"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext#submitAddlTxns:member(1)",
              "docComment": "/**\n * Executes additional transactions indicated by an existing transaction\n *\n * @remarks\n *\n * During the off-chain txn-creation process, additional transactions may be queued for execution. This method is used to execute those transactions, along with any chained transactions they may trigger.\n *\n * @param tcx - the prior txn context having the additional txns to execute\n *\n * @param callback - an optional async callback that you can use to notify a user, or to log the results of the additional txns\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "submitAddlTxns(this: "
                },
                {
                  "kind": "Reference",
                  "text": "hasAddlTxns",
                  "canonicalReference": "@donecollectively/stellar-contracts!hasAddlTxns:type"
                },
                {
                  "kind": "Content",
                  "text": "<any, any>"
                },
                {
                  "kind": "Content",
                  "text": ", callbacks?: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        beforeSubmit?: "
                },
                {
                  "kind": "Reference",
                  "text": "MultiTxnCallback",
                  "canonicalReference": "@donecollectively/stellar-contracts!MultiTxnCallback:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        onSubmitted?: "
                },
                {
                  "kind": "Reference",
                  "text": "MultiTxnCallback",
                  "canonicalReference": "@donecollectively/stellar-contracts!MultiTxnCallback:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<any[] | undefined>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 10,
                "endIndex": 12
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "this",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "callbacks",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 9
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "submitAddlTxns"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext#submitAll:member(1)",
              "docComment": "/**\n * Submits the current transaction and any additional transactions in the context.\n *\n * @remarks\n *\n * To submit only the current transaction, use the `submit()` method.\n *\n * The signers array can be used to add additional signers to the transaction, and is passed through to the submit() for the current txn only; it is not used for any additional transactions.\n *\n * The beforeSubmit, onSubmitted callbacks are used for each additional transaction.\n *\n * beforeSubmit can be used to notify the user of the transaction about to be submitted, and can also be used to add additional signers to the transaction or otherwise modify it (by returning the modified transaction).\n *\n * onSubmitted can be used to notify the user that the transaction has been submitted, or for logging or any other post-submission processing.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "submitAll(this: "
                },
                {
                  "kind": "Reference",
                  "text": "StellarTxnContext",
                  "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext:class"
                },
                {
                  "kind": "Content",
                  "text": "<any>"
                },
                {
                  "kind": "Content",
                  "text": ", options?: "
                },
                {
                  "kind": "Reference",
                  "text": "SubmitOptions",
                  "canonicalReference": "@donecollectively/stellar-contracts!~SubmitOptions:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<any[] | undefined>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "this",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "submitAll"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext#submitTxnChain:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "submitTxnChain(options?: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        txns?: "
                },
                {
                  "kind": "Reference",
                  "text": "TxDescription",
                  "canonicalReference": "@donecollectively/stellar-contracts!TxDescription:type"
                },
                {
                  "kind": "Content",
                  "text": "<any>[];\n    } & "
                },
                {
                  "kind": "Reference",
                  "text": "SubmitCallbacks",
                  "canonicalReference": "@donecollectively/stellar-contracts!~SubmitCallbacks:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<any[]>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 5
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "submitTxnChain"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext#submitTxns:member(1)",
              "docComment": "/**\n * Submits a list of transactions, without executing any chained/nested txns.\n *\n * @remarks\n *\n * use submitTxnChain() to submit a list of txns with chaining\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "submitTxns(txns: "
                },
                {
                  "kind": "Reference",
                  "text": "TxDescription",
                  "canonicalReference": "@donecollectively/stellar-contracts!TxDescription:type"
                },
                {
                  "kind": "Content",
                  "text": "<any>[]"
                },
                {
                  "kind": "Content",
                  "text": ", callbacks?: "
                },
                {
                  "kind": "Reference",
                  "text": "SubmitCallbacks",
                  "canonicalReference": "@donecollectively/stellar-contracts!~SubmitCallbacks:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<void>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "txns",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "callbacks",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "submitTxns"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext#timeToSlot:member(1)",
              "docComment": "/**\n * Calculates the slot number associated with a given time.\n *\n * @param time - Milliseconds since 1970\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "timeToSlot(time: "
                },
                {
                  "kind": "Content",
                  "text": "bigint"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "bigint"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "time",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "timeToSlot"
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext#txb:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "txb: "
                },
                {
                  "kind": "Reference",
                  "text": "TxBuilder",
                  "canonicalReference": "@helios-lang/tx-utils!TxBuilder:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "txb",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext#txnName:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "txnName: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "txnName",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext#txnTime:member",
              "docComment": "/**\n * Identifies the time at which the current transaction is expected to be executed. Use this attribute in any transaction-building code that sets date/time values for the transaction. Honors any futureDate() setting or uses the current time if none has been set.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get txnTime(): "
                },
                {
                  "kind": "Reference",
                  "text": "Date",
                  "canonicalReference": "!Date:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "txnTime",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext#txRefInputs:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "txRefInputs: "
                },
                {
                  "kind": "Reference",
                  "text": "TxInput",
                  "canonicalReference": "@helios-lang/ledger!TxInput:type"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "txRefInputs",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext#uh:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get uh(): "
                },
                {
                  "kind": "Reference",
                  "text": "UtxoHelper",
                  "canonicalReference": "@donecollectively/stellar-contracts!UtxoHelper:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "uh",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext#utxoNotReserved:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "utxoNotReserved(u: "
                },
                {
                  "kind": "Reference",
                  "text": "TxInput",
                  "canonicalReference": "@helios-lang/ledger!TxInput:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "TxInput",
                  "canonicalReference": "@helios-lang/ledger!TxInput:type"
                },
                {
                  "kind": "Content",
                  "text": " | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "u",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "utxoNotReserved"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext#validFor:member(1)",
              "docComment": "/**\n * Sets an on-chain validity period for the transaction, in miilliseconds\n *\n * @remarks\n *\n * if futureDate() has been set on the transaction, that date will be used as the starting point for the validity period.\n *\n * Returns the transaction context for chaining.\n *\n * @param durationMs - the total validity duration for the transaction. On-chain checks using CapoCtx `now(granularity)` can enforce this duration\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "validFor<TCX extends "
                },
                {
                  "kind": "Reference",
                  "text": "StellarTxnContext",
                  "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext:class"
                },
                {
                  "kind": "Content",
                  "text": "<S>"
                },
                {
                  "kind": "Content",
                  "text": ">(this: "
                },
                {
                  "kind": "Content",
                  "text": "TCX"
                },
                {
                  "kind": "Content",
                  "text": ", durationMs: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "TCX"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "TCX",
                  "constraintTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 8,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "this",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "durationMs",
                  "parameterTypeTokenRange": {
                    "startIndex": 6,
                    "endIndex": 7
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "validFor"
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext#wallet:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get wallet(): "
                },
                {
                  "kind": "Reference",
                  "text": "Wallet",
                  "canonicalReference": "@helios-lang/tx-utils!Wallet:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "wallet",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext#wasModified:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "wasModified(): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "wasModified"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext#withName:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "withName(name: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "name",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "withName"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext#withParent:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "withParent(tcx: "
                },
                {
                  "kind": "Reference",
                  "text": "StellarTxnContext",
                  "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext:class"
                },
                {
                  "kind": "Content",
                  "text": "<any>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "tcx",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "withParent"
            }
          ],
          "implementsTokenRanges": []
        },
        {
          "kind": "Function",
          "canonicalReference": "@donecollectively/stellar-contracts!stringToPrintableString:function(1)",
          "docComment": "/**\n * Presents a string in printable form, even if it contains non-printable characters\n *\n * @remarks\n *\n * Non-printable characters are shown in '‹XX›' format.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function stringToPrintableString(str: "
            },
            {
              "kind": "Content",
              "text": "string | number[]"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/diagnostics.ts",
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "str",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            }
          ],
          "name": "stringToPrintableString"
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@donecollectively/stellar-contracts!TestHelperState:type",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type TestHelperState<SC extends "
            },
            {
              "kind": "Reference",
              "text": "StellarContract",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarContract:class"
            },
            {
              "kind": "Content",
              "text": "<any>"
            },
            {
              "kind": "Content",
              "text": "> = "
            },
            {
              "kind": "Content",
              "text": "{\n    bootstrapped: "
            },
            {
              "kind": "Reference",
              "text": "Boolean",
              "canonicalReference": "!Boolean:interface"
            },
            {
              "kind": "Content",
              "text": ";\n    bootstrappedStrella?: SC;\n    snapshots: "
            },
            {
              "kind": "Reference",
              "text": "Record",
              "canonicalReference": "!Record:type"
            },
            {
              "kind": "Content",
              "text": "<string, "
            },
            {
              "kind": "Reference",
              "text": "NetworkSnapshot",
              "canonicalReference": "@donecollectively/stellar-contracts!NetworkSnapshot:type"
            },
            {
              "kind": "Content",
              "text": ">;\n    previousHelper: "
            },
            {
              "kind": "Reference",
              "text": "StellarTestHelper",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarTestHelper:class"
            },
            {
              "kind": "Content",
              "text": "<any>;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/testing/types.ts",
          "releaseTag": "Public",
          "name": "TestHelperState",
          "typeParameters": [
            {
              "typeParameterName": "SC",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 4,
            "endIndex": 13
          }
        },
        {
          "kind": "Function",
          "canonicalReference": "@donecollectively/stellar-contracts!toFixedReal:function(1)",
          "docComment": "/**\n * Rounds a number to 6 decimal places, with correction for low-value floating-point errors e.g. `(2.999999999) -> 3.0`\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function toFixedReal(n: "
            },
            {
              "kind": "Content",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/utils.ts",
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "n",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            }
          ],
          "name": "toFixedReal"
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@donecollectively/stellar-contracts!tokenNamesOrValuesEntry:type",
          "docComment": "/**\n * tuple expressing a token-name and count\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type tokenNamesOrValuesEntry = "
            },
            {
              "kind": "Content",
              "text": "[string | number[], bigint]"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/HeliosPromotedTypes.ts",
          "releaseTag": "Public",
          "name": "tokenNamesOrValuesEntry",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Function",
          "canonicalReference": "@donecollectively/stellar-contracts!txAsString:function(1)",
          "docComment": "/**\n * Converts a Tx to printable form\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function txAsString(tx: "
            },
            {
              "kind": "Reference",
              "text": "Tx",
              "canonicalReference": "@helios-lang/ledger!Tx:type"
            },
            {
              "kind": "Content",
              "text": ", networkParams?: "
            },
            {
              "kind": "Reference",
              "text": "NetworkParams",
              "canonicalReference": "@helios-lang/ledger!NetworkParams:type"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/diagnostics.ts",
          "returnTypeTokenRange": {
            "startIndex": 5,
            "endIndex": 6
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "tx",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            },
            {
              "parameterName": "networkParams",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": true
            }
          ],
          "name": "txAsString"
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@donecollectively/stellar-contracts!TxDescription:type",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type TxDescription<T extends "
            },
            {
              "kind": "Reference",
              "text": "StellarTxnContext",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext:class"
            },
            {
              "kind": "Content",
              "text": "> = "
            },
            {
              "kind": "Content",
              "text": "{\n    tcx: T | (() => T) | (() => "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<T>);\n    description: string;\n    moreInfo: string;\n    optional: boolean;\n    txName?: string;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/StellarTxnContext.ts",
          "releaseTag": "Public",
          "name": "TxDescription",
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 3,
            "endIndex": 6
          }
        },
        {
          "kind": "Function",
          "canonicalReference": "@donecollectively/stellar-contracts!txidAsString:function(1)",
          "docComment": "/**\n * Converts a TxId to printable form\n *\n * @remarks\n *\n * ... showing only the first 6 and last 4 characters of the hex\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function txidAsString(x: "
            },
            {
              "kind": "Reference",
              "text": "TxId",
              "canonicalReference": "@helios-lang/ledger!TxId:type"
            },
            {
              "kind": "Content",
              "text": ", length?: "
            },
            {
              "kind": "Content",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/diagnostics.ts",
          "returnTypeTokenRange": {
            "startIndex": 5,
            "endIndex": 6
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "x",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            },
            {
              "parameterName": "length",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": true
            }
          ],
          "name": "txidAsString"
        },
        {
          "kind": "Function",
          "canonicalReference": "@donecollectively/stellar-contracts!txInputAsString:function(1)",
          "docComment": "/**\n * Converts a TxInput to printable form\n *\n * @remarks\n *\n * Shortens address and output-id for visual simplicity; doesn't include datum info\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function txInputAsString(x: "
            },
            {
              "kind": "Reference",
              "text": "TxInput",
              "canonicalReference": "@helios-lang/ledger!TxInput:type"
            },
            {
              "kind": "Content",
              "text": ", prefix?: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ", index?: "
            },
            {
              "kind": "Content",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": ", redeemer?: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/diagnostics.ts",
          "returnTypeTokenRange": {
            "startIndex": 9,
            "endIndex": 10
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "x",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            },
            {
              "parameterName": "prefix",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": true
            },
            {
              "parameterName": "index",
              "parameterTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "isOptional": true
            },
            {
              "parameterName": "redeemer",
              "parameterTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "isOptional": true
            }
          ],
          "name": "txInputAsString"
        },
        {
          "kind": "Function",
          "canonicalReference": "@donecollectively/stellar-contracts!txn:function(1)",
          "docComment": "/**\n * Decorates functions that can construct a new transaction context for a specific use-case\n *\n * @remarks\n *\n * function names must follow the mkTxn... convention.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function txn(proto: "
            },
            {
              "kind": "Content",
              "text": "any"
            },
            {
              "kind": "Content",
              "text": ", thingName: "
            },
            {
              "kind": "Content",
              "text": "any"
            },
            {
              "kind": "Content",
              "text": ", descriptor: "
            },
            {
              "kind": "Content",
              "text": "any"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "any"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/StellarContract.ts",
          "returnTypeTokenRange": {
            "startIndex": 7,
            "endIndex": 8
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "proto",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            },
            {
              "parameterName": "thingName",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": false
            },
            {
              "parameterName": "descriptor",
              "parameterTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "isOptional": false
            }
          ],
          "name": "txn"
        },
        {
          "kind": "Function",
          "canonicalReference": "@donecollectively/stellar-contracts!txOutputAsString:function(1)",
          "docComment": "/**\n * Converts a txOutput to printable form\n *\n * @remarks\n *\n * including all its values, and shortened Address.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function txOutputAsString(x: "
            },
            {
              "kind": "Reference",
              "text": "TxOutput",
              "canonicalReference": "@helios-lang/ledger!TxOutput:type"
            },
            {
              "kind": "Content",
              "text": ", prefix?: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ", utxoDCache?: "
            },
            {
              "kind": "Reference",
              "text": "UtxoDisplayCache",
              "canonicalReference": "@donecollectively/stellar-contracts!~UtxoDisplayCache:type"
            },
            {
              "kind": "Content",
              "text": ", txoid?: "
            },
            {
              "kind": "Reference",
              "text": "TxOutputId",
              "canonicalReference": "@helios-lang/ledger!TxOutputId:type"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/diagnostics.ts",
          "returnTypeTokenRange": {
            "startIndex": 9,
            "endIndex": 10
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "x",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            },
            {
              "parameterName": "prefix",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": true
            },
            {
              "parameterName": "utxoDCache",
              "parameterTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "isOptional": true
            },
            {
              "parameterName": "txoid",
              "parameterTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "isOptional": true
            }
          ],
          "name": "txOutputAsString"
        },
        {
          "kind": "Function",
          "canonicalReference": "@donecollectively/stellar-contracts!txOutputIdAsString:function(1)",
          "docComment": "/**\n * Converts a TxOutputId to printable form\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function txOutputIdAsString(x: "
            },
            {
              "kind": "Reference",
              "text": "TxOutputId",
              "canonicalReference": "@helios-lang/ledger!TxOutputId:type"
            },
            {
              "kind": "Content",
              "text": ", length?: "
            },
            {
              "kind": "Content",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/diagnostics.ts",
          "returnTypeTokenRange": {
            "startIndex": 5,
            "endIndex": 6
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "x",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            },
            {
              "parameterName": "length",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": true
            }
          ],
          "name": "txOutputIdAsString"
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@donecollectively/stellar-contracts!updateActivityFunc:type",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type updateActivityFunc<ARGS extends "
            },
            {
              "kind": "Content",
              "text": "[...any]"
            },
            {
              "kind": "Content",
              "text": "> = "
            },
            {
              "kind": "Content",
              "text": "(recId: "
            },
            {
              "kind": "Reference",
              "text": "hasRecId",
              "canonicalReference": "@donecollectively/stellar-contracts!~hasRecId:type"
            },
            {
              "kind": "Content",
              "text": ", ...args: ARGS) => "
            },
            {
              "kind": "Reference",
              "text": "isActivity",
              "canonicalReference": "@donecollectively/stellar-contracts!isActivity:type"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/delegation/DelegatedDataContract.ts",
          "releaseTag": "Public",
          "name": "updateActivityFunc",
          "typeParameters": [
            {
              "typeParameterName": "ARGS",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 3,
            "endIndex": 7
          }
        },
        {
          "kind": "Function",
          "canonicalReference": "@donecollectively/stellar-contracts!uplcDataSerializer:function(1)",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function uplcDataSerializer(key: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ", value: "
            },
            {
              "kind": "Content",
              "text": "any"
            },
            {
              "kind": "Content",
              "text": ", depth?: "
            },
            {
              "kind": "Content",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "any"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/delegation/jsonSerializers.ts",
          "returnTypeTokenRange": {
            "startIndex": 7,
            "endIndex": 8
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "key",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            },
            {
              "parameterName": "value",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": false
            },
            {
              "parameterName": "depth",
              "parameterTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "isOptional": true
            }
          ],
          "name": "uplcDataSerializer"
        },
        {
          "kind": "Class",
          "canonicalReference": "@donecollectively/stellar-contracts!UtxoHelper:class",
          "docComment": "/**\n * A helper class for managing UTXOs in a Stellar contract\n *\n * @remarks\n *\n * Using the provided setup details, this helper provides methods for finding, filtering and selecting UTXOs for inclusion in transactions, and for creating related values and predicate-functions for matching UTXOs.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class UtxoHelper "
            }
          ],
          "fileUrlPath": "src/UtxoHelper.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "UtxoHelper",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@donecollectively/stellar-contracts!UtxoHelper:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `UtxoHelper` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(setup: "
                },
                {
                  "kind": "Reference",
                  "text": "SetupDetails",
                  "canonicalReference": "@donecollectively/stellar-contracts!~SetupDetails:type"
                },
                {
                  "kind": "Content",
                  "text": ", strella?: "
                },
                {
                  "kind": "Reference",
                  "text": "StellarContract",
                  "canonicalReference": "@donecollectively/stellar-contracts!StellarContract:class"
                },
                {
                  "kind": "Content",
                  "text": "<any>"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "setup",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "strella",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 5
                  },
                  "isOptional": true
                }
              ]
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!UtxoHelper#acAuthorityToken:member(1)",
              "docComment": "/**\n * Creates an asset class for the given token name, for the indicated minting policy\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "acAuthorityToken(tokenName: "
                },
                {
                  "kind": "Content",
                  "text": "string | number[]"
                },
                {
                  "kind": "Content",
                  "text": ", mph?: "
                },
                {
                  "kind": "Reference",
                  "text": "MintingPolicyHash",
                  "canonicalReference": "@helios-lang/ledger!MintingPolicyHash:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "AssetClass",
                  "canonicalReference": "@helios-lang/ledger!AssetClass:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "tokenName",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "mph",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "acAuthorityToken"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!UtxoHelper#assetsHasToken:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "assetsHasToken(a: "
                },
                {
                  "kind": "Reference",
                  "text": "Assets",
                  "canonicalReference": "@helios-lang/ledger!Assets:type"
                },
                {
                  "kind": "Content",
                  "text": ", vOrMph: "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "@helios-lang/ledger!Value:type"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "MintingPolicyHash",
                  "canonicalReference": "@helios-lang/ledger!MintingPolicyHash:type"
                },
                {
                  "kind": "Content",
                  "text": ", tokenName?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", quantity?: "
                },
                {
                  "kind": "Content",
                  "text": "bigint"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 11,
                "endIndex": 12
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "a",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "vOrMph",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 6
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "tokenName",
                  "parameterTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 8
                  },
                  "isOptional": true
                },
                {
                  "parameterName": "quantity",
                  "parameterTypeTokenRange": {
                    "startIndex": 9,
                    "endIndex": 10
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "assetsHasToken"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!UtxoHelper#findActorUtxo:member(1)",
              "docComment": "/**\n * Locates a utxo in the current actor's wallet that matches the provided token predicate\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "findActorUtxo(name: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", predicate: "
                },
                {
                  "kind": "Content",
                  "text": "(u: "
                },
                {
                  "kind": "Reference",
                  "text": "TxInput",
                  "canonicalReference": "@helios-lang/ledger!TxInput:type"
                },
                {
                  "kind": "Content",
                  "text": ") => "
                },
                {
                  "kind": "Reference",
                  "text": "TxInput",
                  "canonicalReference": "@helios-lang/ledger!TxInput:type"
                },
                {
                  "kind": "Content",
                  "text": " | undefined"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "TxInput",
                  "canonicalReference": "@helios-lang/ledger!TxInput:type"
                },
                {
                  "kind": "Content",
                  "text": " | undefined>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 9,
                "endIndex": 13
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "name",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "predicate",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 8
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "findActorUtxo"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!UtxoHelper#findSmallestUnusedUtxo:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "findSmallestUnusedUtxo(lovelace: "
                },
                {
                  "kind": "Content",
                  "text": "bigint"
                },
                {
                  "kind": "Content",
                  "text": ", utxos: "
                },
                {
                  "kind": "Reference",
                  "text": "TxInput",
                  "canonicalReference": "@helios-lang/ledger!TxInput:type"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ", tcx?: "
                },
                {
                  "kind": "Reference",
                  "text": "StellarTxnContext",
                  "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "TxInput",
                  "canonicalReference": "@helios-lang/ledger!TxInput:type"
                },
                {
                  "kind": "Content",
                  "text": " | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 8,
                "endIndex": 10
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "lovelace",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "utxos",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 5
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "tcx",
                  "parameterTypeTokenRange": {
                    "startIndex": 6,
                    "endIndex": 7
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "findSmallestUnusedUtxo"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!UtxoHelper#hasToken:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "hasToken<tokenBearer extends "
                },
                {
                  "kind": "Reference",
                  "text": "canHaveToken",
                  "canonicalReference": "@donecollectively/stellar-contracts!~canHaveToken:type"
                },
                {
                  "kind": "Content",
                  "text": ">(something: "
                },
                {
                  "kind": "Content",
                  "text": "tokenBearer"
                },
                {
                  "kind": "Content",
                  "text": ", value: "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "@helios-lang/ledger!Value:type"
                },
                {
                  "kind": "Content",
                  "text": ", tokenName?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", quantity?: "
                },
                {
                  "kind": "Content",
                  "text": "bigint"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "tokenBearer | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "tokenBearer",
                  "constraintTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 11,
                "endIndex": 12
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "something",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "value",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "tokenName",
                  "parameterTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 8
                  },
                  "isOptional": true
                },
                {
                  "parameterName": "quantity",
                  "parameterTypeTokenRange": {
                    "startIndex": 9,
                    "endIndex": 10
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "hasToken"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!UtxoHelper#hasUtxo:member(1)",
              "docComment": "/**\n * Try finding a utxo matching a predicate\n *\n * @remarks\n *\n * Filters the provided list of utxos to find the first one that matches the predicate.\n *\n * Skips any utxos that are already being spent in the provided transaction context. Skips any utxos that are marked as collateral in the wallet.\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "hasUtxo(semanticName: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", predicate: "
                },
                {
                  "kind": "Reference",
                  "text": "utxoPredicate",
                  "canonicalReference": "@donecollectively/stellar-contracts!utxoPredicate:type"
                },
                {
                  "kind": "Content",
                  "text": ", { wallet, exceptInTcx, utxos, required, }: "
                },
                {
                  "kind": "Reference",
                  "text": "UtxoSearchScopeWithUtxos",
                  "canonicalReference": "@donecollectively/stellar-contracts!~UtxoSearchScopeWithUtxos:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "TxInput",
                  "canonicalReference": "@helios-lang/ledger!TxInput:type"
                },
                {
                  "kind": "Content",
                  "text": " | undefined>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 11
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "semanticName",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "predicate",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "{ wallet, exceptInTcx, utxos, required, }",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "hasUtxo"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!UtxoHelper#inputHasToken:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "inputHasToken(i: "
                },
                {
                  "kind": "Reference",
                  "text": "TxInput",
                  "canonicalReference": "@helios-lang/ledger!TxInput:type"
                },
                {
                  "kind": "Content",
                  "text": ", value: "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "@helios-lang/ledger!Value:type"
                },
                {
                  "kind": "Content",
                  "text": ", tokenName?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", quantity?: "
                },
                {
                  "kind": "Content",
                  "text": "bigint"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "false | "
                },
                {
                  "kind": "Reference",
                  "text": "TxInput",
                  "canonicalReference": "@helios-lang/ledger!TxInput:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 9,
                "endIndex": 11
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "i",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "value",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "tokenName",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": true
                },
                {
                  "parameterName": "quantity",
                  "parameterTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 8
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "inputHasToken"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!UtxoHelper#mkAssetValue:member(1)",
              "docComment": "/**\n * @deprecated\n *\n * - use helios `makeValue()` instead\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "mkAssetValue(mph: "
                },
                {
                  "kind": "Reference",
                  "text": "MintingPolicyHash",
                  "canonicalReference": "@helios-lang/ledger!MintingPolicyHash:type"
                },
                {
                  "kind": "Content",
                  "text": ", tokenName: "
                },
                {
                  "kind": "Reference",
                  "text": "BytesLike",
                  "canonicalReference": "@helios-lang/codec-utils!BytesLike:type"
                },
                {
                  "kind": "Content",
                  "text": ", count?: "
                },
                {
                  "kind": "Content",
                  "text": "bigint"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "mph",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "tokenName",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "count",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "mkAssetValue"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!UtxoHelper#mkMinAssetValue:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "mkMinAssetValue(mph: "
                },
                {
                  "kind": "Reference",
                  "text": "MintingPolicyHash",
                  "canonicalReference": "@helios-lang/ledger!MintingPolicyHash:type"
                },
                {
                  "kind": "Content",
                  "text": ", tokenName: "
                },
                {
                  "kind": "Reference",
                  "text": "BytesLike",
                  "canonicalReference": "@helios-lang/codec-utils!BytesLike:type"
                },
                {
                  "kind": "Content",
                  "text": ", count?: "
                },
                {
                  "kind": "Content",
                  "text": "bigint"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "@helios-lang/ledger!Value:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "mph",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "tokenName",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "count",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "mkMinAssetValue"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!UtxoHelper#mkMinTokenValue:member(1)",
              "docComment": "/**\n * Creates a Value having enough lovelace to store the indicated token\n *\n * @remarks\n *\n * This is equivalent to mkTokenValue() with an extra min-utxo calculation\n *\n * @deprecated\n *\n * - Use {@link UtxoHelper.mkMinAssetValue | mkMinAssetValue(mph, tokenName, quantity)} instead.\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "mkMinTokenValue(tokenName: "
                },
                {
                  "kind": "Content",
                  "text": "string | number[]"
                },
                {
                  "kind": "Content",
                  "text": ", quantity: "
                },
                {
                  "kind": "Content",
                  "text": "bigint"
                },
                {
                  "kind": "Content",
                  "text": ", mph: "
                },
                {
                  "kind": "Reference",
                  "text": "MintingPolicyHash",
                  "canonicalReference": "@helios-lang/ledger!MintingPolicyHash:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "@helios-lang/ledger!Value:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "tokenName",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "quantity",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "mph",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "mkMinTokenValue"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!UtxoHelper#mkMinTv:member(1)",
              "docComment": "/**\n * Creates a Value object representing a token with a minimum lovelace amount making it valid for output in a utxo.\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "mkMinTv(mph: "
                },
                {
                  "kind": "Reference",
                  "text": "MintingPolicyHash",
                  "canonicalReference": "@helios-lang/ledger!MintingPolicyHash:type"
                },
                {
                  "kind": "Content",
                  "text": ", tokenName: "
                },
                {
                  "kind": "Content",
                  "text": "string | "
                },
                {
                  "kind": "Reference",
                  "text": "UutName",
                  "canonicalReference": "@donecollectively/stellar-contracts!UutName:class"
                },
                {
                  "kind": "Content",
                  "text": " | number[]"
                },
                {
                  "kind": "Content",
                  "text": ", count?: "
                },
                {
                  "kind": "Content",
                  "text": "bigint"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "@helios-lang/ledger!Value:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 9,
                "endIndex": 10
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "mph",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "tokenName",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 6
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "count",
                  "parameterTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 8
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "mkMinTv"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!UtxoHelper#mkTokenPredicate:member(1)",
              "docComment": "/**\n * Creates a token predicate suitable for mustFindActorUtxo or mustFindMyUtxo\n *\n * @remarks\n *\n * This variant takes just a token-name / quantity, working only on Capo instances, and seeks a token created by the Capo's minting policy.\n *\n * Choose from one of the other variants to make a more specific token predicate.\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "mkTokenPredicate(tokenName: "
                },
                {
                  "kind": "Reference",
                  "text": "UutName",
                  "canonicalReference": "@donecollectively/stellar-contracts!UutName:class"
                },
                {
                  "kind": "Content",
                  "text": " | number[] | string"
                },
                {
                  "kind": "Content",
                  "text": ", quantity?: "
                },
                {
                  "kind": "Content",
                  "text": "bigint"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "tokenPredicate",
                  "canonicalReference": "@donecollectively/stellar-contracts!~tokenPredicate:type"
                },
                {
                  "kind": "Content",
                  "text": "<any>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "tokenName",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "quantity",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "mkTokenPredicate"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!UtxoHelper#mkTokenPredicate:member(2)",
              "docComment": "/**\n * Creates a token predicate suitable for mustFindActorUtxo or mustFindMyUtxo\n *\n * @remarks\n *\n * This variant uses a Value for filtering - each matched item must have the ENTIRE value.\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "mkTokenPredicate(val: "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "@helios-lang/ledger!Value:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "tokenPredicate",
                  "canonicalReference": "@donecollectively/stellar-contracts!~tokenPredicate:type"
                },
                {
                  "kind": "Content",
                  "text": "<any>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 2,
              "parameters": [
                {
                  "parameterName": "val",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "mkTokenPredicate"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!UtxoHelper#mkTokenPredicate:member(3)",
              "docComment": "/**\n * Creates a token predicate suitable for mustFindActorUtxo or mustFindMyUtxo\n *\n * @remarks\n *\n * This variant uses an explicit combination of policy/token-name/quantity\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "mkTokenPredicate(mph: "
                },
                {
                  "kind": "Reference",
                  "text": "MintingPolicyHash",
                  "canonicalReference": "@helios-lang/ledger!MintingPolicyHash:type"
                },
                {
                  "kind": "Content",
                  "text": ", tokenName: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", quantity?: "
                },
                {
                  "kind": "Content",
                  "text": "bigint"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "tokenPredicate",
                  "canonicalReference": "@donecollectively/stellar-contracts!~tokenPredicate:type"
                },
                {
                  "kind": "Content",
                  "text": "<any>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 3,
              "parameters": [
                {
                  "parameterName": "mph",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "tokenName",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "quantity",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "mkTokenPredicate"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!UtxoHelper#mkTokenPredicate:member(4)",
              "docComment": "/**\n * Creates a token predicate suitable for mustFindActorUtxo or mustFindMyUtxo\n *\n * @remarks\n *\n * This variant uses an AssetClass(policy/token-name) and quantity\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "mkTokenPredicate(mphAndTokenName: "
                },
                {
                  "kind": "Reference",
                  "text": "AssetClass",
                  "canonicalReference": "@helios-lang/ledger!AssetClass:type"
                },
                {
                  "kind": "Content",
                  "text": ", quantity?: "
                },
                {
                  "kind": "Content",
                  "text": "bigint"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "tokenPredicate",
                  "canonicalReference": "@donecollectively/stellar-contracts!~tokenPredicate:type"
                },
                {
                  "kind": "Content",
                  "text": "<any>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 4,
              "parameters": [
                {
                  "parameterName": "mphAndTokenName",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "quantity",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "mkTokenPredicate"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!UtxoHelper#mkTokenValue:member(1)",
              "docComment": "/**\n * Creates a Value object representing a token with the given name and quantity\n *\n * @remarks\n *\n * This method doesn't include any lovelace in the Value object. use mkMinAssetValue() to include the minimum lovelace for storing that token in its own utxo\n *\n * @deprecated\n *\n * - Use `helios' makeValue()` instead.\n *\n * @param tokenName - the name of the token\n *\n * @param quantity - the quantity of the token\n *\n * @param mph - the minting policy hash of the token\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "mkTokenValue(tokenName: "
                },
                {
                  "kind": "Content",
                  "text": "string | number[]"
                },
                {
                  "kind": "Content",
                  "text": ", quantity: "
                },
                {
                  "kind": "Content",
                  "text": "bigint"
                },
                {
                  "kind": "Content",
                  "text": ", mph: "
                },
                {
                  "kind": "Reference",
                  "text": "MintingPolicyHash",
                  "canonicalReference": "@helios-lang/ledger!MintingPolicyHash:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "@helios-lang/ledger!Value:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "tokenName",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "quantity",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "mph",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "mkTokenValue"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!UtxoHelper#mkValuePredicate:member(1)",
              "docComment": "/**\n * creates a filtering function, currently for TxInput-filtering only. with the optional tcx argument, utxo's already reserved ... in that transaction context will be skipped.\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "mkValuePredicate(lovelace: "
                },
                {
                  "kind": "Content",
                  "text": "bigint"
                },
                {
                  "kind": "Content",
                  "text": ", tcx?: "
                },
                {
                  "kind": "Reference",
                  "text": "StellarTxnContext",
                  "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "tokenPredicate",
                  "canonicalReference": "@donecollectively/stellar-contracts!~tokenPredicate:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "TxInput",
                  "canonicalReference": "@helios-lang/ledger!TxInput:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "lovelace",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "tcx",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "mkValuePredicate"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!UtxoHelper#mustFindActorUtxo:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "mustFindActorUtxo(name: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", predicate: "
                },
                {
                  "kind": "Content",
                  "text": "(u: "
                },
                {
                  "kind": "Reference",
                  "text": "TxInput",
                  "canonicalReference": "@helios-lang/ledger!TxInput:type"
                },
                {
                  "kind": "Content",
                  "text": ") => "
                },
                {
                  "kind": "Reference",
                  "text": "TxInput",
                  "canonicalReference": "@helios-lang/ledger!TxInput:type"
                },
                {
                  "kind": "Content",
                  "text": " | undefined"
                },
                {
                  "kind": "Content",
                  "text": ", exceptInTcx: "
                },
                {
                  "kind": "Reference",
                  "text": "StellarTxnContext",
                  "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext:class"
                },
                {
                  "kind": "Content",
                  "text": "<any>"
                },
                {
                  "kind": "Content",
                  "text": ", extraErrorHint?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "TxInput",
                  "canonicalReference": "@helios-lang/ledger!TxInput:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 14,
                "endIndex": 18
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "name",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "predicate",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 8
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "exceptInTcx",
                  "parameterTypeTokenRange": {
                    "startIndex": 9,
                    "endIndex": 11
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "extraErrorHint",
                  "parameterTypeTokenRange": {
                    "startIndex": 12,
                    "endIndex": 13
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "mustFindActorUtxo"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!UtxoHelper#mustFindActorUtxo:member(2)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "mustFindActorUtxo(name: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", predicate: "
                },
                {
                  "kind": "Content",
                  "text": "(u: "
                },
                {
                  "kind": "Reference",
                  "text": "TxInput",
                  "canonicalReference": "@helios-lang/ledger!TxInput:type"
                },
                {
                  "kind": "Content",
                  "text": ") => "
                },
                {
                  "kind": "Reference",
                  "text": "TxInput",
                  "canonicalReference": "@helios-lang/ledger!TxInput:type"
                },
                {
                  "kind": "Content",
                  "text": " | undefined"
                },
                {
                  "kind": "Content",
                  "text": ", extraErrorHint?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "TxInput",
                  "canonicalReference": "@helios-lang/ledger!TxInput:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 11,
                "endIndex": 15
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 2,
              "parameters": [
                {
                  "parameterName": "name",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "predicate",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 8
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "extraErrorHint",
                  "parameterTypeTokenRange": {
                    "startIndex": 9,
                    "endIndex": 10
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "mustFindActorUtxo"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!UtxoHelper#mustFindUtxo:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "mustFindUtxo(semanticName: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", predicate: "
                },
                {
                  "kind": "Reference",
                  "text": "utxoPredicate",
                  "canonicalReference": "@donecollectively/stellar-contracts!utxoPredicate:type"
                },
                {
                  "kind": "Content",
                  "text": ", searchScope: "
                },
                {
                  "kind": "Reference",
                  "text": "UtxoSearchScope",
                  "canonicalReference": "@donecollectively/stellar-contracts!~UtxoSearchScope:type"
                },
                {
                  "kind": "Content",
                  "text": ", extraErrorHint?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "TxInput",
                  "canonicalReference": "@helios-lang/ledger!TxInput:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 9,
                "endIndex": 13
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "semanticName",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "predicate",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "searchScope",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "extraErrorHint",
                  "parameterTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 8
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "mustFindUtxo"
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!UtxoHelper#network:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get network(): "
                },
                {
                  "kind": "Content",
                  "text": "import(\"@helios-lang/tx-utils\")."
                },
                {
                  "kind": "Reference",
                  "text": "CardanoClient",
                  "canonicalReference": "@helios-lang/tx-utils!CardanoClient:type"
                },
                {
                  "kind": "Content",
                  "text": " | import(\"@helios-lang/tx-utils\")."
                },
                {
                  "kind": "Reference",
                  "text": "Emulator",
                  "canonicalReference": "@helios-lang/tx-utils!Emulator:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "network",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!UtxoHelper#networkParams:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get networkParams(): "
                },
                {
                  "kind": "Reference",
                  "text": "NetworkParams",
                  "canonicalReference": "@helios-lang/ledger!NetworkParams:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "networkParams",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!UtxoHelper#outputHasToken:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "outputHasToken(o: "
                },
                {
                  "kind": "Reference",
                  "text": "TxOutput",
                  "canonicalReference": "@helios-lang/ledger!TxOutput:type"
                },
                {
                  "kind": "Content",
                  "text": ", vOrMph: "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "@helios-lang/ledger!Value:type"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "MintingPolicyHash",
                  "canonicalReference": "@helios-lang/ledger!MintingPolicyHash:type"
                },
                {
                  "kind": "Content",
                  "text": ", tokenName?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", quantity?: "
                },
                {
                  "kind": "Content",
                  "text": "bigint"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 11,
                "endIndex": 12
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "o",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "vOrMph",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 6
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "tokenName",
                  "parameterTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 8
                  },
                  "isOptional": true
                },
                {
                  "parameterName": "quantity",
                  "parameterTypeTokenRange": {
                    "startIndex": 9,
                    "endIndex": 10
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "outputHasToken"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!UtxoHelper#reduceUtxosCountAdaOnly:member(1)",
              "docComment": "/**\n * accumulates the count of utxos, but only if the utxo is ADA-only. Use in a reduce() call.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "reduceUtxosCountAdaOnly(c: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", { minAdaAmount }: "
                },
                {
                  "kind": "Reference",
                  "text": "utxoSortInfo",
                  "canonicalReference": "@donecollectively/stellar-contracts!~utxoSortInfo:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "c",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "{ minAdaAmount }",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "reduceUtxosCountAdaOnly"
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!UtxoHelper#setup:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "setup: "
                },
                {
                  "kind": "Reference",
                  "text": "SetupDetails",
                  "canonicalReference": "@donecollectively/stellar-contracts!~SetupDetails:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "setup",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!UtxoHelper#strella:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "strella?: "
                },
                {
                  "kind": "Reference",
                  "text": "StellarContract",
                  "canonicalReference": "@donecollectively/stellar-contracts!StellarContract:class"
                },
                {
                  "kind": "Content",
                  "text": "<any>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "strella",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!UtxoHelper#tokenAsValue:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "tokenAsValue(tokenName: "
                },
                {
                  "kind": "Content",
                  "text": "string | number[] | "
                },
                {
                  "kind": "Reference",
                  "text": "UutName",
                  "canonicalReference": "@donecollectively/stellar-contracts!UutName:class"
                },
                {
                  "kind": "Content",
                  "text": ", count?: "
                },
                {
                  "kind": "Content",
                  "text": "bigint"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "@helios-lang/ledger!Value:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "tokenName",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "count",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "tokenAsValue"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!UtxoHelper#totalValue:member(1)",
              "docComment": "/**\n * adds the values of the given TxInputs\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "totalValue(utxos: "
                },
                {
                  "kind": "Reference",
                  "text": "TxInput",
                  "canonicalReference": "@helios-lang/ledger!TxInput:type"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "@helios-lang/ledger!Value:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "utxos",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "totalValue"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!UtxoHelper#toUtxoId:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "toUtxoId(u: "
                },
                {
                  "kind": "Reference",
                  "text": "TxInput",
                  "canonicalReference": "@helios-lang/ledger!TxInput:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "u",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "toUtxoId"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!UtxoHelper#utxoHasToken:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "utxoHasToken(u: "
                },
                {
                  "kind": "Reference",
                  "text": "TxInput",
                  "canonicalReference": "@helios-lang/ledger!TxInput:type"
                },
                {
                  "kind": "Content",
                  "text": ", value: "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "@helios-lang/ledger!Value:type"
                },
                {
                  "kind": "Content",
                  "text": ", tokenName?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", quantity?: "
                },
                {
                  "kind": "Content",
                  "text": "bigint"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "false | "
                },
                {
                  "kind": "Reference",
                  "text": "TxInput",
                  "canonicalReference": "@helios-lang/ledger!TxInput:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 9,
                "endIndex": 11
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "u",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "value",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "tokenName",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": true
                },
                {
                  "parameterName": "quantity",
                  "parameterTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 8
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "utxoHasToken"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!UtxoHelper#utxoSearchError:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "utxoSearchError(semanticName: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", searchScope: "
                },
                {
                  "kind": "Reference",
                  "text": "UtxoSearchScope",
                  "canonicalReference": "@donecollectively/stellar-contracts!~UtxoSearchScope:type"
                },
                {
                  "kind": "Content",
                  "text": ", extraErrorHint?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", walletAddresses?: "
                },
                {
                  "kind": "Reference",
                  "text": "Address",
                  "canonicalReference": "@helios-lang/ledger!Address:type"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "Address",
                  "canonicalReference": "@helios-lang/ledger!Address:type"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 12,
                "endIndex": 13
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "semanticName",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "searchScope",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "extraErrorHint",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": true
                },
                {
                  "parameterName": "walletAddresses",
                  "parameterTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 11
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "utxoSearchError"
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!UtxoHelper#wallet:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get wallet(): "
                },
                {
                  "kind": "Reference",
                  "text": "Wallet",
                  "canonicalReference": "@helios-lang/tx-utils!Wallet:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "wallet",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            }
          ],
          "implementsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@donecollectively/stellar-contracts!utxoPredicate:type",
          "docComment": "/**\n * a function that can filter txInputs for coin-selection\n *\n * @remarks\n *\n * short form: \"returns truthy\" if the input is matchy for the context\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type utxoPredicate = "
            },
            {
              "kind": "Content",
              "text": "(((u: "
            },
            {
              "kind": "Reference",
              "text": "TxInput",
              "canonicalReference": "@helios-lang/ledger!TxInput:type"
            },
            {
              "kind": "Content",
              "text": ") => "
            },
            {
              "kind": "Reference",
              "text": "TxInput",
              "canonicalReference": "@helios-lang/ledger!TxInput:type"
            },
            {
              "kind": "Content",
              "text": " | undefined) | ((u: "
            },
            {
              "kind": "Reference",
              "text": "TxInput",
              "canonicalReference": "@helios-lang/ledger!TxInput:type"
            },
            {
              "kind": "Content",
              "text": ") => boolean) | ((u: "
            },
            {
              "kind": "Reference",
              "text": "TxInput",
              "canonicalReference": "@helios-lang/ledger!TxInput:type"
            },
            {
              "kind": "Content",
              "text": ") => boolean | undefined)) & {\n    predicateValue?: "
            },
            {
              "kind": "Reference",
              "text": "Value",
              "canonicalReference": "@helios-lang/ledger!Value:type"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/UtxoHelper.ts",
          "releaseTag": "Public",
          "name": "utxoPredicate",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 12
          }
        },
        {
          "kind": "Function",
          "canonicalReference": "@donecollectively/stellar-contracts!utxosAsString:function(1)",
          "docComment": "/**\n * Converts a list of UTxOs to printable form\n *\n * @remarks\n *\n * ... using {@link utxoAsString}\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function utxosAsString(utxos: "
            },
            {
              "kind": "Reference",
              "text": "TxInput",
              "canonicalReference": "@helios-lang/ledger!TxInput:type"
            },
            {
              "kind": "Content",
              "text": "[]"
            },
            {
              "kind": "Content",
              "text": ", joiner?: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ", utxoDCache?: "
            },
            {
              "kind": "Reference",
              "text": "UtxoDisplayCache",
              "canonicalReference": "@donecollectively/stellar-contracts!~UtxoDisplayCache:type"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/diagnostics.ts",
          "returnTypeTokenRange": {
            "startIndex": 8,
            "endIndex": 9
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "utxos",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isOptional": false
            },
            {
              "parameterName": "joiner",
              "parameterTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 5
              },
              "isOptional": true
            },
            {
              "parameterName": "utxoDCache",
              "parameterTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "isOptional": true
            }
          ],
          "name": "utxosAsString"
        },
        {
          "kind": "Class",
          "canonicalReference": "@donecollectively/stellar-contracts!UutName:class",
          "docComment": "/**\n * a unique utility token having a unique name\n *\n * @remarks\n *\n * This class contains a general 'purpose' name, mapped to a unique `name`, which is generated using a seed-utxo pattern.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class UutName "
            }
          ],
          "fileUrlPath": "src/delegation/UutName.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "UutName",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@donecollectively/stellar-contracts!UutName:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `UutName` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(purpose: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", fullUutName: "
                },
                {
                  "kind": "Content",
                  "text": "string | number[]"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "purpose",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "fullUutName",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ]
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!UutName#name:member",
              "docComment": "/**\n * the full uniquified name of this UUT\n *\n * @remarks\n *\n * format: `purpose-‹...uniqifier...›`\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get name(): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "name",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!UutName#purpose:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "purpose: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "purpose",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!UutName#toString:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "toString(): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "toString"
            }
          ],
          "implementsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@donecollectively/stellar-contracts!uutPurposeMap:type",
          "docComment": "/**\n * strongly-typed map of purpose-names to Uut objects\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type uutPurposeMap<unionPurpose extends "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": "> = "
            },
            {
              "kind": "Content",
              "text": "{\n    [purpose in unionPurpose]: "
            },
            {
              "kind": "Reference",
              "text": "UutName",
              "canonicalReference": "@donecollectively/stellar-contracts!UutName:class"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/CapoTypes.ts",
          "releaseTag": "Public",
          "name": "uutPurposeMap",
          "typeParameters": [
            {
              "typeParameterName": "unionPurpose",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 3,
            "endIndex": 6
          }
        },
        {
          "kind": "Function",
          "canonicalReference": "@donecollectively/stellar-contracts!valueAsString:function(1)",
          "docComment": "/**\n * Converts a Value to printable form\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function valueAsString(v: "
            },
            {
              "kind": "Reference",
              "text": "Value",
              "canonicalReference": "@helios-lang/ledger!Value:type"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/diagnostics.ts",
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "v",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            }
          ],
          "name": "valueAsString"
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@donecollectively/stellar-contracts!valuesEntry:type",
          "docComment": "/**\n * Tuple of byte-array, count, needed for Value creation on native tokens.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type valuesEntry = "
            },
            {
              "kind": "Content",
              "text": "[number[], bigint]"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/HeliosPromotedTypes.ts",
          "releaseTag": "Public",
          "name": "valuesEntry",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Class",
          "canonicalReference": "@donecollectively/stellar-contracts!WrappedDgDataContract:class",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare abstract class WrappedDgDataContract<T extends "
            },
            {
              "kind": "Reference",
              "text": "AnyDataTemplate",
              "canonicalReference": "@donecollectively/stellar-contracts!AnyDataTemplate:type"
            },
            {
              "kind": "Content",
              "text": "<any, any>"
            },
            {
              "kind": "Content",
              "text": ", TLike extends "
            },
            {
              "kind": "Reference",
              "text": "AnyDataTemplate",
              "canonicalReference": "@donecollectively/stellar-contracts!AnyDataTemplate:type"
            },
            {
              "kind": "Content",
              "text": "<any, any>"
            },
            {
              "kind": "Content",
              "text": ", WRAPPER extends "
            },
            {
              "kind": "Reference",
              "text": "someDataWrapper",
              "canonicalReference": "@donecollectively/stellar-contracts!~someDataWrapper:type"
            },
            {
              "kind": "Content",
              "text": "<TLike>"
            },
            {
              "kind": "Content",
              "text": "> extends "
            },
            {
              "kind": "Reference",
              "text": "DelegatedDataContract",
              "canonicalReference": "@donecollectively/stellar-contracts!DelegatedDataContract:class"
            },
            {
              "kind": "Content",
              "text": "<T, TLike>"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/delegation/WrappedDgDataContract.ts",
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "TLike",
              "constraintTokenRange": {
                "startIndex": 4,
                "endIndex": 6
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "WRAPPER",
              "constraintTokenRange": {
                "startIndex": 7,
                "endIndex": 9
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "isAbstract": true,
          "name": "WrappedDgDataContract",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!WrappedDgDataContract#mkDataWrapper:member(1)",
              "docComment": "/**\n * Transforms the on-chain data structure into a higher-level application-specific class representation. That class should provide an unwrapData() method to get back to the on-chain data.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "abstract mkDataWrapper(d: "
                },
                {
                  "kind": "Content",
                  "text": "TLike"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "WRAPPER"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "d",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": true,
              "name": "mkDataWrapper"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!WrappedDgDataContract#mkDgDatum:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "mkDgDatum(record: "
                },
                {
                  "kind": "Content",
                  "text": "TLike | WRAPPER"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "InlineDatum",
                  "canonicalReference": "@donecollectively/stellar-contracts!InlineDatum:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "record",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "mkDgDatum"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!WrappedDgDataContract#mkTxnCreateRecord:member(1)",
              "docComment": "/**\n * builds a txn creating a record of this type in the data store\n *\n * @remarks\n *\n * The {activity} option can be a {@link SeedActivity} object provided by `this.activity.MintingActivities.$seeded$‹activityName›` accessors/methods, which creates a record id based on the (unique) spend of a seed value.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "mkTxnCreateRecord<TCX extends "
                },
                {
                  "kind": "Reference",
                  "text": "StellarTxnContext",
                  "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext:class"
                },
                {
                  "kind": "Content",
                  "text": ">(options: "
                },
                {
                  "kind": "Reference",
                  "text": "DgDataCreationOptions",
                  "canonicalReference": "@donecollectively/stellar-contracts!~DgDataCreationOptions:type"
                },
                {
                  "kind": "Content",
                  "text": "<TLike> & {\n        wrapped?: WRAPPER;\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<TCX>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "TCX",
                  "constraintTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 5
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "mkTxnCreateRecord"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!WrappedDgDataContract#mkTxnUpdateRecord:member(1)",
              "docComment": "/**\n * builds a txn updating a record of this type in the data store\n *\n * @remarks\n *\n * Use `this.activity.SpendingActivities.*` to access the available types of update offered by the contract.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "mkTxnUpdateRecord<TCX extends "
                },
                {
                  "kind": "Reference",
                  "text": "StellarTxnContext",
                  "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext:class"
                },
                {
                  "kind": "Content",
                  "text": ">(txnName: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", item: "
                },
                {
                  "kind": "Reference",
                  "text": "FoundDatumUtxo",
                  "canonicalReference": "@donecollectively/stellar-contracts!FoundDatumUtxo:type"
                },
                {
                  "kind": "Content",
                  "text": "<T, WRAPPER>"
                },
                {
                  "kind": "Content",
                  "text": ", options: "
                },
                {
                  "kind": "Reference",
                  "text": "DgDataUpdateOptions",
                  "canonicalReference": "@donecollectively/stellar-contracts!~DgDataUpdateOptions:type"
                },
                {
                  "kind": "Content",
                  "text": "<TLike> & {\n        updatedWrapped?: WRAPPER;\n    }"
                },
                {
                  "kind": "Content",
                  "text": ", tcx?: "
                },
                {
                  "kind": "Content",
                  "text": "TCX"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<TCX>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "TCX",
                  "constraintTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 13,
                "endIndex": 15
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "txnName",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "item",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 7
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 8,
                    "endIndex": 10
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "tcx",
                  "parameterTypeTokenRange": {
                    "startIndex": 11,
                    "endIndex": 12
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "mkTxnUpdateRecord"
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!WrappedDgDataContract#usesWrappedData:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "usesWrappedData: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "usesWrappedData",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!WrappedDgDataContract#wrapData:member(1)",
              "docComment": "/**\n * converts a record from the essential on-chain data structure to a higher-level application-specific class representation.\n *\n * @remarks\n *\n * When a wrapper is used, the results of Capo's findDelegatedDataUtxos() method will include the data: property having the unwrapped data, as well as the dataWrapped property with the unwrapped version of the data.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "wrapData(data: "
                },
                {
                  "kind": "Content",
                  "text": "TLike"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "WRAPPER"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "data",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "wrapData"
            }
          ],
          "extendsTokenRange": {
            "startIndex": 10,
            "endIndex": 12
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@donecollectively/stellar-contracts!WrappedDgDataType:type",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type WrappedDgDataType<WDDC extends "
            },
            {
              "kind": "Reference",
              "text": "WrappedDgDataContract",
              "canonicalReference": "@donecollectively/stellar-contracts!WrappedDgDataContract:class"
            },
            {
              "kind": "Content",
              "text": "<any, any, any>"
            },
            {
              "kind": "Content",
              "text": "> = "
            },
            {
              "kind": "Content",
              "text": "WDDC extends "
            },
            {
              "kind": "Reference",
              "text": "WrappedDgDataContract",
              "canonicalReference": "@donecollectively/stellar-contracts!WrappedDgDataContract:class"
            },
            {
              "kind": "Content",
              "text": "<any, any, infer WRAPPER> ? WRAPPER : never"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/delegation/WrappedDgDataContract.ts",
          "releaseTag": "Public",
          "name": "WrappedDgDataType",
          "typeParameters": [
            {
              "typeParameterName": "WDDC",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 4,
            "endIndex": 7
          }
        }
      ]
    }
  ]
}
