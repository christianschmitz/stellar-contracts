{
  "metadata": {
    "toolPackage": "@microsoft/api-extractor",
    "toolVersion": "7.38.2",
    "schemaVersion": 1011,
    "oldestForwardsCompatibleVersion": 1001,
    "tsdocConfig": {
      "$schema": "https://developer.microsoft.com/json-schemas/tsdoc/v0/tsdoc.schema.json",
      "noStandardTags": true,
      "tagDefinitions": [
        {
          "tagName": "@alpha",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@beta",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@defaultValue",
          "syntaxKind": "block"
        },
        {
          "tagName": "@decorator",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@deprecated",
          "syntaxKind": "block"
        },
        {
          "tagName": "@eventProperty",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@example",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@experimental",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@inheritDoc",
          "syntaxKind": "inline"
        },
        {
          "tagName": "@internal",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@label",
          "syntaxKind": "inline"
        },
        {
          "tagName": "@link",
          "syntaxKind": "inline",
          "allowMultiple": true
        },
        {
          "tagName": "@override",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@packageDocumentation",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@param",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@privateRemarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@public",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@readonly",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@remarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@returns",
          "syntaxKind": "block"
        },
        {
          "tagName": "@sealed",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@see",
          "syntaxKind": "block"
        },
        {
          "tagName": "@throws",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@typeParam",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@virtual",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@reqt",
          "syntaxKind": "block"
        }
      ],
      "supportForTags": {
        "@alpha": true,
        "@beta": true,
        "@deprecated": true,
        "@example": true,
        "@inheritDoc": true,
        "@internal": true,
        "@link": true,
        "@param": true,
        "@public": true,
        "@remarks": true,
        "@see": true,
        "@typeParam": true,
        "@reqt": true
      },
      "reportUnsupportedHtmlElements": false
    }
  },
  "kind": "Package",
  "canonicalReference": "@donecollectively/stellar-contracts!",
  "docComment": "",
  "name": "@donecollectively/stellar-contracts",
  "preserveMemberOrder": false,
  "members": [
    {
      "kind": "EntryPoint",
      "canonicalReference": "@donecollectively/stellar-contracts!",
      "name": "",
      "preserveMemberOrder": false,
      "members": [
        {
          "kind": "Variable",
          "canonicalReference": "@donecollectively/stellar-contracts!Activity:var",
          "docComment": "/**\n * Decorators for on-chain activity (redeemer) factory functions\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "Activity: "
            },
            {
              "kind": "Content",
              "text": "{\n    partialTxn(proto: any, thingName: any, descriptor: any): any;\n    redeemer(proto: any, thingName: any, descriptor: any): any;\n    redeemerData(proto: any, thingName: any, descriptor: any): any;\n}"
            }
          ],
          "fileUrlPath": "src/StellarContract.ts",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "Activity",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "@donecollectively/stellar-contracts!ADA:var",
          "docComment": "/**\n * 1 million as bigint. Multiply by this a `Bigint` ADA value to get lovelace\n *\n * @example\n *\n * const three = 3n * ADA const four = Bigint(4) * ADA\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "ADA = "
            },
            {
              "kind": "Content",
              "text": "1000000n"
            }
          ],
          "fileUrlPath": "src/testing/types.ts",
          "initializerTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "ADA",
          "variableTypeTokenRange": {
            "startIndex": 0,
            "endIndex": 0
          }
        },
        {
          "kind": "Function",
          "canonicalReference": "@donecollectively/stellar-contracts!addrAsString:function(1)",
          "docComment": "/**\n * Renders an address in shortened bech32 form, with prefix and part of the bech32 suffix\n *\n * @remarks\n *\n * @param address - address\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function addrAsString(address: "
            },
            {
              "kind": "Reference",
              "text": "Address",
              "canonicalReference": "@hyperionbt/helios!Address:class"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/diagnostics.ts",
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "address",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            }
          ],
          "name": "addrAsString"
        },
        {
          "kind": "Function",
          "canonicalReference": "@donecollectively/stellar-contracts!addTestContext:function(1)",
          "docComment": "/**\n * Adds a test helper class to a `vitest` testing context.\n *\n * @remarks\n *\n * @param context - a vitest context, typically created with StellarTestContext\n *\n * @param TestHelperClass - typically created with DefaultCapoTestHelper\n *\n * @param params - preset configuration for the contract under test\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function addTestContext<SC extends "
            },
            {
              "kind": "Reference",
              "text": "StellarContract",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarContract:class"
            },
            {
              "kind": "Content",
              "text": "<any>"
            },
            {
              "kind": "Content",
              "text": ", P extends "
            },
            {
              "kind": "Reference",
              "text": "configBase",
              "canonicalReference": "@donecollectively/stellar-contracts!paramsBase:type"
            },
            {
              "kind": "Content",
              "text": " = "
            },
            {
              "kind": "Content",
              "text": "SC extends "
            },
            {
              "kind": "Reference",
              "text": "StellarContract",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarContract:class"
            },
            {
              "kind": "Content",
              "text": "<infer PT> ? PT : never"
            },
            {
              "kind": "Content",
              "text": ">(context: "
            },
            {
              "kind": "Reference",
              "text": "StellarTestContext",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarTestContext:interface"
            },
            {
              "kind": "Content",
              "text": "<any, SC>"
            },
            {
              "kind": "Content",
              "text": ", TestHelperClass: "
            },
            {
              "kind": "Reference",
              "text": "stellarTestHelperSubclass",
              "canonicalReference": "@donecollectively/stellar-contracts!~stellarTestHelperSubclass:type"
            },
            {
              "kind": "Content",
              "text": "<SC>"
            },
            {
              "kind": "Content",
              "text": ", params?: "
            },
            {
              "kind": "Content",
              "text": "P"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<void>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/testing/types.ts",
          "returnTypeTokenRange": {
            "startIndex": 18,
            "endIndex": 20
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "context",
              "parameterTypeTokenRange": {
                "startIndex": 10,
                "endIndex": 12
              },
              "isOptional": false
            },
            {
              "parameterName": "TestHelperClass",
              "parameterTypeTokenRange": {
                "startIndex": 13,
                "endIndex": 15
              },
              "isOptional": false
            },
            {
              "parameterName": "params",
              "parameterTypeTokenRange": {
                "startIndex": 16,
                "endIndex": 17
              },
              "isOptional": true
            }
          ],
          "typeParameters": [
            {
              "typeParameterName": "SC",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "P",
              "constraintTokenRange": {
                "startIndex": 4,
                "endIndex": 5
              },
              "defaultTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 9
              }
            }
          ],
          "name": "addTestContext"
        },
        {
          "kind": "Class",
          "canonicalReference": "@donecollectively/stellar-contracts!AnyAddressAuthorityPolicy:class",
          "docComment": "/**\n * Token-based authority\n *\n * @remarks\n *\n * Transferrable authority using a unique token and no smart-contract. Network, Wallet,\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class AnyAddressAuthorityPolicy extends "
            },
            {
              "kind": "Reference",
              "text": "AuthorityPolicy",
              "canonicalReference": "@donecollectively/stellar-contracts!AuthorityPolicy:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/authority/AnyAddressAuthorityPolicy.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "AnyAddressAuthorityPolicy",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!AnyAddressAuthorityPolicy#DelegateAddsAuthorityToken:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "DelegateAddsAuthorityToken<TCX extends "
                },
                {
                  "kind": "Reference",
                  "text": "StellarTxnContext",
                  "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext:class"
                },
                {
                  "kind": "Content",
                  "text": "<any>"
                },
                {
                  "kind": "Content",
                  "text": ">(tcx: "
                },
                {
                  "kind": "Content",
                  "text": "TCX"
                },
                {
                  "kind": "Content",
                  "text": ", fromFoundUtxo: "
                },
                {
                  "kind": "Reference",
                  "text": "TxInput",
                  "canonicalReference": "@hyperionbt/helios!TxInput:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<TCX & "
                },
                {
                  "kind": "Reference",
                  "text": "StellarTxnContext",
                  "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext:class"
                },
                {
                  "kind": "Content",
                  "text": "<any>>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "TCX",
                  "constraintTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 8,
                "endIndex": 12
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "tcx",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "fromFoundUtxo",
                  "parameterTypeTokenRange": {
                    "startIndex": 6,
                    "endIndex": 7
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "DelegateAddsAuthorityToken"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!AnyAddressAuthorityPolicy#DelegateMustFindAuthorityToken:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "DelegateMustFindAuthorityToken(tcx: "
                },
                {
                  "kind": "Reference",
                  "text": "StellarTxnContext",
                  "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext:class"
                },
                {
                  "kind": "Content",
                  "text": "<any>"
                },
                {
                  "kind": "Content",
                  "text": ", label: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "TxInput",
                  "canonicalReference": "@hyperionbt/helios!TxInput:class"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 10
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "tcx",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "label",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "DelegateMustFindAuthorityToken"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!AnyAddressAuthorityPolicy#DelegateRetiresAuthorityToken:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "DelegateRetiresAuthorityToken(tcx: "
                },
                {
                  "kind": "Reference",
                  "text": "StellarTxnContext",
                  "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext:class"
                },
                {
                  "kind": "Content",
                  "text": ", fromFoundUtxo: "
                },
                {
                  "kind": "Reference",
                  "text": "TxInput",
                  "canonicalReference": "@hyperionbt/helios!TxInput:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "StellarTxnContext",
                  "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext:class"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "tcx",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "fromFoundUtxo",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "DelegateRetiresAuthorityToken"
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!AnyAddressAuthorityPolicy#delegateValidatorHash:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get delegateValidatorHash(): "
                },
                {
                  "kind": "Content",
                  "text": "undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "delegateValidatorHash",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!AnyAddressAuthorityPolicy#findActorAuthorityToken:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "findActorAuthorityToken(): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "TxInput",
                  "canonicalReference": "@hyperionbt/helios!TxInput:class"
                },
                {
                  "kind": "Content",
                  "text": " | undefined>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "findActorAuthorityToken"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!AnyAddressAuthorityPolicy#findAuthorityToken:member(1)",
              "docComment": "/**\n * Finds the delegate authority token, normally in the delegate's contract address\n *\n * @remarks\n *\n * The default implementation finds the UTxO having the authority token in the delegate's contract address.\n *\n * It's possible to have a delegate that doesn't have an on-chain contract script. ... in this case, the delegate should use this.{@link StellarDelegate.tvAuthorityToken | tvAuthorityToken()} and a delegate-specific heuristic to locate the needed token. It might consult the addrHint in its `configIn` or another technique for resolution.\n *\n * @param tcx - the transaction context\n *\n * @reqt\n *\n * It MUST resolve and return the UTxO (a TxInput type ready for spending) ... or throw an informative error\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "findAuthorityToken(): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "TxInput",
                  "canonicalReference": "@hyperionbt/helios!TxInput:class"
                },
                {
                  "kind": "Content",
                  "text": " | undefined>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "findAuthorityToken"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!AnyAddressAuthorityPolicy#loadProgramScript:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "loadProgramScript(params: "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "params",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "loadProgramScript"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!AnyAddressAuthorityPolicy#txnReceiveAuthorityToken:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "txnReceiveAuthorityToken<TCX extends "
                },
                {
                  "kind": "Reference",
                  "text": "StellarTxnContext",
                  "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext:class"
                },
                {
                  "kind": "Content",
                  "text": "<any>"
                },
                {
                  "kind": "Content",
                  "text": ">(tcx: "
                },
                {
                  "kind": "Content",
                  "text": "TCX"
                },
                {
                  "kind": "Content",
                  "text": ", tokenValue: "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "@hyperionbt/helios!Value:class"
                },
                {
                  "kind": "Content",
                  "text": ", fromFoundUtxo: "
                },
                {
                  "kind": "Reference",
                  "text": "TxInput",
                  "canonicalReference": "@hyperionbt/helios!TxInput:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<TCX>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "TCX",
                  "constraintTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 10,
                "endIndex": 12
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "tcx",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "tokenValue",
                  "parameterTypeTokenRange": {
                    "startIndex": 6,
                    "endIndex": 7
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "fromFoundUtxo",
                  "parameterTypeTokenRange": {
                    "startIndex": 8,
                    "endIndex": 9
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "txnReceiveAuthorityToken"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!AnyAddressAuthorityPolicy#usingAuthority:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "protected usingAuthority(): "
                },
                {
                  "kind": "Reference",
                  "text": "isActivity",
                  "canonicalReference": "@donecollectively/stellar-contracts!isActivity:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": true,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "usingAuthority"
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@donecollectively/stellar-contracts!anyDatumProps:type",
          "docComment": "/**\n * Properties for Datum structures for on-chain scripts\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type anyDatumProps = "
            },
            {
              "kind": "Reference",
              "text": "Record",
              "canonicalReference": "!Record:type"
            },
            {
              "kind": "Content",
              "text": "<string, any>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/StellarContract.ts",
          "releaseTag": "Public",
          "name": "anyDatumProps",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 3
          }
        },
        {
          "kind": "Function",
          "canonicalReference": "@donecollectively/stellar-contracts!assetsAsString:function(1)",
          "docComment": "/**\n * Converts an array of [ policyId, ‹tokens› ] tuples for on-screen presentation\n *\n * @remarks\n *\n * Presents policy-ids with shortened identifiers, and shows a readable & printable representation of token names even if they're not UTF-8 encoded.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function assetsAsString(a: "
            },
            {
              "kind": "Reference",
              "text": "Assets",
              "canonicalReference": "@hyperionbt/helios!Assets:class"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "any"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/diagnostics.ts",
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "a",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            }
          ],
          "name": "assetsAsString"
        },
        {
          "kind": "Class",
          "canonicalReference": "@donecollectively/stellar-contracts!AuthorityPolicy:class",
          "docComment": "/**\n * Generic class as base for pure authorization\n *\n * @remarks\n *\n * This isn't different from StellarDelegate, but using it as a base class more specific than \"any delegate\" gives useful semantics for Capo's govAuthority role\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare abstract class AuthorityPolicy<T extends "
            },
            {
              "kind": "Reference",
              "text": "capoDelegateConfig",
              "canonicalReference": "@donecollectively/stellar-contracts!capoDelegateConfig:type"
            },
            {
              "kind": "Content",
              "text": " = "
            },
            {
              "kind": "Reference",
              "text": "capoDelegateConfig",
              "canonicalReference": "@donecollectively/stellar-contracts!capoDelegateConfig:type"
            },
            {
              "kind": "Content",
              "text": "> extends "
            },
            {
              "kind": "Reference",
              "text": "StellarDelegate",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarDelegate:class"
            },
            {
              "kind": "Content",
              "text": "<T>"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/authority/AuthorityPolicy.ts",
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              }
            }
          ],
          "isAbstract": true,
          "name": "AuthorityPolicy",
          "preserveMemberOrder": false,
          "members": [],
          "extendsTokenRange": {
            "startIndex": 5,
            "endIndex": 7
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "@donecollectively/stellar-contracts!BasicMintDelegate:class",
          "docComment": "/**\n * Serves a delegated minting-policy role for Capo contracts\n *\n * @remarks\n *\n * shifts detailed minting policy out of the minter and into the delegate.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class BasicMintDelegate extends "
            },
            {
              "kind": "Reference",
              "text": "StellarDelegate",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarDelegate:class"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "MintDelegateArgs",
              "canonicalReference": "@donecollectively/stellar-contracts!~MintDelegateArgs:type"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/minting/BasicMintDelegate.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "BasicMintDelegate",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!BasicMintDelegate#contractSource:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "contractSource(): "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "contractSource"
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!BasicMintDelegate.currentRev:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static currentRev: "
                },
                {
                  "kind": "Content",
                  "text": "bigint"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "currentRev",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": true,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!BasicMintDelegate.defaultParams:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static get defaultParams(): "
                },
                {
                  "kind": "Content",
                  "text": "{\n        rev: bigint;\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "defaultParams",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": true,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!BasicMintDelegate#getContractScriptParams:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getContractScriptParams(config: "
                },
                {
                  "kind": "Reference",
                  "text": "MintDelegateArgs",
                  "canonicalReference": "@donecollectively/stellar-contracts!~MintDelegateArgs:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "configBase",
                  "canonicalReference": "@donecollectively/stellar-contracts!paramsBase:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "config",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "getContractScriptParams"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!BasicMintDelegate#importModules:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "importModules(): "
                },
                {
                  "kind": "Reference",
                  "text": "HeliosModuleSrc",
                  "canonicalReference": "@donecollectively/stellar-contracts!HeliosModuleSrc:type"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "importModules"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!BasicMintDelegate.mkDelegateWithArgs:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static mkDelegateWithArgs(a: "
                },
                {
                  "kind": "Reference",
                  "text": "MintDelegateArgs",
                  "canonicalReference": "@donecollectively/stellar-contracts!~MintDelegateArgs:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "a",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "mkDelegateWithArgs"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!BasicMintDelegate#mkDelegationDatum:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "mkDelegationDatum(txin?: "
                },
                {
                  "kind": "Reference",
                  "text": "TxInput",
                  "canonicalReference": "@hyperionbt/helios!TxInput:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Datum",
                  "canonicalReference": "@hyperionbt/helios!Datum:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "txin",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "mkDelegationDatum"
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!BasicMintDelegate#scriptActivitiesName:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get scriptActivitiesName(): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "scriptActivitiesName",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!BasicMintDelegate#scriptDatumName:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get scriptDatumName(): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "scriptDatumName",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!BasicMintDelegate#specializedCapo:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get specializedCapo(): "
                },
                {
                  "kind": "Reference",
                  "text": "HeliosModuleSrc",
                  "canonicalReference": "@donecollectively/stellar-contracts!HeliosModuleSrc:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "specializedCapo",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!BasicMintDelegate#specializedMintDelegate:member",
              "docComment": "/**\n * specializedMintDelegate module for customizing policies atop the basic mint delegate\n *\n * @remarks\n *\n * The basic mint delegate contains an \"unspecialized\" implementation of this customization, which doesn't have any special restrictions. It reserves a CustomConfig field at position 2 in the IsDelegation datum, allowing customizations to use any struct in that position to express any custom configurations.\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get specializedMintDelegate(): "
                },
                {
                  "kind": "Reference",
                  "text": "HeliosModuleSrc",
                  "canonicalReference": "@donecollectively/stellar-contracts!HeliosModuleSrc:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "specializedMintDelegate",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!BasicMintDelegate#txnCreatingTokenPolicy:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "txnCreatingTokenPolicy(tcx: "
                },
                {
                  "kind": "Reference",
                  "text": "StellarTxnContext",
                  "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext:class"
                },
                {
                  "kind": "Content",
                  "text": ", tokenName: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "StellarTxnContext",
                  "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext:class"
                },
                {
                  "kind": "Content",
                  "text": "<{}>>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "tcx",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "tokenName",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "txnCreatingTokenPolicy"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!BasicMintDelegate#txnReceiveAuthorityToken:member(1)",
              "docComment": "/**\n * Adds a mint-delegate-specific authority token to the txn output\n *\n * @remarks\n *\n * Implements {@link StellarDelegate.txnReceiveAuthorityToken | txnReceiveAuthorityToken()}.\n *\n * Uses {@link BasicMintDelegate.mkDelegationDatum | mkDelegationDatum()} to make the inline Datum for the output.\n *\n * @see\n *\n * {@link StellarDelegate.txnReceiveAuthorityToken | baseline txnReceiveAuthorityToken()'s doc}\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "txnReceiveAuthorityToken<TCX extends "
                },
                {
                  "kind": "Reference",
                  "text": "StellarTxnContext",
                  "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext:class"
                },
                {
                  "kind": "Content",
                  "text": "<any>"
                },
                {
                  "kind": "Content",
                  "text": ">(tcx: "
                },
                {
                  "kind": "Content",
                  "text": "TCX"
                },
                {
                  "kind": "Content",
                  "text": ", tokenValue: "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "@hyperionbt/helios!Value:class"
                },
                {
                  "kind": "Content",
                  "text": ", fromFoundUtxo?: "
                },
                {
                  "kind": "Reference",
                  "text": "TxInput",
                  "canonicalReference": "@hyperionbt/helios!TxInput:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<TCX>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "TCX",
                  "constraintTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 10,
                "endIndex": 12
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "tcx",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "tokenValue",
                  "parameterTypeTokenRange": {
                    "startIndex": 6,
                    "endIndex": 7
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "fromFoundUtxo",
                  "parameterTypeTokenRange": {
                    "startIndex": 8,
                    "endIndex": 9
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "txnReceiveAuthorityToken"
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Function",
          "canonicalReference": "@donecollectively/stellar-contracts!byteArrayAsString:function(1)",
          "docComment": "/**\n * Renders a byteArray in printable form, assuming it contains (mostly) text\n *\n * @remarks\n *\n * Because it uses {@link hexToPrintableString()}, it will render any non-printable characters using ‹hex› notation.\n *\n * @param ba - the byte array\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function byteArrayAsString(ba: "
            },
            {
              "kind": "Reference",
              "text": "ByteArray",
              "canonicalReference": "@hyperionbt/helios!ByteArray:class"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "ByteArrayData",
              "canonicalReference": "@hyperionbt/helios!ByteArrayData:class"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/diagnostics.ts",
          "returnTypeTokenRange": {
            "startIndex": 5,
            "endIndex": 6
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "ba",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              },
              "isOptional": false
            }
          ],
          "name": "byteArrayAsString"
        },
        {
          "kind": "Function",
          "canonicalReference": "@donecollectively/stellar-contracts!byteArrayListAsString:function(1)",
          "docComment": "/**\n * Converts a list of ByteArrays to printable form\n *\n * @remarks\n *\n * ... using {@link hexToPrintableString}\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function byteArrayListAsString(items: "
            },
            {
              "kind": "Reference",
              "text": "ByteArray",
              "canonicalReference": "@hyperionbt/helios!ByteArray:class"
            },
            {
              "kind": "Content",
              "text": "[] | "
            },
            {
              "kind": "Reference",
              "text": "ByteArrayData",
              "canonicalReference": "@hyperionbt/helios!ByteArrayData:class"
            },
            {
              "kind": "Content",
              "text": "[]"
            },
            {
              "kind": "Content",
              "text": ", joiner?: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/diagnostics.ts",
          "returnTypeTokenRange": {
            "startIndex": 8,
            "endIndex": 9
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "items",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              },
              "isOptional": false
            },
            {
              "parameterName": "joiner",
              "parameterTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "isOptional": true
            }
          ],
          "name": "byteArrayListAsString"
        },
        {
          "kind": "Class",
          "canonicalReference": "@donecollectively/stellar-contracts!Capo:class",
          "docComment": "/**\n * Base class for the leader of a set of contracts\n *\n * @remarks\n *\n * A Capo contract provides a central contract address that can act as a treasury or data registry; it can mint tokens using its connected minting-policy, and it can delegate policies to other contract scripts. Subclasses of Capo can use these capabilities in custom ways for strong flexibility.\n *\n * Any Capo contract can (and must) define delegateRoles() to establish collaborating scripts; these are used for separating granular responsbilities for different functional purposes within your (on-chain and off-chain) application; this approach enables delegates to use any one of multiple strategies with different functional logic to serve in any given role, thus providing flexibility and extensibility.\n *\n * The delegation pattern uses UUTs, which are non-fungible / unique utility tokens. See DefaultCapo for more about them.\n *\n * **Capo is a foundational class**; you should consider using DefaultCapo as a starting point, unless its govAuthority role conflicts with your goals.\n *\n * Inherits from: {@link StellarContract}\\<`configType`\\> (is this a redundant doc entry?) .\n *\n * @typeParam minterType - allows setting a different contract (script & off-chain class) for the minting policy\n *\n * @typeParam charterDatumType - specifies schema for datum information held in the Capo's primary or \"charter\" UTXO\n *\n * @typeParam configType - specifies schema for details required to pre-configure the contract suite, or to reproduce it in a specific application instance.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare abstract class Capo<minterType extends "
            },
            {
              "kind": "Reference",
              "text": "MinterBaseMethods",
              "canonicalReference": "@donecollectively/stellar-contracts!~MinterBaseMethods:interface"
            },
            {
              "kind": "Content",
              "text": " & "
            },
            {
              "kind": "Reference",
              "text": "DefaultMinter",
              "canonicalReference": "@donecollectively/stellar-contracts!DefaultMinter:class"
            },
            {
              "kind": "Content",
              "text": " = "
            },
            {
              "kind": "Reference",
              "text": "DefaultMinter",
              "canonicalReference": "@donecollectively/stellar-contracts!DefaultMinter:class"
            },
            {
              "kind": "Content",
              "text": ", charterDatumType extends "
            },
            {
              "kind": "Reference",
              "text": "anyDatumArgs",
              "canonicalReference": "@donecollectively/stellar-contracts!~anyDatumArgs:type"
            },
            {
              "kind": "Content",
              "text": " = "
            },
            {
              "kind": "Reference",
              "text": "anyDatumArgs",
              "canonicalReference": "@donecollectively/stellar-contracts!~anyDatumArgs:type"
            },
            {
              "kind": "Content",
              "text": ", configType extends "
            },
            {
              "kind": "Reference",
              "text": "CapoBaseConfig",
              "canonicalReference": "@donecollectively/stellar-contracts!~CapoBaseConfig:type"
            },
            {
              "kind": "Content",
              "text": " = "
            },
            {
              "kind": "Reference",
              "text": "CapoBaseConfig",
              "canonicalReference": "@donecollectively/stellar-contracts!~CapoBaseConfig:type"
            },
            {
              "kind": "Content",
              "text": "> extends "
            },
            {
              "kind": "Reference",
              "text": "StellarContract",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarContract:class"
            },
            {
              "kind": "Content",
              "text": "<configType>"
            },
            {
              "kind": "Content",
              "text": " implements "
            },
            {
              "kind": "Reference",
              "text": "hasUutCreator",
              "canonicalReference": "@donecollectively/stellar-contracts!~hasUutCreator:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/Capo.ts",
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "minterType",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              },
              "defaultTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              }
            },
            {
              "typeParameterName": "charterDatumType",
              "constraintTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "defaultTypeTokenRange": {
                "startIndex": 9,
                "endIndex": 10
              }
            },
            {
              "typeParameterName": "configType",
              "constraintTokenRange": {
                "startIndex": 11,
                "endIndex": 12
              },
              "defaultTypeTokenRange": {
                "startIndex": 13,
                "endIndex": 14
              }
            }
          ],
          "isAbstract": true,
          "name": "Capo",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!Capo#_verifyingConfigs:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "_verifyingConfigs?: "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<any>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "_verifyingConfigs",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Constructor",
              "canonicalReference": "@donecollectively/stellar-contracts!Capo:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `Capo` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(args: "
                },
                {
                  "kind": "Reference",
                  "text": "StellarConstructorArgs",
                  "canonicalReference": "@donecollectively/stellar-contracts!StellarConstructorArgs:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "CapoBaseConfig",
                  "canonicalReference": "@donecollectively/stellar-contracts!~CapoBaseConfig:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "args",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 5
                  },
                  "isOptional": false
                }
              ]
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!Capo.bootstrapWith:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static bootstrapWith(args: "
                },
                {
                  "kind": "Reference",
                  "text": "StellarConstructorArgs",
                  "canonicalReference": "@donecollectively/stellar-contracts!StellarConstructorArgs:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "CapoBaseConfig",
                  "canonicalReference": "@donecollectively/stellar-contracts!~CapoBaseConfig:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "args",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 5
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "bootstrapWith"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!Capo#capoRequirements:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "capoRequirements(): "
                },
                {
                  "kind": "Content",
                  "text": "import(\"./Requirements.js\")."
                },
                {
                  "kind": "Reference",
                  "text": "ReqtsMap",
                  "canonicalReference": "@donecollectively/stellar-contracts!ReqtsMap:type"
                },
                {
                  "kind": "Content",
                  "text": "<\"is a base class for leader/Capo pattern\" | \"can create unique utility tokens\" | \"supports the Delegation pattern using roles and strategy-variants\" | \"supports well-typed role declarations and strategy-adding\" | \"supports just-in-time strategy-selection using txnCreateDelegateLink()\" | \"given a configured delegate-link, it can create a ready-to-use Stellar subclass with all the right settings\" | \"supports concrete resolution of existing role delegates\" | \"Each role uses a RoleVariants structure which can accept new variants\" | \"provides a Strategy type for binding a contract to a strategy-variant name\">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "capoRequirements"
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!Capo#charterTokenAsValue:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get charterTokenAsValue(): "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "@hyperionbt/helios!Value:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "charterTokenAsValue",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!Capo#charterTokenPredicate:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get charterTokenPredicate(): "
                },
                {
                  "kind": "Content",
                  "text": "((something: any) => any) & {\n        value: "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "@hyperionbt/helios!Value:class"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "charterTokenPredicate",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!Capo#connectDelegateWithLink:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "connectDelegateWithLink<DelegateType extends "
                },
                {
                  "kind": "Reference",
                  "text": "StellarDelegate",
                  "canonicalReference": "@donecollectively/stellar-contracts!StellarDelegate:class"
                },
                {
                  "kind": "Content",
                  "text": "<any>"
                },
                {
                  "kind": "Content",
                  "text": ", configType extends "
                },
                {
                  "kind": "Content",
                  "text": "(DelegateType extends "
                },
                {
                  "kind": "Reference",
                  "text": "StellarContract",
                  "canonicalReference": "@donecollectively/stellar-contracts!StellarContract:class"
                },
                {
                  "kind": "Content",
                  "text": "<infer c> ? c : "
                },
                {
                  "kind": "Reference",
                  "text": "configBase",
                  "canonicalReference": "@donecollectively/stellar-contracts!paramsBase:type"
                },
                {
                  "kind": "Content",
                  "text": ")"
                },
                {
                  "kind": "Content",
                  "text": " = "
                },
                {
                  "kind": "Content",
                  "text": "DelegateType extends "
                },
                {
                  "kind": "Reference",
                  "text": "StellarContract",
                  "canonicalReference": "@donecollectively/stellar-contracts!StellarContract:class"
                },
                {
                  "kind": "Content",
                  "text": "<infer c> ? c : "
                },
                {
                  "kind": "Reference",
                  "text": "configBase",
                  "canonicalReference": "@donecollectively/stellar-contracts!paramsBase:type"
                },
                {
                  "kind": "Content",
                  "text": ">(roleName: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", delegateLink: "
                },
                {
                  "kind": "Reference",
                  "text": "RelativeDelegateLink",
                  "canonicalReference": "@donecollectively/stellar-contracts!RelativeDelegateLink:type"
                },
                {
                  "kind": "Content",
                  "text": "<DelegateType>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<DelegateType>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "DelegateType",
                  "constraintTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "typeParameterName": "configType",
                  "constraintTokenRange": {
                    "startIndex": 4,
                    "endIndex": 9
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 10,
                    "endIndex": 14
                  }
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 20,
                "endIndex": 22
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "roleName",
                  "parameterTypeTokenRange": {
                    "startIndex": 15,
                    "endIndex": 16
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "delegateLink",
                  "parameterTypeTokenRange": {
                    "startIndex": 17,
                    "endIndex": 19
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "connectDelegateWithLink"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!Capo#connectMinter:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "connectMinter(): "
                },
                {
                  "kind": "Content",
                  "text": "minterType"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "connectMinter"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!Capo#connectMintingScript:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "connectMintingScript(params: "
                },
                {
                  "kind": "Reference",
                  "text": "SeedTxnParams",
                  "canonicalReference": "@donecollectively/stellar-contracts!SeedTxnParams:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "minterType"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "params",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "connectMintingScript"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!Capo#contractSource:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "abstract contractSource(): "
                },
                {
                  "kind": "Reference",
                  "text": "HeliosModuleSrc",
                  "canonicalReference": "@donecollectively/stellar-contracts!HeliosModuleSrc:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": true,
              "name": "contractSource"
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!Capo#delegateRoles:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "abstract get delegateRoles(): "
                },
                {
                  "kind": "Reference",
                  "text": "RoleMap",
                  "canonicalReference": "@donecollectively/stellar-contracts!RoleMap:type"
                },
                {
                  "kind": "Content",
                  "text": "<any>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "delegateRoles",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": true
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!Capo#findActorGovAuthority:member(1)",
              "docComment": "/**\n * Tries to locate the Capo charter's gov-authority token in the user's wallet, using its configured delegate\n *\n * @remarks\n *\n * Uses the Capo's govAuthority delegate to locate the gov-authority token, if available the current user's wallet.\n *\n * A delegate whose authority token is located in a smart contract will always return `undefined`.\n *\n * If the authority token is in a user wallet (not the same wallet as currently connected to the Capo contract class), it will return `undefined`.\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "findActorGovAuthority(): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "TxInput",
                  "canonicalReference": "@hyperionbt/helios!TxInput:class"
                },
                {
                  "kind": "Content",
                  "text": " | undefined>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "findActorGovAuthority"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!Capo#findCharterAuthority:member(1)",
              "docComment": "/**\n * REDIRECT: Use txnAddGovAuthorityTokenRef to add the charter-governance authority token to a transaction, or findGovAuthority() or findActorGovAuthority() for locating that txo.\n *\n * @remarks\n *\n * this is a convenience method for redirecting developers to find the right method name for finding or including a gov-authority token in a transaction\n *\n * @deprecated\n *\n * - see other method names, depending on what result you want\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "findCharterAuthority(): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "findCharterAuthority"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!Capo#findGovAuthority:member(1)",
              "docComment": "/**\n * Tries to locate the Capo charter's gov-authority token through its configured delegate\n *\n * @remarks\n *\n * Uses the Capo's govAuthority delegate to locate the gov-authority token, if available. If that token is located in a smart contract, it should always be found (note, however, that the current user may not have the direct permission to spend the token in a transaction).\n *\n * If the token is located in a user wallet, and that user is not the contract's current actor, then the token utxo will not be returned from this method.\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "findGovAuthority(): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "TxInput",
                  "canonicalReference": "@hyperionbt/helios!TxInput:class"
                },
                {
                  "kind": "Content",
                  "text": " | undefined>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "findGovAuthority"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!Capo#findGovDelegate:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "abstract findGovDelegate(): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "AuthorityPolicy",
                  "canonicalReference": "@donecollectively/stellar-contracts!AuthorityPolicy:class"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": true,
              "name": "findGovDelegate"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!Capo#getCapoRev:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getCapoRev(): "
                },
                {
                  "kind": "Content",
                  "text": "bigint"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "getCapoRev"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!Capo#getContractScriptParams:member(1)",
              "docComment": "/**\n * extracts from the input configuration the key details needed to construct/reconstruct the on-chain contract address\n *\n * @remarks\n *\n * extracts the details that are key to parameterizing the Capo / leader's on-chain contract script\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getContractScriptParams(config: "
                },
                {
                  "kind": "Content",
                  "text": "configType"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "configBase",
                  "canonicalReference": "@donecollectively/stellar-contracts!paramsBase:type"
                },
                {
                  "kind": "Content",
                  "text": " & "
                },
                {
                  "kind": "Reference",
                  "text": "Partial",
                  "canonicalReference": "!Partial:type"
                },
                {
                  "kind": "Content",
                  "text": "<configType>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "config",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "getContractScriptParams"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!Capo#getMinterParams:member(1)",
              "docComment": "/**\n * provides minter-targeted params extracted from the input configuration\n *\n * @remarks\n *\n * extracts the seed-txn details that are key to parameterizing the minter contract\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getMinterParams(): "
                },
                {
                  "kind": "Content",
                  "text": "{\n        seedTxn: "
                },
                {
                  "kind": "Reference",
                  "text": "TxId",
                  "canonicalReference": "@hyperionbt/helios!TxId:class"
                },
                {
                  "kind": "Content",
                  "text": ";\n        seedIndex: bigint;\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "getMinterParams"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!Capo#importModules:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "importModules(): "
                },
                {
                  "kind": "Reference",
                  "text": "HeliosModuleSrc",
                  "canonicalReference": "@donecollectively/stellar-contracts!HeliosModuleSrc:type"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "importModules"
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!Capo#isConfigured:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get isConfigured(): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<boolean>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "isConfigured",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!Capo#minter:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "minter?: "
                },
                {
                  "kind": "Content",
                  "text": "minterType"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "minter",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!Capo#minterClass:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get minterClass(): "
                },
                {
                  "kind": "Reference",
                  "text": "stellarSubclass",
                  "canonicalReference": "@donecollectively/stellar-contracts!stellarSubclass:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "DefaultMinter",
                  "canonicalReference": "@donecollectively/stellar-contracts!DefaultMinter:class"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "BasicMinterParams",
                  "canonicalReference": "@donecollectively/stellar-contracts!~BasicMinterParams:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "minterClass",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 7
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!Capo#mintingPolicyHash:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get mintingPolicyHash(): "
                },
                {
                  "kind": "Reference",
                  "text": "MintingPolicyHash",
                  "canonicalReference": "@hyperionbt/helios!MintingPolicyHash:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "mintingPolicyHash",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!Capo#mkDatumCharterToken:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "abstract mkDatumCharterToken(args: "
                },
                {
                  "kind": "Content",
                  "text": "charterDatumType"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "InlineDatum",
                  "canonicalReference": "@donecollectively/stellar-contracts!InlineDatum:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "args",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": true,
              "name": "mkDatumCharterToken"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!Capo#mkDelegatePredicate:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "mkDelegatePredicate(dgtLink: "
                },
                {
                  "kind": "Reference",
                  "text": "RelativeDelegateLink",
                  "canonicalReference": "@donecollectively/stellar-contracts!RelativeDelegateLink:type"
                },
                {
                  "kind": "Content",
                  "text": "<any>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "((something: any) => any) & {\n        value: "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "@hyperionbt/helios!Value:class"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "dgtLink",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "mkDelegatePredicate"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!Capo#mkFullConfig:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "abstract mkFullConfig(baseConfig: "
                },
                {
                  "kind": "Reference",
                  "text": "CapoBaseConfig",
                  "canonicalReference": "@donecollectively/stellar-contracts!~CapoBaseConfig:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "configType"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "baseConfig",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": true,
              "name": "mkFullConfig"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!Capo#mkImpliedDelegationDetails:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "mkImpliedDelegationDetails(uut: "
                },
                {
                  "kind": "Reference",
                  "text": "UutName",
                  "canonicalReference": "@donecollectively/stellar-contracts!UutName:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "DelegationDetail",
                  "canonicalReference": "@donecollectively/stellar-contracts!~DelegationDetail:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "uut",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "mkImpliedDelegationDetails"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!Capo#mkTxnMintCharterToken:member(1)",
              "docComment": "/**\n * Initiates a seeding transaction, creating a new Capo contract of this type\n *\n * @remarks\n *\n * The returned transaction context has `state.bootstrappedConfig` for capturing the details for reproducing the contract's settings and on-chain address.\n *\n * @param charterDatumArgs - initial details for the charter datum\n *\n * @param tcx - any existing transaction context\n *\n * @typeParam TCX - inferred type of a provided transaction context\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "abstract mkTxnMintCharterToken<TCX extends "
                },
                {
                  "kind": "Reference",
                  "text": "StellarTxnContext",
                  "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext:class"
                },
                {
                  "kind": "Content",
                  "text": ">(charterDatumArgs: "
                },
                {
                  "kind": "Reference",
                  "text": "Partial",
                  "canonicalReference": "!Partial:type"
                },
                {
                  "kind": "Content",
                  "text": "<charterDatumType>"
                },
                {
                  "kind": "Content",
                  "text": ", existingTcx?: "
                },
                {
                  "kind": "Content",
                  "text": "TCX"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<never | (TCX & "
                },
                {
                  "kind": "Reference",
                  "text": "hasBootstrappedConfig",
                  "canonicalReference": "@donecollectively/stellar-contracts!hasBootstrappedConfig:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "CapoBaseConfig",
                  "canonicalReference": "@donecollectively/stellar-contracts!~CapoBaseConfig:type"
                },
                {
                  "kind": "Content",
                  "text": " & configType>)>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "TCX",
                  "constraintTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 8,
                "endIndex": 14
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "charterDatumArgs",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 5
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "existingTcx",
                  "parameterTypeTokenRange": {
                    "startIndex": 6,
                    "endIndex": 7
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": true,
              "name": "mkTxnMintCharterToken"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!Capo#mkTxnMintingUuts:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "mkTxnMintingUuts<const purposes extends "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", existingTcx extends "
                },
                {
                  "kind": "Reference",
                  "text": "StellarTxnContext",
                  "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext:class"
                },
                {
                  "kind": "Content",
                  "text": "<any>"
                },
                {
                  "kind": "Content",
                  "text": ", const RM extends "
                },
                {
                  "kind": "Reference",
                  "text": "Record",
                  "canonicalReference": "!Record:type"
                },
                {
                  "kind": "Content",
                  "text": "<ROLES, purposes>"
                },
                {
                  "kind": "Content",
                  "text": ", const ROLES extends "
                },
                {
                  "kind": "Content",
                  "text": "keyof RM & string"
                },
                {
                  "kind": "Content",
                  "text": " = "
                },
                {
                  "kind": "Content",
                  "text": "string & keyof RM"
                },
                {
                  "kind": "Content",
                  "text": ">(initialTcx: "
                },
                {
                  "kind": "Content",
                  "text": "existingTcx"
                },
                {
                  "kind": "Content",
                  "text": ", uutPurposes: "
                },
                {
                  "kind": "Content",
                  "text": "purposes[]"
                },
                {
                  "kind": "Content",
                  "text": ", seedUtxo?: "
                },
                {
                  "kind": "Reference",
                  "text": "TxInput",
                  "canonicalReference": "@hyperionbt/helios!TxInput:class"
                },
                {
                  "kind": "Content",
                  "text": ", roles?: "
                },
                {
                  "kind": "Content",
                  "text": "RM"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "hasUutContext",
                  "canonicalReference": "@donecollectively/stellar-contracts!hasUutContext:type"
                },
                {
                  "kind": "Content",
                  "text": "<ROLES | purposes> & existingTcx>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "purposes",
                  "constraintTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "typeParameterName": "existingTcx",
                  "constraintTokenRange": {
                    "startIndex": 3,
                    "endIndex": 5
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "typeParameterName": "RM",
                  "constraintTokenRange": {
                    "startIndex": 6,
                    "endIndex": 8
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "typeParameterName": "ROLES",
                  "constraintTokenRange": {
                    "startIndex": 9,
                    "endIndex": 10
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 11,
                    "endIndex": 12
                  }
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 21,
                "endIndex": 25
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "initialTcx",
                  "parameterTypeTokenRange": {
                    "startIndex": 13,
                    "endIndex": 14
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "uutPurposes",
                  "parameterTypeTokenRange": {
                    "startIndex": 15,
                    "endIndex": 16
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "seedUtxo",
                  "parameterTypeTokenRange": {
                    "startIndex": 17,
                    "endIndex": 18
                  },
                  "isOptional": true
                },
                {
                  "parameterName": "roles",
                  "parameterTypeTokenRange": {
                    "startIndex": 19,
                    "endIndex": 20
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "mkTxnMintingUuts"
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!Capo#mockMinter:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "mockMinter?: "
                },
                {
                  "kind": "Content",
                  "text": "minterType"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "mockMinter",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!Capo#mph:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get mph(): "
                },
                {
                  "kind": "Reference",
                  "text": "MintingPolicyHash",
                  "canonicalReference": "@hyperionbt/helios!MintingPolicyHash:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "mph",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!Capo#mustFindCharterUtxo:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "mustFindCharterUtxo(): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "TxInput",
                  "canonicalReference": "@hyperionbt/helios!TxInput:class"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "mustFindCharterUtxo"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!Capo#mustGetDelegate:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "mustGetDelegate<T extends "
                },
                {
                  "kind": "Reference",
                  "text": "StellarDelegate",
                  "canonicalReference": "@donecollectively/stellar-contracts!StellarDelegate:class"
                },
                {
                  "kind": "Content",
                  "text": "<any>"
                },
                {
                  "kind": "Content",
                  "text": ">(configuredDelegate: "
                },
                {
                  "kind": "Reference",
                  "text": "PreconfiguredDelegate",
                  "canonicalReference": "@donecollectively/stellar-contracts!~PreconfiguredDelegate:type"
                },
                {
                  "kind": "Content",
                  "text": "<T>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "T"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "T",
                  "constraintTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "configuredDelegate",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 6
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "mustGetDelegate"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!Capo.parseConfig:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static parseConfig(rawJsonConfig: "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "rawJsonConfig",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "parseConfig"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!Capo#relativeLink:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "relativeLink<DT extends "
                },
                {
                  "kind": "Reference",
                  "text": "StellarDelegate",
                  "canonicalReference": "@donecollectively/stellar-contracts!StellarDelegate:class"
                },
                {
                  "kind": "Content",
                  "text": "<any>"
                },
                {
                  "kind": "Content",
                  "text": ">(configured: "
                },
                {
                  "kind": "Reference",
                  "text": "ConfiguredDelegate",
                  "canonicalReference": "@donecollectively/stellar-contracts!ConfiguredDelegate:type"
                },
                {
                  "kind": "Content",
                  "text": "<DT>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "RelativeDelegateLink",
                  "canonicalReference": "@donecollectively/stellar-contracts!RelativeDelegateLink:type"
                },
                {
                  "kind": "Content",
                  "text": "<DT>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "DT",
                  "constraintTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "configured",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 6
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "relativeLink"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!Capo#tokenAsValue:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "tokenAsValue(tokenName: "
                },
                {
                  "kind": "Content",
                  "text": "string | "
                },
                {
                  "kind": "Reference",
                  "text": "UutName",
                  "canonicalReference": "@donecollectively/stellar-contracts!UutName:class"
                },
                {
                  "kind": "Content",
                  "text": ", count?: "
                },
                {
                  "kind": "Content",
                  "text": "bigint"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "@hyperionbt/helios!Value:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "tokenName",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "count",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "tokenAsValue"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!Capo#tvCharter:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "tvCharter(): "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "@hyperionbt/helios!Value:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "tvCharter"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!Capo#tvForDelegate:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "tvForDelegate(dgtLink: "
                },
                {
                  "kind": "Reference",
                  "text": "RelativeDelegateLink",
                  "canonicalReference": "@donecollectively/stellar-contracts!RelativeDelegateLink:type"
                },
                {
                  "kind": "Content",
                  "text": "<any>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "@hyperionbt/helios!Value:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "dgtLink",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "tvForDelegate"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!Capo#txnAddCharterAuthorityTokenRef:member(1)",
              "docComment": "/**\n * REDIRECT: use txnAddGovAuthorityTokenRef() instead\n *\n * @remarks\n *\n * this method was renamed.\n *\n * @deprecated\n *\n * - look for txnAddGovAuthorityTokenRef() instead\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "txnAddCharterAuthorityTokenRef<TCX extends "
                },
                {
                  "kind": "Reference",
                  "text": "StellarTxnContext",
                  "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext:class"
                },
                {
                  "kind": "Content",
                  "text": "<any>"
                },
                {
                  "kind": "Content",
                  "text": ">(): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<void>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "TCX",
                  "constraintTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "txnAddCharterAuthorityTokenRef"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!Capo#txnAddGovAuthority:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "abstract txnAddGovAuthority<TCX extends "
                },
                {
                  "kind": "Reference",
                  "text": "StellarTxnContext",
                  "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext:class"
                },
                {
                  "kind": "Content",
                  "text": "<any>"
                },
                {
                  "kind": "Content",
                  "text": ">(tcx: "
                },
                {
                  "kind": "Content",
                  "text": "TCX"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<TCX & "
                },
                {
                  "kind": "Reference",
                  "text": "StellarTxnContext",
                  "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext:class"
                },
                {
                  "kind": "Content",
                  "text": "<any>>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "TCX",
                  "constraintTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 10
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "tcx",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": true,
              "name": "txnAddGovAuthority"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!Capo#txnAddGovAuthorityTokenRef:member(1)",
              "docComment": "/**\n * adds the charter-token, along with its gov-authority UUT, to a transaction context\n *\n * @remarks\n *\n * Uses txnAddGovAuthority() to locate the govAuthority delegate and txnGrantAuthority() to add its authority token to a transaction.\n *\n * The charter-token is included as a reference input.\n *\n * @param tcx - the transaction context\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "txnAddGovAuthorityTokenRef<TCX extends "
                },
                {
                  "kind": "Reference",
                  "text": "StellarTxnContext",
                  "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext:class"
                },
                {
                  "kind": "Content",
                  "text": "<any>"
                },
                {
                  "kind": "Content",
                  "text": ">(tcx: "
                },
                {
                  "kind": "Content",
                  "text": "TCX"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<TCX & "
                },
                {
                  "kind": "Reference",
                  "text": "StellarTxnContext",
                  "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext:class"
                },
                {
                  "kind": "Content",
                  "text": "<any>>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "TCX",
                  "constraintTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 10
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "tcx",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "txnAddGovAuthorityTokenRef"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!Capo#txnCreateConfiguredDelegate:member(1)",
              "docComment": "/**\n * Returns a complete set of delegate settings, given a delegation role and strategy-selection details\n *\n * @remarks\n *\n * Behaves exactly like (and provides the core implementation of) {@link Capo.txnCreateDelegateLink | txnCreateDelegateLink()}, returning additional `roleName` and `delegateClass`, to conform with the DelegateSettings type.\n *\n * See txnCreateDelegateLink for further details.\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "txnCreateConfiguredDelegate<DT extends "
                },
                {
                  "kind": "Reference",
                  "text": "StellarDelegate",
                  "canonicalReference": "@donecollectively/stellar-contracts!StellarDelegate:class"
                },
                {
                  "kind": "Content",
                  "text": "<any>"
                },
                {
                  "kind": "Content",
                  "text": ", const RN extends "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ">(tcx: "
                },
                {
                  "kind": "Reference",
                  "text": "hasUutContext",
                  "canonicalReference": "@donecollectively/stellar-contracts!hasUutContext:type"
                },
                {
                  "kind": "Content",
                  "text": "<RN>"
                },
                {
                  "kind": "Content",
                  "text": ", roleName: "
                },
                {
                  "kind": "Content",
                  "text": "RN & keyof this[\"delegateRoles\"]"
                },
                {
                  "kind": "Content",
                  "text": ", delegateInfo?: "
                },
                {
                  "kind": "Reference",
                  "text": "MinimalDelegateLink",
                  "canonicalReference": "@donecollectively/stellar-contracts!~MinimalDelegateLink:type"
                },
                {
                  "kind": "Content",
                  "text": "<DT>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "ConfiguredDelegate",
                  "canonicalReference": "@donecollectively/stellar-contracts!ConfiguredDelegate:type"
                },
                {
                  "kind": "Content",
                  "text": "<DT>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "DT",
                  "constraintTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "typeParameterName": "RN",
                  "constraintTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 14,
                "endIndex": 16
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "tcx",
                  "parameterTypeTokenRange": {
                    "startIndex": 6,
                    "endIndex": 8
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "roleName",
                  "parameterTypeTokenRange": {
                    "startIndex": 9,
                    "endIndex": 10
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "delegateInfo",
                  "parameterTypeTokenRange": {
                    "startIndex": 11,
                    "endIndex": 13
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "txnCreateConfiguredDelegate"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!Capo#txnCreateDelegateLink:member(1)",
              "docComment": "/**\n * Creates a new delegate link, given a delegation role and and strategy-selection details\n *\n * @remarks\n *\n * Combines partal and implied configuration settings, validating the resulting configuration.\n *\n * The resulting \"relative\" delegate link can be used directly in a Datum field of type RelativeDelegateLink or can be stored off-chain in any way suitable for your dApp.\n *\n * To get a full DelegateSettings object, use txnCreateDelegateSettings() instead.\n *\n * @param tcx - A transaction-context\n *\n * @param roleName - the role of the delegate, matched with the `delegateRoles()` of `this`\n *\n * @param delegateInfo - partial detail of the delegation, with `strategyName` and any other details required by the particular role. Its delegate type must be matchy with the type indicated by the `roleName`.\n *\n * @reqt\n *\n * throws DelegateConfigNeeded with an `errors` entry ... if there are any problems in validating the net configuration settings.\n *\n * @reqt\n *\n * EXPECTS the `tcx` to be minting a UUT for the delegation, ... whose UutName can be found in `tcx.state.uuts[roleName]`\n *\n * @reqt\n *\n * combines base settings from the selected delegate class's `defaultParams` ... adding the delegateRoles()[roleName] configuration for the selected roleName, ... along with any explicit `config` from the provided `delegateInfo` ... and automatically applies a `uut` setting. ... The later properties in this sequence take precedence.\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "txnCreateDelegateLink<DT extends "
                },
                {
                  "kind": "Reference",
                  "text": "StellarDelegate",
                  "canonicalReference": "@donecollectively/stellar-contracts!StellarDelegate:class"
                },
                {
                  "kind": "Content",
                  "text": ", const RN extends "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ">(tcx: "
                },
                {
                  "kind": "Reference",
                  "text": "hasUutContext",
                  "canonicalReference": "@donecollectively/stellar-contracts!hasUutContext:type"
                },
                {
                  "kind": "Content",
                  "text": "<RN>"
                },
                {
                  "kind": "Content",
                  "text": ", roleName: "
                },
                {
                  "kind": "Content",
                  "text": "RN"
                },
                {
                  "kind": "Content",
                  "text": ", delegateInfo?: "
                },
                {
                  "kind": "Reference",
                  "text": "MinimalDelegateLink",
                  "canonicalReference": "@donecollectively/stellar-contracts!~MinimalDelegateLink:type"
                },
                {
                  "kind": "Content",
                  "text": "<DT>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "RelativeDelegateLink",
                  "canonicalReference": "@donecollectively/stellar-contracts!RelativeDelegateLink:type"
                },
                {
                  "kind": "Content",
                  "text": "<DT>>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "DT",
                  "constraintTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "typeParameterName": "RN",
                  "constraintTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 13,
                "endIndex": 17
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "tcx",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 7
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "roleName",
                  "parameterTypeTokenRange": {
                    "startIndex": 8,
                    "endIndex": 9
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "delegateInfo",
                  "parameterTypeTokenRange": {
                    "startIndex": 10,
                    "endIndex": 12
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "txnCreateDelegateLink"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!Capo#txnKeepCharterToken:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "txnKeepCharterToken(tcx: "
                },
                {
                  "kind": "Reference",
                  "text": "StellarTxnContext",
                  "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext:class"
                },
                {
                  "kind": "Content",
                  "text": "<any>"
                },
                {
                  "kind": "Content",
                  "text": ", datum: "
                },
                {
                  "kind": "Reference",
                  "text": "InlineDatum",
                  "canonicalReference": "@donecollectively/stellar-contracts!InlineDatum:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "StellarTxnContext",
                  "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext:class"
                },
                {
                  "kind": "Content",
                  "text": "<any>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "tcx",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "datum",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "txnKeepCharterToken"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!Capo#txnMustGetSeedUtxo:member(1)",
              "docComment": "/**\n * Finds a sufficient-sized utxo for seeding one or more named tokens\n *\n * @remarks\n *\n * For allocating a charter token (/its minter), one or more UUTs, or other token name(s) to be minted, this function calculates the size of minUtxo needed for all the needed tokens, assuming they'll each be stored in separate utxos. It then finds and returns a UTxO from the current actor's wallet. The utxo is NOT added to the transaction.\n *\n * When the transaction context already has some utxo's being consumed, they're not eligible for selection.\n *\n * If the transaction doesn't store the new tokens in separate utxos, any spare lovelace are returned as change in the transaction.\n *\n * @param tcx - transaction context\n *\n * @param purpose - a descriptive purpose used during utxo-finding in case of problems\n *\n * @param tokenNames - the token names to be seeded.\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "txnMustGetSeedUtxo(tcx: "
                },
                {
                  "kind": "Reference",
                  "text": "StellarTxnContext",
                  "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext:class"
                },
                {
                  "kind": "Content",
                  "text": ", purpose: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", tokenNames: "
                },
                {
                  "kind": "Content",
                  "text": "string[]"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "TxInput",
                  "canonicalReference": "@hyperionbt/helios!TxInput:class"
                },
                {
                  "kind": "Content",
                  "text": " | never>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 11
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "tcx",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "purpose",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "tokenNames",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "txnMustGetSeedUtxo"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!Capo#txnMustUseCharterUtxo:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "txnMustUseCharterUtxo<TCX extends "
                },
                {
                  "kind": "Reference",
                  "text": "StellarTxnContext",
                  "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext:class"
                },
                {
                  "kind": "Content",
                  "text": "<any>"
                },
                {
                  "kind": "Content",
                  "text": ">(tcx: "
                },
                {
                  "kind": "Content",
                  "text": "TCX"
                },
                {
                  "kind": "Content",
                  "text": ", redeemer: "
                },
                {
                  "kind": "Reference",
                  "text": "isActivity",
                  "canonicalReference": "@donecollectively/stellar-contracts!isActivity:type"
                },
                {
                  "kind": "Content",
                  "text": ", newDatum?: "
                },
                {
                  "kind": "Reference",
                  "text": "InlineDatum",
                  "canonicalReference": "@donecollectively/stellar-contracts!InlineDatum:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<TCX>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "TCX",
                  "constraintTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 10,
                "endIndex": 12
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "tcx",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "redeemer",
                  "parameterTypeTokenRange": {
                    "startIndex": 6,
                    "endIndex": 7
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "newDatum",
                  "parameterTypeTokenRange": {
                    "startIndex": 8,
                    "endIndex": 9
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "txnMustUseCharterUtxo"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!Capo#txnMustUseCharterUtxo:member(2)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "txnMustUseCharterUtxo<TCX extends "
                },
                {
                  "kind": "Reference",
                  "text": "StellarTxnContext",
                  "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext:class"
                },
                {
                  "kind": "Content",
                  "text": "<any>"
                },
                {
                  "kind": "Content",
                  "text": ">(tcx: "
                },
                {
                  "kind": "Content",
                  "text": "TCX"
                },
                {
                  "kind": "Content",
                  "text": ", useReferenceInput: "
                },
                {
                  "kind": "Content",
                  "text": "\"refInput\" | true"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<TCX>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "TCX",
                  "constraintTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 8,
                "endIndex": 10
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 2,
              "parameters": [
                {
                  "parameterName": "tcx",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "useReferenceInput",
                  "parameterTypeTokenRange": {
                    "startIndex": 6,
                    "endIndex": 7
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "txnMustUseCharterUtxo"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!Capo#txnUpdateCharterUtxo:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "txnUpdateCharterUtxo(tcx: "
                },
                {
                  "kind": "Reference",
                  "text": "StellarTxnContext",
                  "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext:class"
                },
                {
                  "kind": "Content",
                  "text": ", redeemer: "
                },
                {
                  "kind": "Reference",
                  "text": "isActivity",
                  "canonicalReference": "@donecollectively/stellar-contracts!isActivity:type"
                },
                {
                  "kind": "Content",
                  "text": ", newDatum: "
                },
                {
                  "kind": "Reference",
                  "text": "InlineDatum",
                  "canonicalReference": "@donecollectively/stellar-contracts!InlineDatum:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "StellarTxnContext",
                  "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext:class"
                },
                {
                  "kind": "Content",
                  "text": " | never>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 11
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "tcx",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "redeemer",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "newDatum",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "txnUpdateCharterUtxo"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!Capo#txnWillMintUuts:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "txnWillMintUuts<const purposes extends "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", existingTcx extends "
                },
                {
                  "kind": "Reference",
                  "text": "StellarTxnContext",
                  "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext:class"
                },
                {
                  "kind": "Content",
                  "text": "<any>"
                },
                {
                  "kind": "Content",
                  "text": ", const RM extends "
                },
                {
                  "kind": "Reference",
                  "text": "Record",
                  "canonicalReference": "!Record:type"
                },
                {
                  "kind": "Content",
                  "text": "<ROLES, purposes>"
                },
                {
                  "kind": "Content",
                  "text": ", const ROLES extends "
                },
                {
                  "kind": "Content",
                  "text": "keyof RM & string"
                },
                {
                  "kind": "Content",
                  "text": " = "
                },
                {
                  "kind": "Content",
                  "text": "string & keyof RM"
                },
                {
                  "kind": "Content",
                  "text": ">(initialTcx: "
                },
                {
                  "kind": "Content",
                  "text": "existingTcx"
                },
                {
                  "kind": "Content",
                  "text": ", uutPurposes: "
                },
                {
                  "kind": "Content",
                  "text": "purposes[]"
                },
                {
                  "kind": "Content",
                  "text": ", seedUtxo: "
                },
                {
                  "kind": "Reference",
                  "text": "TxInput",
                  "canonicalReference": "@hyperionbt/helios!TxInput:class"
                },
                {
                  "kind": "Content",
                  "text": ", roles?: "
                },
                {
                  "kind": "Content",
                  "text": "RM"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<existingTcx & "
                },
                {
                  "kind": "Reference",
                  "text": "hasUutContext",
                  "canonicalReference": "@donecollectively/stellar-contracts!hasUutContext:type"
                },
                {
                  "kind": "Content",
                  "text": "<ROLES | purposes>>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "purposes",
                  "constraintTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "typeParameterName": "existingTcx",
                  "constraintTokenRange": {
                    "startIndex": 3,
                    "endIndex": 5
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "typeParameterName": "RM",
                  "constraintTokenRange": {
                    "startIndex": 6,
                    "endIndex": 8
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "typeParameterName": "ROLES",
                  "constraintTokenRange": {
                    "startIndex": 9,
                    "endIndex": 10
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 11,
                    "endIndex": 12
                  }
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 21,
                "endIndex": 25
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "initialTcx",
                  "parameterTypeTokenRange": {
                    "startIndex": 13,
                    "endIndex": 14
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "uutPurposes",
                  "parameterTypeTokenRange": {
                    "startIndex": 15,
                    "endIndex": 16
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "seedUtxo",
                  "parameterTypeTokenRange": {
                    "startIndex": 17,
                    "endIndex": 18
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "roles",
                  "parameterTypeTokenRange": {
                    "startIndex": 19,
                    "endIndex": 20
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "txnWillMintUuts"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!Capo#updatingCharter:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "protected abstract updatingCharter(args: "
                },
                {
                  "kind": "Content",
                  "text": "charterDatumType"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "isActivity",
                  "canonicalReference": "@donecollectively/stellar-contracts!isActivity:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": true,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "args",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": true,
              "name": "updatingCharter"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!Capo#usingAuthority:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "usingAuthority(): "
                },
                {
                  "kind": "Reference",
                  "text": "isActivity",
                  "canonicalReference": "@donecollectively/stellar-contracts!isActivity:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "usingAuthority"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!Capo#uutsValue:member(1)",
              "docComment": "/**\n * returns a value representing the provided UUT(s)\n *\n * @remarks\n *\n * The inputs can be of a few forms - see the overload variants\n *\n * @param uutMap - a set of UUTs, all of which will be represented in the returned value\n *\n * @param tcx - a transaction context, whose `state.uuts` will be processed as in the `uutMap` variant\n *\n * @param uutName - a UutName object representinga single UUT\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "uutsValue(uutMap: "
                },
                {
                  "kind": "Reference",
                  "text": "uutPurposeMap",
                  "canonicalReference": "@donecollectively/stellar-contracts!uutPurposeMap:type"
                },
                {
                  "kind": "Content",
                  "text": "<any>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "@hyperionbt/helios!Value:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "uutMap",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "uutsValue"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!Capo#uutsValue:member(2)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "uutsValue(tcx: "
                },
                {
                  "kind": "Reference",
                  "text": "hasUutContext",
                  "canonicalReference": "@donecollectively/stellar-contracts!hasUutContext:type"
                },
                {
                  "kind": "Content",
                  "text": "<any>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "@hyperionbt/helios!Value:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 2,
              "parameters": [
                {
                  "parameterName": "tcx",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "uutsValue"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!Capo#uutsValue:member(3)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "uutsValue(uutName: "
                },
                {
                  "kind": "Reference",
                  "text": "UutName",
                  "canonicalReference": "@donecollectively/stellar-contracts!UutName:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "@hyperionbt/helios!Value:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 3,
              "parameters": [
                {
                  "parameterName": "uutName",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "uutsValue"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!Capo#verifyConfigs:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "verifyConfigs(): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<any>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "verifyConfigs"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!Capo#verifyCoreDelegates:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "abstract verifyCoreDelegates(): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<any>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": true,
              "name": "verifyCoreDelegates"
            }
          ],
          "extendsTokenRange": {
            "startIndex": 15,
            "endIndex": 17
          },
          "implementsTokenRanges": [
            {
              "startIndex": 18,
              "endIndex": 19
            }
          ]
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@donecollectively/stellar-contracts!capoDelegateConfig:type",
          "docComment": "/**\n * Allows any targeted delegate class to access & use certain details originating in the leader contract\n *\n * @remarks\n *\n * This setting is implicitly defined on all Delegate configurations.\n *\n * These allow any Capo delegate class to reference details from its essential delegation context\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type capoDelegateConfig = "
            },
            {
              "kind": "Reference",
              "text": "configBase",
              "canonicalReference": "@donecollectively/stellar-contracts!paramsBase:type"
            },
            {
              "kind": "Content",
              "text": " & {\n    capoAddr: "
            },
            {
              "kind": "Reference",
              "text": "Address",
              "canonicalReference": "@hyperionbt/helios!Address:class"
            },
            {
              "kind": "Content",
              "text": ";\n    mph: "
            },
            {
              "kind": "Reference",
              "text": "MintingPolicyHash",
              "canonicalReference": "@hyperionbt/helios!MintingPolicyHash:class"
            },
            {
              "kind": "Content",
              "text": ";\n    tn: number[];\n    rev: bigint;\n    addrHint: "
            },
            {
              "kind": "Reference",
              "text": "Address",
              "canonicalReference": "@hyperionbt/helios!Address:class"
            },
            {
              "kind": "Content",
              "text": "[];\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/delegation/RolesAndDelegates.ts",
          "releaseTag": "Public",
          "name": "capoDelegateConfig",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 9
          }
        },
        {
          "kind": "Class",
          "canonicalReference": "@donecollectively/stellar-contracts!CapoTestHelper:class",
          "docComment": "/**\n * Base class for test helpers for Capo contracts\n *\n * @remarks\n *\n * Unless you have a custom Capo not based on DefaultCapo, you should probably use DefaultCapoTestHelper instead of this class.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare abstract class CapoTestHelper<SC extends "
            },
            {
              "kind": "Reference",
              "text": "Capo",
              "canonicalReference": "@donecollectively/stellar-contracts!Capo:class"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "DefaultMinter",
              "canonicalReference": "@donecollectively/stellar-contracts!DefaultMinter:class"
            },
            {
              "kind": "Content",
              "text": " & "
            },
            {
              "kind": "Reference",
              "text": "MinterBaseMethods",
              "canonicalReference": "@donecollectively/stellar-contracts!~MinterBaseMethods:interface"
            },
            {
              "kind": "Content",
              "text": ", CDT, CT>"
            },
            {
              "kind": "Content",
              "text": ", CDT extends "
            },
            {
              "kind": "Reference",
              "text": "anyDatumArgs",
              "canonicalReference": "@donecollectively/stellar-contracts!~anyDatumArgs:type"
            },
            {
              "kind": "Content",
              "text": " = "
            },
            {
              "kind": "Content",
              "text": "SC extends "
            },
            {
              "kind": "Reference",
              "text": "Capo",
              "canonicalReference": "@donecollectively/stellar-contracts!Capo:class"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "DefaultMinter",
              "canonicalReference": "@donecollectively/stellar-contracts!DefaultMinter:class"
            },
            {
              "kind": "Content",
              "text": ", infer iCDT> ? iCDT : "
            },
            {
              "kind": "Reference",
              "text": "anyDatumArgs",
              "canonicalReference": "@donecollectively/stellar-contracts!~anyDatumArgs:type"
            },
            {
              "kind": "Content",
              "text": ", //prettier-ignore\nCT extends "
            },
            {
              "kind": "Reference",
              "text": "CapoBaseConfig",
              "canonicalReference": "@donecollectively/stellar-contracts!~CapoBaseConfig:type"
            },
            {
              "kind": "Content",
              "text": " = "
            },
            {
              "kind": "Content",
              "text": "SC extends "
            },
            {
              "kind": "Reference",
              "text": "Capo",
              "canonicalReference": "@donecollectively/stellar-contracts!Capo:class"
            },
            {
              "kind": "Content",
              "text": "<any, any, infer iCT> ? iCT : never"
            },
            {
              "kind": "Content",
              "text": "> extends "
            },
            {
              "kind": "Reference",
              "text": "StellarTestHelper",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarTestHelper:class"
            },
            {
              "kind": "Content",
              "text": "<SC>"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/testing/CapoTestHelper.ts",
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "SC",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 7
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "CDT",
              "constraintTokenRange": {
                "startIndex": 8,
                "endIndex": 9
              },
              "defaultTypeTokenRange": {
                "startIndex": 10,
                "endIndex": 16
              }
            },
            {
              "typeParameterName": "CT",
              "constraintTokenRange": {
                "startIndex": 17,
                "endIndex": 18
              },
              "defaultTypeTokenRange": {
                "startIndex": 19,
                "endIndex": 22
              }
            }
          ],
          "isAbstract": true,
          "name": "CapoTestHelper",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!CapoTestHelper#bootstrap:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "bootstrap(args?: "
                },
                {
                  "kind": "Reference",
                  "text": "MinimalDefaultCharterDatumArgs",
                  "canonicalReference": "@donecollectively/stellar-contracts!~MinimalDefaultCharterDatumArgs:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<SC>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "args",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "bootstrap"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!CapoTestHelper#initialize:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "initialize({ randomSeed, config, }?: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        config?: CT;\n        randomSeed?: number;\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<SC>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "{ randomSeed, config, }",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "initialize"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!CapoTestHelper#mintCharterToken:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "abstract mintCharterToken(args?: "
                },
                {
                  "kind": "Reference",
                  "text": "MinimalDefaultCharterDatumArgs",
                  "canonicalReference": "@donecollectively/stellar-contracts!~MinimalDefaultCharterDatumArgs:type"
                },
                {
                  "kind": "Content",
                  "text": "<any>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "StellarTxnContext",
                  "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext:class"
                },
                {
                  "kind": "Content",
                  "text": "<any> & "
                },
                {
                  "kind": "Reference",
                  "text": "hasUutContext",
                  "canonicalReference": "@donecollectively/stellar-contracts!hasUutContext:type"
                },
                {
                  "kind": "Content",
                  "text": "<\"govAuthority\" | \"capoGov\" | \"mintDelegate\" | \"mintDgt\"> & "
                },
                {
                  "kind": "Reference",
                  "text": "hasBootstrappedConfig",
                  "canonicalReference": "@donecollectively/stellar-contracts!hasBootstrappedConfig:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "CapoBaseConfig",
                  "canonicalReference": "@donecollectively/stellar-contracts!~CapoBaseConfig:type"
                },
                {
                  "kind": "Content",
                  "text": ">>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 14
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "args",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": true,
              "name": "mintCharterToken"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!CapoTestHelper#mkDefaultCharterArgs:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "abstract mkDefaultCharterArgs(): "
                },
                {
                  "kind": "Reference",
                  "text": "Partial",
                  "canonicalReference": "!Partial:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "MinimalDefaultCharterDatumArgs",
                  "canonicalReference": "@donecollectively/stellar-contracts!~MinimalDefaultCharterDatumArgs:type"
                },
                {
                  "kind": "Content",
                  "text": "<any>>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": true,
              "name": "mkDefaultCharterArgs"
            }
          ],
          "extendsTokenRange": {
            "startIndex": 23,
            "endIndex": 25
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@donecollectively/stellar-contracts!ConfigFor:type",
          "docComment": "/**\n * Extracts the config type for a Stellar Contract class\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ConfigFor<SC extends "
            },
            {
              "kind": "Reference",
              "text": "StellarContract",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarContract:class"
            },
            {
              "kind": "Content",
              "text": "<C>"
            },
            {
              "kind": "Content",
              "text": ", C extends "
            },
            {
              "kind": "Reference",
              "text": "configBase",
              "canonicalReference": "@donecollectively/stellar-contracts!paramsBase:type"
            },
            {
              "kind": "Content",
              "text": " = "
            },
            {
              "kind": "Content",
              "text": "SC extends "
            },
            {
              "kind": "Reference",
              "text": "StellarContract",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarContract:class"
            },
            {
              "kind": "Content",
              "text": "<infer inferredConfig> ? inferredConfig : never"
            },
            {
              "kind": "Content",
              "text": "> = "
            },
            {
              "kind": "Content",
              "text": "C"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/StellarContract.ts",
          "releaseTag": "Public",
          "name": "ConfigFor",
          "typeParameters": [
            {
              "typeParameterName": "SC",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "C",
              "constraintTokenRange": {
                "startIndex": 4,
                "endIndex": 5
              },
              "defaultTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 9
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 10,
            "endIndex": 11
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@donecollectively/stellar-contracts!ConfiguredDelegate:type",
          "docComment": "/**\n * A complete, validated and resolved configuration for a specific delegate\n *\n * @remarks\n *\n * Use StellarContract's `txnCreateDelegateSettings()` method to resolve from any (minimal or better) delegate details to a ResolvedDelegate object.\n *\n * @typeParam DT - a StellarContract class conforming to the `roleName`, within the scope of a Capo class's `roles()`.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ConfiguredDelegate<DT extends "
            },
            {
              "kind": "Reference",
              "text": "StellarDelegate",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarDelegate:class"
            },
            {
              "kind": "Content",
              "text": "<any>"
            },
            {
              "kind": "Content",
              "text": "> = "
            },
            {
              "kind": "Content",
              "text": "{\n    delegateClass: "
            },
            {
              "kind": "Reference",
              "text": "stellarSubclass",
              "canonicalReference": "@donecollectively/stellar-contracts!stellarSubclass:type"
            },
            {
              "kind": "Content",
              "text": "<DT>;\n    delegate: DT;\n    roleName: string;\n    config: "
            },
            {
              "kind": "Reference",
              "text": "ConfigFor",
              "canonicalReference": "@donecollectively/stellar-contracts!ConfigFor:type"
            },
            {
              "kind": "Content",
              "text": "<DT>;\n} & "
            },
            {
              "kind": "Reference",
              "text": "RelativeDelegateLink",
              "canonicalReference": "@donecollectively/stellar-contracts!RelativeDelegateLink:type"
            },
            {
              "kind": "Content",
              "text": "<DT>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/delegation/RolesAndDelegates.ts",
          "releaseTag": "Public",
          "name": "ConfiguredDelegate",
          "typeParameters": [
            {
              "typeParameterName": "DT",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 4,
            "endIndex": 11
          }
        },
        {
          "kind": "Function",
          "canonicalReference": "@donecollectively/stellar-contracts!datum:function(1)",
          "docComment": "/**\n * Decorates datum-building functions\n *\n * @remarks\n *\n * function names must follow the mkDatum... convention.\n *\n * The function should accept a single argument with input type that feels Typescripty, and that can be fit to the on-chain type of the underlying Datum variant of the given name.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function datum(proto: "
            },
            {
              "kind": "Content",
              "text": "any"
            },
            {
              "kind": "Content",
              "text": ", thingName: "
            },
            {
              "kind": "Content",
              "text": "any"
            },
            {
              "kind": "Content",
              "text": ", descriptor: "
            },
            {
              "kind": "Content",
              "text": "any"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "any"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/StellarContract.ts",
          "returnTypeTokenRange": {
            "startIndex": 7,
            "endIndex": 8
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "proto",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            },
            {
              "parameterName": "thingName",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": false
            },
            {
              "parameterName": "descriptor",
              "parameterTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "isOptional": false
            }
          ],
          "name": "datum"
        },
        {
          "kind": "Function",
          "canonicalReference": "@donecollectively/stellar-contracts!datumAsString:function(1)",
          "docComment": "/**\n * converts a Datum to a printable summary\n *\n * @remarks\n *\n * using shortening techniques for the datumHash\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function datumAsString(d: "
            },
            {
              "kind": "Reference",
              "text": "Datum",
              "canonicalReference": "@hyperionbt/helios!Datum:class"
            },
            {
              "kind": "Content",
              "text": " | null | undefined"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/diagnostics.ts",
          "returnTypeTokenRange": {
            "startIndex": 4,
            "endIndex": 5
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "d",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isOptional": false
            }
          ],
          "name": "datumAsString"
        },
        {
          "kind": "Class",
          "canonicalReference": "@donecollectively/stellar-contracts!DefaultCapo:class",
          "docComment": "/**\n * Base class for leader contracts, with predefined roles for delegating governance authority and minting policies\n *\n * @remarks\n *\n * * A Capo contract provides a central contract address that can act as a treasury or data registry; it can mint tokens using its connected minting-policy, and it can delegate policies to other contract scripts. Subclasses of Capo can use these capabilities in custom ways for strong flexibility.\n *\n * Subclass and customize DefaultCapo's type-parameters if you need to customize further.\n *\n * Any Capo contract can (and must) define roles() to establish collaborating scripts; these are used for separating granular responsbilities for different functional purposes within your (on-chain and off-chain) application; this approach enables delegates to use any one of multiple strategies with different functional logic to serve in any given role, thus providing flexibility and extensibility.\n *\n * DefaultCapo provides roles for govAuthority and mintDelegate, and methods to facilitate the lifecycle of charter creation & update.\n *\n * **Example: Multisig authority delegation** - a Capo contract would get much more complicated if it contained multisig logic. Instead, the governance authority for the Capo can be delegated to a standalone multi-sig contract, which can contain all (and only) the multi-sig logic. Separating the responsibilities makes each part simpler, easing the process of ensuring each part is doing its job perfectly :pray:\n *\n * A Capo subclass can decorate an existing entry from `super.roles()` with additional strategy entries, or can add extra roles useful in the operation of its application.\n *\n * The Capo base class provides utilities for creating and using UUT's, or **unique utility tokens**, which are non-fungible assets that can form a positive linkage between the Capo (which should normally retain a reference to that UUT) and any delegate; that delegate is most commonly another contract script also referenced within the roles() definition, with a selected strategy.\n *\n * Architecturally, UUTs provide a simple and unique handle for the Capo to use as a **required transaction element** in key operational activities (like updating the charter details); so that the delegate holding the UUT is entrusted to approved the UUT's inclusion in a transaction, with all the policy-enforcement implicated on the other end of the delegation.\n *\n * Customizing Datum and Activity\n *\n * The baseline contract script can have specialized Datum and Activity (\"redeemer\") definitions by subclassing DefaultCapo with a `get specializedCapo()`. This should be an imported helios script having `module specializedCapo` at the top. It MUST export Datum and Activity enums, with variants matching those in the provided baseline/unspecializedCapo module.\n *\n * A customized Datum::validateSpend(self, ctx) -\\> Bool method should be defined, even if it doesn't put constraints on spending Datum. If it does choose to add hard constraints, note that this method doesn't have access to the Activity (\"redeemer\") type. It's a simple place to express simple constraints on spending a custom Datum that only needs one 'spendingDatum' activity.\n *\n * A customized Activity: allowActivity(self, datum, ctx) -\\> Bool method has access to both the redeemer (in self), as well as Datum and the transaction context. In this method, use self.switch\\{...\\} to implement activity-specific validations.\n *\n * See the {@link Capo | Capo base class} and {@link StellarContract} for addition context.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class DefaultCapo<MinterType extends "
            },
            {
              "kind": "Reference",
              "text": "DefaultMinter",
              "canonicalReference": "@donecollectively/stellar-contracts!DefaultMinter:class"
            },
            {
              "kind": "Content",
              "text": " = "
            },
            {
              "kind": "Reference",
              "text": "DefaultMinter",
              "canonicalReference": "@donecollectively/stellar-contracts!DefaultMinter:class"
            },
            {
              "kind": "Content",
              "text": ", CDT extends "
            },
            {
              "kind": "Reference",
              "text": "DefaultCharterDatumArgs",
              "canonicalReference": "@donecollectively/stellar-contracts!DefaultCharterDatumArgs:type"
            },
            {
              "kind": "Content",
              "text": " = "
            },
            {
              "kind": "Reference",
              "text": "DefaultCharterDatumArgs",
              "canonicalReference": "@donecollectively/stellar-contracts!DefaultCharterDatumArgs:type"
            },
            {
              "kind": "Content",
              "text": ", configType extends "
            },
            {
              "kind": "Reference",
              "text": "CapoBaseConfig",
              "canonicalReference": "@donecollectively/stellar-contracts!~CapoBaseConfig:type"
            },
            {
              "kind": "Content",
              "text": " = "
            },
            {
              "kind": "Reference",
              "text": "CapoBaseConfig",
              "canonicalReference": "@donecollectively/stellar-contracts!~CapoBaseConfig:type"
            },
            {
              "kind": "Content",
              "text": "> extends "
            },
            {
              "kind": "Reference",
              "text": "Capo",
              "canonicalReference": "@donecollectively/stellar-contracts!Capo:class"
            },
            {
              "kind": "Content",
              "text": "<MinterType, CDT, configType>"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/DefaultCapo.ts",
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "MinterType",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              }
            },
            {
              "typeParameterName": "CDT",
              "constraintTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "defaultTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              }
            },
            {
              "typeParameterName": "configType",
              "constraintTokenRange": {
                "startIndex": 9,
                "endIndex": 10
              },
              "defaultTypeTokenRange": {
                "startIndex": 11,
                "endIndex": 12
              }
            }
          ],
          "isAbstract": false,
          "name": "DefaultCapo",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!DefaultCapo#capoHelpers:member",
              "docComment": "/**\n * indicates any specialization of the baseline Capo types\n *\n * @remarks\n *\n * The default implementation is an UnspecialiedCapo, which you can use as a template for your specialized Capo.\n *\n * Every specalization MUST include Datum and Activity (\"redeemer\") enums, and MAY include additional functions, and methods on Datum / Activity.\n *\n * The datum enum SHOULD have a validateSpend(self, datum, ctx) method.\n *\n * The activity enum SHOULD have an allowActivity(self, datum, ctx) method.\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get capoHelpers(): "
                },
                {
                  "kind": "Reference",
                  "text": "HeliosModuleSrc",
                  "canonicalReference": "@donecollectively/stellar-contracts!HeliosModuleSrc:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "capoHelpers",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!DefaultCapo#contractSource:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "contractSource(): "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "contractSource"
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!DefaultCapo#delegateRoles:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get delegateRoles(): "
                },
                {
                  "kind": "Content",
                  "text": "import(\"./Capo.js\")."
                },
                {
                  "kind": "Reference",
                  "text": "RoleMap",
                  "canonicalReference": "@donecollectively/stellar-contracts!RoleMap:type"
                },
                {
                  "kind": "Content",
                  "text": "<{\n        readonly govAuthority: import(\"./delegation/RolesAndDelegates.js\")."
                },
                {
                  "kind": "Reference",
                  "text": "RoleInfo",
                  "canonicalReference": "@donecollectively/stellar-contracts!~RoleInfo_2:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "StellarContract",
                  "canonicalReference": "@donecollectively/stellar-contracts!StellarContract:class"
                },
                {
                  "kind": "Content",
                  "text": "<any>, {\n            readonly address: {\n                readonly delegateClass: typeof "
                },
                {
                  "kind": "Reference",
                  "text": "AnyAddressAuthorityPolicy",
                  "canonicalReference": "@donecollectively/stellar-contracts!AnyAddressAuthorityPolicy:class"
                },
                {
                  "kind": "Content",
                  "text": ";\n                readonly validateConfig: (args: any) => "
                },
                {
                  "kind": "Reference",
                  "text": "strategyValidation",
                  "canonicalReference": "@donecollectively/stellar-contracts!strategyValidation:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n            };\n            readonly multisig: {\n                readonly delegateClass: typeof "
                },
                {
                  "kind": "Reference",
                  "text": "MultisigAuthorityPolicy",
                  "canonicalReference": "@donecollectively/stellar-contracts!~MultisigAuthorityPolicy:class"
                },
                {
                  "kind": "Content",
                  "text": ";\n                readonly validateConfig: (args: any) => "
                },
                {
                  "kind": "Reference",
                  "text": "strategyValidation",
                  "canonicalReference": "@donecollectively/stellar-contracts!strategyValidation:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n            };\n        }, \"capoGov\", \"address\" | \"multisig\">;\n        readonly mintDelegate: import(\"./delegation/RolesAndDelegates.js\")."
                },
                {
                  "kind": "Reference",
                  "text": "RoleInfo",
                  "canonicalReference": "@donecollectively/stellar-contracts!~RoleInfo_2:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "StellarContract",
                  "canonicalReference": "@donecollectively/stellar-contracts!StellarContract:class"
                },
                {
                  "kind": "Content",
                  "text": "<any>, {\n            readonly default: {\n                readonly delegateClass: typeof "
                },
                {
                  "kind": "Reference",
                  "text": "BasicMintDelegate",
                  "canonicalReference": "@donecollectively/stellar-contracts!BasicMintDelegate:class"
                },
                {
                  "kind": "Content",
                  "text": ";\n                readonly partialConfig: {};\n                readonly validateConfig: (args: any) => "
                },
                {
                  "kind": "Reference",
                  "text": "strategyValidation",
                  "canonicalReference": "@donecollectively/stellar-contracts!strategyValidation:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n            };\n        }, \"mintDgt\", \"default\">;\n    }>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "delegateRoles",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 24
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!DefaultCapo#findCharterDatum:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "findCharterDatum(): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "DefaultCharterDatumArgs",
                  "canonicalReference": "@donecollectively/stellar-contracts!DefaultCharterDatumArgs:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "findCharterDatum"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!DefaultCapo#findGovDelegate:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "findGovDelegate(): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "AuthorityPolicy",
                  "canonicalReference": "@donecollectively/stellar-contracts!AuthorityPolicy:class"
                },
                {
                  "kind": "Content",
                  "text": "<import(\"./delegation/RolesAndDelegates.js\")."
                },
                {
                  "kind": "Reference",
                  "text": "capoDelegateConfig",
                  "canonicalReference": "@donecollectively/stellar-contracts!capoDelegateConfig:type"
                },
                {
                  "kind": "Content",
                  "text": ">>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "findGovDelegate"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!DefaultCapo#getDelegateRoles:member(1)",
              "docComment": "/**\n * Use the `delegateRoles` getter instead\n *\n * @remarks\n *\n * this no-op method is a convenience for Stellar Contracts maintainers and intuitive developers using autocomplete. Including it enables an entry in VSCode \"Outline\" view, which doesn't include the delegateRoles getter : /\n *\n * @deprecated\n *\n * but please keep as a kind of redirect\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getDelegateRoles(): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "getDelegateRoles"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!DefaultCapo#getGovDelegate:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getGovDelegate(): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "AuthorityPolicy",
                  "canonicalReference": "@donecollectively/stellar-contracts!AuthorityPolicy:class"
                },
                {
                  "kind": "Content",
                  "text": "<import(\"./delegation/RolesAndDelegates.js\")."
                },
                {
                  "kind": "Reference",
                  "text": "capoDelegateConfig",
                  "canonicalReference": "@donecollectively/stellar-contracts!capoDelegateConfig:type"
                },
                {
                  "kind": "Content",
                  "text": ">>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "getGovDelegate"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!DefaultCapo#getMintDelegate:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getMintDelegate(): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "BasicMintDelegate",
                  "canonicalReference": "@donecollectively/stellar-contracts!BasicMintDelegate:class"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "getMintDelegate"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!DefaultCapo#importModules:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "importModules(): "
                },
                {
                  "kind": "Reference",
                  "text": "HeliosModuleSrc",
                  "canonicalReference": "@donecollectively/stellar-contracts!HeliosModuleSrc:type"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "importModules"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!DefaultCapo#mkDatumCharterToken:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "mkDatumCharterToken(args: "
                },
                {
                  "kind": "Content",
                  "text": "CDT"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "InlineDatum",
                  "canonicalReference": "@donecollectively/stellar-contracts!InlineDatum:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "args",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "mkDatumCharterToken"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!DefaultCapo#mkFullConfig:member(1)",
              "docComment": "/**\n * should emit a complete configuration structure that can reconstitute a contract (suite) after its first bootstrap transaction\n *\n * @remarks\n *\n * mkFullConfig is called during a bootstrap transaction. The default implementation works for subclasses as long as they use CapoBaseConfig for their config type. Or, if they're instantiated with a partialConfig that augments CapoBaseConfig with concrete details that fulfill their extensions to the config type.\n *\n * If you have a custom mkBootstrapTxn() that uses techniques to explicitly add config properties not provided by your usage of `partialConfig` in the constructor, then you'll need to provide a more specific impl of mkFullConfig(). It's recommended that you call super.mkFullConfig() from your impl.\n *\n * @param baseConfig - receives the BaseConfig properties: mph, seedTxn and seedIndex\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "mkFullConfig(baseConfig: "
                },
                {
                  "kind": "Reference",
                  "text": "CapoBaseConfig",
                  "canonicalReference": "@donecollectively/stellar-contracts!~CapoBaseConfig:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "CapoBaseConfig",
                  "canonicalReference": "@donecollectively/stellar-contracts!~CapoBaseConfig:type"
                },
                {
                  "kind": "Content",
                  "text": " & configType & "
                },
                {
                  "kind": "Reference",
                  "text": "rootCapoConfig",
                  "canonicalReference": "@donecollectively/stellar-contracts!~rootCapoConfig:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "baseConfig",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "mkFullConfig"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!DefaultCapo#mkOnchainDelegateLink:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "mkOnchainDelegateLink(dl: "
                },
                {
                  "kind": "Reference",
                  "text": "RelativeDelegateLink",
                  "canonicalReference": "@donecollectively/stellar-contracts!RelativeDelegateLink:type"
                },
                {
                  "kind": "Content",
                  "text": "<any>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "dl",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "mkOnchainDelegateLink"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!DefaultCapo#mkTxnMintCharterToken:member(1)",
              "docComment": "/**\n * Initiates a seeding transaction, creating a new Capo contract of this type\n *\n * @remarks\n *\n * The returned transaction context has `state.bootstrappedConfig` for capturing the details for reproducing the contract's settings and on-chain address.\n *\n * @param charterDatumArgs - initial details for the charter datum\n *\n * @param tcx - any existing transaction context\n *\n * @typeParam TCX - inferred type of a provided transaction context\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "mkTxnMintCharterToken<TCX extends "
                },
                {
                  "kind": "Reference",
                  "text": "StellarTxnContext",
                  "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext:class"
                },
                {
                  "kind": "Content",
                  "text": "<any>"
                },
                {
                  "kind": "Content",
                  "text": ">(charterDatumArgs: "
                },
                {
                  "kind": "Reference",
                  "text": "MinimalDefaultCharterDatumArgs",
                  "canonicalReference": "@donecollectively/stellar-contracts!~MinimalDefaultCharterDatumArgs:type"
                },
                {
                  "kind": "Content",
                  "text": "<CDT>"
                },
                {
                  "kind": "Content",
                  "text": ", existingTcx?: "
                },
                {
                  "kind": "Content",
                  "text": "TCX"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<never | (TCX & "
                },
                {
                  "kind": "Reference",
                  "text": "hasUutContext",
                  "canonicalReference": "@donecollectively/stellar-contracts!hasUutContext:type"
                },
                {
                  "kind": "Content",
                  "text": "<\"govAuthority\" | \"capoGov\" | \"mintDelegate\" | \"mintDgt\"> & "
                },
                {
                  "kind": "Reference",
                  "text": "hasBootstrappedConfig",
                  "canonicalReference": "@donecollectively/stellar-contracts!hasBootstrappedConfig:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "CapoBaseConfig",
                  "canonicalReference": "@donecollectively/stellar-contracts!~CapoBaseConfig:type"
                },
                {
                  "kind": "Content",
                  "text": " & configType>)>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "TCX",
                  "constraintTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 9,
                "endIndex": 17
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "charterDatumArgs",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 6
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "existingTcx",
                  "parameterTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 8
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "mkTxnMintCharterToken"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!DefaultCapo#mkTxnMintingUuts:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "mkTxnMintingUuts<const purposes extends "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", existingTcx extends "
                },
                {
                  "kind": "Reference",
                  "text": "StellarTxnContext",
                  "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext:class"
                },
                {
                  "kind": "Content",
                  "text": "<any>"
                },
                {
                  "kind": "Content",
                  "text": ", const RM extends "
                },
                {
                  "kind": "Reference",
                  "text": "Record",
                  "canonicalReference": "!Record:type"
                },
                {
                  "kind": "Content",
                  "text": "<ROLES, purposes>"
                },
                {
                  "kind": "Content",
                  "text": ", const ROLES extends "
                },
                {
                  "kind": "Content",
                  "text": "keyof RM & string"
                },
                {
                  "kind": "Content",
                  "text": " = "
                },
                {
                  "kind": "Content",
                  "text": "string & keyof RM"
                },
                {
                  "kind": "Content",
                  "text": ">(initialTcx: "
                },
                {
                  "kind": "Content",
                  "text": "existingTcx"
                },
                {
                  "kind": "Content",
                  "text": ", uutPurposes: "
                },
                {
                  "kind": "Content",
                  "text": "purposes[]"
                },
                {
                  "kind": "Content",
                  "text": ", seedUtxo?: "
                },
                {
                  "kind": "Reference",
                  "text": "TxInput",
                  "canonicalReference": "@hyperionbt/helios!TxInput:class"
                },
                {
                  "kind": "Content",
                  "text": " | undefined"
                },
                {
                  "kind": "Content",
                  "text": ", roles?: "
                },
                {
                  "kind": "Content",
                  "text": "RM"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "hasUutContext",
                  "canonicalReference": "@donecollectively/stellar-contracts!hasUutContext:type"
                },
                {
                  "kind": "Content",
                  "text": "<ROLES | purposes> & existingTcx>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "purposes",
                  "constraintTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "typeParameterName": "existingTcx",
                  "constraintTokenRange": {
                    "startIndex": 3,
                    "endIndex": 5
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "typeParameterName": "RM",
                  "constraintTokenRange": {
                    "startIndex": 6,
                    "endIndex": 8
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "typeParameterName": "ROLES",
                  "constraintTokenRange": {
                    "startIndex": 9,
                    "endIndex": 10
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 11,
                    "endIndex": 12
                  }
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 22,
                "endIndex": 26
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "initialTcx",
                  "parameterTypeTokenRange": {
                    "startIndex": 13,
                    "endIndex": 14
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "uutPurposes",
                  "parameterTypeTokenRange": {
                    "startIndex": 15,
                    "endIndex": 16
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "seedUtxo",
                  "parameterTypeTokenRange": {
                    "startIndex": 17,
                    "endIndex": 19
                  },
                  "isOptional": true
                },
                {
                  "parameterName": "roles",
                  "parameterTypeTokenRange": {
                    "startIndex": 20,
                    "endIndex": 21
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "mkTxnMintingUuts"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!DefaultCapo#mkTxnUpdateCharter:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "mkTxnUpdateCharter(args: "
                },
                {
                  "kind": "Content",
                  "text": "CDT"
                },
                {
                  "kind": "Content",
                  "text": ", tcx?: "
                },
                {
                  "kind": "Reference",
                  "text": "StellarTxnContext",
                  "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "StellarTxnContext",
                  "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext:class"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "args",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "tcx",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "mkTxnUpdateCharter"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!DefaultCapo.parseConfig:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static parseConfig(rawJsonConfig: "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "rawJsonConfig",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "parseConfig"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!DefaultCapo#requirements:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "requirements(): "
                },
                {
                  "kind": "Content",
                  "text": "import(\"./Requirements.js\")."
                },
                {
                  "kind": "Reference",
                  "text": "ReqtsMap",
                  "canonicalReference": "@donecollectively/stellar-contracts!ReqtsMap:type"
                },
                {
                  "kind": "Content",
                  "text": "<\"the trustee group can be changed\" | \"positively governs all administrative actions\" | \"has a unique, permanent charter token\" | \"has a unique, permanent treasury address\" | \"the trustee threshold is enforced on all administrative actions\" | \"the charter token is always kept in the contract\" | \"can mint other tokens, on the authority of the Charter token\" | \"has a singleton minting policy\" | \"foo\">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "requirements"
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!DefaultCapo#specializedCapo:member",
              "docComment": "/**\n * indicates any specialization of the baseline Capo types\n *\n * @remarks\n *\n * The default implementation is an UnspecialiedCapo, which you can use as a template for your specialized Capo.\n *\n * Every specalization MUST include Datum and Activity (\"redeemer\") enums, and MAY include additional functions, and methods on Datum / Activity.\n *\n * The datum SHOULD have a validateSpend(self, datum, ctx) method.\n *\n * The redeemer SHOULD have an allowActivity(self, datum, ctx) method.\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get specializedCapo(): "
                },
                {
                  "kind": "Reference",
                  "text": "HeliosModuleSrc",
                  "canonicalReference": "@donecollectively/stellar-contracts!HeliosModuleSrc:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "specializedCapo",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!DefaultCapo#txnAddGovAuthority:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "txnAddGovAuthority<TCX extends "
                },
                {
                  "kind": "Reference",
                  "text": "StellarTxnContext",
                  "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext:class"
                },
                {
                  "kind": "Content",
                  "text": "<any>"
                },
                {
                  "kind": "Content",
                  "text": ">(tcx: "
                },
                {
                  "kind": "Content",
                  "text": "TCX"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<TCX & "
                },
                {
                  "kind": "Reference",
                  "text": "StellarTxnContext",
                  "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext:class"
                },
                {
                  "kind": "Content",
                  "text": "<any>>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "TCX",
                  "constraintTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 10
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "tcx",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "txnAddGovAuthority"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!DefaultCapo#txnAddMintDelegate:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "txnAddMintDelegate<TCX extends "
                },
                {
                  "kind": "Reference",
                  "text": "StellarTxnContext",
                  "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext:class"
                },
                {
                  "kind": "Content",
                  "text": "<any>"
                },
                {
                  "kind": "Content",
                  "text": ">(tcx: "
                },
                {
                  "kind": "Content",
                  "text": "TCX"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<TCX>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "TCX",
                  "constraintTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "tcx",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "txnAddMintDelegate"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!DefaultCapo#updatingCharter:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "updatingCharter(): "
                },
                {
                  "kind": "Reference",
                  "text": "isActivity",
                  "canonicalReference": "@donecollectively/stellar-contracts!isActivity:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "updatingCharter"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!DefaultCapo#verifyCoreDelegates:member(1)",
              "docComment": "/**\n * Performs a validation of all critical delegate connections\n *\n * @remarks\n *\n * Checks that each delegate connection is correct and that the underlying scripts for those delegates have not been modified in unplanned ways.\n *\n * Every Capo subclass that adds new delegate types SHOULD implement this method, performing any checks needed to verify the scripts underlying those delegate-types. It should return `Promise.all([ super(), ...myOwnChecks])`.\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "verifyCoreDelegates(): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<["
                },
                {
                  "kind": "Reference",
                  "text": "AuthorityPolicy",
                  "canonicalReference": "@donecollectively/stellar-contracts!AuthorityPolicy:class"
                },
                {
                  "kind": "Content",
                  "text": "<import(\"./delegation/RolesAndDelegates.js\")."
                },
                {
                  "kind": "Reference",
                  "text": "capoDelegateConfig",
                  "canonicalReference": "@donecollectively/stellar-contracts!capoDelegateConfig:type"
                },
                {
                  "kind": "Content",
                  "text": ">, "
                },
                {
                  "kind": "Reference",
                  "text": "BasicMintDelegate",
                  "canonicalReference": "@donecollectively/stellar-contracts!BasicMintDelegate:class"
                },
                {
                  "kind": "Content",
                  "text": "]>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "verifyCoreDelegates"
            }
          ],
          "extendsTokenRange": {
            "startIndex": 13,
            "endIndex": 15
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "@donecollectively/stellar-contracts!DefaultCapoTestHelper:class",
          "docComment": "/**\n * Test helper for classes extending DefaultCapo\n *\n * @remarks\n *\n * Arranges an test environment with predefined actor-names having various amounts of ADA in their (emulated) wallets, and default helpers for setting up test scenarios. Provides a simplified framework for testing Stellar contracts extending the DefaultCapo class.\n *\n * To use it, you MUST extend DefaultCapoTestHelper<YourStellarCapoClass>.\n *\n * You MUST also implement a getter for stellarClass, returning the specific class for YourStellarCapoClass\n *\n * You SHOULD also implement a setupActors method to arrange named actors for your test scenarios. It's recommended to identify general roles of different people who will interact with the contract, and create one or more actor names for each role, where the actor names start with the same letter as the role-names. For example, a set of Trustees in a contract might have actor names tina, tracy and tom, while unprivileged Public users might have actor names like pablo and peter. setupActors() also should pre-assign some ADA funds to each actor: e.g. `this.addActor(‹actorName›, 142n * ADA)`\n *\n * @typeParam DC - the specific DefaultCapo subclass under test\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class DefaultCapoTestHelper<DC extends "
            },
            {
              "kind": "Reference",
              "text": "DefaultCapo",
              "canonicalReference": "@donecollectively/stellar-contracts!DefaultCapo:class"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "DefaultMinter",
              "canonicalReference": "@donecollectively/stellar-contracts!DefaultMinter:class"
            },
            {
              "kind": "Content",
              "text": ", CDT, CT>"
            },
            {
              "kind": "Content",
              "text": " = "
            },
            {
              "kind": "Reference",
              "text": "DefaultCapo",
              "canonicalReference": "@donecollectively/stellar-contracts!DefaultCapo:class"
            },
            {
              "kind": "Content",
              "text": ", //prettier-ignore\nCDT extends "
            },
            {
              "kind": "Reference",
              "text": "DefaultCharterDatumArgs",
              "canonicalReference": "@donecollectively/stellar-contracts!DefaultCharterDatumArgs:type"
            },
            {
              "kind": "Content",
              "text": " = "
            },
            {
              "kind": "Content",
              "text": "DC extends "
            },
            {
              "kind": "Reference",
              "text": "Capo",
              "canonicalReference": "@donecollectively/stellar-contracts!Capo:class"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "DefaultMinter",
              "canonicalReference": "@donecollectively/stellar-contracts!DefaultMinter:class"
            },
            {
              "kind": "Content",
              "text": ", infer iCDT> ? iCDT : "
            },
            {
              "kind": "Reference",
              "text": "DefaultCharterDatumArgs",
              "canonicalReference": "@donecollectively/stellar-contracts!DefaultCharterDatumArgs:type"
            },
            {
              "kind": "Content",
              "text": ", //prettier-ignore\nCT extends "
            },
            {
              "kind": "Reference",
              "text": "CapoBaseConfig",
              "canonicalReference": "@donecollectively/stellar-contracts!~CapoBaseConfig:type"
            },
            {
              "kind": "Content",
              "text": " = "
            },
            {
              "kind": "Content",
              "text": "DC extends "
            },
            {
              "kind": "Reference",
              "text": "Capo",
              "canonicalReference": "@donecollectively/stellar-contracts!Capo:class"
            },
            {
              "kind": "Content",
              "text": "<any, any, infer iCT> ? iCT : never"
            },
            {
              "kind": "Content",
              "text": "> extends "
            },
            {
              "kind": "Reference",
              "text": "CapoTestHelper",
              "canonicalReference": "@donecollectively/stellar-contracts!CapoTestHelper:class"
            },
            {
              "kind": "Content",
              "text": "<DC, CDT, CT>"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/testing/DefaultCapoTestHelper.ts",
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "DC",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              },
              "defaultTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              }
            },
            {
              "typeParameterName": "CDT",
              "constraintTokenRange": {
                "startIndex": 8,
                "endIndex": 9
              },
              "defaultTypeTokenRange": {
                "startIndex": 10,
                "endIndex": 16
              }
            },
            {
              "typeParameterName": "CT",
              "constraintTokenRange": {
                "startIndex": 17,
                "endIndex": 18
              },
              "defaultTypeTokenRange": {
                "startIndex": 19,
                "endIndex": 22
              }
            }
          ],
          "isAbstract": false,
          "name": "DefaultCapoTestHelper",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!DefaultCapoTestHelper.forCapoClass:member(1)",
              "docComment": "/**\n * Creates a prepared test helper for a given Capo class, with boilerplate built-in\n *\n * @remarks\n *\n * You may wish to provide an overridden setupActors() method, to arrange actor names that fit your project's user-roles / profiles.\n *\n * You may also wish to add methods that satisfy some of your application's key use-cases in simple predefined ways, so that your automated tests can re-use the logic and syntax instead of repeating them in multiple test-cases.\n *\n * @param s - your Capo class that extends DefaultCapo\n *\n * @typeParam DC - no need to specify it; it's inferred from your parameter\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static forCapoClass<DC extends "
                },
                {
                  "kind": "Reference",
                  "text": "DefaultCapo",
                  "canonicalReference": "@donecollectively/stellar-contracts!DefaultCapo:class"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "DefaultMinter",
                  "canonicalReference": "@donecollectively/stellar-contracts!DefaultMinter:class"
                },
                {
                  "kind": "Content",
                  "text": ", any, any>"
                },
                {
                  "kind": "Content",
                  "text": ">(s: "
                },
                {
                  "kind": "Reference",
                  "text": "stellarSubclass",
                  "canonicalReference": "@donecollectively/stellar-contracts!stellarSubclass:type"
                },
                {
                  "kind": "Content",
                  "text": "<DC>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "DefaultCapoTestHelperClass",
                  "canonicalReference": "@donecollectively/stellar-contracts!DefaultCapoTestHelperClass:type"
                },
                {
                  "kind": "Content",
                  "text": "<DC>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "DC",
                  "constraintTokenRange": {
                    "startIndex": 1,
                    "endIndex": 5
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 9,
                "endIndex": 11
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "s",
                  "parameterTypeTokenRange": {
                    "startIndex": 6,
                    "endIndex": 8
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "forCapoClass"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!DefaultCapoTestHelper#mintCharterToken:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "mintCharterToken(args?: "
                },
                {
                  "kind": "Reference",
                  "text": "MinimalDefaultCharterDatumArgs",
                  "canonicalReference": "@donecollectively/stellar-contracts!~MinimalDefaultCharterDatumArgs:type"
                },
                {
                  "kind": "Content",
                  "text": "<CDT>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "hasUutContext",
                  "canonicalReference": "@donecollectively/stellar-contracts!hasUutContext:type"
                },
                {
                  "kind": "Content",
                  "text": "<\"govAuthority\" | \"capoGov\" | \"mintDelegate\" | \"mintDgt\"> & "
                },
                {
                  "kind": "Reference",
                  "text": "StellarTxnContext",
                  "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext:class"
                },
                {
                  "kind": "Content",
                  "text": "<any> & "
                },
                {
                  "kind": "Reference",
                  "text": "hasBootstrappedConfig",
                  "canonicalReference": "@donecollectively/stellar-contracts!hasBootstrappedConfig:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "CapoBaseConfig",
                  "canonicalReference": "@donecollectively/stellar-contracts!~CapoBaseConfig:type"
                },
                {
                  "kind": "Content",
                  "text": ">>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 14
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "args",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "mintCharterToken"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!DefaultCapoTestHelper#mkCharterSpendTx:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "mkCharterSpendTx(): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "StellarTxnContext",
                  "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext:class"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "mkCharterSpendTx"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!DefaultCapoTestHelper#mkDefaultCharterArgs:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "mkDefaultCharterArgs(): "
                },
                {
                  "kind": "Reference",
                  "text": "Partial",
                  "canonicalReference": "!Partial:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "MinimalDefaultCharterDatumArgs",
                  "canonicalReference": "@donecollectively/stellar-contracts!~MinimalDefaultCharterDatumArgs:type"
                },
                {
                  "kind": "Content",
                  "text": "<CDT>>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "mkDefaultCharterArgs"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!DefaultCapoTestHelper#setupActors:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "setupActors(): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "setupActors"
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!DefaultCapoTestHelper#stellarClass:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get stellarClass(): "
                },
                {
                  "kind": "Reference",
                  "text": "stellarSubclass",
                  "canonicalReference": "@donecollectively/stellar-contracts!stellarSubclass:type"
                },
                {
                  "kind": "Content",
                  "text": "<DC>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "stellarClass",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!DefaultCapoTestHelper#updateCharter:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "updateCharter(args: "
                },
                {
                  "kind": "Content",
                  "text": "CDT"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "StellarTxnContext",
                  "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext:class"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "args",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "updateCharter"
            }
          ],
          "extendsTokenRange": {
            "startIndex": 23,
            "endIndex": 25
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@donecollectively/stellar-contracts!DefaultCapoTestHelperClass:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type DefaultCapoTestHelperClass<SC extends "
            },
            {
              "kind": "Reference",
              "text": "DefaultCapo",
              "canonicalReference": "@donecollectively/stellar-contracts!DefaultCapo:class"
            },
            {
              "kind": "Content",
              "text": "<any, any, any>"
            },
            {
              "kind": "Content",
              "text": "> = "
            },
            {
              "kind": "Content",
              "text": "new (config: "
            },
            {
              "kind": "Reference",
              "text": "ConfigFor",
              "canonicalReference": "@donecollectively/stellar-contracts!ConfigFor:type"
            },
            {
              "kind": "Content",
              "text": "<SC> & "
            },
            {
              "kind": "Reference",
              "text": "canHaveRandomSeed",
              "canonicalReference": "@donecollectively/stellar-contracts!~canHaveRandomSeed:type"
            },
            {
              "kind": "Content",
              "text": ") => "
            },
            {
              "kind": "Reference",
              "text": "StellarTestHelper",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarTestHelper:class"
            },
            {
              "kind": "Content",
              "text": "<SC> & "
            },
            {
              "kind": "Reference",
              "text": "DefaultCapoTestHelper",
              "canonicalReference": "@donecollectively/stellar-contracts!DefaultCapoTestHelper:class"
            },
            {
              "kind": "Content",
              "text": "<SC> & {\n    stellarClass: "
            },
            {
              "kind": "Reference",
              "text": "stellarSubclass",
              "canonicalReference": "@donecollectively/stellar-contracts!stellarSubclass:type"
            },
            {
              "kind": "Content",
              "text": "<SC>;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/testing/types.ts",
          "releaseTag": "Public",
          "name": "DefaultCapoTestHelperClass",
          "typeParameters": [
            {
              "typeParameterName": "SC",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 4,
            "endIndex": 15
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@donecollectively/stellar-contracts!DefaultCharterDatumArgs:type",
          "docComment": "/**\n * Schema for Charter Datum, which allows state to be stored in the Leader contract together with it's primary or \"charter\" utxo.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type DefaultCharterDatumArgs = "
            },
            {
              "kind": "Content",
              "text": "{\n    govAuthorityLink: "
            },
            {
              "kind": "Reference",
              "text": "RelativeDelegateLink",
              "canonicalReference": "@donecollectively/stellar-contracts!RelativeDelegateLink:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "AuthorityPolicy",
              "canonicalReference": "@donecollectively/stellar-contracts!AuthorityPolicy:class"
            },
            {
              "kind": "Content",
              "text": ">;\n    mintDelegateLink: "
            },
            {
              "kind": "Reference",
              "text": "RelativeDelegateLink",
              "canonicalReference": "@donecollectively/stellar-contracts!RelativeDelegateLink:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "BasicMintDelegate",
              "canonicalReference": "@donecollectively/stellar-contracts!BasicMintDelegate:class"
            },
            {
              "kind": "Content",
              "text": ">;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/DefaultCapo.ts",
          "releaseTag": "Public",
          "name": "DefaultCharterDatumArgs",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 10
          }
        },
        {
          "kind": "Class",
          "canonicalReference": "@donecollectively/stellar-contracts!DefaultMinter:class",
          "docComment": "/**\n * A basic minting validator serving a Capo's family of contract scripts\n *\n * @remarks\n *\n * Mints charter tokens based on seed UTxOs. Can also mint UUTs and other tokens as approved by the Capo's minting delegate.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class DefaultMinter extends "
            },
            {
              "kind": "Reference",
              "text": "StellarContract",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarContract:class"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "BasicMinterParams",
              "canonicalReference": "@donecollectively/stellar-contracts!~BasicMinterParams:type"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": " implements "
            },
            {
              "kind": "Reference",
              "text": "MinterBaseMethods",
              "canonicalReference": "@donecollectively/stellar-contracts!~MinterBaseMethods:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/minting/DefaultMinter.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "DefaultMinter",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!DefaultMinter#charterTokenAsValue:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get charterTokenAsValue(): "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "@hyperionbt/helios!Value:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "charterTokenAsValue",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!DefaultMinter#charterTokenAsValuesEntry:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get charterTokenAsValuesEntry(): "
                },
                {
                  "kind": "Reference",
                  "text": "valuesEntry",
                  "canonicalReference": "@donecollectively/stellar-contracts!valuesEntry:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "charterTokenAsValuesEntry",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!DefaultMinter#contractSource:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "contractSource(): "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "contractSource"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!DefaultMinter#getContractScriptParams:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getContractScriptParams(config: "
                },
                {
                  "kind": "Reference",
                  "text": "BasicMinterParams",
                  "canonicalReference": "@donecollectively/stellar-contracts!~BasicMinterParams:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "configBase",
                  "canonicalReference": "@donecollectively/stellar-contracts!paramsBase:type"
                },
                {
                  "kind": "Content",
                  "text": " & "
                },
                {
                  "kind": "Reference",
                  "text": "SeedTxnParams",
                  "canonicalReference": "@donecollectively/stellar-contracts!SeedTxnParams:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "config",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "getContractScriptParams"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!DefaultMinter#importModules:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "importModules(): "
                },
                {
                  "kind": "Reference",
                  "text": "HeliosModuleSrc",
                  "canonicalReference": "@donecollectively/stellar-contracts!HeliosModuleSrc:type"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "importModules"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!DefaultMinter#mintingCharter:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "protected mintingCharter({ owner }: "
                },
                {
                  "kind": "Reference",
                  "text": "MintCharterActivityArgs",
                  "canonicalReference": "@donecollectively/stellar-contracts!~MintCharterActivityArgs:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "isActivity",
                  "canonicalReference": "@donecollectively/stellar-contracts!isActivity:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": true,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "{ owner }",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "mintingCharter"
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!DefaultMinter#mintingPolicyHash:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get mintingPolicyHash(): "
                },
                {
                  "kind": "Reference",
                  "text": "MintingPolicyHash",
                  "canonicalReference": "@hyperionbt/helios!MintingPolicyHash:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "mintingPolicyHash",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!DefaultMinter#mintingUuts:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "protected mintingUuts({ seedTxn, "
                },
                {
                  "kind": "Reference",
                  "text": "seedIndex",
                  "canonicalReference": "@donecollectively/stellar-contracts!~__type#seedIndex"
                },
                {
                  "kind": "Content",
                  "text": ": sIdx, purposes, }: "
                },
                {
                  "kind": "Reference",
                  "text": "MintUutActivityArgs",
                  "canonicalReference": "@donecollectively/stellar-contracts!MintUutActivityArgs:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "isActivity",
                  "canonicalReference": "@donecollectively/stellar-contracts!isActivity:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": true,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "{ seedTxn, seedIndex: sIdx, purposes, }",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "mintingUuts"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!DefaultMinter#mkTxnMintingUuts:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "mkTxnMintingUuts<const purposes extends "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", existingTcx extends "
                },
                {
                  "kind": "Reference",
                  "text": "StellarTxnContext",
                  "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext:class"
                },
                {
                  "kind": "Content",
                  "text": "<any>"
                },
                {
                  "kind": "Content",
                  "text": ", const RM extends "
                },
                {
                  "kind": "Reference",
                  "text": "Record",
                  "canonicalReference": "!Record:type"
                },
                {
                  "kind": "Content",
                  "text": "<ROLES, purposes>"
                },
                {
                  "kind": "Content",
                  "text": ", const ROLES extends "
                },
                {
                  "kind": "Content",
                  "text": "keyof RM & string"
                },
                {
                  "kind": "Content",
                  "text": " = "
                },
                {
                  "kind": "Content",
                  "text": "string & keyof RM"
                },
                {
                  "kind": "Content",
                  "text": ">(initialTcx: "
                },
                {
                  "kind": "Content",
                  "text": "existingTcx"
                },
                {
                  "kind": "Content",
                  "text": ", uutPurposes: "
                },
                {
                  "kind": "Content",
                  "text": "purposes[]"
                },
                {
                  "kind": "Content",
                  "text": ", seedUtxo?: "
                },
                {
                  "kind": "Reference",
                  "text": "TxInput",
                  "canonicalReference": "@hyperionbt/helios!TxInput:class"
                },
                {
                  "kind": "Content",
                  "text": ", roles?: "
                },
                {
                  "kind": "Content",
                  "text": "RM"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "hasUutContext",
                  "canonicalReference": "@donecollectively/stellar-contracts!hasUutContext:type"
                },
                {
                  "kind": "Content",
                  "text": "<ROLES | purposes> & existingTcx>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "purposes",
                  "constraintTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "typeParameterName": "existingTcx",
                  "constraintTokenRange": {
                    "startIndex": 3,
                    "endIndex": 5
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "typeParameterName": "RM",
                  "constraintTokenRange": {
                    "startIndex": 6,
                    "endIndex": 8
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "typeParameterName": "ROLES",
                  "constraintTokenRange": {
                    "startIndex": 9,
                    "endIndex": 10
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 11,
                    "endIndex": 12
                  }
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 21,
                "endIndex": 25
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "initialTcx",
                  "parameterTypeTokenRange": {
                    "startIndex": 13,
                    "endIndex": 14
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "uutPurposes",
                  "parameterTypeTokenRange": {
                    "startIndex": 15,
                    "endIndex": 16
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "seedUtxo",
                  "parameterTypeTokenRange": {
                    "startIndex": 17,
                    "endIndex": 18
                  },
                  "isOptional": true
                },
                {
                  "parameterName": "roles",
                  "parameterTypeTokenRange": {
                    "startIndex": 19,
                    "endIndex": 20
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "mkTxnMintingUuts"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!DefaultMinter#tvCharter:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "tvCharter(): "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "@hyperionbt/helios!Value:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "tvCharter"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!DefaultMinter#txnMintingCharter:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "txnMintingCharter<TCX extends "
                },
                {
                  "kind": "Reference",
                  "text": "StellarTxnContext",
                  "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext:class"
                },
                {
                  "kind": "Content",
                  "text": "<any>"
                },
                {
                  "kind": "Content",
                  "text": ">(tcx: "
                },
                {
                  "kind": "Content",
                  "text": "TCX"
                },
                {
                  "kind": "Content",
                  "text": ", { owner, capoGov, mintDgt, }: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        owner: "
                },
                {
                  "kind": "Reference",
                  "text": "Address",
                  "canonicalReference": "@hyperionbt/helios!Address:class"
                },
                {
                  "kind": "Content",
                  "text": ";\n        capoGov: "
                },
                {
                  "kind": "Reference",
                  "text": "UutName",
                  "canonicalReference": "@donecollectively/stellar-contracts!UutName:class"
                },
                {
                  "kind": "Content",
                  "text": ";\n        mintDgt: "
                },
                {
                  "kind": "Reference",
                  "text": "UutName",
                  "canonicalReference": "@donecollectively/stellar-contracts!UutName:class"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<TCX & "
                },
                {
                  "kind": "Reference",
                  "text": "StellarTxnContext",
                  "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext:class"
                },
                {
                  "kind": "Content",
                  "text": "<any>>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "TCX",
                  "constraintTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 14,
                "endIndex": 18
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "tcx",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "{ owner, capoGov, mintDgt, }",
                  "parameterTypeTokenRange": {
                    "startIndex": 6,
                    "endIndex": 13
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "txnMintingCharter"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!DefaultMinter#txnWillMintUuts:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "txnWillMintUuts<const purposes extends "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", existingTcx extends "
                },
                {
                  "kind": "Reference",
                  "text": "StellarTxnContext",
                  "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext:class"
                },
                {
                  "kind": "Content",
                  "text": "<any>"
                },
                {
                  "kind": "Content",
                  "text": ", const RM extends "
                },
                {
                  "kind": "Reference",
                  "text": "Record",
                  "canonicalReference": "!Record:type"
                },
                {
                  "kind": "Content",
                  "text": "<ROLES, purposes>"
                },
                {
                  "kind": "Content",
                  "text": ", const ROLES extends "
                },
                {
                  "kind": "Content",
                  "text": "string & keyof RM"
                },
                {
                  "kind": "Content",
                  "text": " = "
                },
                {
                  "kind": "Content",
                  "text": "string & keyof RM"
                },
                {
                  "kind": "Content",
                  "text": ">(tcx: "
                },
                {
                  "kind": "Content",
                  "text": "existingTcx"
                },
                {
                  "kind": "Content",
                  "text": ", uutPurposes: "
                },
                {
                  "kind": "Content",
                  "text": "purposes[]"
                },
                {
                  "kind": "Content",
                  "text": ", seedUtxo: "
                },
                {
                  "kind": "Reference",
                  "text": "TxInput",
                  "canonicalReference": "@hyperionbt/helios!TxInput:class"
                },
                {
                  "kind": "Content",
                  "text": ", roles?: "
                },
                {
                  "kind": "Content",
                  "text": "RM"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "hasUutContext",
                  "canonicalReference": "@donecollectively/stellar-contracts!hasUutContext:type"
                },
                {
                  "kind": "Content",
                  "text": "<ROLES | purposes> & existingTcx>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "purposes",
                  "constraintTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "typeParameterName": "existingTcx",
                  "constraintTokenRange": {
                    "startIndex": 3,
                    "endIndex": 5
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "typeParameterName": "RM",
                  "constraintTokenRange": {
                    "startIndex": 6,
                    "endIndex": 8
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "typeParameterName": "ROLES",
                  "constraintTokenRange": {
                    "startIndex": 9,
                    "endIndex": 10
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 11,
                    "endIndex": 12
                  }
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 21,
                "endIndex": 25
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "tcx",
                  "parameterTypeTokenRange": {
                    "startIndex": 13,
                    "endIndex": 14
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "uutPurposes",
                  "parameterTypeTokenRange": {
                    "startIndex": 15,
                    "endIndex": 16
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "seedUtxo",
                  "parameterTypeTokenRange": {
                    "startIndex": 17,
                    "endIndex": 18
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "roles",
                  "parameterTypeTokenRange": {
                    "startIndex": 19,
                    "endIndex": 20
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "txnWillMintUuts"
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          },
          "implementsTokenRanges": [
            {
              "startIndex": 6,
              "endIndex": 7
            }
          ]
        },
        {
          "kind": "Function",
          "canonicalReference": "@donecollectively/stellar-contracts!defineRole:function(1)",
          "docComment": "/**\n * Creates a strongly-typed definition of a delegation role used in a Capo contract\n *\n * @remarks\n *\n * The definition ncludes the different strategy variants that can serve in that role.\n *\n * NOTE: all type parameters are inferred from the function params.\n *\n * @param uutBaseName - token-name prefix for the tokens connecting delegates for the role\n *\n * @param baseClass - each variant is expected to inherit from this base class\n *\n * @param variants - maps each strategy-variant name to a detailed {@link VariantStrategy} definition\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function defineRole<const UUTP extends "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ", SC extends "
            },
            {
              "kind": "Reference",
              "text": "StellarContract",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarContract:class"
            },
            {
              "kind": "Content",
              "text": "<any>"
            },
            {
              "kind": "Content",
              "text": ", const VMv extends "
            },
            {
              "kind": "Reference",
              "text": "RoleInfo",
              "canonicalReference": "@donecollectively/stellar-contracts!~RoleInfo_2:type"
            },
            {
              "kind": "Content",
              "text": "<SC, any, UUTP>[\"variants\"]"
            },
            {
              "kind": "Content",
              "text": ">(uutBaseName: "
            },
            {
              "kind": "Content",
              "text": "UUTP"
            },
            {
              "kind": "Content",
              "text": ", baseClass: "
            },
            {
              "kind": "Reference",
              "text": "stellarSubclass",
              "canonicalReference": "@donecollectively/stellar-contracts!stellarSubclass:type"
            },
            {
              "kind": "Content",
              "text": "<SC> & any"
            },
            {
              "kind": "Content",
              "text": ", variants: "
            },
            {
              "kind": "Content",
              "text": "VMv"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "RoleInfo",
              "canonicalReference": "@donecollectively/stellar-contracts!~RoleInfo_2:type"
            },
            {
              "kind": "Content",
              "text": "<SC, VMv, UUTP>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/delegation/RolesAndDelegates.ts",
          "returnTypeTokenRange": {
            "startIndex": 16,
            "endIndex": 18
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "uutBaseName",
              "parameterTypeTokenRange": {
                "startIndex": 9,
                "endIndex": 10
              },
              "isOptional": false
            },
            {
              "parameterName": "baseClass",
              "parameterTypeTokenRange": {
                "startIndex": 11,
                "endIndex": 13
              },
              "isOptional": false
            },
            {
              "parameterName": "variants",
              "parameterTypeTokenRange": {
                "startIndex": 14,
                "endIndex": 15
              },
              "isOptional": false
            }
          ],
          "typeParameters": [
            {
              "typeParameterName": "UUTP",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "SC",
              "constraintTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "VMv",
              "constraintTokenRange": {
                "startIndex": 6,
                "endIndex": 8
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "defineRole"
        },
        {
          "kind": "Function",
          "canonicalReference": "@donecollectively/stellar-contracts!delegateRoles:function(1)",
          "docComment": "/**\n * Standalone helper method defining a specific RoleMap; used in a Capo's delegateRoles() instance method\n *\n * @remarks\n *\n * Called with a set of literal role defintitions, the full type of the RoleMap is inferred.\n *\n * Use {@link defineRole}() to create each role entry\n *\n * @param roleMap - maps role-names to role-definitions\n *\n * @typeParam RM - inferred type of the `roleMap` param\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function delegateRoles<const RM extends "
            },
            {
              "kind": "Reference",
              "text": "RoleMap",
              "canonicalReference": "@donecollectively/stellar-contracts!RoleMap:type"
            },
            {
              "kind": "Content",
              "text": "<any>"
            },
            {
              "kind": "Content",
              "text": ">(roleMap: "
            },
            {
              "kind": "Content",
              "text": "RM"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "RoleMap",
              "canonicalReference": "@donecollectively/stellar-contracts!RoleMap:type"
            },
            {
              "kind": "Content",
              "text": "<RM>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/delegation/RolesAndDelegates.ts",
          "returnTypeTokenRange": {
            "startIndex": 6,
            "endIndex": 8
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "roleMap",
              "parameterTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 5
              },
              "isOptional": false
            }
          ],
          "typeParameters": [
            {
              "typeParameterName": "RM",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "delegateRoles"
        },
        {
          "kind": "Function",
          "canonicalReference": "@donecollectively/stellar-contracts!dumpAny:function(1)",
          "docComment": "/**\n * Converts any (supported) input arg to string\n *\n * @remarks\n *\n * more types to be supported TODO\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function dumpAny(x: "
            },
            {
              "kind": "Reference",
              "text": "Tx",
              "canonicalReference": "@hyperionbt/helios!Tx:class"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "StellarTxnContext",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext:class"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "Address",
              "canonicalReference": "@hyperionbt/helios!Address:class"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "Value",
              "canonicalReference": "@hyperionbt/helios!Value:class"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "TxOutput",
              "canonicalReference": "@hyperionbt/helios!TxOutput:class"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "TxInput",
              "canonicalReference": "@hyperionbt/helios!TxInput:class"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "TxInput",
              "canonicalReference": "@hyperionbt/helios!TxInput:class"
            },
            {
              "kind": "Content",
              "text": "[] | "
            },
            {
              "kind": "Reference",
              "text": "ByteArray",
              "canonicalReference": "@hyperionbt/helios!ByteArray:class"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "ByteArray",
              "canonicalReference": "@hyperionbt/helios!ByteArray:class"
            },
            {
              "kind": "Content",
              "text": "[] | "
            },
            {
              "kind": "Reference",
              "text": "ByteArrayData",
              "canonicalReference": "@hyperionbt/helios!ByteArrayData:class"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "ByteArrayData",
              "canonicalReference": "@hyperionbt/helios!ByteArrayData:class"
            },
            {
              "kind": "Content",
              "text": "[]"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/diagnostics.ts",
          "returnTypeTokenRange": {
            "startIndex": 24,
            "endIndex": 25
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "x",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 23
              },
              "isOptional": false
            }
          ],
          "name": "dumpAny"
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@donecollectively/stellar-contracts!ErrorMap:type",
          "docComment": "/**\n * Reveals errors found during delegate selection\n *\n * @remarks\n *\n * Each field name is mapped to an array of string error messages found on that field.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ErrorMap = "
            },
            {
              "kind": "Reference",
              "text": "Record",
              "canonicalReference": "!Record:type"
            },
            {
              "kind": "Content",
              "text": "<string, string[]>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/delegation/RolesAndDelegates.ts",
          "releaseTag": "Public",
          "name": "ErrorMap",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 3
          }
        },
        {
          "kind": "Function",
          "canonicalReference": "@donecollectively/stellar-contracts!errorMapAsString:function(1)",
          "docComment": "/**\n * Converts an Errors object to a string for onscreen presentation\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function errorMapAsString(em: "
            },
            {
              "kind": "Reference",
              "text": "ErrorMap",
              "canonicalReference": "@donecollectively/stellar-contracts!ErrorMap:type"
            },
            {
              "kind": "Content",
              "text": ", prefix?: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/diagnostics.ts",
          "returnTypeTokenRange": {
            "startIndex": 5,
            "endIndex": 6
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "em",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            },
            {
              "parameterName": "prefix",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": true
            }
          ],
          "name": "errorMapAsString"
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@donecollectively/stellar-contracts!hasAllUuts:type",
          "docComment": "/**\n * used for transaction-context state having specific uut-purposes\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type hasAllUuts<uutEntries extends "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": "> = "
            },
            {
              "kind": "Content",
              "text": "{\n    uuts: "
            },
            {
              "kind": "Reference",
              "text": "uutPurposeMap",
              "canonicalReference": "@donecollectively/stellar-contracts!uutPurposeMap:type"
            },
            {
              "kind": "Content",
              "text": "<uutEntries>;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/Capo.ts",
          "releaseTag": "Public",
          "name": "hasAllUuts",
          "typeParameters": [
            {
              "typeParameterName": "uutEntries",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 3,
            "endIndex": 6
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@donecollectively/stellar-contracts!hasBootstrappedConfig:type",
          "docComment": "/**\n * StellarTransactionContext exposing a bootstrapped Capo configuration\n *\n * @remarks\n *\n * During first-time setup of a Capo contract, its manifest configuration details should be captured for reproducibility, and this type allows the bootstrap transaction to expose that configuration.\n *\n * Capo's {@link Capo.mkTxnMintCharterToken | mkTxnMintCharterToken()} returns a transaction context of this type, with `state.bootstrappedConfig`;\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type hasBootstrappedConfig<CT extends "
            },
            {
              "kind": "Reference",
              "text": "CapoBaseConfig",
              "canonicalReference": "@donecollectively/stellar-contracts!~CapoBaseConfig:type"
            },
            {
              "kind": "Content",
              "text": "> = "
            },
            {
              "kind": "Reference",
              "text": "StellarTxnContext",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext:class"
            },
            {
              "kind": "Content",
              "text": "<{\n    bsc: CT;\n    bootstrappedConfig: any;\n}>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/Capo.ts",
          "releaseTag": "Public",
          "name": "hasBootstrappedConfig",
          "typeParameters": [
            {
              "typeParameterName": "CT",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 3,
            "endIndex": 5
          }
        },
        {
          "kind": "Function",
          "canonicalReference": "@donecollectively/stellar-contracts!hasReqts:function(1)",
          "docComment": "/**\n * Factory for type-safe requirements details for a unit of software\n *\n * @remarks\n *\n * return `hasReqts({... requirements})` from a requirements() or other method in a class, to express requirements using a standardized form that supports arbitrary amounts of detailed requirements with references to unit-test labels that can verify the impl details.\n *\n * You don't need to provide the type params or TS type annotations. `requirements() { return hasReqts({...yourReqts}) }` will work fine.\n *\n * See the {@link ReqtsMap} and {@link RequirementEntry} types for more details about expressing requirements.\n *\n * NOTE: Type parameters are inferred from the provided data structure\n *\n * @param reqtsMap - the ReqtsMap structure for the software unit\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function hasReqts<R extends "
            },
            {
              "kind": "Reference",
              "text": "ReqtsMap",
              "canonicalReference": "@donecollectively/stellar-contracts!ReqtsMap:type"
            },
            {
              "kind": "Content",
              "text": "<validReqts>"
            },
            {
              "kind": "Content",
              "text": ", const validReqts extends "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": " = "
            },
            {
              "kind": "Content",
              "text": "string & keyof R"
            },
            {
              "kind": "Content",
              "text": ">(reqtsMap: "
            },
            {
              "kind": "Content",
              "text": "R"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "ReqtsMap",
              "canonicalReference": "@donecollectively/stellar-contracts!ReqtsMap:type"
            },
            {
              "kind": "Content",
              "text": "<validReqts>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/Requirements.ts",
          "returnTypeTokenRange": {
            "startIndex": 10,
            "endIndex": 12
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "reqtsMap",
              "parameterTypeTokenRange": {
                "startIndex": 8,
                "endIndex": 9
              },
              "isOptional": false
            }
          ],
          "typeParameters": [
            {
              "typeParameterName": "R",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "validReqts",
              "constraintTokenRange": {
                "startIndex": 4,
                "endIndex": 5
              },
              "defaultTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              }
            }
          ],
          "name": "hasReqts"
        },
        {
          "kind": "Namespace",
          "canonicalReference": "@donecollectively/stellar-contracts!hasReqts:namespace",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare namespace hasReqts "
            }
          ],
          "fileUrlPath": "src/Requirements.ts",
          "releaseTag": "Public",
          "name": "hasReqts",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Variable",
              "canonicalReference": "@donecollectively/stellar-contracts!hasReqts.TODO:var",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "TODO: "
                },
                {
                  "kind": "Content",
                  "text": "unique symbol"
                }
              ],
              "isReadonly": false,
              "releaseTag": "Public",
              "name": "TODO",
              "variableTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ]
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@donecollectively/stellar-contracts!hasUutContext:type",
          "docComment": "/**\n * A txn context having specifically-purposed UUTs in its state\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type hasUutContext<uutEntries extends "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": "> = "
            },
            {
              "kind": "Reference",
              "text": "StellarTxnContext",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext:class"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "hasAllUuts",
              "canonicalReference": "@donecollectively/stellar-contracts!hasAllUuts:type"
            },
            {
              "kind": "Content",
              "text": "<uutEntries>>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/Capo.ts",
          "releaseTag": "Public",
          "name": "hasUutContext",
          "typeParameters": [
            {
              "typeParameterName": "uutEntries",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 3,
            "endIndex": 7
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@donecollectively/stellar-contracts!HeliosModuleSrc:type",
          "docComment": "/**\n * Properties for a Helios source file\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type HeliosModuleSrc = "
            },
            {
              "kind": "Content",
              "text": "string & {\n    srcFile: string;\n    purpose: string;\n    moduleName: string;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/HeliosModuleSrc.ts",
          "releaseTag": "Public",
          "name": "HeliosModuleSrc",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Function",
          "canonicalReference": "@donecollectively/stellar-contracts!heliosRollupLoader:function(1)",
          "docComment": "/**\n * Rollup loader for Helios source files\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function heliosRollupLoader(opts?: "
            },
            {
              "kind": "Content",
              "text": "{\n    include: string;\n    exclude: never[];\n}"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "{\n    name: string;\n    transform(content: any, id: any): {\n        code: string;\n        map: {\n            mappings: string;\n        };\n    } | undefined;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/heliosRollupLoader.ts",
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "opts",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": true
            }
          ],
          "name": "heliosRollupLoader"
        },
        {
          "kind": "Function",
          "canonicalReference": "@donecollectively/stellar-contracts!hexToPrintableString:function(1)",
          "docComment": "/**\n * converts a hex string to a printable alternative, with no assumptions about the underlying data\n *\n * @remarks\n *\n * Unlike Helios' bytesToText, hexToPrintable() simply changes printable characters to characters, and represents non-printable characters in '‹XX›' format.\n *\n * @param  - ‹pName› - descr\n *\n * @typeParam  - ‹pName› - descr (for generic types)\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function hexToPrintableString(hexStr: "
            },
            {
              "kind": "Content",
              "text": "any"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/diagnostics.ts",
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "hexStr",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            }
          ],
          "name": "hexToPrintableString"
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@donecollectively/stellar-contracts!InlineDatum:type",
          "docComment": "/**\n * Inline Datum for contract outputs\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type InlineDatum = "
            },
            {
              "kind": "Reference",
              "text": "ReturnType",
              "canonicalReference": "!ReturnType:type"
            },
            {
              "kind": "Content",
              "text": "<typeof "
            },
            {
              "kind": "Reference",
              "text": "DatumInline",
              "canonicalReference": "@donecollectively/stellar-contracts!~DatumInline:var"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/HeliosPromotedTypes.ts",
          "releaseTag": "Public",
          "name": "InlineDatum",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "@donecollectively/stellar-contracts!insufficientInputError:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "insufficientInputError: "
            },
            {
              "kind": "Reference",
              "text": "RegExp",
              "canonicalReference": "!RegExp:interface"
            }
          ],
          "fileUrlPath": "src/testing/index.ts",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "insufficientInputError",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@donecollectively/stellar-contracts!isActivity:type",
          "docComment": "/**\n * a type for redeemer/activity-factory functions declared with \\@Activity.redeemer\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type isActivity = "
            },
            {
              "kind": "Content",
              "text": "{\n    redeemer: "
            },
            {
              "kind": "Reference",
              "text": "UplcDataValue",
              "canonicalReference": "@hyperionbt/helios!UplcDataValue:class"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "UplcData",
              "canonicalReference": "@hyperionbt/helios!UplcData:class"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/StellarContract.ts",
          "releaseTag": "Public",
          "name": "isActivity",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 6
          }
        },
        {
          "kind": "Function",
          "canonicalReference": "@donecollectively/stellar-contracts!lovelaceToAda:function(1)",
          "docComment": "/**\n * Converts lovelace to approximate ADA, in consumable 3-decimal form\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function lovelaceToAda(l: "
            },
            {
              "kind": "Content",
              "text": "bigint | number"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/diagnostics.ts",
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "l",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            }
          ],
          "name": "lovelaceToAda"
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@donecollectively/stellar-contracts!MintUutActivityArgs:type",
          "docComment": "/**\n * UUT minting should always use these settings to guard for uniqueness\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type MintUutActivityArgs = "
            },
            {
              "kind": "Content",
              "text": "{\n    seedTxn: "
            },
            {
              "kind": "Reference",
              "text": "TxId",
              "canonicalReference": "@hyperionbt/helios!TxId:class"
            },
            {
              "kind": "Content",
              "text": ";\n    seedIndex: bigint | number;\n    purposes: string[];\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/Capo.ts",
          "releaseTag": "Public",
          "name": "MintUutActivityArgs",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "Function",
          "canonicalReference": "@donecollectively/stellar-contracts!mkHeliosModule:function(1)",
          "docComment": "/**\n * Creates a String object from Helios source code, having additional properties about the helios source\n *\n * @remarks\n *\n * `srcFile`, `purpose`, and `moduleName` are parsed from the Helios source string using a simple regular expression.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function mkHeliosModule(src: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ", filename: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "HeliosModuleSrc",
              "canonicalReference": "@donecollectively/stellar-contracts!HeliosModuleSrc:type"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/HeliosModuleSrc.ts",
          "returnTypeTokenRange": {
            "startIndex": 5,
            "endIndex": 6
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "src",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            },
            {
              "parameterName": "filename",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": false
            }
          ],
          "name": "mkHeliosModule"
        },
        {
          "kind": "Function",
          "canonicalReference": "@donecollectively/stellar-contracts!mkUutValuesEntries:function(1)",
          "docComment": "/**\n * Creates Value-creation entires for a list of uuts\n *\n * @remarks\n *\n * returns a list of `entries` usable in Value's `[mph, entries[]]` tuple.\n *\n * @param uuts - a list of {@link UutName}s or a {@link uutPurposeMap}\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function mkUutValuesEntries(uuts: "
            },
            {
              "kind": "Reference",
              "text": "UutName",
              "canonicalReference": "@donecollectively/stellar-contracts!UutName:class"
            },
            {
              "kind": "Content",
              "text": "[]"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "valuesEntry",
              "canonicalReference": "@donecollectively/stellar-contracts!valuesEntry:type"
            },
            {
              "kind": "Content",
              "text": "[]"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/utils.ts",
          "returnTypeTokenRange": {
            "startIndex": 4,
            "endIndex": 6
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "uuts",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isOptional": false
            }
          ],
          "name": "mkUutValuesEntries"
        },
        {
          "kind": "Function",
          "canonicalReference": "@donecollectively/stellar-contracts!mkUutValuesEntries:function(2)",
          "docComment": "/**\n * *\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function mkUutValuesEntries(uuts: "
            },
            {
              "kind": "Reference",
              "text": "uutPurposeMap",
              "canonicalReference": "@donecollectively/stellar-contracts!uutPurposeMap:type"
            },
            {
              "kind": "Content",
              "text": "<any>"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "valuesEntry",
              "canonicalReference": "@donecollectively/stellar-contracts!valuesEntry:type"
            },
            {
              "kind": "Content",
              "text": "[]"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/utils.ts",
          "returnTypeTokenRange": {
            "startIndex": 4,
            "endIndex": 6
          },
          "releaseTag": "Public",
          "overloadIndex": 2,
          "parameters": [
            {
              "parameterName": "uuts",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isOptional": false
            }
          ],
          "name": "mkUutValuesEntries"
        },
        {
          "kind": "Function",
          "canonicalReference": "@donecollectively/stellar-contracts!mkValuesEntry:function(1)",
          "docComment": "/**\n * Creates a tuple usable in a Value, converting token-name to byte-array if needed\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function mkValuesEntry(tokenName: "
            },
            {
              "kind": "Content",
              "text": "string | number[]"
            },
            {
              "kind": "Content",
              "text": ", count: "
            },
            {
              "kind": "Content",
              "text": "bigint"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "valuesEntry",
              "canonicalReference": "@donecollectively/stellar-contracts!valuesEntry:type"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/utils.ts",
          "returnTypeTokenRange": {
            "startIndex": 5,
            "endIndex": 6
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "tokenName",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            },
            {
              "parameterName": "count",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": false
            }
          ],
          "name": "mkValuesEntry"
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@donecollectively/stellar-contracts!paramsBase:type",
          "docComment": "/**\n * Configuration details for StellarContract classes\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type configBase = "
            },
            {
              "kind": "Reference",
              "text": "Record",
              "canonicalReference": "!Record:type"
            },
            {
              "kind": "Content",
              "text": "<string, any>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/StellarContract.ts",
          "releaseTag": "Public",
          "name": "paramsBase",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 3
          }
        },
        {
          "kind": "Function",
          "canonicalReference": "@donecollectively/stellar-contracts!partialTxn:function(1)",
          "docComment": "/**\n * decorates functions that increment a transaction by adding needed details for a use-case\n *\n * @remarks\n *\n * Function names must follow the txn\\{...\\} naming convention. Typical partial-transaction names may describe the semantics of how the function augments the transaction. `txnAddSignatures` or `txnReceivePayment` could be example names following this guidance\n *\n * Partial transactions should have a \\<TCX extends StellarTxnContext\\<...\\>\\> type parameter, matched to its first function argument, and should return a type extending that same TCX, possibly with additional StellarTxnContext\\<...\\> type info.\n *\n * The TCX constraint can specify key requirements for an existing transaction context when that's relevant.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function partialTxn(proto: "
            },
            {
              "kind": "Content",
              "text": "any"
            },
            {
              "kind": "Content",
              "text": ", thingName: "
            },
            {
              "kind": "Content",
              "text": "any"
            },
            {
              "kind": "Content",
              "text": ", descriptor: "
            },
            {
              "kind": "Content",
              "text": "any"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "any"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/StellarContract.ts",
          "returnTypeTokenRange": {
            "startIndex": 7,
            "endIndex": 8
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "proto",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            },
            {
              "parameterName": "thingName",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": false
            },
            {
              "parameterName": "descriptor",
              "parameterTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "isOptional": false
            }
          ],
          "name": "partialTxn"
        },
        {
          "kind": "Function",
          "canonicalReference": "@donecollectively/stellar-contracts!policyIdAsString:function(1)",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function policyIdAsString(p: "
            },
            {
              "kind": "Reference",
              "text": "MintingPolicyHash",
              "canonicalReference": "@hyperionbt/helios!MintingPolicyHash:class"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/diagnostics.ts",
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "p",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            }
          ],
          "name": "policyIdAsString"
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@donecollectively/stellar-contracts!RelativeDelegateLink:type",
          "docComment": "/**\n * Minimal structure for connecting a specific Capo contract to a configured StellarDelegate\n *\n * @remarks\n *\n * This structure can always resolve to a reproducible delegate class (a {@link StellarDelegate}), given a specific Capo and roleName.\n *\n * When the delegate isn't backed by a specific on-chain contract script, the delegateValidatorHash is optional.\n *\n * @typeParam DT - the base class, to which all role-strategy variants conform\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type RelativeDelegateLink<DT extends "
            },
            {
              "kind": "Reference",
              "text": "StellarDelegate",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarDelegate:class"
            },
            {
              "kind": "Content",
              "text": "<any>"
            },
            {
              "kind": "Content",
              "text": "> = "
            },
            {
              "kind": "Content",
              "text": "{\n    uutName: string;\n    strategyName: string;\n    config: "
            },
            {
              "kind": "Reference",
              "text": "Partial",
              "canonicalReference": "!Partial:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "ConfigFor",
              "canonicalReference": "@donecollectively/stellar-contracts!ConfigFor:type"
            },
            {
              "kind": "Content",
              "text": "<DT>>;\n    delegateValidatorHash?: "
            },
            {
              "kind": "Reference",
              "text": "ValidatorHash",
              "canonicalReference": "@hyperionbt/helios!ValidatorHash:class"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/delegation/RolesAndDelegates.ts",
          "releaseTag": "Public",
          "name": "RelativeDelegateLink",
          "typeParameters": [
            {
              "typeParameterName": "DT",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 4,
            "endIndex": 11
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@donecollectively/stellar-contracts!ReqtsMap:type",
          "docComment": "/**\n * Describes the requirements for a unit of software\n *\n * @remarks\n *\n * A requirements map is a list of described requirements, in which each requirement has a synopsis, a description of its purpose, descriptive detail, and technical requirements for the mechanism used for implementation. The mech strings should be usable as unit-test titles.\n *\n * use the hasReqts() helper method to declare a type-safe set of requirements following this data structure.\n *\n * Each requirement also has space for nested 'requires', without the need for deeply nested data structures; these reference other requirements in the same hasReqts() data structure. As a result, high-level and detail- level requirements and 'impl' details can have progressive levels of detail.\n *\n * @typeParam reqts - the list of known requirement names. Implicitly detected by the hasReqts() helper.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ReqtsMap<validReqts extends "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": "> = "
            },
            {
              "kind": "Content",
              "text": "{\n    [reqtDescription in validReqts]: "
            },
            {
              "kind": "Reference",
              "text": "TODO_TYPE",
              "canonicalReference": "@donecollectively/stellar-contracts!~TODO_TYPE:type"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "RequirementEntry",
              "canonicalReference": "@donecollectively/stellar-contracts!RequirementEntry:type"
            },
            {
              "kind": "Content",
              "text": "<validReqts>;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/Requirements.ts",
          "releaseTag": "Public",
          "name": "ReqtsMap",
          "typeParameters": [
            {
              "typeParameterName": "validReqts",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 3,
            "endIndex": 8
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@donecollectively/stellar-contracts!RequirementEntry:type",
          "docComment": "/**\n * Documents one specific requirement\n *\n * @remarks\n *\n * Describes the purpose, details, and implementation mechanism for a single requirement for a unit of software.\n *\n * Also references any other requirements in the host ReqtsMap structure, whose behavior this requirement depends on. The details of those other dependencies, are delegated entirely to the other requirement, facilitating narrowly-focused capture of for key expectations within each individual semantic expectation of a software unit's behavior.\n *\n * @typeParam reqts - constrains `requires` entries to the list of requirements in the host ReqtsMap structure\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type RequirementEntry<reqts extends "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": "> = "
            },
            {
              "kind": "Content",
              "text": "{\n    purpose: string;\n    details: string[];\n    mech: string[];\n    impl?: string;\n    requires?: reqts[];\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/Requirements.ts",
          "releaseTag": "Public",
          "name": "RequirementEntry",
          "typeParameters": [
            {
              "typeParameterName": "reqts",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@donecollectively/stellar-contracts!RoleMap:type",
          "docComment": "/**\n * Richly-typed structure that can capture the various delegation roles available in a Capo contract\n *\n * @remarks\n *\n * Defined in a delegateRoles() method using the standalone delegateRoles() and defineRole() helper functions.\n *\n * @typeParam KR - deep, strong type of the role map - always inferred by delegateRoles() helper.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type RoleMap<KR extends "
            },
            {
              "kind": "Reference",
              "text": "Record",
              "canonicalReference": "!Record:type"
            },
            {
              "kind": "Content",
              "text": "<string, "
            },
            {
              "kind": "Reference",
              "text": "RoleInfo",
              "canonicalReference": "@donecollectively/stellar-contracts!~RoleInfo_2:type"
            },
            {
              "kind": "Content",
              "text": "<any, any, any, any>>"
            },
            {
              "kind": "Content",
              "text": "> = "
            },
            {
              "kind": "Content",
              "text": "{\n    [roleName in keyof KR]: KR[roleName];\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/delegation/RolesAndDelegates.ts",
          "releaseTag": "Public",
          "name": "RoleMap",
          "typeParameters": [
            {
              "typeParameterName": "KR",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 6,
            "endIndex": 7
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@donecollectively/stellar-contracts!SeedTxnParams:type",
          "docComment": "/**\n * details of seed transaction\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type SeedTxnParams = "
            },
            {
              "kind": "Content",
              "text": "{\n    seedTxn: "
            },
            {
              "kind": "Reference",
              "text": "TxId",
              "canonicalReference": "@hyperionbt/helios!TxId:class"
            },
            {
              "kind": "Content",
              "text": ";\n    seedIndex: bigint;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/SeedTxn.ts",
          "releaseTag": "Public",
          "name": "SeedTxnParams",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@donecollectively/stellar-contracts!StellarConstructorArgs:type",
          "docComment": "/**\n * Initializes a stellar contract class\n *\n * @remarks\n *\n * Includes network and other standard setup details, and any configuration needed for the specific class.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type StellarConstructorArgs<CT extends "
            },
            {
              "kind": "Reference",
              "text": "configBase",
              "canonicalReference": "@donecollectively/stellar-contracts!paramsBase:type"
            },
            {
              "kind": "Content",
              "text": "> = "
            },
            {
              "kind": "Content",
              "text": "{\n    setup: "
            },
            {
              "kind": "Reference",
              "text": "SetupDetails",
              "canonicalReference": "@donecollectively/stellar-contracts!~SetupDetails:type"
            },
            {
              "kind": "Content",
              "text": ";\n    config?: CT;\n    partialConfig?: "
            },
            {
              "kind": "Reference",
              "text": "Partial",
              "canonicalReference": "!Partial:type"
            },
            {
              "kind": "Content",
              "text": "<CT>;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/StellarContract.ts",
          "releaseTag": "Public",
          "name": "StellarConstructorArgs",
          "typeParameters": [
            {
              "typeParameterName": "CT",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 3,
            "endIndex": 8
          }
        },
        {
          "kind": "Class",
          "canonicalReference": "@donecollectively/stellar-contracts!StellarContract:class",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class StellarContract<ConfigType extends "
            },
            {
              "kind": "Reference",
              "text": "configBase",
              "canonicalReference": "@donecollectively/stellar-contracts!paramsBase:type"
            },
            {
              "kind": "Content",
              "text": "> "
            }
          ],
          "fileUrlPath": "src/StellarContract.ts",
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "ConfigType",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "isAbstract": false,
          "name": "StellarContract",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarContract#_infoBackToUtxo:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "protected _infoBackToUtxo({ u }: "
                },
                {
                  "kind": "Reference",
                  "text": "utxoInfo",
                  "canonicalReference": "@donecollectively/stellar-contracts!~utxoInfo:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "TxInput",
                  "canonicalReference": "@hyperionbt/helios!TxInput:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": true,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "{ u }",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "_infoBackToUtxo"
            },
            {
              "kind": "Constructor",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarContract:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `StellarContract` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(args: "
                },
                {
                  "kind": "Reference",
                  "text": "StellarConstructorArgs",
                  "canonicalReference": "@donecollectively/stellar-contracts!StellarConstructorArgs:type"
                },
                {
                  "kind": "Content",
                  "text": "<ConfigType>"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "args",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                }
              ]
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarContract#ADA:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ADA(n: "
                },
                {
                  "kind": "Content",
                  "text": "bigint | number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "bigint"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "n",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "ADA"
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarContract#address:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get address(): "
                },
                {
                  "kind": "Reference",
                  "text": "Address",
                  "canonicalReference": "@hyperionbt/helios!Address:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "address",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarContract#addStrellaWithConfig:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "addStrellaWithConfig<SC extends "
                },
                {
                  "kind": "Reference",
                  "text": "StellarContract",
                  "canonicalReference": "@donecollectively/stellar-contracts!StellarContract:class"
                },
                {
                  "kind": "Content",
                  "text": "<any>"
                },
                {
                  "kind": "Content",
                  "text": ">(TargetClass: "
                },
                {
                  "kind": "Content",
                  "text": "new (a: SC extends "
                },
                {
                  "kind": "Reference",
                  "text": "StellarContract",
                  "canonicalReference": "@donecollectively/stellar-contracts!StellarContract:class"
                },
                {
                  "kind": "Content",
                  "text": "<any> ? "
                },
                {
                  "kind": "Reference",
                  "text": "StellarConstructorArgs",
                  "canonicalReference": "@donecollectively/stellar-contracts!StellarConstructorArgs:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "ConfigFor",
                  "canonicalReference": "@donecollectively/stellar-contracts!ConfigFor:type"
                },
                {
                  "kind": "Content",
                  "text": "<SC>> : never) => SC"
                },
                {
                  "kind": "Content",
                  "text": ", config: "
                },
                {
                  "kind": "Content",
                  "text": "SC extends "
                },
                {
                  "kind": "Reference",
                  "text": "StellarContract",
                  "canonicalReference": "@donecollectively/stellar-contracts!StellarContract:class"
                },
                {
                  "kind": "Content",
                  "text": "<infer iCT> ? iCT : never"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "SC"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "SC",
                  "constraintTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 16,
                "endIndex": 17
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "TargetClass",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 11
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "config",
                  "parameterTypeTokenRange": {
                    "startIndex": 12,
                    "endIndex": 15
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "addStrellaWithConfig"
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarContract#compiledScript:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "compiledScript: "
                },
                {
                  "kind": "Reference",
                  "text": "UplcProgram",
                  "canonicalReference": "@hyperionbt/helios!UplcProgram:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "compiledScript",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarContract#configIn:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "configIn?: "
                },
                {
                  "kind": "Content",
                  "text": "ConfigType"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "configIn",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarContract#contractParams:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "contractParams?: "
                },
                {
                  "kind": "Reference",
                  "text": "configBase",
                  "canonicalReference": "@donecollectively/stellar-contracts!paramsBase:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "contractParams",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarContract#contractSource:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "contractSource(): "
                },
                {
                  "kind": "Content",
                  "text": "string | never"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "contractSource"
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarContract#datumType:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get datumType(): "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "datumType",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarContract.defaultParams:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static get defaultParams(): "
                },
                {
                  "kind": "Content",
                  "text": "{}"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "defaultParams",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": true,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarContract#delegateAddrHint:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "delegateAddrHint(): "
                },
                {
                  "kind": "Reference",
                  "text": "Address",
                  "canonicalReference": "@hyperionbt/helios!Address:class"
                },
                {
                  "kind": "Content",
                  "text": "[] | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "delegateAddrHint"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarContract#delegateReqdAddress:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "delegateReqdAddress(): "
                },
                {
                  "kind": "Content",
                  "text": "false | "
                },
                {
                  "kind": "Reference",
                  "text": "Address",
                  "canonicalReference": "@hyperionbt/helios!Address:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "delegateReqdAddress"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarContract#findActorUtxo:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "findActorUtxo(name: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", predicate: "
                },
                {
                  "kind": "Content",
                  "text": "(u: "
                },
                {
                  "kind": "Reference",
                  "text": "TxInput",
                  "canonicalReference": "@hyperionbt/helios!TxInput:class"
                },
                {
                  "kind": "Content",
                  "text": ") => "
                },
                {
                  "kind": "Reference",
                  "text": "TxInput",
                  "canonicalReference": "@hyperionbt/helios!TxInput:class"
                },
                {
                  "kind": "Content",
                  "text": " | undefined"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "TxInput",
                  "canonicalReference": "@hyperionbt/helios!TxInput:class"
                },
                {
                  "kind": "Content",
                  "text": " | undefined>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 9,
                "endIndex": 13
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "name",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "predicate",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 8
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "findActorUtxo"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarContract#findAnySpareUtxos:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "findAnySpareUtxos(tcx: "
                },
                {
                  "kind": "Reference",
                  "text": "StellarTxnContext",
                  "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "TxInput",
                  "canonicalReference": "@hyperionbt/helios!TxInput:class"
                },
                {
                  "kind": "Content",
                  "text": "[] | never>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "tcx",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "findAnySpareUtxos"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarContract#findChangeAddr:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "findChangeAddr(): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Address",
                  "canonicalReference": "@hyperionbt/helios!Address:class"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "findChangeAddr"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarContract#findSmallestUnusedUtxo:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "findSmallestUnusedUtxo(lovelace: "
                },
                {
                  "kind": "Content",
                  "text": "bigint"
                },
                {
                  "kind": "Content",
                  "text": ", utxos: "
                },
                {
                  "kind": "Reference",
                  "text": "TxInput",
                  "canonicalReference": "@hyperionbt/helios!TxInput:class"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ", tcx?: "
                },
                {
                  "kind": "Reference",
                  "text": "StellarTxnContext",
                  "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "TxInput",
                  "canonicalReference": "@hyperionbt/helios!TxInput:class"
                },
                {
                  "kind": "Content",
                  "text": " | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 8,
                "endIndex": 10
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "lovelace",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "utxos",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 5
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "tcx",
                  "parameterTypeTokenRange": {
                    "startIndex": 6,
                    "endIndex": 7
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "findSmallestUnusedUtxo"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarContract#getContractScriptParams:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getContractScriptParams(config: "
                },
                {
                  "kind": "Content",
                  "text": "ConfigType"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "configBase",
                  "canonicalReference": "@donecollectively/stellar-contracts!paramsBase:type"
                },
                {
                  "kind": "Content",
                  "text": " & "
                },
                {
                  "kind": "Reference",
                  "text": "Partial",
                  "canonicalReference": "!Partial:type"
                },
                {
                  "kind": "Content",
                  "text": "<ConfigType>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "config",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "getContractScriptParams"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarContract#hasMyUtxo:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "hasMyUtxo(semanticName: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", predicate: "
                },
                {
                  "kind": "Reference",
                  "text": "utxoPredicate",
                  "canonicalReference": "@donecollectively/stellar-contracts!utxoPredicate:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "TxInput",
                  "canonicalReference": "@hyperionbt/helios!TxInput:class"
                },
                {
                  "kind": "Content",
                  "text": " | undefined>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "semanticName",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "predicate",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "hasMyUtxo"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarContract#hasOnlyAda:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "hasOnlyAda(value: "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "@hyperionbt/helios!Value:class"
                },
                {
                  "kind": "Content",
                  "text": ", tcx: "
                },
                {
                  "kind": "Reference",
                  "text": "StellarTxnContext",
                  "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext:class"
                },
                {
                  "kind": "Content",
                  "text": " | undefined"
                },
                {
                  "kind": "Content",
                  "text": ", u: "
                },
                {
                  "kind": "Reference",
                  "text": "TxInput",
                  "canonicalReference": "@hyperionbt/helios!TxInput:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "TxInput",
                  "canonicalReference": "@hyperionbt/helios!TxInput:class"
                },
                {
                  "kind": "Content",
                  "text": " | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 8,
                "endIndex": 10
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "value",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "tcx",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 5
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "u",
                  "parameterTypeTokenRange": {
                    "startIndex": 6,
                    "endIndex": 7
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "hasOnlyAda"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarContract#hasUtxo:member(1)",
              "docComment": "/**\n * Try finding a utxo matching a predicate\n *\n * @remarks\n *\n * Finds the first matching utxo, if any, either in the indicated search-scope's `wallet` or `address`.\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "hasUtxo(semanticName: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", predicate: "
                },
                {
                  "kind": "Reference",
                  "text": "utxoPredicate",
                  "canonicalReference": "@donecollectively/stellar-contracts!utxoPredicate:type"
                },
                {
                  "kind": "Content",
                  "text": ", { address, wallet, exceptInTcx }: "
                },
                {
                  "kind": "Reference",
                  "text": "UtxoSearchScope",
                  "canonicalReference": "@donecollectively/stellar-contracts!~UtxoSearchScope:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "TxInput",
                  "canonicalReference": "@hyperionbt/helios!TxInput:class"
                },
                {
                  "kind": "Content",
                  "text": " | undefined>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 11
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "semanticName",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "predicate",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "{ address, wallet, exceptInTcx }",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "hasUtxo"
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarContract#identity:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get identity(): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "identity",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarContract#importModules:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "importModules(): "
                },
                {
                  "kind": "Reference",
                  "text": "HeliosModuleSrc",
                  "canonicalReference": "@donecollectively/stellar-contracts!HeliosModuleSrc:type"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "importModules"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarContract#loadProgramScript:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "loadProgramScript(params?: "
                },
                {
                  "kind": "Reference",
                  "text": "Partial",
                  "canonicalReference": "!Partial:type"
                },
                {
                  "kind": "Content",
                  "text": "<ConfigType>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Program",
                  "canonicalReference": "@hyperionbt/helios!Program:class"
                },
                {
                  "kind": "Content",
                  "text": " | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "params",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "loadProgramScript"
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarContract#mintingPolicyHash:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get mintingPolicyHash(): "
                },
                {
                  "kind": "Reference",
                  "text": "MintingPolicyHash",
                  "canonicalReference": "@hyperionbt/helios!MintingPolicyHash:class"
                },
                {
                  "kind": "Content",
                  "text": " | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "mintingPolicyHash",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarContract#mkAssetValue:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "mkAssetValue(tokenId: "
                },
                {
                  "kind": "Reference",
                  "text": "AssetClass",
                  "canonicalReference": "@hyperionbt/helios!AssetClass:class"
                },
                {
                  "kind": "Content",
                  "text": ", count?: "
                },
                {
                  "kind": "Content",
                  "text": "bigint"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "@hyperionbt/helios!Value:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "tokenId",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "count",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "mkAssetValue"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarContract#mkMinAssetValue:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "mkMinAssetValue(tokenId: "
                },
                {
                  "kind": "Reference",
                  "text": "AssetClass",
                  "canonicalReference": "@hyperionbt/helios!AssetClass:class"
                },
                {
                  "kind": "Content",
                  "text": ", count?: "
                },
                {
                  "kind": "Content",
                  "text": "bigint"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "@hyperionbt/helios!Value:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "tokenId",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "count",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "mkMinAssetValue"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarContract#mkMinTv:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "mkMinTv(mph: "
                },
                {
                  "kind": "Reference",
                  "text": "MintingPolicyHash",
                  "canonicalReference": "@hyperionbt/helios!MintingPolicyHash:class"
                },
                {
                  "kind": "Content",
                  "text": ", tokenName: "
                },
                {
                  "kind": "Content",
                  "text": "string | "
                },
                {
                  "kind": "Reference",
                  "text": "UutName",
                  "canonicalReference": "@donecollectively/stellar-contracts!UutName:class"
                },
                {
                  "kind": "Content",
                  "text": " | number[]"
                },
                {
                  "kind": "Content",
                  "text": ", count?: "
                },
                {
                  "kind": "Content",
                  "text": "bigint"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "@hyperionbt/helios!Value:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 9,
                "endIndex": 10
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "mph",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "tokenName",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 6
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "count",
                  "parameterTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 8
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "mkMinTv"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarContract#mkTokenPredicate:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "mkTokenPredicate(val: "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "@hyperionbt/helios!Value:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "tokenPredicate",
                  "canonicalReference": "@donecollectively/stellar-contracts!~tokenPredicate:type"
                },
                {
                  "kind": "Content",
                  "text": "<any>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "val",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "mkTokenPredicate"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarContract#mkTokenPredicate:member(2)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "mkTokenPredicate(mph: "
                },
                {
                  "kind": "Reference",
                  "text": "MintingPolicyHash",
                  "canonicalReference": "@hyperionbt/helios!MintingPolicyHash:class"
                },
                {
                  "kind": "Content",
                  "text": ", tokenName: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", quantity?: "
                },
                {
                  "kind": "Content",
                  "text": "bigint"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "tokenPredicate",
                  "canonicalReference": "@donecollectively/stellar-contracts!~tokenPredicate:type"
                },
                {
                  "kind": "Content",
                  "text": "<any>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 2,
              "parameters": [
                {
                  "parameterName": "mph",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "tokenName",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "quantity",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "mkTokenPredicate"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarContract#mkTokenPredicate:member(3)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "mkTokenPredicate(vOrMph: "
                },
                {
                  "kind": "Reference",
                  "text": "AssetClass",
                  "canonicalReference": "@hyperionbt/helios!AssetClass:class"
                },
                {
                  "kind": "Content",
                  "text": ", quantity?: "
                },
                {
                  "kind": "Content",
                  "text": "bigint"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "tokenPredicate",
                  "canonicalReference": "@donecollectively/stellar-contracts!~tokenPredicate:type"
                },
                {
                  "kind": "Content",
                  "text": "<any>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 3,
              "parameters": [
                {
                  "parameterName": "vOrMph",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "quantity",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "mkTokenPredicate"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarContract#mkValuePredicate:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "mkValuePredicate(lovelace: "
                },
                {
                  "kind": "Content",
                  "text": "bigint"
                },
                {
                  "kind": "Content",
                  "text": ", tcx?: "
                },
                {
                  "kind": "Reference",
                  "text": "StellarTxnContext",
                  "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "tokenPredicate",
                  "canonicalReference": "@donecollectively/stellar-contracts!~tokenPredicate:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "TxInput",
                  "canonicalReference": "@hyperionbt/helios!TxInput:class"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "lovelace",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "tcx",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "mkValuePredicate"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarContract#mustFindActorUtxo:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "mustFindActorUtxo(name: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", predicate: "
                },
                {
                  "kind": "Content",
                  "text": "(u: "
                },
                {
                  "kind": "Reference",
                  "text": "TxInput",
                  "canonicalReference": "@hyperionbt/helios!TxInput:class"
                },
                {
                  "kind": "Content",
                  "text": ") => "
                },
                {
                  "kind": "Reference",
                  "text": "TxInput",
                  "canonicalReference": "@hyperionbt/helios!TxInput:class"
                },
                {
                  "kind": "Content",
                  "text": " | undefined"
                },
                {
                  "kind": "Content",
                  "text": ", exceptInTcx: "
                },
                {
                  "kind": "Reference",
                  "text": "StellarTxnContext",
                  "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext:class"
                },
                {
                  "kind": "Content",
                  "text": "<any>"
                },
                {
                  "kind": "Content",
                  "text": ", extraErrorHint?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "TxInput",
                  "canonicalReference": "@hyperionbt/helios!TxInput:class"
                },
                {
                  "kind": "Content",
                  "text": " | never>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 14,
                "endIndex": 18
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "name",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "predicate",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 8
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "exceptInTcx",
                  "parameterTypeTokenRange": {
                    "startIndex": 9,
                    "endIndex": 11
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "extraErrorHint",
                  "parameterTypeTokenRange": {
                    "startIndex": 12,
                    "endIndex": 13
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "mustFindActorUtxo"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarContract#mustFindActorUtxo:member(2)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "mustFindActorUtxo(name: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", predicate: "
                },
                {
                  "kind": "Content",
                  "text": "(u: "
                },
                {
                  "kind": "Reference",
                  "text": "TxInput",
                  "canonicalReference": "@hyperionbt/helios!TxInput:class"
                },
                {
                  "kind": "Content",
                  "text": ") => "
                },
                {
                  "kind": "Reference",
                  "text": "TxInput",
                  "canonicalReference": "@hyperionbt/helios!TxInput:class"
                },
                {
                  "kind": "Content",
                  "text": " | undefined"
                },
                {
                  "kind": "Content",
                  "text": ", extraErrorHint?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "TxInput",
                  "canonicalReference": "@hyperionbt/helios!TxInput:class"
                },
                {
                  "kind": "Content",
                  "text": " | never>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 11,
                "endIndex": 15
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 2,
              "parameters": [
                {
                  "parameterName": "name",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "predicate",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 8
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "extraErrorHint",
                  "parameterTypeTokenRange": {
                    "startIndex": 9,
                    "endIndex": 10
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "mustFindActorUtxo"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarContract#mustFindMyUtxo:member(1)",
              "docComment": "/**\n * Locates a UTxO locked in a validator contract address\n *\n * @remarks\n *\n * Throws an error if no matching UTxO can be found\n *\n * @param semanticName - descriptive name; used in diagnostic messages and any errors thrown\n *\n * @param predicate - filter function; returns its utxo if it matches expectations\n *\n * @param exceptInTcx - any utxos already in the transaction context are disregarded and not passed to the predicate function\n *\n * @param extraErrorHint - user- or developer-facing guidance for guiding them to deal with the miss\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "mustFindMyUtxo(semanticName: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", predicate: "
                },
                {
                  "kind": "Content",
                  "text": "(u: "
                },
                {
                  "kind": "Reference",
                  "text": "TxInput",
                  "canonicalReference": "@hyperionbt/helios!TxInput:class"
                },
                {
                  "kind": "Content",
                  "text": ") => "
                },
                {
                  "kind": "Reference",
                  "text": "TxInput",
                  "canonicalReference": "@hyperionbt/helios!TxInput:class"
                },
                {
                  "kind": "Content",
                  "text": " | undefined"
                },
                {
                  "kind": "Content",
                  "text": ", exceptInTcx: "
                },
                {
                  "kind": "Reference",
                  "text": "StellarTxnContext",
                  "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext:class"
                },
                {
                  "kind": "Content",
                  "text": "<any>"
                },
                {
                  "kind": "Content",
                  "text": ", extraErrorHint?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "TxInput",
                  "canonicalReference": "@hyperionbt/helios!TxInput:class"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 14,
                "endIndex": 18
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "semanticName",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "predicate",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 8
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "exceptInTcx",
                  "parameterTypeTokenRange": {
                    "startIndex": 9,
                    "endIndex": 11
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "extraErrorHint",
                  "parameterTypeTokenRange": {
                    "startIndex": 12,
                    "endIndex": 13
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "mustFindMyUtxo"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarContract#mustFindMyUtxo:member(2)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "mustFindMyUtxo(semanticName: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", predicate: "
                },
                {
                  "kind": "Content",
                  "text": "(u: "
                },
                {
                  "kind": "Reference",
                  "text": "TxInput",
                  "canonicalReference": "@hyperionbt/helios!TxInput:class"
                },
                {
                  "kind": "Content",
                  "text": ") => "
                },
                {
                  "kind": "Reference",
                  "text": "TxInput",
                  "canonicalReference": "@hyperionbt/helios!TxInput:class"
                },
                {
                  "kind": "Content",
                  "text": " | undefined"
                },
                {
                  "kind": "Content",
                  "text": ", extraErrorHint?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "TxInput",
                  "canonicalReference": "@hyperionbt/helios!TxInput:class"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 11,
                "endIndex": 15
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 2,
              "parameters": [
                {
                  "parameterName": "semanticName",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "predicate",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 8
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "extraErrorHint",
                  "parameterTypeTokenRange": {
                    "startIndex": 9,
                    "endIndex": 10
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "mustFindMyUtxo"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarContract#mustFindUtxo:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "mustFindUtxo(semanticName: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", predicate: "
                },
                {
                  "kind": "Content",
                  "text": "(u: "
                },
                {
                  "kind": "Reference",
                  "text": "TxInput",
                  "canonicalReference": "@hyperionbt/helios!TxInput:class"
                },
                {
                  "kind": "Content",
                  "text": ") => "
                },
                {
                  "kind": "Reference",
                  "text": "TxInput",
                  "canonicalReference": "@hyperionbt/helios!TxInput:class"
                },
                {
                  "kind": "Content",
                  "text": " | undefined"
                },
                {
                  "kind": "Content",
                  "text": ", searchScope: "
                },
                {
                  "kind": "Reference",
                  "text": "UtxoSearchScope",
                  "canonicalReference": "@donecollectively/stellar-contracts!~UtxoSearchScope:type"
                },
                {
                  "kind": "Content",
                  "text": ", extraErrorHint?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "TxInput",
                  "canonicalReference": "@hyperionbt/helios!TxInput:class"
                },
                {
                  "kind": "Content",
                  "text": " | never>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 13,
                "endIndex": 17
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "semanticName",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "predicate",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 8
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "searchScope",
                  "parameterTypeTokenRange": {
                    "startIndex": 9,
                    "endIndex": 10
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "extraErrorHint",
                  "parameterTypeTokenRange": {
                    "startIndex": 11,
                    "endIndex": 12
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "mustFindUtxo"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarContract#mustGetActivity:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "mustGetActivity(activityName: "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "activityName",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "mustGetActivity"
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarContract#myActor:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "myActor?: "
                },
                {
                  "kind": "Reference",
                  "text": "Wallet",
                  "canonicalReference": "@hyperionbt/helios!Wallet:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "myActor",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarContract#network:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "network: "
                },
                {
                  "kind": "Reference",
                  "text": "Network",
                  "canonicalReference": "@hyperionbt/helios!Network:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "network",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarContract#networkParams:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "networkParams: "
                },
                {
                  "kind": "Reference",
                  "text": "NetworkParams",
                  "canonicalReference": "@hyperionbt/helios!NetworkParams:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "networkParams",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarContract#onChainActivitiesType:member",
              "docComment": "/**\n * returns the on-chain type for activites (\"redeemers\")\n *\n * @remarks\n *\n * returns the on-chain enum used for spending contract utxos or for different use-cases of minting (in a minting script). the returned type (and its enum variants) are suitable for off-chain txn-creation override `get onChainActivitiesName()` if needed to match your contract script.\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get onChainActivitiesType(): "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "onChainActivitiesType",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarContract#onChainDatumType:member",
              "docComment": "/**\n * returns the on-chain type for datum\n *\n * @remarks\n *\n * returns the on-chain enum used for attaching data (or data hashes) to contract utxos the returned type (and its enum variants) are suitable for off-chain txn-creation override `get scriptDatumName()` if needed to match your contract script.\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get onChainDatumType(): "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "onChainDatumType",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarContract#onChainTypes:member",
              "docComment": "/**\n * Returns all the types exposed by the contract script\n *\n * @remarks\n *\n * Passed directly from Helios; property names match contract's defined type names\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get onChainTypes(): "
                },
                {
                  "kind": "Content",
                  "text": "{\n        [x: string]: any;\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "onChainTypes",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarContract#outputsSentToDatum:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "outputsSentToDatum(datum: "
                },
                {
                  "kind": "Reference",
                  "text": "InlineDatum",
                  "canonicalReference": "@donecollectively/stellar-contracts!InlineDatum:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "TxInput",
                  "canonicalReference": "@hyperionbt/helios!TxInput:class"
                },
                {
                  "kind": "Content",
                  "text": "[]>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "datum",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "outputsSentToDatum"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarContract.parseConfig:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static parseConfig(rawJsonConfig: "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "rawJsonConfig",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "parseConfig"
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarContract#partialConfig:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "partialConfig?: "
                },
                {
                  "kind": "Reference",
                  "text": "Partial",
                  "canonicalReference": "!Partial:type"
                },
                {
                  "kind": "Content",
                  "text": "<ConfigType>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "partialConfig",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarContract#purpose:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get purpose(): "
                },
                {
                  "kind": "Reference",
                  "text": "scriptPurpose",
                  "canonicalReference": "@donecollectively/stellar-contracts!~scriptPurpose:type"
                },
                {
                  "kind": "Content",
                  "text": " | \"non-script\""
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "purpose",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarContract#readDatum:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readDatum<DPROPS extends "
                },
                {
                  "kind": "Reference",
                  "text": "anyDatumProps",
                  "canonicalReference": "@donecollectively/stellar-contracts!anyDatumProps:type"
                },
                {
                  "kind": "Content",
                  "text": ">(datumName: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", datum: "
                },
                {
                  "kind": "Reference",
                  "text": "Datum",
                  "canonicalReference": "@hyperionbt/helios!Datum:class"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "InlineDatum",
                  "canonicalReference": "@donecollectively/stellar-contracts!InlineDatum:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<DPROPS | undefined>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "DPROPS",
                  "constraintTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 9,
                "endIndex": 11
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "datumName",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "datum",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 8
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "readDatum"
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarContract#scriptActivitiesName:member",
              "docComment": "/**\n * identifies the enum used for activities (redeemers) in the Helios script\n *\n * @remarks\n *\n * Override this if your contract script uses a type name other than Activity.\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get scriptActivitiesName(): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "scriptActivitiesName",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarContract#scriptDatumName:member",
              "docComment": "/**\n * identifies the enum used for the script Datum\n *\n * @remarks\n *\n * Override this if your contract script uses a type name other than Datum.\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get scriptDatumName(): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "scriptDatumName",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarContract#scriptProgram:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "scriptProgram?: "
                },
                {
                  "kind": "Reference",
                  "text": "Program",
                  "canonicalReference": "@hyperionbt/helios!Program:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "scriptProgram",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarContract#setup:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "setup: "
                },
                {
                  "kind": "Reference",
                  "text": "SetupDetails",
                  "canonicalReference": "@donecollectively/stellar-contracts!~SetupDetails:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "setup",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarContract#submit:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "submit(tcx: "
                },
                {
                  "kind": "Reference",
                  "text": "StellarTxnContext",
                  "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext:class"
                },
                {
                  "kind": "Content",
                  "text": ", { signers, }?: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        signers?: "
                },
                {
                  "kind": "Reference",
                  "text": "Address",
                  "canonicalReference": "@hyperionbt/helios!Address:class"
                },
                {
                  "kind": "Content",
                  "text": "[];\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "helios.TxId",
                  "canonicalReference": "@hyperionbt/helios!TxId:class"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 11
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "tcx",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "{ signers, }",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 6
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "submit"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarContract#tokenAsValue:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "tokenAsValue(tokenName: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", quantity: "
                },
                {
                  "kind": "Content",
                  "text": "bigint"
                },
                {
                  "kind": "Content",
                  "text": ", mph?: "
                },
                {
                  "kind": "Reference",
                  "text": "MintingPolicyHash",
                  "canonicalReference": "@hyperionbt/helios!MintingPolicyHash:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "@hyperionbt/helios!Value:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "tokenName",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "quantity",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "mph",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "tokenAsValue"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarContract#totalValue:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "totalValue(utxos: "
                },
                {
                  "kind": "Reference",
                  "text": "TxInput",
                  "canonicalReference": "@hyperionbt/helios!TxInput:class"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "@hyperionbt/helios!Value:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "utxos",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "totalValue"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarContract#toUtxoId:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "toUtxoId(u: "
                },
                {
                  "kind": "Reference",
                  "text": "TxInput",
                  "canonicalReference": "@hyperionbt/helios!TxInput:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "u",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "toUtxoId"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarContract#txnKeepValue:member(1)",
              "docComment": "/**\n * Returns the indicated Value to the contract script\n *\n * @param tcx - transaction context\n *\n * @param value - a value already having minUtxo calculated\n *\n * @param datum - inline datum\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "txnKeepValue(tcx: "
                },
                {
                  "kind": "Reference",
                  "text": "StellarTxnContext",
                  "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext:class"
                },
                {
                  "kind": "Content",
                  "text": ", value: "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "@hyperionbt/helios!Value:class"
                },
                {
                  "kind": "Content",
                  "text": ", datum: "
                },
                {
                  "kind": "Reference",
                  "text": "InlineDatum",
                  "canonicalReference": "@donecollectively/stellar-contracts!InlineDatum:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "StellarTxnContext",
                  "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext:class"
                },
                {
                  "kind": "Content",
                  "text": "<{}>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "tcx",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "value",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "datum",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "txnKeepValue"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarContract#utxoSearchError:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "utxoSearchError(semanticName: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", searchScope: "
                },
                {
                  "kind": "Reference",
                  "text": "UtxoSearchScope",
                  "canonicalReference": "@donecollectively/stellar-contracts!~UtxoSearchScope:type"
                },
                {
                  "kind": "Content",
                  "text": ", extraErrorHint?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "semanticName",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "searchScope",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "extraErrorHint",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "utxoSearchError"
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarContract#wallet:member",
              "docComment": "/**\n * returns the wallet connection used by the current actor\n *\n * @remarks\n *\n * Throws an error if the strella contract facade has not been initialized with a wallet in settings.myActor\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get wallet(): "
                },
                {
                  "kind": "Reference",
                  "text": "helios.Wallet",
                  "canonicalReference": "@hyperionbt/helios!Wallet:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "wallet",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarContract#walletNetworkCheck:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "walletNetworkCheck?: "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "NetworkName",
                  "canonicalReference": "@donecollectively/stellar-contracts!~NetworkName:type"
                },
                {
                  "kind": "Content",
                  "text": "> | "
                },
                {
                  "kind": "Reference",
                  "text": "NetworkName",
                  "canonicalReference": "@donecollectively/stellar-contracts!~NetworkName:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "walletNetworkCheck",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 6
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            }
          ],
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "@donecollectively/stellar-contracts!StellarDelegate:class",
          "docComment": "/**\n * Base class for modules that can serve as Capo delegates\n *\n * @remarks\n *\n * establishes a base protocol for delegates.\n *\n * @typeParam CT - type of any specialized configuration; use capoDelegateConfig by default.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare abstract class StellarDelegate<CT extends "
            },
            {
              "kind": "Reference",
              "text": "configBase",
              "canonicalReference": "@donecollectively/stellar-contracts!paramsBase:type"
            },
            {
              "kind": "Content",
              "text": " & "
            },
            {
              "kind": "Reference",
              "text": "capoDelegateConfig",
              "canonicalReference": "@donecollectively/stellar-contracts!capoDelegateConfig:type"
            },
            {
              "kind": "Content",
              "text": " = "
            },
            {
              "kind": "Reference",
              "text": "capoDelegateConfig",
              "canonicalReference": "@donecollectively/stellar-contracts!capoDelegateConfig:type"
            },
            {
              "kind": "Content",
              "text": ", DCCT extends "
            },
            {
              "kind": "Reference",
              "text": "Record",
              "canonicalReference": "!Record:type"
            },
            {
              "kind": "Content",
              "text": "<string, any> | string"
            },
            {
              "kind": "Content",
              "text": " = "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": "> extends "
            },
            {
              "kind": "Reference",
              "text": "StellarContract",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarContract:class"
            },
            {
              "kind": "Content",
              "text": "<CT>"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/delegation/StellarDelegate.ts",
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "CT",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              },
              "defaultTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              }
            },
            {
              "typeParameterName": "DCCT",
              "constraintTokenRange": {
                "startIndex": 7,
                "endIndex": 9
              },
              "defaultTypeTokenRange": {
                "startIndex": 10,
                "endIndex": 11
              }
            }
          ],
          "isAbstract": true,
          "name": "StellarDelegate",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarDelegate#activityAuthorizing:member(1)",
              "docComment": "/**\n * redeemer for exercising the authority of this delegate via its authority UUT\n *\n * @remarks\n *\n * The Authorizing redeemer indicates that the delegate is authorizing (certain parts of) a transaction.\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "activityAuthorizing(): "
                },
                {
                  "kind": "Content",
                  "text": "{\n        redeemer: any;\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "activityAuthorizing"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarDelegate#activityRetiring:member(1)",
              "docComment": "/**\n * redeemer for spending the authority UUT for burning it.\n *\n * @remarks\n *\n * The Retiring redeemer indicates that the delegate is being removed.\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "activityRetiring(): "
                },
                {
                  "kind": "Content",
                  "text": "{\n        redeemer: any;\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "activityRetiring"
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarDelegate.currentRev:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static currentRev: "
                },
                {
                  "kind": "Content",
                  "text": "bigint"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "currentRev",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": true,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarDelegate.defaultParams:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static get defaultParams(): "
                },
                {
                  "kind": "Content",
                  "text": "{\n        rev: bigint;\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "defaultParams",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": true,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarDelegate#DelegateAddsAuthorityToken:member(1)",
              "docComment": "/**\n * Adds the delegate's authority token to a transaction\n *\n * @remarks\n *\n * Given a delegate already configured by a Capo, this method implements transaction-building logic needed to include the UUT into the `tcx`. the `utxo` is discovered by {@link StellarDelegate.DelegateMustFindAuthorityToken | DelegateMustFindAuthorityToken()}\n *\n * The default implementation adds the `uutxo` to the transaction using {@link StellarDelegate.activityAuthorizing | activityAuthorizing()}.\n *\n * The off-chain code shouldn't need to check the details; it can simply arrange the details properly and spend the delegate's authority token, using this method.\n *\n * ### Reliance on this delegate\n *\n * Other contract scripts can rely on the delegate script to have validated its on-chain policy and enforced its own \"return to the delegate script\" logic.\n *\n * ### Enforcing on-chain policy\n *\n * When spending the authority token in this way, the delegate's authority is typically narrowly scoped, and it's expected that the delegate's on-chain script validates that those parts of the transaction detail should be authorized, in accordance with the delegate's core purpose/responsbility - i.e. that the txn does all of what the delegate expects, and none of what it shouldn't do in that department.\n *\n * The on-chain code SHOULD typically enforce: * that the token is spent with Authorizing activity (redeemer). NOTE: the **CapoDelegateHelpers** helios module provides the `requiresDelegateAuthorizing()` function for just this purpose\n *\n * * that the authority token is returned to the contract with its datum unchanged * that any other tokens it may also hold in the same UTxO do not become inaccessible as a result of the transactions - perhaps by requiring them to be returned together with the authority token.\n *\n * It MAY enforce additional requirements as well.\n *\n * @param tcx - the transaction context\n *\n * @param utxo - the utxo having the authority UUT for this delegate\n *\n * @example\n *\n * A minting delegate should check that all the expected tokens are minted, AND that no other tokens are minted.\n *\n * @example\n *\n * A role-based authentication/signature-checking delegate can require an appropriate signature on the txn.\n *\n * @reqt\n *\n * Adds the uutxo to the transaction inputs with appropriate redeemer.\n *\n * @reqt\n *\n * Does not output the value; can EXPECT txnReceiveAuthorityToken to be called for that purpose.\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "protected DelegateAddsAuthorityToken<TCX extends "
                },
                {
                  "kind": "Reference",
                  "text": "StellarTxnContext",
                  "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext:class"
                },
                {
                  "kind": "Content",
                  "text": "<any>"
                },
                {
                  "kind": "Content",
                  "text": ">(tcx: "
                },
                {
                  "kind": "Content",
                  "text": "TCX"
                },
                {
                  "kind": "Content",
                  "text": ", uutxo: "
                },
                {
                  "kind": "Reference",
                  "text": "TxInput",
                  "canonicalReference": "@hyperionbt/helios!TxInput:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<TCX>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "TCX",
                  "constraintTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 8,
                "endIndex": 10
              },
              "releaseTag": "Public",
              "isProtected": true,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "tcx",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "uutxo",
                  "parameterTypeTokenRange": {
                    "startIndex": 6,
                    "endIndex": 7
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "DelegateAddsAuthorityToken"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarDelegate#DelegateMustFindAuthorityToken:member(1)",
              "docComment": "/**\n * Finds the delegate authority token, normally in the delegate's contract address\n *\n * @remarks\n *\n * The default implementation finds the UTxO having the authority token in the delegate's contract address.\n *\n * It's possible to have a delegate that doesn't have an on-chain contract script. ... in this case, the delegate should use this.{@link StellarDelegate.tvAuthorityToken | tvAuthorityToken()} and a delegate-specific heuristic to locate the needed token. It might consult the addrHint in its `configIn` or another technique for resolution.\n *\n * @param tcx - the transaction context\n *\n * @reqt\n *\n * It MUST resolve and return the UTxO (a TxInput type ready for spending) ... or throw an informative error\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "DelegateMustFindAuthorityToken(tcx: "
                },
                {
                  "kind": "Reference",
                  "text": "StellarTxnContext",
                  "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext:class"
                },
                {
                  "kind": "Content",
                  "text": "<any>"
                },
                {
                  "kind": "Content",
                  "text": ", label: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "TxInput",
                  "canonicalReference": "@hyperionbt/helios!TxInput:class"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 10
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "tcx",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "label",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "DelegateMustFindAuthorityToken"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarDelegate#delegateRequirements:member(1)",
              "docComment": "/**\n * Captures requirements as data\n *\n * @remarks\n *\n * see reqts structure\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "delegateRequirements(): "
                },
                {
                  "kind": "Content",
                  "text": "import(\"../Requirements.js\")."
                },
                {
                  "kind": "Reference",
                  "text": "ReqtsMap",
                  "canonicalReference": "@donecollectively/stellar-contracts!ReqtsMap:type"
                },
                {
                  "kind": "Content",
                  "text": "<\"provides an interface for providing arms-length proof of authority to any other contract\" | \"implementations SHOULD positively govern spend of the UUT\" | \"implementations MUST provide an essential interface for transaction-building\" | \"requires a txnReceiveAuthorityToken(tcx, delegateAddr, fromFoundUtxo?)\" | \"requires a mustFindAuthorityToken(tcx)\" | \"requires a txnGrantAuthority(tcx, delegateAddr, fromFoundUtxo)\" | \"requires txnRetireCred(tcx, fromFoundUtxo)\">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "delegateRequirements"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarDelegate#DelegateRetiresAuthorityToken:member(1)",
              "docComment": "/**\n * Adds any important transaction elemements supporting the authority token being retired, closing the delegate contracts' utxo.\n *\n * @remarks\n *\n * EXPECTS to receive a Utxo having the result of txnMustFindAuthorityToken()\n *\n * EXPECTS the `burn` instruction to be separately added to the transaction.\n *\n * The default implementation uses the conventional `Retiring` activity to spend the token.\n *\n * @param tcx - transaction context\n *\n * @param fromFoundUtxo - the utxo having the authority otken\n *\n * @reqt\n *\n * It MUST add the indicated utxo to the transaction as an input\n *\n * @reqt\n *\n * When backed by a contract: * it should use an activity/redeemer allowing the token to be spent **and NOT returned**. * the contract script SHOULD ensure any other UTXOs it may also hold, related to this delegation, do not become inaccessible as a result.\n *\n * It MAY enforce additional requirements and/or block the action.\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "protected DelegateRetiresAuthorityToken(tcx: "
                },
                {
                  "kind": "Reference",
                  "text": "StellarTxnContext",
                  "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext:class"
                },
                {
                  "kind": "Content",
                  "text": ", fromFoundUtxo: "
                },
                {
                  "kind": "Reference",
                  "text": "TxInput",
                  "canonicalReference": "@hyperionbt/helios!TxInput:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "StellarTxnContext",
                  "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext:class"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "isProtected": true,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "tcx",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "fromFoundUtxo",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "DelegateRetiresAuthorityToken"
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarDelegate#delegateValidatorHash:member",
              "docComment": "/**\n * returns the ValidatorHash of the delegate script, if relevant\n *\n * @remarks\n *\n * A delegate that doesn't use an on-chain validator should override this method and return undefined.\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get delegateValidatorHash(): "
                },
                {
                  "kind": "Reference",
                  "text": "ValidatorHash",
                  "canonicalReference": "@hyperionbt/helios!ValidatorHash:class"
                },
                {
                  "kind": "Content",
                  "text": " | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "delegateValidatorHash",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarDelegate#findActorAuthorityToken:member(1)",
              "docComment": "/**\n * Tries to locate the Delegates authority token in the user's wallet (ONLY for non-smart-contract delegates)\n *\n * @remarks\n *\n * Locates the authority token,if available the current user's wallet.\n *\n * If the token is located in a smart contract, this method will always return `undefined`.\n *\n * If the authority token is in a user wallet (not the same wallet as currently connected to the Capo contract class), it will return `undefined`.\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "findActorAuthorityToken(): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "TxInput",
                  "canonicalReference": "@hyperionbt/helios!TxInput:class"
                },
                {
                  "kind": "Content",
                  "text": " | undefined>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "findActorAuthorityToken"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarDelegate#findAuthorityToken:member(1)",
              "docComment": "/**\n * Finds the delegate authority token, normally in the delegate's contract address\n *\n * @remarks\n *\n * The default implementation finds the UTxO having the authority token in the delegate's contract address.\n *\n * It's possible to have a delegate that doesn't have an on-chain contract script. ... in this case, the delegate should use this.{@link StellarDelegate.tvAuthorityToken | tvAuthorityToken()} and a delegate-specific heuristic to locate the needed token. It might consult the addrHint in its `configIn` or another technique for resolution.\n *\n * @param tcx - the transaction context\n *\n * @reqt\n *\n * It MUST resolve and return the UTxO (a TxInput type ready for spending) ... or throw an informative error\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "findAuthorityToken(): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "TxInput",
                  "canonicalReference": "@hyperionbt/helios!TxInput:class"
                },
                {
                  "kind": "Content",
                  "text": " | undefined>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "findAuthorityToken"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarDelegate#mkAuthorityTokenPredicate:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "mkAuthorityTokenPredicate(): "
                },
                {
                  "kind": "Content",
                  "text": "((something: any) => any) & {\n        value: "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "@hyperionbt/helios!Value:class"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "mkAuthorityTokenPredicate"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarDelegate#mkDatumIsDelegation:member(1)",
              "docComment": "/**\n * creates the essential datum for a delegate UTxO\n *\n * @remarks\n *\n * Every delegate is expected to have a two-field 'IsDelegation' variant in the first position of its on-chain Datum type. This helper method constructs a suitable UplcData structure, given appropriate inputs.\n *\n * @param dd - Delegation details\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "mkDatumIsDelegation(dd: "
                },
                {
                  "kind": "Reference",
                  "text": "DelegationDetail",
                  "canonicalReference": "@donecollectively/stellar-contracts!~DelegationDetail:type"
                },
                {
                  "kind": "Content",
                  "text": ", ...args: "
                },
                {
                  "kind": "Content",
                  "text": "DCCT extends string ? [string] | [] : [DCCT]"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "InlineDatum",
                  "canonicalReference": "@donecollectively/stellar-contracts!InlineDatum:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "dd",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "args",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "mkDatumIsDelegation"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarDelegate#tvAuthorityToken:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "tvAuthorityToken(useMinTv?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "@hyperionbt/helios!Value:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "useMinTv",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "tvAuthorityToken"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarDelegate#txnGrantAuthority:member(1)",
              "docComment": "/**\n * Finds and adds the delegate's authority token to the transaction\n *\n * @remarks\n *\n * calls the delegate-specific DelegateAddsAuthorityToken() method, with the uut found by DelegateMustFindAuthorityToken().\n *\n * returns the token back to the contract using {@link txnReceiveAuthorityToken | txnReceiveAuthorityToken()}\n *\n * @param tcx - transaction context\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "txnGrantAuthority<TCX extends "
                },
                {
                  "kind": "Reference",
                  "text": "StellarTxnContext",
                  "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext:class"
                },
                {
                  "kind": "Content",
                  "text": "<any>"
                },
                {
                  "kind": "Content",
                  "text": ">(tcx: "
                },
                {
                  "kind": "Content",
                  "text": "TCX"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<TCX>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "TCX",
                  "constraintTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "tcx",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "txnGrantAuthority"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarDelegate#txnReceiveAuthorityToken:member(1)",
              "docComment": "/**\n * Standard delegate method for receiving the authority token as a txn output\n *\n * @remarks\n *\n * creates a UTxO / TxOutput, depositing the indicated token-name into the delegated destination.\n *\n * Each implemented subclass can use it's own style to match its strategy & mechanism, and is EXPECTED to use tcx.addOutput() to receive the indicated `tokenValue` into the contract or other destination address.\n *\n * This method is used both for the original deposit and for returning the token during a grant-of-authority.\n *\n * Impls should normally preserve the datum from an already-present sourceUtxo, possibly with evolved details.\n *\n * @param tcx - transaction-context\n *\n * @param tokenValue - the Value of the token that needs to be received. Always includes the minUtxo needed for this authority token\n *\n * @param fromFoundUtxo - always present when the authority token already existed; can be used to duplicate or iterate on an existing datum, or to include any additional Value in the new UTxO, to match the previous UTxO with minimal extra heuristics\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "abstract txnReceiveAuthorityToken<TCX extends "
                },
                {
                  "kind": "Reference",
                  "text": "StellarTxnContext",
                  "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext:class"
                },
                {
                  "kind": "Content",
                  "text": "<any>"
                },
                {
                  "kind": "Content",
                  "text": ">(tcx: "
                },
                {
                  "kind": "Content",
                  "text": "TCX"
                },
                {
                  "kind": "Content",
                  "text": ", tokenValue: "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "@hyperionbt/helios!Value:class"
                },
                {
                  "kind": "Content",
                  "text": ", fromFoundUtxo?: "
                },
                {
                  "kind": "Reference",
                  "text": "TxInput",
                  "canonicalReference": "@hyperionbt/helios!TxInput:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<TCX>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "TCX",
                  "constraintTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 10,
                "endIndex": 12
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "tcx",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "tokenValue",
                  "parameterTypeTokenRange": {
                    "startIndex": 6,
                    "endIndex": 7
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "fromFoundUtxo",
                  "parameterTypeTokenRange": {
                    "startIndex": 8,
                    "endIndex": 9
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": true,
              "name": "txnReceiveAuthorityToken"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarDelegate#txnRetireAuthorityToken:member(1)",
              "docComment": "/**\n * Finds the authority token and adds it to the transaction, tagged for retirement\n *\n * @remarks\n *\n * Doesn't return the token back to the contract.\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "txnRetireAuthorityToken<TCX extends "
                },
                {
                  "kind": "Reference",
                  "text": "StellarTxnContext",
                  "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext:class"
                },
                {
                  "kind": "Content",
                  "text": "<any>"
                },
                {
                  "kind": "Content",
                  "text": ">(tcx: "
                },
                {
                  "kind": "Content",
                  "text": "TCX"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "StellarTxnContext",
                  "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext:class"
                },
                {
                  "kind": "Content",
                  "text": "<{}>>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "TCX",
                  "constraintTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 10
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "tcx",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "txnRetireAuthorityToken"
            }
          ],
          "extendsTokenRange": {
            "startIndex": 12,
            "endIndex": 14
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@donecollectively/stellar-contracts!stellarSubclass:type",
          "docComment": "/**\n * Type for the Class that constructs to a given type\n *\n * @remarks\n *\n * Type of the matching literal class\n *\n * note: Typescript should make this pattern easier\n *\n * @typeParam S - the type of objects of this class\n *\n * @typeParam CT - inferred type of the constructor args for the class\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type stellarSubclass<S extends "
            },
            {
              "kind": "Reference",
              "text": "StellarContract",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarContract:class"
            },
            {
              "kind": "Content",
              "text": "<CT>"
            },
            {
              "kind": "Content",
              "text": ", CT extends "
            },
            {
              "kind": "Reference",
              "text": "configBase",
              "canonicalReference": "@donecollectively/stellar-contracts!paramsBase:type"
            },
            {
              "kind": "Content",
              "text": " = "
            },
            {
              "kind": "Content",
              "text": "S extends "
            },
            {
              "kind": "Reference",
              "text": "StellarContract",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarContract:class"
            },
            {
              "kind": "Content",
              "text": "<infer iCT> ? iCT : "
            },
            {
              "kind": "Reference",
              "text": "configBase",
              "canonicalReference": "@donecollectively/stellar-contracts!paramsBase:type"
            },
            {
              "kind": "Content",
              "text": "> = "
            },
            {
              "kind": "Content",
              "text": "(new (args: "
            },
            {
              "kind": "Reference",
              "text": "StellarConstructorArgs",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarConstructorArgs:type"
            },
            {
              "kind": "Content",
              "text": "<CT>) => S & "
            },
            {
              "kind": "Reference",
              "text": "StellarContract",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarContract:class"
            },
            {
              "kind": "Content",
              "text": "<CT>) & {\n    defaultParams: "
            },
            {
              "kind": "Reference",
              "text": "Partial",
              "canonicalReference": "!Partial:type"
            },
            {
              "kind": "Content",
              "text": "<CT>;\n    parseConfig(rawJsonConfig: any): any;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/StellarContract.ts",
          "releaseTag": "Public",
          "name": "stellarSubclass",
          "typeParameters": [
            {
              "typeParameterName": "S",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "CT",
              "constraintTokenRange": {
                "startIndex": 4,
                "endIndex": 5
              },
              "defaultTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 10
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 11,
            "endIndex": 18
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "@donecollectively/stellar-contracts!StellarTestContext:interface",
          "docComment": "/**\n * Interface augmenting the generic vitest testing context with a convention for testing contracts created with Stellar Contracts.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface StellarTestContext<HTH extends "
            },
            {
              "kind": "Reference",
              "text": "StellarTestHelper",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarTestHelper:class"
            },
            {
              "kind": "Content",
              "text": "<SC>"
            },
            {
              "kind": "Content",
              "text": ", SC extends "
            },
            {
              "kind": "Reference",
              "text": "StellarContract",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarContract:class"
            },
            {
              "kind": "Content",
              "text": "<any>"
            },
            {
              "kind": "Content",
              "text": " = "
            },
            {
              "kind": "Content",
              "text": "HTH extends "
            },
            {
              "kind": "Reference",
              "text": "StellarTestHelper",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarTestHelper:class"
            },
            {
              "kind": "Content",
              "text": "<infer iSC> ? iSC : never"
            },
            {
              "kind": "Content",
              "text": "> extends "
            },
            {
              "kind": "Reference",
              "text": "canHaveRandomSeed",
              "canonicalReference": "@donecollectively/stellar-contracts!~canHaveRandomSeed:type"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "TestContext",
              "canonicalReference": "@vitest/runner!TestContext:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/testing/StellarTestContext.ts",
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "HTH",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "SC",
              "constraintTokenRange": {
                "startIndex": 4,
                "endIndex": 6
              },
              "defaultTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 10
              }
            }
          ],
          "name": "StellarTestContext",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarTestContext#h:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "h: "
                },
                {
                  "kind": "Content",
                  "text": "HTH"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "h",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarTestContext#initHelper:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "initHelper(config: "
                },
                {
                  "kind": "Reference",
                  "text": "Partial",
                  "canonicalReference": "!Partial:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "ConfigFor",
                  "canonicalReference": "@donecollectively/stellar-contracts!ConfigFor:type"
                },
                {
                  "kind": "Content",
                  "text": "<SC>> & "
                },
                {
                  "kind": "Reference",
                  "text": "canHaveRandomSeed",
                  "canonicalReference": "@donecollectively/stellar-contracts!~canHaveRandomSeed:type"
                },
                {
                  "kind": "Content",
                  "text": " & "
                },
                {
                  "kind": "Reference",
                  "text": "canSkipSetup",
                  "canonicalReference": "@donecollectively/stellar-contracts!~canSkipSetup:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "StellarTestHelper",
                  "canonicalReference": "@donecollectively/stellar-contracts!StellarTestHelper:class"
                },
                {
                  "kind": "Content",
                  "text": "<SC>>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 9,
                "endIndex": 13
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "config",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 8
                  },
                  "isOptional": false
                }
              ],
              "name": "initHelper"
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarTestContext#strella:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get strella(): "
                },
                {
                  "kind": "Content",
                  "text": "SC"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "strella",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 11,
              "endIndex": 12
            },
            {
              "startIndex": 13,
              "endIndex": 14
            }
          ]
        },
        {
          "kind": "Class",
          "canonicalReference": "@donecollectively/stellar-contracts!StellarTestHelper:class",
          "docComment": "/**\n * Base class for test-helpers on generic Stellar contracts\n *\n * @remarks\n *\n * NOTE: DefaultCapoTestHelper is likely to be a better fit for typical testing needs and typical contract-development scenarios. Use this class for specific unit-testing needs not sufficiently served by integration-testing on a Capo.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare abstract class StellarTestHelper<SC extends "
            },
            {
              "kind": "Reference",
              "text": "StellarContract",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarContract:class"
            },
            {
              "kind": "Content",
              "text": "<any>"
            },
            {
              "kind": "Content",
              "text": "> "
            }
          ],
          "fileUrlPath": "src/testing/StellarTestHelper.ts",
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "SC",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "isAbstract": true,
          "name": "StellarTestHelper",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarTestHelper:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `StellarTestHelper` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(config?: "
                },
                {
                  "kind": "Reference",
                  "text": "ConfigFor",
                  "canonicalReference": "@donecollectively/stellar-contracts!ConfigFor:type"
                },
                {
                  "kind": "Content",
                  "text": "<SC> & "
                },
                {
                  "kind": "Reference",
                  "text": "canHaveRandomSeed",
                  "canonicalReference": "@donecollectively/stellar-contracts!~canHaveRandomSeed:type"
                },
                {
                  "kind": "Content",
                  "text": " & "
                },
                {
                  "kind": "Reference",
                  "text": "canSkipSetup",
                  "canonicalReference": "@donecollectively/stellar-contracts!~canSkipSetup:type"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "config",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 6
                  },
                  "isOptional": true
                }
              ]
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarTestHelper#actorName:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get actorName(): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "actorName",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarTestHelper#actors:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "actors: "
                },
                {
                  "kind": "Reference",
                  "text": "actorMap",
                  "canonicalReference": "@donecollectively/stellar-contracts!~actorMap:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "actors",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarTestHelper#addActor:member(1)",
              "docComment": "/**\n * creates a new Actor in the transaction context with initial funds, returning a Wallet object\n *\n * @remarks\n *\n * Given an actor name (\"marcie\") or role name (\"marketer\"), and a number of indicated lovelace, creates and returns a wallet having the indicated starting balance.\n *\n * By default, three additional, separate 5-ADA utxos are created, to ensure sufficient Collateral and small-change are existing, making typical transaction scenarios work easily. If you want to include other utxo's instead you can supply their lovelace sizes.\n *\n * To suppress creation of additional utxos, use `0n` for arg3.\n *\n * You may wish to import {@link ADA} = 1_000_000n from the testing/ module, and multiply smaller integers by that constant.\n *\n * @param roleName - an actor name or role-name for this wallet\n *\n * @param walletBalance - initial wallet balance\n *\n * @param moreUtxos - additional utxos to include\n *\n * @example\n *\n * this.addActor(\"cheapo\", 14n * ADA, 0n); // 14 ADA and no additional utxos this.addActor(\"flexible\", 14n * ADA); // 14 ADA + default 15 ADA in 3 additional utxos this.addActor(\"moneyBags\", 42_000_000n * ADA, 5n, 4n); // many ADA and two collaterals\n *\n * // 3O ADA in 6 separate utxos: this.addActor(\"smallChange\", 5n * ADA, 5n * ADA, 5n * ADA, 5n * ADA, 5n * ADA, 5n * ADA);\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "addActor(roleName: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", walletBalance: "
                },
                {
                  "kind": "Content",
                  "text": "bigint"
                },
                {
                  "kind": "Content",
                  "text": ", ...moreUtxos: "
                },
                {
                  "kind": "Content",
                  "text": "bigint[]"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Wallet",
                  "canonicalReference": "@hyperionbt/helios!Wallet:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "roleName",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "walletBalance",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "moreUtxos",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "addActor"
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarTestHelper#address:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "address?: "
                },
                {
                  "kind": "Reference",
                  "text": "Address",
                  "canonicalReference": "@hyperionbt/helios!Address:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "address",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarTestHelper#config:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "config?: "
                },
                {
                  "kind": "Reference",
                  "text": "ConfigFor",
                  "canonicalReference": "@donecollectively/stellar-contracts!ConfigFor:type"
                },
                {
                  "kind": "Content",
                  "text": "<SC>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "config",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarTestHelper#currentActor:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get currentActor(): "
                },
                {
                  "kind": "Reference",
                  "text": "WalletEmulator",
                  "canonicalReference": "@hyperionbt/helios!SimpleWallet:class"
                },
                {
                  "kind": "Content",
                  "text": ";\n\nset currentActor(actorName: string);"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "currentActor",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarTestHelper#currentSlot:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "currentSlot(): "
                },
                {
                  "kind": "Content",
                  "text": "bigint | null"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "currentSlot"
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarTestHelper#defaultActor:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "defaultActor?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "defaultActor",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarTestHelper#delay:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "delay(ms: "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<unknown>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "ms",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "delay"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarTestHelper#initialize:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "initialize(config: "
                },
                {
                  "kind": "Reference",
                  "text": "ConfigFor",
                  "canonicalReference": "@donecollectively/stellar-contracts!ConfigFor:type"
                },
                {
                  "kind": "Content",
                  "text": "<SC> & "
                },
                {
                  "kind": "Reference",
                  "text": "canHaveRandomSeed",
                  "canonicalReference": "@donecollectively/stellar-contracts!~canHaveRandomSeed:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<SC>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "config",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "initialize"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarTestHelper#initStellarClass:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "initStellarClass(config?: "
                },
                {
                  "kind": "Content",
                  "text": "(SC extends "
                },
                {
                  "kind": "Reference",
                  "text": "StellarContract",
                  "canonicalReference": "@donecollectively/stellar-contracts!StellarContract:class"
                },
                {
                  "kind": "Content",
                  "text": "<infer inferredConfig extends import(\"../StellarContract.js\")."
                },
                {
                  "kind": "Reference",
                  "text": "configBase",
                  "canonicalReference": "@donecollectively/stellar-contracts!paramsBase:type"
                },
                {
                  "kind": "Content",
                  "text": "> ? inferredConfig : never) | undefined"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "SC & "
                },
                {
                  "kind": "Reference",
                  "text": "StellarContract",
                  "canonicalReference": "@donecollectively/stellar-contracts!StellarContract:class"
                },
                {
                  "kind": "Content",
                  "text": "<SC extends "
                },
                {
                  "kind": "Reference",
                  "text": "StellarContract",
                  "canonicalReference": "@donecollectively/stellar-contracts!StellarContract:class"
                },
                {
                  "kind": "Content",
                  "text": "<infer inferredConfig extends import(\"../StellarContract.js\")."
                },
                {
                  "kind": "Reference",
                  "text": "configBase",
                  "canonicalReference": "@donecollectively/stellar-contracts!paramsBase:type"
                },
                {
                  "kind": "Content",
                  "text": "> ? inferredConfig : never>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 14
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "config",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 6
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "initStellarClass"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarTestHelper#initStrella:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "initStrella(TargetClass: "
                },
                {
                  "kind": "Reference",
                  "text": "stellarSubclass",
                  "canonicalReference": "@donecollectively/stellar-contracts!stellarSubclass:type"
                },
                {
                  "kind": "Content",
                  "text": "<SC, "
                },
                {
                  "kind": "Reference",
                  "text": "ConfigFor",
                  "canonicalReference": "@donecollectively/stellar-contracts!ConfigFor:type"
                },
                {
                  "kind": "Content",
                  "text": "<SC>>"
                },
                {
                  "kind": "Content",
                  "text": ", config?: "
                },
                {
                  "kind": "Reference",
                  "text": "ConfigFor",
                  "canonicalReference": "@donecollectively/stellar-contracts!ConfigFor:type"
                },
                {
                  "kind": "Content",
                  "text": "<SC>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "SC & "
                },
                {
                  "kind": "Reference",
                  "text": "StellarContract",
                  "canonicalReference": "@donecollectively/stellar-contracts!StellarContract:class"
                },
                {
                  "kind": "Content",
                  "text": "<SC extends "
                },
                {
                  "kind": "Reference",
                  "text": "StellarContract",
                  "canonicalReference": "@donecollectively/stellar-contracts!StellarContract:class"
                },
                {
                  "kind": "Content",
                  "text": "<infer inferredConfig extends import(\"../StellarContract.js\")."
                },
                {
                  "kind": "Reference",
                  "text": "configBase",
                  "canonicalReference": "@donecollectively/stellar-contracts!paramsBase:type"
                },
                {
                  "kind": "Content",
                  "text": "> ? inferredConfig : never>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 9,
                "endIndex": 16
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "TargetClass",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 5
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "config",
                  "parameterTypeTokenRange": {
                    "startIndex": 6,
                    "endIndex": 8
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "initStrella"
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarTestHelper#liveSlotParams:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "liveSlotParams: "
                },
                {
                  "kind": "Reference",
                  "text": "NetworkParams",
                  "canonicalReference": "@hyperionbt/helios!NetworkParams:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "liveSlotParams",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarTestHelper#mkNetwork:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "mkNetwork(): "
                },
                {
                  "kind": "Content",
                  "text": "["
                },
                {
                  "kind": "Reference",
                  "text": "NetworkEmulator",
                  "canonicalReference": "@hyperionbt/helios!NetworkEmulator:class"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "enhancedNetworkParams",
                  "canonicalReference": "@donecollectively/stellar-contracts!~enhancedNetworkParams:type"
                },
                {
                  "kind": "Content",
                  "text": "]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "mkNetwork"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarTestHelper#mkRandomBytes:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "mkRandomBytes(length: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "number[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "length",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "mkRandomBytes"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarTestHelper#mkSeedUtxo:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "mkSeedUtxo(seedIndex?: "
                },
                {
                  "kind": "Content",
                  "text": "bigint"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "helios.TxId",
                  "canonicalReference": "@hyperionbt/helios!TxId:class"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "seedIndex",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "mkSeedUtxo"
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarTestHelper#network:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "network: "
                },
                {
                  "kind": "Reference",
                  "text": "NetworkEmulator",
                  "canonicalReference": "@hyperionbt/helios!NetworkEmulator:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "network",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarTestHelper#networkParams:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "networkParams: "
                },
                {
                  "kind": "Reference",
                  "text": "NetworkParams",
                  "canonicalReference": "@hyperionbt/helios!NetworkParams:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "networkParams",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarTestHelper#optimize:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "optimize: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "optimize",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarTestHelper#rand:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "rand?: "
                },
                {
                  "kind": "Content",
                  "text": "() => number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "rand",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarTestHelper#randomSeed:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "randomSeed?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "randomSeed",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarTestHelper#setupActors:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "setupActors(): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "setupActors"
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarTestHelper#setupPending:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "setupPending?: "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<any>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "setupPending",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarTestHelper#slotToTimestamp:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "slotToTimestamp(s: "
                },
                {
                  "kind": "Content",
                  "text": "bigint"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "bigint | "
                },
                {
                  "kind": "Reference",
                  "text": "Date",
                  "canonicalReference": "!Date:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "s",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "slotToTimestamp"
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarTestHelper#state:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "state: "
                },
                {
                  "kind": "Reference",
                  "text": "Record",
                  "canonicalReference": "!Record:type"
                },
                {
                  "kind": "Content",
                  "text": "<string, any>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "state",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarTestHelper#stellarClass:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "abstract get stellarClass(): "
                },
                {
                  "kind": "Reference",
                  "text": "stellarSubclass",
                  "canonicalReference": "@donecollectively/stellar-contracts!stellarSubclass:type"
                },
                {
                  "kind": "Content",
                  "text": "<SC, any>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "stellarClass",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": true
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarTestHelper#strella:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "strella: "
                },
                {
                  "kind": "Content",
                  "text": "SC"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "strella",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarTestHelper#submitTx:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "submitTx(tx: "
                },
                {
                  "kind": "Reference",
                  "text": "Tx",
                  "canonicalReference": "@hyperionbt/helios!Tx:class"
                },
                {
                  "kind": "Content",
                  "text": ", force?: "
                },
                {
                  "kind": "Content",
                  "text": "\"force\""
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "TxId",
                  "canonicalReference": "@hyperionbt/helios!TxId:class"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "tx",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "force",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "submitTx"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarTestHelper#waitUntil:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "waitUntil(time: "
                },
                {
                  "kind": "Reference",
                  "text": "Date",
                  "canonicalReference": "!Date:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "bigint"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "time",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "waitUntil"
            }
          ],
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext:class",
          "docComment": "/**\n * Transaction-building context for Stellar Contract transactions\n *\n * @remarks\n *\n * Uses same essential facade as Helios Tx.\n *\n * Adds a transaction-state container with strong typing of its contents, enabling transaction-building code to use type-sensitive auto-complete and allowing Stellar Contracts library code to require transaction contexts having known states.\n *\n * Retains reflection capabilities to allow utxo-finding utilities to exclude utxo's already included in the contract.\n *\n * @typeParam S - type of the context's `state` prop\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class StellarTxnContext<S = "
            },
            {
              "kind": "Reference",
              "text": "noState",
              "canonicalReference": "@donecollectively/stellar-contracts!~noState:type"
            },
            {
              "kind": "Content",
              "text": "> "
            }
          ],
          "fileUrlPath": "src/StellarTxnContext.ts",
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "S",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "isAbstract": false,
          "name": "StellarTxnContext",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `StellarTxnContext` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(actor?: "
                },
                {
                  "kind": "Reference",
                  "text": "Wallet",
                  "canonicalReference": "@hyperionbt/helios!Wallet:interface"
                },
                {
                  "kind": "Content",
                  "text": ", state?: "
                },
                {
                  "kind": "Reference",
                  "text": "Partial",
                  "canonicalReference": "!Partial:type"
                },
                {
                  "kind": "Content",
                  "text": "<S>"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "actor",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": true
                },
                {
                  "parameterName": "state",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 5
                  },
                  "isOptional": true
                }
              ]
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext#actor:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "actor?: "
                },
                {
                  "kind": "Reference",
                  "text": "Wallet",
                  "canonicalReference": "@hyperionbt/helios!Wallet:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "actor",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext#addCollateral:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "addCollateral(collateral: "
                },
                {
                  "kind": "Reference",
                  "text": "TxInput",
                  "canonicalReference": "@hyperionbt/helios!TxInput:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "collateral",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "addCollateral"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext#addInput:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "addInput<TCX extends "
                },
                {
                  "kind": "Reference",
                  "text": "StellarTxnContext",
                  "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext:class"
                },
                {
                  "kind": "Content",
                  "text": "<S>"
                },
                {
                  "kind": "Content",
                  "text": ">(this: "
                },
                {
                  "kind": "Content",
                  "text": "TCX"
                },
                {
                  "kind": "Content",
                  "text": ", input: "
                },
                {
                  "kind": "Reference",
                  "text": "addInputArgs",
                  "canonicalReference": "@donecollectively/stellar-contracts!~addInputArgs:type"
                },
                {
                  "kind": "Content",
                  "text": "[0]"
                },
                {
                  "kind": "Content",
                  "text": ", r?: "
                },
                {
                  "kind": "Reference",
                  "text": "RedeemerArg",
                  "canonicalReference": "@donecollectively/stellar-contracts!~RedeemerArg:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "TCX"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "TCX",
                  "constraintTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 11,
                "endIndex": 12
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "this",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "input",
                  "parameterTypeTokenRange": {
                    "startIndex": 6,
                    "endIndex": 8
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "r",
                  "parameterTypeTokenRange": {
                    "startIndex": 9,
                    "endIndex": 10
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "addInput"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext#addInputs:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "addInputs<TCX extends "
                },
                {
                  "kind": "Reference",
                  "text": "StellarTxnContext",
                  "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext:class"
                },
                {
                  "kind": "Content",
                  "text": "<S>"
                },
                {
                  "kind": "Content",
                  "text": ">(this: "
                },
                {
                  "kind": "Content",
                  "text": "TCX"
                },
                {
                  "kind": "Content",
                  "text": ", inputs: "
                },
                {
                  "kind": "Reference",
                  "text": "Parameters",
                  "canonicalReference": "!Parameters:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Tx",
                  "canonicalReference": "@hyperionbt/helios!Tx:class"
                },
                {
                  "kind": "Content",
                  "text": "[\"addInputs\"]>[0]"
                },
                {
                  "kind": "Content",
                  "text": ", r: "
                },
                {
                  "kind": "Reference",
                  "text": "RedeemerArg",
                  "canonicalReference": "@donecollectively/stellar-contracts!~RedeemerArg:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "TCX"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "TCX",
                  "constraintTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 13,
                "endIndex": 14
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "this",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "inputs",
                  "parameterTypeTokenRange": {
                    "startIndex": 6,
                    "endIndex": 10
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "r",
                  "parameterTypeTokenRange": {
                    "startIndex": 11,
                    "endIndex": 12
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "addInputs"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext#addOutput:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "addOutput<TCX extends "
                },
                {
                  "kind": "Reference",
                  "text": "StellarTxnContext",
                  "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext:class"
                },
                {
                  "kind": "Content",
                  "text": "<S>"
                },
                {
                  "kind": "Content",
                  "text": ">(this: "
                },
                {
                  "kind": "Content",
                  "text": "TCX"
                },
                {
                  "kind": "Content",
                  "text": ", ...args: "
                },
                {
                  "kind": "Reference",
                  "text": "Parameters",
                  "canonicalReference": "!Parameters:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Tx",
                  "canonicalReference": "@hyperionbt/helios!Tx:class"
                },
                {
                  "kind": "Content",
                  "text": "[\"addOutput\"]>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "TCX"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "TCX",
                  "constraintTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 11,
                "endIndex": 12
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "this",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "args",
                  "parameterTypeTokenRange": {
                    "startIndex": 6,
                    "endIndex": 10
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "addOutput"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext#addOutputs:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "addOutputs<TCX extends "
                },
                {
                  "kind": "Reference",
                  "text": "StellarTxnContext",
                  "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext:class"
                },
                {
                  "kind": "Content",
                  "text": "<S>"
                },
                {
                  "kind": "Content",
                  "text": ">(this: "
                },
                {
                  "kind": "Content",
                  "text": "TCX"
                },
                {
                  "kind": "Content",
                  "text": ", ...args: "
                },
                {
                  "kind": "Reference",
                  "text": "Parameters",
                  "canonicalReference": "!Parameters:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Tx",
                  "canonicalReference": "@hyperionbt/helios!Tx:class"
                },
                {
                  "kind": "Content",
                  "text": "[\"addOutputs\"]>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "TCX"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "TCX",
                  "constraintTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 11,
                "endIndex": 12
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "this",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "args",
                  "parameterTypeTokenRange": {
                    "startIndex": 6,
                    "endIndex": 10
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "addOutputs"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext#addRefInput:member(1)",
              "docComment": "/**\n * adds a reference input to the transaction context\n *\n * @remarks\n *\n * idempotent version of helios addRefInput()\n *\n * @typeParam  - ‹pName› - descr (for generic types)\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "addRefInput<TCX extends "
                },
                {
                  "kind": "Reference",
                  "text": "StellarTxnContext",
                  "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext:class"
                },
                {
                  "kind": "Content",
                  "text": "<S>"
                },
                {
                  "kind": "Content",
                  "text": ">(this: "
                },
                {
                  "kind": "Content",
                  "text": "TCX"
                },
                {
                  "kind": "Content",
                  "text": ", input: "
                },
                {
                  "kind": "Reference",
                  "text": "addRefInputArgs",
                  "canonicalReference": "@donecollectively/stellar-contracts!~addRefInputArgs:type"
                },
                {
                  "kind": "Content",
                  "text": "[0]"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "TCX",
                  "constraintTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 9,
                "endIndex": 10
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "this",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "input",
                  "parameterTypeTokenRange": {
                    "startIndex": 6,
                    "endIndex": 8
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "addRefInput"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext#addRefInputs:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "addRefInputs<TCX extends "
                },
                {
                  "kind": "Reference",
                  "text": "StellarTxnContext",
                  "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext:class"
                },
                {
                  "kind": "Content",
                  "text": "<S>"
                },
                {
                  "kind": "Content",
                  "text": ">(this: "
                },
                {
                  "kind": "Content",
                  "text": "TCX"
                },
                {
                  "kind": "Content",
                  "text": ", ...args: "
                },
                {
                  "kind": "Reference",
                  "text": "addRefInputsArgs",
                  "canonicalReference": "@donecollectively/stellar-contracts!~addRefInputsArgs:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "TCX",
                  "constraintTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 8,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "this",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "args",
                  "parameterTypeTokenRange": {
                    "startIndex": 6,
                    "endIndex": 7
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "addRefInputs"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext#addScript:member(1)",
              "docComment": "/**\n * To add a script to the transaction context, use `attachScript`\n *\n * @deprecated\n *\n * - invalid method name; use attachScript\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "addScript(): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "addScript"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext#addSignature:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "addSignature(wallet: "
                },
                {
                  "kind": "Reference",
                  "text": "Wallet",
                  "canonicalReference": "@hyperionbt/helios!Wallet:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<void>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "wallet",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "addSignature"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext#attachScript:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "attachScript(...args: "
                },
                {
                  "kind": "Reference",
                  "text": "Parameters",
                  "canonicalReference": "!Parameters:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Tx",
                  "canonicalReference": "@hyperionbt/helios!Tx:class"
                },
                {
                  "kind": "Content",
                  "text": "[\"attachScript\"]>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "args",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 5
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "attachScript"
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext#collateral:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "collateral?: "
                },
                {
                  "kind": "Reference",
                  "text": "TxInput",
                  "canonicalReference": "@hyperionbt/helios!TxInput:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "collateral",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext#dump:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "dump(): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "dump"
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext#feeLimit:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "feeLimit?: "
                },
                {
                  "kind": "Content",
                  "text": "bigint"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "feeLimit",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext#inputs:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "inputs: "
                },
                {
                  "kind": "Reference",
                  "text": "TxInput",
                  "canonicalReference": "@hyperionbt/helios!TxInput:class"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "inputs",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext#mintTokens:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "mintTokens(...args: "
                },
                {
                  "kind": "Reference",
                  "text": "Parameters",
                  "canonicalReference": "!Parameters:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Tx",
                  "canonicalReference": "@hyperionbt/helios!Tx:class"
                },
                {
                  "kind": "Content",
                  "text": "[\"mintTokens\"]>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "StellarTxnContext",
                  "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext:class"
                },
                {
                  "kind": "Content",
                  "text": "<S>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "args",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 5
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "mintTokens"
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext#neededSigners:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "neededSigners: "
                },
                {
                  "kind": "Reference",
                  "text": "Address",
                  "canonicalReference": "@hyperionbt/helios!Address:class"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "neededSigners",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext#outputs:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "outputs: "
                },
                {
                  "kind": "Reference",
                  "text": "TxOutput",
                  "canonicalReference": "@hyperionbt/helios!TxOutput:class"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "outputs",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext#reservedUtxos:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "reservedUtxos(): "
                },
                {
                  "kind": "Reference",
                  "text": "TxInput",
                  "canonicalReference": "@hyperionbt/helios!TxInput:class"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "reservedUtxos"
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext#state:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "state: "
                },
                {
                  "kind": "Content",
                  "text": "S"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "state",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext#tx:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "tx: "
                },
                {
                  "kind": "Reference",
                  "text": "Tx",
                  "canonicalReference": "@hyperionbt/helios!Tx:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "tx",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext#txRefInputs:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "txRefInputs: "
                },
                {
                  "kind": "Reference",
                  "text": "TxInput",
                  "canonicalReference": "@hyperionbt/helios!TxInput:class"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "txRefInputs",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext#utxoNotReserved:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "utxoNotReserved(u: "
                },
                {
                  "kind": "Reference",
                  "text": "TxInput",
                  "canonicalReference": "@hyperionbt/helios!TxInput:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "TxInput",
                  "canonicalReference": "@hyperionbt/helios!TxInput:class"
                },
                {
                  "kind": "Content",
                  "text": " | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "u",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "utxoNotReserved"
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext#validFor:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "validFor<TCX extends "
                },
                {
                  "kind": "Reference",
                  "text": "StellarTxnContext",
                  "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext:class"
                },
                {
                  "kind": "Content",
                  "text": "<S>"
                },
                {
                  "kind": "Content",
                  "text": ">(this: "
                },
                {
                  "kind": "Content",
                  "text": "TCX"
                },
                {
                  "kind": "Content",
                  "text": ", durationMs: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", backwardMs?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "TCX"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "TCX",
                  "constraintTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 10,
                "endIndex": 11
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "this",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "durationMs",
                  "parameterTypeTokenRange": {
                    "startIndex": 6,
                    "endIndex": 7
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "backwardMs",
                  "parameterTypeTokenRange": {
                    "startIndex": 8,
                    "endIndex": 9
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "validFor"
            }
          ],
          "implementsTokenRanges": []
        },
        {
          "kind": "Variable",
          "canonicalReference": "@donecollectively/stellar-contracts!stringToNumberArray:var",
          "docComment": "/**\n * Converts string to array of UTF-8 byte-values\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "stringToNumberArray: "
            },
            {
              "kind": "Content",
              "text": "typeof "
            },
            {
              "kind": "Reference",
              "text": "textToBytes",
              "canonicalReference": "@hyperionbt/helios!textToBytes:function"
            }
          ],
          "fileUrlPath": "src/utils.ts",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "stringToNumberArray",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 3
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@donecollectively/stellar-contracts!tokenNamesOrValuesEntry:type",
          "docComment": "/**\n * tuple expressing a token-name and count\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type tokenNamesOrValuesEntry = "
            },
            {
              "kind": "Content",
              "text": "[string | number[], bigint]"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/HeliosPromotedTypes.ts",
          "releaseTag": "Public",
          "name": "tokenNamesOrValuesEntry",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Function",
          "canonicalReference": "@donecollectively/stellar-contracts!txAsString:function(1)",
          "docComment": "/**\n * Converts a Tx to printable form\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function txAsString(tx: "
            },
            {
              "kind": "Reference",
              "text": "Tx",
              "canonicalReference": "@hyperionbt/helios!Tx:class"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/diagnostics.ts",
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "tx",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            }
          ],
          "name": "txAsString"
        },
        {
          "kind": "Function",
          "canonicalReference": "@donecollectively/stellar-contracts!txInputAsString:function(1)",
          "docComment": "/**\n * Converts a TxInput to printable form\n *\n * @remarks\n *\n * Shortens address and output-id for visual simplicity\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function txInputAsString(x: "
            },
            {
              "kind": "Reference",
              "text": "TxInput",
              "canonicalReference": "@hyperionbt/helios!TxInput:class"
            },
            {
              "kind": "Content",
              "text": ", prefix?: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/diagnostics.ts",
          "returnTypeTokenRange": {
            "startIndex": 5,
            "endIndex": 6
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "x",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            },
            {
              "parameterName": "prefix",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": true
            }
          ],
          "name": "txInputAsString"
        },
        {
          "kind": "Function",
          "canonicalReference": "@donecollectively/stellar-contracts!txn:function(1)",
          "docComment": "/**\n * Decorates functions that can construct a new transaction context for a specific use-case\n *\n * @remarks\n *\n * function names must follow the mkTxn... convention.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function txn(proto: "
            },
            {
              "kind": "Content",
              "text": "any"
            },
            {
              "kind": "Content",
              "text": ", thingName: "
            },
            {
              "kind": "Content",
              "text": "any"
            },
            {
              "kind": "Content",
              "text": ", descriptor: "
            },
            {
              "kind": "Content",
              "text": "any"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "any"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/StellarContract.ts",
          "returnTypeTokenRange": {
            "startIndex": 7,
            "endIndex": 8
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "proto",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            },
            {
              "parameterName": "thingName",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": false
            },
            {
              "parameterName": "descriptor",
              "parameterTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "isOptional": false
            }
          ],
          "name": "txn"
        },
        {
          "kind": "Function",
          "canonicalReference": "@donecollectively/stellar-contracts!txOutputAsString:function(1)",
          "docComment": "/**\n * Converts a txOutput to printable form\n *\n * @remarks\n *\n * including all its values, and shortened Address.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function txOutputAsString(x: "
            },
            {
              "kind": "Reference",
              "text": "TxOutput",
              "canonicalReference": "@hyperionbt/helios!TxOutput:class"
            },
            {
              "kind": "Content",
              "text": ", prefix?: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/diagnostics.ts",
          "returnTypeTokenRange": {
            "startIndex": 5,
            "endIndex": 6
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "x",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            },
            {
              "parameterName": "prefix",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": true
            }
          ],
          "name": "txOutputAsString"
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@donecollectively/stellar-contracts!utxoPredicate:type",
          "docComment": "/**\n * a function that can filter txInputs for coin-selection\n *\n * @remarks\n *\n * short form: \"returns truthy\" if the input is matchy for the context\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type utxoPredicate = "
            },
            {
              "kind": "Content",
              "text": "((u: "
            },
            {
              "kind": "Reference",
              "text": "TxInput",
              "canonicalReference": "@hyperionbt/helios!TxInput:class"
            },
            {
              "kind": "Content",
              "text": ") => "
            },
            {
              "kind": "Reference",
              "text": "TxInput",
              "canonicalReference": "@hyperionbt/helios!TxInput:class"
            },
            {
              "kind": "Content",
              "text": " | undefined) | ((u: "
            },
            {
              "kind": "Reference",
              "text": "TxInput",
              "canonicalReference": "@hyperionbt/helios!TxInput:class"
            },
            {
              "kind": "Content",
              "text": ") => boolean) | ((u: "
            },
            {
              "kind": "Reference",
              "text": "TxInput",
              "canonicalReference": "@hyperionbt/helios!TxInput:class"
            },
            {
              "kind": "Content",
              "text": ") => boolean | undefined)"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/StellarContract.ts",
          "releaseTag": "Public",
          "name": "utxoPredicate",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 10
          }
        },
        {
          "kind": "Function",
          "canonicalReference": "@donecollectively/stellar-contracts!utxosAsString:function(1)",
          "docComment": "/**\n * Converts a list of UTxOs to printable form\n *\n * @remarks\n *\n * ... using {@link txInputAsString}\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function utxosAsString(utxos: "
            },
            {
              "kind": "Reference",
              "text": "TxInput",
              "canonicalReference": "@hyperionbt/helios!TxInput:class"
            },
            {
              "kind": "Content",
              "text": "[]"
            },
            {
              "kind": "Content",
              "text": ", joiner?: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/diagnostics.ts",
          "returnTypeTokenRange": {
            "startIndex": 6,
            "endIndex": 7
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "utxos",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isOptional": false
            },
            {
              "parameterName": "joiner",
              "parameterTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 5
              },
              "isOptional": true
            }
          ],
          "name": "utxosAsString"
        },
        {
          "kind": "Class",
          "canonicalReference": "@donecollectively/stellar-contracts!UutName:class",
          "docComment": "/**\n * a unique utility token having a unique name\n *\n * @remarks\n *\n * This class contains a general 'purpose' name, mapped to a unique `name`, which is generated using a seed-utxo pattern.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class UutName "
            }
          ],
          "fileUrlPath": "src/delegation/UutName.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "UutName",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@donecollectively/stellar-contracts!UutName:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `UutName` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(purpose: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", fullUutName: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "purpose",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "fullUutName",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ]
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!UutName#name:member",
              "docComment": "/**\n * the full uniquified name of this UUT\n *\n * @remarks\n *\n * format: `purpose-‹...uniqifier...›`\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get name(): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "name",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@donecollectively/stellar-contracts!UutName#purpose:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "purpose: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "purpose",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@donecollectively/stellar-contracts!UutName#toString:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "toString(): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "toString"
            }
          ],
          "implementsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@donecollectively/stellar-contracts!uutPurposeMap:type",
          "docComment": "/**\n * strongly-typed map of purpose-names to Uut objects\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type uutPurposeMap<unionPurpose extends "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": "> = "
            },
            {
              "kind": "Content",
              "text": "{\n    [purpose in unionPurpose]: "
            },
            {
              "kind": "Reference",
              "text": "UutName",
              "canonicalReference": "@donecollectively/stellar-contracts!UutName:class"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/Capo.ts",
          "releaseTag": "Public",
          "name": "uutPurposeMap",
          "typeParameters": [
            {
              "typeParameterName": "unionPurpose",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 3,
            "endIndex": 6
          }
        },
        {
          "kind": "Function",
          "canonicalReference": "@donecollectively/stellar-contracts!valueAsString:function(1)",
          "docComment": "/**\n * Converts a Value to printable form\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function valueAsString(v: "
            },
            {
              "kind": "Reference",
              "text": "Value",
              "canonicalReference": "@hyperionbt/helios!Value:class"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/diagnostics.ts",
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "v",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            }
          ],
          "name": "valueAsString"
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@donecollectively/stellar-contracts!valuesEntry:type",
          "docComment": "/**\n * Tuple of byte-array, count, needed for Value creation on native tokens.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type valuesEntry = "
            },
            {
              "kind": "Content",
              "text": "[number[], bigint]"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/HeliosPromotedTypes.ts",
          "releaseTag": "Public",
          "name": "valuesEntry",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@donecollectively/stellar-contracts!VariantStrategy:type",
          "docComment": "/**\n * declaration for one strategy-variant of a delegate role\n *\n * @remarks\n *\n * Indicates the details needed to construct a delegate script\n *\n * NOTE: the Type param is always inferred by defineRole()\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type VariantStrategy<DT extends "
            },
            {
              "kind": "Reference",
              "text": "StellarContract",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarContract:class"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "capoDelegateConfig",
              "canonicalReference": "@donecollectively/stellar-contracts!capoDelegateConfig:type"
            },
            {
              "kind": "Content",
              "text": " & any>"
            },
            {
              "kind": "Content",
              "text": "> = "
            },
            {
              "kind": "Content",
              "text": "{\n    delegateClass: "
            },
            {
              "kind": "Reference",
              "text": "stellarSubclass",
              "canonicalReference": "@donecollectively/stellar-contracts!stellarSubclass:type"
            },
            {
              "kind": "Content",
              "text": "<DT>;\n    partialConfig?: "
            },
            {
              "kind": "Reference",
              "text": "PartialParamConfig",
              "canonicalReference": "@donecollectively/stellar-contracts!~PartialParamConfig:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "ConfigFor",
              "canonicalReference": "@donecollectively/stellar-contracts!ConfigFor:type"
            },
            {
              "kind": "Content",
              "text": "<DT>>;\n    validateConfig?: (p: "
            },
            {
              "kind": "Reference",
              "text": "ConfigFor",
              "canonicalReference": "@donecollectively/stellar-contracts!ConfigFor:type"
            },
            {
              "kind": "Content",
              "text": "<DT>) => "
            },
            {
              "kind": "Reference",
              "text": "strategyValidation",
              "canonicalReference": "@donecollectively/stellar-contracts!strategyValidation:type"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/delegation/RolesAndDelegates.ts",
          "releaseTag": "Public",
          "name": "VariantStrategy",
          "typeParameters": [
            {
              "typeParameterName": "DT",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 6,
            "endIndex": 17
          }
        }
      ]
    }
  ]
}
