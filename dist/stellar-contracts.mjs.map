{"version":3,"file":"stellar-contracts.mjs","sources":["../src/HeliosModuleSrc.ts","../node_modules/.pnpm/@hyperionbt+helios@0.16.4/node_modules/@hyperionbt/helios/helios.js","../src/heliosRollupLoader.ts","../src/diagnostics.ts","../src/delegation/UutName.ts","../src/StellarTxnContext.ts","../src/utils.ts","../src/StellarContract.ts","../src/CapoMintHelpers.ts","../src/delegation/CapoDelegateHelpers.ts","../src/minting/DefaultMinter.ts","../src/Requirements.ts","../src/delegation/StellarDelegate.ts","../src/delegation/RolesAndDelegates.ts","../src/Capo.ts","../src/testing/types.ts","../src/testing/StellarTestHelper.ts","../src/testing/CapoTestHelper.ts","../src/minting/UnspecializedMintDelegate.ts","../src/UnspecializedCapo.ts","../src/CapoHelpers.ts","../src/minting/BasicMintDelegate.ts","../src/authority/AuthorityPolicy.ts","../src/authority/AnyAddressAuthorityPolicy.ts","../src/authority/MultisigAuthorityPolicy.ts","../src/minting/NoMintDelegation.ts","../src/DefaultCapo.ts","../src/testing/DefaultCapoTestHelper.ts","../src/testing/index.ts"],"sourcesContent":["/**\n * Properties for a Helios source file\n * @public\n **/\nexport type HeliosModuleSrc = string & {\n    srcFile: string;\n    purpose: string;\n    moduleName: string;\n};\n\n/**\n * Creates a String object from Helios source code, having additional properties about the helios source \n * @remarks\n * \n * `srcFile`, `purpose`, and `moduleName` are parsed from the Helios source string using a simple regular expression.\n * @public\n **/\nexport function mkHeliosModule(src: string, filename: string): HeliosModuleSrc {\n    //@ts-expect-error - the later lines add the props that typescript wants to see.\n    const module: HeliosModuleSrc = new String(src);\n    const [_, purpose, moduleName] =\n        src.match(/(module|minting|spending|endpoint)\\s+([a-zA-Z0-9]+)/m) || [];\n\n    module.srcFile = filename;\n    module.purpose = purpose;\n    module.moduleName = moduleName;\n\n    return module;\n}\n","//@ts-check\n//////////////////////////////////////////////////////////////////////////////////////////////////\n///////////////////////////////////////      Helios      /////////////////////////////////////////\n//////////////////////////////////////////////////////////////////////////////////////////////////\n//\n// Author:        Christian Schmitz\n// Email:         cschmitz398@gmail.com\n// Website:       https://www.hyperion-bt.org\n// Repository:    https://github.com/hyperion-bt/helios\n// Version:       0.16.4\n// Last update:   November 2023\n// License type:  BSD-3-Clause\n//\n//\n// About: Helios is a smart contract DSL for Cardano.\n//     This Javascript library contains functions to compile Helios sources into Plutus-core.\n//     Transactions can also be built using Helios.\n//\n//\n// Dependencies: none\n//\n//\n// Disclaimer: I made Helios available as FOSS so that the Cardano community can test it \n//     extensively. I don't guarantee the library is bug-free, nor do I guarantee\n//     backward compatibility with future versions.\n//\n//\n// Example usage:\n//     > import * as helios from \"helios.js\";\n//     > console.log(helios.Program.new(\"spending my_validator ...\").compile().serialize());\n//     \n//\n// Documentation: https://www.hyperion-bt.org/helios-book\n//\n//\n// Note: I recommend keeping the Helios library as a single unminified file for optimal \n//     auditability.\n//\n// \n// License text:\n//     Copyright 2023 Christian Schmitz\n//     \n//     Redistribution and use in source and binary forms, with or without \n//     modification, are permitted provided that the following conditions are met:\n//     \n//     1. Redistributions of source code must retain the above copyright notice, this \n//     list of conditions and the following disclaimer.\n//     \n//     2. Redistributions in binary form must reproduce the above copyright notice, \n//     this list of conditions and the following disclaimer in the documentation \n//     and/or other materials provided with the distribution.\n//     \n//     3. Neither the name of the copyright holder nor the names of its contributors \n//     may be used to endorse or promote products derived from this software without \n//     specific prior written permission.\n//     \n//     THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS “AS IS” \n//     AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE \n//     IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE \n//     DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE \n//     FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL \n//     DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR \n//     SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER \n//     CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, \n//     OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE \n//     OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n//     \n//\n//\n// Overview of internals:\n//     Section 1: Config                     VERSION, TAB, REAL_PRECISION, config\n//\n//     Section 2: Utilities                  assert, assertDefined, assertClass, assertNonEmpty, \n//                                           assertNumber, reduceNull, reduceNullPairs, eq, \n//                                           assertEq, idiv, ipow2, imask, imod8, bigIntToBytes, \n//                                           bytesToBigInt, leBytesToBigInt, bigIntToLe32Bytes, \n//                                           padZeroes, byteToBitString, hexToBytes, bytesToHex, \n//                                           textToBytes, bytesToText, replaceTabs, BitReader, \n//                                           BitWriter, Source, hl, deprecationWarning\n//\n//     Section 3: Tokens                     Site, RuntimeError, Token, assertToken, Word, \n//                                           SymbolToken, Group, PrimitiveLiteral, IntLiteral, \n//                                           RealLiteral, BoolLiteral, ByteArrayLiteral, \n//                                           StringLiteral, RE_IR_PARAMETRIC_NAME, TTPP, FTPP, \n//                                           RE_TEMPLATE_NAME, IRParametricName\n//\n//     Section 4: Cryptography functions     BLAKE2B_DIGEST_SIZE, setBlake2bDigestSize, imod32, \n//                                           irotr, posMod, randomBytes, UINT64_ZERO, \n//                                           uint64FromBytes, uint64FromString, uint64ToBytes, \n//                                           uint64Eq, uint64Not, uint64And, uint64Xor, uint64Add, \n//                                           uint64Rotr, uint64Shiftr, UInt64, encodeBase32Bytes, \n//                                           expandBech32HumanReadablePart, calcBech32Checksum, \n//                                           calcBech32Polymod, hmac, DEFAULT_BASE32_ALPHABET, \n//                                           BECH32_BASE32_ALPHABET, Crypto, ED25519_Q, \n//                                           ED25519_Q38, ED25519_CURVE_ORDER, ED25519_D, \n//                                           ED25519_I, expMod, curveMod, curveInvert, recoverX, \n//                                           encodeCurveInt, decodeCurveInt, getBit, AffinePoint, \n//                                           ExtendedPoint, clamp, nonce, CurvePointImpl, Ed25519, \n//                                           BIP39_DICT_EN\n//\n//     Section 5: Cbor encoder/decoder       CborData, Cbor\n//\n//     Section 6: Uplc data types            UPLC_DATA_NODE_MEM_SIZE, UplcData, IntData, \n//                                           ByteArrayData, ListData, MapData, ConstrData\n//\n//     Section 7: Helios data objects        HeliosData, HInt, Time, Duration, Bool, HString, \n//                                           ByteArray, HList, HMap, Option, Hash, DatumHash, \n//                                           PubKey, PubKeyHash, ScriptHash, MintingPolicyHash, \n//                                           StakingValidatorHash, ValidatorHash, TxId, \n//                                           TxOutputId, Address, AssetClass, Assets, Value\n//\n//     Section 8: Uplc cost-models           NetworkParams, CostModel, ConstCost, LinearCost, \n//                                           ArgSizeCost, Arg0SizeCost, Arg1SizeCost, \n//                                           Arg2SizeCost, MinArgSizeCost, MaxArgSizeCost, \n//                                           SumArgSizesCost, ArgSizeDiffCost, ArgSizeProdCost, \n//                                           ArgSizeDiagCost\n//\n//     Section 9: Uplc built-in functions    BUILTIN_PREFIX, SAFE_BUILTIN_SUFFIX, \n//                                           MACRO_BUILTIN_PREFIX, UPLC_BUILTINS, \n//                                           UPLC_MACROS_OFFSET, UPLC_MACROS, dumpCostModels, \n//                                           findUplcBuiltin, isUplcBuiltin\n//\n//     Section 10: Uplc AST                  UplcValueImpl, UplcType, DEFAULT_UPLC_RTE_CALLBACKS, \n//                                           UplcRte, UplcStack, UplcAny, UplcInt, UplcByteArray, \n//                                           UplcString, UplcUnit, UplcBool, UplcPair, UplcList, \n//                                           UplcDataValue, UplcTerm, UplcVariable, UplcDelay, \n//                                           UplcLambda, UplcCall, UplcConst, UplcForce, \n//                                           UplcError, UplcBuiltin, UplcFrame, ForceFrame, \n//                                           PreCallFrame, CallFrame, UplcTermWithEnv, \n//                                           UplcLambdaWithEnv, UplcDelayWithEnv, UplcAnonValue, \n//                                           AppliedUplcBuiltin\n//\n//     Section 11: Uplc program              UPLC_VERSION_COMPONENTS, UPLC_VERSION, \n//                                           PLUTUS_SCRIPT_VERSION, UPLC_TAG_WIDTHS, \n//                                           deserializeUplcBytes, deserializeUplc\n//\n//     Section 12: Tokenization              Tokenizer, tokenize, tokenizeIR\n//\n//     Section 13: Eval common types         applyTypes, Common, AllType, AnyType, ErrorType, \n//                                           ArgType, FuncType, GenericType, \n//                                           GenericEnumMemberType, VoidType, DataEntity, \n//                                           ErrorEntity, NamedEntity, FuncEntity, TypedEntity, \n//                                           VoidEntity, ModuleNamespace\n//\n//     Section 14: Eval primitive types      genCommonInstanceMembers, genCommonTypeMembers, \n//                                           genCommonEnumTypeMembers, BoolType, ByteArrayType, \n//                                           IntType, RawDataType, RealType, StringType\n//\n//     Section 15: Eval builtin typeclasses  GenericParametricType, \n//                                           GenericParametricEnumMemberType, TypeClassImpl, \n//                                           DataTypeClassImpl, AnyTypeClass, DefaultTypeClass, \n//                                           SummableTypeClass, Parameter, ParametricFunc, \n//                                           AppliedType, ParametricType\n//\n//     Section 16: Eval builtin functions    BuiltinFunc, AssertFunc, ErrorFunc, PrintFunc\n//\n//     Section 17: Eval container types      IteratorType, TupleType, isDataType, TupleType, \n//                                           getTupleItemTypes, ListType, ListType, MapType, \n//                                           MapType, OptionType, OptionType\n//\n//     Section 18: Eval time types           DurationType, TimeType, TimeRangeType\n//\n//     Section 19: Eval hash types           genHashInstanceMembers, genHashTypeMembers, \n//                                           genHashTypeProps, ScriptHashType, scriptHashType, \n//                                           DatumHashType, MintingPolicyHashType, PubKeyType, \n//                                           PubKeyHashType, StakingHashType, \n//                                           StakingHashStakeKeyType, StakingHashValidatorType, \n//                                           StakingValidatorHashType, ValidatorHashType\n//\n//     Section 20: Eval money types          AssetClassType, ValueType, ValuableTypeClass\n//\n//     Section 21: Eval tx types             AddressType, DCertType, DCertDelegateType, \n//                                           DCertDeregisterType, DCertRegisterType, \n//                                           DCertRegisterPoolType, DCertRetirePoolType, \n//                                           CredentialType, CredentialPubKeyType, \n//                                           CredentialValidatorType, OutputDatumType, \n//                                           OutputDatumHashType, OutputDatumInlineType, \n//                                           OutputDatumNoneType, MacroType, ScriptsType, \n//                                           ScriptContextType, ContractContextType, WalletType, \n//                                           NetworkType, ScriptPurposeType, \n//                                           ScriptPurposeCertifyingType, \n//                                           ScriptPurposeMintingType, ScriptPurposeTypeRewarding, \n//                                           ScriptPurposeSpendingType, StakingCredentialType, \n//                                           StakingCredentialHashType, StakingCredentialPtrType, \n//                                           StakingPurposeType, StakingPurposeCertifyingType, \n//                                           StakingPurposeRewardingType, TxBuilderType, TxType, \n//                                           TxIdType, TxInputType, TxOutputType, TxOutputIdType\n//\n//     Section 22: Scopes                    builtinTypes, GlobalScope, Scope, TopScope, \n//                                           ModuleScope\n//\n//     Section 23: IR definitions            onNotifyRawUsage, setRawUsageNotifier, RE_BUILTIN, \n//                                           RawFunc, makeRawFunctions, ToIRContext, \n//                                           fetchRawGenerics, fetchRawFunctions, \n//                                           wrapWithRawFunctions\n//\n//     Section 24: Helios AST expressions    Expr, RefExpr, PathExpr, ValuePathExpr, ListTypeExpr, \n//                                           MapTypeExpr, IteratorTypeExpr, OptionTypeExpr, \n//                                           VoidTypeExpr, TupleTypeExpr, FuncArgTypeExpr, \n//                                           FuncTypeExpr, ChainExpr, AssignExpr, VoidExpr, \n//                                           PrimitiveLiteralExpr, LiteralDataExpr, \n//                                           StructLiteralField, StructLiteralExpr, \n//                                           ListLiteralExpr, MapLiteralExpr, NameTypePair, \n//                                           FuncArg, FuncLiteralExpr, ParametricExpr, UnaryExpr, \n//                                           BINARY_SYMBOLS_MAP, BinaryExpr, ParensExpr, \n//                                           CallArgExpr, CallExpr, MemberExpr, IfElseExpr, \n//                                           DestructExpr, SwitchCase, UnconstrDataSwitchCase, \n//                                           SwitchDefault, SwitchExpr, EnumSwitchExpr, \n//                                           DataSwitchExpr\n//\n//     Section 25: Helios AST statements     Statement, ImportFromStatement, \n//                                           ImportModuleStatement, ConstStatement, TypeParameter, \n//                                           TypeParameters, DataField, DataDefinition, \n//                                           StructStatement, FuncStatement, EnumMember, \n//                                           EnumStatement, ImplDefinition\n//\n//     Section 26: Helios AST building       AUTOMATIC_METHODS, importPathTranslator, \n//                                           setImportPathTranslator, buildProgramStatements, \n//                                           buildScriptPurpose, buildScript, \n//                                           extractScriptPurposeAndName, buildConstStatement, \n//                                           buildTypeClassExpr, buildTypeParameter, \n//                                           buildTypeParameters, splitDataImpl, \n//                                           buildStructStatement, buildDataFields, \n//                                           buildFuncStatement, buildFuncLiteralExpr, \n//                                           buildFuncArgs, buildEnumStatement, \n//                                           buildImportStatements, buildImportModuleStatement, \n//                                           buildImportFromStatements, buildEnumMember, \n//                                           buildImplDefinition, buildImplMembers, buildTypeExpr, \n//                                           buildParametricTypeExpr, buildListTypeExpr, \n//                                           buildMapTypeExpr, buildOptionTypeExpr, \n//                                           buildIteratorTypeExpr, buildFuncTypeExpr, \n//                                           buildFuncArgTypeExpr, buildFuncRetTypeExpr, \n//                                           buildTypePathExpr, buildTypeRefExpr, \n//                                           buildTupleTypeExpr, buildValueExpr, \n//                                           buildMaybeAssignOrChainExpr, buildDestructExpr, \n//                                           buildDestructExprs, buildAssignLhs, buildPipedExpr, \n//                                           makeBinaryExprBuilder, makeUnaryExprBuilder, \n//                                           buildChainedValueExpr, \n//                                           buildRemainingChainedValueExpr, \n//                                           buildParametricValueExpr, buildCallExpr, \n//                                           buildChainStartValueExpr, buildParensExpr, \n//                                           buildCallArgs, buildCallArgExpr, buildIfElseExpr, \n//                                           buildSwitchExpr, buildSwitchCaseName, \n//                                           buildSwitchCase, buildSwitchCaseNameType, \n//                                           buildMultiArgSwitchCase, buildSingleArgSwitchCase, \n//                                           buildSwitchCaseBody, buildSwitchDefault, \n//                                           buildListLiteralExpr, buildOptionSomeLiteralExpr, \n//                                           buildMapLiteralExpr, buildStructLiteralExpr, \n//                                           buildStructLiteralField, \n//                                           buildStructLiteralNamedField, \n//                                           buildStructLiteralUnnamedField, buildValuePathExpr\n//\n//     Section 27: IR Context objects        IRScope, IRVariable\n//\n//     Section 28: IR AST objects            IRNameExpr, IRLiteralExpr, IRFuncExpr, IRCallExpr, \n//                                           IRErrorExpr, loopIRExprs\n//\n//     Section 29: IR AST build functions    IRExprTagger, buildIRExpr, buildIRFuncExpr\n//\n//     Section 30: IR pseudo evaluation      IRStack, IRLiteralValue, IRDataValue, \n//                                           collectIRVariables, IRBuiltinValue, IRFuncValue, \n//                                           IRErrorValue, IRAnyValue, IRMultiValue, \n//                                           IRValueCodeMapper, IR_BUILTIN_CALLBACKS, IREvaluator, \n//                                           annotateIR\n//\n//     Section 31: IR optimization           INLINE_MAX_SIZE, isIdentityFunc, IROptimizer\n//\n//     Section 32: IR Program                IRProgram, IRParametricProgram\n//\n//     Section 33: Helios program            Module, MainModule, DEFAULT_PROGRAM_CONFIG, \n//                                           RedeemerProgram, DatumRedeemerProgram, \n//                                           GenericProgram, TestingProgram, SpendingProgram, \n//                                           MintingProgram, StakingProgram, EndpointProgram\n//\n//     Section 34: Native scripts            NativeContext, NativeScript, NativeSig, NativeAll, \n//                                           NativeAny, NativeAtLeast, NativeAfter, NativeBefore\n//\n//     Section 35: Tx types                  Tx, TxBody, TxWitnesses, TxInput, UTxO, TxRefInput, \n//                                           TxOutput, DCert, DCertRegister, DCertDeregister, \n//                                           DCertDelegate, DCertRegisterPool, DCertRetirePool, \n//                                           StakeAddress, Signature, Ed25519PrivateKey, \n//                                           BIP32_HARDEN, Bip32PrivateKey, RootPrivateKey, \n//                                           Redeemer, SpendingRedeemer, MintingRedeemer, Datum, \n//                                           HashedDatum, InlineDatum, encodeMetadata, \n//                                           decodeMetadata, TxMetadata\n//\n//     Section 36: Highlighting function     SyntaxCategory, highlight\n//\n//     Section 37: CoinSelection             CoinSelection\n//\n//     Section 38: Wallets                   Cip30Wallet, WalletHelper, RemoteWallet\n//\n//     Section 39: Network                   BlockfrostV0, KoiosV0\n//\n//     Section 40: Emulator                  rawNetworkEmulatorParams, SimpleWallet, GenesisTx, \n//                                           RegularTx, NetworkEmulator, TxChainWallet, TxChain, \n//                                           NetworkSlice\n//\n//     Section 41: Fuzzy testing framework   FuzzyTest\n//\n//     Section 42: Bundling specific functionsjsToUplc, uplcToJs\n//\n///////////////////////////////////////////////////////////////////////////////////////////////////\n///////////////////////////////////////////////////////////////////////////////////////////////////\n\n\n////////////////////\n// Section 1: Config\n////////////////////\n\n/**\n * Current version of the Helios library.\n */\nexport const VERSION = \"0.16.4\";\n\n/**\n * A tab used for indenting of the IR.\n * 2 spaces.\n * @internal\n * @type {string}\n */\nexport const TAB = \"  \";\n\n/**\n * A Real in Helios is a fixed point number with REAL_PRECISION precision\n * @internal\n * @type {number}\n */\nexport const REAL_PRECISION = 6;\n\n/**\n * Mutable global config properties.\n * @namespace\n */\nexport const config = {\n    /**\n     * Modify the config properties\n     * @param {{\n     *   DEBUG?: boolean\n     *   STRICT_BABBAGE?: boolean\n     *   IS_TESTNET?: boolean\n     *   N_DUMMY_INPUTS?: number\n     *   AUTO_SET_VALIDITY_RANGE?: boolean\n     *   VALIDITY_RANGE_START_OFFSET?: number\n     *   VALIDITY_RANGE_END_OFFSET?: number\n     *   IGNORE_UNEVALUATED_CONSTANTS?: boolean\n     *   CHECK_CASTS?: boolean\n     *   MAX_ASSETS_PER_CHANGE_OUTPUT?: number\n     * }} props \n     */\n    set: (props) => {\n        Object.keys(props).forEach(k => {\n            config[k] = props[k];\n        });\n    },\n\n    /**\n     * Global debug flag. Currently unused.\n     * \n     * Default: `false`.\n     * @type {boolean}\n     */\n    DEBUG: false,\n\n    /**\n     * If true, `TxOutput` is serialized using strictly the Babagge cddl format (slightly more verbose).\n     * \n     * Default: `false`.\n     * @type {boolean}\n     */\n    STRICT_BABBAGE: false,\n\n\n    /**\n     * If true, `Address` instances are assumed to be for a Testnet when constructing from hashes or raw bytes, otherwise for mainnet.\n     * \n     * Default: `true`.\n     * @type {boolean}\n     */\n    IS_TESTNET: true,\n\n    /**\n     * Calculating the execution budget during tx building requires knowing all the inputs beforehand,\n     * which is very difficult because balancing is done after the budget is calculated.\n     * Instead we use at least 1 dummy input, which should act as a representative balancing input.\n     * For increased robustness we use 2 dummy inputs, one with Txid 0 and other with TxId ffff...,\n     * because eg. there are cases where the TxId is being printed,\n     * and a Txid of ffff... would overestimate the fee for that.\n     * This value must be '1' or '2'.\n     * \n     * Default: 2.\n     * @deprecated\n     * @type {number}\n     */\n    N_DUMMY_INPUTS: 2,\n\n    /**\n     * The validity time range can be set automatically if a call to tx.time_range in a Helios script is detected.\n     * If `false` the validity range is still set automatically if not set manually but a warning is printed.\n     * \n     * Default: `false`.\n     * @type {boolean}\n     */\n    AUTO_SET_VALIDITY_RANGE: false,\n\n\n    /**\n     * Lower offset wrt. the current system time when setting a transaction validity range automatically.\n     * \n     * Defaut: 90 seconds.\n     * @type {number} seconds\n     */\n    VALIDITY_RANGE_START_OFFSET: 90,\n\n    /**\n     * Upper offset wrt. the current system time when setting a transaction validity range automatically.\n     * \n     * Default: 300 seconds.\n     * @type {number} seconds\n     */\n    VALIDITY_RANGE_END_OFFSET: 300,\n\n    /**\n     * Ignore constants that can't be evaluated during compile-time.\n     * \n     * Default: `false`.\n     * @type {boolean}\n     */\n    IGNORE_UNEVALUATED_CONSTANTS: false,\n\n    /**\n     * Check that `from_data` casts make sense during runtime, printing a warning if it doesn't. This ony impacts unsimplified UplcPrograms.\n     * \n     * Default: `false`.\n     * @type {boolean}\n     */\n    CHECK_CASTS: false,\n\n    /**\n     * Maximum number of assets per change output. Used to break up very large asset outputs into multiple outputs.\n     * \n     * Default: `undefined` (no limit).\n     */\n    MAX_ASSETS_PER_CHANGE_OUTPUT: undefined,\n}\n\n\n\n///////////////////////\n// Section 2: Utilities\n///////////////////////\n\n/**\n * Needed by transfer() methods\n * @typedef {{\n *   transferByteArrayData: (bytes: number[]) => any,\n *   transferConstrData: (index: number, fields: any[]) => any,\n *   transferIntData: (value: bigint) => any,\n *   transferListData: (items: any[]) => any,\n *   transferMapData: (pairs: [any, any][]) => any,\n *   transferSite: (src: any, startPos: number, endPos: number, codeMapSite: null | any) => any,\n *   transferSource: (raw: string, name: string) => any,\n *   transferUplcBool: (site: any, value: boolean) => any,\n *   transferUplcBuiltin: (site: any, name: string | number) => any,\n *   transferUplcByteArray: (site: any, bytes: number[]) => any,\n *   transferUplcCall: (site: any, a: any, b: any) => any,\n *   transferUplcConst: (value: any) => any,\n *   transferUplcDataValue: (site: any, data: any) => any,\n *   transferUplcDelay: (site: any, expr: any) => any,\n *   transferUplcError: (site: any, msg: string) => any,\n *   transferUplcForce: (site: any, expr: any) => any,\n *   transferUplcInt: (site: any, value: bigint, signed: boolean) => any,\n *   transferUplcLambda: (site: any, rhs: any, name: null | string) => any,\n *   transferUplcList: (site: any, itemType: any, items: any[]) => any,\n *   transferUplcPair: (site: any, first: any, second: any) => any,\n *   transferUplcString: (site: any, value: string) => any,\n *   transferUplcType: (typeBits: string) => any,\n *   transferUplcUnit: (site: any) => any,\n *   transferUplcVariable: (site: any, index: any) => any\n * }} TransferUplcAst\n */\n\n/**\n * Throws an error if 'cond' is false.\n * @internal\n * @param {boolean} cond \n * @param {string} msg \n */\nexport function assert(cond, msg = \"unexpected\") {\n\tif (!cond) {\n\t\tthrow new Error(msg);\n\t}\n}\n\n/**\n * Throws an error if 'obj' is undefined. Returns 'obj' itself (for chained application).\n * @internal\n * @template T\n * @param {T | undefined | null} obj \n * @param {string} msg \n * @returns {T}\n */\nexport function assertDefined(obj, msg = \"unexpected undefined value\") {\n\tif (obj === undefined || obj === null ) {\n\t\tthrow new Error(msg);\n\t}\n\n\treturn obj;\n}\n\n/**\n * @internal\n * @template Tin, Tout\n * @param {Tin} obj\n * @param {{new(...any): Tout}} C\n * @returns {Tout}\n */\nexport function assertClass(obj, C, msg = \"unexpected class\") {\n\tif (obj instanceof C) {\n\t\treturn obj;\n\t} else {\n\t\tthrow new Error(msg);\n\t}\n}\n\n/**\n * @internal\n * @param {string} str \n * @param {string} msg \n * @returns {string}\n */\nexport function assertNonEmpty(str, msg = \"empty string\") {\n\tif (str.length == 0) {\n\t\tthrow new Error(msg);\n\t} else {\n\t\treturn str;\n\t}\n}\n\n/**\n * @internal\n * @param {any} obj \n * @param {string} msg \n * @returns {number}\n */\nexport function assertNumber(obj, msg = \"expected a number\") {\n\tif (obj === undefined || obj === null) {\n\t\tthrow new Error(msg);\n\t} else if (typeof obj == \"number\") {\n\t\treturn obj;\n\t} else {\n\t\tthrow new Error(msg);\n\t}\n}\n\n/**\n * @internal\n * @template T\n * @param {(T | null)[]} lst\n * @returns {null | (T[])}\n */\nexport function reduceNull(lst) {\n\t/**\n\t * @type {T[]}\n\t */\n\tconst nonNullLst = [];\n\n\tlet someNull = false;\n\n\tlst.forEach(item => {\n\t\tif (item !== null && !someNull) {\n\t\t\tnonNullLst.push(item);\n\t\t} else {\n\t\t\tsomeNull = true;\n\t\t}\n\t});\n\n\tif (someNull) {\n\t\treturn null;\n\t} else {\n\t\treturn nonNullLst;\n\t}\n}\n\n/**\n * @internal\n * @template Ta\n * @template Tb\n * @param {[Ta | null, Tb | null][]} pairs\n * @returns {null | [Ta, Tb][]}\n */\nexport function reduceNullPairs(pairs) {\n\t/**\n\t * @type {[Ta, Tb][]}\n\t */\n\tconst nonNullPairs = [];\n\n\tlet someNull = false;\n\n\tpairs.forEach(([a, b]) => {\n\t\tif (a === null || b === null) {\n\t\t\tsomeNull = true;\n\t\t} else if (!someNull) {\n\t\t\tnonNullPairs.push([a, b]);\n\t\t}\n\t});\n\n\tif (someNull) {\n\t\treturn null;\n\t} else {\n\t\treturn nonNullPairs;\n\t}\n}\n\n/**\n * Compares two objects (deep recursive comparison)\n * @internal\n * @template T\n * @param {T} a \n * @param {T} b \n * @returns {boolean}\n */\nexport function eq(a, b) {\n\tif (a === undefined || b === undefined) {\n\t\tthrow new Error(\"one of the args is undefined\");\n\t} else if (typeof a == \"string\") {\n\t\treturn a === b;\n\t} else if (typeof a == \"number\") {\n\t\treturn a === b;\n\t} else if (typeof a == \"boolean\") {\n\t\treturn a === b;\n\t} else if (typeof a == \"bigint\") {\n\t\treturn a === b;\n\t} else if (a instanceof Array && b instanceof Array) {\n\t\tif (a.length != b.length) {\n\t\t\treturn false;\n\t\t}\n\n\t\tfor (let i = 0; i < a.length; i++) {\n\t\t\tif (!eq(a[i], b[i])) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t} else {\n\t\tthrow new Error(`eq not yet implemented for these types: ${typeof a} and ${typeof b}`);\n\t}\n}\n\n/**\n * Throws an error if two object aren't equal (deep comparison).\n * Used by unit tests that are autogenerated from JSDoc inline examples.\n * @internal\n * @template T\n * @param {T} a\n * @param {T} b\n * @param {string} msg\n */\nexport function assertEq(a, b, msg) {\n\tif (!eq(a, b)) {\n\t\tconsole.log(\"lhs:\", a);\n\t\tconsole.log(\"rhs:\", b);\n\t\tconsole.log(\"...\")\n\t\tthrow new Error(msg);\n\t}\n}\n\n/**\n * Divides two integers. Assumes a and b are whole numbers. Rounds down the result.\n * @example\n * idiv(355, 113) == 3\n * @internal\n * @param {number} a\n * @param {number} b \n */\nexport function idiv(a, b) {\n\treturn Math.floor(a / b);\n\t// alternatively: (a - a%b)/b\n}\n\n/**\n * 2 to the power 'p' for bigint.\n * @internal\n * @param {bigint} p\n * @returns {bigint}\n */\nexport function ipow2(p) {\n\treturn (p <= 0n) ? 1n : 2n << (p - 1n);\n}\n\n/**\n * Masks bits of 'b' by setting bits outside the range ['i0', 'i1') to 0. \n * 'b' is an 8 bit integer (i.e. number between 0 and 255).\n * The return value is also an 8 bit integer, shift right by 'i1'.\n \n * @example\n * imask(0b11111111, 1, 4) == 0b0111 // (i.e. 7)\n * @internal\n * @param {number} b \n * @param {number} i0 \n * @param {number} i1 \n * @returns {number}\n */\nexport function imask(b, i0, i1) {\n\tassert(i0 < i1);\n\n\tconst mask_bits = [\n\t\t0b11111111,\n\t\t0b01111111,\n\t\t0b00111111,\n\t\t0b00011111,\n\t\t0b00001111,\n\t\t0b00000111,\n\t\t0b00000011,\n\t\t0b00000001,\n\t];\n\n\treturn (b & mask_bits[i0]) >> (8 - i1);\n}\n\n/**\n * Make sure resulting number fits in uint8\n * @internal\n * @param {number} x\n */\nexport function imod8(x) {\n\treturn x & 0xff;\n}\n\n/**\n * Converts an unbounded integer into a list of uint8 numbers (big endian)\n * Used by the CBOR encoding of data structures, and by Ed25519\n * @internal\n * @param {bigint} x\n * @returns {number[]}\n */\nexport function bigIntToBytes(x) {\n\tif (x == 0n) {\n\t\treturn [0];\n\t} else {\n\t\t/**\n\t\t * @type {number[]}\n\t\t */\n\t\tconst res = [];\n\n\t\twhile (x > 0n) {\n\t\t\tres.unshift(Number(x%256n));\n\n\t\t\tx = x/256n;\n\t\t}\n\n\t\treturn res;\n\t}\n}\n\n/**\n * Converts a list of uint8 numbers into an unbounded int (big endian)\n * Used by the CBOR decoding of data structures.\n * @internal\n * @param {number[]} b\n * @return {bigint}\n */\nexport function bytesToBigInt(b) {\n\tlet s = 1n;\n\tlet total = 0n;\n\n\twhile (b.length > 0) {\n\t\ttotal += BigInt(assertDefined(b.pop()))*s;\n\n\t\ts *= 256n;\n\t}\n\n\treturn total;\n}\n\n/**\n * Little Endian 32 bytes\n * @internal\n * @param {number[]} b \n * @returns {bigint}\n */\nexport function leBytesToBigInt(b) {\n\treturn bytesToBigInt(b.slice().reverse());\n}\n\n/**\n * Little Endian 32 bytes\n * @internal\n * @param {bigint} x \n * @returns {number[]}\n */\nexport function bigIntToLe32Bytes(x) {\n\tconst bytes = bigIntToBytes(x).reverse();\n\t\t\t\n\twhile (bytes.length < 32) {\n\t\tbytes.push(0);\n\t}\n\n\treturn bytes;\n}\n\n/**\n * Prepends zeroes to a bit-string so that 'result.length == n'.\n * @example\n * padZeroes(\"1111\", 8) == \"00001111\"\n * @internal\n * @param {string} bits\n * @param {number} n \n * @returns {string}\n */\nexport function padZeroes(bits, n) {\n\t// padded to multiple of n\n\tif (bits.length % n != 0) {\n\t\tconst nPad = n - bits.length % n;\n\n\t\tbits = (new Array(nPad)).fill('0').join('') + bits;\n\t}\n\n\treturn bits;\n}\n\n/**\n * Converts a 8 bit integer number into a bit string with an optional \"0b\" prefix.\n * The result is padded with leading zeroes to become 'n' chars long ('2 + n' chars long if you count the \"0b\" prefix). \n * @example\n * byteToBitString(7) == \"0b00000111\"\n * @internal\n * @param {number} b \n * @param {number} n\n * @param {boolean} prefix\n * @returns {string}\n */\nexport function byteToBitString(b, n = 8, prefix = true) {\n\tconst s = padZeroes(b.toString(2), n);\n\n\tif (prefix) {\n\t\treturn \"0b\" + s;\n\t} else {\n\t\treturn s;\n\t}\n}\n\n/**\n * Converts a hexadecimal string into a list of bytes.\n * @example\n * hexToBytes(\"00ff34\") == [0, 255, 52] \n * @param {string} hex \n * @returns {number[]}\n */\nexport function hexToBytes(hex) {\n\thex = hex.trim();\n\t\n\tconst bytes = [];\n\n\tfor (let i = 0; i < hex.length; i += 2) {\n\t\tconst b = parseInt(hex.slice(i, i + 2), 16);\n\n\t\tassert(!Number.isNaN(b), `invalid hexstring \"${hex}\"`);\n\t\t\n\t\tbytes.push(parseInt(hex.slice(i, i + 2), 16));\n\t}\n\n\treturn bytes;\n}\n\n/**\n * Converts a list of uint8 bytes into its hexadecimal string representation.\n * @example\n * bytesToHex([0, 255, 52]) == \"00ff34\"\n * @param {number[]} bytes\n * @returns {string}\n */\nexport function bytesToHex(bytes) {\n\tconst parts = [];\n\n\tfor (let b of bytes) {\n\t\tparts.push(padZeroes(b.toString(16), 2));\n\t}\n\n\treturn parts.join('');\n}\n\n/**\n * Encodes a string into a list of uint8 bytes using UTF-8 encoding.\n * @example\n * textToBytes(\"hello world\") == [104, 101, 108, 108, 111, 32, 119, 111, 114, 108, 100]\n * @param {string} str \n * @returns {number[]}\n */\nexport function textToBytes(str) {\n\treturn Array.from((new TextEncoder()).encode(str));\n}\n\n/**\n * Decodes a list of uint8 bytes into a string using UTF-8 encoding.\n * @example\n * bytesToText([104, 101, 108, 108, 111, 32, 119, 111, 114, 108, 100]) == \"hello world\"\n * @param {number[]} bytes \n * @returns {string}\n */\nexport function bytesToText(bytes) {\n\treturn (new TextDecoder(\"utf-8\", {fatal: true})).decode((new Uint8Array(bytes)).buffer);\n}\n\n/**\n * Replaces the tab characters of a string with spaces.\n * This is used to create a prettier IR (which is built-up from many template js strings in this file, which might contain tabs depending on the editor used)\n * @example\n * replaceTabs(\"\\t\\t\\t\") == [TAB, TAB, TAB].join(\"\")\n * @internal\n * @param {string} str \n * @returns {string}\n */\nexport function replaceTabs(str) {\n\treturn str.replace(new RegExp(\"\\t\", \"g\"), TAB);\n}\n\n/**\n * Read non-byte aligned numbers\n * @internal\n */\nexport class BitReader {\n    /**\n     * @type {Uint8Array}\n     */\n\t#view;\n\n    /**\n     * @type {number}\n     */\n\t#pos;\n\n    /**\n     * @type {boolean}\n     */\n\t#truncate;\n\n\t/**\n\t * @param {number[]} bytes\n\t * @param {boolean} truncate - if true then read last bits as low part of number, if false pad with zero bits\n\t */\n\tconstructor(bytes, truncate = true) {\n\t\tthis.#view = new Uint8Array(bytes);\n\t\tthis.#pos = 0; // bit position, not byte position\n\t\tthis.#truncate = truncate;\n\t}\n\n\t/**\n     * @internal\n\t * @returns {boolean}\n\t */\n\teof() {\n\t\treturn idiv(this.#pos, 8) >= this.#view.length;\n\t}\n\n\t/**\n\t * Reads a number of bits (<= 8) and returns the result as an unsigned number\n     * @internal\n\t * @param {number} n - number of bits to read\n\t * @returns {number}\n\t */\n\treadBits(n) {\n\t\tassert(n <= 8, \"reading more than 1 byte\");\n\n\t\tlet leftShift = 0;\n\t\tif (this.#pos + n > this.#view.length * 8) {\n\t\t\tconst newN = (this.#view.length*8 - this.#pos);\n\n\t\t\tif (!this.#truncate) {\n\t\t\t\tleftShift = n - newN;\n\t\t\t}\n\n\t\t\tn = newN;\n\t\t}\n\n\t\tassert(n > 0, \"eof\");\n\n\t\t// it is assumed we don't need to be at the byte boundary\n\n\t\tlet res = 0;\n\t\tlet i0 = this.#pos;\n\n\t\tfor (let i = this.#pos + 1; i <= this.#pos + n; i++) {\n\t\t\tif (i % 8 == 0) {\n\t\t\t\tconst nPart = i - i0;\n\n\t\t\t\tres += imask(this.#view[idiv(i, 8) - 1], i0 % 8, 8) << (n - nPart);\n\n\t\t\t\ti0 = i;\n\t\t\t} else if (i == this.#pos + n) {\n\t\t\t\tres += imask(this.#view[idiv(i, 8)], i0 % 8, i % 8);\n\t\t\t}\n\t\t}\n\n\t\tthis.#pos += n;\n\t\treturn res << leftShift;\n\t}\n\n\t/**\n\t * Moves position to next byte boundary\n     * @internal\n\t * @param {boolean} force - if true then move to next byte boundary if already at byte boundary\n\t */\n\tmoveToByteBoundary(force = false) {\n\t\tif (this.#pos % 8 != 0) {\n\t\t\tlet n = 8 - this.#pos % 8;\n\n\t\t\tvoid this.readBits(n);\n\t\t} else if (force) {\n\t\t\tthis.readBits(8);\n\t\t}\n\t}\n\n\t/**\n\t * Reads 8 bits\n     * @internal\n\t * @returns {number}\n\t */\n\treadByte() {\n\t\treturn this.readBits(8);\n\t}\n\n\t/**\n\t * Dumps remaining bits we #pos isn't yet at end.\n\t * This is intended for debugging use.\n     * @internal\n\t */\n\tdumpRemainingBits() {\n\t\tif (!this.eof()) {\n\t\t\tconsole.log(\"remaining bytes:\");\n\t\t\tfor (let first = true, i = idiv(this.#pos, 8); i < this.#view.length; first = false, i++) {\n\t\t\t\tif (first && this.#pos % 8 != 0) {\n\t\t\t\t\tconsole.log(byteToBitString(imask(this.#view[i], this.#pos % 8, 8) << 8 - this.#pos % 7));\n\t\t\t\t} else {\n\t\t\t\t\tconsole.log(byteToBitString(this.#view[i]));\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tconsole.log(\"eof\");\n\t\t}\n\t}\n}\n\n/**\n * BitWriter turns a string of '0's and '1's into a list of bytes.\n * Finalization pads the bits using '0*1' if not yet aligned with the byte boundary.\n */\nexport class BitWriter {\n\t/**\n\t * Concatenated and padded upon finalization\n\t * @type {string[]}\n\t */\n\t#parts;\n\n\t/**\n\t * Number of bits written so far\n\t * @type {number}\n\t */\n\t#n;\n\n\tconstructor() {\n\t\tthis.#parts = [];\n\t\tthis.#n = 0;\n\t}\n\n\t/**\n     * @internal\n\t * @type {number}\n\t */\n\tget length() {\n\t\treturn this.#n;\n\t}\n\n\t/**\n\t * Write a string of '0's and '1's to the BitWriter.\n     * @internal\n\t * @param {string} bitChars\n\t */\n\twrite(bitChars) {\n\t\tfor (let c of bitChars) {\n\t\t\tif (c != '0' && c != '1') {\n\t\t\t\tthrow new Error(\"bit string contains invalid chars: \" + bitChars);\n\t\t\t}\n\t\t}\n\n\t\tthis.#parts.push(bitChars);\n\t\tthis.#n += bitChars.length;\n\t}\n\n\t/**\n     * @internal\n\t * @param {number} byte\n\t */\n\twriteByte(byte) {\n\t\tthis.write(padZeroes(byte.toString(2), 8));\n\t}\n\n\t/**\n\t * Add padding to the BitWriter in order to align with the byte boundary.\n\t * If 'force == true' then 8 bits are added if the BitWriter is already aligned.\n     * @internal\n\t * @param {boolean} force \n\t */\n\tpadToByteBoundary(force = false) {\n\t\tlet nPad = 0;\n\t\tif (this.#n % 8 != 0) {\n\t\t\tnPad = 8 - this.#n % 8;\n\t\t} else if (force) {\n\t\t\tnPad = 8;\n\t\t}\n\n\t\tif (nPad != 0) {\n\t\t\tlet padding = (new Array(nPad)).fill('0');\n\t\t\tpadding[nPad - 1] = '1';\n\n\t\t\tthis.#parts.push(padding.join(''));\n\n\t\t\tthis.#n += nPad;\n\t\t}\n\t}\n\n\t/**\n\t * Pop n bits of the end\n\t * @param {number} n \n\t * @returns {string}\n\t */\n\tpop(n) {\n\t\tassert(n <= this.#n, `too many bits to pop, only have ${this.#n} bits, but want ${n}`);\n\t\tconst n0 = n;\n\n\t\t/**\n\t\t * @type {string[]}\n\t\t */\n\t\tconst parts = [];\n\n\t\twhile (n > 0) {\n\t\t\tconst last = assertDefined(this.#parts.pop());\n\n\t\t\tif (last.length == 0) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (last.length <= n) {\n\t\t\t\tparts.unshift(last);\n\t\t\t\tn -= last.length;\n\t\t\t} else {\n\t\t\t\tparts.unshift(last.slice(last.length - n));\n\t\t\t\tthis.#parts.push(last.slice(0, last.length - n));\n\t\t\t\tn = 0;\n\t\t\t}\n\t\t}\n\n\t\tthis.#n -= n0;\n\n\t\tconst bits = parts.join('');\n\t\tassert(bits.length == n0);\n\n\t\treturn bits;\n\t}\n\n\t/**\n\t * Pads the BitWriter to align with the byte boundary and returns the resulting bytes.\n     * @internal\n\t * @param {boolean} force - force padding (will add one byte if already aligned)\n\t * @returns {number[]}\n\t */\n\tfinalize(force = true) {\n\t\tthis.padToByteBoundary(force);\n\n\t\tlet chars = this.#parts.join('');\n\n\t\tlet bytes = [];\n\n\t\tfor (let i = 0; i < chars.length; i += 8) {\n\t\t\tlet byteChars = chars.slice(i, i + 8);\n\t\t\tlet byte = parseInt(byteChars, 2);\n\n\t\t\tbytes.push(byte);\n\t\t}\n\n\t\treturn bytes;\n\t}\n}\n\n/**\n * Function that generates a random number between 0 and 1\n * @typedef {() => number} NumberGenerator\n */\n\n/**\n * A Source instance wraps a string so we can use it cheaply as a reference inside a Site.\n * Also used by VSCode plugin\n */\nexport class Source {\n\t#raw;\n\t#name;\n\t#errors; // errors are collected into this object\n\n\t/**\n\t * @param {string} raw \n\t * @param {string} name\n\t */\n\tconstructor(raw, name) {\n\t\tthis.#raw = assertDefined(raw);\n\t\tthis.#name = name;\n\t\tthis.#errors = [];\n\t}\n\n\t/**\n\t * @param {TransferUplcAst} other \n\t * @returns {any}\n\t */\n\ttransfer(other) {\n\t\t// errors don't need to be transfered\n\t\treturn other.transferSource(\n\t\t\tthis.#raw,\n\t\t\tthis.#name\t\n\t\t)\n\t}\n\n    /**\n     * @internal\n     * @type {string}\n     */\n\tget raw() {\n\t\treturn this.#raw;\n\t}\n\n    /**\n     * @internal\n     * @type {string}\n     */\n\tget name() {\n\t\treturn this.#name;\n\t}\n\n\t/**\n\t * @type {Error[]}\n\t */\n\tget errors() {\n\t\treturn this.#errors;\n\t}\n\n\tthrowErrors() {\n\t\tif (this.#errors.length > 0) {\n\t\t\tthrow this.#errors[0];\n\t\t}\n\t}\n\n\t/**\n\t * Get char from the underlying string.\n\t * Should work fine utf-8 runes.\n     * @internal\n\t * @param {number} pos\n\t * @returns {string}\n\t */\n\tgetChar(pos) {\n\t\treturn this.#raw[pos];\n\t}\n\t\n\t/**\n\t * Returns word under pos\n     * @internal\n\t * @param {number} pos \n\t * @returns {?string}\n\t */\n\tgetWord(pos) {\n\t\t/** @type {string[]} */\n\t\tconst chars = [];\n\n\t\t/**\n\t\t * @param {string | undefined} c \n\t\t * @returns {boolean}\n\t\t */\n\t\tfunction isWordChar(c) {\n\t\t\tif (c === undefined) {\n\t\t\t\treturn false;\n\t\t\t} else {\n\t\t\t\treturn (c == '_' || (c >= '0' && c <= '9') || (c >= 'A' && c <= 'Z') || (c >= 'a' && c <= 'z'));\n\t\t\t}\n\t\t}\n\n\t\tlet c = this.#raw[pos];\n\t\twhile (isWordChar(c)) {\n\t\t\tchars.push(c);\n\t\t\tpos += 1;\n\t\t\tc = this.#raw[pos];\n\t\t}\n\n\t\tif (chars.length == 0) {\n\t\t\treturn null;\n\t\t} else {\n\t\t\treturn chars.join(\"\");\n\t\t}\n\t}\n\n    /**\n     * @internal\n     * @type {number}\n     */\n\tget length() {\n\t\treturn this.#raw.length;\n\t}\n\n\t/**\n\t * Calculates the line number of the line where the given character is located (0-based).\n     * @internal\n\t * @param {number} pos \n\t * @returns {number}\n\t */\n\tposToLine(pos) {\n\t\tlet line = 0;\n\t\tfor (let i = 0; i < pos; i++) {\n\t\t\tif (this.#raw[i] == '\\n') {\n\t\t\t\tline += 1;\n\t\t\t}\n\t\t}\n\n\t\treturn line;\n\t}\n\n\t/**\n\t * Calculates the column and line number where the given character is located (0-based).\n     * @internal\n\t * @param {number} pos\n\t * @returns {[number, number]}\n\t */\n\t// returns [col, line]\n\tposToLineAndCol(pos) {\n\t\tlet col = 0;\n\t\tlet line = 0;\n\t\tfor (let i = 0; i < pos; i++) {\n\t\t\tif (this.#raw[i] == '\\n') {\n\t\t\t\tcol = 0;\n\t\t\t\tline += 1;\n\t\t\t} else {\n\t\t\t\tcol += 1;\n\t\t\t}\n\t\t}\n\n\t\treturn [line, col];\n\t}\n\n\t/**\n\t * Creates a more human-readable version of the source by prepending the line-numbers to each line.\n\t * The line-numbers are at least two digits.\n\t * @example\n\t * (new Source(\"hello\\nworld\")).pretty() == \"01  hello\\n02  world\"\n     * @internal\n\t * @returns {string}\n\t */\n\tpretty() {\n\t\tconst lines = this.#raw.split(\"\\n\");\n\n\t\tconst nLines = lines.length;\n\t\tconst nDigits = Math.max(Math.ceil(Math.log10(nLines)), 2); // line-number is at least two digits\n\n\t\tfor (let i = 0; i < nLines; i++) {\n\t\t\tlines[i] = String(i + 1).padStart(nDigits, '0') + \"  \" + lines[i];\n\t\t}\n\n\t\treturn lines.join(\"\\n\");\n\t}\n}\n\n/**\n * Template string tag function that doesn't do anything and just returns the template string as a string.\n * Can be used as a marker of Helios sources so that syntax highlighting can work inside JS/TS files.\n * @example\n * hl`hello ${\"world\"}!` == \"hello world!\"\n * @param {string[]} a \n * @param  {...any} b \n * @returns {string}\n */\nexport function hl(a, ...b) {\n\treturn a.map((part, i) => {\n\t\tif (i < b.length) {\n\t\t\treturn part + b[i].toString();\n\t\t} else {\n\t\t\treturn part;\n\t\t}\n\t}).join(\"\");\n}\n\n/**\n * Display a warning message that a certain feature will be deprecated at some point in the future.\n * @internal\n * @param {string} feature\n * @param {string} futureVersion\n * @param {string} alternative\n * @param {string} docUrl\n */\nexport function deprecationWarning(feature, futureVersion, alternative, docUrl = \"\") {\n\tlet msg = `${feature} is DEPRECATED, and will be removed from version ${futureVersion} onwards!\n${alternative}`;\n\n\tif (docUrl != \"\") {\n\t\tmsg += `\\n(for more information: ${docUrl})`;\n\t}\n\n\tconsole.warn(msg);\n}\n\n\n\n////////////////////\n// Section 3: Tokens\n////////////////////\n/**\n * Each Token/Expression/Statement has a Site, which encapsulates a position in a Source\n */\nexport class Site {\n\t#src;\n\t#startPos;\n\t#endPos;\n\n\t/** @type {null | Site} - end of token, exclusive, TODO: replace with endPos */\n\t#endSite;\n\n\t/** @type {null | Site} */\n\t#codeMapSite;\n\n\t/**\n\t * @param {Source} src \n\t * @param {number} startPos\n\t * @param {number} endPos\n\t * @param {Site | null} codeMapSite\n\t */\n\tconstructor(src, startPos, endPos = startPos + 1, codeMapSite = null) {\n\t\tthis.#src = src;\n\t\tthis.#startPos = startPos;\n\t\tthis.#endPos = endPos;\n\t\tthis.#endSite = null;\n\t\tthis.#codeMapSite = codeMapSite;\n\t}\n\n\t/**\n\t * \n\t * @param {TransferUplcAst} other \n\t */\n\ttransfer(other) {\n\t\treturn other.transferSite(\n\t\t\tthis.#src.transfer(other),\n\t\t\tthis.#startPos,\n\t\t\tthis.#endPos,\n\t\t\tthis.#codeMapSite?.transfer(other) ?? null\n\t\t)\n\t}\n\n\tstatic dummy() {\n\t\treturn new Site(new Source(\"\", \"\"), 0);\n\t}\n\n\tget src() {\n\t\treturn this.#src;\n\t}\n\n\tget startPos() {\n\t\treturn this.#startPos;\n\t}\n\n\tget endPos() {\n\t\treturn this.#endPos;\n\t}\n\t\n\tget endSite() {\n\t\treturn this.#endSite;\n\t}\n\n\t/**\n\t * @param {Site} other \n\t * @returns {Site}\n\t */\n\tmerge(other) {\n\t\treturn new Site(this.#src, this.#startPos, other.#endPos, this.#codeMapSite ?? other.#codeMapSite);\n\t}\n\n\t/**\n\t * @param {?Site} site\n\t */\n\tsetEndSite(site) {\n\t\tthis.#endSite = site;\n\t}\n\n\t/**\n\t * @type {?Site} \n\t */\n\tget codeMapSite() {\n\t\treturn this.#codeMapSite;\n\t}\n\n\t/**\n\t * @param {Site} site \n\t */\n\tsetCodeMapSite(site) {\n\t\tthis.#codeMapSite = site;\n\t}\n\n\t/**\n\t * Returns a SyntaxError\n\t * @param {string} info \n\t * @returns {UserError}\n\t */\n\tsyntaxError(info = \"\") {\n\t\treturn UserError.syntaxError(this.#src, this.#startPos, this.#endPos, info);\n\t}\n\n\t/**\n\t * Returns a TypeError\n\t * @param {string} info\n\t * @returns {UserError}\n\t */\n\ttypeError(info = \"\") {\n\t\treturn UserError.typeError(this.#src, this.#startPos, this.#endPos, info);\n\t}\n\n\t/**\n\t * Returns a ReferenceError\n\t * @param {string} info \n\t * @returns {UserError}\n\t */\n\treferenceError(info = \"\") {\n\t\treturn UserError.referenceError(this.#src, this.#startPos, this.#endPos, info);\n\t}\n\n\t/**\n\t * Calculates the column,line position in 'this.#src'\n\t * @returns {[number, number, number, number]} - [startLine, startCol, endLine, endCol]\n\t */\n\tgetFilePos() {\n\t\tconst [startLine, startCol] = this.#src.posToLineAndCol(this.#startPos);\n\n\t\tconst [endLine, endCol] = this.#src.posToLineAndCol(this.#endPos);\n\n\t\treturn [startLine, startCol, endLine, endCol];\n\t}\n\n\t/**\n\t * @returns {string}\n\t */\n\ttoString() {\n\t\tconst [startLine, startCol] = this.#src.posToLineAndCol(this.#startPos);\n\n\t\treturn `${this.src.name}:${startLine+1}:${startCol+1}`;\n\t}\n}\n\n\n/**\n * UserErrors are generated when the user of Helios makes a mistake (eg. a syntax error).\n */\n export class UserError extends Error {\n\t#src;\n\t#startPos;\n\t#endPos;\n\n\t/**\n\t * @type {Object}\n\t */\n\t#context; // additional context\n\n\t/**\n\t * @internal\n\t * @param {string} msg\n\t * @param {Source} src \n\t * @param {number} startPos \n\t * @param {number} endPos\n\t */\n\tconstructor(msg, src, startPos, endPos = startPos + 1) {\n\t\tsuper(msg);\n\t\tthis.#src = src;\n\t\tthis.#startPos = startPos;\n\t\tthis.#endPos = endPos;\n\t\tthis.#context = {};\n\t}\n\n\t/**\n\t * @internal\n\t * @param {string} type\n\t * @param {Source} src \n\t * @param {number} startPos \n\t * @param {number} endPos\n\t * @param {string} info \n\t */\n\tstatic new(type, src, startPos, endPos, info = \"\") {\n\t\tlet [line, col] = src.posToLineAndCol(startPos);\n\n\t\tlet msg = `(${src.name}:${line+1}:${col+1}) ${type}`;\n\t\tif (info != \"\") {\n\t\t\tmsg += `: ${info}`;\n\t\t}\n\n\t\treturn new UserError(msg, src, startPos, endPos);\n\t}\n\n\t/**\n\t * @internal\n\t * @type {Source}\n\t */\n\tget src() {\n\t\treturn this.#src;\n\t}\n\n\t/**\n\t * Filled with CBOR hex representations of Datum, Redeemer and ScriptContext by validation scripts throwing errors during `tx.finalize()`; and Redeemer and ScriptContext by minting scripts throwing errors.\n\t * @type {Object}\n\t */\n\tget context() {\n\t\treturn this.#context;\n\t}\n\n\t/**\n\t * Constructs a SyntaxError\n\t * @internal\n\t * @param {Source} src \n\t * @param {number} startPos \n\t * @param {number} endPos\n\t * @param {string} info \n\t * @returns {UserError}\n\t */\n\tstatic syntaxError(src, startPos, endPos, info = \"\") {\n\t\tconst error = UserError.new(\"SyntaxError\", src, startPos, endPos, info);\n\n\t\tsrc.errors.push(error);\n\n\t\treturn error;\n\t}\n\n\t/**\n\t * Constructs a TypeError\n\t * @internal\n\t * @param {Source} src \n\t * @param {number} startPos \n\t * @param {number} endPos\n\t * @param {string} info \n\t * @returns {UserError}\n\t */\n\tstatic typeError(src, startPos, endPos, info = \"\") {\n\t\tconst error = UserError.new(\"TypeError\", src, startPos, endPos, info);\n\n\t\tsrc.errors.push(error);\n\n\t\treturn error;\n\t}\n\n\t/**\n\t * @param {Error} e \n\t * @returns {boolean}\n\t */\n\tstatic isTypeError(e) {\n\t\treturn (e instanceof UserError) && e.message.startsWith(\"TypeError\");\n\t}\n\n\t/**\n\t * Constructs a ReferenceError (i.e. name undefined, or name unused)\n\t * @internal\n\t * @param {Source} src \n\t * @param {number} startPos \n\t * @param {number} endPos\n\t * @param {string} info \n\t * @returns {UserError}\n\t */\n\tstatic referenceError(src, startPos, endPos, info = \"\") {\n\t\tconst error = UserError.new(\"ReferenceError\", src, startPos, endPos, info);\n\n\t\tsrc.errors.push(error);\n\n\t\treturn error;\n\t}\n\n\t/**\n\t * @param {Error} e \n\t * @returns {boolean}\n\t */\n\tstatic isReferenceError(e) {\n\t\treturn (e instanceof UserError) && e.message.startsWith(\"ReferenceError\");\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tget data() {\n\t\tthrow new Error(\"is error\");\n\t}\n\n\t/**\n\t * @internal\n\t * @type {number}\n\t */\n\tget startPos() {\n\t\treturn this.#startPos;\n\t}\n\n\t/**\n\t * Calculates column/line position in 'this.src'.\n\t * @internal\n\t * @returns {[number, number, number, number]} - [startLine, startCol, endLine, endCol]\n\t */\n\tgetFilePos() {\n\t\tconst [startLine, startCol] = this.#src.posToLineAndCol(this.#startPos);\n\t\tconst [endLine, endCol] = this.#src.posToLineAndCol(this.#endPos);\n\n\t\treturn [startLine, startCol, endLine, endCol];\n\t}\n\n\t/**\n\t * Dumps the error without throwing.\n\t * If 'verbose == true' the Source is also pretty printed with line-numbers.\n\t * @internal\n\t * @param {boolean} verbose \n\t */\n\tdump(verbose = false) {\n\t\tif (verbose) {\n\t\t\tconsole.error(this.#src.pretty());\n\t\t}\n\n\t\tconsole.error(\"\\n\" + this.message);\n\t}\n\n\t/**\n\t * Returns the error message (alternative to e.message)\n\t * @returns {string}\n\t */\n\ttoString() {\n\t\treturn this.message;\n\t}\n\n\t/**\n\t * Catches any UserErrors thrown inside 'fn()`.\n\t * Dumps the error\n\t * @template T\n\t * @param {() => T} fn \n\t * @param {boolean} verbose \n\t * @returns {T | undefined}\t\n\t */\n\tstatic catch(fn, verbose = false) {\n\t\ttry {\n\t\t\treturn fn();\n\t\t} catch (error) {\n\t\t\tif (error instanceof UserError) {\n\t\t\t\terror.dump(verbose);\n\t\t\t} else {\n\t\t\t\tthrow error;\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * Used for errors thrown during Uplc evaluation\n */\nexport class RuntimeError extends Error {\n\t/**\n\t * @type {Object}\n\t */\n\t#context; // additional context\n\n\t/**\n\t * @internal\n\t * @param {string} msg\n\t */\n\tconstructor(msg) {\n\t\tsuper(msg);\n\n\t\tthis.#context = {};\n\t}\n\n\tget context() {\n\t\treturn this.#context;\n\t}\n}\n\n/**\n * Token is the base class of all Expressions and Statements\n * @internal\n */\nexport class Token {\n\t#site;\n\n\t/**\n\t * @param {Site} site \n\t */\n\tconstructor(site) {\n\t\tthis.#site = assertDefined(site); // position in source of start of token\n\t}\n\n\tget site() {\n\t\treturn this.#site;\n\t}\n\n\t/**\n\t * @returns {string}\n\t */\n\ttoString() {\n\t\tthrow new Error(\"not yet implemented\");\n\t}\n\n\t/**\n\t * Returns 'true' if 'this' is a literal primitive, a literal struct constructor, or a literal function expression.\n\t * @returns {boolean}\n\t */\n\tisLiteral() {\n\t\treturn false;\n\t}\n\n\t/**\n\t * Returns 'true' if 'this' is a Word token.\n\t * @param {?(string | string[])} value\n\t * @returns {boolean}\n\t */\n\tisWord(value = null) {\n\t\treturn false;\n\t}\n\n\t/**\n\t * @returns {boolean}\n\t */\n\tisKeyword() {\n\t\treturn false;\n\t}\n\n\t/**\n\t * Returns 'true' if 'this' is a Symbol token (eg. '+', '(' etc.)\n\t * @param {?(string | string[])} value\n\t * @returns {boolean}\n\t */\n\tisSymbol(value = null) {\n\t\treturn false;\n\t}\n\n\t/**\n\t * Returns 'true' if 'this' is a group (eg. '(...)').\n\t * @param {?string} value\n\t * @param {number | null} nFields\n\t * @returns {boolean}\n\t */\n\tisGroup(value, nFields = null) {\n\t\treturn false;\n\t}\n\n\t/**\n\t * Returns a SyntaxError at the current Site.\n\t * @param {string} msg \n\t * @returns {UserError}\n\t */\n\tsyntaxError(msg) {\n\t\treturn this.#site.syntaxError(msg);\n\t}\n\n\t/**\n\t * Returns a TypeError at the current Site.\n\t * @param {string} msg\n\t * @returns {UserError}\n\t */\n\ttypeError(msg) {\n\t\treturn this.#site.typeError(msg);\n\t}\n\n\t/**\n\t * Returns a ReferenceError at the current Site.\n\t * @param {string} msg\n\t * @returns {UserError}\n\t */\n\treferenceError(msg) {\n\t\treturn this.#site.referenceError(msg);\n\t}\n\n\t/**\n\t * Throws a SyntaxError if 'this' isn't a Word.\n\t * @param {?(string | string[])} value \n\t * @returns {Word | null}\n\t */\n\tassertWord(value = null) {\n\t\tif (value !== null) {\n\t\t\tthis.syntaxError(`expected \\'${value}\\', got \\'${this.toString()}\\'`);\n\t\t} else {\n\t\t\tthis.syntaxError(`expected word, got ${this.toString()}`);\n\t\t}\n\n\t\treturn null;\n\t}\n\n\t/**\n\t * Throws a SyntaxError if 'this' isn't a Symbol.\n\t * @param {?(string | string[])} value \n\t * @returns {SymbolToken | null}\n\t */\n\tassertSymbol(value = null) {\n\t\tif (value !== null) {\n\t\t\tthis.syntaxError(`expected '${value}', got '${this.toString()}'`);\n\t\t} else {\n\t\t\tthis.syntaxError(`expected symbol, got '${this.toString()}'`);\n\t\t}\n\n\t\treturn null;\n\t}\n\n\t/**\n\t * Throws a SyntaxError if 'this' isn't a Group.\n\t * @param {?string} type \n\t * @param {?number} nFields\n\t * @returns {Group | null}\n\t */\n\tassertGroup(type = null, nFields = null) {\n\t\tif (type !== null) {\n\t\t\tthis.syntaxError(`invalid syntax: expected '${type}...${Group.matchSymbol(type)}'`);\n\t\t} else {\n\t\t\tthis.syntaxError(`invalid syntax: expected group`);\n\t\t}\n\n\t\treturn null;\n\t}\n}\n\n/**\n * @internal\n * @param {undefined | null | Token} t\n * @param {Site} site\n * @param {string} msg\n * @returns {null | Token}\n */\nexport function assertToken(t, site, msg = \"expected token\") {\n\tif (!t) {\n\t\tsite.syntaxError(msg);\n\t\treturn null;\n\t} else {\n\t\treturn t;\n\t}\n}\n\n/**\n * A Word token represents a token that matches /[A-Za-z_][A-Za-z_0-9]/\n * @internal\n */\nexport class Word extends Token {\n\t#value;\n\n\t/**\n\t * @param {Site} site \n\t * @param {string} value \n\t */\n\tconstructor(site, value) {\n\t\tsuper(site);\n\t\tthis.#value = value;\n\t}\n\n\t/**\n\t * @param {string} value \n\t * @returns {Word}\n\t */\n\tstatic new(value) {\n\t\treturn new Word(Site.dummy(), value);\n\t}\n\n\tget value() {\n\t\treturn this.#value;\n\t}\n\n\t/**\n\t * @param {?(string | string[])} value \n\t * @returns {boolean}\n\t */\n\tisWord(value = null) {\n\t\tif (value !== null) {\n\t\t\tif (value instanceof Array) {\n\t\t\t\treturn value.lastIndexOf(this.#value) != -1;\n\t\t\t} else {\n\t\t\t\treturn value == this.#value;\n\t\t\t}\n\t\t} else {\n\t\t\treturn true;\n\t\t}\n\t}\n\n\t/**\n\t * @param {?(string | string[])} value \n\t * @returns {Word}\n\t */\n\tassertWord(value = null) {\n\t\tif (!this.isWord(value)) {\n\t\t\tsuper.assertWord(value);\n\t\t}\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * @returns {Word}\n\t */\n\tassertNotInternal() {\n\t\tif (this.#value == \"_\") {\n\t\t\tthrow this.syntaxError(\"_ is reserved\");\n\t\t} else if (this.#value.startsWith(\"__\")) {\n\t\t\tthrow this.syntaxError(\"__ prefix is reserved\");\n\t\t} else if (this.#value.endsWith(\"__\")) {\n\t\t\tthrow this.syntaxError(\"__ suffix is reserved\");\n\t\t}\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * @returns {boolean}\n\t */\n\tisKeyword() {\n\t\tswitch (this.#value) {\n\t\t\tcase \"const\":\n\t\t\tcase \"func\":\n\t\t\tcase \"struct\":\n\t\t\tcase \"enum\":\n\t\t\tcase \"import\":\n\t\t\tcase \"if\":\n\t\t\tcase \"else\":\n\t\t\tcase \"switch\":\n\t\t\tcase \"self\":\n\t\t\t\treturn true;\n\t\t\tdefault:\n\t\t\t\treturn false;\n\t\t}\n\t}\n\n\t/**\n\t * @returns {Word | null}\n\t */\n\tassertNotKeyword() {\n\t\tthis.assertNotInternal();\n\n\t\tif (this.isKeyword()) {\n\t\t\tthis.syntaxError(`'${this.#value}' is a reserved word`);\n\t\t\treturn null;\n\t\t}\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * @returns {string}\n\t */\n\ttoString() {\n\t\treturn this.#value;\n\t}\n\n\t/**\n\t * Finds the index of the first Word(value) in a list of tokens\n\t * Returns -1 if none found\n\t * @param {Token[]} ts \n\t * @param {string | string[]} value \n\t * @returns {number}\n\t */\n\tstatic find(ts, value) {\n\t\treturn ts.findIndex(item => item.isWord(value));\n\t}\n}\n\n/**\n * Symbol token represent anything non alphanumeric\n * @internal\n */\nexport class SymbolToken extends Token {\n\t#value;\n\n\t/**\n\t * @param {Site} site\n\t * @param {string} value\n\t */\n\tconstructor(site, value) {\n\t\tsuper(site);\n\t\tthis.#value = value;\n\t}\n\n\tget value() {\n\t\treturn this.#value;\n\t}\n\n\t/**\n\t * @param {?(string | string[])} value \n\t * @returns {boolean}\n\t */\n\tisSymbol(value = null) {\n\t\tif (value !== null) {\n\t\t\tif (value instanceof Array) {\n\t\t\t\treturn value.lastIndexOf(this.#value) != -1;\n\t\t\t} else {\n\t\t\t\treturn value == this.#value;\n\t\t\t}\n\t\t} else {\n\t\t\treturn true;\n\t\t}\n\t}\n\n\t/**\n\t * @param {?(string | string[])} value \n\t * @returns {SymbolToken}\n\t */\n\tassertSymbol(value) {\n\t\tif (!this.isSymbol(value)) {\n\t\t\tsuper.assertSymbol(value);\n\t\t}\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * @returns {string}\n\t */\n\ttoString() {\n\t\treturn this.#value;\n\t}\n\n\t/**\n\t * Finds the index of the first Symbol(value) in a list of tokens.\n\t * Returns -1 if none found.\n\t * @param {Token[]} ts\n\t * @param {string | string[]} value\n\t * @returns {number}\n\t */\n\tstatic find(ts, value) {\n\t\treturn ts.findIndex(item => item.isSymbol(value));\n\t}\n\n\t/**\n\t * Finds the index of the last Symbol(value) in a list of tokens.\n\t * Returns -1 if none found.\n\t * @param {Token[]} ts \n\t * @param {string | string[]} value \n\t * @returns {number}\n\t */\n\tstatic findLast(ts, value) {\n\t\tfor (let i = ts.length - 1; i >= 0; i--) {\n\t\t\tif (ts[i].isSymbol(value)) {\n\t\t\t\treturn i;\n\t\t\t}\n\t\t}\n\n\t\treturn -1;\n\t}\n}\n\n/**\n * Group token can '(...)', '[...]' or '{...}' and can contain comma separated fields.\n * @internal\n */\nexport class Group extends Token {\n\t#type;\n\t#fields;\n\t#firstComma;\n\n\t/**\n\t * @param {Site} site \n\t * @param {string} type - \"(\", \"[\" or \"{\"\n\t * @param {Token[][]} fields \n\t * @param {?SymbolToken} firstComma\n\t */\n\tconstructor(site, type, fields, firstComma = null) {\n\t\tsuper(site);\n\t\tthis.#type = type;\n\t\tthis.#fields = fields; // list of lists of tokens\n\t\tthis.#firstComma = firstComma;\n\n\t\tassert(fields.length < 2 || firstComma !== null);\n\t}\n\n\tget fields() {\n\t\treturn this.#fields.slice(); // copy, so fields_ doesn't get mutated\n\t}\n\n\t/**\n\t * @param {?string} type \n\t * @param {number | null} nFields\n\t * @returns {boolean}\n\t */\n\tisGroup(type = null, nFields = null) {\n\t\tconst nFieldsOk = (nFields === null) || (nFields == this.#fields.length);\n\n\t\tif (type !== null) {\n\t\t\treturn this.#type == type && nFieldsOk;\n\t\t} else {\n\t\t\treturn nFieldsOk;\n\t\t}\n\t}\n\n\t/**\n\t * @param {?string} type \n\t * @param {?number} nFields \n\t * @returns {Group | null}\n\t */\n\tassertGroup(type = null, nFields = null) {\n\t\tif (type !== null && this.#type != type) {\n\t\t\tthis.syntaxError(`invalid syntax: expected '${type}...${Group.matchSymbol(type)}', got '${this.#type}...${Group.matchSymbol(this.#type)}'`);\n\n\t\t\treturn null;\n\t\t} else if (type !== null && nFields !== null && nFields != this.#fields.length) {\n\t\t\tif (this.#fields.length > 1 && nFields <= 1 && this.#firstComma !== null) {\n\t\t\t\tthis.#firstComma.syntaxError(`invalid syntax, unexpected ','`);\n\t\t\t} else {\n\t\t\t\tthis.syntaxError(`invalid syntax: expected '${type}...${Group.matchSymbol(type)}' with ${nFields} field(s), got '${type}...${Group.matchSymbol(type)}' with ${this.#fields.length} fields`);\n\t\t\t}\n\n\t\t\treturn null;\n\t\t} else {\n\t\t\treturn this;\n\t\t}\n\t}\n\n\t/**\n\t * @returns {string}\n\t */\n\ttoString() {\n\t\tlet s = this.#type;\n\n\t\tlet parts = [];\n\t\tfor (let f of this.#fields) {\n\t\t\tparts.push(f.map(t => t.toString()).join(\" \"));\n\t\t}\n\n\t\ts += parts.join(\", \") + Group.matchSymbol(this.#type);\n\n\t\treturn s;\n\t}\n\n\t/**\n\t * @param {Token} t \n\t * @returns {boolean}\n\t */\n\tstatic isOpenSymbol(t) {\n\t\treturn t.isSymbol(\"{\") || t.isSymbol(\"[\") || t.isSymbol(\"(\");\n\t}\n\n\t/**\n\t * @param {Token} t \n\t * @returns {boolean}\n\t */\n\tstatic isCloseSymbol(t) {\n\t\treturn t.isSymbol(\"}\") || t.isSymbol(\"]\") || t.isSymbol(\")\");\n\t}\n\n\t/**\n\t * Returns the corresponding closing bracket, parenthesis or brace.\n\t * Throws an error if not a group symbol.\n\t * @example\n\t * Group.matchSymbol(\"(\") == \")\"\n\t * @param {string | SymbolToken} t\n\t * @returns {string}\n\t */\n\tstatic matchSymbol(t) {\n\t\tif (t instanceof SymbolToken) {\n\t\t\tt = t.value;\n\t\t}\n\n\t\tif (t == \"{\") {\n\t\t\treturn \"}\";\n\t\t} else if (t == \"[\") {\n\t\t\treturn \"]\";\n\t\t} else if (t == \"(\") {\n\t\t\treturn \")\";\n\t\t} else if (t == \"}\") {\n\t\t\treturn \"{\";\n\t\t} else if (t == \"]\") {\n\t\t\treturn \"[\";\n\t\t} else if (t == \")\") {\n\t\t\treturn \"(\";\n\t\t} else {\n\t\t\tthrow new Error(\"not a group symbol\");\n\t\t}\n\t}\n\n\t/**\n\t * Finds the index of first Group(type) in list of tokens\n\t * Returns -1 if none found.\n\t * @param {Token[]} ts \n\t * @param {string} type \n\t * @returns {number}\n\t */\n\tstatic find(ts, type) {\n\t\treturn ts.findIndex(item => item.isGroup(type));\n\t}\n}\n\n/**\n * Base class of literal tokens\n * @internal\n */\nexport class PrimitiveLiteral extends Token {\n\t/**\n\t * @param {Site} site \n\t */\n\tconstructor(site) {\n\t\tsuper(site);\n\t}\n\n\t/**\n\t * @returns {boolean}\n\t */\n\tisLiteral() {\n\t\treturn true;\n\t}\n}\n\n/**\n * Signed int literal token\n * @internal\n */\nexport class IntLiteral extends PrimitiveLiteral {\n\t#value;\n\n\t/**\n\t * @param {Site} site \n\t * @param {bigint} value \n\t */\n\tconstructor(site, value) {\n\t\tsuper(site);\n\t\tthis.#value = value;\n\t}\n\n\tget value() {\n\t\treturn this.#value;\n\t}\n\n\t/**\n\t * @returns {string}\n\t */\n\ttoString() {\n\t\treturn this.#value.toString();\n\t}\n}\n\n/**\n * Fixed point number literal token\n * @internal\n */\nexport class RealLiteral extends PrimitiveLiteral {\n\t#value;\n\n\t/**\n\t * @param {Site} site \n\t * @param {bigint} value \n\t */\n\tconstructor(site, value) {\n\t\tsuper(site);\n\t\tthis.#value = value;\n\t}\n\n\tget value() {\n\t\treturn this.#value;\n\t}\n\n\t/**\n\t * @returns {string}\n\t */\n\ttoString() {\n\t\treturn this.#value.toString();\n\t}\n}\n\n/**\n * Bool literal token\n * @internal\n */\nexport class BoolLiteral extends PrimitiveLiteral {\n\t#value;\n\n\t/**\n\t * @param {Site} site \n\t * @param {boolean} value \n\t */\n\tconstructor(site, value) {\n\t\tsuper(site);\n\t\tthis.#value = value;\n\t}\n\n\tget value() {\n\t\treturn this.#value;\n\t}\n\n\t/**\n\t * @returns {string}\n\t */\n\ttoString() {\n\t\treturn this.#value ? \"true\" : \"false\";\n\t}\n}\n\n/**\n * ByteArray literal token\n * @internal\n */\nexport class ByteArrayLiteral extends PrimitiveLiteral {\n\t#bytes;\n\n\t/**\n\t * @param {Site} site \n\t * @param {number[]} bytes \n\t */\n\tconstructor(site, bytes) {\n\t\tsuper(site);\n\t\tthis.#bytes = bytes;\n\t}\n\n\tget bytes() {\n\t\treturn this.#bytes;\n\t}\n\n\ttoString() {\n\t\treturn `#${bytesToHex(this.#bytes)}`;\n\t}\n}\n\n/**\n * String literal token (utf8)\n * @internal\n */\nexport class StringLiteral extends PrimitiveLiteral {\n\t#value;\n\n\t/**\n\t * @param {Site} site \n\t * @param {string} value \n\t */\n\tconstructor(site, value) {\n\t\tsuper(site);\n\t\tthis.#value = value;\n\t}\n\n\tget value() {\n\t\treturn this.#value;\n\t}\n\n\ttoString() {\n\t\treturn `\"${this.#value.toString()}\"`;\n\t}\n}\n\n/**\n * @internal\n * @typedef {[number, Site][]} CodeMap\n */\n\n/**\n * @internal\n * @typedef {Map<string, IR>} IRDefinitions\n */\n\n/**\n * The IR class combines a string of intermediate representation sourcecode with an optional site.\n * The site is used for mapping IR code to the original source code.\n * @internal\n */\n export class IR {\n\t#content;\n\t#site;\n\n\t/**\n\t * @param {string | IR[]} content \n\t * @param {null | Site} site \n\t */\n\tconstructor(content, site = null) {\n\t\tassert(!(Array.isArray(content) && content.some(item => item == undefined)), \"some items undefined\");\n\t\tthis.#content = content;\n\t\tthis.#site = site;\n\t}\n\n    /**\n     * @internal\n     * @type {string | IR[]}\n     */\n\tget content() {\n\t\treturn this.#content;\n\t}\n\n    /**\n     * @internal\n     * @type {?Site}\n     */\n\tget site() {\n\t\treturn this.#site;\n\t}\n\n\t/**\n\t * Can be used as a template literal tag function\n\t * @param {string | TemplateStringsArray | IR[]} content \n\t * @param  {...(Site | string | IR | IR[] | null | number)} args \n\t * @returns {IR}\n\t */\n\tstatic new(content, ...args) {\n\t\tif (typeof content == \"string\") {\n\t\t\tif (args.length == 0) {\n\t\t\t\treturn new IR(content);\n\t\t\t} else if (args.length == 1 && args[0] instanceof Site) {\n\t\t\t\tconst site = args[0];\n\n\t\t\t\tif (site instanceof Site) {\n\t\t\t\t\treturn new IR(content, site);\n\t\t\t\t} else {\n\t\t\t\t\tthrow new Error(\"unexpected second argument\");\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthrow new Error(\"unexpected second argument\");\n\t\t\t}\n\t\t} else if (\"raw\" in content) {\n\t\t\tconst raw = content.raw.slice();\n\n\t\t\t/**\n\t\t\t * @type {IR[]}\n\t\t\t */\n\t\t\tlet items = [];\n\t\t\t\n\t\t\t/**\n\t\t\t * @type {Site | null}\n\t\t\t */\n\t\t\tlet lastSite = null;\n\t\t\t\n\t\t\tif (raw.length > 0 && raw[raw.length - 1] == \"\" && args.length > 0 && args[args.length -1 ] instanceof Site) {\n\t\t\t\traw.pop();\n\t\t\t\tlastSite = assertClass(args.pop(), Site);\n\t\t\t}\n\n\t\t\tlet s = \"\";\n\n\t\t\tfor (let c of raw) {\n\t\t\t\ts += c;\n\n\t\t\t\tconst a = args.shift();\n\n\t\t\t\tif (a instanceof Site) {\n\t\t\t\t\titems.push(new IR(s, a));\n\t\t\t\t\ts = \"\";\n\t\t\t\t} else if (a instanceof IR) {\n\t\t\t\t\tif (s != \"\") {\n\t\t\t\t\t\titems.push(new IR(s));\n\t\t\t\t\t\ts = \"\";\n\t\t\t\t\t}\n\n\t\t\t\t\titems.push(a);\n\t\t\t\t} else if (Array.isArray(a)) {\n\t\t\t\t\tif (s != \"\") {\n\t\t\t\t\t\titems.push(new IR(s));\n\t\t\t\t\t\ts = \"\";\n\t\t\t\t\t}\n\n\t\t\t\t\ta.forEach(ir => items.push(ir));\n\t\t\t\t} else if (typeof a == \"string\" || typeof a == \"number\") {\n\t\t\t\t\ts += a.toString();\n\t\t\t\t} else if (a === undefined || a === null) {\n\t\t\t\t\tif (s != \"\") {\n\t\t\t\t\t\titems.push(new IR(s));\n\t\t\t\t\t\ts = \"\";\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tthrow new Error(\"unexpected second argument\");\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tassert(args.length == 0);\n\n\t\t\tif (s != \"\") {\n\t\t\t\titems.push(new IR(s));\n\t\t\t}\n\n\t\t\treturn new IR(items, lastSite);\n\t\t} else if (Array.isArray(content)) {\n\t\t\t/**\n\t\t\t * @type {IR[]}\n\t\t\t */\n\t\t\tlet items = [];\n\n\t\t\tfor (let c of content) {\n\t\t\t\titems.push(c);\n\t\t\t}\n\n\t\t\tif (args.length == 0) {\n\t\t\t\treturn new IR(items);\n\t\t\t} else if (args.length == 1) {\n\t\t\t\tconst arg = args[0];\n\t\t\t\tif (arg instanceof Site) {\n\t\t\t\t\treturn new IR(items, arg);\n\t\t\t\t} else {\n\t\t\t\t\tthrow new Error(\"unexpected second argument\");\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthrow new Error(\"unexpected second argument\");\n\t\t\t}\n\t\t} else {\n\t\t\tthrow new Error(\"unexpected first argument\");\n\t\t}\n\t}\n\n\t/**\n\t * @returns {any}\n\t */\n\tdump() {\n\t\tif (typeof this.#content == \"string\") {\n\t\t\treturn this.#content;\n\t\t} else {\n\t\t\treturn this.#content.map(c => c.dump());\n\t\t}\n\t}\n\n\t/**\n\t * Returns a list containing IR instances that themselves only contain strings\n     * @internal\n\t * @returns {IR[]}\n\t */\n\tflatten() {\n\t\tif (typeof this.#content == \"string\") {\n\t\t\treturn [this];\n\t\t} else {\n\t\t\t/**\n\t\t\t * @type {IR[]}\n\t\t\t */\n\t\t\tlet result = [];\n\n\t\t\tfor (let item of this.#content) {\n\t\t\t\tresult = result.concat(item.flatten());\n\t\t\t}\n\n\t\t\treturn result;\n\t\t}\n\t}\n\n\t/**\n\t * Intersperse nested IR content with a separator\n     * @internal\n\t * @param {string} sep\n\t * @returns {IR}\n\t */\n\tjoin(sep) {\n\t\tif (typeof this.#content == \"string\") {\n\t\t\treturn this;\n\t\t} else {\n\t\t\t/** @type {IR[]} */\n\t\t\tconst result = [];\n\n\t\t\tfor (let i = 0; i < this.#content.length; i++) {\n\t\t\t\tresult.push(this.#content[i]);\n\n\t\t\t\tif (i < this.#content.length - 1) {\n\t\t\t\t\tresult.push(new IR(sep))\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn new IR(result);\n\t\t}\n\t}\n\n\t/**\n\t * @returns {string}\n\t */\n\ttoString() {\n\t\treturn this.flatten().map(p => typeof p.content == \"string\" ? p.content : \"\").join(\"\");\n\t}\n\n    /**\n     * @internal\n\t * @returns {[string, CodeMap]}\n\t */\n\tgenerateSource() {\n\t\tconst parts = this.flatten();\n\n\t\t/** @type {string[]} */\n\t\tconst partSrcs = [];\n\n\t\t/** @type {CodeMap} */\n\t\tconst codeMap = [];\n\n\t\tlet pos = 0;\n\t\tfor (let part of parts) {\n\t\t\tconst rawPartSrc = part.content;\n\n\t\t\tif (typeof rawPartSrc == \"string\") {\n\t\t\t\tconst origSite = part.site;\n\t\t\t\tif (origSite !== null) {\n\t\t\t\t\t/** @type {[number, Site]} */\n\t\t\t\t\tconst pair = [pos, origSite];\n\n\t\t\t\t\tcodeMap.push(pair);\n\t\t\t\t}\n\n\t\t\t\tconst partSrc = replaceTabs(rawPartSrc);\n\n\t\t\t\tpos += partSrc.length;\n\t\t\t\tpartSrcs.push(partSrc);\n\t\t\t} else {\n\t\t\t\tthrow new Error(\"expected IR to contain only strings after flatten\");\n\t\t\t}\n\t\t}\n\n\t\treturn [partSrcs.join(\"\"), codeMap];\n\t}\n\n\t/**\n\t * @returns {string}\n\t */\n\tpretty() {\n\t\tconst [src, _] = this.generateSource();\n\n\t\treturn (new Source(src, \"\")).pretty();\n\t}\n\n\t/**\n\t * @param {string} str \n\t * @returns {boolean}\n\t */\n\tincludes(str) {\n\t\tif (typeof this.#content == \"string\") {\n\t\t\treturn this.#content.includes(str);\n\t\t} else {\n\t\t\treturn this.#content.some(ir => ir.includes(str));\n\t\t}\n\t}\n\n\t/**\n\t * @param {RegExp} re \n\t * @param {string} newStr\n\t * @returns {IR}\n\t */\n\treplace(re, newStr) {\n\t\tif (typeof this.#content == \"string\") {\n\t\t\treturn new IR(this.#content.replace(re, newStr), this.#site);\n\t\t} else {\n\t\t\treturn new IR(this.#content.map(ir => ir.replace(re, newStr), this.#site));\n\t\t}\n\t}\n\n\t/**\n\t * \n\t * @param {RegExp} re \n\t * @param {(match: string) => void} callback \n\t */\n\tsearch(re, callback) {\n\t\tif (typeof this.#content == \"string\") {\n\t\t\tconst ms = this.#content.match(re);\n\n\t\t\tif (ms) {\n\t\t\t\tfor (let m of ms) {\n\t\t\t\t\tcallback(m);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tthis.#content.forEach(ir => ir.search(re, callback));\n\t\t}\n\t}\n\n\t/**\n\t * Wraps 'inner' IR source with some definitions (used for top-level statements and for builtins)\n     * @internal\n\t * @param {IR} inner \n\t * @param {IRDefinitions} definitions - name -> definition\n\t * @returns {IR}\n\t */\n\tstatic wrapWithDefinitions(inner, definitions) {\n\t\tconst keys = Array.from(definitions.keys()).reverse();\n\n\t\tlet res = inner;\n\t\tfor (let key of keys) {\n\t\t\tconst definition = definitions.get(key);\n\n\t\t\tif (definition === undefined) {\n\t\t\t\tthrow new Error(\"unexpected\");\n\t\t\t} else {\n\n\t\t\t\tres = new IR([new IR(\"(\"), new IR(key), new IR(\") -> {\\n\"),\n\t\t\t\t\tres, new IR(`\\n}(\\n${TAB}/*${key}*/\\n${TAB}`), definition,\n\t\t\t\tnew IR(\"\\n)\")]);\n\t\t\t}\n\t\t}\n\n\t\treturn res;\n\t}\n}\n\n/**\n * @internal\n */\nexport const RE_IR_PARAMETRIC_NAME = /[a-zA-Z_][a-zA-Z_0-9]*[[][a-zA-Z_0-9@[\\]]*/g;\n\n\n/**\n * Type type parameter prefix\n * @internal\n */\nexport const TTPP = \"__T\";\n\n/**\n * Func type parameter prefix\n * @internal\n */\nexport const FTPP = \"__F\";\n\nconst RE_TEMPLATE_NAME = new RegExp(`\\\\b(${TTPP}|${FTPP})[0-9]*\\\\b`);\n\n/**\n * @internal\n */\nexport class IRParametricName {\n\t/**\n\t * Base type name\n\t * @type {string}\n\t */\n\t#base;\n\n\t/**\n\t * Type type parameters\n\t * Note: nested type names can stay strings\n\t * Note: can be empty\n\t * @type {string[]}\n\t */\n\t#ttp;\n\n\t/**\n\t * Function name\n\t * @type {string}\n\t */\n\t#fn;\n\n\t/**\n\t * Function type parameters\n\t * Note: can be empty\n\t * @type {string[]}\n\t */\n\t#ftp;\n\n\t/**\n\t * @param {string} base \n\t * @param {string[]} ttp \n\t * @param {string} fn \n\t * @param {string[]} ftp \n\t */\n\tconstructor(base, ttp, fn = \"\", ftp = []) {\n\t\tthis.#base = base;\n\t\tthis.#ttp = ttp;\n\t\tthis.#fn = fn;\n\t\tthis.#ftp = ftp;\n\t}\n\n\t/**\n\t * @param {string} base \n\t * @param {number} nTtps \n\t * @param {string} fn \n\t * @param {number} nFtps \n\t * @returns \n\t */\n\tstatic newTemplate(base, nTtps, fn = \"\", nFtps = 0) {\n\t\treturn new IRParametricName(\n\t\t\tbase, \n\t\t\t(new Array(nTtps)).map((_, i) => `${TTPP}${i}`),\n\t\t\tfn,\n\t\t\t(new Array(nFtps)).map((_, i) => `${FTPP}${i}`)\n\t\t);\n\t}\n\n\t/**\n\t * @type {string[]}\n\t */\n\tget ttp() {\n\t\treturn this.#ttp;\n\t}\n\n\t/**\n\t * @type {string[]}\n\t */\n\tget ftp() {\n\t\treturn this.#ftp;\n\t}\n\n\t/**\n\t * @type {string}\n\t */\n\tget base() {\n\t\treturn this.#base;\n\t}\n\n\t/**\n\t * @type {string}\n\t */\n\tget fn() {\n\t\treturn this.#fn;\n\t}\n\n\t/**\n\t * @param {string[]} ttp \n\t * @param {string[]} ftp \n\t * @returns {IRParametricName}\n\t */\n\ttoImplementation(ttp, ftp = []) {\n\t\tassert(ttp.length == this.#ttp.length, `expected ${this.#ttp.length} type parameters, got ${ttp.length} (in ${this.toString()})`);\n\t\tassert(ftp.length == this.#ftp.length, `expected ${this.#ftp.length} function type parameters, got ${ftp.length} (in ${this.toString()})`);\n\n\t\treturn new IRParametricName(this.#base, ttp, this.#fn, ftp);\n\t}\n\n\t/**\n\t * @returns {string}\n\t */\n\ttoString() {\n\t\treturn `${this.#base}${this.#ttp.length > 0 ? `[${this.#ttp.join(\"@\")}]` : \"\"}${this.#fn}${this.#ftp.length > 0 ? `[${this.#ftp.join(\"@\")}]` : \"\"}`;\n\t}\n\n\t/**\n\t * @param {boolean} emptyParameters\n\t * @return {string}\n\t */\n\ttoTemplate(emptyParameters = false) {\n\t\tif (emptyParameters) {\n\t\t\treturn `${this.#base}${this.#ttp.length > 0 ? \"[]\" : \"\"}${this.#fn}${this.#ftp.length > 0 ? \"[]\" : \"\"}`;\n\t\t} else {\n\t\t\treturn `${this.#base}${this.#ttp.length > 0 ? `[${this.#ttp.map((_, i) => `${TTPP}${i}`).join(\"@\")}]` : \"\"}${this.#fn}${this.#ftp.length > 0 ? `[${this.#ftp.map((_, i) => `${FTPP}${i}`).join(\"@\")}]` : \"\"}`;\n\t\t}\n\t}\n\n\t/**\n\t * @param {IR} ir\n\t * @returns {IR}\n\t */\n\treplaceTemplateNames(ir) {\n\t\tthis.#ttp.forEach((name, i) => {\n\t\t\tir = ir.replace(new RegExp(`\\\\b${TTPP}${i}`, \"gm\"), name);\n\t\t})\n\n\t\tthis.#ftp.forEach((name, i) => {\n\t\t\tir = ir.replace(new RegExp(`\\\\b${FTPP}${i}`, \"gm\"), name);\n\t\t})\n\n\t\treturn ir;\n\t}\n\n\t/**\n\t * @example\n \t * IRParametricName.matches(\"__helios__map[__T0@__T1]__fold[__F2@__F3]\") == true\n\t * @example\n\t * IRParametricName.matches(\"__helios__int\") == false\n\t * @example\n\t * IRParametricName.matches(\"__helios__option[__T0]__none__new\") == true\n\t * @param {string} str \n\t * @returns {boolean}\n\t */\n\tstatic matches(str) {\n\t\treturn str.match(RE_IR_PARAMETRIC_NAME) ? true : false;\n\t}\n\n\t/**\n\t * @param {string} name \n\t * @returns {boolean}\n\t */\n\tstatic isTemplate(name) {\n\t\treturn name.match(RE_TEMPLATE_NAME) ? true : false;\n\t}\n\n\t/**\n\t * @example\n\t * IRParametricName.parse(\"__helios__map[__T0@__T1]__fold[__F0@__F1]\").toString() == \"__helios__map[__T0@__T1]__fold[__F0@__F1]\"\n\t * @example\n\t * IRParametricName.parse(\"__helios__map[__helios__bytearray@__helios__map[__helios__bytearray@__helios__int]]__fold[__F0@__F1]\").toString() == \"__helios__map[__helios__bytearray@__helios__map[__helios__bytearray@__helios__int]]__fold[__F0@__F1]\"\n\t * @example\n\t * IRParametricName.parse(\"__helios__map[__helios__bytearray@__helios__map[__helios__bytearray@__helios__list[__T0]]]__fold[__F0@__F1]\").toString() == \"__helios__map[__helios__bytearray@__helios__map[__helios__bytearray@__helios__list[__T0]]]__fold[__F0@__F1]\"\n\t * @param {string} str \n\t * @param {boolean} preferType\n\t * @returns {IRParametricName}\n\t */\n\tstatic parse(str, preferType = false) {\n\t\tlet pos = 0;\n\n\t\t/**\n\t\t * @returns {string}\n\t\t */\n\t\tconst eatAlphaNum = () => {\n\t\t\tlet c = str.charAt(pos);\n\n\t\t\tconst chars = [];\n\n\t\t\twhile ((c >= \"a\" && c <= \"z\") || (c >= \"A\" && c <= \"Z\") || c == \"_\" || (c >= \"0\" && c <= \"9\")) {\n\t\t\t\tchars.push(c);\n\n\t\t\t\tpos++;\n\n\t\t\t\tc = str.charAt(pos);\n\t\t\t}\n\t\t\t\n\t\t\treturn chars.join(\"\");\n\t\t}\n\n\t\t/**\n\t\t * @returns {string[]}\n\t\t */\n\t\tconst eatParams = () => {\n\t\t\tif (pos >= str.length) {\n\t\t\t\treturn [];\n\t\t\t}\n\t\t\t\n\t\t\tlet c = str.charAt(pos);\n\n\t\t\tassert(c == \"[\", `expected [, got ${c} (in ${str})`);\n\n\t\t\tconst groups = [];\n\t\t\tlet chars = [];\n\n\t\t\tlet depth = 1;\n\n\t\t\twhile (depth > 0) {\n\t\t\t\tpos++;\n\n\t\t\t\tc = str.charAt(pos);\n\n\t\t\t\tif (c == \"[\") {\n\t\t\t\t\tchars.push(c);\n\t\t\t\t\tdepth++;\n\t\t\t\t} else if (c == \"]\") {\n\t\t\t\t\tif (depth > 1) {\n\t\t\t\t\t\tchars.push(c);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (chars.length > 0) {\n\t\t\t\t\t\t\tgroups.push(chars);\t\n\t\t\t\t\t\t}\n\t\t\t\t\t\tchars = [];\n\t\t\t\t\t}\n\t\t\t\t\tdepth--;\n\t\t\t\t} else if (c == \"@\") {\n\t\t\t\t\tif (depth > 1) {\n\t\t\t\t\t\tchars.push(c);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tassert(chars.length > 0, \"zero chars in group before @\");\n\t\t\t\t\t\tgroups.push(chars);\n\t\t\t\t\t\tchars = [];\n\t\t\t\t\t}\n\t\t\t\t} else if ((c >= \"a\" && c <= \"z\") || (c >= \"A\" && c <= \"Z\") || c == \"_\" || (c >= \"0\" && c <= \"9\")) {\n\t\t\t\t\tchars.push(c);\n\t\t\t\t} else {\n\t\t\t\t\tthrow new Error(`unexpected char '${c}' in parametric name '${str}'`);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// final closing bracket\n\t\t\tpos++;\n\n\t\t\treturn groups.map(g => g.join(\"\"));\n\t\t}\n\n\t\t/**\n\t\t * \n\t\t * @param {string} base \n\t\t * @returns {[string, string]}\n\t\t */\n\t\tconst uneatFn = (base) => {\n\t\t\tlet pos = base.length - 1;\n\n\t\t\tlet c = base.charAt(pos);\n\n\t\t\tassert(c != \"_\", \"unexpected underscore\");\n\n\t\t\tlet underscores = 0;\n\n\t\t\twhile (pos > 0) {\n\t\t\t\tpos--;\n\t\t\t\tc = base.charAt(pos);\n\n\t\t\t\tif (underscores >= 2) {\n\t\t\t\t\tif (c != \"_\") {\n\t\t\t\t\t\treturn [base.slice(0, pos+1), base.slice(pos+1)];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tunderscores++;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (c == \"_\") {\n\t\t\t\t\t\tunderscores++;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tunderscores = 0;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthrow new Error(\"bad name format\");\n\t\t}\n\n\t\tlet base = eatAlphaNum();\n\n\t\tlet ttp = eatParams();\n\t\tlet fn = \"\";\n\t\tlet ftp = [];\n\n\t\tif (pos >= str.length) {\n\t\t\tif (!preferType) {\n\t\t\t\t[base, fn] = uneatFn(base);\n\t\t\t\tftp = ttp;\n\t\t\t\tttp = [];\n\t\t\t}\n\t\t} else {\n\t\t\tfn = eatAlphaNum();\n\n\t\t\tif (pos < str.length) {\n\t\t\t\tftp = eatParams();\n\t\t\t}\n\t\t}\n\n\t\treturn new IRParametricName(base, ttp, fn, ftp);\n\t}\n}\n\n\n////////////////////////////////////\n// Section 4: Cryptography functions\n////////////////////////////////////\n/**\n * Size of default Blake2b digest\n * @internal\n */\nvar BLAKE2B_DIGEST_SIZE = 32; // bytes\n\n/**\n * Changes the value of BLAKE2B_DIGEST_SIZE \n *  (because the nodejs crypto module only supports \n *   blake2b-512 and not blake2b-256, and we want to avoid non-standard dependencies in the \n *   test-suite)\n * @internal\n * @param {number} s - 32 or 64\n */\nexport function setBlake2bDigestSize(s) {\n    BLAKE2B_DIGEST_SIZE = s;\n}\n\n/**\n * Make sure resulting number fits in uint32\n * @internal\n * @param {number} x\n */\nfunction imod32(x) {\n    return x >>> 0;\n}\n\n/**\n * 32 bit number rotation\n * @internal\n * @param {number} x - originally uint32\n * @param {number} n\n * @returns {number} - originally uint32\n */\nfunction irotr(x, n) {\n    return imod32((x >>> n) | (x << (32 - n)));\n}\n\n/**\n * Positive modulo operator\n * @internal\n * @param {bigint} x \n * @param {bigint} n \n * @returns {bigint}\n */\nfunction posMod(x, n) {\n    const res = x % n;\n\n    if (res < 0n) {\n        return res + n;\n    } else {\n        return res;\n    }\n}\n\n/**\n * @internal\n * @param {NumberGenerator} random \n * @param {number} n \n * @returns {number[]}\n */\nexport function randomBytes(random, n) {\n    const key = [];\n\n    for (let i = 0; i < n; i++) {\n        key.push(Math.floor(random() * 256) % 256);\n    }\n\n    return key;\n}\n\n/**\n * TODO: switch to using UInt64Fast instead of UInt64 everywhere\n * First entry: high\n * Second entry: low\n * @typedef {[number, number]} UInt64Fast\n */\n\nconst UINT64_ZERO = [0, 0];\n\n/**\n * \n * @param {number[]} bytes \n * @param {boolean} littleEndian \n * @returns {UInt64Fast}\n */\nfunction uint64FromBytes(bytes, littleEndian = true) {\n    /** @type {number} */\n    let low;\n\n    /** @type {number} */\n    let high;\n\n    if (littleEndian) {\n        low = (bytes[0] << 0) | (bytes[1] << 8) | (bytes[2] << 16) | (bytes[3] << 24);\n        high = (bytes[4] << 0) | (bytes[5] << 8) | (bytes[6] << 16) | (bytes[7] << 24);\n    } else {\n        high = (bytes[0] << 24) | (bytes[1] << 16) | (bytes[2] << 8) | (bytes[3] << 0);\n        low = (bytes[4] << 24) | (bytes[5] << 16) | (bytes[6] << 8) | (bytes[7] << 0);\n    }\n\n    return [imod32(high), imod32(low)];\n}\n\n/**\n * @param {string} str\n * @returns {UInt64Fast}\n */\nfunction uint64FromString(str) {\n    const high = parseInt(str.slice(0, 8), 16);\n    const low = parseInt(str.slice(8, 16), 16);\n\n    return [imod32(high), imod32(low)];\n}\n\n/**\n * Returns [low[0], low[1], low[2], low[3], high[0], high[1], high[2], high[3]] if littleEndian==true\n * @internal\n * @param {UInt64Fast} uint64\n * @param {boolean} littleEndian\n * @returns {number[]}\n */\nfunction uint64ToBytes([high, low], littleEndian = true) {\n    const res = [\n        (0x000000ff & low),\n        (0x0000ff00 & low) >>> 8,\n        (0x00ff0000 & low) >>> 16,\n        (0xff000000 & low) >>> 24,\n        (0x000000ff & high),\n        (0x0000ff00 & high) >>> 8,\n        (0x00ff0000 & high) >>> 16,\n        (0xff000000 & high) >>> 24,\n    ];\n\n    if (!littleEndian) {\n        res.reverse();\n    }\n\n    return res;\n}\n\n/**\n * @internal\n * @param {UInt64Fast} a\n * @param {UInt64Fast} b\n * @returns {boolean}\n */\nfunction uint64Eq([ha, la], [hb, lb]) {\n    return (ha == hb) && (la == lb);\n}\n\n/**\n * @internal\n * @param {UInt64Fast} uint64\n * @returns {UInt64Fast} \n */\nfunction uint64Not([high, low]) {\n   return [imod32(~high), imod32(~low)];\n}\n\n/**\n * @internal\n * @param {UInt64Fast} a\n * @param {UInt64Fast} b\n * @returns {UInt64Fast}\n */\nfunction uint64And([ha, la], [hb, lb]) {\n    return [imod32(ha & hb), imod32(la & lb)];\n}\n\n/**\n * @internal\n * @param {UInt64Fast} a\n * @param {UInt64Fast} b\n * @returns {UInt64Fast}\n */\nfunction uint64Xor([ha, la], [hb, lb]) {\n    return [imod32(ha ^ hb), imod32(la ^ lb)];\n}\n\n/**\n * @internal\n * @param {UInt64Fast} a \n * @param {UInt64Fast} b\n * @returns {UInt64Fast}\n */\nfunction uint64Add([ha, la], [hb, lb]) {\n    const low = la + lb;\n\n    let high = ha + hb;\n\n    if (low >= 0x100000000) {\n        high += 1;\n    }\n\n    return [imod32(high), imod32(low)];\n}\n\n/**\n * @internal\n * @param {UInt64Fast} uint64\n * @param {number} n \n * @returns {UInt64Fast}\n */\nfunction uint64Rotr([high, low], n) {\n    if (n == 32) {\n        return [low, high];\n    } else if (n > 32) {\n        n -= 32;\n        [high, low] = [low, high];\n    }\n\n    return [\n        imod32((high >>> n) | (low << (32 - n))),\n        imod32((low >>> n) | (high << (32 - n)))\n    ];\n}\n\n/**\n * @internal\n * @param {UInt64Fast} uint64\n * @param {number} n\n * @returns {UInt64Fast}\n */\nfunction uint64Shiftr([high, low], n) {\n    if (n >= 32) {\n        return [\n            0, \n            imod32(high >>> n - 32)\n        ];\n    } else {\n        return [\n            imod32(high >>> n), \n            imod32((low >>> n) | (high << (32 - n)))\n        ];\n    }\n}\n\n/**\n * UInt64 number (represented by 2 UInt32 numbers)\n * @internal\n */\nclass UInt64 {\n    high;\n    low;\n\n    /**\n     * @param {number} high  - uint32 number\n     * @param {number} low - uint32 number\n     */\n    constructor(high, low) {\n        this.high = high;\n        this.low = low;\n    }\n\n    /**\n     * @internal\n     * @returns {UInt64}\n     */\n    static zero() {\n        return new UInt64(0, 0);\n    }\n\n    /**\n     * @internal\n     * @param {number[]} bytes - 8 uint8 numbers\n     * @param {boolean} littleEndian\n     * @returns {UInt64}\n     */\n    static fromBytes(bytes, littleEndian = true) {\n        /** @type {number} */\n        let low;\n\n        /** @type {number} */\n        let high;\n\n        if (littleEndian) {\n            low = (bytes[0] << 0) | (bytes[1] << 8) | (bytes[2] << 16) | (bytes[3] << 24);\n            high = (bytes[4] << 0) | (bytes[5] << 8) | (bytes[6] << 16) | (bytes[7] << 24);\n        } else {\n            high = (bytes[0] << 24) | (bytes[1] << 16) | (bytes[2] << 8) | (bytes[3] << 0);\n            low = (bytes[4] << 24) | (bytes[5] << 16) | (bytes[6] << 8) | (bytes[7] << 0);\n        }\n\n        return new UInt64(imod32(high), imod32(low));\n    }\n\n    /**\n     * @internal\n     * @param {string} str \n     * @returns {UInt64}\n     */\n    static fromString(str) {\n        const high = parseInt(str.slice(0, 8), 16);\n        const low = parseInt(str.slice(8, 16), 16);\n\n        return new UInt64(imod32(high), imod32(low));\n    }\n\n    /**\n     * Returns [low[0], low[1], low[2], low[3], high[0], high[1], high[2], high[3]] if littleEndian==true\n     * @internal\n     * @param {boolean} littleEndian\n     * @returns {number[]}\n     */\n    toBytes(littleEndian = true) {\n        const res = [\n            (0x000000ff & this.low),\n            (0x0000ff00 & this.low) >>> 8,\n            (0x00ff0000 & this.low) >>> 16,\n            (0xff000000 & this.low) >>> 24,\n            (0x000000ff & this.high),\n            (0x0000ff00 & this.high) >>> 8,\n            (0x00ff0000 & this.high) >>> 16,\n            (0xff000000 & this.high) >>> 24,\n        ];\n\n        if (!littleEndian) {\n            res.reverse();\n        }\n\n        return res;\n    }\n\n    /**\n     * @internal\n     * @param {UInt64} other \n     * @returns {boolean}\n     */\n    eq(other) {\n        return (this.high == other.high) && (this.low == other.low);\n    }\n\n    /**\n     * @internal\n     * @returns {UInt64} \n     */\n    not() {\n        return new UInt64(~this.high, ~this.low);\n    }\n\n    /**\n     * @internal\n     * @param {UInt64} other\n     * @returns {UInt64}\n     */\n    and(other) {\n        return new UInt64(this.high & other.high, this.low & other.low);\n    }\n\n    /**\n     * @internal\n     * @param {UInt64} other \n     * @returns {UInt64}\n     */\n    xor(other) {\n        return new UInt64(\n            imod32(this.high ^ other.high),\n            imod32(this.low ^ other.low)\n        );\n    }\n\n    /**\n     * @internal\n     * @param {UInt64} other \n     * @returns {UInt64}\n     */\n    add(other) {\n        const low = this.low + other.low;\n\n        let high = this.high + other.high;\n\n        if (low >= 0x100000000) {\n            high += 1;\n        }\n\n        return new UInt64(imod32(high), imod32(low));\n    }\n\n    /**\n     * @internal\n     * @param {number} n \n     * @returns {UInt64}\n     */\n    rotr(n) {\n        let h = this.high;\n        let l = this.low;\n\n        if (n == 32) {\n            return new UInt64(l, h);\n        } else if (n > 32) {\n            n  -= 32;\n            [h, l] = [l, h];   \n        }\n\n        return new UInt64(\n            imod32((h >>> n) | (l << (32 - n))),\n            imod32((l >>> n) | (h << (32 - n)))\n        );\n    }\n\n    /**\n     * @internal\n     * @param {number} n\n     * @returns {UInt64}\n     */\n    shiftr(n) {\n        if (n >= 32) {\n            return new UInt64(\n                0, \n                this.high >>> n - 32\n            );\n        } else {\n            return new UInt64(\n                this.high >>> n, \n                imod32((this.low >>> n) | this.high << (32 - n))\n            );\n        }\n    }\n}\n\n/**\n * @internal\n * @param {number[]} bytes \n * @returns {number[]} - list of numbers between 0 and 32\n */\nfunction encodeBase32Bytes(bytes) {\n    const result = [];\n\n    const reader = new BitReader(bytes, false);\n\n    while (!reader.eof()) {\n        result.push(reader.readBits(5));\n    }\n\n    return result;\n}\n\n/**\n * Expand human readable prefix of the bech32 encoding so it can be used in the checkSum.\n * @internal\n * @param {string} hrp\n * @returns {number[]}\n */\nfunction expandBech32HumanReadablePart(hrp) {\n    const bytes = [];\n    for (let c of hrp) {\n        bytes.push(c.charCodeAt(0) >> 5);\n    }\n\n    bytes.push(0);\n\n    for (let c of hrp) {\n        bytes.push(c.charCodeAt(0) & 31);\n    }\n\n    return bytes;\n}\n\n/**\n * Generate the bech32 checksum.\n * @internal\n * @param {string} hrp \n * @param {number[]} data - numbers between 0 and 32\n * @returns {number[]} - 6 numbers between 0 and 32\n */\nfunction calcBech32Checksum(hrp, data) {\n    const bytes = expandBech32HumanReadablePart(hrp).concat(data);\n\n    const chk = calcBech32Polymod(bytes.concat([0, 0, 0, 0, 0, 0])) ^ 1;\n\n    const chkSum = [];\n    for (let i = 0; i < 6; i++) {\n        chkSum.push((chk >> 5 * (5 - i)) & 31);\n    }\n\n    return chkSum;\n}\n\n\n/**\n * Used as part of the bech32 checksum.\n * @internal\n * @param {number[]} bytes \n * @returns {number}\n */\nfunction calcBech32Polymod(bytes) {\n    const GEN = [0x3b6a57b2, 0x26508e6d, 0x1ea119fa, 0x3d4233dd, 0x2a1462b3];\n\n    let chk = 1;\n    for (let b of bytes) {\n        const c = (chk >> 25);\n        chk = (chk & 0x1fffffff) << 5 ^ b;\n\n        for (let i = 0; i < 5; i++) {\n            if (((c >> i) & 1) != 0) {\n                chk ^= GEN[i];\n            }\n        }\n    }\n\n    return chk;\n}\n\n/**\n * Don't use this directly, use Crypto.hmacSha2_256 or Crypto.hmacSha2_512 instead\n * @internal\n * @param {(x: number[]) => number[]} algorithm \n * @param {number} b - blockSize of algorithm\n * @param {number[]} key \n * @param {number[]} message \n * @returns {number[]}\n */\nfunction hmac(algorithm, b, key, message) {\n    if (key.length > b) {\n        key = algorithm(key);\n    } else {\n        key = key.slice();\n    }\n\n    while (key.length < b) {\n        key.push(0x00);\n    }\n\n    const iPadded = key.map(k => (k ^ 0x36));\n    const oPadded = key.map(k => (k ^ 0x5c));\n\n    return algorithm(oPadded.concat(algorithm(iPadded.concat(message))));\n}\n\n/**\n * Rfc 4648 base32 alphabet\n * @type {string}\n */\nconst DEFAULT_BASE32_ALPHABET = \"abcdefghijklmnopqrstuvwxyz234567\";\n\n/**\n * Bech32 base32 alphabet\n * @type {string}\n */\nconst BECH32_BASE32_ALPHABET = \"qpzry9x8gf2tvdw0s3jn54khce6mua7l\";\n/**\n * The Helios `Crypto` namespace contains a collection of cryptography primitives.\n * \n * These functions have been implemented as part of the Helios library in order to avoid external dependencies\n * (there still isn't a standardized Javascript [Crypto API](https://developer.mozilla.org/en-US/docs/Web/API/SubtleCrypto) that provides all the needed functionality).\n * @namespace\n */\nexport const Crypto = {\n    /**\n     * A simple pseudo-random number generator for use in tests that requires some randomness but need to be deterministic\n     * (i.e. each test run gives the same result).\n     * @param {number} seed\n     * @returns {NumberGenerator} The returned function returns a new random number between 0 and 1 upon each call.\n     */\n    mulberry32: (seed) => {\n        /**\n         * @type {NumberGenerator}\n         */\n        return function () {\n            let t = seed += 0x6D2B79F5;\n            t = Math.imul(t ^ t >>> 15, t | 1);\n            t ^= t + Math.imul(t ^ t >>> 7, t | 61);\n            return ((t ^ t >>> 14) >>> 0) / 4294967296;\n        }\n    },\n\n    /**\n     * Alias for `mulberry32`.\n     * @param {number} seed\n     * @returns {NumberGenerator} The returned function returns a new random number between 0 and 1 upon each call.\n     */\n    rand: (seed) => {\n        return Crypto.mulberry32(seed);\n    },\n\n    /**\n     * Encodes bytes in using Base32.\n     * @example\n     * Crypto.encodeBase32(textToBytes(\"f\")) == \"my\"\n     * @example\n     * Crypto.encodeBase32(textToBytes(\"fo\")) == \"mzxq\"\n     * @example\n     * Crypto.encodeBase32(textToBytes(\"foo\")) == \"mzxw6\"\n     * @example\n     * Crypto.encodeBase32(textToBytes(\"foob\")) == \"mzxw6yq\"\n     * @example\n     * Crypto.encodeBase32(textToBytes(\"fooba\")) == \"mzxw6ytb\"\n     * @example\n     * Crypto.encodeBase32(textToBytes(\"foobar\")) == \"mzxw6ytboi\"\n     * @param {number[]} bytes list of uint8 numbers\n     * @param {string} alphabet list of chars, defaults to \"abcdefghijklmnopqrstuvwxyz234567\"\n     * @return {string}\n     */\n    encodeBase32: (bytes, alphabet = DEFAULT_BASE32_ALPHABET) => {\n        return encodeBase32Bytes(bytes).map(c => alphabet[c]).join(\"\");\n    },\n\n    /**\n     * Decodes a Base32 string into bytes.\n     * @example\n     * bytesToText(Crypto.decodeBase32(\"my\")) == \"f\"\n     * @example\n     * bytesToText(Crypto.decodeBase32(\"mzxq\")) == \"fo\"\n     * @example\n     * bytesToText(Crypto.decodeBase32(\"mzxw6\")) == \"foo\"\n     * @example\n     * bytesToText(Crypto.decodeBase32(\"mzxw6yq\")) == \"foob\"\n     * @example\n     * bytesToText(Crypto.decodeBase32(\"mzxw6ytb\")) == \"fooba\"\n     * @example\n     * bytesToText(Crypto.decodeBase32(\"mzxw6ytboi\")) == \"foobar\"\n     * @param {string} encoded \n     * @param {string} alphabet list of chars, defaults to \"abcdefghijklmnopqrstuvwxyz234567\"\n     * @return {number[]}\n     */\n    decodeBase32: (encoded, alphabet = DEFAULT_BASE32_ALPHABET) => {\n        const writer = new BitWriter();\n\n        const n = encoded.length;\n\n        for (let i = 0; i < n; i++) {\n            const c = encoded[i];\n            const code = alphabet.indexOf(c.toLowerCase());\n\n            if (i == n - 1) {\n                // last, make sure we align to byte\n\n                const nCut = n * 5 - 8 * Math.floor(n * 5 / 8);\n\n                const bits = padZeroes(code.toString(2), 5)\n\n                writer.write(bits.slice(0, 5 - nCut));\n            } else {\n                const bits = padZeroes(code.toString(2), 5);\n\n                writer.write(bits);\n            }\n        }\n\n        const result = writer.finalize(false);\n\n        return result;\n    },\n\n    /**\n     * Creates a Bech32 checksummed string (eg. used to represent Cardano addresses).\n     * @example\n     * Crypto.encodeBech32(\"foo\", textToBytes(\"foobar\")) == \"foo1vehk7cnpwgry9h96\"\n     * @example\n     * Crypto.encodeBech32(\"addr_test\", hexToBytes(\"70a9508f015cfbcffc3d88ac4c1c934b5b82d2bb281d464672f6c49539\")) == \"addr_test1wz54prcptnaullpa3zkyc8ynfddc954m9qw5v3nj7mzf2wggs2uld\"\n     * @param {string} hrp  human-readable part (eg. \"addr\")\n     * @param {number[]} data a list of uint8 bytes\n     * @returns {string}\n     */\n    encodeBech32: (hrp, data) => {\n        assert(hrp.length > 0, \"human-readable-part must have non-zero length\");\n\n        data = encodeBase32Bytes(data);\n\n        const chkSum = calcBech32Checksum(hrp, data);\n\n        return hrp + \"1\" + data.concat(chkSum).map(i => BECH32_BASE32_ALPHABET[i]).join(\"\");\n    },\n\n    /**\n     * Decomposes a Bech32 checksummed string (eg. a Cardano address), and returns the human readable part and the original bytes\n     * Throws an error if checksum is invalid.\n     * @example\n     * bytesToHex(Crypto.decodeBech32(\"addr_test1wz54prcptnaullpa3zkyc8ynfddc954m9qw5v3nj7mzf2wggs2uld\")[1]) == \"70a9508f015cfbcffc3d88ac4c1c934b5b82d2bb281d464672f6c49539\"\n     * @param {string} addr \n     * @returns {[string, number[]]} First part is the human-readable part, second part is a list containing the underlying bytes.\n     */\n    decodeBech32: (addr) => {\n        assert(Crypto.verifyBech32(addr), \"invalid bech32 addr\");\n\n        const i = addr.indexOf(\"1\");\n\n        assert(i != -1);\n\n        const hrp = addr.slice(0, i);\n\n        addr = addr.slice(i + 1);\n\n        const data = Crypto.decodeBase32(addr.slice(0, addr.length - 6), BECH32_BASE32_ALPHABET);\n\n        return [hrp, data];\n    },\n\n    /**\n     * Verifies a Bech32 checksum.\n     * @example\n     * Crypto.verifyBech32(\"foo1vehk7cnpwgry9h96\") == true\n     * @example\n     * Crypto.verifyBech32(\"foo1vehk7cnpwgry9h97\") == false\n     * @example\n     * Crypto.verifyBech32(\"a12uel5l\") == true\n     * @example\n     * Crypto.verifyBech32(\"mm1crxm3i\") == false\n     * @example\n     * Crypto.verifyBech32(\"A1G7SGD8\") == false\n     * @example\n     * Crypto.verifyBech32(\"abcdef1qpzry9x8gf2tvdw0s3jn54khce6mua7lmqqqxw\") == true\n     * @example\n     * Crypto.verifyBech32(\"?1ezyfcl\") == true\n     * @example\n     * Crypto.verifyBech32(\"addr_test1wz54prcptnaullpa3zkyc8ynfddc954m9qw5v3nj7mzf2wggs2uld\") == true\n     * @param {string} encoded\n     * @returns {boolean}\n     */\n    verifyBech32: (encoded) => {\n        const data = [];\n\n        const i = encoded.indexOf(\"1\");\n\n        if (i == -1 || i == 0) {\n            return false;\n        }\n\n        const hrp = encoded.slice(0, i);\n\n        encoded = encoded.slice(i + 1);\n\n        for (let c of encoded) {\n            const j = BECH32_BASE32_ALPHABET.indexOf(c);\n            if (j == -1) {\n                return false;\n            }\n\n            data.push(j);\n        }\n\n        const chkSumA = data.slice(data.length - 6);\n\n        const chkSumB = calcBech32Checksum(hrp, data.slice(0, data.length - 6));\n\n        for (let j = 0; j < 6; j++) {\n            if (chkSumA[j] != chkSumB[j]) {\n                return false;\n            }\n        }\n\n        return true;\n    },\n\n    /**\n     * Calculates sha2-256 (32bytes) hash of a list of bytes.\n     * Result is also a list of bytes.\n     * @example \n     * bytesToHex(Crypto.sha2_256([0x61, 0x62, 0x63])) == \"ba7816bf8f01cfea414140de5dae2223b00361a396177a9cb410ff61f20015ad\"\n     * @example\n     * Crypto.sha2_256(textToBytes(\"Hello, World!\")) == [223, 253, 96, 33, 187, 43, 213, 176, 175, 103, 98, 144, 128, 158, 195, 165, 49, 145, 221, 129, 199, 247, 10, 75, 40, 104, 138, 54, 33, 130, 152, 111]\n     * @param {number[]} bytes List of uint8 numbers\n     * @returns {number[]} List of uint8 numbers.\n     */\n    sha2_256: (bytes) => {\n        /**\n         * Pad a bytearray so its size is a multiple of 64 (512 bits).\n         * Internal method.\n         * @param {number[]} src - list of uint8 numbers\n         * @returns {number[]}\n         */\n        function pad(src) {\n            const nBits = src.length * 8;\n\n            let dst = src.slice();\n\n            dst.push(0x80);\n\n            if ((dst.length + 8) % 64 != 0) {\n                let nZeroes = (64 - dst.length % 64) - 8;\n                if (nZeroes < 0) {\n                    nZeroes += 64;\n                }\n\n                for (let i = 0; i < nZeroes; i++) {\n                    dst.push(0);\n                }\n            }\n\n            assert((dst.length + 8) % 64 == 0, \"bad padding\");\n\n            const lengthPadding = bigIntToBytes(BigInt(nBits));\n\n            assert(lengthPadding.length <= 8, \"input data too big\");\n\n            while (lengthPadding.length < 8) {\n                lengthPadding.unshift(0)\n            }\n\n            dst = dst.concat(lengthPadding);\n\n            return dst;\n        }\n\n        /**\n         * @type {number[]} - 64 uint32 numbers\n         */\n        const k = [\n            0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5,\n            0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n            0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3,\n            0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n            0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc,\n            0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n            0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7,\n            0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n            0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13,\n            0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n            0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3,\n            0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n            0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5,\n            0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n            0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208,\n            0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2,\n        ];\n\n        /**\n         * Initial hash (updated during compression phase)\n         * @type {number[]} - 8 uint32 number\n         */\n        const hash = [\n            0x6a09e667,\n            0xbb67ae85,\n            0x3c6ef372,\n            0xa54ff53a,\n            0x510e527f,\n            0x9b05688c,\n            0x1f83d9ab,\n            0x5be0cd19,\n        ];\n\n        /**\n         * @param {number} x\n         * @returns {number}\n         */\n        function sigma0(x) {\n            return irotr(x, 7) ^ irotr(x, 18) ^ (x >>> 3);\n        }\n\n        /**\n         * @param {number} x\n         * @returns {number}\n         */\n        function sigma1(x) {\n            return irotr(x, 17) ^ irotr(x, 19) ^ (x >>> 10);\n        }\n\n        bytes = pad(bytes);\n\n        // break message in successive 64 byte chunks\n        for (let chunkStart = 0; chunkStart < bytes.length; chunkStart += 64) {\n            const chunk = bytes.slice(chunkStart, chunkStart + 64);\n\n            const w = (new Array(64)).fill(0); // array of 32 bit numbers!\n\n            // copy chunk into first 16 positions of w\n            for (let i = 0; i < 16; i++) {\n                w[i] = (chunk[i * 4 + 0] << 24) |\n                    (chunk[i * 4 + 1] << 16) |\n                    (chunk[i * 4 + 2] << 8) |\n                    (chunk[i * 4 + 3]);\n            }\n\n            // extends the first 16 positions into the remaining 48 positions\n            for (let i = 16; i < 64; i++) {\n                w[i] = imod32(w[i - 16] + sigma0(w[i - 15]) + w[i - 7] + sigma1(w[i - 2]));\n            }\n\n            // intialize working variables to current hash value\n            let a = hash[0];\n            let b = hash[1];\n            let c = hash[2];\n            let d = hash[3];\n            let e = hash[4];\n            let f = hash[5];\n            let g = hash[6];\n            let h = hash[7];\n\n            // compression function main loop\n            for (let i = 0; i < 64; i++) {\n                const S1 = irotr(e, 6) ^ irotr(e, 11) ^ irotr(e, 25);\n                const ch = (e & f) ^ ((~e) & g);\n                const temp1 = imod32(h + S1 + ch + k[i] + w[i]);\n                const S0 = irotr(a, 2) ^ irotr(a, 13) ^ irotr(a, 22);\n                const maj = (a & b) ^ (a & c) ^ (b & c);\n                const temp2 = imod32(S0 + maj);\n\n                h = g;\n                g = f;\n                f = e;\n                e = imod32(d + temp1);\n                d = c;\n                c = b;\n                b = a;\n                a = imod32(temp1 + temp2);\n            }\n\n            // update the hash\n            hash[0] = imod32(hash[0] + a);\n            hash[1] = imod32(hash[1] + b);\n            hash[2] = imod32(hash[2] + c);\n            hash[3] = imod32(hash[3] + d);\n            hash[4] = imod32(hash[4] + e);\n            hash[5] = imod32(hash[5] + f);\n            hash[6] = imod32(hash[6] + g);\n            hash[7] = imod32(hash[7] + h);\n        }\n\n        // produce the final digest of uint8 numbers\n        const result = [];\n        for (let i = 0; i < 8; i++) {\n            const item = hash[i];\n\n            result.push(imod8(item >> 24));\n            result.push(imod8(item >> 16));\n            result.push(imod8(item >> 8));\n            result.push(imod8(item >> 0));\n        }\n\n        return result;\n    },\n\n    /**\n     * Calculates sha2-512 (64bytes) hash of a list of uint8 numbers.\n     * Result is also a list of uint8 number.\n     * @example \n     * bytesToHex(Crypto.sha2_512([0x61, 0x62, 0x63])) == \"ddaf35a193617abacc417349ae20413112e6fa4e89a97ea20a9eeee64b55d39a2192992a274fc1a836ba3c23a3feebbd454d4423643ce80e2a9ac94fa54ca49f\"\n     * @example \n     * bytesToHex(Crypto.sha2_512([])) == \"cf83e1357eefb8bdf1542850d66d8007d620e4050b5715dc83f4a921d36ce9ce47d0d13c5d85f2b0ff8318d2877eec2f63b931bd47417a81a538327af927da3e\"\n     * @example\n     * bytesToHex(Crypto.sha2_512(textToBytes(\"abcdbcdecdefdefgefghfghighijhijkijkljklmklmnlmnomnopnopq\"))) == \"204a8fc6dda82f0a0ced7beb8e08a41657c16ef468b228a8279be331a703c33596fd15c13b1b07f9aa1d3bea57789ca031ad85c7a71dd70354ec631238ca3445\"\n     * @example\n     * bytesToHex(Crypto.sha2_512(textToBytes(\"abcdefghbcdefghicdefghijdefghijkefghijklfghijklmghijklmnhijklmnoijklmnopjklmnopqklmnopqrlmnopqrsmnopqrstnopqrstuu\"))) == \"23565d109ac0e2aa9fb162385178895058b28489a6bc31cb55491ed83956851ab1d4bbd46440586f5c9c4b69c9c280118cbc55c71495d258cc27cc6bb25ee720\"\n     * @param {number[]} bytes List of uint8 numbers\n     * @returns {number[]} List of uint8 numbers.\n     */\n    sha2_512: (bytes) => {\n        /**\n         * Pad a bytearray so its size is a multiple of 128 (1024 bits).\n         * Internal method.\n         * @param {number[]} src - list of uint8 numbers\n         * @returns {number[]}\n         */\n        function pad(src) {\n            const nBits = src.length * 8;\n\n            let dst = src.slice();\n\n            dst.push(0x80);\n\n            if ((dst.length + 16) % 128 != 0) {\n                let nZeroes = (128 - dst.length % 128) - 16;\n                if (nZeroes < 0) {\n                    nZeroes += 128;\n                }\n\n                for (let i = 0; i < nZeroes; i++) {\n                    dst.push(0);\n                }\n            }\n\n            assert((dst.length + 16) % 128 == 0, \"bad padding\");\n\n            // assume nBits fits in 32 bits\n            const lengthPadding = bigIntToBytes(BigInt(nBits));\n\n            assert(lengthPadding.length <= 16, \"input data too big\");\n\n            while (lengthPadding.length < 16) {\n                lengthPadding.unshift(0);\n            }\n\n            dst = dst.concat(lengthPadding);\n\n            assert(dst.length % 128 == 0, \"bad length padding\");\n\n            return dst;\n        }\n\n        /**\n         * @type {number[]} - 80 uint64 numbers as 160 uint32 numbers\n         */\n        const k = [\n            0x428a2f98, 0xd728ae22, 0x71374491, 0x23ef65cd,\n            0xb5c0fbcf, 0xec4d3b2f, 0xe9b5dba5, 0x8189dbbc,\n            0x3956c25b, 0xf348b538, 0x59f111f1, 0xb605d019,\n            0x923f82a4, 0xaf194f9b, 0xab1c5ed5, 0xda6d8118,\n            0xd807aa98, 0xa3030242, 0x12835b01, 0x45706fbe,\n            0x243185be, 0x4ee4b28c, 0x550c7dc3, 0xd5ffb4e2,\n            0x72be5d74, 0xf27b896f, 0x80deb1fe, 0x3b1696b1,\n            0x9bdc06a7, 0x25c71235, 0xc19bf174, 0xcf692694,\n            0xe49b69c1, 0x9ef14ad2, 0xefbe4786, 0x384f25e3,\n            0x0fc19dc6, 0x8b8cd5b5, 0x240ca1cc, 0x77ac9c65,\n            0x2de92c6f, 0x592b0275, 0x4a7484aa, 0x6ea6e483,\n            0x5cb0a9dc, 0xbd41fbd4, 0x76f988da, 0x831153b5,\n            0x983e5152, 0xee66dfab, 0xa831c66d, 0x2db43210,\n            0xb00327c8, 0x98fb213f, 0xbf597fc7, 0xbeef0ee4,\n            0xc6e00bf3, 0x3da88fc2, 0xd5a79147, 0x930aa725,\n            0x06ca6351, 0xe003826f, 0x14292967, 0x0a0e6e70,\n            0x27b70a85, 0x46d22ffc, 0x2e1b2138, 0x5c26c926,\n            0x4d2c6dfc, 0x5ac42aed, 0x53380d13, 0x9d95b3df,\n            0x650a7354, 0x8baf63de, 0x766a0abb, 0x3c77b2a8,\n            0x81c2c92e, 0x47edaee6, 0x92722c85, 0x1482353b,\n            0xa2bfe8a1, 0x4cf10364, 0xa81a664b, 0xbc423001,\n            0xc24b8b70, 0xd0f89791, 0xc76c51a3, 0x0654be30,\n            0xd192e819, 0xd6ef5218, 0xd6990624, 0x5565a910,\n            0xf40e3585, 0x5771202a, 0x106aa070, 0x32bbd1b8,\n            0x19a4c116, 0xb8d2d0c8, 0x1e376c08, 0x5141ab53,\n            0x2748774c, 0xdf8eeb99, 0x34b0bcb5, 0xe19b48a8,\n            0x391c0cb3, 0xc5c95a63, 0x4ed8aa4a, 0xe3418acb,\n            0x5b9cca4f, 0x7763e373, 0x682e6ff3, 0xd6b2b8a3,\n            0x748f82ee, 0x5defb2fc, 0x78a5636f, 0x43172f60,\n            0x84c87814, 0xa1f0ab72, 0x8cc70208, 0x1a6439ec,\n            0x90befffa, 0x23631e28, 0xa4506ceb, 0xde82bde9,\n            0xbef9a3f7, 0xb2c67915, 0xc67178f2, 0xe372532b,\n            0xca273ece, 0xea26619c, 0xd186b8c7, 0x21c0c207,\n            0xeada7dd6, 0xcde0eb1e, 0xf57d4f7f, 0xee6ed178,\n            0x06f067aa, 0x72176fba, 0x0a637dc5, 0xa2c898a6,\n            0x113f9804, 0xbef90dae, 0x1b710b35, 0x131c471b,\n            0x28db77f5, 0x23047d84, 0x32caab7b, 0x40c72493,\n            0x3c9ebe0a, 0x15c9bebc, 0x431d67c4, 0x9c100d4c,\n            0x4cc5d4be, 0xcb3e42b6, 0x597f299c, 0xfc657e2a,\n            0x5fcb6fab, 0x3ad6faec, 0x6c44198c, 0x4a475817,\n        ];\n\n        /**\n         * Initial hash (updated during compression phase)\n         * @type {number[]} - 8 uint64 numbers as 16 uint32 number\n         */\n        const hash = [\n            0x6a09e667, 0xf3bcc908,\n            0xbb67ae85, 0x84caa73b,\n            0x3c6ef372, 0xfe94f82b,\n            0xa54ff53a, 0x5f1d36f1,\n            0x510e527f, 0xade682d1,\n            0x9b05688c, 0x2b3e6c1f,\n            0x1f83d9ab, 0xfb41bd6b,\n            0x5be0cd19, 0x137e2179,\n        ];\n\n        /**\n         * @param {number[]} hash \n         * @param {number} i \n         * @param {number} h \n         * @param {number} l \n         */\n        function updateHash(hash, i, h, l) {\n            l = hash[i+1] + l;\n            hash[i] = (hash[i] + h + Math.floor(l / 4294967296)) >>> 0;\n            hash[i+1] = l >>> 0;\n        }\n\n        bytes = pad(bytes);\n\n        // break message in successive 64 byte chunks\n        for (let chunkStart = 0; chunkStart < bytes.length; chunkStart += 128) {\n            const chunk = bytes.slice(chunkStart, chunkStart + 128);\n\n            /**\n             * @type {number[]}\n             */\n            const w = (new Array(160)).fill(0); // array of 32 bit numbers!\n\n            // copy chunk into first 16 hi/lo positions of w (i.e. into first 32 uint32 positions)\n            for (let i = 0; i < 32; i += 2) {\n                const bs = chunk.slice(i * 4, i * 4 + 8);\n                w[i+0] = ((bs[0] << 24) | (bs[1] << 16) | (bs[2] << 8) | (bs[3] << 0)) >>> 0;\n                w[i+1] = ((bs[4] << 24) | (bs[5] << 16) | (bs[6] << 8) | (bs[7] << 0)) >>> 0;\n            }\n\n            // extends the first 16 uint64 positions into the remaining 80 uint64 positions (so first 32 uint32 into remaining 160 uint32 positions)\n            for (let i = 32; i < 160; i += 2) {\n                let h = w[i - 30];\n                let l = w[i - 29];\n\n                const sigma0h = (((h >>> 1) | (l << 31)) ^ ((h >>> 8) | (l << 24)) ^ ((h >>> 7))) >>> 0;\n                const sigma0l = (((l >>> 1) | (h << 31)) ^ ((l >>> 8) | (h << 24)) ^ ((l >>> 7) | (h << 25))) >>> 0;\n\n                h = w[i - 4];\n                l = w[i - 3];\n\n                const sigma1h = (((h >>> 19) | (l << 13)) ^ ((l >>> 29) | (h << 3)) ^ ((h >>> 6))) >>> 0;\n                const sigma1l = (((l >>> 19) | (h << 13)) ^ ((h >>> 29) | (l << 3)) ^ ((l >>> 6) | (h << 26))) >>> 0;\n\n                h = sigma1h + w[i-14] + sigma0h + w[i-32];\n                l = sigma1l + w[i-13] + sigma0l + w[i-31];\n\n                w[i] = (h + Math.floor(l / 4294967296)) >>> 0;\n                w[i+1] = l >>> 0;\n            }\n\n            // intialize working variables to current hash value\n            let ah = hash[0];\n            let al = hash[1];\n            let bh = hash[2];\n            let bl = hash[3];\n            let ch = hash[4];\n            let cl = hash[5];\n            let dh = hash[6];\n            let dl = hash[7];\n            let eh = hash[8];\n            let el = hash[9];\n            let fh = hash[10];\n            let fl = hash[11];\n            let gh = hash[12];\n            let gl = hash[13];\n            let hh = hash[14];\n            let hl = hash[15];\n\n            // compression function main loop\n            for (let i = 0; i < 160; i+=2) {\n                const S0h = (((ah >>> 28) | (al << 4)) ^ ((al >>> 2) | (ah << 30)) ^ ((al >>> 7) | (ah << 25))) >>> 0;\n                const S0l = (((al >>> 28) | (ah << 4)) ^ ((ah >>> 2) | (al << 30)) ^ ((ah >>> 7) | (al << 25))) >>> 0;\n                \n                const S1h = (((eh >>> 14) | (el << 18)) ^ ((eh >>> 18) | (el << 14)) ^ ((el >>> 9) | (eh << 23))) >>> 0;\n                const S1l = (((el >>> 14) | (eh << 18)) ^ ((el >>> 18) | (eh << 14)) ^ ((eh >>> 9) | (el << 23))) >>> 0;\n\n                const majh = ((ah & bh) ^ (ah & ch) ^ (bh & ch)) >>> 0;\n                const majl = ((al & bl) ^ (al & cl) ^ (bl & cl)) >>> 0;\n\n                const chh = ((eh & fh) ^ (~eh & gh)) >>> 0;\n                const chl = ((el & fl) ^ (~el & gl)) >>> 0;\n\n                let temp1l = hl + S1l + chl + k[i+1] + w[i+1];\n                let temp1h = (hh + S1h + chh + k[i] + w[i] + Math.floor(temp1l / 4294967296)) >>> 0;\n                temp1l = temp1l >>> 0;\n\n                let temp2l = S0l + majl;\n                const temp2h = (S0h + majh + Math.floor(temp2l / 4294967296)) >>> 0;\n                temp2l = temp2l >>> 0;\n\n                hh = gh;\n                hl = gl;\n                gh = fh;\n                gl = fl;\n                fh = eh;\n                fl = el;\n                el = dl + temp1l;\n                eh = (dh + temp1h + Math.floor(el / 4294967296)) >>> 0;\n                el = el >>> 0;\n                dh = ch;\n                dl = cl;\n                ch = bh;\n                cl = bl;\n                bh = ah;\n                bl = al;\n                al = temp1l + temp2l;\n                ah = (temp1h + temp2h + Math.floor(al / 4294967296)) >>> 0;\n                al = al >>> 0;\n            }\n\n            updateHash(hash,  0, ah, al);\n            updateHash(hash,  2, bh, bl);\n            updateHash(hash,  4, ch, cl);\n            updateHash(hash,  6, dh, dl);\n            updateHash(hash,  8, eh, el);\n            updateHash(hash, 10, fh, fl);\n            updateHash(hash, 12, gh, gl);\n            updateHash(hash, 14, hh, hl);\n        }\n\n        // produce the final digest of uint8 numbers\n        let result = [];\n        for (let i = 0; i < 16; i+=2) {\n            const h = hash[i];\n            const l = hash[i+1];\n            const bs = [\n                (0xff000000 & h) >>> 24,\n                (0x00ff0000 & h) >>> 16,\n                (0x0000ff00 & h) >>> 8,\n                (0x000000ff & h),\n                (0xff000000 & l) >>> 24,\n                (0x00ff0000 & l) >>> 16,\n                (0x0000ff00 & l) >>> 8,\n                (0x000000ff & l)    \n            ];\n\n            result = result.concat(bs);\n        }\n\n        return result;\n    },\n\n    /**\n     * Calculates sha3-256 (32bytes) hash of a list of uint8 numbers.\n     * Result is also a list of uint8 number.\n     * @example\n     * bytesToHex(Crypto.sha3(textToBytes(\"abc\"))) == \"3a985da74fe225b2045c172d6bd390bd855f086e3e9d525b46bfe24511431532\"\n     * @example\n     * bytesToHex(Crypto.sha3((new Array(136)).fill(1))) == \"b36dc2167c4d9dda1a58b87046c8d76a6359afe3612c4de8a38857e09117b2db\"\n     * @example\n     * bytesToHex(Crypto.sha3((new Array(135)).fill(2))) == \"5bdf5d815d29a9d7161c66520efc17c2edd7898f2b99a029e8d2e4ff153407f4\"\n     * @example\n     * bytesToHex(Crypto.sha3((new Array(134)).fill(3))) == \"8e6575663dfb75a88f94a32c5b363c410278b65020734560d968aadd6896a621\"\n     * @example\n     * bytesToHex(Crypto.sha3((new Array(137)).fill(4))) == \"f10b39c3e455006aa42120b9751faa0f35c821211c9d086beb28bf3c4134c6c6\"\n     * @param {number[]} bytes List of uint8 numbers\n     * @returns {number[]} List of uint8 numbers.\n     */\n    sha3: (bytes) => {\n        /**\n         * Sha3 uses only bit-wise operations, so 64-bit operations can easily be replicated using 2 32-bit operations instead.\n         */\n\n        /**\n         * @type {number} - state width (1600 bits, )\n         */\n        const WIDTH = 200;\n\n        /**\n         * @type {number} - rate (1088 bits, 136 bytes)\n         */\n        const RATE = 136;\n\n        /**\n         * @type {number} - capacity\n         */\n        const CAP = WIDTH - RATE;\n\n        /**\n         * Apply 1000...1 padding until size is multiple of r.\n         * If already multiple of r then add a whole block of padding.\n         * @param {number[]} src - list of uint8 numbers\n         * @returns {number[]} - list of uint8 numbers\n         */\n        function pad(src) {\n            const dst = src.slice();\n\n            /** @type {number} */\n            let nZeroes = RATE - 2 - (dst.length % RATE);\n            if (nZeroes < -1) {\n                nZeroes += RATE - 2;\n            }\n\n            if (nZeroes == -1) {\n                dst.push(0x86);\n            } else {\n                dst.push(0x06);\n\n                for (let i = 0; i < nZeroes; i++) {\n                    dst.push(0);\n                }\n\n                dst.push(0x80);\n            }\n\n            assert(dst.length % RATE == 0);\n\n            return dst;\n        }\n\n        /**\n         * 24 numbers used in the sha3 permute function\n         * @type {number[]}\n         */\n        const OFFSETS = [6, 12, 18, 24, 3, 9, 10, 16, 22, 1, 7, 13, 19, 20, 4, 5, 11, 17, 23, 2, 8, 14, 15, 21];\n\n        /**\n         * 24 numbers used in the sha3 permute function\n         * @type {number[]}\n         */\n        const SHIFTS = [-12, -11, 21, 14, 28, 20, 3, -13, -29, 1, 6, 25, 8, 18, 27, -4, 10, 15, -24, -30, -23, -7, -9, 2];\n\n        /**\n         * Round constants used in the sha3 permute function\n         * @type {UInt64[]} \n         */\n        const RC = [\n            new UInt64(0x00000000, 0x00000001),\n            new UInt64(0x00000000, 0x00008082),\n            new UInt64(0x80000000, 0x0000808a),\n            new UInt64(0x80000000, 0x80008000),\n            new UInt64(0x00000000, 0x0000808b),\n            new UInt64(0x00000000, 0x80000001),\n            new UInt64(0x80000000, 0x80008081),\n            new UInt64(0x80000000, 0x00008009),\n            new UInt64(0x00000000, 0x0000008a),\n            new UInt64(0x00000000, 0x00000088),\n            new UInt64(0x00000000, 0x80008009),\n            new UInt64(0x00000000, 0x8000000a),\n            new UInt64(0x00000000, 0x8000808b),\n            new UInt64(0x80000000, 0x0000008b),\n            new UInt64(0x80000000, 0x00008089),\n            new UInt64(0x80000000, 0x00008003),\n            new UInt64(0x80000000, 0x00008002),\n            new UInt64(0x80000000, 0x00000080),\n            new UInt64(0x00000000, 0x0000800a),\n            new UInt64(0x80000000, 0x8000000a),\n            new UInt64(0x80000000, 0x80008081),\n            new UInt64(0x80000000, 0x00008080),\n            new UInt64(0x00000000, 0x80000001),\n            new UInt64(0x80000000, 0x80008008),\n        ];\n\n        /**\n         * @param {UInt64[]} s \n         */\n        function permute(s) {\n            /**\n             * @type {UInt64[]}\n             */\n            const c = new Array(5);\n\n            /**\n             * @type {UInt64[]}\n             */\n            const b = new Array(25);\n\n            for (let round = 0; round < 24; round++) {\n                for (let i = 0; i < 5; i++) {\n                    c[i] = s[i].xor(s[i + 5]).xor(s[i + 10]).xor(s[i + 15]).xor(s[i + 20]);\n                }\n\n                for (let i = 0; i < 5; i++) {\n                    const i1 = (i + 1) % 5;\n                    const i2 = (i + 4) % 5;\n\n                    const tmp = c[i2].xor(c[i1].rotr(63));\n\n                    for (let j = 0; j < 5; j++) {\n                        s[i + 5 * j] = s[i + 5 * j].xor(tmp);\n                    }\n                }\n\n                b[0] = s[0];\n\n                for (let i = 1; i < 25; i++) {\n                    const offset = OFFSETS[i - 1];\n\n                    const left = Math.abs(SHIFTS[i - 1]);\n                    const right = 32 - left;\n\n                    if (SHIFTS[i - 1] < 0) {\n                        b[i] = s[offset].rotr(right);\n                    } else {\n                        b[i] = s[offset].rotr(right + 32);\n                    }\n                }\n\n                for (let i = 0; i < 5; i++) {\n                    for (let j = 0; j < 5; j++) {\n                        s[i * 5 + j] = b[i * 5 + j].xor(b[i * 5 + (j + 1) % 5].not().and(b[i * 5 + (j + 2) % 5]))\n                    }\n                }\n\n                s[0] = s[0].xor(RC[round]);\n            }\n        }\n\n        bytes = pad(bytes);\n\n        // initialize the state\n        /**\n         * @type {UInt64[]}\n         */\n        const state = (new Array(WIDTH / 8)).fill(UInt64.zero());\n\n        for (let chunkStart = 0; chunkStart < bytes.length; chunkStart += RATE) {\n            // extend the chunk to become length WIDTH\n            const chunk = bytes.slice(chunkStart, chunkStart + RATE).concat((new Array(CAP)).fill(0));\n\n            // element-wise xor with 'state'\n            for (let i = 0; i < WIDTH; i += 8) {\n                state[i / 8] = state[i / 8].xor(UInt64.fromBytes(chunk.slice(i, i + 8)));\n\n                // beware: a uint32 is stored as little endian, but a pair of uint32s that form a uin64 are stored in big endian format!\n            }\n\n            // apply block permutations\n            permute(state);\n        }\n\n        /** @type {number[]} */\n        let hash = [];\n        for (let i = 0; i < 4; i++) {\n            hash = hash.concat(state[i].toBytes());\n        }\n\n        return hash;\n    },\n\n    /**\n     * Calculates blake2b hash of a list of uint8 numbers (variable digest size).\n     * Result is also a list of uint8 numbers.\n     * @example                                        \n     * bytesToHex(Crypto.blake2b([0, 1])) == \"01cf79da4945c370c68b265ef70641aaa65eaa8f5953e3900d97724c2c5aa095\"\n     * @example\n     * bytesToHex(Crypto.blake2b(textToBytes(\"abc\"), 64)) == \"ba80a53f981c4d0d6a2797b69f12f6e94c212f14685ac4b74b12bb6fdbffa2d17d87c5392aab792dc252d5de4533cc9518d38aa8dbf1925ab92386edd4009923\"\n     * @param {number[]} bytes \n     * @param {number} digestSize Defaults to 32. Can't be greater than 64.\n     * @returns {number[]} List of uint8 numbers.\n     */\n    blake2b: (bytes, digestSize = BLAKE2B_DIGEST_SIZE) => {\n        /**\n         * Blake2b is a 64bit algorithm, so we need to be careful when replicating 64-bit operations with 2 32-bit numbers\n         * (low-word overflow must spill into high-word, and shifts must go over low/high boundary).\n         */\n\n        /**\n         * 128 bytes (16*8 byte words)\n         * @type {number}\n         */\n        const WIDTH = 128;\n\n        /**\n         * Initialization vector\n         */\n        const IV = [\n            new UInt64(0x6a09e667, 0xf3bcc908),\n            new UInt64(0xbb67ae85, 0x84caa73b),\n            new UInt64(0x3c6ef372, 0xfe94f82b),\n            new UInt64(0xa54ff53a, 0x5f1d36f1),\n            new UInt64(0x510e527f, 0xade682d1),\n            new UInt64(0x9b05688c, 0x2b3e6c1f),\n            new UInt64(0x1f83d9ab, 0xfb41bd6b),\n            new UInt64(0x5be0cd19, 0x137e2179),\n        ];\n\n        const SIGMA = [\n            [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15],\n            [14, 10, 4, 8, 9, 15, 13, 6, 1, 12, 0, 2, 11, 7, 5, 3],\n            [11, 8, 12, 0, 5, 2, 15, 13, 10, 14, 3, 6, 7, 1, 9, 4],\n            [7, 9, 3, 1, 13, 12, 11, 14, 2, 6, 5, 10, 4, 0, 15, 8],\n            [9, 0, 5, 7, 2, 4, 10, 15, 14, 1, 11, 12, 6, 8, 3, 13],\n            [2, 12, 6, 10, 0, 11, 8, 3, 4, 13, 7, 5, 15, 14, 1, 9],\n            [12, 5, 1, 15, 14, 13, 4, 10, 0, 7, 6, 3, 9, 2, 8, 11],\n            [13, 11, 7, 14, 12, 1, 3, 9, 5, 0, 15, 4, 8, 6, 2, 10],\n            [6, 15, 14, 9, 11, 3, 0, 8, 12, 2, 13, 7, 1, 4, 10, 5],\n            [10, 2, 8, 4, 7, 6, 1, 5, 15, 11, 9, 14, 3, 12, 13, 0],\n        ];\n\n        /**\n         * @param {number[]} src - list of uint8 bytes\n         * @returns {number[]} - list of uint8 bytes\n         */\n        function pad(src) {\n            const dst = src.slice();\n\n            const nZeroes = dst.length == 0 ? WIDTH : (WIDTH - dst.length % WIDTH) % WIDTH;\n\n            // just padding with zeroes, the actual message length is used during compression stage of final block in order to uniquely hash messages of different lengths\n            for (let i = 0; i < nZeroes; i++) {\n                dst.push(0);\n            }\n\n            return dst;\n        }\n\n        /**\n         * @param {UInt64[]} v\n         * @param {UInt64[]} chunk\n         * @param {number} a - index\n         * @param {number} b - index\n         * @param {number} c - index\n         * @param {number} d - index\n         * @param {number} i - index in chunk for low word 1\n         * @param {number} j - index in chunk for low word 2\n         */\n        function mix(v, chunk, a, b, c, d, i, j) {\n            const x = chunk[i];\n            const y = chunk[j];\n\n            v[a] = v[a].add(v[b]).add(x);\n            v[d] = v[d].xor(v[a]).rotr(32);\n            v[c] = v[c].add(v[d]);\n            v[b] = v[b].xor(v[c]).rotr(24);\n            v[a] = v[a].add(v[b]).add(y);\n            v[d] = v[d].xor(v[a]).rotr(16);\n            v[c] = v[c].add(v[d]);\n            v[b] = v[b].xor(v[c]).rotr(63);\n        }\n\n        /**\n         * @param {UInt64[]} h - state vector\n         * @param {UInt64[]} chunk\n         * @param {number} t - chunkEnd (expected to fit in uint32)\n         * @param {boolean} last\n         */\n        function compress(h, chunk, t, last) {\n            // work vectors\n            const v = h.slice().concat(IV.slice());\n\n            v[12] = v[12].xor(new UInt64(0, imod32(t))); // v[12].high unmodified\n            // v[13] unmodified\n\n            if (last) {\n                v[14] = v[14].xor(new UInt64(0xffffffff, 0xffffffff));\n            }\n\n            for (let round = 0; round < 12; round++) {\n                const s = SIGMA[round % 10];\n\n                for (let i = 0; i < 4; i++) {\n                    mix(v, chunk, i, i + 4, i + 8, i + 12, s[i * 2], s[i * 2 + 1]);\n                }\n\n                for (let i = 0; i < 4; i++) {\n                    mix(v, chunk, i, (i + 1) % 4 + 4, (i + 2) % 4 + 8, (i + 3) % 4 + 12, s[8 + i * 2], s[8 + i * 2 + 1]);\n                }\n            }\n\n            for (let i = 0; i < 8; i++) {\n                h[i] = h[i].xor(v[i].xor(v[i + 8]));\n            }\n        }\n\n        const nBytes = bytes.length;\n\n        bytes = pad(bytes);\n\n        // init hash vector\n        const h = IV.slice();\n\n\n        // setup the param block\n        const paramBlock = new Uint8Array(64);\n        paramBlock[0] = digestSize; // n output  bytes\n        paramBlock[1] = 0; // key-length (always zero in our case) \n        paramBlock[2] = 1; // fanout\n        paramBlock[3] = 1; // depth\n\n        //mix in the parameter block\n        const paramBlockView = new DataView(paramBlock.buffer);\n        for (let i = 0; i < 8; i++) {\n            h[i] = h[i].xor(new UInt64(\n                paramBlockView.getUint32(i * 8 + 4, true),\n                paramBlockView.getUint32(i * 8, true),\n            ));\n        }\n\n        // loop all chunks\n        for (let chunkStart = 0; chunkStart < bytes.length; chunkStart += WIDTH) {\n            const chunkEnd = chunkStart + WIDTH; // exclusive\n            const chunk = bytes.slice(chunkStart, chunkStart + WIDTH);\n\n            const chunk64 = new Array(WIDTH / 8);\n            for (let i = 0; i < WIDTH; i += 8) {\n                chunk64[i / 8] = UInt64.fromBytes(chunk.slice(i, i + 8));\n            }\n\n            if (chunkStart == bytes.length - WIDTH) {\n                // last block\n                compress(h, chunk64, nBytes, true);\n            } else {\n                compress(h, chunk64, chunkEnd, false);\n            }\n        }\n\n        // extract lowest BLAKE2B_DIGEST_SIZE bytes from h\n\n        /** @type {number[]} */\n        let hash = [];\n        for (let i = 0; i < digestSize / 8; i++) {\n            hash = hash.concat(h[i].toBytes());\n        }\n\n        return hash.slice(0, digestSize);\n    },\n\n    /**\n     * Hmac using sha2-256.\n     * @example\n     * bytesToHex(Crypto.hmacSha2_256(textToBytes(\"key\"), textToBytes(\"The quick brown fox jumps over the lazy dog\"))) == \"f7bc83f430538424b13298e6aa6fb143ef4d59a14946175997479dbc2d1a3cd8\"\n     * @param {number[]} key \n     * @param {number[]} message \n     * @returns {number[]}\n     */\n    hmacSha2_256: (key, message) => {\n        return hmac((x) => Crypto.sha2_256(x), 64, key, message);\n    },\n\n    /**\n     * Hmac using sha2-512.\n     * @example\n     * bytesToHex(Crypto.hmacSha2_512(textToBytes(\"key\"), textToBytes(\"The quick brown fox jumps over the lazy dog\"))) == \"b42af09057bac1e2d41708e48a902e09b5ff7f12ab428a4fe86653c73dd248fb82f948a549f7b791a5b41915ee4d1ec3935357e4e2317250d0372afa2ebeeb3a\"\n     * @param {number[]} key \n     * @param {number[]} message \n     * @returns {number[]}\n     */\n    hmacSha2_512: (key, message) => {\n        return hmac((x) => Crypto.sha2_512(x), 128, key, message);\n    },\n\n    /**\n     * Password-Based Key Derivation Function 2.\n     * @example\n     * bytesToHex(Crypto.pbkdf2(Crypto.hmacSha2_256, textToBytes(\"password\"), textToBytes(\"salt\"), 1, 20)) == \"120fb6cffcf8b32c43e7225256c4f837a86548c9\"\n     * @example\n     * bytesToHex(Crypto.pbkdf2(Crypto.hmacSha2_512, textToBytes(\"password\"), textToBytes(\"salt\"), 2, 20)) == \"e1d9c16aa681708a45f5c7c4e215ceb66e011a2e\"\n     * @param {(key: number[], msg: number[]) => number[]} prf \n     * @param {number[]} password \n     * @param {number[]} salt \n     * @param {number} iters\n     * @param {number} dkLength \n     * @returns {number[]}\n     */\n    pbkdf2: (prf, password, salt, iters, dkLength) => {\n        /**\n         * @param {number[]} a \n         * @param {number[]} b \n         * @returns {number[]}\n         */\n        const xor = (a, b) => {\n            const c = new Array(a.length);\n\n            for (let i = 0; i < a.length; i++) {\n                c[i] = a[i] ^ b[i];\n            }\n\n            return c;\n        }\n\n        /**\n         * @type {number[]}\n         */\n        let dk = [];\n\n        let i = 1n;\n        while (dk.length < dkLength) {\n            const bi = bigIntToBytes(i);\n            while (bi.length < 4) {\n                bi.unshift(0);\n            }\n\n            let U = prf(password, salt.slice().concat(bi));\n            let T = U;\n\n            for (let j = 1; j < iters; j++) {\n                U = prf(password, U);\n                T = xor(T, U);\n            }\n\n            dk = dk.concat(T);\n\n            i += 1n;\n        }\n\n        if (dk.length > dkLength) {\n            dk = dk.slice(0, dkLength);\n        }\n\n        return dk;\n    }\n}\n\n\n/**\n * @template {CurvePoint<T>} T\n * @typedef {{\n *   add(other: T): T\n *   mul(scalar: bigint): T\n *   equals(other: T): boolean\n *   encode(): number[]\n * }} CurvePoint\n */\n\nconst ED25519_Q = 57896044618658097711785492504343953926634992332820282019728792003956564819949n; // ipowi(255n) - 19n\nconst ED25519_Q38 = 7237005577332262213973186563042994240829374041602535252466099000494570602494n; // (Q + 3n)/8n\nconst ED25519_CURVE_ORDER = 7237005577332262213973186563042994240857116359379907606001950938285454250989n; // ipow2(252n) + 27742317777372353535851937790883648493n;\nconst ED25519_D = -4513249062541557337682894930092624173785641285191125241628941591882900924598840740n; // -121665n * invert(121666n);\nconst ED25519_I = 19681161376707505956807079304988542015446066515923890162744021073123829784752n; // expMod(2n, (Q - 1n)/4n, Q);\n\n/**\n* @param {bigint} b \n* @param {bigint} e \n* @param {bigint} m \n* @returns {bigint}\n*/\nfunction expMod(b, e, m) {\n    if (e == 0n) {\n        return 1n;\n    } else {\n        let t = expMod(b, e / 2n, m);\n        t = (t * t) % m;\n\n        if ((e % 2n) != 0n) {\n            t = posMod(t * b, m)\n        }\n\n        return t;\n    }\n}\n\n/**\n* @param {bigint} x \n* @returns {bigint}\n*/\nfunction curveMod(x) {\n    return posMod(x, ED25519_Q)\n}\n\n/**\n* @param {bigint} n \n* @returns {bigint}\n*/\nfunction curveInvert(n) {\n    let a = curveMod(n);\n    let b = ED25519_Q;\n\n    let x = 0n;\n    let y = 1n;\n    let u = 1n;\n    let v = 0n;\n\n    while (a !== 0n) {\n        const q = b / a;\n        const r = b % a;\n        const m = x - u * q;\n        const n = y - v * q;\n        b = a;\n        a = r;\n        x = u;\n        y = v;\n        u = m;\n        v = n;\n    }\n\n    return curveMod(x);\n}\n\n/**\n* @param {bigint} y \n* @returns {bigint}\n*/\nfunction recoverX(y) {\n    const yy = y * y;\n    const xx = (yy - 1n) * curveInvert(ED25519_D * yy + 1n);\n    let x = expMod(xx, ED25519_Q38, ED25519_Q);\n\n    if (((x * x - xx) % ED25519_Q) != 0n) {\n        x = (x * ED25519_I) % ED25519_Q;\n    }\n\n    if ((x % 2n) != 0n) {\n        x = ED25519_Q - x;\n    }\n\n    return x;\n}\n\n/**\n* Curve point 'multiplication'\n* @param {bigint} y \n* @returns {number[]}\n*/\nfunction encodeCurveInt(y) {\n    return bigIntToLe32Bytes(y);\n}\n\n/**\n* @param {number[]} s \n* @returns {bigint}\n*/\nfunction decodeCurveInt(s) {\n    return leBytesToBigInt(s);\n}\n\n/**\n* @param {number[]} bytes \n* @param {number} i - bit index\n* @returns {number} - 0 or 1\n*/\nfunction getBit(bytes, i) {\n    return (bytes[Math.floor(i / 8)] >> i % 8) & 1\n}\n\n/**\n * @internal\n * @implements {CurvePoint<AffinePoint>}\n */\nclass AffinePoint {\n    #x;\n    #y;\n\n    /**\n     * @param {bigint} x \n     * @param {bigint} y \n     */\n    constructor(x, y) {\n        this.#x = x;\n        this.#y = y;\n    }\n\n    /**\n     * @type {AffinePoint}\n     */\n    static get BASE() {\n        return new AffinePoint(\n            15112221349535400772501151409588531511454012693041857206046113283949847762202n, // recoverX(B[1]) % Q\n            46316835694926478169428394003475163141307993866256225615783033603165251855960n  // (4n*invert(5n)) % Q\n        );\n    }\n\n    /**\n     * @type {AffinePoint}\n     */\n    static get ZERO() {\n        return new AffinePoint(0n, 1n);\n    }\n\n    /**\n     * @param {number[]} bytes \n     * @returns {AffinePoint}\n     */\n    static decode(bytes) {\n        assert(bytes.length == 32);\n\n        const tmp = bytes.slice();\n        tmp[31] = tmp[31] & 0b01111111;\n\n        const y = decodeCurveInt(tmp);\n\n        let x = recoverX(y);\n        if (Number(x & 1n) != getBit(bytes, 255)) {\n            x = ED25519_Q - x;\n        }\n\n        const point = new AffinePoint(x, y);\n\n        assert(point.isOnCurve(), \"point isn't on curve\");\n\n        return point;\n    }\n\n    /**\n     * @type {bigint}\n     */\n    get x() {\n        return this.#x;\n    }\n\n    /**\n     * @type {bigint}\n     */\n    get y() {\n        return this.#y;\n    }\n\n    /** \n     * Curve point 'addition'\n     * Note: the invert call in this calculation is very slow (prefer ExtendedPoint for speed)\n     * @param {AffinePoint} other \n     * @returns {AffinePoint}\n     */\n    add(other) {\n        const x1 = this.#x;\n        const y1 = this.#y;\n        const x2 = other.#x;\n        const y2 = other.#y;\n        const dxxyy = ED25519_D * x1 * x2 * y1 * y2;\n        const x3 = (x1 * y2 + x2 * y1) * curveInvert(1n + dxxyy);\n        const y3 = (y1 * y2 + x1 * x2) * curveInvert(1n - dxxyy);\n\n        return new AffinePoint(\n            curveMod(x3),\n            curveMod(y3)\n        );\n    }\n\n    /**\n     * @param {AffinePoint} other \n     * @returns {boolean}\n     */\n    equals(other) {\n        return this.x == other.x && this.y == other.y;\n    }\n\n    /**\n     * @returns {boolean}\n     */\n    isOnCurve() {\n        const x = this.#x;\n        const y = this.#y;\n        const xx = x * x;\n        const yy = y * y;\n        return (-xx + yy - 1n - ED25519_D * xx * yy) % ED25519_Q == 0n;\n    }\n\n    /**\n     * @param {bigint} s \n     * @returns {AffinePoint}\n     */\n    mul(s) {\n        if (s == 0n) {\n            return AffinePoint.ZERO;\n        } else {\n            let sum = this.mul(s / 2n);\n\n            sum = sum.add(sum);\n\n            if ((s % 2n) != 0n) {\n                sum = sum.add(this);\n            }\n\n            return sum;\n        }\n    }\n\n    /**\n     * @returns {number[]}\n     */\n    encode() {\n        const bytes = encodeCurveInt(this.#y);\n\n        // last bit is determined by x\n\n        bytes[31] = (bytes[31] & 0b011111111) | (Number(this.#x & 1n) * 0b10000000);\n\n        return bytes;\n    }\n}\n\n/**\n * Extended point implementation take from @noble/ed25519\n * @internal\n * @implements {CurvePoint<ExtendedPoint>}\n */\nclass ExtendedPoint {\n    #x;\n    #y;\n    #z;\n    #t;\n\n    /**\n     * @param {bigint} x \n     * @param {bigint} y \n     * @param {bigint} z \n     * @param {bigint} t \n     */\n    constructor(x, y, z, t) {\n        this.#x = x;\n        this.#y = y;\n        this.#z = z;\n        this.#t = t;\n    }\n\n    /**\n     * @type {ExtendedPoint}\n     */\n    static get BASE() {\n        return new ExtendedPoint(\n            AffinePoint.BASE.x,\n            AffinePoint.BASE.y,\n            1n,\n            curveMod(AffinePoint.BASE.x * AffinePoint.BASE.y)\n        )\n    }\n\n    /**\n     * @type {ExtendedPoint}\n     */\n    static get ZERO() {\n        return new ExtendedPoint(0n, 1n, 1n, 0n);\n    }\n\n    /**\n     * @param {number[]} bytes \n     * @returns {ExtendedPoint}\n     */\n    static decode(bytes) {\n        return ExtendedPoint.fromAffine(AffinePoint.decode(bytes));\n    }\n\n    /**\n     * @param {AffinePoint} affine \n     * @returns {ExtendedPoint}\n     */\n    static fromAffine(affine) {\n        return new ExtendedPoint(affine.x, affine.y, 1n, curveMod(affine.x * affine.y));\n    }\n\n    /**\n     * @param {ExtendedPoint} other \n     * @returns {ExtendedPoint}\n     */\n    add(other) {\n        const x1 = this.#x;\n        const y1 = this.#y;\n        const z1 = this.#z;\n        const t1 = this.#t;\n\n        const x2 = other.#x;\n        const y2 = other.#y;\n        const z2 = other.#z;\n        const t2 = other.#t;\n\n        const a = curveMod(x1 * x2);\n        const b = curveMod(y1 * y2);\n        const c = curveMod(ED25519_D * t1 * t2);\n        const d = curveMod(z1 * z2);\n        const e = curveMod((x1 + y1) * (x2 + y2) - a - b);\n        const f = curveMod(d - c);\n        const g = curveMod(d + c);\n        const h = curveMod(a + b);\n        const x3 = curveMod(e * f);\n        const y3 = curveMod(g * h);\n        const z3 = curveMod(f * g);\n        const t3 = curveMod(e * h);\n\n        return new ExtendedPoint(x3, y3, z3, t3);\n    }\n\n    /**\n     * @returns {number[]}\n     */\n    encode() {\n        return this.toAffine().encode()\n    }\n\n    /**\n     * @param {ExtendedPoint} other \n     * @returns {boolean}\n     */\n    equals(other) {\n        return (curveMod(this.#x * other.#z) == curveMod(other.#x * this.#z)) && (curveMod(this.#y * other.#z) == curveMod(other.#y * this.#z));\n    }\n\n    /**\n     * @returns {boolean}\n     */\n    isBase() {\n        return this.equals(ExtendedPoint.BASE);\n    }\n\n    /**\n     * @returns {boolean}\n     */\n    isZero() {\n        return this.equals(ExtendedPoint.ZERO);\n    }\n\n    /**\n     * @param {bigint} s \n     * @returns {ExtendedPoint}\n     */\n    mul(s) {\n        if (s == 0n) {\n            return ExtendedPoint.ZERO;\n        } else {\n            let sum = this.mul(s / 2n);\n\n            sum = sum.add(sum);\n\n            if ((s % 2n) != 0n) {\n                sum = sum.add(this);\n            }\n\n            return sum;\n        }\n    }\n\n    /**\n     * @returns {AffinePoint}\n     */\n    toAffine() {\n        if (this.isZero()) {\n            return AffinePoint.ZERO;\n        } else {\n            const zInverse = curveInvert(this.#z);\n\n            return new AffinePoint(\n                curveMod(this.#x * zInverse),\n                curveMod(this.#y * zInverse)\n            );\n        }\n    }\n}\n\n/**\n * @internal\n * @param {number[]} h \n * @returns {bigint}\n */\nfunction clamp(h) {\n    const bytes = h.slice(0, 32);\n\n    bytes[0] &= 0b11111000;\n    bytes[31] &= 0b00111111;\n    bytes[31] |= 0b01000000;\n\n    return decodeCurveInt(bytes);\n}\n\n/**\n * @internal\n * @param {number[]} m \n * @returns {bigint}\n */\nfunction nonce(m) {\n    const h = Crypto.sha2_512(m);\n\n    return decodeCurveInt(h);\n}\n\n/**\n * @internal\n */\nconst CurvePointImpl = ExtendedPoint;\n\n/**\n * The elliptic curve signature algorithm used by Cardano wallets.\n * \n * Ported from: [https://ed25519.cr.yp.to/python/ed25519.py](https://ed25519.cr.yp.to/python/ed25519.py).\n * \n * ExtendedPoint implementation taken from: [https://github.com/paulmillr/noble-ed25519](https://github.com/paulmillr/noble-ed25519).\n * @namespace\n */\nexport const Ed25519 = {\n    /**\n     * Similar to `Ed25519.derivePublicKey`, but doesn't hash the input key.\n     * @param {number[]} extendedKey\n     * @returns {number[]} 32 byte public key.\n     */\n    deriveBip32PublicKey: (extendedKey) => {\n        const a = clamp(extendedKey);\n        const A = CurvePointImpl.BASE.mul(a);\n\n        return A.encode();\n    },\n\n    /**\n     * Derive a public key from a private key.\n     * The private key can be any number of bytes (it's hashed internally).\n     * The returned public key is 32 bytes long.\n     * @param {number[]} privateKey\n     * @returns {number[]} 32 byte public key.\n     */\n    derivePublicKey: (privateKey) => {\n        return Ed25519.deriveBip32PublicKey(Crypto.sha2_512(privateKey));\n    },\n\n    /**\n     * Like `Ed25519.sign`, but doesn't hash the input key.\n     * @param {number[]} message \n     * @param {number[]} extendedKey \n     * @returns {number[]} 64 byte signature.\n     */\n    signBip32: (message, extendedKey) => {\n        const a = clamp(extendedKey);\n\n        // for convenience calculate publicKey here:\n        const publicKey = CurvePointImpl.BASE.mul(a).encode();\n\n        const r = nonce(extendedKey.slice(32, 64).concat(message));\n        const R = CurvePointImpl.BASE.mul(r);\n        const Rencoded = R.encode();\n        const ih = nonce(Rencoded.concat(publicKey).concat(message));\n        const S = posMod(r + ih * a, ED25519_CURVE_ORDER);\n\n        return Rencoded.concat(encodeCurveInt(S));\n    },\n\n    /**\n     * Creates a 64 byte signature.\n     * @param {number[]} message \n     * @param {number[]} privateKey \n     * @returns {number[]} 64 byte signature.\n     */\n    sign: (message, privateKey) => {\n        return Ed25519.signBip32(message, Crypto.sha2_512(privateKey));\n    },\n\n    /**\n     * Returns `true` if the signature is correct.\n     * @param {number[]} signature \n     * @param {number[]} message \n     * @param {number[]} publicKey \n     * @returns {boolean}\n     */\n    verify: (signature, message, publicKey) => {\n        if (signature.length != 64) {\n            throw new Error(`unexpected signature length ${signature.length}`);\n        }\n\n        if (publicKey.length != 32) {\n            throw new Error(`unexpected publickey length ${publicKey.length}`);\n        }\n\n        const R = CurvePointImpl.decode(signature.slice(0, 32));\n        const A = CurvePointImpl.decode(publicKey);\n        const S = decodeCurveInt(signature.slice(32, 64));\n        const h = nonce(signature.slice(0, 32).concat(publicKey).concat(message));\n\n        const left = CurvePointImpl.BASE.mul(S);\n        const right = R.add(A.mul(h));\n\n        return left.equals(right);\n    }\n}\n\n/**\n * Standard English Bip39 dictionary consisting of 2048 words allowing wallet root keys to be formed by a phrase of 12, 15, 18, 21 or 24 of these words.\n */\nexport const BIP39_DICT_EN = [\n    \"abandon\", \"ability\", \"able\", \"about\", \"above\", \"absent\", \"absorb\", \"abstract\", \"absurd\", \"abuse\", \"access\", \"accident\", \"account\", \"accuse\", \"achieve\", \"acid\", \"acoustic\", \"acquire\", \"across\", \"act\", \"action\", \"actor\", \"actress\", \"actual\", \"adapt\", \"add\", \"addict\", \"address\", \"adjust\", \"admit\", \"adult\", \"advance\", \"advice\", \"aerobic\", \"affair\", \"afford\", \"afraid\", \"again\", \"age\", \"agent\", \"agree\", \"ahead\", \"aim\", \"air\", \"airport\", \"aisle\", \"alarm\", \"album\", \"alcohol\", \"alert\", \"alien\", \"all\", \"alley\", \"allow\", \"almost\", \"alone\", \"alpha\", \"already\", \"also\", \"alter\", \"always\", \"amateur\", \"amazing\", \"among\", \"amount\", \"amused\", \"analyst\", \"anchor\", \"ancient\", \"anger\", \"angle\", \"angry\", \"animal\", \"ankle\", \"announce\", \"annual\", \"another\", \"answer\", \"antenna\", \"antique\", \"anxiety\", \"any\", \"apart\", \"apology\", \"appear\", \"apple\", \"approve\", \"april\", \"arch\", \"arctic\", \"area\", \"arena\", \"argue\", \"arm\", \"armed\", \"armor\", \"army\", \"around\", \"arrange\", \"arrest\", \"arrive\", \"arrow\", \"art\", \"artefact\", \"artist\", \"artwork\", \"ask\", \"aspect\", \"assault\", \"asset\", \"assist\", \"assume\", \"asthma\", \"athlete\", \"atom\", \"attack\", \"attend\", \"attitude\", \"attract\", \"auction\", \"audit\", \"august\", \"aunt\", \"author\", \"auto\", \"autumn\", \"average\", \"avocado\", \"avoid\", \"awake\", \"aware\", \"away\", \"awesome\", \"awful\", \"awkward\", \"axis\",\n    \"baby\", \"bachelor\", \"bacon\", \"badge\", \"bag\", \"balance\", \"balcony\", \"ball\", \"bamboo\", \"banana\", \"banner\", \"bar\", \"barely\", \"bargain\", \"barrel\", \"base\", \"basic\", \"basket\", \"battle\", \"beach\", \"bean\", \"beauty\", \"because\", \"become\", \"beef\", \"before\", \"begin\", \"behave\", \"behind\", \"believe\", \"below\", \"belt\", \"bench\", \"benefit\", \"best\", \"betray\", \"better\", \"between\", \"beyond\", \"bicycle\", \"bid\", \"bike\", \"bind\", \"biology\", \"bird\", \"birth\", \"bitter\", \"black\", \"blade\", \"blame\", \"blanket\", \"blast\", \"bleak\", \"bless\", \"blind\", \"blood\", \"blossom\", \"blouse\", \"blue\", \"blur\", \"blush\", \"board\", \"boat\", \"body\", \"boil\", \"bomb\", \"bone\", \"bonus\", \"book\", \"boost\", \"border\", \"boring\", \"borrow\", \"boss\", \"bottom\", \"bounce\", \"box\", \"boy\", \"bracket\", \"brain\", \"brand\", \"brass\", \"brave\", \"bread\", \"breeze\", \"brick\", \"bridge\", \"brief\", \"bright\", \"bring\", \"brisk\", \"broccoli\", \"broken\", \"bronze\", \"broom\", \"brother\", \"brown\", \"brush\", \"bubble\", \"buddy\", \"budget\", \"buffalo\", \"build\", \"bulb\", \"bulk\", \"bullet\", \"bundle\", \"bunker\", \"burden\", \"burger\", \"burst\", \"bus\", \"business\", \"busy\", \"butter\", \"buyer\", \"buzz\",\n    \"cabbage\", \"cabin\", \"cable\", \"cactus\", \"cage\", \"cake\", \"call\", \"calm\", \"camera\", \"camp\", \"can\", \"canal\", \"cancel\", \"candy\", \"cannon\", \"canoe\", \"canvas\", \"canyon\", \"capable\", \"capital\", \"captain\", \"car\", \"carbon\", \"card\", \"cargo\", \"carpet\", \"carry\", \"cart\", \"case\", \"cash\", \"casino\", \"castle\", \"casual\", \"cat\", \"catalog\", \"catch\", \"category\", \"cattle\", \"caught\", \"cause\", \"caution\", \"cave\", \"ceiling\", \"celery\", \"cement\", \"census\", \"century\", \"cereal\", \"certain\", \"chair\", \"chalk\", \"champion\", \"change\", \"chaos\", \"chapter\", \"charge\", \"chase\", \"chat\", \"cheap\", \"check\", \"cheese\", \"chef\", \"cherry\", \"chest\", \"chicken\", \"chief\", \"child\", \"chimney\", \"choice\", \"choose\", \"chronic\", \"chuckle\", \"chunk\", \"churn\", \"cigar\", \"cinnamon\", \"circle\", \"citizen\", \"city\", \"civil\", \"claim\", \"clap\", \"clarify\", \"claw\", \"clay\", \"clean\", \"clerk\", \"clever\", \"click\", \"client\", \"cliff\", \"climb\", \"clinic\", \"clip\", \"clock\", \"clog\", \"close\", \"cloth\", \"cloud\", \"clown\", \"club\", \"clump\", \"cluster\", \"clutch\", \"coach\", \"coast\", \"coconut\", \"code\", \"coffee\", \"coil\", \"coin\", \"collect\", \"color\", \"column\", \"combine\", \"come\", \"comfort\", \"comic\", \"common\", \"company\", \"concert\", \"conduct\", \"confirm\", \"congress\", \"connect\", \"consider\", \"control\", \"convince\", \"cook\", \"cool\", \"copper\", \"copy\", \"coral\", \"core\", \"corn\", \"correct\", \"cost\", \"cotton\", \"couch\", \"country\", \"couple\", \"course\", \"cousin\", \"cover\", \"coyote\", \"crack\", \"cradle\", \"craft\", \"cram\", \"crane\", \"crash\", \"crater\", \"crawl\", \"crazy\", \"cream\", \"credit\", \"creek\", \"crew\", \"cricket\", \"crime\", \"crisp\", \"critic\", \"crop\", \"cross\", \"crouch\", \"crowd\", \"crucial\", \"cruel\", \"cruise\", \"crumble\", \"crunch\", \"crush\", \"cry\", \"crystal\", \"cube\", \"culture\", \"cup\", \"cupboard\", \"curious\", \"current\", \"curtain\", \"curve\", \"cushion\", \"custom\", \"cute\", \"cycle\",\n    \"dad\", \"damage\", \"damp\", \"dance\", \"danger\", \"daring\", \"dash\", \"daughter\", \"dawn\", \"day\", \"deal\", \"debate\", \"debris\", \"decade\", \"december\", \"decide\", \"decline\", \"decorate\", \"decrease\", \"deer\", \"defense\", \"define\", \"defy\", \"degree\", \"delay\", \"deliver\", \"demand\", \"demise\", \"denial\", \"dentist\", \"deny\", \"depart\", \"depend\", \"deposit\", \"depth\", \"deputy\", \"derive\", \"describe\", \"desert\", \"design\", \"desk\", \"despair\", \"destroy\", \"detail\", \"detect\", \"develop\", \"device\", \"devote\", \"diagram\", \"dial\", \"diamond\", \"diary\", \"dice\", \"diesel\", \"diet\", \"differ\", \"digital\", \"dignity\", \"dilemma\", \"dinner\", \"dinosaur\", \"direct\", \"dirt\", \"disagree\", \"discover\", \"disease\", \"dish\", \"dismiss\", \"disorder\", \"display\", \"distance\", \"divert\", \"divide\", \"divorce\", \"dizzy\", \"doctor\", \"document\", \"dog\", \"doll\", \"dolphin\", \"domain\", \"donate\", \"donkey\", \"donor\", \"door\", \"dose\", \"double\", \"dove\", \"draft\", \"dragon\", \"drama\", \"drastic\", \"draw\", \"dream\", \"dress\", \"drift\", \"drill\", \"drink\", \"drip\", \"drive\", \"drop\", \"drum\", \"dry\", \"duck\", \"dumb\", \"dune\", \"during\", \"dust\", \"dutch\", \"duty\", \"dwarf\", \"dynamic\",\n    \"eager\", \"eagle\", \"early\", \"earn\", \"earth\", \"easily\", \"east\", \"easy\", \"echo\", \"ecology\", \"economy\", \"edge\", \"edit\", \"educate\", \"effort\", \"egg\", \"eight\", \"either\", \"elbow\", \"elder\", \"electric\", \"elegant\", \"element\", \"elephant\", \"elevator\", \"elite\", \"else\", \"embark\", \"embody\", \"embrace\", \"emerge\", \"emotion\", \"employ\", \"empower\", \"empty\", \"enable\", \"enact\", \"end\", \"endless\", \"endorse\", \"enemy\", \"energy\", \"enforce\", \"engage\", \"engine\", \"enhance\", \"enjoy\", \"enlist\", \"enough\", \"enrich\", \"enroll\", \"ensure\", \"enter\", \"entire\", \"entry\", \"envelope\", \"episode\", \"equal\", \"equip\", \"era\", \"erase\", \"erode\", \"erosion\", \"error\", \"erupt\", \"escape\", \"essay\", \"essence\", \"estate\", \"eternal\", \"ethics\", \"evidence\", \"evil\", \"evoke\", \"evolve\", \"exact\", \"example\", \"excess\", \"exchange\", \"excite\", \"exclude\", \"excuse\", \"execute\", \"exercise\", \"exhaust\", \"exhibit\", \"exile\", \"exist\", \"exit\", \"exotic\", \"expand\", \"expect\", \"expire\", \"explain\", \"expose\", \"express\", \"extend\", \"extra\", \"eye\", \"eyebrow\",\n    \"fabric\", \"face\", \"faculty\", \"fade\", \"faint\", \"faith\", \"fall\", \"false\", \"fame\", \"family\", \"famous\", \"fan\", \"fancy\", \"fantasy\", \"farm\", \"fashion\", \"fat\", \"fatal\", \"father\", \"fatigue\", \"fault\", \"favorite\", \"feature\", \"february\", \"federal\", \"fee\", \"feed\", \"feel\", \"female\", \"fence\", \"festival\", \"fetch\", \"fever\", \"few\", \"fiber\", \"fiction\", \"field\", \"figure\", \"file\", \"film\", \"filter\", \"final\", \"find\", \"fine\", \"finger\", \"finish\", \"fire\", \"firm\", \"first\", \"fiscal\", \"fish\", \"fit\", \"fitness\", \"fix\", \"flag\", \"flame\", \"flash\", \"flat\", \"flavor\", \"flee\", \"flight\", \"flip\", \"float\", \"flock\", \"floor\", \"flower\", \"fluid\", \"flush\", \"fly\", \"foam\", \"focus\", \"fog\", \"foil\", \"fold\", \"follow\", \"food\", \"foot\", \"force\", \"forest\", \"forget\", \"fork\", \"fortune\", \"forum\", \"forward\", \"fossil\", \"foster\", \"found\", \"fox\", \"fragile\", \"frame\", \"frequent\", \"fresh\", \"friend\", \"fringe\", \"frog\", \"front\", \"frost\", \"frown\", \"frozen\", \"fruit\", \"fuel\", \"fun\", \"funny\", \"furnace\", \"fury\", \"future\",\n    \"gadget\", \"gain\", \"galaxy\", \"gallery\", \"game\", \"gap\", \"garage\", \"garbage\", \"garden\", \"garlic\", \"garment\", \"gas\", \"gasp\", \"gate\", \"gather\", \"gauge\", \"gaze\", \"general\", \"genius\", \"genre\", \"gentle\", \"genuine\", \"gesture\", \"ghost\", \"giant\", \"gift\", \"giggle\", \"ginger\", \"giraffe\", \"girl\", \"give\", \"glad\", \"glance\", \"glare\", \"glass\", \"glide\", \"glimpse\", \"globe\", \"gloom\", \"glory\", \"glove\", \"glow\", \"glue\", \"goat\", \"goddess\", \"gold\", \"good\", \"goose\", \"gorilla\", \"gospel\", \"gossip\", \"govern\", \"gown\", \"grab\", \"grace\", \"grain\", \"grant\", \"grape\", \"grass\", \"gravity\", \"great\", \"green\", \"grid\", \"grief\", \"grit\", \"grocery\", \"group\", \"grow\", \"grunt\", \"guard\", \"guess\", \"guide\", \"guilt\", \"guitar\", \"gun\", \"gym\",\n    \"habit\", \"hair\", \"half\", \"hammer\", \"hamster\", \"hand\", \"happy\", \"harbor\", \"hard\", \"harsh\", \"harvest\", \"hat\", \"have\", \"hawk\", \"hazard\", \"head\", \"health\", \"heart\", \"heavy\", \"hedgehog\", \"height\", \"hello\", \"helmet\", \"help\", \"hen\", \"hero\", \"hidden\", \"high\", \"hill\", \"hint\", \"hip\", \"hire\", \"history\", \"hobby\", \"hockey\", \"hold\", \"hole\", \"holiday\", \"hollow\", \"home\", \"honey\", \"hood\", \"hope\", \"horn\", \"horror\", \"horse\", \"hospital\", \"host\", \"hotel\", \"hour\", \"hover\", \"hub\", \"huge\", \"human\", \"humble\", \"humor\", \"hundred\", \"hungry\", \"hunt\", \"hurdle\", \"hurry\", \"hurt\", \"husband\", \"hybrid\",\n    \"ice\", \"icon\", \"idea\", \"identify\", \"idle\", \"ignore\", \"ill\", \"illegal\", \"illness\", \"image\", \"imitate\", \"immense\", \"immune\", \"impact\", \"impose\", \"improve\", \"impulse\", \"inch\", \"include\", \"income\", \"increase\", \"index\", \"indicate\", \"indoor\", \"industry\", \"infant\", \"inflict\", \"inform\", \"inhale\", \"inherit\", \"initial\", \"inject\", \"injury\", \"inmate\", \"inner\", \"innocent\", \"input\", \"inquiry\", \"insane\", \"insect\", \"inside\", \"inspire\", \"install\", \"intact\", \"interest\", \"into\", \"invest\", \"invite\", \"involve\", \"iron\", \"island\", \"isolate\", \"issue\", \"item\", \"ivory\",\n    \"jacket\", \"jaguar\", \"jar\", \"jazz\", \"jealous\", \"jeans\", \"jelly\", \"jewel\", \"job\", \"join\", \"joke\", \"journey\", \"joy\", \"judge\", \"juice\", \"jump\", \"jungle\", \"junior\", \"junk\", \"just\",\n    \"kangaroo\", \"keen\", \"keep\", \"ketchup\", \"key\", \"kick\", \"kid\", \"kidney\", \"kind\", \"kingdom\", \"kiss\", \"kit\", \"kitchen\", \"kite\", \"kitten\", \"kiwi\", \"knee\", \"knife\", \"knock\", \"know\",\n    \"lab\", \"label\", \"labor\", \"ladder\", \"lady\", \"lake\", \"lamp\", \"language\", \"laptop\", \"large\", \"later\", \"latin\", \"laugh\", \"laundry\", \"lava\", \"law\", \"lawn\", \"lawsuit\", \"layer\", \"lazy\", \"leader\", \"leaf\", \"learn\", \"leave\", \"lecture\", \"left\", \"leg\", \"legal\", \"legend\", \"leisure\", \"lemon\", \"lend\", \"length\", \"lens\", \"leopard\", \"lesson\", \"letter\", \"level\", \"liar\", \"liberty\", \"library\", \"license\", \"life\", \"lift\", \"light\", \"like\", \"limb\", \"limit\", \"link\", \"lion\", \"liquid\", \"list\", \"little\", \"live\", \"lizard\", \"load\", \"loan\", \"lobster\", \"local\", \"lock\", \"logic\", \"lonely\", \"long\", \"loop\", \"lottery\", \"loud\", \"lounge\", \"love\", \"loyal\", \"lucky\", \"luggage\", \"lumber\", \"lunar\", \"lunch\", \"luxury\", \"lyrics\",\n    \"machine\", \"mad\", \"magic\", \"magnet\", \"maid\", \"mail\", \"main\", \"major\", \"make\", \"mammal\", \"man\", \"manage\", \"mandate\", \"mango\", \"mansion\", \"manual\", \"maple\", \"marble\", \"march\", \"margin\", \"marine\", \"market\", \"marriage\", \"mask\", \"mass\", \"master\", \"match\", \"material\", \"math\", \"matrix\", \"matter\", \"maximum\", \"maze\", \"meadow\", \"mean\", \"measure\", \"meat\", \"mechanic\", \"medal\", \"media\", \"melody\", \"melt\", \"member\", \"memory\", \"mention\", \"menu\", \"mercy\", \"merge\", \"merit\", \"merry\", \"mesh\", \"message\", \"metal\", \"method\", \"middle\", \"midnight\", \"milk\", \"million\", \"mimic\", \"mind\", \"minimum\", \"minor\", \"minute\", \"miracle\", \"mirror\", \"misery\", \"miss\", \"mistake\", \"mix\", \"mixed\", \"mixture\", \"mobile\", \"model\", \"modify\", \"mom\", \"moment\", \"monitor\", \"monkey\", \"monster\", \"month\", \"moon\", \"moral\", \"more\", \"morning\", \"mosquito\", \"mother\", \"motion\", \"motor\", \"mountain\", \"mouse\", \"move\", \"movie\", \"much\", \"muffin\", \"mule\", \"multiply\", \"muscle\", \"museum\", \"mushroom\", \"music\", \"must\", \"mutual\", \"myself\", \"mystery\", \"myth\",\n    \"naive\", \"name\", \"napkin\", \"narrow\", \"nasty\", \"nation\", \"nature\", \"near\", \"neck\", \"need\", \"negative\", \"neglect\", \"neither\", \"nephew\", \"nerve\", \"nest\", \"net\", \"network\", \"neutral\", \"never\", \"news\", \"next\", \"nice\", \"night\", \"noble\", \"noise\", \"nominee\", \"noodle\", \"normal\", \"north\", \"nose\", \"notable\", \"note\", \"nothing\", \"notice\", \"novel\", \"now\", \"nuclear\", \"number\", \"nurse\", \"nut\",\n    \"oak\", \"obey\", \"object\", \"oblige\", \"obscure\", \"observe\", \"obtain\", \"obvious\", \"occur\", \"ocean\", \"october\", \"odor\", \"off\", \"offer\", \"office\", \"often\", \"oil\", \"okay\", \"old\", \"olive\", \"olympic\", \"omit\", \"once\", \"one\", \"onion\", \"online\", \"only\", \"open\", \"opera\", \"opinion\", \"oppose\", \"option\", \"orange\", \"orbit\", \"orchard\", \"order\", \"ordinary\", \"organ\", \"orient\", \"original\", \"orphan\", \"ostrich\", \"other\", \"outdoor\", \"outer\", \"output\", \"outside\", \"oval\", \"oven\", \"over\", \"own\", \"owner\", \"oxygen\", \"oyster\", \"ozone\",\n    \"pact\", \"paddle\", \"page\", \"pair\", \"palace\", \"palm\", \"panda\", \"panel\", \"panic\", \"panther\", \"paper\", \"parade\", \"parent\", \"park\", \"parrot\", \"party\", \"pass\", \"patch\", \"path\", \"patient\", \"patrol\", \"pattern\", \"pause\", \"pave\", \"payment\", \"peace\", \"peanut\", \"pear\", \"peasant\", \"pelican\", \"pen\", \"penalty\", \"pencil\", \"people\", \"pepper\", \"perfect\", \"permit\", \"person\", \"pet\", \"phone\", \"photo\", \"phrase\", \"physical\", \"piano\", \"picnic\", \"picture\", \"piece\", \"pig\", \"pigeon\", \"pill\", \"pilot\", \"pink\", \"pioneer\", \"pipe\", \"pistol\", \"pitch\", \"pizza\", \"place\", \"planet\", \"plastic\", \"plate\", \"play\", \"please\", \"pledge\", \"pluck\", \"plug\", \"plunge\", \"poem\", \"poet\", \"point\", \"polar\", \"pole\", \"police\", \"pond\", \"pony\", \"pool\", \"popular\", \"portion\", \"position\", \"possible\", \"post\", \"potato\", \"pottery\", \"poverty\", \"powder\", \"power\", \"practice\", \"praise\", \"predict\", \"prefer\", \"prepare\", \"present\", \"pretty\", \"prevent\", \"price\", \"pride\", \"primary\", \"print\", \"priority\", \"prison\", \"private\", \"prize\", \"problem\", \"process\", \"produce\", \"profit\", \"program\", \"project\", \"promote\", \"proof\", \"property\", \"prosper\", \"protect\", \"proud\", \"provide\", \"public\", \"pudding\", \"pull\", \"pulp\", \"pulse\", \"pumpkin\", \"punch\", \"pupil\", \"puppy\", \"purchase\", \"purity\", \"purpose\", \"purse\", \"push\", \"put\", \"puzzle\", \"pyramid\",\n    \"quality\", \"quantum\", \"quarter\", \"question\", \"quick\", \"quit\", \"quiz\", \"quote\",\n    \"rabbit\", \"raccoon\", \"race\", \"rack\", \"radar\", \"radio\", \"rail\", \"rain\", \"raise\", \"rally\", \"ramp\", \"ranch\", \"random\", \"range\", \"rapid\", \"rare\", \"rate\", \"rather\", \"raven\", \"raw\", \"razor\", \"ready\", \"real\", \"reason\", \"rebel\", \"rebuild\", \"recall\", \"receive\", \"recipe\", \"record\", \"recycle\", \"reduce\", \"reflect\", \"reform\", \"refuse\", \"region\", \"regret\", \"regular\", \"reject\", \"relax\", \"release\", \"relief\", \"rely\", \"remain\", \"remember\", \"remind\", \"remove\", \"render\", \"renew\", \"rent\", \"reopen\", \"repair\", \"repeat\", \"replace\", \"report\", \"require\", \"rescue\", \"resemble\", \"resist\", \"resource\", \"response\", \"result\", \"retire\", \"retreat\", \"return\", \"reunion\", \"reveal\", \"review\", \"reward\", \"rhythm\", \"rib\", \"ribbon\", \"rice\", \"rich\", \"ride\", \"ridge\", \"rifle\", \"right\", \"rigid\", \"ring\", \"riot\", \"ripple\", \"risk\", \"ritual\", \"rival\", \"river\", \"road\", \"roast\", \"robot\", \"robust\", \"rocket\", \"romance\", \"roof\", \"rookie\", \"room\", \"rose\", \"rotate\", \"rough\", \"round\", \"route\", \"royal\", \"rubber\", \"rude\", \"rug\", \"rule\", \"run\", \"runway\", \"rural\",\n    \"sad\", \"saddle\", \"sadness\", \"safe\", \"sail\", \"salad\", \"salmon\", \"salon\", \"salt\", \"salute\", \"same\", \"sample\", \"sand\", \"satisfy\", \"satoshi\", \"sauce\", \"sausage\", \"save\", \"say\", \"scale\", \"scan\", \"scare\", \"scatter\", \"scene\", \"scheme\", \"school\", \"science\", \"scissors\", \"scorpion\", \"scout\", \"scrap\", \"screen\", \"script\", \"scrub\", \"sea\", \"search\", \"season\", \"seat\", \"second\", \"secret\", \"section\", \"security\", \"seed\", \"seek\", \"segment\", \"select\", \"sell\", \"seminar\", \"senior\", \"sense\", \"sentence\", \"series\", \"service\", \"session\", \"settle\", \"setup\", \"seven\", \"shadow\", \"shaft\", \"shallow\", \"share\", \"shed\", \"shell\", \"sheriff\", \"shield\", \"shift\", \"shine\", \"ship\", \"shiver\", \"shock\", \"shoe\", \"shoot\", \"shop\", \"short\", \"shoulder\", \"shove\", \"shrimp\", \"shrug\", \"shuffle\", \"shy\", \"sibling\", \"sick\", \"side\", \"siege\", \"sight\", \"sign\", \"silent\", \"silk\", \"silly\", \"silver\", \"similar\", \"simple\", \"since\", \"sing\", \"siren\", \"sister\", \"situate\", \"six\", \"size\", \"skate\", \"sketch\", \"ski\", \"skill\", \"skin\", \"skirt\", \"skull\", \"slab\", \"slam\", \"sleep\", \"slender\", \"slice\", \"slide\", \"slight\", \"slim\", \"slogan\", \"slot\", \"slow\", \"slush\", \"small\", \"smart\", \"smile\", \"smoke\", \"smooth\", \"snack\", \"snake\", \"snap\", \"sniff\", \"snow\", \"soap\", \"soccer\", \"social\", \"sock\", \"soda\", \"soft\", \"solar\", \"soldier\", \"solid\", \"solution\", \"solve\", \"someone\", \"song\", \"soon\", \"sorry\", \"sort\", \"soul\", \"sound\", \"soup\", \"source\", \"south\", \"space\", \"spare\", \"spatial\", \"spawn\", \"speak\", \"special\", \"speed\", \"spell\", \"spend\", \"sphere\", \"spice\", \"spider\", \"spike\", \"spin\", \"spirit\", \"split\", \"spoil\", \"sponsor\", \"spoon\", \"sport\", \"spot\", \"spray\", \"spread\", \"spring\", \"spy\", \"square\", \"squeeze\", \"squirrel\", \"stable\", \"stadium\", \"staff\", \"stage\", \"stairs\", \"stamp\", \"stand\", \"start\", \"state\", \"stay\", \"steak\", \"steel\", \"stem\", \"step\", \"stereo\", \"stick\", \"still\", \"sting\", \"stock\", \"stomach\", \"stone\", \"stool\", \"story\", \"stove\", \"strategy\", \"street\", \"strike\", \"strong\", \"struggle\", \"student\", \"stuff\", \"stumble\", \"style\", \"subject\", \"submit\", \"subway\", \"success\", \"such\", \"sudden\", \"suffer\", \"sugar\", \"suggest\", \"suit\", \"summer\", \"sun\", \"sunny\", \"sunset\", \"super\", \"supply\", \"supreme\", \"sure\", \"surface\", \"surge\", \"surprise\", \"surround\", \"survey\", \"suspect\", \"sustain\", \"swallow\", \"swamp\", \"swap\", \"swarm\", \"swear\", \"sweet\", \"swift\", \"swim\", \"swing\", \"switch\", \"sword\", \"symbol\", \"symptom\", \"syrup\", \"system\",\n    \"table\", \"tackle\", \"tag\", \"tail\", \"talent\", \"talk\", \"tank\", \"tape\", \"target\", \"task\", \"taste\", \"tattoo\", \"taxi\", \"teach\", \"team\", \"tell\", \"ten\", \"tenant\", \"tennis\", \"tent\", \"term\", \"test\", \"text\", \"thank\", \"that\", \"theme\", \"then\", \"theory\", \"there\", \"they\", \"thing\", \"this\", \"thought\", \"three\", \"thrive\", \"throw\", \"thumb\", \"thunder\", \"ticket\", \"tide\", \"tiger\", \"tilt\", \"timber\", \"time\", \"tiny\", \"tip\", \"tired\", \"tissue\", \"title\", \"toast\", \"tobacco\", \"today\", \"toddler\", \"toe\", \"together\", \"toilet\", \"token\", \"tomato\", \"tomorrow\", \"tone\", \"tongue\", \"tonight\", \"tool\", \"tooth\", \"top\", \"topic\", \"topple\", \"torch\", \"tornado\", \"tortoise\", \"toss\", \"total\", \"tourist\", \"toward\", \"tower\", \"town\", \"toy\", \"track\", \"trade\", \"traffic\", \"tragic\", \"train\", \"transfer\", \"trap\", \"trash\", \"travel\", \"tray\", \"treat\", \"tree\", \"trend\", \"trial\", \"tribe\", \"trick\", \"trigger\", \"trim\", \"trip\", \"trophy\", \"trouble\", \"truck\", \"true\", \"truly\", \"trumpet\", \"trust\", \"truth\", \"try\", \"tube\", \"tuition\", \"tumble\", \"tuna\", \"tunnel\", \"turkey\", \"turn\", \"turtle\", \"twelve\", \"twenty\", \"twice\", \"twin\", \"twist\", \"two\", \"type\", \"typical\",\n    \"ugly\", \"umbrella\", \"unable\", \"unaware\", \"uncle\", \"uncover\", \"under\", \"undo\", \"unfair\", \"unfold\", \"unhappy\", \"uniform\", \"unique\", \"unit\", \"universe\", \"unknown\", \"unlock\", \"until\", \"unusual\", \"unveil\", \"update\", \"upgrade\", \"uphold\", \"upon\", \"upper\", \"upset\", \"urban\", \"urge\", \"usage\", \"use\", \"used\", \"useful\", \"useless\", \"usual\", \"utility\",\n    \"vacant\", \"vacuum\", \"vague\", \"valid\", \"valley\", \"valve\", \"van\", \"vanish\", \"vapor\", \"various\", \"vast\", \"vault\", \"vehicle\", \"velvet\", \"vendor\", \"venture\", \"venue\", \"verb\", \"verify\", \"version\", \"very\", \"vessel\", \"veteran\", \"viable\", \"vibrant\", \"vicious\", \"victory\", \"video\", \"view\", \"village\", \"vintage\", \"violin\", \"virtual\", \"virus\", \"visa\", \"visit\", \"visual\", \"vital\", \"vivid\", \"vocal\", \"voice\", \"void\", \"volcano\", \"volume\", \"vote\", \"voyage\",\n    \"wage\", \"wagon\", \"wait\", \"walk\", \"wall\", \"walnut\", \"want\", \"warfare\", \"warm\", \"warrior\", \"wash\", \"wasp\", \"waste\", \"water\", \"wave\", \"way\", \"wealth\", \"weapon\", \"wear\", \"weasel\", \"weather\", \"web\", \"wedding\", \"weekend\", \"weird\", \"welcome\", \"west\", \"wet\", \"whale\", \"what\", \"wheat\", \"wheel\", \"when\", \"where\", \"whip\", \"whisper\", \"wide\", \"width\", \"wife\", \"wild\", \"will\", \"win\", \"window\", \"wine\", \"wing\", \"wink\", \"winner\", \"winter\", \"wire\", \"wisdom\", \"wise\", \"wish\", \"witness\", \"wolf\", \"woman\", \"wonder\", \"wood\", \"wool\", \"word\", \"work\", \"world\", \"worry\", \"worth\", \"wrap\", \"wreck\", \"wrestle\", \"wrist\", \"write\", \"wrong\",\n    \"yard\", \"year\", \"yellow\", \"you\", \"young\", \"youth\",\n    \"zebra\", \"zero\", \"zone\", \"zoo\"\n];\n\n\n\n//////////////////////////////////\n// Section 5: Cbor encoder/decoder\n//////////////////////////////////\n\n/**\n * @typedef {(i: number, bytes: number[]) => void} Decoder\n */\n\n/**\n * Base class of any Cbor serializable data class\n * Also \n */\nexport class CborData {\n\tconstructor() {\n\t}\n\n\t/**\n\t * @returns {number[]}\n\t */\n\ttoCbor() {\n\t\tthrow new Error(\"not yet implemented\");\n\t}\n\n\t/**\n\t * @returns {string}\n\t */\n\ttoCborHex() {\n\t\treturn bytesToHex(this.toCbor())\n\t}\n}\n\n/**\n * Helper methods for (de)serializing data to/from Cbor.\n * \n * **Note**: Each decoding method mutates the input `bytes` by shifting it to the following CBOR element.\n * @namespace\n */\nexport const Cbor = {\n\t/**\n\t * @param {number} m - major type\n\t * @param {bigint} n - size parameter\n\t * @returns {number[]} - uint8 bytes\n\t */\n\tencodeHead: (m, n) => {\n\t\tif (n <= 23n) {\n\t\t\treturn [32*m + Number(n)];\n\t\t} else if (n >= 24n && n <= 255n) {\n\t\t\treturn [32*m + 24, Number(n)];\n\t\t} else if (n >= 256n && n <= 256n*256n - 1n) {\n\t\t\treturn [32*m + 25, Number((n/256n)%256n), Number(n%256n)];\n\t\t} else if (n >= 256n*256n && n <= 256n*256n*256n*256n - 1n) {\n\t\t\tconst e4 = bigIntToBytes(n);\n\n\t\t\twhile (e4.length < 4) {\n\t\t\t\te4.unshift(0);\n\t\t\t}\n\t\t\treturn [32*m + 26].concat(e4);\n\t\t} else if (n >= 256n*256n*256n*256n && n <= 256n*256n*256n*256n*256n*256n*256n*256n - 1n) {\n\t\t\tconst e8 = bigIntToBytes(n);\n\n\t\t\twhile(e8.length < 8) {\n\t\t\t\te8.unshift(0);\n\t\t\t}\n\t\t\treturn [32*m + 27].concat(e8);\n\t\t} else {\n\t\t\tthrow new Error(\"n out of range\");\n\t\t}\n\t},\n\n\t/**\n\t * @param {number[]} bytes - mutated to contain the rest\n\t * @returns {[number, bigint]} - [majorType, n]\n\t */\n\tdecodeHead: (bytes) => {\n\t\tif (bytes.length == 0) {\n\t\t\tthrow new Error(\"empty cbor head\");\n\t\t}\n\n\t\tconst first = assertDefined(bytes.shift());\n\n\t\tif (first%32 <= 23) {\n\t\t\treturn [idiv(first, 32), BigInt(first%32)];\n\t\t} else if (first%32 == 24) {\n\t\t\treturn [idiv(first, 32), bytesToBigInt(bytes.splice(0, 1))];\n\t\t} else if (first%32 == 25) {\n\t\t\treturn [idiv(first, 32), bytesToBigInt(bytes.splice(0, 2))];\n\t\t} else if (first%32 == 26) {\n\t\t\treturn [idiv(first, 32), bytesToBigInt(bytes.splice(0, 4))];\n\t\t} else if (first%32 == 27) {\n\t\t\treturn [idiv(first, 32), bytesToBigInt(bytes.splice(0, 8))];\n\t\t} else {\n\t\t\tthrow new Error(\"bad header\");\n\t\t}\n\t},\n\n\t/**\n\t * @param {number} m\n\t * @returns {number[]}\n\t */\n\tencodeIndefHead: (m) => {\n\t\treturn [32*m + 31];\n\t},\n\n\t/**\n\t * @param {number[]} bytes - cbor bytes\n\t * @returns {number} - majorType\n\t */\n\tdecodeIndefHead: (bytes) => {\n\t\tconst first = assertDefined(bytes.shift());\n\n\t\tconst m = idiv(first - 31, 32);\n\n\t\treturn m;\n\t},\n\n\t/**\n\t * @param {number[]} bytes\n\t * @returns {boolean}\n\t */\n\tisNull: (bytes) => {\n\t\treturn bytes[0] == 246;\n\t},\n\n\t/**\n\t * Encode `null` into its CBOR representation.\n\t * @returns {number[]}\n\t */\n\tencodeNull: () => {\n\t\treturn [246];\n\t},\n\n\t/**\n\t * Checks if next element in `bytes` is a `null`.\n\t * Throws an error if it isn't. \n\t * @param {number[]} bytes\n\t */\n\tdecodeNull: (bytes) => {\n\t\tconst b = assertDefined(bytes.shift());\n\n\t\tif (b != 246) {\n\t\t\tthrow new Error(\"not null\");\n\t\t}\n\t},\n\n\t/**\n\t * Encodes a `boolean` into its CBOR representation.\n\t * @param {boolean} b\n\t * @returns {number[]}\n\t */\n\tencodeBool: (b) => {\n\t\tif (b) {\n\t\t\treturn [245];\n\t\t} else {\n\t\t\treturn [244];\n\t\t}\n\t},\n\n\t/**\n\t * Decodes a CBOR encoded `boolean`.\n\t * Throws an error if the next element in bytes isn't a `boolean`.\n\t * @param {number[]} bytes\n\t * @returns {boolean}\n\t */\n\tdecodeBool: (bytes) => {\n\t\tconst b = assertDefined(bytes.shift());\n\n\t\tif (b == 245) {\n\t\t\treturn true;\n\t\t} else if (b == 244) {\n\t\t\treturn false;\n\t\t} else {\n\t\t\tthrow new Error(\"unexpected non-boolean cbor object\");\n\t\t}\n\t},\n\n\t/**\n\t * @param {number[]} bytes \n\t * @returns {boolean}\n\t */\n\tisBytes: (bytes) => {\n\t\treturn Cbor.isDefBytes(bytes) || Cbor.isIndefBytes(bytes);\n\t},\n\n\t/**\n\t * @param {number[]} bytes\n\t * @returns {boolean}\n\t */\n\tisDefBytes: (bytes) => {\n\t\tif (bytes.length == 0) {\n\t\t\tthrow new Error(\"empty cbor bytes\");\n\t\t}\n\n\t\tconst [m, _] = Cbor.decodeHead(bytes.slice(0, 9));\n\n\t\treturn m == 2;\n\t},\n\n\t/**\n\t * @param {number[]} bytes\n\t * @returns {boolean}\n\t */\n\tisIndefBytes: (bytes) => {\n\t\tif (bytes.length == 0) {\n\t\t\tthrow new Error(\"empty cbor bytes\");\n\t\t}\n\n\t\treturn 2*32 + 31 == bytes[0];\n\t},\n\n\t/**\n\t * Wraps a list of bytes using CBOR. Optionally splits the bytes into chunks.\n\t * @example\n\t * bytesToHex(Cbor.encodeBytes(hexToBytes(\"4d01000033222220051200120011\"))) == \"4e4d01000033222220051200120011\"\n\t * @param {number[]} bytes\n\t * @param {boolean} splitIntoChunks\n\t * @returns {number[]} - cbor bytes\n\t */\n\tencodeBytes: (bytes, splitIntoChunks = false) => {\n\t\tbytes = bytes.slice();\n\n\t\tif (bytes.length <= 64 || !splitIntoChunks) {\n\t\t\tconst head = Cbor.encodeHead(2, BigInt(bytes.length));\n\t\t\treturn head.concat(bytes);\n\t\t} else {\n\t\t\tlet res = Cbor.encodeIndefHead(2);\n\n\t\t\twhile (bytes.length > 0) {\n\t\t\t\tconst chunk = bytes.splice(0, 64);\n\n\t\t\t\tres = res.concat(Cbor.encodeHead(2, BigInt(chunk.length))).concat(chunk);\n\t\t\t}\n\n\t\t\tres.push(255);\n\n\t\t\treturn res;\n\t\t}\n\t},\n\n\t/**\n\t * Unwraps a CBOR encoded list of bytes. \n\t * @example\n\t * bytesToHex(Cbor.decodeBytes(hexToBytes(\"4e4d01000033222220051200120011\"))) == \"4d01000033222220051200120011\"\n\t * @param {number[]} bytes - cborbytes, mutated to form remaining\n\t * @returns {number[]} - byteArray\n\t */\n\tdecodeBytes: (bytes) => {\n\t\t// check header type\n\t\tassert(bytes.length > 0);\n\n\t\tif (Cbor.isIndefBytes(bytes)) {\n\t\t\t// multiple chunks\n\t\t\tvoid bytes.shift();\n\n\t\t\t/**\n\t\t\t * @type {number[]}\n\t\t\t */\n\t\t\tlet res = [];\n\n\t\t\twhile(bytes[0] != 255) {\n\t\t\t\tconst [_, n] = Cbor.decodeHead(bytes);\n\t\t\t\tif (n > 64n) {\n\t\t\t\t\tthrow new Error(\"bytearray chunk too large\");\n\t\t\t\t}\n\n\t\t\t\tres = res.concat(bytes.splice(0, Number(n)));\n\t\t\t}\n\n\t\t\tassert(bytes.shift() == 255);\n\n\t\t\treturn res;\n\t\t} else {\n\t\t\tconst [_, n] = Cbor.decodeHead(bytes);\n\n\t\t\treturn bytes.splice(0, Number(n));\n\t\t}\n\t},\n\n\t/**\n\t * @param {number[]} bytes\n\t * @returns {boolean}\n\t */\n\tisUtf8: (bytes) => {\n\t\tconst [m, _] = Cbor.decodeHead(bytes.slice());\n\n\t\treturn m == 3;\n\t},\n\n\t/**\n\t * Encodes a Utf8 string into Cbor bytes.\n\t * Strings can be split into lists with chunks of up to 64 bytes\n\t * to play nice with Cardano tx metadata constraints.\n\t * @param {string} str\n\t * @param {boolean} split\n\t * @returns {number[]}\n\t */\n\tencodeUtf8: (str, split = false) => {\n\t\tconst bytes = textToBytes(str);\n\n\t\tif (split && bytes.length > 64) {\n\t\t\t/** @type {number[][]} */\n\t\t\tconst chunks = [];\n\n\t\t\tlet i = 0;\n\t\t\twhile (i < bytes.length) {\n\t\t\t\t// We encode the largest chunk up to 64 bytes\n\t\t\t\t// that is valid UTF-8\n\t\t\t\tlet maxChunkLength = 64, chunk;\n\t\t\t\twhile (true) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tchunk = bytes.slice(i, i + maxChunkLength);\n\t\t\t\t\t\tbytesToText(chunk); // Decode to validate utf-8\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t} catch(_) {\n\t\t\t\t\t\tmaxChunkLength--;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tchunks.push(Cbor.encodeHead(3, BigInt(chunk.length)).concat(chunk));\n\t\t\t\ti += chunk.length;\n\t\t\t}\n\n\t\t\treturn Cbor.encodeDefList(chunks);\n\t\t} else {\n\t\t\treturn Cbor.encodeHead(3, BigInt(bytes.length)).concat(bytes);\n\t\t}\n\t},\n\n\t/**\n\t * @internal\n\t * @param {number[]} bytes\n\t * @returns {string}\n\t */\n\tdecodeUtf8Internal: (bytes) => {\n\t\tconst [m, n] = Cbor.decodeHead(bytes);\n\n\t\tassert(m === 3);\n\n\t\treturn bytesToText(bytes.splice(0, Number(n)));\n\t},\n\n\t/**\n\t * @param {number[]} bytes\n\t * @returns {string}\n\t */\n\tdecodeUtf8: (bytes) => {\n\t\tassert(bytes.length > 0);\n\n\t\tif (Cbor.isDefList(bytes)) {\n\t\t\tlet result = \"\";\n\n\t\t\tCbor.decodeList(bytes, (_, itemBytes) => {\n\t\t\t\tresult += Cbor.decodeUtf8Internal(itemBytes);\n\t\t\t});\n\n\t\t\treturn result;\n\t\t} else {\n\t\t\treturn Cbor.decodeUtf8Internal(bytes);\n\t\t}\n\t},\n\n\t/**\n\t * Encodes a bigint integer using CBOR.\n\t * @param {bigint} n\n\t * @returns {number[]}\n\t */\n\tencodeInteger: (n) => {\n\t\tif (n >= 0n && n <= (2n << 63n) - 1n) {\n\t\t\treturn Cbor.encodeHead(0, n);\n\t\t} else if (n >= (2n << 63n)) {\n\t\t\treturn Cbor.encodeHead(6, 2n).concat(Cbor.encodeBytes(bigIntToBytes(n)));\n\t\t} else if (n <= -1n && n >= -(2n << 63n)) {\n\t\t\treturn Cbor.encodeHead(1, -n - 1n);\n\t\t} else {\n\t\t\treturn Cbor.encodeHead(6, 3n).concat(Cbor.encodeBytes(bigIntToBytes(-n - 1n)));\n\t\t}\n\t},\n\n\t/**\n\t * Decodes a CBOR encoded bigint integer.\n\t * @param {number[]} bytes\n\t * @returns {bigint}\n\t */\n\tdecodeInteger: (bytes) => {\n\t\tconst [m, n] = Cbor.decodeHead(bytes);\n\n\t\tif (m == 0) {\n\t\t\treturn n;\n\t\t} else if (m == 1) {\n\t\t\treturn -n - 1n;\n\t\t} else if (m == 6) {\n\t\t\tif (n == 2n) {\n\t\t\t\tconst b = Cbor.decodeBytes(bytes);\n\n\t\t\t\treturn bytesToBigInt(b);\n\t\t\t} else if (n == 3n) {\n\t\t\t\tconst b = Cbor.decodeBytes(bytes);\n\n\t\t\t\treturn -bytesToBigInt(b) - 1n;\n\t\t\t} else {\n\t\t\t\tthrow new Error(`unexpected tag n:${n}`);\n\t\t\t}\n\t\t} else {\n\t\t\tthrow new Error(`unexpected tag m:${m}`);\n\t\t}\n\t},\n\n\t/**\n\t * @param {number[]} bytes\n\t * @returns {boolean}\n\t */\n\tisIndefList: (bytes) => {\n\t\tif (bytes.length == 0) {\n\t\t\tthrow new Error(\"empty cbor bytes\");\n\t\t}\n\n\t\treturn 4*32 + 31 == bytes[0];\n\t},\n\n\t/**\n\t * @internal\n\t * @returns {number[]}\n\t */\n\tencodeIndefListStart: () => {\n\t\treturn Cbor.encodeIndefHead(4);\n\t},\n\n\t/**\n\t * @internal\n\t * @param {CborData[] | number[][]} list\n\t * @returns {number[]}\n\t */\n\tencodeListInternal: (list) => {\n\t\t/**\n\t\t * @type {number[]}\n\t\t */\n\t\tlet res = [];\n\t\tfor (let item of list) {\n\t\t\tif (item instanceof CborData) {\n\t\t\t\tres = res.concat(item.toCbor());\n\t\t\t} else {\n\t\t\t\tres = res.concat(item);\n\t\t\t}\n\t\t}\n\n\t\treturn res;\n\t},\n\n\t/**\n\t * @internal\n\t * @returns {number[]}\n\t */\n\tencodeIndefListEnd: () => {\n\t\treturn [255];\n\t},\n\n\t/**\n\t * This follows the serialization format that the Haskell input-output-hk/plutus UPLC evaluator (i.e. empty lists use `encodeDefList`, non-empty lists use `encodeIndefList`).\n\t * See [well-typed/cborg/serialise/src/Codec/Serialise/Class.hs](https://github.com/well-typed/cborg/blob/4bdc818a1f0b35f38bc118a87944630043b58384/serialise/src/Codec/Serialise/Class.hs#L181).\n\t * @param {CborData[] | number[][]} list\n\t * @returns {number[]}\n\t */\n\tencodeList: (list) => {\n\t\treturn list.length ? Cbor.encodeIndefList(list) : Cbor.encodeDefList(list);\n\t},\n\n\t/**\n\t * Encodes a list of CBOR encodeable items using CBOR indefinite length encoding.\n\t * @param {CborData[] | number[][]} list Each item is either already serialized, or a CborData instance with a toCbor() method.\n\t * @returns {number[]}\n\t */\n\tencodeIndefList: (list) => {\n\t\treturn Cbor.encodeIndefListStart().concat(Cbor.encodeListInternal(list)).concat(Cbor.encodeIndefListEnd());\n\t},\n\n\t/**\n\t * @param {number[]} bytes\n\t * @returns {boolean}\n\t */\n\tisDefList: (bytes) => {\n\t\ttry {\n\t\t\tconst [m, _] = Cbor.decodeHead(bytes.slice(0, 9));\n\t\t\treturn m == 4;\n\t\t} catch (error) {\n\t\t\tif (error.message.includes(\"bad header\")) return false;\n\t\t\tthrow error;\n\t\t}\n\t},\n\n\t/**\n\t * @param {bigint} n\n\t * @returns {number[]}\n\t */\n\tencodeDefListStart: (n) => {\n\t\treturn Cbor.encodeHead(4, n);\n\t},\n\n\t/**\n\t * Encodes a list of CBOR encodeable items using CBOR definite length encoding\n\t * (i.e. header bytes of the element represent the length of the list).\n\t * @param {CborData[] | number[][]} list Each item is either already serialized, or a CborData instance with a toCbor() method.\n\t * @returns {number[]}\n\t */\n\tencodeDefList: (list) => {\n\t\treturn Cbor.encodeDefListStart(BigInt(list.length)).concat(Cbor.encodeListInternal(list));\n\t},\n\n\t/**\n\t * @param {number[]} bytes\n\t * @returns {boolean}\n\t */\n\tisList: (bytes) => {\n\t\treturn Cbor.isIndefList(bytes) || Cbor.isDefList(bytes);\n\t},\n\n\t/**\n\t * Decodes a CBOR encoded list.\n\t * A decoder function is called with the bytes of every contained item (nothing is returning directly).\n\t * @param {number[]} bytes\n\t * @param {Decoder} itemDecoder\n\t */\n\tdecodeList: (bytes, itemDecoder) => {\n\t\tif (Cbor.isIndefList(bytes)) {\n\t\t\tassert(Cbor.decodeIndefHead(bytes) == 4);\n\n\t\t\tlet i = 0;\n\t\t\twhile(bytes[0] != 255) {\n\t\t\t\titemDecoder(i, bytes);\n\t\t\t\ti++;\n\t\t\t}\n\n\t\t\tassert(bytes.shift() == 255);\n\t\t} else {\n\t\t\tconst [m, n] = Cbor.decodeHead(bytes);\n\n\t\t\tassert(m == 4);\n\n\t\t\tfor (let i = 0; i < Number(n); i++) {\n\t\t\t\titemDecoder(i, bytes);\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n\t * @param {number[]} bytes\n\t * @returns {boolean}\n\t */\n\tisTuple: (bytes) => {\n\t\treturn Cbor.isIndefList(bytes) || Cbor.isDefList(bytes);\n\t},\n\n\t/**\n\t * @param {number[][]} tuple\n\t * @returns {number[]}\n\t */\n\tencodeTuple: (tuple) => {\n\t\treturn Cbor.encodeDefList(tuple);\n\t},\n\n\t/**\n\t * @param {number[]} bytes\n\t * @param {Decoder} tupleDecoder\n\t * @returns {number} - returns the size of the tuple\n\t */\n\tdecodeTuple: (bytes, tupleDecoder) => {\n\t\tlet count = 0;\n\n\t\tCbor.decodeList(bytes, (_, itemBytes) => {\n\t\t\ttupleDecoder(count, itemBytes);\n\t\t\tcount++;\n\t\t});\n\n\t\treturn count;\n\t},\n\n\t/**\n\t * @param {number[]} bytes\n\t * @returns {boolean}\n\t */\n\tisMap: (bytes) => {\n\t\tconst [m, _] = Cbor.decodeHead(bytes.slice(0, 9));\n\n\t\treturn m == 5;\n\t},\n\n\t/**\n\t * @internal\n\t * @param {[CborData | number[], CborData | number[]][]} pairList\n\t * @returns {number[]}\n\t */\n\tencodeMapInternal: (pairList) => {\n\t\t/**\n\t\t * @type {number[]}\n\t\t */\n\t\tlet res = [];\n\n\t\tfor (let pair of pairList) {\n\t\t\tconst key = pair[0];\n\t\t\tconst value = pair[1];\n\n\t\t\tif (key instanceof CborData) {\n\t\t\t\tres = res.concat(key.toCbor());\n\t\t\t} else {\n\t\t\t\tres = res.concat(key);\n\t\t\t}\n\n\t\t\tif (value instanceof CborData) {\n\t\t\t\tres = res.concat(value.toCbor());\n\t\t\t} else {\n\t\t\t\tres = res.concat(value);\n\t\t\t}\n\t\t}\n\n\t\treturn res;\n\t},\n\n\t/**\n\t * Encodes a list of key-value pairs.\n\t * @param {[CborData | number[], CborData | number[]][]} pairList  Each key and each value is either a CborData instance with a toCbor method defined, or an already encoded list of CBOR bytes.\n\t * @returns {number[]}\n\t */\n\tencodeMap: (pairList) => {\n\t\treturn Cbor.encodeHead(5, BigInt(pairList.length)).concat(Cbor.encodeMapInternal(pairList));\n\t},\n\n\t/**\n\t * Decodes a CBOR encoded map.\n\t * Calls a decoder function for each key-value pair (nothing is returned directly).\n\t * \n\t * The decoder function is responsible for separating the key from the value,\n\t * which are simply stored as consecutive CBOR elements.\n\t * @param {number[]} bytes\n\t * @param {Decoder} pairDecoder\n\t */\n\tdecodeMap: (bytes, pairDecoder) => {\n\t\tconst [m, n] = Cbor.decodeHead(bytes);\n\n\t\tassert(m == 5);\n\n\t\tfor (let i = 0; i < n; i++) {\n\t\t\tpairDecoder(i, bytes);\n\t\t}\n\t},\n\n\t/**\n\t * @param {number[]} bytes\n\t * @returns {boolean}\n\t */\n\tisObject: (bytes) => {\n\t\treturn Cbor.isMap(bytes);\n\t},\n\n\t/**\n\t * Encodes an object with optional fields.\n\t * @param {Map<number, CborData | number[]>} object A `Map` with integer keys representing the field indices.\n\t * @returns {number[]}\n\t */\n\tencodeObject: (object) => {\n\t\treturn Cbor.encodeMap(Array.from(object.entries()).map(pair => [\n\t\t\tCbor.encodeInteger(BigInt(pair[0])),\n\t\t\tpair[1]\n\t\t]));\n\t},\n\n\t/**\n\t * Decodes a CBOR encoded object. For each field a decoder is called which takes the field index and the field bytes as arguments.\n\t * @param {number[]} bytes\n\t * @param {Decoder} fieldDecoder\n\t * @returns {Set<number>}\n\t */\n\tdecodeObject: (bytes, fieldDecoder) => {\n\t\t/** @type {Set<number>} */\n\t\tconst done = new Set();\n\n\t\tCbor.decodeMap(bytes, (_, pairBytes) => {\n\t\t\tlet i = Number(Cbor.decodeInteger(pairBytes));\n\n\t\t\tfieldDecoder(i, pairBytes);\n\n\t\t\tdone.add(i);\n\t\t});\n\n\t\treturn done;\n\t},\n\n\t/**\n\t * Unrelated to constructor\n\t * @param {bigint} tag\n\t * @returns {number[]}\n\t */\n\tencodeTag: (tag) => {\n\t\treturn Cbor.encodeHead(6, tag);\n\t},\n\n\t/**\n\t * @param {number[]} bytes\n\t * @returns {bigint}\n\t */\n\tdecodeTag: (bytes) => {\n\t\tconst [m, n] = Cbor.decodeHead(bytes);\n\n\t\tassert(m == 6);\n\n\t\treturn n;\n\t},\n\n\t/**\n\t * @param {number[]} bytes\n\t * @returns {boolean}\n\t */\n\tisConstr: (bytes) => {\n\t\tif (bytes.length == 0) {\n\t\t\tthrow new Error(\"empty cbor bytes\");\n\t\t}\n\n\t\tconst [m, _] = Cbor.decodeHead(bytes.slice(0, 9));\n\n\t\treturn m == 6;\n\t},\n\n\t/**\n\t * Encode a constructor tag of a ConstrData type\n\t * @param {number} tag\n\t * @returns {number[]}\n\t */\n\tencodeConstrTag: (tag) => {\n\t\tif (tag >= 0 && tag <= 6) {\n\t\t\treturn Cbor.encodeHead(6, 121n + BigInt(tag));\n\t\t} else if (tag >= 7 && tag <= 127) {\n\t\t\treturn Cbor.encodeHead(6, 1280n + BigInt(tag - 7));\n\t\t} else {\n\t\t\treturn Cbor.encodeHead(6, 102n).concat(Cbor.encodeHead(4, 2n)).concat(Cbor.encodeInteger(BigInt(tag)));\n\t\t}\n\t},\n\n\t/**\n\t * @param {number} tag\n\t * @param {CborData[] | number[][]} fields\n\t * @returns {number[]}\n\t */\n\tencodeConstr: (tag, fields) => {\n\t\treturn Cbor.encodeConstrTag(tag).concat(Cbor.encodeList(fields));\n\t},\n\n\t/**\n\t * @param {number[]} bytes\n\t * @returns {number}\n\t */\n\tdecodeConstrTag: (bytes) => {\n\t\t// constr\n\t\tconst [m, n] = Cbor.decodeHead(bytes);\n\n\t\tassert(m == 6);\n\n\t\tif (n < 127n) {\n\t\t\treturn Number(n - 121n);\n\t\t} else if (n == 102n) {\n\t\t\tconst [mCheck, nCheck] = Cbor.decodeHead(bytes);\n\t\t\tassert(mCheck == 4 && nCheck == 2n);\n\n\t\t\treturn Number(Cbor.decodeInteger(bytes));\n\t\t} else {\n\t\t\treturn Number(n - 1280n + 7n);\n\t\t}\n\t},\n\n\t/**\n\t * Returns the tag\n\t * @param {number[]} bytes\n\t * @param {Decoder} fieldDecoder\n\t * @returns {number}\n\t */\n\tdecodeConstr: (bytes, fieldDecoder) => {\n\t\tconst tag = Cbor.decodeConstrTag(bytes);\n\n\t\tCbor.decodeList(bytes, fieldDecoder);\n\n\t\treturn tag;\n\t}\n}\n\n\n\n/////////////////////////////\n// Section 6: Uplc data types\n/////////////////////////////\n\n/**\n * Min memory used by a UplcData value during validation\n * @internal\n * @type {number}\n */\nconst UPLC_DATA_NODE_MEM_SIZE = 4;\n\n/**\n * Base class for Plutus-core data classes (not the same as Plutus-core value classes!)\n */\nexport class UplcData extends CborData {\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\t/**\n\t * @param {TransferUplcAst} other \n\t * @returns {any}\n\t */\n\ttransfer(other) {\n\t\tthrow new Error(\"not yet implemented\");\n\t}\n\n\t/**\n\t * Estimate of memory usage during validation\n\t * @type {number}\n\t */\n\tget memSize() {\n\t\tthrow new Error(\"not yet implemented\");\n\t}\n\n\t/**\n\t * Compares the schema jsons\n\t * @param {UplcData} other\n\t * @returns {boolean}\n\t */\n\tisSame(other) {\n\t\treturn this.toSchemaJson() == other.toSchemaJson();\n\t}\n\n\t/**\n\t * @internal\n\t * @type {number[]}\n\t */\n\tget bytes() {\n\t\tthrow new Error(\"not a bytearray\");\n\t}\n\n\t/**\n\t * @internal\n\t * @type {bigint}\n\t */\n\tget int() {\n\t\tthrow new Error(\"not an int\");\n\t}\n\n\t/**\n\t * @internal\n\t * @type {number}\n\t */\n\tget index() {\n\t\tthrow new Error(\"not a constr\");\n\t}\n\n\t/**\n\t * @internal\n\t * @type {UplcData[]}\n\t */\n\tget fields() {\n\t\tthrow new Error(\"not a constr\");\n\t}\n\n\t/**\n\t * @internal\n\t * @type {UplcData[]}\n\t */\n\tget list() {\n\t\tthrow new Error(\"not a list\");\n\t}\n\n\t/**\n\t * @internal\n\t * @type {[UplcData, UplcData][]}\n\t */\n\tget map() {\n\t\tthrow new Error(\"not a map\");\n\t}\n\n\t/**\n\t * @returns {string}\n\t */\n\ttoString() {\n\t\tthrow new Error(\"not yet implemented\");\n\t}\n\n\t/**\n\t * @internal\n\t * @returns {IR}\n\t */\n\ttoIR() {\n\t\tthrow new Error(\"not yet implemented\");\n\t}\n\n\t/**\n\t * @returns {string}\n\t */\n\ttoSchemaJson() {\n\t\tthrow new Error(\"not yet implemented\");\n\t}\n\n\t/**\n\t * @param {number[] | string} bytes\n\t * @returns {UplcData}\n\t */\n\tstatic fromCbor(bytes) {\n\t\tif (typeof bytes == \"string\") {\n\t\t\treturn UplcData.fromCbor(hexToBytes(bytes));\n\t\t} else {\n\t\t\tif (Cbor.isList(bytes)) {\n\t\t\t\treturn ListData.fromCbor(bytes);\n\t\t\t} else if (Cbor.isIndefBytes(bytes)) {\n\t\t\t\treturn ByteArrayData.fromCbor(bytes);\n\t\t\t} else {\n\t\t\t\tif (Cbor.isDefBytes(bytes)) {\n\t\t\t\t\treturn ByteArrayData.fromCbor(bytes);\n\t\t\t\t} else if (Cbor.isMap(bytes)) {\n\t\t\t\t\treturn MapData.fromCbor(bytes);\n\t\t\t\t} else if (Cbor.isConstr(bytes)) {\n\t\t\t\t\treturn ConstrData.fromCbor(bytes);\n\t\t\t\t} else {\n\t\t\t\t\t// int, must come last\n\t\t\t\t\treturn IntData.fromCbor(bytes);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * Represents an unbounded integer (bigint).\n */\nexport class IntData extends UplcData {\n\t#value;\n\n\t/**\n\t * @param {bigint} value\n\t */\n\tconstructor(value) {\n\t\tsuper();\n\t\tthis.#value = value;\n\t}\n\n\t/**\n\t * @param {TransferUplcAst} other \n\t * @returns {any}\n\t */\n\ttransfer(other) {\n\t\treturn other.transferIntData(this.#value);\n\t}\n\n\t/**\n\t * @type {bigint}\n\t */\n\tget value() {\n\t\treturn this.#value;\n\t}\n\n\t/**\n\t * Alias for `IntData.value`.\n\t * @type {bigint}\n\t */\n\tget int() {\n\t\treturn this.#value;\n\t}\n\n    /**\n     * Calculate the mem size of a integer (without the DATA_NODE overhead)\n\t * @internal\n     * @param {bigint} value\n     * @returns {number}\n     */\n    static memSizeInternal(value) {\n        if (value == 0n) {\n\t\t\treturn 1;\n\t\t} else {\n\t\t\tconst abs = value > 0n ? value : -value;\n\n\t\t\treturn Math.floor(Math.floor(Math.log2(Number(abs)))/64) + 1;\n\t\t}\n    }\n\n\t/**\n\t * @type {number}\n\t */\n\tget memSize() {\n\t\treturn UPLC_DATA_NODE_MEM_SIZE + IntData.memSizeInternal(this.#value);\n\t}\n\n\t/**\n\t * @returns {string}\n\t */\n\ttoString() {\n\t\treturn this.#value.toString();\n\t}\n\n\t/**\n\t * Returns integer literal wrapped with integer data function call.\n\t * @internal\n\t * @returns {IR}\n\t */\n\ttoIR() {\n\t\treturn new IR(`__core__iData(${this.#value.toString()})`);\n\t}\n\n\t/**\n\t * Returns string, not js object, because of unbounded integers\n\t * @returns {string}\n\t */\n\ttoSchemaJson() {\n\t\treturn `{\"int\": ${this.#value.toString()}}`;\n\t}\n\n\t/**\n\t * @returns {number[]}\n\t */\n\ttoCbor() {\n\t\treturn Cbor.encodeInteger(this.#value);\n\t}\n\n\t/**\n\t * @param {number[]} bytes\n\t * @returns {IntData}\n\t */\n\tstatic fromCbor(bytes) {\n\t\treturn new IntData(Cbor.decodeInteger(bytes));\n\t}\n}\n\n/**\n * Plutus-core bytearray data class.\n * Wraps a regular list of uint8 numbers (so not Uint8Array)\n */\nexport class ByteArrayData extends UplcData {\n\t#bytes;\n\n\t/**\n\t * @param {number[]} bytes\n\t */\n\tconstructor(bytes) {\n\t\tsuper();\n\t\tthis.#bytes = bytes;\n\t}\n\n\t/**\n\t * Applies utf-8 encoding\n\t * @param {string} s\n\t * @returns {ByteArrayData}\n\t */\n\tstatic fromString(s) {\n\t\tlet bytes = textToBytes(s);\n\n\t\treturn new ByteArrayData(bytes);\n\t}\n\n\t/**\n\t * @param {TransferUplcAst} other \n\t * @returns {any}\n\t */\n\ttransfer(other) {\n\t\treturn other.transferByteArrayData(this.#bytes);\n\t}\n\n\t/**\n\t * Returns a copy of the underlying bytes.\n\t * @type {number[]}\n\t */\n\tget bytes() {\n\t\treturn this.#bytes.slice();\n\t}\n\n    /**\n     * Calculates the mem size of a byte array without the DATA_NODE overhead.\n     * @param {number[]} bytes\n     * @returns {number}\n     */\n    static memSizeInternal(bytes) {\n        const n = bytes.length;\n\n\t\tif (n === 0) {\n\t\t\treturn 1; // this is so annoying: haskell reference implementation says it should be 0, but current (20220925) testnet and mainnet settings say it's 1\n\t\t} else {\n\t\t\treturn Math.floor((n - 1)/8) + 1;\n\t\t}\n    }\n\n\t/**\n\t * @type {number}\n\t */\n\tget memSize() {\n\t\treturn UPLC_DATA_NODE_MEM_SIZE + ByteArrayData.memSizeInternal(this.#bytes);\n\t}\n\n\t/**\n\t * @returns {string}\n\t */\n\ttoHex() {\n\t\treturn bytesToHex(this.#bytes);\n\t}\n\n\t/**\n\t * @type {string}\n\t */\n\tget hex() {\n\t\treturn this.toHex();\n\t}\n\n\t/**\n\t * @returns {string}\n\t */\n\ttoString() {\n\t\treturn `#${this.toHex()}`;\n\t}\n\n\t/**\n\t * Returns bytearray literal wrapped with bytearray data function as IR.\n\t * @internal\n\t * @returns {IR}\n\t */\n\ttoIR() {\n\t\treturn new IR(`__core__bData(#${this.toHex()})`);\n\t}\n\n\t/**\n\t * @returns {string}\n\t */\n\ttoSchemaJson() {\n\t\treturn `{\"bytes\": \"${this.toHex()}\"}`;\n\t}\n\n\t/**\n\t * @returns {number[]}\n\t */\n\ttoCbor() {\n\t\treturn Cbor.encodeBytes(this.#bytes, true);\n\t}\n\n\t/**\n\t * @param {number[]} bytes\n\t * @returns {ByteArrayData}\n\t */\n\tstatic fromCbor(bytes) {\n\t\treturn new ByteArrayData(Cbor.decodeBytes(bytes));\n\t}\n\n\t/**\n\t * Bytearray comparison, which can be used for sorting bytearrays\n\t * @internal\n\t * @example\n\t * ByteArrayData.comp(hexToBytes(\"0101010101010101010101010101010101010101010101010101010101010101\"), hexToBytes(\"0202020202020202020202020202020202020202020202020202020202020202\")) == -1\n\t * @param {number[]} a\n\t * @param {number[]} b\n\t * @returns {number} - 0 -> equals, 1 -> gt, -1 -> lt\n\t */\n\tstatic comp(a, b) {\n\t\t/** @return {boolean} */\n\t\tfunction lessThan() {\n\t\t\tfor (let i = 0; i < Math.min(a.length, b.length); i++) {\n\t\t\t\tif (a[i] != b[i]) {\n\t\t\t\t\treturn a[i] < b[i];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn a.length < b.length;\n\t\t}\n\n\t\t/** @return {number} */\n\t\tfunction lessOrGreater() {\n\t\t\treturn lessThan() ? -1 : 1;\n\t\t}\n\n\t\tif (a.length != b.length) {\n\t\t\treturn lessOrGreater();\n\t\t} else {\n\t\t\tfor (let i = 0; i < a.length; i++) {\n\t\t\t\tif (a[i] != b[i]) {\n\t\t\t\t\treturn lessOrGreater();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn 0;\n\t\t}\n\t}\n\n\t/**\n\t * Cbor-specific Bytearray comparison (see https://datatracker.ietf.org/doc/html/rfc7049#section-3.9)\n\t * Used by Assets.sort()\n\t * @internal\n\t * @param {number[]} a\n\t * @param {number[]} b\n\t * @returns {number} - 0 -> equals, 1 -> gt, -1 -> lt\n\t */\n\tstatic compLengthFirst(a, b) {\n\t\tif (a.length != b.length) {\n\t\t\treturn a.length < b.length ? -1 : 1;\n\t\t} else {\n\t\t\tfor (let i = 0; i < a.length; i++) {\n\t\t\t\tif (a[i] != b[i]) {\n\t\t\t\t\treturn a[i] < b[i] ? -1 : 1;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn 0;\n\t\t}\n\t}\n}\n\n/**\n * Represents a list of other `UplcData` instances.\n */\nexport class ListData extends UplcData {\n\t#items;\n\n\t/**\n\t * @param {UplcData[]} items\n\t */\n\tconstructor(items) {\n\t\tsuper();\n\t\tassert(items.every(f => f instanceof UplcData), \"expected exclusively UplcData items\");\n\t\tthis.#items = items;\n\t}\n\n\t/**\n\t * @param {TransferUplcAst} other \n\t */\n\ttransfer(other) {\n\t\treturn other.transferListData(\n\t\t\tthis.#items.map(item => item.transfer(other))\n\t\t);\n\t}\n\n\t/**\n\t * @type {UplcData[]}\n\t */\n\tget list() {\n\t\treturn this.#items.slice();\n\t}\n\n\t/**\n\t * @type {number}\n\t */\n\tget memSize() {\n\t\tlet sum = UPLC_DATA_NODE_MEM_SIZE;\n\n\t\tfor (let item of this.#items) {\n\t\t\tsum += item.memSize;\n\t\t}\n\n\t\treturn sum;\n\t}\n\n\t/**\n\t * @returns {string}\n\t */\n\ttoString() {\n\t\treturn `[${this.#items.map(item => item.toString()).join(\", \")}]`;\n\t}\n\n\t/**\n\t * @internal\n\t * @returns {IR}\n\t */\n\ttoIR() {\n\t\tlet ir = new IR(\"__core__mkNilData(())\");\n\t\tfor (let i = this.#items.length - 1; i >= 0; i--) {\n\t\t\tir = new IR([new IR(\"__core__mkCons(\"), this.#items[i].toIR(), new IR(\", \"), ir, new IR(\")\")]);\n\t\t}\n\n\t\treturn new IR([new IR(\"__core__listData(\"), ir, new IR(\")\")]);\n\t}\n\n\t/**\n\t * @returns {string}\n\t */\n\ttoSchemaJson() {\n\t\treturn `{\"list\":[${this.#items.map(item => item.toSchemaJson()).join(\", \")}]}`;\n\t}\n\n\t/**\n\t * @returns {number[]}\n\t */\n\ttoCbor() {\n\t\treturn Cbor.encodeList(this.#items);\n\t}\n\n\t/**\n\t * @param {number[]} bytes\n\t * @returns {ListData}\n\t */\n\tstatic fromCbor(bytes) {\n\t\t/**\n\t\t * @type {UplcData[]}\n\t\t */\n\t\tlet list = [];\n\n\t\tCbor.decodeList(bytes, (_, itemBytes) => {\n\t\t\tlist.push(UplcData.fromCbor(itemBytes));\n\t\t});\n\n\t\treturn new ListData(list);\n\t}\n}\n\n/**\n * Represents a list of pairs of other `UplcData` instances.\n */\nexport class MapData extends UplcData {\n\t#pairs;\n\n\t/**\n\t * @param {[UplcData, UplcData][]} pairs\n\t */\n\tconstructor(pairs) {\n\t\tsuper();\n\t\tthis.#pairs = pairs;\n\t}\n\n\t/**\n\t * @param {TransferUplcAst} other \n\t * @returns {any}\n\t */\n\ttransfer(other) {\n\t\treturn other.transferMapData(\n\t\t\tthis.#pairs.map(([a, b]) => {\n\t\t\t\treturn [a.transfer(other), b.transfer(other)]\n\t\t\t})\n\t\t);\n\t}\n\n\t/**\n\t * @type {[UplcData, UplcData][]}\n\t */\n\tget map() {\n\t\treturn this.#pairs.slice();\n\t}\n\n\t/**\n\t * @type {number}\n\t */\n\tget memSize() {\n\t\tlet sum = UPLC_DATA_NODE_MEM_SIZE;\n\n\t\tfor (let [k, v] of this.#pairs) {\n\t\t\tsum += k.memSize + v.memSize;\n\t\t}\n\n\t\treturn sum;\n\t}\n\n\t/**\n\t * @returns {string}\n\t */\n\ttoString() {\n\t\treturn `{${this.#pairs.map(([fst, snd]) => `${fst.toString()}: ${snd.toString()}`).join(\", \")}}`;\n\t}\n\n\t/**\n\t * @internal\n\t * @returns {IR}\n\t */\n\ttoIR() {\n\t\tlet ir = new IR(\"__core__mkNilPairData(())\");\n\n\t\tfor (let i = this.#pairs.length - 1; i >= 0; i--) {\n\t\t\tconst a = this.#pairs[i][0].toIR();\n\t\t\tconst b = this.#pairs[i][1].toIR();\n\n\t\t\tir = new IR([new IR(\"__core__mkCons(__core__mkPairData(\"), a, new IR(\", \"), b, new IR(\", \"), new IR(\")\"), new IR(\", \"), ir, new IR(\")\")]);\n\t\t}\n\n\t\treturn new IR([new IR(\"__core__mapData(\"), ir, new IR(\")\")]);\n\t}\n\n\t/**\n\t * @returns {string}\n\t */\n\ttoSchemaJson() {\n\t\treturn `{\"map\": [${this.#pairs.map(pair => { return \"{\\\"k\\\": \" + pair[0].toSchemaJson() + \", \\\"v\\\": \" + pair[1].toSchemaJson() + \"}\" }).join(\", \")}]}`;\n\t}\n\n\t/**\n\t * @returns {number[]}\n\t */\n\ttoCbor() {\n\t\treturn Cbor.encodeMap(this.#pairs);\n\t}\n\n\t/**\n\t * @param {number[]} bytes\n\t * @returns {MapData}\n\t */\n\tstatic fromCbor(bytes) {\n\t\t/**\n\t\t * @type {[UplcData, UplcData][]}\n\t\t */\n\t\tlet pairs = [];\n\n\t\tCbor.decodeMap(bytes, (_, pairBytes) => {\n\t\t\tpairs.push([UplcData.fromCbor(pairBytes), UplcData.fromCbor(pairBytes)]);\n\t\t});\n\n\t\treturn new MapData(pairs);\n\t}\n}\n\n/**\n * Represents a tag index and a list of `UplcData` fields.\n */\nexport class ConstrData extends UplcData {\n\t#index;\n\t#fields;\n\n\t/**\n\t * @param {number} index\n\t * @param {UplcData[]} fields\n\t */\n\tconstructor(index, fields) {\n\t\tsuper();\n\t\tassert(fields.every(f => f instanceof UplcData), \"expected exclusively UplcData fields\");\n\t\tthis.#index = index;\n\t\tthis.#fields = fields;\n\t}\n\n\t/**\n\t * @param {TransferUplcAst} other \n\t * @returns {any}\n\t */\n\ttransfer(other) {\n\t\treturn other.transferConstrData(\n\t\t\tthis.#index,\n\t\t\tthis.#fields.map(f => f.transfer(other))\n\t\t);\n\t}\n\n\t/**\n\t * @type {number}\n\t */\n\tget index() {\n\t\treturn this.#index;\n\t}\n\n\t/**\n\t * @type {UplcData[]}\n\t */\n\tget fields() {\n\t\treturn this.#fields.slice();\n\t}\n\n\t/**\n\t * @type {number}\n\t */\n\tget memSize() {\n\t\tlet sum = UPLC_DATA_NODE_MEM_SIZE;\n\n\t\tfor (let field of this.#fields) {\n\t\t\tsum += field.memSize;\n\t\t}\n\n\t\treturn sum;\n\t}\n\n\t/**\n\t * @returns {string}\n\t */\n\ttoString() {\n\t\tlet parts = this.#fields.map(field => field.toString());\n\t\treturn `${this.#index.toString()}{${parts.join(\", \")}}`;\n\t}\n\n\t/**\n\t * @returns {IR}\n\t */\n\ttoIR() {\n\t\tlet ir = new IR(\"__core__mkNilData(())\");\n\t\tfor (let i = this.#fields.length - 1; i >= 0; i--) {\n\t\t\tir = new IR([new IR(\"__core__mkCons(\"), this.#fields[i].toIR(), new IR(\", \"), ir, new IR(\")\")]);\n\t\t}\n\n\t\treturn new IR([new IR(\"__core__constrData(\"), new IR(this.#index.toString()), new IR(\", \"), ir, new IR(\")\")]);\n\t}\n\n\t/**\n\t * @returns {string}\n\t */\n\ttoSchemaJson() {\n\t\treturn `{\"constructor\": ${this.#index.toString()}, \"fields\": [${this.#fields.map(f => f.toSchemaJson()).join(\", \")}]}`;\n\t}\n\n\t/**\n\t * @returns {number[]}\n\t */\n\ttoCbor() {\n\t\treturn Cbor.encodeConstr(this.#index, this.#fields);\n\t}\n\n\t/**\n\t * @param {number[]} bytes\n\t * @returns {ConstrData}\n\t */\n\tstatic fromCbor(bytes) {\n\t\t/**\n\t\t * @type {UplcData[]}\n\t\t */\n\t\tlet fields = [];\n\n\t\tlet tag = Cbor.decodeConstr(bytes, (_, fieldBytes) => {\n\t\t\tfields.push(UplcData.fromCbor(fieldBytes));\n\t\t});\n\n\t\treturn new ConstrData(tag, fields);\n\t}\n}\n\n\n/////////////////////////////////\n// Section 7: Helios data objects\n/////////////////////////////////\n\n/**\n * Base-type of all data-types that exist both on- and off-chain, and map directly to Helios instances.\n * @deprecated\n */\nexport class HeliosData extends CborData {\n\tconstructor() {\n        super();\n\t}\n\n    /**\n     * Name begins with underscore so it can never conflict with structure field names.\n     * @internal\n     * @returns {UplcData}\n     */\n\t_toUplcData() {\n        throw new Error(\"not yet implemented\");\n\t}\n\n    /**\n     * @returns {string}\n     */\n\ttoSchemaJson() {\n\t\treturn this._toUplcData().toSchemaJson();\n\t}\n\n\t/**\n\t * Defaults to cbor encoding of uplc data structure.\n\t * @returns {number[]}\n\t */\n\ttoCbor() {\n\t\treturn this._toUplcData().toCbor();\n\t}\n\n\t/**\n\t * Most HeliosData classes are builtins.\n\t * @internal\n\t * @returns {boolean}\n\t */\n\tstatic isBuiltin() {\n\t\treturn true;\n\t}\n}\n\n/**\n * Deprecated\n * @internal\n * @template {HeliosData} T\n * @typedef {{\n *   new(...args: any[]): T\n *   fromUplcCbor: (bytes: (string | number[])) => T\n *   fromUplcData: (data: UplcData) => T\n *   isBuiltin(): boolean\n * }} HeliosDataClass\n */\n\n/**\n * @deprecated\n * @typedef {number | bigint} HIntProps\n */\n\n/**\n * Helios Int type\n * @deprecated\n */\nexport class HInt extends HeliosData {\n    /**\n     * @type {bigint}\n     */\n    #value;\n\n    /**\n     * @internal\n     * @param {HIntProps} rawValue\n     * @returns {bigint}\n     */\n    static cleanConstructorArg(rawValue) {\n        const value = BigInt(rawValue);\n\n        if (value.toString() != rawValue.toString()) {\n            throw new Error(\"not a valid integer\");\n        }\n\n        return value;\n    }\n\n    /**\n     * @param {HIntProps} rawValue\n     */\n    constructor(rawValue) {\n        super();\n\n        this.#value = HInt.cleanConstructorArg(rawValue);\n    }\n\n\t/**\n\t * @returns {string}\n\t */\n\ttoString() {\n\t\treturn this.#value.toString();\n\t}\n\n\t/**\n\t * @param {HInt | HIntProps} props \n\t * @returns {HInt}\n\t */\n\tstatic fromProps(props) {\n\t\treturn props instanceof HInt ? props : new HInt(props);\n\t}\n\n    /**\n     * @type {bigint}\n     */\n    get value() {\n        return this.#value;\n    }\n\n    /**\n     * @internal\n     * @returns {UplcData}\n     */\n    _toUplcData() {\n        return new IntData(this.#value);\n    }\n\n    /**\n     * @param {UplcData} data\n     * @returns {HInt}\n     */\n    static fromUplcData(data) {\n        return new HInt(data.int);\n    }\n\n    /**\n     * @param {string | number[]} bytes\n     * @returns {HInt}\n     */\n    static fromUplcCbor(bytes) {\n        return HInt.fromUplcData(UplcData.fromCbor(bytes));\n    }\n\n\t/**\n\t * @param {number[]} bytes \n\t * @returns {HInt}\n\t */\n\tstatic fromCbor(bytes) {\n\t\treturn new HInt(Cbor.decodeInteger(bytes));\n\t}\n\n\t/**\n\t * @returns {number[]}\n\t */\n\ttoCbor() {\n\t\treturn  Cbor.encodeInteger(this.value);\n\t}\n\n\t/**\n\t * @returns {string}\n\t */\n\tdump() {\n\t\treturn this.#value.toString();\n\t}\n\n\t/**\n\t * @param {HInt | HIntProps} other \n\t * @returns {boolean}\n\t */\n\teq(other) {\n\t\treturn this.#value == HInt.fromProps(other).#value\n\t}\n\n\t/**\n\t * @param {HInt | HIntProps} other \n\t * @returns {boolean}\n\t */\n\tneq(other) {\n\t\treturn this.#value != HInt.fromProps(other).value;\n\t}\n\n\t/**\n\t * @param {HInt | HIntProps} other \n\t * @returns {boolean}\n\t */\n\tge(other) {\n\t\treturn this.#value >= HInt.fromProps(other).#value;\n\t}\n\n\t/**\n\t * @param {HInt | HIntProps} other \n\t * @returns {boolean}\n\t */\n\tgt(other) {\n\t\treturn this.#value > HInt.fromProps(other).#value;\n\t}\n\n\t/**\n\t * @param {HInt | HIntProps} other \n\t * @returns {boolean}\n\t */\n\tle(other) {\n\t\treturn this.#value <= HInt.fromProps(other).#value;\n\t}\n\n\t/**\n\t * @param {HInt | HIntProps} other \n\t * @returns {boolean}\n\t */\n\tlt(other) {\n\t\treturn this.#value < HInt.fromProps(other).#value;\n\t}\n\n\t/**\n\t * @param {HInt| HIntProps} other \n\t * @returns {HInt}\n\t */\n\tadd(other) {\n\t\treturn new HInt(this.#value + HInt.fromProps(other).#value);\n\t}\n\n\t/**\n\t * @param {HInt | HIntProps} other \n\t * @returns {HInt}\n\t */\n\tsub(other) {\n\t\treturn new HInt(this.#value - HInt.fromProps(other).#value);\n\t}\n\n\t/**\n\t * @param {HInt| HIntProps} other \n\t * @returns {HInt}\n\t */\n\tmul(other) {\n\t\treturn new HInt(this.#value * HInt.fromProps(other).#value);\n\t}\n}\n\n/**\n * @internal\n * @typedef {number | bigint | string | Date} TimeProps\n */\n\n/**\n * Milliseconds since 1 jan 1970\n * @internal\n */\nexport class Time extends HInt {\n     /**\n     * @internal\n     * @param {TimeProps} props\n     * @returns {bigint}\n     */\n\tstatic cleanConstructorArg(props) {\n        if (props instanceof Date) {\n            return BigInt(props.getTime());\n\t\t} else if (typeof props == \"string\") {\n\t\t\treturn BigInt(Date.parse(props));\n        } else {\n            const value = BigInt(props);\n\n            if (value.toString() != props.toString()) {\n                throw new Error(\"not a valid integer\");\n            } else {\n                return value;\n            }\n        }\n    }\n\n    /**\n     * @param {TimeProps} props\n     */\n    constructor(props) {\n        super(Time.cleanConstructorArg(props));\n    }\n\n\t/**\n\t * @param {Time | TimeProps} props \n\t * @returns {Time}\n\t */\n\tstatic fromProps(props) {\n\t\treturn props instanceof Time ? props : new Time(props);\n\t}\n\n    /**\n     * @param {UplcData} data\n     * @returns {Time}\n     */\n    static fromUplcData(data) {\n        return new Time(data.int);\n    }\n\n    /**\n     * @param {string | number[]} bytes\n     * @returns {Time}\n     */\n    static fromUplcCbor(bytes) {\n        return Time.fromUplcData(UplcData.fromCbor(bytes));\n    }\n}\n\n/**\n * @internal\n * @typedef {HIntProps} DurationProps\n */\n\n/**\n * Difference between two time values in milliseconds.\n * @internal\n */\nexport class Duration extends HInt {\n\t/**\n\t * @param {Duration | DurationProps} props \n\t */\n\tstatic fromProps(props) {\n\t\treturn props instanceof Duration ? props : new Duration(props);\n\t}\n\n    /**\n     * @param {UplcData} data\n     * @returns {Duration}\n     */\n    static fromUplcData(data) {\n        return new Duration(data.int);\n    }\n\n    /**\n     * @param {string | number[]} bytes\n     * @returns {Duration}\n     */\n    static fromUplcCbor(bytes) {\n        return Duration.fromUplcData(UplcData.fromCbor(bytes));\n    }\n}\n\n/**\n * @internal\n * @typedef {boolean | string} BoolProps\n */\n\n/**\n * Helios Bool type\n * @internal\n */\nexport class Bool extends HeliosData {\n    /**\n     * @type {boolean}\n     */\n    #value;\n\n    /**\n     * @internal\n     * @param {BoolProps} props \n     * @returns {boolean}\n     */\n    static cleanConstructorArg(props) {\n        if (typeof props == \"string\") {\n            if (props == \"false\") {\n                return false;\n            } else if (props == \"true\") {\n                return true;\n            } else {\n                throw new Error(\"not a valid string representation of a Bool\");\n            }\n        } else if (typeof props == \"boolean\") {\n            return props;\n        } else {\n            throw new Error(\"can't convert to boolean\");\n        }\n    }\n\n    /**\n     * @param {BoolProps} props \n     */\n    constructor(props) {\n        super();\n\n        this.#value = Bool.cleanConstructorArg(props);\n    }\n\n\t/**\n\t * @param {Bool | BoolProps} props \n\t * @returns {Bool}\n\t */\n\tstatic fromProps(props) {\n\t\treturn props instanceof Bool ? props : new Bool(props);\n\t}\n\n\t/**\n\t * @type {boolean}\n\t */\n    get bool() {\n        return this.#value;\n    }\n\n    /**\n     * @internal\n     * @returns {UplcData}\n     */\n    _toUplcData() {\n        return new ConstrData(this.#value ? 1 : 0, []);\n    }\n\n    /**\n     * @param {UplcData} data\n     * @returns {Bool}\n     */\n    static fromUplcData(data) {\n        assert(data.fields.length == 0, \"bool data can't have fields\");\n\n        if (data.index == 0) {\n            return new Bool(false);\n        } else if (data.index == 1) {\n            return new Bool(true);\n        } else {\n            throw new Error(\"expected 0 or 1 for ConstrData representing Bool\");\n        }\n    }\n\n    /**\n     * @param {string | number[]} bytes\n     * @returns {Bool}\n     */\n    static fromUplcCbor(bytes) {\n        return Bool.fromUplcData(UplcData.fromCbor(bytes));\n    }\n}\n\n/**\n * @internal\n * @typedef {string} HStringProps\n */\n\n/**\n * Helios String type.\n * Can't be named 'String' because that would interfere with the javascript 'String'-type\n * @internal\n */\nexport class HString extends HeliosData {\n    /**\n     * @type {string}\n     */\n    #value;\n\n    /**\n     * @param {HStringProps} props \n     */\n    constructor(props) {\n        super();\n\n        this.#value = props;\n    }\n\n\t/**\n\t * @param {HString | HStringProps} props\n\t * @returns {HString}\n\t */\n\tstatic fromProps(props) {\n\t\treturn props instanceof HString ? props : new HString(props);\n\t}\n\n\t/**\n\t * @type {string}\n\t */\n    get string() {\n        return this.#value;\n    }\n\n    /**\n     * @internal\n     * @returns {UplcData}\n     */\n    _toUplcData() {\n        return new ByteArrayData(textToBytes(this.#value));\n    }\n\n    /**\n     * @param {UplcData} data\n     * @returns {HString}\n     */\n    static fromUplcData(data) {\n        return new HString(bytesToText(data.bytes));\n    }\n\n    /**\n     * @param {string | number[]} bytes\n     * @returns {HString}\n     */\n    static fromUplcCbor(bytes) {\n        return HString.fromUplcData(UplcData.fromCbor(bytes));\n    }\n}\n\n/**\n * @deprecated\n * @typedef {number[] | string} ByteArrayProps\n */\n\n/**\n * Helios ByteArray type\n * @deprecated\n */\nexport class ByteArray extends HeliosData {\n    /**\n     * @type {number[]}\n     */\n    #bytes;\n\n    /**\n     * @internal\n     * @param {ByteArrayProps} props \n     */\n    static cleanConstructorArg(props) {\n        if (Array.isArray(props)) {\n            return props;\n        } else if (typeof props == \"string\") {\n            if (props.startsWith(\"#\")) {\n                props = props.slice(1);\n            }\n\n            return hexToBytes(props);\n        } else {\n            throw new Error(\"unexpected bytes type\");\n        }\n    }\n\n    /**\n     * @param {ByteArrayProps} props \n     */\n    constructor(props) {\n        super();\n\n        this.#bytes = ByteArray.cleanConstructorArg(props);\n    }\n\n\t/**\n\t * @param {ByteArray | ByteArrayProps} props \n\t * @returns {ByteArray}\n\t */\n\tstatic fromProps(props) {\n\t\treturn props instanceof ByteArray ? props : new ByteArray(props);\n\t}\n\n    /**\n     * @type {number[]}\n     */\n    get bytes() {\n        return this.#bytes;\n    }\n\n    /**\n\t * Hexadecimal representation.\n     * @type {string}\n     */\n    get hex() {\n        return bytesToHex(this.#bytes);\n    }\n\n    /**\n     * @internal\n     * @returns {UplcData}\n     */\n    _toUplcData() {\n        return new ByteArrayData(this.#bytes);\n    }\n\n\t/**\n\t * @returns {number[]}\n\t */\n\ttoCbor() {\n\t\treturn Cbor.encodeBytes(this.#bytes);\n\t}\n\n    /**\n     * @param {UplcData} data\n     * @returns {ByteArray}\n     */\n    static fromUplcData(data) {\n        return new ByteArray(data.bytes);\n    }\n\n    /**\n     * @param {string | number[]} bytes\n     * @returns {ByteArray}\n     */\n    static fromUplcCbor(bytes) {\n        return ByteArray.fromUplcData(UplcData.fromCbor(bytes));\n    }\n\n\t/**\n\t * @param {number[]} bytes \n\t * @returns {ByteArray}\n\t */\n\tstatic fromCbor(bytes) {\n\t\treturn new ByteArray(Cbor.decodeBytes(bytes));\n\t}\n\n\t/**\n\t * @param {ByteArray | ByteArrayProps} other \n\t * @returns {boolean}\n\t */\n\teq(other) {\n\t\treturn eq(this.#bytes, ByteArray.fromProps(other).#bytes);\n\t}\n}\n\n/**\n * Dynamically constructs a new List class, depending on the item type.\n * @internal\n * @template {HeliosData} T\n * @param {HeliosDataClass<T>} ItemClass\n * @returns {HeliosDataClass<HList_>}\n */\nexport function HList(ItemClass) {\n    assert(!new.target, \"List can't be called with new\");\n    assert(ItemClass.prototype instanceof HeliosData);\n\n    const typeName = `[]${ItemClass.name}`;\n\n    class HList_ extends HeliosData {\n        /**\n         * @type {T[]}\n         */\n        #items;\n\n        /**\n         * @param {any[]} rawList\n         */\n        constructor(rawList) {\n            super();\n\n            this.#items = rawList.map(item => {\n                if (item instanceof ItemClass) {\n                    return item;\n                } else {\n                    return new ItemClass(item);\n                }\n            });\n        }\n\n        /**\n         * @internal\n         * @type {string}\n         */\n        get _listTypeName() {\n            return typeName;\n        }\n\n        /**\n         * Overload 'instanceof' operator\n         * @internal\n         * @param {any} other\n         * @returns {boolean}\n         */\n        static [Symbol.hasInstance](other) {\n            return (other._listTypeName === typeName) && (other instanceof HeliosData);\n        }\n\n        /**\n         * @type {T[]}\n         */\n        get items() {\n            return this.#items;\n        }\n\n        /**\n         * @internal\n         * @returns {UplcData}\n         */\n        _toUplcData() {\n            return new ListData(this.#items.map(item => item._toUplcData()))\n        }\n\n        /**\n         * @param {UplcData} data\n         * @returns {HList_}\n         */\n        static fromUplcData(data) {\n            return new HList_(data.list.map(d => ItemClass.fromUplcData(d)));\n        }\n\n        /**\n         * @param {string | number[]} bytes\n         * @returns {HList_}\n         */\n        static fromUplcCbor(bytes) {\n            return HList_.fromUplcData(UplcData.fromCbor(bytes));\n        }\n    }\n\n    Object.defineProperty(HList_, \"name\", {\n        value: typeName,\n        writable: false\n    });\n\n    return HList_;\n}\n\n/**\n * @internal\n * @template {HeliosData} TKey\n * @template {HeliosData} TValue\n * @param {HeliosDataClass<TKey>} KeyClass\n * @param {HeliosDataClass<TValue>} ValueClass\n * @returns {HeliosDataClass<HMap_>}\n */\nexport function HMap(KeyClass, ValueClass) {\n    assert(!new.target, \"HMap can't be called with new\");\n    assert(KeyClass.prototype instanceof HeliosData);\n    assert(ValueClass.prototype instanceof HeliosData);\n\n    const typeName = `Map[${KeyClass.name}]${ValueClass.name}`;\n\n    class HMap_ extends HeliosData {\n        /**\n         * @type {[TKey, TValue][]}\n         */\n        #pairs;\n\n        /**\n         * @internal\n         * @param {...any} args\n         * @returns {[any, any][]}\n         */\n        static cleanConstructorArgs(...args) {\n            /** @type {[any, any][]} */\n            let pairs = [];\n\n            if (args.length == 1) {\n                const arg = args[0];\n\n                if (arg instanceof Map) {\n                    return HMap_.cleanConstructorArgs(Array.from(arg.entries()));\n                } else if (!Array.isArray(arg)) {\n                    throw new Error(\"expected array or Map arg\");\n                } else {\n                    const lst = arg;\n\n                    pairs = lst.map(item => {\n                        if (!Array.isArray(item)) {\n                            throw new Error(\"expected array item (pair)\");\n                        } else if (item.length != 2) {\n                            throw new Error(\"expected array item of length 2 (pair)\");\n                        } else {\n                            return [item[0], item[1]];\n                        }\n                    });\n                }\n            } else if (args.length == 2) {\n                const [keys, values] = args;\n\n                if (!Array.isArray(keys)) {\n                    throw new Error(\"expected keys array arg\");\n                } else if (!Array.isArray(values)) {\n                    throw new Error(\"expected values array arg\");\n                } else if (keys.length != values.length) {\n                    throw new Error(\"keys and values list don't have same length\");\n                } else {\n                    pairs = keys.map((key, i) => {\n                        const value = values[i];\n\n                        return [key, value];\n                    });\n                }\n            } else {\n                throw new Error(\"unexpected number of args\");\n            }\n\n            return pairs;\n        }\n\n        /**\n         * @param  {...any} args\n         */\n        constructor(...args) {\n            const rawPairs = HMap_.cleanConstructorArgs(...args);\n\n            /**\n             * @type {[TKey, TValue][]}\n             */\n            const pairs = rawPairs.map(([rawKey, rawValue]) => {\n                const key = function() {\n                    if (rawKey instanceof KeyClass) {\n                        return rawKey;\n                    } else {\n                        return new KeyClass(rawKey);\n                    }\n                }();\n\n                const value = function() {\n                    if (rawValue instanceof ValueClass) {\n                        return rawValue;\n                    } else {\n                        return new ValueClass(rawValue);\n                    }\n                }();\n\n                return [key, value];\n            });\n\n            super();\n\n            this.#pairs = pairs;\n        }\n\n        /**\n         * @internal\n         * @type {string}\n         */\n        get _mapTypeName() {\n            return typeName;\n        }\n\n        /**\n         * Overload 'instanceof' operator\n         * @internal\n         * @param {any} other\n         * @returns {boolean}\n         */\n        static [Symbol.hasInstance](other) {\n            return (other._mapTypeName === typeName) && (other instanceof HeliosData);\n        }\n\n        /**\n         * @type {[TKey, TValue][]}\n         */\n        get pairs() {\n            return this.#pairs;\n        }\n\n        /**\n         * @internal\n         * @returns {UplcData}\n         */\n        _toUplcData() {\n            return new MapData(this.#pairs.map(([key, value]) => [key._toUplcData(), value._toUplcData()]));\n        }\n\n        /**\n         * @param {UplcData} data\n         * @returns {HMap_}\n         */\n        static fromUplcData(data) {\n            return new HMap_(data.map.map(([kd, vd]) => [KeyClass.fromUplcData(kd), ValueClass.fromUplcData(vd)]));\n        }\n\n        /**\n         * @param {string | number[]} bytes\n         * @returns {HMap_}\n         */\n        static fromUplcCbor(bytes) {\n            return HMap_.fromUplcData(UplcData.fromCbor(bytes));\n        }\n    }\n\n    Object.defineProperty(HMap_, \"name\", {\n        value: typeName,\n        writable: false\n    });\n\n    return HMap_;\n}\n\n/**\n * @internal\n * @template {HeliosData} T\n * @param {HeliosDataClass<T>} SomeClass\n * @returns {HeliosDataClass<Option_>}\n */\nexport function Option(SomeClass) {\n    assert(!new.target, \"Option can't be called with new\");\n    assert(SomeClass.prototype instanceof HeliosData);\n\n    const typeName = `Option[${SomeClass.name}]`;\n\n    class Option_ extends HeliosData {\n        /**\n         * @type {?T}\n         */\n        #value;\n\n        /**\n         * @internal\n         * @param {?any} rawValue\n         * @returns {?T}\n         */\n        static cleanConstructorArg(rawValue) {\n            if (rawValue == null) {\n                return null;\n            } else if (!(rawValue instanceof SomeClass)) {\n                return new SomeClass(rawValue);\n            } else {\n                return rawValue;\n            }\n        }\n\n        /**\n         * @param {?any} rawValue\n         */\n        constructor(rawValue = null) {\n            super();\n\n            this.#value = Option_.cleanConstructorArg(rawValue);\n        }\n\n        /**\n         * @internal\n         * @type {string}\n         */\n        get _optionTypeName() {\n            return typeName;\n        }\n\n        /**\n         * Overload 'instanceof' operator\n         * @internal\n         * @param {any} other\n         * @returns {boolean}\n         */\n        static [Symbol.hasInstance](other) {\n            return (other._optionTypeName === typeName) && (other instanceof HeliosData);\n        }\n\n        /**\n         * @type {?T}\n         */\n        get some() {\n            return this.#value;\n        }\n\n        /**\n         * @internal\n         * @returns {UplcData}\n         */\n        _toUplcData() {\n            return new ConstrData(this.#value === null ? 1 : 0, this.#value === null ? [] : [this.#value._toUplcData()]);\n        }\n\n        /**\n         * @param {UplcData} data\n         * @returns {Option_}\n         */\n        static fromUplcData(data) {\n            if (data.index == 1) {\n                assert(data.fields.length == 0);\n\n                return new Option_(null);\n            } else if (data.index == 0) {\n                assert(data.fields.length == 1);\n\n                return new Option_(SomeClass.fromUplcData(data.fields[0]))\n            } else {\n                throw new Error(\"unexpected option constr index\");\n            }\n        }\n\n        /**\n         * @param {string | number[]} bytes\n         * @returns {Option_}\n         */\n        static fromUplcCbor(bytes) {\n            return Option_.fromUplcData(UplcData.fromCbor(bytes));\n        }\n    }\n\n    Object.defineProperty(HList, \"name\", {\n        value: typeName,\n        writable: false\n    });\n\n    return Option_;\n}\n\n/**\n * @typedef {number[] | string} HashProps\n */\n\n/**\n * Base class of all hash-types\n */\nexport class Hash extends HeliosData {\n\t/** \n\t * @readonly\n\t * @type {number[]} \n\t */\n\tbytes;\n\n\t/**\n\t * @internal\n\t * @param {HashProps} props \n\t * @returns {number[]}\n\t */\n\tstatic cleanConstructorArg(props) {\n\t\tif (typeof props == \"string\") {\n\t\t\treturn hexToBytes(props);\n\t\t} else {\n\t\t\treturn props;\n\t\t}\n\t}\n\n\t/**\n\t * @param {HashProps} props \n\t */\n\tconstructor(props) {\n\t\tsuper();\n\t\tthis.bytes = Hash.cleanConstructorArg(props);\n\t}\n\n\t/**\n\t * @param {Hash | HashProps} props \n\t * @returns {Hash}\n\t */\n\tstatic fromProps(props) {\n\t\treturn props instanceof Hash ? props : new Hash(props);\n\t}\n\n\t/**\n\t * Hexadecimal representation.\n\t * @returns {string}\n\t */\n\tget hex() {\n\t\treturn bytesToHex(this.bytes);\n\t}\n\n\t/**\n\t * Hexadecimal representation.\n\t * @returns {string}\n\t */\n\ttoString() {\n\t\treturn this.hex;\n\t}\n\n\t/**\n\t * @returns {number[]}\n\t */\n\ttoCbor() {\n\t\treturn Cbor.encodeBytes(this.bytes);\n\t}\n\n    /**\n     * @returns {UplcData}\n     */\n    _toUplcData() {\n        return new ByteArrayData(this.bytes);\n    }\n\n\t/**\n\t * Used internally for metadataHash and scriptDataHash\n\t * @param {number[]} bytes\n\t * @returns {Hash}\n\t */\n\tstatic fromCbor(bytes) {\n\t\treturn new Hash(Cbor.decodeBytes(bytes));\n\t}\n\n\t/**\n\t * Might be needed for internal use\n\t * @param {string} str \n\t * @returns {Hash}\n\t */\n\tstatic fromHex(str) {\n\t\treturn new Hash(hexToBytes(str));\n\t}\n\n\t/**\n\t * @internal\n\t * @returns {string}\n\t */\n\tdump() {\n\t\treturn bytesToHex(this.bytes);\n\t}\n\n\t/**\n\t * @param {Hash} other\n\t * @returns {boolean}\n\t */\n\teq(other) {\n\t\treturn eq(this.bytes, other.bytes);\n\t}\n\n\t/**\n\t * @param {Hash} a\n\t * @param {Hash} b\n\t * @returns {number}\n\t */\n\tstatic compare(a, b) {\n\t\treturn ByteArrayData.comp(a.bytes, b.bytes);\n\t}\n}\n\n/**\n * @typedef {HashProps} DatumHashProps\n */\n\n/**\n * Represents a blake2b-256 hash of datum data.\n */\nexport class DatumHash extends Hash {\n\t/**\n\t * @param {DatumHashProps} props\n\t */\n\tconstructor(props) {\n\t\tconst bytes = Hash.cleanConstructorArg(props);\n\n\t\tassert(bytes.length == 32);\n\t\tsuper(bytes);\n\t}\n\n\t/**\n\t * @param {DatumHash | DatumHashProps} props \n\t */\n\tstatic fromProps(props) {\n\t\treturn props instanceof DatumHash ? props : new DatumHash(props);\n\t}\n\n\t/**\n\t * @param {number[]} bytes \n\t * @returns {DatumHash}\n\t */\n\tstatic fromCbor(bytes) {\n\t\treturn new DatumHash(Cbor.decodeBytes(bytes));\n\t}\n\n\t/**\n\t * @param {UplcData} data\n\t * @returns {DatumHash}\n\t */\n\t static fromUplcData(data) {\n\t\treturn new DatumHash(data.bytes);\n\t}\n\n\t/**\n\t * @param {string | number[]} bytes\n\t * @returns {DatumHash}\n\t */\n\tstatic fromUplcCbor(bytes) {\n\t\treturn DatumHash.fromUplcData(UplcData.fromCbor(bytes));\n\t}\n\n\t/**\n\t * @param {string} str\n\t * @returns {DatumHash}\n\t */\n\tstatic fromHex(str) {\n\t\treturn new DatumHash(hexToBytes(str));\n\t}\n}\n\n/**\n * @typedef {number[] | string} PubKeyProps\n */\n\nexport class PubKey extends HeliosData {\n\t#bytes;\n\n\t/**\n\t * @param {PubKeyProps} props \n\t */\n\tconstructor(props) {\n\t\tsuper();\n\t\tconst bytes = (typeof props == \"string\") ? hexToBytes(props) : props;\n\n\t\tassert(bytes.length == 32, `expected 32 for PubKey, got ${bytes.length}`);\n\t\tthis.#bytes = bytes;\n\t}\n\n\t/**\n\t * @param {PubKey | PubKeyProps} props \n\t * @returns {PubKey}\n\t */\n\tstatic fromProps(props) {\n\t\treturn props instanceof PubKey ? props : new PubKey(props);\n\t}\n\n\t/**\n\t * @returns {PubKey}\n\t */\n\tstatic dummy() {\n\t\treturn new PubKey((new Array(32)).fill(0));\n\t}\n\n\t/**\n\t * @type {number[]}\n\t */\n\tget bytes() {\n\t\treturn this.#bytes;\n\t}\n\n\t/**\n\t * Hexadecimal representation.\n\t * @type {string}\n\t */\n\tget hex() {\n\t\treturn bytesToHex(this.#bytes);\n\t}\n\n\t/**\n\t * Can also be used as a Stake key hash\n\t * @type {PubKeyHash}\n\t */\n\tget pubKeyHash() {\n\t\treturn new PubKeyHash(this.hash());\n\t}\n\n\t/**\n\t * @param {UplcData} data\n\t * @returns {PubKey}\n\t */\n\tstatic fromUplcData(data) {\n\t\treturn new PubKey(data.bytes)\n\t}\n\n\t/**\n\t * @param {string | number[]} bytes\n\t * @returns {PubKey}\n\t */\n\tstatic fromUplcCbor(bytes) {\n\t\treturn PubKey.fromUplcData(UplcData.fromCbor(bytes));\n\t}\n\n\t/**\n\t * @param {number[]} bytes\n\t * @returns {PubKey}\n\t */\n\tstatic fromCbor(bytes) {\n\t\treturn new PubKey(Cbor.decodeBytes(bytes));\n\t}\n\n\t/**\n\t * @returns {boolean}\n\t */\n\tisDummy() {\n\t\treturn this.#bytes.every(b => b == 0);\n\t}\n\n\t/**\n\t * @returns {number[]}\n\t */\n\ttoCbor() {\n\t\treturn Cbor.encodeBytes(this.#bytes);\n\t}\n\n\t/**\n     * @returns {UplcData}\n     */\n    _toUplcData() {\n        return new ByteArrayData(this.#bytes);\n    }\n\n\t/**\n\t * @returns {number[]}\n\t */\n\thash() {\n\t\treturn Crypto.blake2b(this.#bytes, 28);\n\t}\n\n\t/**\n\t * @returns {string}\n\t */\n\tdump() {\n\t\treturn this.hex;\n\t}\n}\n\n/**\n * Represents a blake2b-224 hash of a PubKey\n * \n * **Note**: A `PubKeyHash` can also be used as the second part of a payment `Address`, or to construct a `StakeAddress`.\n * @typedef {HashProps} PubKeyHashProps\n */\nexport class PubKeyHash extends Hash {\n\n\t/**\n\t * @param {PubKeyHashProps} props \n\t */\n\tconstructor(props) {\n\t\tconst bytes = Hash.cleanConstructorArg(props);\n\n\t\tassert(bytes.length == 28, `expected 28 bytes for PubKeyHash, got ${bytes.length}`);\n\t\tsuper(bytes);\n\t}\n\n\t/**\n\t * @returns {PubKeyHash}\n\t */\n\tstatic dummy() {\n\t\tconst bytes = new Array(28).fill(0);\n\n\t\treturn new PubKeyHash(bytes);\n\t}\n\n\t/**\n\t * @param {PubKeyHash | PubKeyHashProps} props \n\t * @returns {PubKeyHash}\n\t */\n\tstatic fromProps(props) {\n\t\treturn props instanceof PubKeyHash ? props : new PubKeyHash(props);\n\t}\n\n\t/**\n\t * @param {number[]} bytes \n\t * @returns {PubKeyHash}\n\t */\n\tstatic fromCbor(bytes) {\n\t\treturn new PubKeyHash(Cbor.decodeBytes(bytes));\n\t}\n\n\t/**\n\t * @param {UplcData} data\n\t * @returns {PubKeyHash}\n\t */\n\tstatic fromUplcData(data) {\n\t\treturn new PubKeyHash(data.bytes);\n\t}\n\n\t/**\n\t * @param {string | number[]} bytes\n\t * @returns {PubKeyHash}\n\t */\n\tstatic fromUplcCbor(bytes) {\n\t\treturn PubKeyHash.fromUplcData(UplcData.fromCbor(bytes));\n\t}\n\n\t/**\n\t * @param {string} str\n\t * @returns {PubKeyHash}\n\t */\n\tstatic fromHex(str) {\n\t\treturn new PubKeyHash(hexToBytes(str));\n\t}\n}\n\n/**\n * @internal\n * @typedef {HashProps} ScriptHashProps\n */\n\n/**\n * Base class of MintingPolicyHash, ValidatorHash and StakingValidatorHash\n */\nexport class ScriptHash extends Hash {\n\t/**\n\t * @param {ScriptHashProps} rawValue\n\t */\n\tconstructor(rawValue) {\n\t\tconst bytes = Hash.cleanConstructorArg(rawValue);\n\t\tassert(bytes.length == 28 || bytes.length == 0, `expected 0 or 28 bytes for ScriptHash, got ${bytes.length}`);\n\t\tsuper(bytes);\n\t}\n\n\t/**\n\t * @param {ScriptHash | ScriptHashProps} props \n\t * @returns {ScriptHash}\n\t */\n\tstatic fromProps(props) {\n\t\treturn props instanceof ScriptHash ? props : new ScriptHash(props);\n\t}\n}\n\n/**\n * @typedef {HashProps} MintingPolicyHashProps\n */\n\n/**\n * Represents a blake2b-224 hash of a minting policy script\n * \n * **Note**: to calculate this hash the script is first encoded as a CBOR byte-array and then prepended by a script version byte.\n */\nexport class MintingPolicyHash extends ScriptHash {\n\t/**\n\t * @param {MintingPolicyHashProps} rawValue\n\t */\n\tconstructor(rawValue) {\n\t\tconst bytes = Hash.cleanConstructorArg(rawValue);\n\t\tassert(bytes.length == 28 || bytes.length == 0, `expected 0 or 28 bytes for MintingPolicyHash, got ${bytes.length}`);\n\t\tsuper(bytes);\n\t}\n\n\t/**\n\t * @param {MintingPolicyHash | MintingPolicyHashProps} props \n\t * @returns {MintingPolicyHash}\n\t */\n\tstatic fromProps(props) {\n\t\treturn props instanceof MintingPolicyHash ? props : new MintingPolicyHash(props);\n\t}\n\n\t/**\n\t * @param {number[]} bytes \n\t * @returns {MintingPolicyHash}\n\t */\n\tstatic fromCbor(bytes) {\n\t\treturn new MintingPolicyHash(Cbor.decodeBytes(bytes));\n\t}\n\n\t/**\n\t * @param {UplcData} data\n\t * @returns {MintingPolicyHash}\n\t */\n\tstatic fromUplcData(data) {\n\t\treturn new MintingPolicyHash(data.bytes);\n\t}\n\n\t/**\n\t * @param {string | number[]} bytes\n\t * @returns {MintingPolicyHash}\n\t */\n\tstatic fromUplcCbor(bytes) {\n\t\treturn MintingPolicyHash.fromUplcData(UplcData.fromCbor(bytes));\n\t}\n\n\t/**\n\t * @param {string} str\n\t * @returns {MintingPolicyHash}\n\t */\n\tstatic fromHex(str) {\n\t\treturn new MintingPolicyHash(hexToBytes(str));\n\t}\n\n\t/**\n\t * Encodes as bech32 string using 'asset' as human readable part\n\t * @returns {string}\n\t */\n\ttoBech32() {\n\t\treturn Crypto.encodeBech32(\"asset\", Crypto.blake2b(this.bytes, 20));\n\t}\n}\n\n/**\n * @typedef {HashProps} StakingValidatorHashProps\n */\n\n/**\n * Represents a blake2b-224 hash of a staking script.\n * \n * **Note**: before hashing, the staking script is first encoded as a CBOR byte-array and then prepended by a script version byte.\n */\nexport class StakingValidatorHash extends ScriptHash {\n\t/**\n\t * @param {StakingValidatorHashProps} rawValue\n\t */\n\tconstructor(rawValue) {\n\t\tconst bytes = Hash.cleanConstructorArg(rawValue);\n\t\tassert(bytes.length == 28, `expected 28 bytes for StakingValidatorHash, got ${bytes.length}`);\n\t\tsuper(bytes);\n\t}\n\n\t/**\n\t * @param {StakingValidatorHash | StakingValidatorHashProps} props \n\t * @returns {StakingValidatorHash}\n\t */\n\tstatic fromProps(props) {\n\t\treturn props instanceof StakingValidatorHash ? props : new StakingValidatorHash(props);\n\t}\n\n\t/**\n\t * @param {number[]} bytes \n\t * @returns {StakingValidatorHash}\n\t */\n\tstatic fromCbor(bytes) {\n\t\treturn new StakingValidatorHash(Cbor.decodeBytes(bytes));\n\t}\n\n\t/**\n\t * @param {UplcData} data\n\t * @returns {StakingValidatorHash}\n\t */\n\tstatic fromUplcData(data) {\n\t\treturn new StakingValidatorHash(data.bytes);\n\t}\n\n\t/**\n\t * @param {string | number[]} bytes\n\t * @returns {StakingValidatorHash}\n\t */\n\tstatic fromUplcCbor(bytes) {\n\t\treturn StakingValidatorHash.fromUplcData(UplcData.fromCbor(bytes));\n\t}\n\n\t/**\n\t * @param {string} str\n\t * @returns {StakingValidatorHash}\n\t */\n\tstatic fromHex(str) {\n\t\treturn new StakingValidatorHash(hexToBytes(str));\n\t}\n}\n\n/**\n * @typedef {HashProps} ValidatorHashProps\n */\n\n/**\n * Represents a blake2b-224 hash of a spending validator script (first encoded as a CBOR byte-array and prepended by a script version byte).\n */\nexport class ValidatorHash extends ScriptHash {\n\t/**\n\t * @param {ValidatorHashProps} rawValue\n\t */\n\tconstructor(rawValue) {\n\t\tconst bytes = Hash.cleanConstructorArg(rawValue);\n\t\tassert(bytes.length == 28, `expected 28 bytes for ValidatorHash, got ${bytes.length}`);\n\t\tsuper(bytes);\n\t}\n\n\t/**\n\t * @param {ValidatorHash | ValidatorHashProps} props \n\t * @returns {ValidatorHash}\n\t */\n\tstatic fromProps(props) {\n\t\treturn props instanceof ValidatorHash ? props : new ValidatorHash(props);\n\t}\n\n\t/**\n\t * @param {number[]} bytes \n\t * @returns {ValidatorHash}\n\t */\n\tstatic fromCbor(bytes) {\n\t\treturn new ValidatorHash(Cbor.decodeBytes(bytes));\n\t}\n\n\t/**\n\t * @param {UplcData} data\n\t * @returns {ValidatorHash}\n\t */\n\tstatic fromUplcData(data) {\n\t\treturn new ValidatorHash(data.bytes);\n\t}\n\n\t/**\n\t * @param {string | number[]} bytes\n\t * @returns {ValidatorHash}\n\t */\n\tstatic fromUplcCbor(bytes) {\n\t\treturn ValidatorHash.fromUplcData(UplcData.fromCbor(bytes));\n\t}\n\n\t/**\n\t * @param {string} str\n\t * @returns {ValidatorHash}\n\t */\n\tstatic fromHex(str) {\n\t\treturn new ValidatorHash(hexToBytes(str));\n\t}\n}\n\n/**\n * @typedef {HashProps} TxIdProps\n */\n\n/**\n * Represents the hash of a transaction.\n * \n * This is also used to identify an UTxO (along with the index of the UTxO in the list of UTxOs created by the transaction).\n */\nexport class TxId extends Hash {\n\t/**\n\t * @param {TxIdProps} props \n\t */\n\tconstructor(props) {\n        const bytes = Hash.cleanConstructorArg(props);\n\n\t\tassert(bytes.length == 32, `expected 32 bytes for TxId, got ${bytes.length}`);\n\t\tsuper(bytes);\n\t}\n\n\t/**\n\t * @param {TxId | TxIdProps} props \n\t * @returns {TxId}\n\t */\n\tstatic fromProps(props) {\n\t\treturn props instanceof TxId ? props : new TxId(props);\n\t}\n\n    /**\n     * @returns {UplcData}\n     */\n    _toUplcData() {\n        return new ConstrData(0, [new ByteArrayData(this.bytes)]);\n    }\n\n\t/**\n\t * @param {number[]} bytes\n\t * @returns {TxId}\n\t */\n\tstatic fromCbor(bytes) {\n\t\treturn new TxId(Cbor.decodeBytes(bytes));\n\t}\n\n    /**\n     * @param {UplcData} data\n     * @returns {TxId}\n     */\n    static fromUplcData(data) {\n        assert(data.index == 0);\n        assert(data.fields.length == 1);\n\n        return new TxId(data.fields[0].bytes);\n    }\n\n    /**\n     * @param {string | number[]} bytes\n     * @returns {TxId}\n     */\n    static fromUplcCbor(bytes) {\n        return TxId.fromUplcData(UplcData.fromCbor(bytes));\n    }\n\n\t/**\n\t * @param {string} str \n\t * @returns {TxId}\n\t */\n\tstatic fromHex(str) {\n\t\treturn new TxId(hexToBytes(str));\n\t}\n\n\t/**\n\t * Filled with 255 so that the internal show() function has max execution budget cost\n\t * @param {number} fill\n\t * @returns {TxId}\n\t */\n\tstatic dummy(fill = 255) {\n\t\treturn new TxId((new Array(32)).fill(fill));\n\t}\n}\n\n/**\n * @typedef {string | [\n * \t TxId | TxIdProps, \n *   HInt | HIntProps\n * ] | {\n *   txId: TxId | TxIdProps\n *   utxoId: HInt | HIntProps\n * }} TxOutputIdProps\n */\n\n/**\n * Id of a Utxo\n */\nexport class TxOutputId extends HeliosData {\n    /** @type {TxId} */\n    #txId;\n\n    /** @type {HInt} */\n    #utxoIdx;\n\n    /**\n     * @param  {TxOutputIdProps} props\n     * @returns {[TxId | TxIdProps, HInt | HIntProps]}\n     */\n    static cleanConstructorArgs(props) {\n        if (typeof props == \"string\") {\n\t\t\tconst parts = props.trim().split(\"#\");\n\n\t\t\tassert(parts.length == 2);\n\t\t\tconst utxoIdx = parseInt(parts[1]);\n\n\t\t\tassert(utxoIdx.toString() == parts[1]);\n\n\t\t\treturn [parts[0], utxoIdx];\n        } else if (Array.isArray(props) && props.length == 2) {\n            return [props[0], props[1]];\n        } else if (typeof props == \"object\") {\n\t\t\treturn [assertDefined(props.txId), assertDefined(props.utxoId)];\n\t\t} else {\n            throw new Error(\"unexpected number of args\");\n        }\n    }\n\n\n\t/**\n\t * @overload\n\t * @param {TxId} txId\n\t * @param {bigint | number} utxoId\n\t */\n\n    /**\n\t * @overload\n     * @param {TxOutputIdProps} props\n     */\n\n\t/**\n\t * @param {([TxOutputIdProps] | [TxId, bigint | number])} args\n\t */\n    constructor(...args) {\n        const [rawTxId, rawUtxoIdx] = args.length == 1 ? TxOutputId.cleanConstructorArgs(args[0]) : [args[0], args[1]];\n\n        super();\n\n        this.#txId = TxId.fromProps(rawTxId);\n        this.#utxoIdx = HInt.fromProps(rawUtxoIdx);\n    }\n\n\t/**\n\t * @returns {TxOutputId}\n\t */\n\tstatic dummy() {\n\t\treturn new TxOutputId(TxId.dummy(), 0);\n\t}\n\n\t/**\n\t * @param {TxOutputId | TxOutputIdProps} props \n\t * @returns {TxOutputId}\n\t */\n\tstatic fromProps(props) {\n\t\treturn props instanceof TxOutputId ? props : new TxOutputId(props);\n\t}\n\n\t/**\n\t * @type {TxId}\n\t */\n    get txId() {\n        return this.#txId;\n    }\n\n\t/**\n\t * @type {number}\n\t */\n    get utxoIdx() {\n        return Number(this.#utxoIdx.value);\n    }\n\n\t/**\n\t * @param {TxOutputId} other\n\t * @returns {boolean}\n\t */\n\teq(other) {\n\t\treturn this.#txId.eq(other.#txId) && this.#utxoIdx.value == other.#utxoIdx.value;\n\t}\n\n    /**\n     * @returns {ConstrData}\n     */\n    _toUplcData() {\n        return new ConstrData(0, [this.#txId._toUplcData(), this.#utxoIdx._toUplcData()])\n    }\n\n    /**\n     * @param {UplcData} data\n     * @returns {TxOutputId}\n     */\n    static fromUplcData(data) {\n        assert(data.index == 0, `TxOutputId.fromUplcData: expected constructor index 0, got ${data.index}`);\n        assert(data.fields.length == 2, \"TxOutputId.fromUplcData: expected 2 fields\");\n\n        return new TxOutputId(TxId.fromUplcData(data.fields[0]), HInt.fromUplcData(data.fields[1]).value);\n    }\n\n    /**\n     * @param {string | number[]} bytes\n     * @returns {TxOutputId}\n     */\n    static fromUplcCbor(bytes) {\n        return TxOutputId.fromUplcData(UplcData.fromCbor(bytes));\n    }\n\n\t/**\n\t * @param {string | number[]} rawBytes \n\t * @returns {TxOutputId}\n\t */\n\tstatic fromCbor(rawBytes) {\n\t\tconst bytes = Array.isArray(rawBytes) ? rawBytes : hexToBytes(rawBytes);\n\n\t\t/** @type {null | TxId} */\n\t\tlet txId = null;\n\n\t\t/** @type {null | bigint} */\n\t\tlet utxoIdx = null;\n\n\t\tCbor.decodeTuple(bytes, (i, fieldBytes) => {\n\t\t\tswitch(i) {\n\t\t\t\tcase 0:\n\t\t\t\t\ttxId = TxId.fromCbor(fieldBytes);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 1:\n\t\t\t\t\tutxoIdx = Cbor.decodeInteger(fieldBytes);\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new Error(\"unrecognized field\");\n\t\t\t}\n\t\t});\n\n\t\tif (txId === null || utxoIdx === null) {\n\t\t\tthrow new Error(\"unexpected\");\n\t\t} else {\n\t\t\treturn new TxOutputId(txId, utxoIdx);\n\t\t}\n\t}\n\n\t/**\n\t * @returns {number[]}\n\t */\n\ttoCbor() {\n\t\treturn Cbor.encodeTuple([\n\t\t\tthis.#txId.toCbor(),\n\t\t\tCbor.encodeInteger(this.#utxoIdx.value)\n\t\t]);\n\t}\n\n\t/**\n\t * @returns {string}\n\t */\n\ttoString() {\n\t\treturn `${this.#txId.hex}#${this.#utxoIdx.value.toString()}`;\n\t}\n\n\t/**\n\t * \n\t * @param {TxOutputId} a \n\t * @param {TxOutputId} b \n\t * @returns {number}\n\t */\n\tstatic comp(a, b) {\n\t\tlet res = ByteArrayData.comp(a.#txId.bytes, b.#txId.bytes);\n\n\t\tif (res == 0) {\n\t\t\treturn Number(a.#utxoIdx.value - b.#utxoIdx.value);\n\t\t} else {\n\t\t\treturn res;\n\t\t}\n\t}\n}\n\n/**\n * An array of bytes, a Bech32 encoded address, or the hexadecimal representation of the underlying bytes.\n * @typedef {number[] | string} AddressProps\n */\n\n/**\n * Wrapper for Cardano address bytes. An `Address` consists of three parts internally:\n *   * Header (1 byte, see [CIP 19](https://cips.cardano.org/cips/cip19/))\n *   * Witness hash (28 bytes that represent the `PubKeyHash` or `ValidatorHash`)\n *   * Optional staking credential (0 or 28 bytes)\n */\nexport class Address extends HeliosData {\n\t/** @type {number[]} */\n\t#bytes;\n\n    /**\n\t * @internal\n\t * @param {AddressProps} props\n\t * @returns {number[]}\n\t */\n    static cleanConstructorArg(props) {\n        if (typeof props == \"string\") {\n            if (props.startsWith(\"addr\")) {\n                return Address.fromBech32(props).bytes;\n            } else {\n                if (props.startsWith(\"#\")) {\n                    props = props.slice(1);\n                }\n\n                return hexToBytes(props);\n            }\n        } else {\n            return props;\n        }\n    }\n\n\t/**\n\t * @param {number[] | string} bytesOrBech32String\n\t */\n\tconstructor(bytesOrBech32String) {\n\t\tsuper();\n\t\tthis.#bytes = Address.cleanConstructorArg(bytesOrBech32String);\n\n        assert(this.#bytes.length == 29 || this.#bytes.length == 57, `expected 29 or 57 bytes for Address, got ${this.#bytes.length}`);\n\t}\n\n\t/**\n\t * @param {Address | AddressProps} props \n\t * @returns {Address}\n\t */\n\tstatic fromProps(props) {\n\t\treturn props instanceof Address ? props : new Address(props);\n\t}\n\n\t/**\n\t * Returns a dummy address (based on a PubKeyHash with all null bytes)\n\t * @returns {Address}\n\t */\n\tstatic dummy() {\n\t\treturn Address.fromPubKeyHash(PubKeyHash.dummy())\n\t}\n\n\t/**\n\t * @type {number[]}\n\t */\n\tget bytes() {\n\t\treturn this.#bytes.slice();\n\t}\n\n\t/**\n\t * Converts an `Address` into its CBOR representation.\n\t * @returns {number[]}\n\t */\n\ttoCbor() {\n\t\treturn Cbor.encodeBytes(this.#bytes);\n\t}\n\n\t/**\n\t * Deserializes bytes into an `Address`.\n\t * @param {number[]} bytes\n\t * @returns {Address}\n\t */\n\tstatic fromCbor(bytes) {\n\t\treturn new Address(Cbor.decodeBytes(bytes));\n\t}\n\n\t/**\n\t * Converts a Bech32 string into an `Address`.\n\t * @param {string} str\n\t * @returns {Address}\n\t */\n\tstatic fromBech32(str) {\n\t\t// ignore the prefix (encoded in the bytes anyway)\n\t\tlet [prefix, bytes] = Crypto.decodeBech32(str);\n\n\t\tlet result = new Address(bytes);\n\n\t\tassert(prefix == (Address.isForTestnet(result) ? \"addr_test\" : \"addr\"), \"invalid Address prefix\");\n\n\t\treturn result;\n\t}\n\n\t/**\n\t * Constructs an `Address` using a hexadecimal string representation of the address bytes.\n\t * Doesn't check validity.\n\t * @param {string} hex\n\t * @returns {Address}\n\t */\n\tstatic fromHex(hex) {\n\t\treturn new Address(hexToBytes(hex));\n\t}\n\n\t/**\n\t * Converts a `Address` into its hexadecimal representation.\n\t * @returns {string}\n\t */\n\ttoHex() {\n\t\treturn bytesToHex(this.#bytes);\n\t}\n\n\t/**\n\t * Converts a `Address` into its hexadecimal representation.\n\t * @returns {string}\n\t */\n\tget hex() {\n\t\treturn this.toHex();\n\t}\n\n\t /**\n\t * Constructs an Address using either a `PubKeyHash` (i.e. simple payment address)\n\t * or `ValidatorHash` (i.e. script address),\n\t * without a staking hash.\n     * @param {PubKeyHash | ValidatorHash} hash\n     * @param {boolean} isTestnet Defaults to `config.IS_TESTNET`\n     * @returns {Address}\n     */\n\tstatic fromHash(hash, isTestnet = config.IS_TESTNET) {\n\t\treturn Address.fromHashes(hash, null, isTestnet);\n\t}\n\n    /**\n\t * Constructs an Address using either a `PubKeyHash` (i.e. simple payment address)\n\t * or `ValidatorHash` (i.e. script address),\n\t * in combination with an optional staking hash (`PubKeyHash` or `StakingValidatorHash`).\n     * @param {PubKeyHash | ValidatorHash} hash\n     * @param {null | (PubKeyHash | StakingValidatorHash)} stakingHash\n     * @param {boolean} isTestnet Defaults to `config.IS_TESTNET`\n     * @returns {Address}\n     */\n    static fromHashes(hash, stakingHash = null, isTestnet = config.IS_TESTNET) {\n        if (hash instanceof PubKeyHash) {\n            return Address.fromPubKeyHash(hash, stakingHash, isTestnet);\n        } else if (hash instanceof ValidatorHash) {\n            return Address.fromValidatorHash(hash, stakingHash, isTestnet);\n        } else {\n            throw new Error(\"unexpected\");\n        }\n    }\n\n\t/**\n\t * Simple payment address with an optional staking hash (`PubKeyHash` or `StakingValidatorHash`).\n\t * @internal\n\t * @param {PubKeyHash} hash\n\t * @param {null | (PubKeyHash | StakingValidatorHash)} stakingHash\n     * @param {boolean} isTestnet Defaults to `config.IS_TESTNET`\n\t * @returns {Address}\n\t */\n\tstatic fromPubKeyHash(hash, stakingHash = null, isTestnet = config.IS_TESTNET) {\n\t\tif (stakingHash !== null) {\n\t\t\tif (stakingHash instanceof PubKeyHash) {\n\t\t\t\treturn new Address(\n\t\t\t\t\t[isTestnet ? 0x00 : 0x01].concat(hash.bytes).concat(stakingHash.bytes)\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tassert(stakingHash instanceof StakingValidatorHash);\n\t\t\t\treturn new Address(\n\t\t\t\t\t[isTestnet ? 0x20 : 0x21].concat(hash.bytes).concat(stakingHash.bytes)\n\t\t\t\t);\n\t\t\t}\n\t\t} else {\n\t\t\treturn new Address([isTestnet ? 0x60 : 0x61].concat(hash.bytes));\n\t\t}\n\t}\n\n\t/**\n\t * Simple script address with an optional staking hash (`PubKeyHash` or `StakingValidatorHash`).\n\t * @internal\n\t * @param {ValidatorHash} hash\n\t * @param {null | (PubKeyHash | StakingValidatorHash)} stakingHash\n     * @param {boolean} isTestnet Defaults to `config.IS_TESTNET`\n\t * @returns {Address}\n\t */\n\tstatic fromValidatorHash(hash, stakingHash = null, isTestnet = config.IS_TESTNET) {\n\t\tif (stakingHash !== null) {\n\t\t\tif (stakingHash instanceof PubKeyHash) {\n\t\t\t\treturn new Address(\n\t\t\t\t\t[isTestnet ? 0x10 : 0x11].concat(hash.bytes).concat(stakingHash.bytes)\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tassert(stakingHash instanceof StakingValidatorHash);\n\t\t\t\treturn new Address(\n\t\t\t\t\t[isTestnet ? 0x30 : 0x31].concat(hash.bytes).concat(stakingHash.bytes)\n\t\t\t\t);\n\t\t\t}\n\t\t} else {\n\t\t\treturn new Address([isTestnet ? 0x70 : 0x71].concat(hash.bytes));\n\t\t}\n\t}\n\n\t/**\n\t * Converts an `Address` into its Bech32 representation.\n\t * @returns {string}\n\t */\n\ttoBech32() {\n\t\treturn Crypto.encodeBech32(\n\t\t\tAddress.isForTestnet(this) ? \"addr_test\" : \"addr\",\n\t\t\tthis.#bytes\n\t\t);\n\t}\n\n\t/**\n\t * @param {Address} other \n\t * @returns {boolean}\n\t */\n\teq(other) {\n\t\treturn ByteArrayData.comp(this.#bytes, other.bytes) == 0;\n\t}\n\n\t/**\n\t * @returns {Object}\n\t */\n\tdump() {\n\t\treturn {\n\t\t\thex: bytesToHex(this.#bytes),\n\t\t\tbech32: this.toBech32(),\n\t\t};\n\t}\n\n\t/**\n\t * Returns `true` if the given `Address` is a testnet address.\n\t * @param {Address} address\n\t * @returns {boolean}\n\t */\n\tstatic isForTestnet(address) {\n\t\tlet type = address.bytes[0] & 0b00001111;\n\n\t\treturn type == 0;\n\t}\n\n\t/**\n     * @internal\n\t * @returns {ConstrData}\n\t */\n\ttoCredentialData() {\n\t\tlet vh = this.validatorHash;\n\n\t\tif (vh !== null) {\n\t\t\treturn new ConstrData(1, [new ByteArrayData(vh.bytes)]);\n\t\t} else {\n\t\t\tlet pkh = this.pubKeyHash;\n\n\t\t\tif (pkh === null) {\n\t\t\t\tthrow new Error(\"unexpected\");\n\t\t\t} else {\n\t\t\t\treturn new ConstrData(0, [new ByteArrayData(pkh.bytes)]);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @internal\n\t * @returns {ConstrData}\n\t */\n\ttoStakingData() {\n        const type = this.#bytes[0] >> 4;\n\t\tconst sh = this.stakingHash;\n\n\t\tif (sh == null) {\n\t\t\treturn new ConstrData(1, []); // none\n\t\t} else {\n            if (type == 4 || type == 5) {\n                throw new Error(\"not yet implemented\");\n            } else if (type == 3 || type == 2) {\n                // some\n                return new ConstrData(0, [\n                    // staking credential -> 0, 1 -> pointer\n                    new ConstrData(0, [\n                        // StakingValidator credential\n                        new ConstrData(1, [new ByteArrayData(sh.bytes)]),\n                    ]),\n                ]);\n            } else if (type == 0 || type == 1) {\n                // some\n                return new ConstrData(0, [\n                    // staking credential -> 0, 1 -> pointer\n                    new ConstrData(0, [\n                        // PubKeyHash credential\n                        new ConstrData(0, [new ByteArrayData(sh.bytes)]),\n                    ]),\n                ]);\n            } else {\n                throw new Error(\"unexpected\");\n            }\n\t\t}\n\t}\n\n\t/**\n\t * @returns {UplcData}\n\t */\n\t_toUplcData() {\n\t\treturn new ConstrData(0, [this.toCredentialData(), this.toStakingData()]);\n\t}\n\n    /**\n     * @param {UplcData} data\n     * @param {boolean} isTestnet\n     * @returns {Address}\n     */\n    static fromUplcData(data, isTestnet = config.IS_TESTNET) {\n        assert(data.index == 0);\n        assert(data.fields.length == 2);\n\n        const credData = data.fields[0];\n        const stakData = data.fields[1];\n\n        assert(credData.fields.length == 1);\n\n        /**\n         * @type {null | (PubKeyHash | StakingValidatorHash)}\n         */\n        let sh;\n\n\t\t// for some weird reason Option::None has index 1\n        if (stakData.index == 1) {\n            sh = null;\n        } else if (stakData.index == 0) {\n            assert(stakData.fields.length == 1);\n\n            const inner = stakData.fields[0];\n            assert(inner.fields.length == 1);\n\n            if (inner.index == 0) {\n                const innerInner = inner.fields[0];\n                assert(innerInner.fields.length == 1);\n\n                if (innerInner.index == 0) {\n                    sh = new PubKeyHash(innerInner.fields[0].bytes);\n                } else if (innerInner.index == 1) {\n                    sh = new StakingValidatorHash(innerInner.fields[0].bytes);\n                } else {\n                    throw new Error(\"unexpected\");\n                }\n            } else if (inner.index == 1) {\n                throw new Error(\"staking pointer not yet handled\");\n            } else {\n                throw new Error(\"unexpected\");\n            }\n        } else {\n            throw new Error(\"unexpected\");\n        }\n\n        if (credData.index == 0) {\n            return Address.fromPubKeyHash(new PubKeyHash(credData.fields[0].bytes), sh, isTestnet);\n        } else if (credData.index == 1) {\n            return Address.fromValidatorHash(new ValidatorHash(credData.fields[0].bytes), sh, isTestnet);\n        } else {\n            throw new Error(\"unexpected\");\n        }\n    }\n\n    /**\n\t * @internal\n     * @param {string | number[]} bytes\n     * @param {boolean} isTestnet\n     * @returns {Address}\n     */\n    static fromUplcCbor(bytes, isTestnet = config.IS_TESTNET) {\n        return Address.fromUplcData(UplcData.fromCbor(bytes), isTestnet);\n    }\n\n\t/**\n\t * Returns the underlying `PubKeyHash` of a simple payment address, or `null` for a script address.\n\t * @type {null | PubKeyHash}\n\t */\n\tget pubKeyHash() {\n\t\tlet type = this.#bytes[0] >> 4;\n\n\t\tif (type % 2 == 0) {\n\t\t\treturn new PubKeyHash(this.#bytes.slice(1, 29));\n\t\t} else {\n\t\t\treturn null;\n\t\t}\n\t}\n\n\t/**\n\t * Returns the underlying `ValidatorHash` of a script address, or `null` for a regular payment address.\n\t * @type {null | ValidatorHash}\n\t */\n\tget validatorHash() {\n\t\tlet type = this.#bytes[0] >> 4;\n\n\t\tif (type % 2 == 1) {\n\t\t\treturn new ValidatorHash(this.#bytes.slice(1, 29));\n\t\t} else {\n\t\t\treturn null;\n\t\t}\n\t}\n\n\t/**\n\t * Returns the underlying `PubKeyHash` or `StakingValidatorHash`, or `null` for non-staked addresses.\n\t * @type {null | PubKeyHash | StakingValidatorHash}\n\t */\n\tget stakingHash() {\n\t\tlet type = this.#bytes[0] >> 4;\n\n        let bytes = this.#bytes.slice(29);\n\n\n        if (type == 0 || type == 1) {\n            assert(bytes.length == 28);\n            return new PubKeyHash(bytes);\n        } else if (type == 2 || type == 3) {\n            assert(bytes.length == 28);\n            return new StakingValidatorHash(bytes);\n        } else if (type == 4 || type == 5) {\n            throw new Error(\"staking pointer not yet supported\");\n        } else {\n\t\t\treturn null;\n\t\t}\n\t}\n\n\t/**\n\t * Used to sort txbody withdrawals.\n\t * @internal\n\t * @param {Address} a\n\t * @param {Address} b\n\t * @return {number}\n\t */\n\tstatic compStakingHashes(a, b) {\n\t\treturn Hash.compare(assertDefined(a.stakingHash), assertDefined(b.stakingHash));\n\t}\n}\n\n/**\n * @typedef {string | [\n *   MintingPolicyHash | MintingPolicyHashProps,\n *   ByteArray | ByteArrayProps\n * ] | {\n *   mph: MintingPolicyHash | MintingPolicyHashProps,\n *   tokenName: ByteArray | ByteArrayProps\n * }} AssetClassProps\n */\n\n/**\n * Represents a `MintingPolicyHash` combined with a token name.\n */\nexport class AssetClass extends HeliosData {\n\t/**\n\t * @type {MintingPolicyHash}\n\t */\n\t#mph;\n\n\t/**\n\t * @type {ByteArray}\n\t */\n\t#tokenName;\n\n\t/**\n\t * @internal\n\t * @param {AssetClassProps} props\n\t * @returns {[MintingPolicyHash | MintingPolicyHashProps, ByteArray | ByteArrayProps]}\n\t */\n\tstatic cleanConstructorArgs(props) {\n\t\tif (typeof props == \"string\") {\n\t\t\tconst fields = props.split(\".\")\n\n\t\t\tassert(fields.length == 2, \"expected '.' in hex encoded AssetClass\");\n\n\t\t\treturn [fields[0], hexToBytes(fields[1])];\n\t\t} else if (Array.isArray(props) && props.length == 2) {\n\t\t\treturn [props[0], props[1]];\n\t\t} else if (typeof props == \"object\") {\n\t\t\treturn [assertDefined(props.mph), assertDefined(props.tokenName)];\n\t\t} else {\n\t\t\tthrow new Error(\"unexpected number of AssetClass args\");\n\t\t}\n\t}\n\n\t/**\n\t * Intelligently converts arguments. \n\t * \n\t * The format for single argument string is \"<hex-encoded-mph>.<hex-encoded-token-name>\".\n\t * @param {AssetClassProps} props\n\t */\n\tconstructor(props) {\n\t\tsuper();\n\t\tconst [rawMph, rawTokenName] = AssetClass.cleanConstructorArgs(props);\n\n\t\tthis.#mph = MintingPolicyHash.fromProps(rawMph);\n\t\tthis.#tokenName = ByteArray.fromProps(rawTokenName);\n\t}\n\n\t/**\n\t * @param {AssetClass | AssetClassProps} props \n\t * @returns {AssetClass}\n\t */\n\tstatic fromProps(props) {\n\t\treturn props instanceof AssetClass ? props : new AssetClass(props);\n\t}\n\n\t/**\n\t * @type {MintingPolicyHash}\n\t */\n\tget mintingPolicyHash() {\n\t\treturn this.#mph;\n\t}\n\n\t/**\n\t * @type {ByteArray}\n\t */\n\tget tokenName() {\n\t\treturn this.#tokenName;\n\t}\n\n\t/**\n\t * Used when generating script contexts for running programs\n\t * @returns {ConstrData}\n\t */\n\t_toUplcData() {\n\t\treturn new ConstrData(0, [\n\t\t\tthis.#mph._toUplcData(),\n\t\t\tthis.#tokenName._toUplcData()\n\t\t])\n\t}\n\n\t/**\n\t *\n\t * @param {UplcData} data\n\t * @returns {AssetClass}\n\t */\n\tstatic fromUplcData(data) {\n\t\tassert(data.index == 0);\n\t\tassert(data.fields.length == 2);\n\n\t\tconst mph = MintingPolicyHash.fromUplcData(data.fields[0]);\n\t\tconst tokenName = ByteArray.fromUplcData(data.fields[1]);\n\n\t\treturn new AssetClass([mph, tokenName]);\n\t}\n\n\t/**\n\t * Cip14 fingerprint\n\t * This involves a hash, so you can't use a fingerprint to calculate the underlying policy/tokenName.\n\t * @returns {string}\n\t */\n\ttoFingerprint() {\n\t\treturn Crypto.encodeBech32(\"asset\", Crypto.blake2b(this.#mph.bytes.concat(this.#tokenName.bytes), 20));\n\t}\n\n\t/**\n\t * @returns {string}\n\t */\n\ttoString() {\n\t\treturn `${this.#mph.hex}.${bytesToHex(this.#tokenName.bytes)}`;\n\t}\n\n\t/**\n\t * Converts an `AssetClass` instance into its CBOR representation.\n\t * @returns {number[]}\n\t */\n\ttoCbor() {\n\t\treturn Cbor.encodeConstr(0, [\n\t\t\tthis.#mph.toCbor(),\n\t\t\tthis.#tokenName.toCbor()\n\t\t]);\n\t}\n\n\t/**\n\t * Deserializes bytes into an `AssetClass`.\n\t * @param {number[]} bytes\n\t * @returns {AssetClass}\n\t */\n\tstatic fromCbor(bytes) {\n\t\t/**\n\t\t * @type {MintingPolicyHash | null}\n\t\t */\n\t\tlet mph = null;\n\n\t\t/**\n\t\t * @type {ByteArray | null}\n\t\t */\n\t\tlet tokenName = null;\n\n\t\tconst tag = Cbor.decodeConstr(bytes, (i, fieldBytes) => {\n\t\t\tswitch (i) {\n\t\t\t\tcase 0:\n\t\t\t\t\tmph = MintingPolicyHash.fromCbor(fieldBytes);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 1:\n\t\t\t\t\ttokenName = ByteArray.fromCbor(fieldBytes);\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new Error(\"unexpected field\");\n\t\t\t}\n\t\t});\n\n\t\tassert(tag == 0);\n\n\t\tif (mph == null || tokenName == null) {\n\t\t\tthrow new Error(\"insufficient fields\");\n\t\t} else {\n\t\t\treturn new AssetClass([mph, tokenName]);\n\t\t}\n\t}\n\n    /**\n     * @param {string | number[]} bytes\n     * @returns {AssetClass}\n     */\n    static fromUplcCbor(bytes) {\n        return AssetClass.fromUplcData(UplcData.fromCbor(bytes));\n    }\n\n\t/**\n\t * @type {AssetClass}\n\t */\n\tstatic get ADA() {\n\t\treturn new AssetClass([\"\", \"\"]);\n\t}\n}\n\n/**\n * @typedef {[\n *   AssetClass | AssetClassProps,\n *   HInt | HIntProps\n * ][] | [\n *   MintingPolicyHash | MintingPolicyHashProps,\n *   [\n *     ByteArray | ByteArrayProps,\n *     HInt | HIntProps\n *   ][]\n * ][]} AssetsProps\n */\n\n/**\n * Represents a list of non-Ada tokens. \n */\nexport class Assets extends CborData {\n\t/** \n\t * @private\n\t * @type {[MintingPolicyHash, [ByteArray, HInt][]][]} \n\t */\n\tassets;\n\n\t/**\n\t * **Note**: the assets are normalized by removing entries with 0 tokens, and merging all entries with the same MintingPolicyHash and token name.\n\t * @param {AssetsProps} props Either a list of `AssetClass`/quantity pairs, or a list of `MintingPolicyHash`/`tokens` pairs (where each `tokens` entry is a bytearray/quantity pair).\n\t */\n\tconstructor(props = []) {\n\t\tsuper();\n\n\t\tthis.assets = props.map((outerPair) => {\n\t\t\tif (Array.isArray(outerPair[1])) {\n\t\t\t\tconst mph = MintingPolicyHash.fromProps(outerPair[0]);\n\n\t\t\t\t/**\n\t\t\t\t * @type {[MintingPolicyHash, [ByteArray, HInt][]]}\n\t\t\t\t */\n\t\t\t\tconst mapped = [\n\t\t\t\t\tmph,\n\t\t\t\t\touterPair[1].map((innerPair) => [ByteArray.fromProps(innerPair[0]), HInt.fromProps(innerPair[1])])\n\t\t\t\t];\n\n\t\t\t\treturn mapped;\n\t\t\t} else {\n\t\t\t\tconst assetClass = AssetClass.fromProps(outerPair[0]);\n\t\t\t\tconst qty = HInt.fromProps(outerPair[1]);\n\n\t\t\t\t/**\n\t\t\t\t * @type {[MintingPolicyHash, [ByteArray, HInt][]]}\n\t\t\t\t */\n\t\t\t\tconst mapped = [\n\t\t\t\t\tassetClass.mintingPolicyHash,\n\t\t\t\t\t[[assetClass.tokenName, qty]]\n\t\t\t\t];\n\n\t\t\t\treturn mapped;\n\t\t\t}\n\t\t});\n\n\t\tthis.normalize();\n\t}\n\n\t/**\n\t * @param {Assets | AssetsProps} props \n\t * @returns {Assets}\n\t */\n\tstatic fromProps(props) {\n\t\treturn props instanceof Assets ? props : new Assets(props);\n\t}\n\n\t/**\n\t * Returns a list of all the minting policies.\n\t * @type {MintingPolicyHash[]}\n\t */\n\tget mintingPolicies() {\n\t\treturn this.assets.map(([mph, _]) => mph);\n\t}\n\n\t/**\n\t * @type {number}\n\t */\n\tget nTokenTypes() {\n\t\tlet count = 0;\n\n\t\tthis.assets.forEach(([mph, tokens]) => {\n\t\t\ttokens.forEach(([tokenName, _]) => {\n\t\t\t\tcount += 1\n\t\t\t})\n\t\t})\n\n\t\treturn count;\n\t}\n\n\t/**\n\t * Returns empty if mph not found\n\t * @param {MintingPolicyHash} mph\n\t * @returns {[ByteArray, HInt][]}\n\t */\n\tgetTokens(mph) {\n\t\tconst i = this.assets.findIndex(entry => entry[0].eq(mph));\n\n\t\tif (i != -1) {\n\t\t\treturn this.assets[i][1];\n\t\t} else {\n\t\t\treturn [];\n\t\t}\n\t}\n\n\t/**\n\t * @returns {boolean}\n\t */\n\tisZero() {\n\t\treturn this.assets.length == 0;\n\t}\n\n\t/**\n\t * @param {MintingPolicyHash | MintingPolicyHashProps} mph\n\t * @param {ByteArray | ByteArrayProps} tokenName \n\t * @returns {boolean}\n\t */\n\thas(mph, tokenName) {\n\t\tconst mph_ = MintingPolicyHash.fromProps(mph);\n\t\tconst tokenName_ = ByteArray.fromProps(tokenName);\n\n\t\tconst inner = this.assets.find(asset => mph_.eq(asset[0]));\n\n\t\tif (inner !== undefined) {\n\t\t\treturn inner[1].findIndex(pair => pair[0].eq(tokenName_)) != -1;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\t/**\n\t * @param {MintingPolicyHash | MintingPolicyHashProps} mph\n\t * @param {ByteArray | ByteArrayProps} tokenName \n\t * @returns {bigint}\n\t */\n\tget(mph, tokenName) {\n\t\tconst mph_ = MintingPolicyHash.fromProps(mph);\n\t\tconst tokenName_ = ByteArray.fromProps(tokenName);\n\n\t\tconst inner = this.assets.find(asset => mph_.eq(asset[0]));\n\n\t\tif (inner !== undefined) {\n\t\t\tconst token = inner[1].find(pair => pair[0].eq(tokenName_));\n\n\t\t\tif (token !== undefined) {\n\t\t\t\treturn token[1].value;\n\t\t\t} else {\n\t\t\t\treturn 0n;\n\t\t\t}\n\t\t} else {\n\t\t\treturn 0n;\n\t\t}\n\t}\n\n\t/**\n\t * Mutates 'this'\n\t */\n\tremoveZeroes() {\n\t\tfor (let asset of this.assets) {\n\t\t\tasset[1] = asset[1].filter(token => !token[1].eq(0n));\n\t\t}\n\n\t\tthis.assets = this.assets.filter(asset => asset[1].length != 0);\n\t}\n\n\t/**\n\t * Removes zeros and merges duplicates.\n\t * In-place algorithm.\n\t * Keeps the same order as much as possible.\n\t */\n\tnormalize() {\n\t\t/**\n\t\t * @type {Map<string, Map<string, bigint>>}\n\t\t */\n\t\tconst assets = new Map();\n\n\t\tfor (let [mph, tokens] of this.assets) {\n\t\t\tlet outerPrev = assets.get(mph.hex);\n\n\t\t\tif (!outerPrev) {\n\t\t\t\touterPrev = new Map();\n\t\t\t} \n\n\t\t\tfor (let [tokenName, qty] of tokens) {\n\t\t\t\tlet innerPrev = outerPrev.get(tokenName.hex);\n\n\t\t\t\tif (!innerPrev) {\n\t\t\t\t\tinnerPrev = 0n;\n\t\t\t\t}\n\n\t\t\t\tinnerPrev += qty.value;\n\n\t\t\t\touterPrev.set(tokenName.hex, innerPrev);\n\t\t\t}\n\n\t\t\tassets.set(mph.hex, outerPrev);\n\t\t}\n\n\t\tconst entries = Array.from(assets.entries());\n\n\t\tthis.assets = entries.map(([rawMph, rawTokens]) => {\n\t\t\tconst tokens = Array.from(rawTokens.entries());\n\n\t\t\treturn [MintingPolicyHash.fromProps(rawMph), tokens.map(([rawTokenName, rawQty]) => {\n\t\t\t\treturn [ByteArray.fromProps(rawTokenName), HInt.fromProps(rawQty)];\n\t\t\t})];\n\t\t});\n\t}\n\n\t/**\n\t * Mutates 'this'.\n\t * @param {MintingPolicyHash | MintingPolicyHashProps} mph\n\t * @param {ByteArray | ByteArrayProps} tokenName \n\t * @param {HInt | HIntProps} qty\n\t */\n\taddComponent(mph, tokenName, qty) {\n\t\tconst mph_ = MintingPolicyHash.fromProps(mph);\n\t\tconst tokenName_ = ByteArray.fromProps(tokenName);\n\t\tconst qty_ = HInt.fromProps(qty);\n\n\t\tif (qty_.eq(0n)) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst inner = this.assets.find(asset => mph_.eq(asset[0]));\n\n\t\tif (inner === undefined) {\n\t\t\tthis.assets.push([mph_, [[tokenName_, qty_]]]);\n\t\t} else {\n\t\t\tconst token = inner[1].find(pair => pair[0].eq(tokenName_));\n\n\t\t\tif (token === undefined) {\n\t\t\t\tinner[1].push([tokenName_, qty_]);\n\t\t\t} else {\n\t\t\t\ttoken[1] = token[1].add(qty_);\n\t\t\t}\n\t\t}\n\n\t\tthis.removeZeroes();\n\t}\n\n\t/**\n\t * @internal\n\t * @param {Assets} other\n\t * @param {(a: bigint, b: bigint) => bigint} op\n\t * @returns {Assets}\n\t */\n\tapplyBinOp(other, op) {\n\t\tlet res = new Assets();\n\n\t\tfor (let [mph, tokens] of this.assets) {\n\t\t\tfor (let [tokenName, quantity] of tokens) {\n\t\t\t\tres.addComponent(mph, tokenName, new HInt(op(quantity.value, 0n)));\n\t\t\t}\n\t\t}\n\n\t\tfor (let [mph, tokens] of other.assets) {\n\t\t\tfor (let [tokenName, quantity] of tokens) {\n\t\t\t\tres.addComponent(mph, tokenName, new HInt(op(0n, quantity.value)));\n\t\t\t}\n\t\t}\n\n\t\treturn res;\n\t}\n\n\t/**\n\t * @param {Assets} other\n\t * @returns {Assets}\n\t */\n\tadd(other) {\n\t\treturn this.applyBinOp(other, (a, b) => a + b);\n\t}\n\n\t/**\n\t * @param {Assets} other\n\t * @returns {Assets}\n\t */\n\tsub(other) {\n\t\treturn this.applyBinOp(other, (a, b) => a - b);\n\t}\n\n\t/**\n\t * @param {HInt | HIntProps} scalar \n\t * @returns {Assets}\n\t */\n\tmul(scalar) {\n\t\tconst s = HInt.fromProps(scalar);\n\n\t\treturn new Assets(this.assets.map(([mph, tokens]) => {\n\t\t\t/**\n\t\t\t * @type {[MintingPolicyHash, [ByteArray, HInt][]]}\n\t\t\t */\n\t\t\tconst mapped = [mph, tokens.map(([token, qty]) => [token, qty.mul(s)])]\n\n\t\t\treturn mapped;\n\t\t}))\n\t}\n\n\t/**\n\t * Mutates 'this'.\n\t * Throws error if mph is already contained in 'this'.\n\t * @param {MintingPolicyHash | MintingPolicyHashProps} mph\n\t * @param {[ByteArray | ByteArrayProps, HInt | HIntProps][]} tokens\n\t */\n\taddTokens(mph, tokens) {\n\t\tconst mph_ = MintingPolicyHash.fromProps(mph);\n\n\t\tfor (let asset of this.assets) {\n\t\t\tif (asset[0].eq(mph_)) {\n\t\t\t\tthrow new Error(`MultiAsset already contains ${mph_.hex}`);\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * @type {[ByteArray, HInt][]}\n\t\t */\n\t\tconst tokens_ = tokens.map(([tokenName, qty]) => [ByteArray.fromProps(tokenName), HInt.fromProps(qty)]);\n\n\t\tthis.assets.push([mph_, tokens_]);\n\n\t\t// sort immediately\n\t\tthis.sort();\n\t}\n\n\t/**\n\t * @param {MintingPolicyHash | MintingPolicyHashProps} mph\n\t * @returns {ByteArray[]}\n\t */\n\tgetTokenNames(mph) {\n\t\tconst mph_ = MintingPolicyHash.fromProps(mph);\n\n\t\tfor (let [otherMph, tokens] of this.assets) {\n\t\t\tif (otherMph.eq(mph_)) {\n\t\t\t\treturn tokens.map(([tokenName, _]) => tokenName);\n\t\t\t}\n\t\t}\n\n\t\treturn [];\n\t}\n\n\t/**\n\t * @param {Assets} other\n\t * @returns {boolean}\n\t */\n\teq(other) {\n\t\tfor (let asset of this.assets) {\n\t\t\tfor (let token of asset[1]) {\n\t\t\t\tif (token[1].neq(other.get(asset[0], token[0]))) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfor (let asset of other.assets) {\n\t\t\tfor (let token of asset[1]) {\n\t\t\t\tif (token[1].neq(this.get(asset[0], token[0]))) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * Strict gt, if other contains assets this one doesn't contain => return false\n\t * @param {Assets} other\n\t * @returns {boolean}\n\t */\n\tgt(other) {\n\t\tif (this.isZero()) {\n\t\t\treturn false;\n\t\t}\n\n\t\tfor (let asset of this.assets) {\n\t\t\tfor (let token of asset[1]) {\n\t\t\t\tif (token[1].le(other.get(asset[0], token[0]))) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfor (let asset of other.assets) {\n\t\t\tfor (let token of asset[1]) {\n\t\t\t\tif (!this.has(asset[0], token[0])) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * @param {Assets} other\n\t * @returns {boolean}\n\t */\n\tge(other) {\n\t\tif (this.isZero()) {\n\t\t\treturn other.isZero();\n\t\t}\n\n\t\tfor (let asset of this.assets) {\n\t\t\tfor (let token of asset[1]) {\n\t\t\t\tif (token[1].lt(other.get(asset[0], token[0]))) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfor (let asset of other.assets) {\n\t\t\tfor (let token of asset[1]) {\n\t\t\t\tif (!this.has(asset[0], token[0])) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * @returns {boolean}\n\t */\n\tallPositive() {\n\t\tfor (let asset of this.assets) {\n\t\t\tfor (let pair of asset[1]) {\n\t\t\t\tif (pair[1].lt(0n)) {\n\t\t\t\t\treturn false;\n\t\t\t\t} else if (pair[1].eq(0n)) {\n\t\t\t\t\tthrow new Error(\"unexpected\");\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * Throws an error if any contained quantity <= 0n\n\t */\n\tassertAllPositive() {\n\t\tassert(this.allPositive(), \"non-positive token amounts detected\");\n\t}\n\n\t/**\n\t * @returns {number[]}\n\t */\n\ttoCbor() {\n\t\treturn Cbor.encodeMap(\n\t\t\tthis.assets.map(\n\t\t\t\touterPair => {\n\t\t\t\t\treturn [outerPair[0].toCbor(), Cbor.encodeMap(outerPair[1].map(\n\t\t\t\t\t\tinnerPair => [innerPair[0].toCbor(), innerPair[1].toCbor()]\n\t\t\t\t\t))];\n\t\t\t\t}\n\t\t\t)\n\t\t);\n\t}\n\n\t/**\n\t * @param {number[]} bytes\n\t * @returns {Assets}\n\t */\n\tstatic fromCbor(bytes) {\n\t\tlet ms = new Assets();\n\n\t\tCbor.decodeMap(bytes, (_, pairBytes) => {\n\t\t\tlet mph = MintingPolicyHash.fromCbor(pairBytes);\n\n\t\t\t/**\n\t\t\t * @type {[ByteArray, HInt][]}\n\t\t\t */\n\t\t\tlet innerMap = [];\n\n\t\t\tCbor.decodeMap(pairBytes, (_, innerPairBytes) => {\n\t\t\t\tinnerMap.push([\n\t\t\t\t\tByteArray.fromCbor(innerPairBytes),\n\t\t\t\t\tHInt.fromCbor(innerPairBytes)\n\t\t\t\t]);\n\t\t\t});\n\n\t\t\tms.assets.push([mph, innerMap]);\n\t\t});\n\n\t\treturn ms;\n\t}\n\n\t/**\n\t * @returns {Object}\n\t */\n\tdump() {\n\t\tlet obj = {};\n\n\t\tfor (let [mph, tokens] of this.assets) {\n\t\t\tlet innerObj = {};\n\n\t\t\tfor (let [tokenName, quantity] of tokens) {\n\t\t\t\tinnerObj[tokenName.hex] = quantity.toString();\n\t\t\t}\n\n\t\t\tobj[mph.hex] = innerObj;\n\t\t}\n\n\t\treturn obj;\n\t}\n\n\t/**\n\t * Used when generating script contexts for running programs\n\t * @returns {MapData}\n\t */\n\t_toUplcData() {\n\t\t/** @type {[UplcData, UplcData][]} */\n\t\tconst pairs = [];\n\n\t\tfor (let asset of this.assets) {\n\t\t\t/** @type {[UplcData, UplcData][]} */\n\t\t\tconst innerPairs = [];\n\n\t\t\tfor (let token of asset[1]) {\n\t\t\t\tinnerPairs.push([\n\t\t\t\t\ttoken[0]._toUplcData(),\n\t\t\t\t\ttoken[1]._toUplcData()\n\t\t\t\t]);\n\t\t\t}\n\n\t\t\tpairs.push([\n\t\t\t\tnew ByteArrayData(asset[0].bytes),\n\t\t\t\tnew MapData(innerPairs),\n\t\t\t])\n\t\t}\n\n\t\treturn new MapData(pairs);\n\t}\n\n\t/**\n\t * Makes sure minting policies are in correct order, and for each minting policy make sure the tokens are in the correct order\n\t * Mutates 'this'\n\t */\n\tsort() {\n\t\tthis.assets.sort((a, b) => {\n\t\t\treturn Hash.compare(a[0], b[0]);\n\t\t});\n\n\t\tthis.assets.forEach(([_, tokens]) => {\n\t\t\ttokens.sort((a, b) => {\n\t\t\t\treturn ByteArrayData.compLengthFirst(a[0].bytes, b[0].bytes);\n\t\t\t});\n\t\t});\n\t}\n\n\tassertSorted() {\n\t\tthis.assets.forEach((b, i) => {\n\t\t\tif (i > 0) {\n\t\t\t\tconst a = this.assets[i-1];\n\n\t\t\t\tassert(Hash.compare(a[0], b[0]) == -1, `assets not sorted (${a[0].hex} vs ${b[0].hex})`);\n\n\t\t\t\tb[1].forEach((bb, j) => {\n\t\t\t\t\tif (j > 0) {\n\t\t\t\t\t\tconst aa = b[1][j-1];\n\n\t\t\t\t\t\tassert(ByteArrayData.compLengthFirst(aa[0].bytes, bb[0].bytes) < 0, \"tokens not sorted\");\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t}\n\t\t})\n\t}\n}\n\n/**\n * @typedef {HInt | HIntProps | [\n *   HInt | HIntProps,\n *   Assets | AssetsProps\n * ] | {\n *   lovelace: HInt| HIntProps,\n *   assets?:   Assets | AssetsProps\n * }} ValueProps\n */\n\n/**\n * Represents a collection of tokens.\n */\nexport class Value extends HeliosData {\n\t/** @type {HInt} */\n\t#lovelace;\n\n\t/** @type {Assets} */\n\t#assets;\n\n\t/**\n\t * @param {ValueProps} props \n\t * @param {null | Assets | AssetsProps} maybeAssets \n\t * @returns {[HInt | HIntProps, Assets | AssetsProps]}\n\t */\n\tstatic cleanConstructorArgs(props, maybeAssets) {\n\t\tif (Array.isArray(props)) {\n\t\t\tassert(props.length == 2, \"expected two entries for AssetsProps\");\n\n\t\t\tif (maybeAssets) {\n\t\t\t\tthrow new Error(\"can't combine assets arg with ValueProps that also contains assets\");\n\t\t\t}\n\n\t\t\treturn [props[0], props[1]];\n\t\t} else if (props instanceof HInt) {\n\t\t\treturn [props, maybeAssets ? maybeAssets : new Assets()];\n\t\t} else if (typeof props == \"object\") {\n\t\t\tif (maybeAssets) {\n\t\t\t\tthrow new Error(\"can't combine assets arg with ValueProps that also contains assets\");\n\t\t\t}\n\n\t\t\treturn [props.lovelace, props.assets ?? new Assets()];\n\t\t} else {\n\t\t\treturn [props, maybeAssets ? maybeAssets : new Assets()];\n\t\t}\n\t}\n\n\t/**\n\t * @param {ValueProps} props \n\t * @param {null | Assets | AssetsProps} assets \n\t */\n\tconstructor(props = 0n, assets = null) {\n\t\tsuper();\n\n\t\tconst [rawLovelace, rawAssets] = Value.cleanConstructorArgs(props, assets);\n\n\t\tthis.#lovelace = HInt.fromProps(rawLovelace);\n\t\tthis.#assets = Assets.fromProps(rawAssets);\n\t}\n\n\t/**\n\t * @param {ValueProps | Value} props \n\t * @returns {Value}\n\t */\n\tstatic fromProps(props) {\n\t\tif (props instanceof Value) {\n\t\t\treturn props;\n\t\t} else {\n\t\t\treturn new Value(props);\n\t\t}\n\t}\n\n\t/**\n\t * @param {MintingPolicyHash | MintingPolicyHashProps} mph \n\t * @param {ByteArray | ByteArrayProps} tokenName \n\t * @param {HInt | HIntProps} qty \n\t * @returns {Value}\n\t */\n\tstatic asset(mph, tokenName, qty) {\n\t\tconst mph_ = MintingPolicyHash.fromProps(mph);\n\t\tconst tokenName_ = ByteArray.fromProps(tokenName);\n\t\tconst qty_ = HInt.fromProps(qty);\n\n\t\treturn new Value({\n\t\t\tlovelace: 0n, \n\t\t\tassets: new Assets([\n\t\t\t\t[mph_, [\n\t\t\t\t\t[tokenName_, qty_]\n\t\t\t\t]]\n\t\t\t])\n\t\t});\n\t}\n\n\t/**\n\t * Gets the `Assets` contained in the `Value`.\n\t * @type {Assets}\n\t */\n\tget assets() {\n\t\treturn this.#assets;\n\t}\n\n\t/**\n\t * Gets the lovelace quantity contained in the `Value`.\n\t * @type {bigint}\n\t */\n\tget lovelace() {\n\t\treturn this.#lovelace.value;\n\t}\n\n\t/**\n\t * Mutates the quantity of lovelace in a `Value`.\n\t * @param {HInt | HIntProps} lovelace\n\t */\n\tsetLovelace(lovelace) {\n\t\tthis.#lovelace = HInt.fromProps(lovelace);\n\t}\n\n\t/**\n\t * @returns {number[]}\n\t */\n\ttoCbor() {\n\t\tif (this.#assets.isZero()) {\n\t\t\treturn this.#lovelace.toCbor()\n\t\t} else {\n\t\t\treturn Cbor.encodeTuple([\n\t\t\t\tthis.#lovelace.toCbor(),\n\t\t\t\tthis.#assets.toCbor()\n\t\t\t]);\n\t\t}\n\t}\n\n\t/**\n\t * @param {number[]} bytes\n\t * @returns {Value}\n\t */\n\tstatic fromCbor(bytes) {\n\t\tlet mv = new Value();\n\n\t\tif (Cbor.isTuple(bytes)) {\n\t\t\tCbor.decodeTuple(bytes, (i, fieldBytes) => {\n\t\t\t\tswitch(i) {\n\t\t\t\t\tcase 0:\n\t\t\t\t\t\tmv.#lovelace = HInt.fromCbor(fieldBytes);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 1:\n\t\t\t\t\t\tmv.#assets = Assets.fromCbor(fieldBytes);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tthrow new Error(\"unrecognized field\");\n\t\t\t\t}\n\t\t\t});\n\t\t} else {\n\t\t\tmv.#lovelace = HInt.fromCbor(bytes);\n\t\t}\n\n\t\treturn mv;\n\t}\n\n\t/**\n\t * @param {Value[]} values\n\t * @returns {Value}\n\t */\n\tstatic sum(values) {\n\t\tlet s = new Value(0n);\n\n\t\tvalues.forEach(v => {\n\t\t\ts = s.add(v);\n\t\t});\n\n\t\treturn s;\n\t}\n\n\t/**\n\t * Adds two `Value` instances together. Returns a new `Value` instance.\n\t * @param {Value} other\n\t * @returns {Value}\n\t */\n\tadd(other) {\n\t\treturn new Value({\n\t\t\tlovelace: this.#lovelace.add(other.lovelace), \n\t\t\tassets: this.#assets.add(other.assets)\n\t\t});\n\t}\n\n\t/**\n\t * Substracts one `Value` instance from another. Returns a new `Value` instance.\n\t * @param {Value} other\n\t * @returns {Value}\n\t */\n\tsub(other) {\n\t\treturn new Value({\n\t\t\tlovelace: this.#lovelace.sub(other.lovelace), \n\t\t\tassets: this.#assets.sub(other.assets)\n\t\t});\n\t}\n\n\t/**\n\t * Multiplies a `Value` by a whole number.\n\t * @param {HInt | HIntProps} scalar \n\t * @returns {Value}\n\t */\n\tmul(scalar) {\n\t\treturn new Value({\n\t\t\tlovelace: this.#lovelace.mul(scalar), \n\t\t\tassets: this.#assets.mul(scalar)\n\t\t})\n\t}\n\n\t/**\n\t * Checks if two `Value` instances are equal (`Assets` need to be in the same order).\n\t * @param {Value} other\n\t * @returns {boolean}\n\t */\n\teq(other) {\n\t\treturn this.#lovelace.eq(other.lovelace) && (this.#assets.eq(other.assets));\n\t}\n\n\t/**\n\t * Checks if a `Value` instance is strictly greater than another `Value` instance. Returns false if any asset is missing.\n\t * @param {Value} other\n\t * @returns {boolean}\n\t */\n\tgt(other) {\n\t\treturn this.#lovelace.gt(other.lovelace) && (this.#assets.gt(other.assets));\n\t}\n\n\t/**\n\t * Checks if a `Value` instance is strictly greater or equal to another `Value` instance. Returns false if any asset is missing.\n\t * @param {Value} other\n\t * @returns {boolean}\n\t */\n\tge(other) {\n\t\treturn this.#lovelace.ge(other.lovelace) && (this.#assets.ge(other.assets));\n\t}\n\n\t/**\n\t * Throws an error if any of the `Value` entries is negative.\n\t * \n\t * Used when building transactions because transactions can't contain negative values.\n\t * @returns {Value} - returns this\n\t */\n\tassertAllPositive() {\n\t\tassert(this.#lovelace.ge(0n));\n\n\t\tthis.#assets.assertAllPositive();\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * @returns {Object}\n\t */\n\tdump() {\n\t\treturn {\n\t\t\tlovelace: this.#lovelace.dump(),\n\t\t\tassets: this.#assets.dump()\n\t\t};\n\t}\n\n\t/**\n\t * Used when building script context\n\t * @param {boolean} isInScriptContext\n\t * @returns {MapData}\n\t */\n\t_toUplcData(isInScriptContext = false) {\n\t\tlet map = this.#assets._toUplcData();\n\n\t\tif (this.#lovelace.neq(0n) || isInScriptContext) {\n\t\t\tconst inner = map.map; \n\n\t\t\tinner.unshift([\n\t\t\t\tnew ByteArrayData([]),\n\t\t\t\tnew MapData([\n\t\t\t\t\t[new ByteArrayData([]), this.#lovelace._toUplcData()]\n\t\t\t\t]),\n\t\t\t]);\n\n\t\t\t// 'inner' is copy, so mutating won't change the original\n\t\t\tmap = new MapData(inner);\n\t\t}\n\n\t\treturn map;\n\t}\n\n\t/**\n\t * Converts a `UplcData` instance into a `Value`. Throws an error if it isn't in the right format.\n\t * @param {UplcData} data\n\t * @returns {Value}\n\t */\n\tstatic fromUplcData(data) {\n\t\tlet sum = new Value();\n\n\t\tlet outerMap = data.map;\n\n\t\tfor (let [mphData, tokensData] of outerMap) {\n\t\t\tlet mphBytes = mphData.bytes;\n\n\t\t\tlet innerMap = tokensData.map;\n\n\t\t\tif (mphBytes.length == 0) {\n\t\t\t\t//lovelace\n\t\t\t\tassert(innerMap.length == 1 && innerMap[0][0].bytes.length == 0, `bad ada token map`); \n\t\t\t\tsum = sum.add(new Value({lovelace: innerMap[0][1].int}));\n\t\t\t} else {\n\t\t\t\t// other assets\n\t\t\t\tlet mph = new MintingPolicyHash(mphBytes);\n\n\t\t\t\tfor (let [tokenNameData, quantityData] of innerMap) {\n\t\t\t\t\tlet tokenName = tokenNameData.bytes;\n\t\t\t\t\tlet quantity = quantityData.int;\n\n\t\t\t\t\tsum = sum.add(Value.asset(mph, tokenName, quantity));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn sum;\n\t}\n\n\t/**\n\t * @param {string | number[]} bytes\n\t * @returns {Value}\n\t */\n\tstatic fromUplcCbor(bytes) {\n\t\treturn Value.fromUplcData(UplcData.fromCbor(bytes));\n\t}\n}\n\n\n\n//////////////////////////////\n// Section 8: Uplc cost-models\n//////////////////////////////\n\n/**\n * @typedef {Object} Cost\n * @property {bigint} mem\n * @property {bigint} cpu\n */\n\n/**\n * @typedef {() => bigint} LiveSlotGetter\n */\n\n/**\n * Wrapper for the raw JSON containing all the current network parameters.\n * \n * NetworkParams is needed to be able to calculate script budgets and perform transaction building checks.\n * \n * The raw JSON can be downloaded from the following CDN locations:\n * \n *  - Preview: [https://d1t0d7c2nekuk0.cloudfront.net/preview.json](https://d1t0d7c2nekuk0.cloudfront.net/preview.json)\n *  - Preprod: [https://d1t0d7c2nekuk0.cloudfront.net/preprod.json](https://d1t0d7c2nekuk0.cloudfront.net/preprod.json)\n *  - Mainnet: [https://d1t0d7c2nekuk0.cloudfront.net/mainnet.json](https://d1t0d7c2nekuk0.cloudfront.net/mainnet.json)\n * \n * These JSONs are updated every 15 minutes.\n */\nexport class NetworkParams {\n\t#raw;\n\n\t/**\n\t * Should only be set by the network emulator\n\t * @type {null | LiveSlotGetter}\n\t */\n\t#liveSlotGetter;\n\n\t/**\n\t * @param {Object} raw \n\t * @param {null | LiveSlotGetter} liveSlotGetter\n\t */\n\tconstructor(raw, liveSlotGetter = null) {\n\t\tif(typeof raw !== 'object'){\n\t\t    throw new Error(\"raw param must be of type object\");\n        }\n\t\t\n\t\tthis.#raw = raw;\n\t\tthis.#liveSlotGetter = liveSlotGetter;\n\t}\n\n\t/**\n\t * @type {Object}\n\t */\n\tget raw() {\n\t\treturn this.#raw;\n\t}\n\t\n\t/**\n\t * @type {null | bigint}\n\t */\n\tget liveSlot() {\n\t\tif (this.#liveSlotGetter) {\n\t\t\treturn this.#liveSlotGetter()\n\t\t} else {\n\t\t\treturn null;\n\t\t}\n\t}\n\n    /**\n     * @internal\n     * @type {Object}\n     */\n\tget costModel() {\n\t\treturn assertDefined(this.#raw?.latestParams?.costModels?.PlutusScriptV2, \"'obj.latestParams.costModels.PlutusScriptV2' undefined\");\n\t}\n\n\t/**\n     * @internal\n\t * @param {string} key \n\t * @returns {number}\n\t */\n\tgetCostModelParameter(key) {\n\t\treturn assertNumber(this.costModel[key], `'obj.${key}' undefined`);\n\t}\n\n\t/**\n     * @internal\n\t * @param {string} name \n\t * @returns {Cost}\n\t */\n\tgetTermCost(name) {\n\t\tlet memKey = `cek${name}Cost-exBudgetMemory`;\n\t\tlet cpuKey = `cek${name}Cost-exBudgetCPU`;\n\n\t\treturn {\n\t\t\tmem: BigInt(assertNumber(this.costModel[memKey], `'obj.${memKey}' undefined`)),\n\t\t\tcpu: BigInt(assertNumber(this.costModel[cpuKey], `'obj.${cpuKey}' undefined`)),\n\t\t};\n\t}\n\n\t/**\n     * @internal\n\t * @type {Cost}\n\t */\n\tget plutusCoreStartupCost() {\n\t\treturn this.getTermCost(\"Startup\");\n\t}\n\n\t/**\n     * @internal\n\t * @type {Cost}\n\t */\n\tget plutusCoreVariableCost() {\n\t\treturn this.getTermCost(\"Var\");\n\t}\n\n\t/**\n     * @internal\n\t * @type {Cost}\n\t */\n\tget plutusCoreLambdaCost() {\n\t\treturn this.getTermCost(\"Lam\");\n\t}\n\n\t/**\n     * @internal\n\t * @type {Cost}\n\t */\n\tget plutusCoreDelayCost() {\n\t\treturn this.getTermCost(\"Delay\");\n\t}\n\n\t/**\n     * @internal\n\t * @type {Cost}\n\t */\n\tget plutusCoreCallCost() {\n\t\treturn this.getTermCost(\"Apply\");\n\t}\n\n\t/**\n     * @internal\n\t * @type {Cost}\n\t */\n\tget plutusCoreConstCost() {\n\t\treturn this.getTermCost(\"Const\");\n\t}\n\n\t/**\n     * @internal\n\t * @type {Cost}\n\t */\n\tget plutusCoreForceCost() {\n\t\treturn this.getTermCost(\"Force\");\n\t}\n\n\t/**\n     * @internal\n\t * @type {Cost}\n\t */\n\tget plutusCoreBuiltinCost() {\n\t\treturn this.getTermCost(\"Builtin\");\n\t}\n\n\t/**\n     * @internal\n\t * @type {[number, number]} - a + b*size\n\t */\n\tget txFeeParams() {\n\t\treturn [\n\t\t\tassertNumber(this.#raw?.latestParams?.txFeeFixed),\n\t\t\tassertNumber(this.#raw?.latestParams?.txFeePerByte),\n\t\t];\n\t}\n\n\t/**\n     * @internal\n\t * @type {[number, number]} - [memFee, cpuFee]\n\t */\n\tget exFeeParams() {\n\t\treturn [\n\t\t\tassertNumber(this.#raw?.latestParams?.executionUnitPrices?.priceMemory),\n\t\t\tassertNumber(this.#raw?.latestParams?.executionUnitPrices?.priceSteps),\n\t\t];\n\t}\n\t\n\t/**\n     * @internal\n\t * @type {number[]}\n\t */\n\tget sortedCostParams() {\n\t\tlet baseObj = this.#raw?.latestParams?.costModels?.PlutusScriptV2;\n\t\tlet keys = Object.keys(baseObj);\n\n\t\tkeys.sort();\n\n\t\treturn keys.map(key => assertNumber(baseObj[key]));\n\t}\n\n\t/**\n     * @internal\n\t * @type {number}\n\t */\n\tget lovelacePerUTXOByte() {\n\t\treturn assertNumber(this.#raw?.latestParams?.utxoCostPerByte);\n\t}\n\n\t/**\n     * @internal\n\t * @type {number}\n\t */\n\tget minCollateralPct() {\n\t\treturn assertNumber(this.#raw?.latestParams?.collateralPercentage);\n\t}\n\n\t/**\n     * @internal\n\t * @type {number}\n\t */\n\tget maxCollateralInputs() {\n\t\treturn assertNumber(this.#raw?.latestParams?.maxCollateralInputs);\n\t}\n\n\t/**\n     * @internal\n\t * @type {[number, number]} - [mem, cpu]\n\t */\n\tget maxTxExecutionBudget() {\n\t\treturn [\n\t\t\tassertNumber(this.#raw?.latestParams?.maxTxExecutionUnits?.memory),\n\t\t\tassertNumber(this.#raw?.latestParams?.maxTxExecutionUnits?.steps),\n\t\t];\n\t}\n\n\t/**\n     * @internal\n\t * @type {number}\n\t */\n\tget maxTxSize() {\n\t\treturn assertNumber(this.#raw?.latestParams?.maxTxSize);\n\t}\n\n\t/**\n\t * @type {bigint}\n\t */\n\tget stakeAddressDeposit() {\n\t\treturn BigInt(assertNumber(this.#raw?.latestParams?.stakeAddressDeposit));\n\t}\n\n\t/**\n\t * Tx balancing picks additional inputs by starting from maxTxFee. \n\t * This is done because the order of the inputs can have a huge impact on the tx fee, so the order must be known before balancing.\n\t * If there aren't enough inputs to cover the maxTxFee and the min deposits of newly created UTxOs, the balancing will fail.\n\t * @type {bigint}\n\t */\n\tget maxTxFee() {\n\t\tconst [a, b] = this.txFeeParams;\n\t\tconst [feePerMem, feePerCpu] = this.exFeeParams;\n\t\tconst [maxMem, maxCpu] = this.maxTxExecutionBudget;\n\n\t\treturn BigInt(a) + BigInt(Math.ceil(b*this.maxTxSize)) + BigInt(Math.ceil(feePerMem*maxMem)) + BigInt(Math.ceil(feePerCpu*maxCpu));\n\t}\n\n\t/**\n\t * Calculates the time (in milliseconds in 01/01/1970) associated with a given slot number.\n\t * @param {bigint} slot\n\t * @returns {bigint}\n\t */\n\tslotToTime(slot) {\n\t\tlet secondsPerSlot = assertNumber(this.#raw?.shelleyGenesis?.slotLength);\n\n\t\tlet lastSlot = BigInt(assertNumber(this.#raw?.latestTip?.slot));\n\t\tlet lastTime = BigInt(assertNumber(this.#raw?.latestTip?.time));\n\n\t\tlet slotDiff = slot - lastSlot;\n\n\t\treturn lastTime + slotDiff*BigInt(secondsPerSlot*1000);\n\t}\n\n\t/**\n\t * Calculates the slot number associated with a given time. Time is specified as milliseconds since 01/01/1970.\n\t * @param {bigint} time Milliseconds since 1970\n\t * @returns {bigint}\n\t */\n\ttimeToSlot(time) {\n\t\tlet secondsPerSlot = assertNumber(this.#raw?.shelleyGenesis?.slotLength);\n\n\t\tlet lastSlot = BigInt(assertNumber(this.#raw?.latestTip?.slot));\n\t\tlet lastTime = BigInt(assertNumber(this.#raw?.latestTip?.time));\n\n\t\tlet timeDiff = time - lastTime;\n\n\t\treturn lastSlot + BigInt(Math.round(Number(timeDiff)/(1000*secondsPerSlot)));\n\t}\n}\n\n/**\n * Each builtin has an associated CostModel.\n * The CostModel calculates the execution cost of a builtin, depending on the byte-size of the inputs.\n * @internal\n */\nexport class CostModel {\n\tconstructor() {\n\t}\n\n\t/**\n\t * @param {NetworkParams} params\n\t * @param {string} baseName\n\t * @returns {CostModel}\n\t */\n\tstatic fromParams(params, baseName) {\n\t\tthrow new Error(\"not yet implemented\");\n\t}\n\n\t/**\n\t * @param {number[]} args \n\t * @returns {bigint}\n\t */\n\tcalc(args) {\n\t\tthrow new Error(\"not yet implemented\");\n\t}\n\n\t/**\n\t * @returns {string}\n\t */\n\tdump() {\n\t\tthrow new Error(\"not yet implemented\");\n\t}\n}\n\n/**\n * A simple constant cost, independent of arg size.\n * @internal\n */\nexport class ConstCost extends CostModel {\n\t#constant;\n\n\t/**\n\t * @param {bigint} constant\n\t */\n\tconstructor(constant) {\n\t\tsuper();\n\t\tthis.#constant = constant;\n\t}\n\n\t/**\n\t * @param {NetworkParams} params \n\t * @param {string} baseName - eg. addInteger-cpu-arguments\n\t * @returns {ConstCost}\n\t */\n\tstatic fromParams(params, baseName) {\n\t\tlet a = params.getCostModelParameter(`${baseName}`);\n\n\t\treturn new ConstCost(BigInt(a));\n\t}\n\n\t/**\n\t * @param {number[]} args\n\t * @returns {bigint}\n\t */\n\tcalc(args) {\n\t\treturn this.#constant;\n\t}\n\n\t/**\n\t * @returns {string}\n\t */\n\tdump() {\n\t\treturn `const: ${this.#constant.toString()}`;\n\t}\n}\n\n/**\n * cost = a + b*size(arg)\n * @internal\n */\nexport class LinearCost extends CostModel {\n\t#a;\n\t#b;\n\n\t/**\n\t * a + b*SizeFn(x, y)\n\t * @param {bigint} a - intercept\n\t * @param {bigint} b - slope\n\t */\n\tconstructor(a, b) {\n\t\tsuper();\n\t\tthis.#a = a;\n\t\tthis.#b = b;\n\t}\n\n\t/**\n\t * @param {NetworkParams} params \n\t * @param {string} baseName - eg. addInteger-cpu-arguments\n\t * @returns {[bigint, bigint]}\n\t */\n\tstatic getParams(params, baseName) {\n\t\tlet a = params.getCostModelParameter(`${baseName}-intercept`);\n\t\tlet b = params.getCostModelParameter(`${baseName}-slope`);\n\n\t\treturn [BigInt(a), BigInt(b)];\n\t}\n\n\t/**\n\t * @param  {number} size\n\t * @returns {bigint}\n\t */\n\tcalcInternal(size) {\n\t\treturn this.#a + this.#b*BigInt(size);\n\t}\n\n\t/**\n\t * @returns {string}\n\t */\n\tdump() {\n\t\treturn `intercept: ${this.#a.toString()}, slope: ${this.#b.toString()}`;\n\t}\n}\n\n/**\n * cost = a + b*size(args[i])\n * @internal\n */\nexport class ArgSizeCost extends LinearCost {\n\t#i;\n\n\t/**\n\t * @param {bigint} a - intercept\n\t * @param {bigint} b - slope\n\t * @param {number} i - index of the arg\n\t */\n\tconstructor(a, b, i) {\n\t\tsuper(a, b);\n\t\tthis.#i = i;\n\t}\n\n\t/**\n\t * @param {number[]} args\n\t * @returns {bigint}\n\t */\n\tcalc(args) {\n\t\tassert(this.#i < args.length && this.#i >= 0);\n\n\t\treturn this.calcInternal(args[this.#i]);\n\t}\n}\n\n/**\n * cost = a + b*size(arg0)\n * @internal\n */\nexport class Arg0SizeCost extends ArgSizeCost {\n\t/**\n\t * @param {bigint} a \n\t * @param {bigint} b \n\t */\n\tconstructor(a, b) {\n\t\tsuper(a, b, 0);\n\t}\n\n\t/**\n\t * @param {NetworkParams} params \n\t * @param {string} baseName - eg. addInteger-cpu-arguments\n\t * @returns {Arg0SizeCost}\n\t */\n\tstatic fromParams(params, baseName) {\n\t\tlet [a, b] = LinearCost.getParams(params, baseName);\n\n\t\treturn new Arg0SizeCost(a, b);\n\t}\n}\n\n/**\n * cost = a + b*size(arg1)\n * @internal\n */\nexport class Arg1SizeCost extends ArgSizeCost {\n\t/**\n\t * @param {bigint} a \n\t * @param {bigint} b \n\t */\n\tconstructor(a, b) {\n\t\tsuper(a, b, 1);\n\t}\n\n\t/**\n\t * @param {NetworkParams} params \n\t * @param {string} baseName - eg. addInteger-cpu-arguments\n\t * @returns {Arg1SizeCost}\n\t */\n\tstatic fromParams(params, baseName) {\n\t\tlet [a, b] = LinearCost.getParams(params, baseName);\n\n\t\treturn new Arg1SizeCost(a, b);\n\t}\n}\n\n/**\n * cost = a + b*size(arg2)\n * @internal\n */\nexport class Arg2SizeCost extends ArgSizeCost {\n\t/**\n\t * @param {bigint} a \n\t * @param {bigint} b \n\t */\n\tconstructor(a, b) {\n\t\tsuper(a, b, 2);\n\t}\n\n\t/**\n\t * @param {NetworkParams} params \n\t * @param {string} baseName - eg. addInteger-cpu-arguments\n\t * @returns {Arg2SizeCost}\n\t */\n\tstatic fromParams(params, baseName) {\n\t\tlet [a, b] = LinearCost.getParams(params, baseName);\n\n\t\treturn new Arg2SizeCost(a, b);\n\t}\n}\n\n/**\n * cost = a + b*min(args)\n * @internal\n */\nexport class MinArgSizeCost extends LinearCost {\n\t/**\n\t * @param {bigint} a - intercept\n\t * @param {bigint} b - slope\n\t */\n\tconstructor(a, b) {\n\t\tsuper(a, b);\n\t}\n\t/**\n\t * @param {NetworkParams} params \n\t * @param {string} baseName - eg. addInteger-cpu-arguments\n\t * @returns {MaxArgSizeCost}\n\t */\n\tstatic fromParams(params, baseName) {\n\t\tlet [a, b] = LinearCost.getParams(params, baseName);\n\n\t\treturn new MinArgSizeCost(a, b);\n\t}\n\n\t/**\n\t * @param  {number[]} args\n\t * @returns {bigint}\n\t */\n\tcalc(args) {\n\t\treturn this.calcInternal(Math.min(...args));\n\t}\n}\n\n/**\n * cost = a + b*max(args)\n * @internal\n */\nexport class MaxArgSizeCost extends LinearCost {\n\t/**\n\t * @param {bigint} a - intercept\n\t * @param {bigint} b - slope\n\t */\n\tconstructor(a, b) {\n\t\tsuper(a, b);\n\t}\n\n\t/**\n\t * @param {NetworkParams} params \n\t * @param {string} baseName - eg. addInteger-cpu-arguments\n\t * @returns {MaxArgSizeCost}\n\t */\n\tstatic fromParams(params, baseName) {\n\t\tlet [a, b] = LinearCost.getParams(params, baseName);\n\n\t\treturn new MaxArgSizeCost(a, b);\n\t}\n\n\t/**\n\t * @param  {number[]} args\n\t * @returns {bigint}\n\t */\n\tcalc(args) {\n\t\treturn this.calcInternal(Math.max(...args));\n\t}\n}\n\n/**\n * cost = a + b*sum(sizes(args))\n * @internal\n */\nexport class SumArgSizesCost extends LinearCost {\n\t/**\n\t * @param {bigint} a - intercept\n\t * @param {bigint} b - slope\n\t */\n\tconstructor(a, b) {\n\t\tsuper(a, b);\n\t}\n\n\t/**\n\t * @param {NetworkParams} params \n\t * @param {string} baseName - eg. addInteger-cpu-arguments\n\t * @returns {MaxArgSizeCost}\n\t */\n\tstatic fromParams(params, baseName) {\n\t\tlet [a, b] = LinearCost.getParams(params, baseName);\n\n\t\treturn new SumArgSizesCost(a, b);\n\t}\n\n\t/**\n\t * @param  {number[]} args\n\t * @returns {bigint}\n\t */\n\tcalc(args) {\n\t\tlet sum = 0;\n\n\t\tfor (let arg of args) {\n\t\t\tsum += arg;\n\t\t}\n\n\t\treturn this.calcInternal(sum);\n\t}\n}\n\n/**\n * cost = a + b*max(size(arg0)-size(arg1), min)\n * (only for Uplc functions with two arguments) \n * @internal\n */\nexport class ArgSizeDiffCost extends LinearCost {\n\t#min;\n\n\t/**\n\t * @param {bigint} a - intercept\n\t * @param {bigint} b - slope\n\t * @param {number} min\n\t */\n\tconstructor(a, b, min) {\n\t\tsuper(a, b);\n\t\tthis.#min = min\n\t}\n\t/**\n\t * @param {NetworkParams} params \n\t * @param {string} baseName - eg. addInteger-cpu-arguments\n\t * @returns {ArgSizeDiffCost}\n\t */\n\tstatic fromParams(params, baseName) {\n\t\tlet [a, b] = LinearCost.getParams(params, baseName);\n\t\tlet min = params.getCostModelParameter(`${baseName}-minimum`);\n\n\t\treturn new ArgSizeDiffCost(a, b, min);\n\t}\n\n\t/**\n\t * @param {number[]} args\n\t * @returns {bigint}\n\t */\n\tcalc(args) {\n\t\tassert(args.length == 2);\n\t\tlet [x, y] = args;\n\n\t\treturn this.calcInternal(Math.max(x - y, this.#min));\n\t}\n\n\t/**\n\t * @returns {string}\n\t */\n\tdump() {\n\t\treturn super.dump() + `, minimum: ${this.#min.toString()}`;\n\t}\n}\n\n/**\n * cost = (size(arg0) > size(arg1)) ? constant : a + b*size(arg0)*size(arg1)\n * (only for Uplc functions with two arguments)\n * @internal\n */\nexport class ArgSizeProdCost extends LinearCost {\n\t#constant;\n\n\t/**\n\t * @param {bigint} a - intercept\n\t * @param {bigint} b - slope\n\t * @param {bigint} constant\n\t */\n\tconstructor(a, b, constant) {\n\t\tsuper(a, b);\n\t\tthis.#constant = constant;\n\t}\n\n\t/**\n\t * @param {NetworkParams} params \n\t * @param {string} baseName - eg. addInteger-cpu-arguments\n\t * @returns {MaxArgSizeCost}\n\t */\n\tstatic fromParams(params, baseName) {\n\t\tconst [a, b] = LinearCost.getParams(params, `${baseName}-model-arguments`);\n\t\tconst constant = params.getCostModelParameter(`${baseName}-constant`);\n\n\t\treturn new ArgSizeProdCost(a, b, BigInt(constant));\n\t}\n\n\t/**\n\t * @param {number[]} args\n\t * @returns {bigint}\n\t */\n\tcalc(args) {\n\t\tassert(args.length == 2);\n\t\t\n\t\tconst [x, y] = args;\n\n\t\tif (x > y) {\n\t\t\treturn this.#constant;\n\t\t} else {\n\t\t\treturn this.calcInternal(x*y);\n\t\t}\n\t}\n\n\t/**\n\t * @returns {string}\n\t */\n\tdump() {\n\t\treturn super.dump() + `, constant: ${this.#constant.toString()}`;\n\t}\n}\n\n/**\n * cost = (size(arg0) != size(arg1)) ? constant : a + b*size(arg0)\n * (only for Uplc functions with two arguments)\n * @internal\n */\nexport class ArgSizeDiagCost extends LinearCost {\n\t#constant;\n\n\t/**\n\t * @param {bigint} a\n\t * @param {bigint} b\n\t * @param {bigint} constant\n\t */\n\tconstructor(a, b, constant) {\n\t\tsuper(a, b);\n\t\tthis.#constant = constant;\n\t}\n\t/**\n\t * @param {NetworkParams} params \n\t * @param {string} baseName - eg. addInteger-cpu-arguments\n\t * @returns {ArgSizeDiagCost}\n\t */\n\tstatic fromParams(params, baseName) {\n\t\tconst [a, b] = LinearCost.getParams(params, baseName);\n\t\tconst constant = params.getCostModelParameter(`${baseName}-constant`);\n\n\t\treturn new ArgSizeDiagCost(a, b, BigInt(constant));\n\t}\n\n\t/**\n\t * @param {number[]} args \n\t * @returns {bigint}\n\t */\n\tcalc(args) {\n\t\tassert(args.length == 2);\n\n\t\tif (args[0] == args[1]) {\n\t\t\treturn this.calcInternal(args[0]);\n\t\t} else {\n\t\t\treturn this.#constant;\n\t\t}\n\t}\n\n\t/**\n\t * @returns {string}\n\t */\n\tdump() {\n\t\treturn super.dump() + `, constant: ${this.#constant.toString()}`;\n\t}\n}\n\n/**\n * @internal\n * @typedef CostModelClass\n * @property {(params: NetworkParams, baseName: string) => CostModel} fromParams\n */\n\n\n/////////////////////////////////////\n// Section 9: Uplc built-in functions\n/////////////////////////////////////\n\n/**\n * @internal\n */\nexport const BUILTIN_PREFIX = \"__core__\";\n\n/**\n * Calls to builtins that are known not to throw errors (eg. tailList inside last branch of chooseList)\n * @internal\n */\nexport const SAFE_BUILTIN_SUFFIX = \"__safe\"; \n\n/**\n * Special off-chain builtins like network.get()\n * @internal\n */\nexport const MACRO_BUILTIN_PREFIX = \"__core__macro\";\n\n/**\n * Cost-model configuration of UplcBuiltin.\n * Also specifies the number of times a builtin must be 'forced' before being callable.\n * @internal\n */\n export class UplcBuiltinConfig {\n\t#name;\n\t#forceCount;\n\t#nArgs;\n\t#allowAny;\n\t#memCostModelClass;\n\t#cpuCostModelClass;\n\n\t/**\n\t * @param {string} name \n\t * @param {number} forceCount - number of type parameters of a Plutus-core builtin function (0, 1 or 2)\n\t * @param {number} nArgs\n\t * @param {boolean} allowAny\n\t * @param {CostModelClass} memCostModelClass \n\t * @param {CostModelClass} cpuCostModelClass \n\t */\n\tconstructor(name, forceCount, nArgs, allowAny, memCostModelClass, cpuCostModelClass) {\n\t\tthis.#name = name;\n\t\tthis.#forceCount = forceCount;\n\t\tthis.#nArgs = nArgs;\n\t\tthis.#allowAny = allowAny;\n\t\tthis.#memCostModelClass = memCostModelClass;\n\t\tthis.#cpuCostModelClass = cpuCostModelClass;\n\t}\n\n\tget name() {\n\t\treturn this.#name;\n\t}\n\n\tget forceCount() {\n\t\treturn this.#forceCount;\n\t}\n\n\tget nArgs() {\n\t\treturn this.#nArgs;\n\t}\n\n\tget allowAny() {\n\t\treturn this.#allowAny;\n\t}\n\n\t/**\n\t * @param {NetworkParams} params\n\t * @returns {[CostModel, CostModel]}\n\t */\n\tinstantiateCostModels(params) {\n\t\tif (this.#memCostModelClass !== null && this.#cpuCostModelClass !== null) {\n\t\t\tlet memCostModel = this.#memCostModelClass.fromParams(params, `${this.#name}-memory-arguments`);\n\t\t\tlet cpuCostModel = this.#cpuCostModelClass.fromParams(params, `${this.#name}-cpu-arguments`);\n\n\t\t\treturn [memCostModel, cpuCostModel];\n\t\t} else {\n\t\t\tthrow new Error(`cost model not yet implemented for builtin ${this.#name}`);\n\t\t}\n\t}\n\n\t/**\n\t * @param {NetworkParams} params\n\t * @param {number[]} argSizes\n\t * @returns {Cost}\n\t */\n\tcalcCost(params, argSizes) {\n\t\t// Note: instantiating everytime might be slow. Should this be cached (eg. in the params object?)?\n\t\tconst [memCostModel, cpuCostModel] = this.instantiateCostModels(params);\n\n\t\tconst memCost = memCostModel.calc(argSizes);\n\t\tconst cpuCost = cpuCostModel.calc(argSizes);\n\n\t\treturn {mem: memCost, cpu: cpuCost};\n\t}\n\n\t/**\n\t * @param {NetworkParams} params\n\t */\n\tdumpCostModel(params) {\n\t\tconst [memCostModel, cpuCostModel] = this.instantiateCostModels(params);\n\n\t\tconsole.log(`${this.name}-memory-arguments={${memCostModel.dump()},\\n${this.name}-cpu-arguments={${cpuCostModel.dump()}}`);\n\t}\n}\n\n/** \n * A list of all PlutusScript builins, with associated costmodels (actual costmodel parameters are loaded from NetworkParams during runtime)\n * @internal\n * @type {UplcBuiltinConfig[]} \n */\nexport const UPLC_BUILTINS = (\n\t/**\n\t * @returns {UplcBuiltinConfig[]}\n\t */\n\tfunction () {\n\t\t/**\n\t\t * Constructs a builtinInfo object\n\t\t * @param {string} name \n\t\t * @param {number} forceCount \n\t\t * @param {number} nArgs\n\t\t * @param {boolean} allowAny\n\t\t * @param {CostModelClass} memCostModel\n\t\t * @param {CostModelClass} cpuCostModel\n\t\t * @returns {UplcBuiltinConfig}\n\t\t */\n\t\tfunction builtinConfig(name, forceCount, nArgs, allowAny, memCostModel, cpuCostModel) {\n\t\t\t// builtins might need be wrapped in `force` a number of times if they are not fully typed\n\t\t\treturn new UplcBuiltinConfig(name, forceCount, nArgs, allowAny, memCostModel, cpuCostModel);\n\t\t}\n\n\t\treturn [\n\t\t\tbuiltinConfig(\"addInteger\",               0, 2, false, MaxArgSizeCost, MaxArgSizeCost), // 0\n\t\t\tbuiltinConfig(\"subtractInteger\",          0, 2, false, MaxArgSizeCost, MaxArgSizeCost),\n\t\t\tbuiltinConfig(\"multiplyInteger\",          0, 2, false, SumArgSizesCost, SumArgSizesCost),\n\t\t\tbuiltinConfig(\"divideInteger\",            0, 2, false, ArgSizeDiffCost, ArgSizeProdCost),\n\t\t\tbuiltinConfig(\"quotientInteger\",          0, 2, false, ArgSizeDiffCost, ArgSizeProdCost), \n\t\t\tbuiltinConfig(\"remainderInteger\",         0, 2, false, ArgSizeDiffCost, ArgSizeProdCost),\n\t\t\tbuiltinConfig(\"modInteger\",               0, 2, false, ArgSizeDiffCost, ArgSizeProdCost),\n\t\t\tbuiltinConfig(\"equalsInteger\",            0, 2, false, ConstCost, MinArgSizeCost),\n\t\t\tbuiltinConfig(\"lessThanInteger\",          0, 2, false, ConstCost, MinArgSizeCost),\n\t\t\tbuiltinConfig(\"lessThanEqualsInteger\",    0, 2, false, ConstCost, MinArgSizeCost),\n\t\t\tbuiltinConfig(\"appendByteString\",         0, 2, false, SumArgSizesCost, SumArgSizesCost), // 10\n\t\t\tbuiltinConfig(\"consByteString\",           0, 2, false, SumArgSizesCost, Arg1SizeCost),\n\t\t\tbuiltinConfig(\"sliceByteString\",          0, 3, false, Arg2SizeCost, Arg2SizeCost),\n\t\t\tbuiltinConfig(\"lengthOfByteString\",       0, 1, false, ConstCost, ConstCost),\n\t\t\tbuiltinConfig(\"indexByteString\",          0, 2, false, ConstCost, ConstCost),\n\t\t\tbuiltinConfig(\"equalsByteString\",         0, 2, false, ConstCost, ArgSizeDiagCost),\n\t\t\tbuiltinConfig(\"lessThanByteString\",       0, 2, false, ConstCost, MinArgSizeCost),\n\t\t\tbuiltinConfig(\"lessThanEqualsByteString\", 0, 2, false, ConstCost, MinArgSizeCost),\n\t\t\tbuiltinConfig(\"sha2_256\",                 0, 1, false, ConstCost, Arg0SizeCost),\n\t\t\tbuiltinConfig(\"sha3_256\",                 0, 1, false, ConstCost, Arg0SizeCost),\n\t\t\tbuiltinConfig(\"blake2b_256\",              0, 1, false, ConstCost, Arg0SizeCost), // 20\n\t\t\tbuiltinConfig(\"verifyEd25519Signature\",   0, 3, false, ConstCost, Arg2SizeCost),\n\t\t\tbuiltinConfig(\"appendString\",             0, 2, false, SumArgSizesCost, SumArgSizesCost),\n\t\t\tbuiltinConfig(\"equalsString\",             0, 2, false, ConstCost, ArgSizeDiagCost),\n\t\t\tbuiltinConfig(\"encodeUtf8\",               0, 1, false, Arg0SizeCost, Arg0SizeCost),\n\t\t\tbuiltinConfig(\"decodeUtf8\",               0, 1, false, Arg0SizeCost, Arg0SizeCost),\n\t\t\tbuiltinConfig(\"ifThenElse\",               1, 3, true , ConstCost, ConstCost),\n\t\t\tbuiltinConfig(\"chooseUnit\",               1, 2, false, ConstCost, ConstCost),\n\t\t\tbuiltinConfig(\"trace\",                    1, 2, true , ConstCost, ConstCost),\n\t\t\tbuiltinConfig(\"fstPair\",                  2, 1, false, ConstCost, ConstCost),\n\t\t\tbuiltinConfig(\"sndPair\",                  2, 1, false, ConstCost, ConstCost), // 30\n\t\t\tbuiltinConfig(\"chooseList\",               2, 3, true , ConstCost, ConstCost),\n\t\t\tbuiltinConfig(\"mkCons\",                   1, 2, false, ConstCost, ConstCost),\n\t\t\tbuiltinConfig(\"headList\",                 1, 1, false, ConstCost, ConstCost),\n\t\t\tbuiltinConfig(\"tailList\",                 1, 1, false, ConstCost, ConstCost),\n\t\t\tbuiltinConfig(\"nullList\",                 1, 1, false, ConstCost, ConstCost),\n\t\t\tbuiltinConfig(\"chooseData\",               1, 6, true , ConstCost, ConstCost),\n\t\t\tbuiltinConfig(\"constrData\",               0, 2, false, ConstCost, ConstCost),\n\t\t\tbuiltinConfig(\"mapData\",                  0, 1, false, ConstCost, ConstCost),\n\t\t\tbuiltinConfig(\"listData\",                 0, 1, false, ConstCost, ConstCost),\n\t\t\tbuiltinConfig(\"iData\",                    0, 1, false, ConstCost, ConstCost), // 40\n\t\t\tbuiltinConfig(\"bData\",                    0, 1, false, ConstCost, ConstCost),\n\t\t\tbuiltinConfig(\"unConstrData\",             0, 1, false, ConstCost, ConstCost),\n\t\t\tbuiltinConfig(\"unMapData\",                0, 1, false, ConstCost, ConstCost),\n\t\t\tbuiltinConfig(\"unListData\",               0, 1, false, ConstCost, ConstCost),\n\t\t\tbuiltinConfig(\"unIData\",                  0, 1, false, ConstCost, ConstCost),\n\t\t\tbuiltinConfig(\"unBData\",                  0, 1, false, ConstCost, ConstCost),\n\t\t\tbuiltinConfig(\"equalsData\",               0, 2, false, ConstCost, MinArgSizeCost),\n\t\t\tbuiltinConfig(\"mkPairData\",               0, 2, false, ConstCost, ConstCost),\n\t\t\tbuiltinConfig(\"mkNilData\",                0, 1, false, ConstCost, ConstCost),\n\t\t\tbuiltinConfig(\"mkNilPairData\",            0, 1, false, ConstCost, ConstCost), // 50\n\t\t\tbuiltinConfig(\"serialiseData\",            0, 1, false, Arg0SizeCost, Arg0SizeCost),\n\t\t\tbuiltinConfig(\"verifyEcdsaSecp256k1Signature\",   0, 3, false, ConstCost, ConstCost), // these parameters are from aiken, but the cardano-cli parameter file differ?\n\t\t\tbuiltinConfig(\"verifySchnorrSecp256k1Signature\", 0, 3, false, ConstCost, Arg1SizeCost), // these parameters are from, but the cardano-cli parameter file differs?\n\t\t];\n\t}\n)();\n\n/**\n * @internal\n */\nexport const UPLC_MACROS_OFFSET = UPLC_BUILTINS.length;\n\n/**\n * Index to helios-specific macro mapping\n * @internal\n */ \nexport const UPLC_MACROS = [\n\t\"compile\",\n\t\"finalize\",\n\t\"get_utxo\",\n\t\"now\",\n\t\"pick\",\n\t\"utxos_at\"\n];\n\n/**\n * Use this function to check cost-model parameters\n * @internal\n * @param {NetworkParams} networkParams\n */\nexport function dumpCostModels(networkParams) {\n\tfor (let builtin of UPLC_BUILTINS) {\n\t\tbuiltin.dumpCostModel(networkParams);\n\t}\n}\n\n/**\n * Returns index of a named builtin\n * Throws an error if builtin doesn't exist\n * @internal\n * @param {string} name \n * @returns \n */\nexport function findUplcBuiltin(name) {\n\tlet i = UPLC_BUILTINS.findIndex(info => { return BUILTIN_PREFIX + info.name == name });\n\tassert(i != -1, `${name} is not a real builtin`);\n\treturn i;\n}\n\n/**\n * Checks if a named builtin exists\n * @internal\n * @param {string} name \n * @param {boolean} strict - if true then throws an error if builtin doesn't exist\n * @returns {boolean}\n */\nexport function isUplcBuiltin(name, strict = false) {\n\tif (name.startsWith(BUILTIN_PREFIX)) {\n\t\tif (strict) {\n\t\t\tvoid this.findBuiltin(name); // assert that builtin exists\n\t\t}\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}\n\n\n///////////////////////\n// Section 10: Uplc AST\n///////////////////////\n\n/**\n * A Helios/Uplc Program can have different purposes\n * @typedef {\"testing\" | \"minting\" | \"spending\" | \"staking\" | \"endpoint\" | \"module\" | \"unknown\"} ScriptPurpose\n */\n\n/**\n * UplcValue is passed around by Plutus-core expressions.\n * @interface\n * @typedef {object} UplcValue\n * @property {(other: TransferUplcAst) => any} transfer\n * @property {bigint} int\n * @property {number[]} bytes\n * @property {string} string\n * @property {boolean} bool\n * @property {() => boolean} isPair\n * @property {UplcValue} first\n * @property {UplcValue} second\n * @property {() => boolean} isList\n * @property {UplcType} itemType\n * @property {UplcValue[]} list\n * @property {number} length only relevant for lists and maps\n * @property {() => boolean} isData\n * @property {UplcData} data\n * @property {() => string} toString\n * @property {(newSite: Site) => UplcValue} copy return a copy of the UplcValue at a different Site\n * @property {Site} site\n * @property {number} memSize size in words (8 bytes, 64 bits) occupied in target node\n * @property {number} flatSize size taken up in serialized UPLC program (number of bits)\n * @property {() => boolean} isAny\n * @property {(bitWriter: BitWriter) => void} toFlatValue\n * @property {(bitWriter: BitWriter) => void} toFlatValueInternal like toFlatValue(), but without the typebits\n * @property {() => string} typeBits\n * @property {() => UplcUnit} assertUnit\n */\n\n/** \n * Base cass for UplcValue implementations.\n */\nexport class UplcValueImpl {\n\t#site;\n\n\t/**\n\t * @param {Site} site \n\t */\n\tconstructor(site) {\n\t\tassert(site != undefined && (site instanceof Site));\n\t\tthis.#site = site;\n\t}\n\n    /**\n     * @type {Site}\n     */\n\tget site() {\n\t\treturn this.#site;\n\t}\n\n\t/**\n\t * @type {number}\n\t */\n\tget length() {\n\t\tthrow new Error(\"not a list nor a map\");\n\t}\n\n\t/**\n\t * @returns {boolean}\n\t */\n\tisAny() {\n\t\treturn false;\n\t}\n\n\t/**\n\t * @type {bigint}\n\t */\n\tget int() {\n\t\tthrow this.site.typeError(`expected a Plutus-core int, got '${this.toString()}'`);\n\t}\n\n\t/**\n\t * @type {number[]}\n\t */\n\tget bytes() {\n\t\tthrow this.site.typeError(`expected a Plutus-core bytearray, got '${this.toString()}'`);\n\t}\n\n\t/**\n\t * @type {string}\n\t */\n\tget string() {\n\t\tthrow this.site.typeError(`expected a Plutus-core string, got '${this.toString()}'`);\n\t}\n\t\n\t/**\n\t * @type {boolean}\n\t */\n\tget bool() {\n\t\tthrow this.site.typeError(`expected a Plutus-core bool, got '${this.toString()}'`);\n\t}\n\n\t/**\n\t * Distinguishes a pair from a mapItem\n\t * @returns {boolean}\n\t */\n\tisPair() {\n\t\treturn false;\n\t}\n\n\t/**\n\t * @type {UplcValue}\n\t */\n\tget first() {\n\t\tthrow this.site.typeError(`expected a Plutus-core pair, got '${this.toString()}'`);\n\t}\n\n\t/**\n\t * @type {UplcValue}\n\t */\n\tget second() {\n\t\tthrow this.site.typeError(`expected a Plutus-core pair, got '${this.toString()}'`);\n\t}\n\n\t/**\n\t * Distinguishes a list from a map\n\t * @returns {boolean}\n\t */\n\tisList() {\n\t\treturn false;\n\t}\n\n\t/**\n\t * @type {UplcType}\n\t */\n\tget itemType() {\n\t\tthrow this.site.typeError(\"not a list\");\n\t}\n\n\t/**\n\t * @type {UplcValue[]}\n\t */\n\tget list() {\n\t\tthrow this.site.typeError(`expected a Plutus-core list, got '${this.toString()}'`);\n\t}\n\n    /**\n     * @returns {boolean}\n     */\n\tisData() {\n\t\treturn false;\n\t}\n\n\t/**\n\t * @type {UplcData}\n\t */\n\tget data() {\n\t\tthrow this.site.typeError(`expected Plutus-core data, got '${this.toString()}'`);\n\t}\n\n\t/**\n\t * @returns {UplcUnit}\n\t */\n\tassertUnit() {\n\t\tthrow this.site.typeError(`expected Plutus-core unit, got '${this.toString}'`);\n\t}\n\n\t/**\n\t * @returns {string}\n\t */\n\ttypeBits() {\n\t\tthrow new Error(\"not yet implemented\");\n\t}\n\n\t/**\n\t * Encodes value without type header\n\t * @param {BitWriter} bitWriter\n\t */\n\ttoFlatValueInternal(bitWriter) {\n\t\tthrow new Error(\"not yet implemented\");\n\t}\n\n\t/**\n\t * Encodes value with plutus flat encoding.\n\t * Member function not named 'toFlat' as not to confuse with 'toFlat' member of terms.\n\t * @param {BitWriter} bitWriter\n\t */\n\ttoFlatValue(bitWriter) {\n\t\tbitWriter.write('1' + this.typeBits() + '0');\n\t\t\n\t\tthis.toFlatValueInternal(bitWriter);\n\t}\n}\n\n/**\n * Represents the typeBits of a UPLC primitive.\n */\nexport class UplcType {\n\t#typeBits;\n\n\t/**\n\t * @param {string} typeBits \n\t */\n\tconstructor(typeBits) {\n\t\tthis.#typeBits = typeBits;\n\t}\n\n\t/**\n\t * @param {TransferUplcAst} other \n\t * @returns {any}\n\t */\n\ttransfer(other) {\n\t\treturn other.transferUplcType(\n\t\t\tthis.#typeBits\n\t\t);\n\t}\n\n\t/**\n\t * @returns {string}\n\t */\n\ttypeBits() {\n\t\treturn this.#typeBits;\n\t}\n\n\t/**\n\t * @param {UplcValue} value \n\t * @returns {boolean}\n\t */\n\tisSameType(value) {\n\t\treturn this.#typeBits == value.typeBits();\n\t}\n\n\t/**\n\t * @returns {boolean}\n\t */\n\tisData() {\n\t\treturn this.#typeBits == UplcType.newDataType().#typeBits;\n\t}\n\n\t/**\n\t * @returns {boolean}\n\t */\n\tisDataPair() {\n\t\treturn this.#typeBits == UplcType.newDataPairType().#typeBits;\n\t}\n\n\t/**\n\t * @returns {UplcType}\n\t */\n\tstatic newDataType() {\n\t\treturn new UplcType(\"1000\");\n\t}\n\n\t/**\n\t * @returns {UplcType}\n\t */\n\tstatic newDataPairType() {\n\t\treturn new UplcType([\"0111\", \"0111\", \"0110\", \"1000\", \"1000\"].join(\"1\"));\n\t}\n\n\t/**\n\t * @param {number[]} lst\n\t * @returns {UplcType}\n\t */\n\tstatic fromNumbers(lst) {\n\t\treturn new UplcType(lst.map(x => byteToBitString(x, 4, false)).join(\"1\"));\n\t}\n}\n\n/**\n * @typedef {[null | string, UplcValue][]} UplcRawStack\n */\n\n/**\n * @typedef {{\n *\t onPrint: (msg: string) => Promise<void>\n *   onStartCall: (site: Site, rawStack: UplcRawStack) => Promise<boolean>\n *   onEndCall: (site: Site, rawStack: UplcRawStack) => Promise<void>\n *   onIncrCost: (name: string, isTerm: boolean, cost: Cost) => void\n * }} UplcRTECallbacks\n */\n\n/**\n * @internal\n * @typedef {UplcRTECallbacks & {\n *   macros?: {[name: string]: (rte: UplcRte, args: UplcValue[]) => Promise<UplcValue>}\n * }} UplcRTECallbacksInternal\n */\n\n/**\n * Configures the Uplc evaluator to print messages to `console`.\n * @type {UplcRTECallbacks}\n */\nexport const DEFAULT_UPLC_RTE_CALLBACKS = {\n\tonPrint: async (/** @type {string} */ msg) => {console.log(msg)},\n\tonStartCall: async (/** @type {Site} */ site, /** @type {UplcRawStack} */ rawStack) => {return false},\n\tonEndCall: async (/** @type {Site} */ site, /** @type {UplcRawStack} */ rawStack) => {return},\n\tonIncrCost: (/** @type {string} */ name, /** @type {boolean} */ isTerm, /** @type {Cost} */ cost) => {return},\n}\n\n/**\n * Plutus-core Runtime Environment is used for controlling the programming evaluation (eg. by a debugger)\n * @internal\n */\nexport class UplcRte {\n\t#callbacks;\n\n\t#networkParams;\n\n\t/**\n\t * this.onNotifyCalls is set to 'false' when the debugger is in step over-mode.\n\t * @type {boolean}\n\t */\n\t#notifyCalls;\n\n\t/**\n\t * this.onNotifyCalls is set back to true if the endCall is called with the same rawStack as the marker.\n\t * @type {null | UplcRawStack}\n\t */\n\t#marker;\n\n\t/**\n\t * @type {string[]}\n\t */\n\t#messages;\n\n\t/**\n\t * @type {string | RuntimeError}\n\t */\n\t#error;\n\n\t// cache the costs for quicker lookup\n\t#startupCost;\n\t#variableCost;\n\t#lambdaCost;\n\t#delayCost;\n\t#callCost;\n\t#constCost;\n\t#forceCost;\n\t#builtinCost;\n\n\n\t\n\t/**\n\t * @param {UplcRTECallbacksInternal} callbacks \n\t * @param {null | NetworkParams} networkParams\n\t */\n\tconstructor(callbacks = DEFAULT_UPLC_RTE_CALLBACKS, networkParams = null) {\n\t\tassertDefined(callbacks);\n\t\tthis.#callbacks = callbacks;\n\t\tthis.#networkParams = networkParams;\n\t\tthis.#notifyCalls = true;\n\t\tthis.#marker = null;\n\t\tthis.#messages = [];\n\t\tthis.#error = \"\";\n\n\t\tthis.#startupCost = networkParams?.plutusCoreStartupCost ?? {mem: 0n, cpu: 0n};\n\t\tthis.#variableCost = networkParams?.plutusCoreVariableCost ?? {mem: 0n, cpu: 0n};\n\t\tthis.#lambdaCost = networkParams?.plutusCoreLambdaCost ?? {mem: 0n, cpu: 0n};\n\t\tthis.#delayCost = networkParams?.plutusCoreDelayCost ?? {mem: 0n, cpu: 0n};\n\t\tthis.#callCost = networkParams?.plutusCoreCallCost ?? {mem: 0n, cpu: 0n};\n\t\tthis.#constCost = networkParams?.plutusCoreConstCost ?? {mem: 0n, cpu: 0n};\n\t\tthis.#forceCost = networkParams?.plutusCoreForceCost ?? {mem: 0n, cpu: 0n};\n\t\tthis.#builtinCost = networkParams?.plutusCoreBuiltinCost ?? {mem: 0n, cpu: 0n};\n\t}\n\n\t/**\n\t * @type {string[]}\n\t */\n\tget messages() {\n\t\treturn this.#messages;\n\t}\n\n\t/**\n\t * @returns {string}\n\t */\n\tpopLastMessage() {\n\t\treturn this.#messages.pop() ?? \"\";\n\t}\n\n\t/**\n\t * @returns {boolean}\n\t */\n\thasError() {\n\t\treturn this.#error != \"\";\n\t}\n\n\t/**\n\t * @returns {string | RuntimeError}\n\t */\n\tgetError() {\n\t\treturn this.#error;\n\t}\n\n\t/**\n\t * @param {string | RuntimeError} err \n\t * @returns {UplcValue}\n\t */\n\terror(err) {\n\t\tthis.#error = err;\n\t\treturn new UplcAny(Site.dummy());\n\t}\n\n\tthrowError() {\n\t\tif (this.#error instanceof RuntimeError) {\n\t\t\tthrow this.#error;\n\t\t} else if (this.#error != \"\") {\n\t\t\tthrow new RuntimeError(this.#error);\n\t\t}\n\t}\n\n\t/**\n\t * @param {string} name - for breakdown\n\t * @param {boolean} isTerm\n\t * @param {Cost} cost \n\t */\n\tincrCost(name, isTerm, cost) {\n\t\tif (cost.mem <= 0n || cost.cpu <= 0n) {\n\t\t\tthrow new Error(\"cost not increasing\");\n\t\t}\n\n\t\tif (this.#callbacks.onIncrCost !== undefined) {\n\t\t\tthis.#callbacks.onIncrCost(name, isTerm, cost);\n\t\t}\n\t}\n\n\tincrStartupCost() {\n\t\tif (this.#networkParams !== null) {\n\t\t\tthis.incrCost(\"startup\", true, this.#startupCost);\n\t\t}\n\t}\n\n\tincrVariableCost() {\n\t\tif (this.#networkParams !== null) {\n\t\t\tthis.incrCost(\"variable\", true, this.#variableCost);\n\t\t}\n\t}\n\n\tincrLambdaCost() {\n\t\tif (this.#networkParams !== null) {\n\t\t\tthis.incrCost(\"lambda\", true, this.#lambdaCost);\n\t\t}\n\t}\n\n\tincrDelayCost() {\n\t\tif (this.#networkParams !== null) {\n\t\t\tthis.incrCost(\"delay\", true, this.#delayCost);\n\t\t}\n\t}\n\n\tincrCallCost() {\n\t\tif (this.#networkParams !== null) {\n\t\t\tthis.incrCost(\"call\", true, this.#callCost);\n\t\t}\n\t}\n\n\tincrConstCost() {\n\t\tif (this.#networkParams !== null) {\n\t\t\tthis.incrCost(\"const\", true, this.#constCost);\n\t\t}\n\t}\n\n\tincrForceCost() {\n\t\tif (this.#networkParams !== null) {\n\t\t\tthis.incrCost(\"force\", true, this.#forceCost);\n\t\t}\n\t}\n\n\tincrBuiltinCost() {\n\t\tif (this.#networkParams !== null) {\n\t\t\tthis.incrCost(\"builtin\", true, this.#builtinCost);\n\t\t}\n\t}\n\n\t/**\n\t * @param {UplcBuiltin} fn\n\t * @param {UplcValue[]} args\n\t */\n\tcalcAndIncrCost(fn, ...args) {\n\t\tif (this.#networkParams !== null) {\n\t\t\tlet cost = fn.calcCost(this.#networkParams, ...args);\n\n\t\t\tthis.incrCost(fn.name, false, cost);\n\t\t}\n\t}\n\n\t/**\n\t * @param {string} name \n\t * @param {UplcValue[]} args \n\t * @returns {Promise<UplcValue>}\n\t */\n\tcallMacro(name, args) {\n\t\tconst macros = this.#callbacks.macros;\n\n\t\tif (!macros) {\n\t\t\t// use RuntimeError so that IR evalConstants method can fail safely when optimizing\n\t\t\tthrow new RuntimeError(\"macros not avaiable\");\n\t\t}\n\n\t\tconst macro = macros[name];\n\n\t\tif (!macro) {\n\t\t\tthrow new Error(`macro ${name} not found`);\n\t\t}\n\n\t\treturn macro(this, args);\n\t}\n\n\t/**\n\t * Gets variable using Debruijn index. Throws error here because UplcRTE is the stack root and doesn't contain any values.\n\t * @param {number} i \n\t * @returns {UplcValue}\n\t */\n\tget(i) {\n\t\tthrow new Error(\"variable index out of range\");\n\t}\n\n\t/**\n\t * Creates a child stack.\n\t * @param {UplcValue} value \n\t * @param {?string} valueName \n\t * @returns {UplcStack}\n\t */\n\tpush(value, valueName = null) {\n\t\treturn new UplcStack(this, value, valueName);\n\t}\n\n\t/**\n\t * Calls the print callback (or does nothing if print callback isn't defined)\n\t * @param {string | string[]} rawMsg \n\t * @returns {Promise<void>}\n\t */\n\tasync print(rawMsg) {\n\t\tconst lines = Array.isArray(rawMsg) ? rawMsg : [rawMsg];\n\n\t\tif (this.#callbacks.onPrint != undefined) {\n\t\t\tfor (let l of lines) {\n\t\t\t\tthis.#callbacks.onPrint(l);\n\t\t\t}\n\t\t}\n\n\t\tthis.#messages = this.#messages.concat(lines);\n\t}\n\n\t/**\n\t * Calls the onStartCall callback.\n\t * @param {Site} site \n\t * @param {UplcRawStack} rawStack \n\t * @returns {Promise<void>}\n\t */\n\tasync startCall(site, rawStack) {\n\t\tif (this.#notifyCalls && this.#callbacks.onStartCall != undefined) {\n\t\t\tlet stopNotifying = await this.#callbacks.onStartCall(site, rawStack);\n\t\t\tif (stopNotifying) {\n\t\t\t\tthis.#notifyCalls = false;\n\t\t\t\tthis.#marker = rawStack;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Calls the onEndCall callback if '#notifyCalls == true'.\n\t * '#notifyCalls' is set to true if 'rawStack == #marker'.\n\t * @param {Site} site \n\t * @param {UplcRawStack} rawStack \n\t * @param {UplcValue} result \n\t * @returns {Promise<void>}\n\t */\n\tasync endCall(site, rawStack, result) {\n\t\tif (!this.#notifyCalls && this.#marker == rawStack) {\n\t\t\tthis.#notifyCalls = true;\n\t\t\tthis.#marker = null;\n\t\t}\n\n\t\tif (this.#notifyCalls && this.#callbacks.onEndCall != undefined) {\n\t\t\trawStack = rawStack.slice();\n\t\t\trawStack.push([\"__result\", result]);\n\t\t\tawait this.#callbacks.onEndCall(site, rawStack);\n\t\t}\n\t}\n\n\t/**\n\t * @returns {UplcRawStack}\n\t */\n\ttoList() {\n\t\treturn [];\n\t}\n}\n\n/**\n * UplcStack contains a value that can be retrieved using a Debruijn index.\n */\nclass UplcStack {\n\t#parent;\n\t#value;\n\t#valueName;\n\n\t/**\n\t * @param {null | UplcStack | UplcRte} parent\n\t * @param {null | UplcValue} value\n\t * @param {null | string} valueName\n\t */\n\tconstructor(parent, value = null, valueName = null) {\n\t\tthis.#parent = parent;\n\t\tthis.#value = value;\n\t\tthis.#valueName = valueName;\n\t}\n\n\tincrStartupCost() {\n\t\tif (this.#parent !== null) {\n\t\t\tthis.#parent.incrStartupCost()\n\t\t}\n\t}\n\n\tincrVariableCost() {\n\t\tif (this.#parent !== null) {\n\t\t\tthis.#parent.incrVariableCost()\n\t\t}\n\t}\n\n\tincrLambdaCost() {\n\t\tif (this.#parent !== null) {\n\t\t\tthis.#parent.incrLambdaCost()\n\t\t}\n\t}\n\t\n\tincrDelayCost() {\n\t\tif (this.#parent !== null) {\n\t\t\tthis.#parent.incrDelayCost();\n\t\t}\n\t}\n\n\tincrCallCost() {\n\t\tif (this.#parent !== null) {\n\t\t\tthis.#parent.incrCallCost();\n\t\t}\n\t}\n\n\tincrConstCost() {\n\t\tif (this.#parent !== null) {\n\t\t\tthis.#parent.incrConstCost();\n\t\t}\n\t}\n\n\tincrForceCost() {\n\t\tif (this.#parent !== null) {\n\t\t\tthis.#parent.incrForceCost()\n\t\t}\n\t}\n\n\tincrBuiltinCost() {\n\t\tif (this.#parent !== null) {\n\t\t\tthis.#parent.incrBuiltinCost()\n\t\t}\n\t}\n\n\t/**\n\t * @param {UplcBuiltin} fn\n\t * @param {UplcValue[]} args\n\t */\n\tcalcAndIncrCost(fn, ...args) {\n\t\tif (this.#parent !== null) {\n\t\t\tthis.#parent.calcAndIncrCost(fn, ...args);\n\t\t}\n\t}\n\n\t/**\n\t * Gets a value using the Debruijn index. If 'i == 1' then the current value is returned.\n\t * Otherwise 'i' is decrement and passed to the parent stack.\n\t * @param {number} i \n\t * @returns {UplcValue}\n\t */\n\tget(i) {\n\t\ti -= 1;\n\n\t\tif (i == 0) {\n\t\t\tif (this.#value === null) {\n\t\t\t\tthrow new Error(\"Plutus-core stack value not set\");\n\t\t\t} else {\n\t\t\t\treturn this.#value;\n\t\t\t}\n\t\t} else {\n\t\t\tassert(i > 0);\n\t\t\tif (this.#parent === null) {\n\t\t\t\tthrow new Error(\"variable index out of range\");\n\t\t\t} else {\n\t\t\t\treturn this.#parent.get(i);\n\t\t\t}\n\t\t}\n\t}\n\t\n\t/**\n\t * \n\t * @param {string} name \n\t * @param {UplcValue[]} args \n\t * @returns {Promise<UplcValue>}\n\t */\n\tasync callMacro(name, args) {\n\t\tif (this.#parent) {\n\t\t\treturn await this.#parent.callMacro(name, args);\n\t\t} else {\n\t\t\tthrow new Error(\"parent not set, can't call macro\")\n\t\t}\n\t}\n\n\t/**\n\t * Instantiates a child stack.\n\t * @param {UplcValue} value \n\t * @param {?string} valueName \n\t * @returns {UplcStack}\n\t */\n\tpush(value, valueName = null) {\n\t\treturn new UplcStack(this, value, valueName);\n\t}\n\n\t/**\n\t * Calls the onPrint callback in the RTE (root of stack).\n\t * @param {string} msg \n\t * @returns {Promise<void>}\n\t */\n\tasync print(msg) {\n\t\tif (this.#parent !== null) {\n\t\t\tawait this.#parent.print(msg);\n\t\t}\n\t}\n\n\t/**\n\t * Calls the onStartCall callback in the RTE (root of stack).\n\t * @param {Site} site \n\t * @param {UplcRawStack} rawStack \n\t * @returns {Promise<void>}\n\t */\n\tasync startCall(site, rawStack) {\n\t\tif (this.#parent !== null) {\n\t\t\tawait this.#parent.startCall(site, rawStack);\n\t\t}\n\t}\n\n\t/** \n\t * Calls the onEndCall callback in the RTE (root of stack).\n\t * @param {Site} site\n\t * @param {UplcRawStack} rawStack\n\t * @param {UplcValue} result\n\t * @returns {Promise<void>}\n\t */\n\tasync endCall(site, rawStack, result) {\n\t\tif (this.#parent !== null) {\n\t\t\tawait this.#parent.endCall(site, rawStack, result);\n\t\t}\n\t}\n\n\t/** \n\t * @returns {UplcRawStack}\n\t */\n\ttoList() {\n\t\tlet lst = this.#parent !== null ? this.#parent.toList() : [];\n\t\tif (this.#value !== null) {\n\t\t\tlst.push([this.#valueName, this.#value]);\n\t\t}\n\t\treturn lst;\n\t}\n}\n\n/**\n * Allows doing a dummy eval of a UplcProgram in order to determine some non-changing properties (eg. the address fetched via the network in an EndpointProgram)\n * @internal\n * @implements {UplcValue}\n */\nexport class UplcAny extends UplcValueImpl {\n\t/**\n\t * @param {Site} site \n\t */\n\tconstructor(site) {\n\t\tsuper(site);\n\t}\n\n\t/**\n\t * Should never be part of the uplc ast\n\t * @param {TransferUplcAst} other \n\t * @returns {any}\n\t */\n\ttransfer(other) {\n\t\tthrow new Error(\"not expected to be part of Uplc ast\");\n\t}\n\n\t/**\n\t * @type {number}\n\t */\n\tget memSize() {\n\t\treturn 1;\n\t}\n\n\t/**\n\t * @type {number}\n\t */\n\tget flatSize() {\n\t\tthrow new Error(\"UplcAny shouldn't be part of Ast\");\n\t}\n\n\t/**\n\t * @param {Site} newSite \n\t * @returns {UplcValue}\n\t */\n\tcopy(newSite) {\n\t\treturn new UplcAny(\n\t\t\tnewSite\n\t\t);\n\t}\n\n\t/**\n\t * @returns {boolean}\n\t */\n\tisAny() {\n\t\treturn true;\n\t}\n\n\t/**\n\t * @type {UplcValue}\n\t */\n\tget first() {\n\t\treturn this;\n\t}\n\n\t/**\n\t * @type {UplcValue}\n\t */\n\tget second() {\n\t\treturn this;\n\t}\n\n\t/**\n     * @internal\n\t * @returns {UplcUnit}\n\t */\n\tassertUnit() {\n\t\treturn new UplcUnit(this.site);\n\t}\n\n\t/**\n\t * @returns {string}\n\t */\n\ttoString() {\n\t\treturn \"Any\";\n\t}\n}\n\n/**\n * Primitive equivalent of `IntData`.\n * @implements {UplcValue}\n */\nexport class UplcInt extends UplcValueImpl {\n\t/**\n\t * @readonly\n\t * @type {bigint}\n\t */\n\tvalue;\n\n\t/**\n\t * @readonly\n\t * @type {boolean}\n\t */\n\tsigned;\n\n\t/**\n\t * @param {Site} site\n\t * @param {bigint} value - supposed to be arbitrary precision\n\t * @param {boolean} signed - unsigned is only for internal use\n\t */\n\tconstructor(site, value, signed = true) {\n\t\tsuper(site);\n\t\tassert(typeof value == 'bigint', \"not a bigint\");\n\t\tthis.value = value;\n\t\tthis.signed = signed;\n\t}\n\n\t/**\n\t * Constructs a UplcInt without requiring a Site\n\t * @param {bigint | number} value\n\t * @returns {UplcInt} \n\t */\n\tstatic new(value) {\n\t\tif (typeof value == 'number') {\n\t\t\tassert(value % 1.0 == 0.0, \"must be whole number\");\n\t\t\treturn new UplcInt(Site.dummy(), BigInt(value));\n\t\t} else {\n\t\t\treturn new UplcInt(Site.dummy(), value);\n\t\t}\n\t}\n\n\t\n\n\t/**\n\t * @param {TransferUplcAst} other \n\t * @returns {any}\n\t */\n\ttransfer(other) {\n\t\treturn other.transferUplcInt(\n\t\t\tthis.site.transfer(other),\n\t\t\tthis.value,\n\t\t\tthis.signed\n\t\t);\n\t}\n\n\t/**\n\t * Creates a UplcInt wrapped in a UplcConst, so it can be used a term\n\t * @param {Site} site \n\t * @param {bigint} value \n\t * @returns \n\t */\n\tstatic newSignedTerm(site, value) {\n\t\treturn new UplcConst(new UplcInt(site, value, true));\n\t}\n\n\t/**\n\t * @type {number}\n\t */\n\tget memSize() {\n        return IntData.memSizeInternal(this.value);\n\t}\n\n\t/**\n\t * 4 for type, 7 for simple int, (7 + 1)*ceil(n/7) for large int\n\t * @type {number}\n\t */\n\tget flatSize() {\n\t\tconst n = this.toUnsigned().value.toString(2).length;\n\t\treturn 4 + ((n <= 7) ? 7 : Math.ceil(n / 7)*8);\n\t}\n\n\t/**\n\t * @param {Site} newSite \n\t * @returns {UplcInt}\n\t */\n\tcopy(newSite) {\n\t\treturn new UplcInt(newSite, this.value, this.signed);\n\t}\n\n\t/**\n\t * @type {bigint}\n\t */\n\tget int() {\n\t\treturn this.value;\n\t}\n\n\t/**\n\t * Parses a single byte in the Plutus-core byte-list representation of an int\n\t * @param {number} b \n\t * @returns {number}\n\t */\n\tstatic parseRawByte(b) {\n\t\treturn b & 0b01111111;\n\t}\n\n\t/**\n\t * Returns true if 'b' is the last byte in the Plutus-core byte-list representation of an int.\n\t * @param {number} b \n\t * @returns {boolean}\n\t */\n\tstatic rawByteIsLast(b) {\n\t\treturn (b & 0b10000000) == 0;\n\t}\n\n\t/**\n\t * Combines a list of Plutus-core bytes into a bigint (leading bit of each byte is ignored).\n     * Differs from bytesToBigInt in utils.js because only 7 bits are used from each byte.\n\t * @param {number[]} bytes\n\t * @returns {bigint}\n\t */\n\tstatic bytesToBigInt(bytes) {\n\t\tlet value = BigInt(0);\n\n\t\tlet n = bytes.length;\n\n\t\tfor (let i = 0; i < n; i++) {\n\t\t\tlet b = bytes[i];\n\n\t\t\t// 7 (not 8), because leading bit isn't used here\n\t\t\tvalue = value + BigInt(b) * ipow2(BigInt(i) * 7n);\n\t\t}\n\n\t\treturn value;\n\t}\n\n\t/**\n\t * Applies zigzag encoding\n\t * @example\n\t * (new UplcInt(Site.dummy(), -1n, true)).toUnsigned().int == 1n\n\t * @example\n\t * (new UplcInt(Site.dummy(), -1n, true)).toUnsigned().toSigned().int == -1n\n\t * @example\n\t * (new UplcInt(Site.dummy(), -2n, true)).toUnsigned().toSigned().int == -2n\n\t * @example\n\t * (new UplcInt(Site.dummy(), -3n, true)).toUnsigned().toSigned().int == -3n\n\t * @example\n\t * (new UplcInt(Site.dummy(), -4n, true)).toUnsigned().toSigned().int == -4n\n\t * @returns {UplcInt}\n\t */\n\ttoUnsigned() {\n\t\tif (this.signed) {\n\t\t\tif (this.value < 0n) {\n\t\t\t\treturn new UplcInt(this.site, -this.value*2n - 1n, false);\n\t\t\t} else {\n\t\t\t\treturn new UplcInt(this.site, this.value * 2n, false);\n\t\t\t}\n\t\t} else {\n\t\t\treturn this;\n\t\t}\n\t}\n\n\t/** \n\t * Unapplies zigzag encoding \n\t * @example\n\t * (new UplcInt(Site.dummy(), 1n, false)).toSigned().int == -1n\n\t * @returns {UplcInt}\n\t*/\n\ttoSigned() {\n\t\tif (this.signed) {\n\t\t\treturn this;\n\t\t} else {\n\t\t\tif (this.value % 2n == 0n) {\n\t\t\t\treturn new UplcInt(this.site, this.value / 2n, true);\n\t\t\t} else {\n\t\t\t\treturn new UplcInt(this.site, -(this.value + 1n) / 2n, true);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @returns {string}\n\t */\n\ttoString() {\n\t\treturn this.value.toString();\n\t}\n\n\t/**\n\t * @internal\n\t * @param {BitWriter} bitWriter\n\t */\n\ttoFlatInternal(bitWriter) {\n\t\tlet zigzag = this.toUnsigned();\n\t\tlet bitString = padZeroes(zigzag.value.toString(2), 7);\n\n\t\t// split every 7th\n\t\tlet parts = [];\n\t\tfor (let i = 0; i < bitString.length; i += 7) {\n\t\t\tparts.push(bitString.slice(i, i + 7));\n\t\t}\n\n\t\t// reverse the parts\n\t\tparts.reverse();\n\n\t\tfor (let i = 0; i < parts.length; i++) {\n\t\t\tif (i == parts.length - 1) {\n\t\t\t\t// last\n\t\t\t\tbitWriter.write('0' + parts[i]);\n\t\t\t} else {\n\t\t\t\tbitWriter.write('1' + parts[i]);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Encodes unsigned integer with plutus flat encoding.\n\t * Throws error if signed.\n\t * Used by encoding plutus core program version and debruijn indices.\n\t * @internal\n\t * @param {BitWriter} bitWriter \n\t */\n\ttoFlatUnsigned(bitWriter) {\n\t\tassert(!this.signed);\n\n\t\tthis.toFlatInternal(bitWriter);\n\t}\n\n\t/**\n\t * @returns {string}\n\t */\n\ttypeBits() {\n\t\treturn \"0000\";\n\t}\n\n\t/**\n\t * @internal\n\t * @param {BitWriter} bitWriter \n\t */\n\ttoFlatValueInternal(bitWriter) {\n\t\tassert(this.signed);\n\n\t\tthis.toFlatInternal(bitWriter);\n\t}\n}\n\n/**\n * Primitive equivalent of `ByteArrayData`.\n * @implements {UplcValue}\n */\nexport class UplcByteArray extends UplcValueImpl {\n\t#bytes;\n\n\t/**\n\t * @param {Site} site\n\t * @param {number[]} bytes\n\t */\n\tconstructor(site, bytes) {\n\t\tsuper(site);\n\t\tthis.#bytes = bytes;\n\t}\n\n\t/**\n\t * Construct a UplcByteArray without requiring a Site\n\t * @internal\n\t * @param {number[]} bytes \n\t * @returns {UplcByteArray}\n\t */\n\tstatic new(bytes) {\n\t\treturn new UplcByteArray(Site.dummy(), bytes);\n\t}\n\n\t/**\n\t * Creates new UplcByteArray wrapped in UplcConst so it can be used as a term.\n\t * @internal\n\t * @param {Site} site \n\t * @param {number[]} bytes \n\t * @returns {UplcConst}\n\t */\n\tstatic newTerm(site, bytes) {\n\t\treturn new UplcConst(new UplcByteArray(site, bytes));\n\t}\n\n\t/**\n\t * @param {TransferUplcAst} other \n\t * @returns {any}\n\t */\n\ttransfer(other) {\n\t\treturn other.transferUplcByteArray(\n\t\t\tthis.site.transfer(other),\n\t\t\tthis.#bytes\n\t\t)\n\t}\n\n\t/**\n\t * @type {number}\n\t */\n\tget memSize() {\n        return ByteArrayData.memSizeInternal(this.#bytes);\n\t}\n\n\t/**\n\t * 4 for header, 8 bits per byte, 8 bits per chunk of 256 bytes, 8 bits final padding\n\t * @type {number}\n\t */\n\tget flatSize() {\n\t\tconst n = this.#bytes.length;\n\n\t\treturn 4 + n*8 + Math.ceil(n/256)*8 + 8;\n\t}\n\n\t/**\n\t * @param {Site} newSite \n\t * @returns {UplcByteArray}\n\t */\n\tcopy(newSite) {\n\t\treturn new UplcByteArray(newSite, this.#bytes);\n\t}\n\n\t/**\n\t * @type {number[]}\n\t */\n\tget bytes() {\n\t\treturn this.#bytes.slice();\n\t}\n\n\t/**\n\t * Returns hex representation of byte array\n\t * @returns {string}\n\t */\n\ttoString() {\n\t\treturn `#${bytesToHex(this.#bytes)}`;\n\t}\n\n\t/**\n\t * @internal\n\t * @returns {string}\n\t */\n\ttypeBits() {\n\t\treturn \"0001\";\n\t}\n\n\t/**\n\t * @internal\n\t * @param {BitWriter} bitWriter\n\t */\n\ttoFlatValueInternal(bitWriter) {\n\t\tUplcByteArray.writeBytes(bitWriter, this.#bytes);\n\t}\n\n\t/**\n\t * Write a list of bytes to the bitWriter using flat encoding.\n\t * Used by UplcString, UplcByteArray and UplcDataValue\n\t * Equivalent to E_B* function in Plutus-core docs\n\t * @internal\n\t * @param {BitWriter} bitWriter \n\t * @param {number[]} bytes \n\t * @param {boolean} pad\n\t */\n\tstatic writeBytes(bitWriter, bytes, pad = true) {\n\t\tif (pad) {\n\t\t\tbitWriter.padToByteBoundary(true);\n\t\t}\n\n\t\t// the rest of this function is equivalent to E_C* function in Plutus-core docs\n\t\tlet n = bytes.length;\n\t\tlet pos = 0;\n\n\t\t// write chunks of 255\n\t\twhile (pos < n) {\n\t\t\t// each iteration is equivalent to E_C function in Plutus-core docs\n\n\t\t\tlet nChunk = Math.min(n - pos, 255);\n\n\t\t\t// equivalent to E_8 function in Plutus-core docs\n\t\t\tbitWriter.write(padZeroes(nChunk.toString(2), 8));\n\n\t\t\tfor (let i = pos; i < pos + nChunk; i++) {\n\t\t\t\tlet b = bytes[i];\n\n\t\t\t\t// equivalent to E_8 function in Plutus-core docs\n\t\t\t\tbitWriter.write(padZeroes(b.toString(2), 8));\n\t\t\t}\n\n\t\t\tpos += nChunk;\n\t\t}\n\n\t\tif (pad) {\n\t\t\tbitWriter.write('00000000');\n\t\t}\n\t}\n}\n\n/**\n * Primitive string value.\n * @implements {UplcValue}\n */\nexport class UplcString extends UplcValueImpl {\n\t#value;\n\n\t/**\n\t * @param {Site} site \n\t * @param {string} value \n\t */\n\tconstructor(site, value) {\n\t\tsuper(site);\n\t\tthis.#value = value;\n\t}\n\n\t/**\n\t * Constructs a UplcStrin without requiring a Site\n\t * @param {string} value \n\t * @returns {UplcString}\n\t */\n\tstatic new(value) {\n\t\treturn new UplcString(Site.dummy(), value);\n\t}\n\n\t/**\n\t * Creates a new UplcString wrapped with UplcConst so it can be used as a term.\n\t * @param {Site} site \n\t * @param {string} value \n\t * @returns {UplcConst}\n\t */\n\tstatic newTerm(site, value) {\n\t\treturn new UplcConst(new UplcString(site, value));\n\t}\n\n\t/**\n\t * @param {TransferUplcAst} other \n\t * @returns {any}\n\t */\n\ttransfer(other) {\n\t\treturn other.transferUplcString(\n\t\t\tthis.site.transfer(other),\n\t\t\tthis.#value\n\t\t);\n\t}\n\n\t/**\n\t * @type {number}\n\t */\n\tget memSize() {\n\t\treturn this.#value.length;\n\t}\n\n\t/**\n\t * @type {number}\n\t */\n\tget flatSize() {\n\t\tconst bytes = Array.from((new TextEncoder()).encode(this.#value));\n\t\treturn (new UplcByteArray(Site.dummy(), bytes)).flatSize\n\t}\n\n\t/**\n\t * @param {Site} newSite \n\t * @returns {UplcString}\n\t */\n\tcopy(newSite) {\n\t\treturn new UplcString(newSite, this.#value);\n\t}\n\n\t/**\n\t * @type {string}\n\t */\n\tget string() {\n\t\treturn this.#value;\n\t}\n\n\t/**\n\t * @returns {string}\n\t */\n\ttoString() {\n\t\treturn `\"${this.#value}\"`;\n\t}\n\n\t/**\n\t * @returns {string}\n\t */\n\ttypeBits() {\n\t\treturn \"0010\";\n\t}\n\n\t/**\n\t * @param {BitWriter} bitWriter\n\t */\n\ttoFlatValueInternal(bitWriter) {\n\t\tlet bytes = Array.from((new TextEncoder()).encode(this.#value));\n\n\t\tUplcByteArray.writeBytes(bitWriter, bytes);\n\t}\n}\n\n/**\n * Primitive unit value.\n * @implements {UplcValue}\n */\nexport class UplcUnit extends UplcValueImpl {\n\t/**\n\t * @param {Site} site \n\t */\n\tconstructor(site) {\n\t\tsuper(site);\n\t}\n\n\t/**\n\t * Constructs a UplcUnit without requiring a Site\n\t * @returns {UplcUnit}\n\t */\n\tstatic new () {\n\t\treturn new UplcUnit(Site.dummy());\n\t}\n\n\t/**\n\t * Creates a new UplcUnit wrapped with UplcConst so it can be used as a term\n\t * @param {Site} site \n\t * @returns {UplcConst}\n\t */\n\tstatic newTerm(site) {\n\t\treturn new UplcConst(new UplcUnit(site));\n\t}\n\n\t/**\n\t * @param {TransferUplcAst} other \n\t * @returns {any}\n\t */\n\ttransfer(other) {\n\t\treturn other.transferUplcUnit(\n\t\t\tthis.site.transfer(other)\n\t\t);\n\t}\n\n\t/**\n\t * @type {number}\n\t */\n\tget memSize() {\n\t\treturn 1;\n\t}\n\n\t/**\n\t * @type {number}\n\t */\n\tget flatSize() {\n\t\treturn 4;\n\t}\n\n\t/**\n\t * @param {Site} newSite \n\t * @returns {UplcUnit}\n\t */\n\tcopy(newSite) {\n\t\treturn new UplcUnit(newSite);\n\t}\n\n\ttoString() {\n\t\treturn \"()\";\n\t}\n\n\t/**\n\t * @returns {string}\n\t */\n\ttypeBits() {\n\t\treturn \"0011\";\n\t}\n\n\t/**\n\t * @param {BitWriter} bitWriter\n\t */\n\ttoFlatValueInternal(bitWriter) {\n\t}\n\n\t/**\n\t * @returns {UplcUnit}\n\t */\n\tassertUnit() {\n\t\treturn this;\n\t}\n}\n\n/**\n * JS/TS equivalent of the Helios language `Bool` type.\n * @implements {UplcValue}\n */\nexport class UplcBool extends UplcValueImpl {\n\t#value;\n\n\t/**\n\t * @param {Site} site \n\t * @param {boolean} value \n\t */\n\tconstructor(site, value) {\n\t\tsuper(site);\n\t\tthis.#value = value;\n\t}\n\n\t/**\n\t * Constructs a UplcBool without requiring a Site\n\t * @param {boolean} value \n\t * @returns {UplcBool}\n\t */\n\tstatic new(value) {\n\t\treturn new UplcBool(Site.dummy(), value);\n\t}\n\n\t/**\n\t * Creates a new UplcBool wrapped with UplcConst so it can be used as a term.\n\t * @param {Site} site \n\t * @param {boolean} value \n\t * @returns {UplcConst}\n\t */\n\tstatic newTerm(site, value) {\n\t\treturn new UplcConst(new UplcBool(site, value));\n\t}\n\n\t/**\n\t * @param {TransferUplcAst} other \n\t * @returns {any}\n\t */\n\ttransfer(other) {\n\t\treturn other.transferUplcBool(\n\t\t\tthis.site.transfer(other),\n\t\t\tthis.#value\n\t\t);\n\t}\n\n\t/**\n\t * @type {number}\n\t */\n\tget memSize() {\n\t\treturn 1;\n\t}\n\n\t/**\n\t * 4 for type, 1 for value\n\t * @type {number}\n\t */\n\tget flatSize() {\n\t\treturn 5;\n\t}\n\n\t/**\n\t * @param {Site} newSite \n\t * @returns {UplcBool}\n\t */\n\tcopy(newSite) {\n\t\treturn new UplcBool(newSite, this.#value);\n\t}\n\n\t/**\n\t * @type {boolean}\n\t */\n\tget bool() {\n\t\treturn this.#value;\n\t}\n\n\t/**\n\t * @type {UplcData}\n\t */\n\tget data() {\n\t\treturn new ConstrData(this.#value ? 1 : 0, []);\n\t}\n\n\t/**\n\t * @returns {string}\n\t */\n\ttoString() {\n\t\treturn this.#value ? \"true\" : \"false\";\n\t}\n\n\t/**\n\t * @returns {string}\n\t */\n\ttypeBits() {\n\t\treturn '0100';\n\t}\n\n\t/**\n\t * @param {BitWriter} bitWriter\n\t */\n\ttoFlatValueInternal(bitWriter) {\n\t\tif (this.#value) {\n\t\t\tbitWriter.write('1');\n\t\t} else {\n\t\t\tbitWriter.write('0');\n\t\t}\n\t}\n}\n\n/**\n * Primitive pair value.\n * @implements {UplcValue}\n */\nexport class UplcPair extends UplcValueImpl {\n\t#first;\n\t#second;\n\n\t/**\n\t * @param {Site} site\n\t * @param {UplcValue} first\n\t * @param {UplcValue} second\n\t */\n\tconstructor(site, first, second) {\n\t\tsuper(site);\n\t\tthis.#first = first;\n\t\tthis.#second = second;\n\t}\n\n\t/**\n\t * Constructs a UplcPair without requiring a Site\n\t * @param {UplcValue} first \n\t * @param {UplcValue} second \n\t * @returns {UplcPair}\n\t */\n\tstatic new(first, second) {\n\t\treturn new UplcPair(Site.dummy(), first, second);\n\t}\n\n\t/**\n\t * Creates a new UplcBool wrapped with UplcConst so it can be used as a term.\n\t * @param {Site} site \n\t * @param {UplcValue} first\n\t * @param {UplcValue} second\n\t * @returns {UplcConst}\n\t */\n\tstatic newTerm(site, first, second) {\n\t\treturn new UplcConst(new UplcPair(site, first, second));\n\t}\n\n\t/**\n\t * @param {TransferUplcAst} other \n\t * @returns {any}\n\t */\n\ttransfer(other) {\n\t\treturn other.transferUplcPair(\n\t\t\tthis.site.transfer(other),\n\t\t\tthis.#first.transfer(other),\n\t\t\tthis.#second.transfer(other)\n\t\t);\n\t}\n\n\t/**\n\t * @type {number}\n\t */\n\tget memSize() {\n\t\treturn this.#first.memSize + this.#second.memSize;\n\t}\n\n\t/**\n\t * 16 additional type bits on top of #first and #second bits\n\t */\n\tget flatSize() {\n\t\treturn 16 + this.#first.flatSize + this.#second.flatSize;\n\t}\n\n\t/**\n\t * @param {Site} newSite \n\t * @returns {UplcValue}\n\t */\n\tcopy(newSite) {\n\t\treturn new UplcPair(newSite, this.#first, this.#second);\n\t}\n\n\t/**\n\t * @returns {string}\n\t */\n\ttoString() {\n\t\treturn `(${this.#first.toString()}, ${this.#second.toString()})`;\n\t}\n\n\t/**\n\t * @returns {boolean}\n\t */\n\tisPair() {\n\t\treturn true;\n\t}\n\n\t/**\n\t * @type {UplcValue}\n\t */\n\tget first() {\n\t\treturn this.#first;\n\t}\n\n\t/**\n\t * @type {UplcValue}\n\t */\n\tget second() {\n\t\treturn this.#second;\n\t}\n\n\t/**\n\t * @type {UplcData}\n\t */\n\tget key() {\n\t\treturn this.#first.data;\n\t}\n\n\t/**\n\t * @type {UplcData}\n\t */\n\tget value() {\n\t\treturn this.#second.data;\n\t}\n\n\t/**\n\t * @returns {string}\n\t */\n\ttypeBits() {\n\t\t// 7 (7 (6) (fst)) (snd)\n\t\treturn [\"0111\", \"0111\", \"0110\", this.#first.typeBits(), this.#second.typeBits()].join(\"1\");\n\t}\n\n\t/**\n\t * @param {BitWriter} bitWriter\n\t */\n\ttoFlatValueInternal(bitWriter) {\n\t\tthis.#first.toFlatValueInternal(bitWriter);\n\t\tthis.#second.toFlatValueInternal(bitWriter);\n\t}\n}\n\n/** \n * Plutus-core list value class.\n * Only used during evaluation.\n * @implements {UplcList}\n*/\nexport class UplcList extends UplcValueImpl {\n\t#itemType;\n\t#items;\n\n\t/**\n\t * @param {Site} site \n\t * @param {UplcType} itemType \n\t * @param {UplcValue[]} items \n\t */\n\tconstructor(site, itemType, items) {\n\t\tsuper(site);\n\t\tthis.#itemType = itemType;\n\t\tthis.#items = items;\n\t}\n\n\t/**\n\t * Constructs a UplcList without requiring a Site\n\t * @param {UplcType} type \n\t * @param {UplcValue[]} items \n\t */\n\tstatic new(type, items) {\n\t\treturn new UplcList(Site.dummy(), type, items);\n\t}\n\n\t/**\n\t * @param {TransferUplcAst} other \n\t * @returns {any}\n\t */\n\ttransfer(other) {\n\t\treturn other.transferUplcList(\n\t\t\tthis.site.transfer(other),\n\t\t\tthis.#itemType.transfer(other),\n\t\t\tthis.#items.map(item => item.transfer(other))\n\t\t);\n\t}\n\n\t/**\n\t * @type {number}\n\t */\n\tget length() {\n\t\treturn this.#items.length;\n\t}\n\n\t/**\n\t * @type {number}\n\t */\n\tget memSize() {\n\t\tlet sum = 0;\n\n\t\tfor (let item of this.#items) {\n\t\t\tsum += item.copy(this.site).memSize;\n\t\t}\n\n\t\treturn sum;\n\t}\n\n\t/**\n\t * 10 + nItemType type bits, value bits of each item (must be corrected by itemType)\n\t * @type {number}\n\t */\n\tget flatSize() {\n\t\tconst nItemType = this.#itemType.typeBits.length;\n\n\t\treturn 10 + nItemType + this.#items.reduce((prev, item) => item.flatSize - nItemType + prev, 0);\n\t}\n\n\t/**\n\t * @type {UplcType}\n\t */\n\tget itemType() {\n\t\treturn this.#itemType;\n\t}\n\n\t/**\n\t * @param {Site} newSite\n\t * @returns {UplcList}\n\t */\n\tcopy(newSite) {\n\t\treturn new UplcList(newSite, this.#itemType, this.#items.slice());\n\t}\n\n\t/**\n\t * @returns {boolean}\n\t */\n\tisList() {\n\t\treturn true;\n\t}\n\n\t/**\n\t * @type {UplcValue[]}\n\t */\n\tget list() {\n\t\treturn this.#items.slice();\n\t}\n\n\t/**\n\t * @returns {boolean}\n\t */\n\tisDataList() {\n\t\treturn this.#itemType.isData();\n\t}\n\t\n\t/**\n\t * @returns {boolean}\n\t */\n\tisDataMap() {\n\t\treturn this.#itemType.isDataPair();\n\t}\n\n\t/**\n\t * @returns {string}\n\t */\n\ttoString() {\n\t\treturn `[${this.#items.map(item => item.toString()).join(\", \")}]`;\n\t}\n\n\t/**\n\t * @returns {string}\n\t */\n\ttypeBits() {\n\t\t// 7 (5) (type bits of content)\n\t\treturn [\"0111\", \"0101\", this.#itemType.typeBits()].join(\"1\");\n\t}\n\n\t/**\n\t * @param {BitWriter} bitWriter \n\t */\n\ttoFlatValueInternal(bitWriter) {\n\t\tfor (let item of this.#items) {\n\t\t\tbitWriter.write('1');\n\n\t\t\titem.copy(this.site).toFlatValueInternal(bitWriter);\n\t\t}\n\n\t\tbitWriter.write('0');\n\t}\n}\n\n/**\n * `UplcValue` that wraps a `UplcData` instance.\n * @implements {UplcValue}\n */\nexport class UplcDataValue extends UplcValueImpl {\n\t#data;\n\n\t/**\n\t * @param {Site} site \n\t * @param {UplcData} data \n\t */\n\tconstructor(site, data) {\n\t\tsuper(site);\n\t\tthis.#data = assertDefined(data);\n\t\tassert(data instanceof UplcData);\n\t}\n\n\t/**\n\t * @param {TransferUplcAst} other \n\t * @returns {any}\n\t */\n\ttransfer(other) {\n\t\treturn other.transferUplcDataValue(\n\t\t\tthis.site.transfer(other),\n\t\t\tthis.#data.transfer(other)\n\t\t);\n\t}\n\n\t/**\n\t * @type {number}\n\t */\n\tget memSize() {\n\t\treturn this.#data.memSize;\n\t}\n\n\t/**\n\t * Same number of header bits as UplcByteArray\n\t * @type {number}\n\t */\n\tget flatSize() {\n\t\tconst bytes = this.#data.toCbor();\n\n\t\treturn (new UplcByteArray(Site.dummy(), bytes)).flatSize;\n\t}\n\n\t/**\n\t * @param {Site} newSite \n\t * @returns {UplcDataValue}\n\t */\n\tcopy(newSite) {\n\t\treturn new UplcDataValue(newSite, this.#data);\n\t}\n\n\t/**\n\t * @returns {boolean}\n\t */\n\tisData() {\n\t\treturn true;\n\t}\n\n\t/**\n\t * @type {UplcData}\n\t */\n\tget data() {\n\t\treturn this.#data;\n\t}\n\n\t/**\n\t * @returns {string}\n\t */\n\ttoString() {\n\t\treturn `data(${this.#data.toString()})`;\n\t}\n\n\t/**\n\t * @returns {string}\n\t */\n\ttypeBits() {\n\t\treturn UplcType.newDataType().typeBits();\n\t}\n\n\t/**\n\t * @param {BitWriter} bitWriter\n\t */\n\ttoFlatValueInternal(bitWriter) {\n\t\tUplcByteArray.writeBytes(bitWriter, this.#data.toCbor());\n\t}\n\n\t/**\n\t * @param {UplcDataValue | UplcData} data \n\t * @returns {UplcData}\n\t */\n\tstatic unwrap(data) {\n\t\tif (data instanceof UplcDataValue) {\n\t\t\treturn data.data;\n\t\t} else {\n\t\t\treturn data;\n\t\t}\n\t}\n}\n\n/**\n * Base class of Plutus-core terms\n */\nexport class UplcTerm {\n\t#site;\n\t#type;\n\n\t/**\n\t * @param {Site} site\n\t * @param {number} type\n\t */\n\tconstructor(site, type) {\n\t\tassert(site != undefined && site instanceof Site);\n\t\tthis.#site = site;\n\t\tthis.#type = type;\n\t}\n\n\t/**\n\t * @type {number}\n\t */\n\tget type() {\n\t\treturn this.#type;\n\t}\n\n\t/**\n\t * @type {Site}\n\t */\n\tget site() {\n\t\treturn this.#site;\n\t}\n\n\t/**\n\t * @param {TransferUplcAst} other \n\t * @returns {any}\n\t */\n\ttransfer(other) {\n\t\tthrow new Error(\"not yet implemented\");\n\t}\n\n\t/**\n\t * Generic term toString method\n\t * @returns {string}\n\t */\n\ttoString() {\n\t\treturn `(Term ${this.#type.toString()})`;\n\t}\n\t\n\t/**\n\t * Writes bits of flat encoded Plutus-core terms to bitWriter. Doesn't return anything.\n\t * @internal\n\t * @param {BitWriter} bitWriter \n\t * @param {null | Map<string, number>} codeMapFileIndices\n\t */\n\ttoFlat(bitWriter, codeMapFileIndices = null) {\n\t\tthrow new Error(\"not yet implemented\");\n\t}\n}\n\n/**\n * Plutus-core variable ref term (index is a Debruijn index)\n */\nexport class UplcVariable extends UplcTerm {\n\t/**\n\t * @readonly\n\t * @type {UplcInt}\n\t */\n\tindex;\n\n\t/**\n\t * @param {Site} site \n\t * @param {UplcInt} index \n\t */\n\tconstructor(site, index) {\n\t\tsuper(site, 0);\n\t\tthis.index = index;\n\t}\n\n\t/**\n\t * @param {TransferUplcAst} other \n\t */\n\ttransfer(other) {\n\t\treturn other.transferUplcVariable(\n\t\t\tthis.site.transfer(other),\n\t\t\tthis.index.transfer(other)\n\t\t);\n\t}\n\n\t/**\n\t * @returns {string}\n\t */\n\ttoString() {\n\t\treturn `x${this.index.toString()}`;\n\t}\n\n\t/**\n\t * @internal\n\t * @param {BitWriter} bitWriter \n\t * @param {null | Map<string, number>} codeMapFileIndices\n\t */\n\ttoFlat(bitWriter, codeMapFileIndices = null) {\n\t\tbitWriter.write('0000');\n\t\tthis.index.toFlatUnsigned(bitWriter);\n\t}\n\n\t/**\n\t * @internal\n\t * @param {UplcRte} rte\n\t * @param {UplcFrame[]} stack\n\t * @param {ComputingState} state\n\t * @returns {CekState}\n\t */\n\tcomputeCek(rte, stack, state) {\n\t\trte.incrVariableCost();\n        const i = Number(this.index.value);\n\n\t\tconst v = state.env.values[state.env.values.length - i];\n\n        return {reducing: v};\n\t}\n}\n\n/**\n * Plutus-core delay term.\n */\nexport class UplcDelay extends UplcTerm {\n\t/**\n\t * @readonly\n\t * @type {UplcTerm}\n\t */\n\texpr;\n\n\t/**\n\t * @param {Site} site \n\t * @param {UplcTerm} expr \n\t */\n\tconstructor(site, expr) {\n\t\tsuper(site, 1);\n\t\tthis.expr = expr;\n\t}\n\n\t/**\n\t * @param {TransferUplcAst} other \n\t * @returns {any}\n\t */\n\ttransfer(other) {\n\t\treturn other.transferUplcDelay(\n\t\t\tthis.site.transfer(other),\n\t\t\tthis.expr.transfer(other)\n\t\t);\n\t}\n\n\t/**\n\t * @returns {string} \n\t */\n\ttoString() {\n\t\treturn `(delay ${this.expr.toString()})`;\n\t}\n\n\t/**\n\t * @internal\n\t * @param {BitWriter} bitWriter \n\t * @param {null | Map<string, number>} codeMapFileIndices\n\t */\n\ttoFlat(bitWriter, codeMapFileIndices = null) {\n\t\tbitWriter.write('0001');\n\t\tthis.expr.toFlat(bitWriter, codeMapFileIndices);\n\t}\n\n\t/**\n\t * @internal\n\t * @param {UplcRte} rte \n\t * @param {UplcFrame[]} stack\n\t * @param {ComputingState} state \n\t * @returns {CekState}\n\t */\n\tcomputeCek(rte, stack, state) {\n\t\trte.incrDelayCost();\n\t\treturn {reducing: new UplcDelayWithEnv(this, state.env)};\n\t}\n}\n\n/**\n * Plutus-core lambda term\n */\nexport class UplcLambda extends UplcTerm {\n\t/**\n\t * @readonly\n\t * @type {UplcTerm}\n\t */\n\texpr;\n\n\t#argName;\n\n\t/**\n\t * @param {Site} site\n\t * @param {UplcTerm} expr\n\t * @param {null | string} argName\n\t */\n\tconstructor(site, expr, argName = null) {\n\t\tsuper(site, 2);\n\t\tthis.expr = expr;\n\t\tthis.#argName = argName;\n\t}\n\n\t/**\n\t * @param {TransferUplcAst} other \n\t * @returns {any}\n\t */\n\ttransfer(other) {\n\t\treturn other.transferUplcLambda(\n\t\t\tthis.site.transfer(other),\n\t\t\tthis.expr.transfer(other),\n\t\t\tthis.#argName\n\t\t);\n\t}\n\n\t/**\n\t * Returns string with unicode lambda symbol\n\t * @returns {string}\n\t */\n\ttoString() {\n\t\treturn `(\\u039b${this.#argName !== null ? \" \" + this.#argName + \" ->\" : \"\"} ${this.expr.toString()})`;\n\t}\n\n\t/**\n\t * @internal\n\t * @param {BitWriter} bitWriter \n\t * @param {null | Map<string, number>} codeMapFileIndices\n\t */\n\ttoFlat(bitWriter, codeMapFileIndices = null) {\n\t\tbitWriter.write('0010');\n\t\tthis.expr.toFlat(bitWriter, codeMapFileIndices);\n\t}\n\n\t/**\n\t * @internal\n\t * @param {UplcRte} rte \n\t * @param {UplcFrame[]} stack\n\t * @param {ComputingState} state \n\t * @returns {CekState}\n\t */\n\tcomputeCek(rte, stack, state) {\n\t\trte.incrLambdaCost();\n\t\treturn {reducing: new UplcLambdaWithEnv(this, state.env)};\n\t}\n}\n\n/**\n * Plutus-core function application term (i.e. function call)\n */\nexport class UplcCall extends UplcTerm {\n\t/**\n\t * @readonly\n\t * @type {UplcTerm}\n\t */\n\tfn;\n\n\t/**\n\t * @readonly\n\t * @type {UplcTerm}\n\t */\n\targ;\n\n\t/**\n\t * @param {Site} site\n\t * @param {UplcTerm} fn\n\t * @param {UplcTerm} arg\n\t */\n\tconstructor(site, fn, arg) {\n\t\tsuper(site, 3);\n\t\tthis.fn = fn;\n\t\tthis.arg = arg;\n\t}\n\n\t/**\n\t * @internal\n\t * @type {Site}\n\t */\n\tget callSite() {\n\t\treturn this.site;\n\t}\n\n\t/**\n\t * @param {TransferUplcAst} other\n\t * @returns {any}\n\t */\n\ttransfer(other) {\n\t\treturn other.transferUplcCall(\n\t\t\tthis.site.transfer(other),\n\t\t\tthis.fn.transfer(other),\n\t\t\tthis.arg.transfer(other)\n\t\t);\n\t}\n\n\t/**\n\t * @returns {string}\n\t */\n\ttoString() {\n\t\treturn `[${this.fn.toString()} ${this.arg.toString()}]`;\n\t}\n\n\t/**\n\t * @internal\n\t * @param {BitWriter} bitWriter \n\t * @param {null | Map<string, number>} codeMapFileIndices\n\t */\n\ttoFlat(bitWriter, codeMapFileIndices = null) {\n\t\tif (codeMapFileIndices && this.site.codeMapSite) {\n\t\t\tbitWriter.write('1011');\n\t\t\t\n\t\t\tconst site = this.site.codeMapSite;\n\n\t\t\t(new UplcInt(site, BigInt(assertDefined(codeMapFileIndices.get(site.src.name))), false)).toFlatUnsigned(bitWriter);\n\t\t\t(new UplcInt(site, BigInt(site.startPos), false)).toFlatUnsigned(bitWriter);\n\t\t} else {\n\t\t\tbitWriter.write('0011');\n\t\t}\n\n\t\tthis.fn.toFlat(bitWriter, codeMapFileIndices);\n\t\tthis.arg.toFlat(bitWriter, codeMapFileIndices);\n\t}\n\n\t/**\n\t * @internal\n\t * @param {UplcRte} rte \n\t * @param {UplcFrame[]} stack \n\t * @param {ComputingState} state \n\t * @returns {CekState}\n\t */\n\tcomputeCek(rte, stack, state) {\n\t\trte.incrCallCost();\n\n        stack.push(new PreCallFrame(this, state.env));\n        return {computing: this.fn, env: state.env};\n\t}\n}\n\n/**\n * Plutus-core const term (i.e. a literal in conventional sense)\n */\nexport class UplcConst extends UplcTerm {\n\t/**\n\t * @readonly\n\t * @type {UplcValue}\n\t */\n\tvalue;\n\n\t/**\n\t * @param {UplcValue} value \n\t */\n\tconstructor(value) {\n\t\tsuper(value.site, 4);\n\n\t\tthis.value = value;\n\n\t\tif (value instanceof UplcInt) {\n\t\t\tassert(value.signed);\n\t\t}\n\t}\n\n\tget flatSize() {\n\t\treturn 4 + this.value.flatSize;\n\t}\n\n\t/**\n\t * @param {TransferUplcAst} other \n\t * @returns {any}\n\t */\n\ttransfer(other) {\n\t\treturn other.transferUplcConst(\n\t\t\tthis.value.transfer(other)\n\t\t);\n\t}\n\n\t/**\n\t * @returns {string}\n\t */\n\ttoString() {\n\t\treturn this.value.toString();\n\t}\n\n\t/**\n\t * @internal\n\t * @param {BitWriter} bitWriter \n\t * @param {null | Map<string, number>} codeMapFileIndices\n\t */\n\ttoFlat(bitWriter, codeMapFileIndices = null) {\n\t\tbitWriter.write('0100');\n\t\tthis.value.toFlatValue(bitWriter);\n\t}\n\n\t/**\n\t * @internal\n\t * @param {UplcRte} rte \n\t * @param {UplcFrame[]} stack\n\t * @param {ComputingState} state \n\t * @returns {CekState}\n\t */\n\tcomputeCek(rte, stack, state) {\n\t\trte.incrConstCost();\n        return {reducing: this};\n\t}\n\n\t/**\n\t * @internal\n\t * @param {UplcRte} rte \n\t * @param {UplcFrame[]} stack \n\t * @param {PreCallFrame} frame \n\t * @returns {CekState}\n\t */\n\treducePreCallFrame(rte, stack, frame) {\n\t\tif (this.value.isAny()) {\n\t\t\treturn {reducing: this};\n\t\t} else {\n\t\t\tthrow new Error(\"UplcCall term expects UplcLambdaWithEnv or UplcBuiltin for first arg\");\n\t\t}\n\t}\n\n\t/**\n\t * @internal\n\t * @param {UplcRte} rte \n\t * @param {UplcFrame[]} stack \n\t * @param {ForceFrame} frame \n\t * @returns {CekState}\n\t */\n\treduceForceFrame(rte, stack, frame) {\n\t\tif (this.value.isAny()) {\n\t\t\treturn {reducing: this};\n\t\t} else {\n\t\t\tthrow new Error(`unexpected ${this.toString()} term in force`);\n\t\t}\n\t}\n}\n\n/**\n * Plutus-core force term\n */\nexport class UplcForce extends UplcTerm {\n\t/**\n\t * @readonly\n\t */\n\texpr;\n\n\t/**\n\t * @param {Site} site\n\t * @param {UplcTerm} expr\n\t */\n\tconstructor(site, expr) {\n\t\tsuper(site, 5);\n\t\tthis.expr = expr;\n\t}\n\n\t/**\n\t * @param {TransferUplcAst} other \n\t * @returns {any}\n\t */\n\ttransfer(other) {\n\t\treturn other.transferUplcForce(\n\t\t\tthis.site.transfer(other),\n\t\t\tthis.expr.transfer(other)\n\t\t);\n\t}\n\n\t/**\n\t * @returns {string}\n\t */\n\ttoString() {\n\t\treturn `(force ${this.expr.toString()})`;\n\t}\n\n\t/**\n\t * @internal\n\t * @param {BitWriter} bitWriter \n\t * @param {null | Map<string, number>} codeMapFileIndices\n\t */\n\ttoFlat(bitWriter, codeMapFileIndices = null) {\n\t\tif (codeMapFileIndices && this.site.codeMapSite) {\n\t\t\tbitWriter.write('1101');\n\t\t\t\n\t\t\tconst site = this.site.codeMapSite;\n\t\t\t(new UplcInt(site, BigInt(assertDefined(codeMapFileIndices.get(site.src.name))), false)).toFlatUnsigned(bitWriter);\n\t\t\t(new UplcInt(site, BigInt(site.startPos), false)).toFlatUnsigned(bitWriter);\n\t\t} else {\n\t\t\tbitWriter.write('0101');\n\t\t}\n\t\t\n\t\tthis.expr.toFlat(bitWriter, codeMapFileIndices);\n\t}\n\n\t/**\n\t * @internal\n\t * @param {UplcRte} rte \n\t * @param {UplcFrame[]} stack \n\t * @param {ComputingState} state \n\t * @returns {CekState}\n\t */\n\tcomputeCek(rte, stack, state) {\n\t\trte.incrForceCost();\n\t\tstack.push(new ForceFrame(this, state.env));\n       \treturn {computing: this.expr, env: state.env};\n\t}\n}\n\n/**\n * Plutus-core error term\n */\nexport class UplcError extends UplcTerm {\n\t/** 'msg' is only used for debuggin and doesn't actually appear in the final program */\n\t#msg;\n\n\t/**\n\t * @param {Site} site \n\t * @param {string} msg \n\t */\n\tconstructor(site, msg = \"\") {\n\t\tsuper(site, 6);\n\t\tthis.#msg = msg;\n\t}\n\n\t/**\n\t * @param {TransferUplcAst} other \n\t * @returns {any}\n\t */\n\ttransfer(other) {\n\t\treturn other.transferUplcError(\n\t\t\tthis.site.transfer(other),\n\t\t\tthis.#msg\n\t\t);\n\t}\n\n\t/**\n\t * @returns {string}\n\t */\n\ttoString() {\n\t\treturn \"(error)\";\n\t}\n\n\t/**\n\t * @internal\n\t * @param {BitWriter} bitWriter \n\t * @param {null | Map<string, number>} codeMapFileIndices\n\t */\n\ttoFlat(bitWriter, codeMapFileIndices = null) {\n\t\tbitWriter.write('0110');\n\t}\n\n\t/**\n\t * @internal\n\t * @param {UplcRte} rte \n\t * @param {UplcFrame[]} stack \n\t * @param {ComputingState} state \n\t * @returns {CekState}\n\t */\n\tcomputeCek(rte, stack, state) {\n\t\treturn {error: \"\", env: state.env};\n\t}\n}\n\n/**\n * Plutus-core builtin function ref term\n */\nexport class UplcBuiltin extends UplcTerm {\n\t/** \n\t * Unknown builtins stay integers\n\t * @type {string | number}\n\t */\n\t#name;\n\n\t/**\n\t * @type {number}\n\t */\n\t#forceCount;\n\n\t/**\n\t * @type {number}\n\t */\n\t#nArgs;\n\n\t/**\n\t * @param {Site} site \n\t * @param {string | number} name \n\t */\n\tconstructor(site, name) {\n\t\tsuper(site, 7);\n\t\tthis.#name = assertDefined(name);\n\t\tthis.#forceCount = (typeof this.#name === \"string\" && !this.#name.startsWith(\"macro__\")) ? UPLC_BUILTINS[findUplcBuiltin(BUILTIN_PREFIX + this.#name)].forceCount : 0;\n\t\t\n\t\tif (this.isMacro()) {\n\t\t\tthis.#nArgs = -1;\n\t\t} else if (typeof this.#name == \"string\") {\n\t\t\tconst i =  UPLC_BUILTINS.findIndex(info => info.name == this.#name);\n\n\t\t\tassert(i != -1);\n\n\t\t\tthis.#nArgs = UPLC_BUILTINS[i].nArgs;\n\t\t} else {\n\t\t\tthrow new Error(\"unknown number of arguments\");\n\t\t}\n\t}\n\n\t/**\n\t * @param {TransferUplcAst} other \n\t * @returns {any}\n\t */\n\ttransfer(other) {\n\t\treturn other.transferUplcBuiltin(\n\t\t\tthis.site.transfer(other),\n\t\t\tthis.#name\n\t\t);\n\t}\n\n\t/**\n\t * @type {string}\n\t */\n\tget name() {\n\t\treturn this.#name.toString();\n\t}\n\n\t/**\n\t * @type {number} \n\t */\n\tget nArgs() {\n\t\treturn this.#nArgs;\n\t}\n\n\t/**\n\t * @internal\n\t * @returns {boolean}\n\t */\n\tallowAny() {\n\t\tif (typeof this.#name == \"string\") {\n\t\t\tif (this.#name.startsWith(\"macro__\")) {\n\t\t\t\treturn true;\n\t\t\t} else {\n\t\t\t\tlet i = UPLC_BUILTINS.findIndex(info => info.name == this.#name);\n\n\t\t\t\tassert(i != -1);\n\n\t\t\t\treturn UPLC_BUILTINS[i].allowAny;\n\t\t\t}\n\t\t} else {\n\t\t\treturn true;\n\t\t}\n\t}\n\n\t/**\n\t * @internal\n\t * @returns {boolean}\n\t */\n\tisMacro() {\n\t\tif (typeof this.#name == \"string\") {\n\t\t\treturn this.#name.startsWith(\"macro__\");\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\t/**\n\t * @returns {string}\n\t */\n\ttoString() {\n\t\tif (typeof this.#name == \"string\") {\n\t\t\treturn `(builtin ${this.#name})`;\n\t\t} else {\n\t\t\treturn `(builtin unknown${this.#name.toString()})`;\n\t\t}\n\t}\n\n\t/**\n\t * @internal\n\t * @param {BitWriter} bitWriter \n\t * @param {null | Map<string, number>} codeMapFileIndices\n\t */\n\ttoFlat(bitWriter, codeMapFileIndices = null) {\n\t\tbitWriter.write('0111');\n\n\t\t/** \n\t\t * @type {number} \n\t\t */\n\t\tlet i;\n\n\t\tif (typeof this.#name == \"string\") {\n\t\t\tif (this.#name.startsWith(\"macro__\")) {\n\t\t\t\tconst macroName = this.#name.slice((\"macro__\").length);\n\n\t\t\t\ti = UPLC_MACROS.findIndex(entry => entry == macroName);\n\n\t\t\t\tassert(i != -1, `macro '${macroName}' not found`);\n\n\t\t\t\ti += UPLC_MACROS_OFFSET;\n\t\t\t} else {\n\t\t\t\ti = UPLC_BUILTINS.findIndex(info => info.name == this.#name);\n\n\t\t\t\tassert(i != -1);\n\t\t\t}\n\t\t} else {\n\t\t\ti = this.#name;\n\t\t}\n\n\t\tlet bitString = padZeroes(i.toString(2), 7);\n\n\t\tbitWriter.write(bitString);\n\t}\n\n\t/**\n\t * @internal\n\t * @param {NetworkParams} params\n\t * @param  {...UplcValue} args\n\t * @returns {Cost}\n\t */\n\tcalcCost(params, ...args) {\n\t\tlet i = UPLC_BUILTINS.findIndex(info => info.name == this.#name);\n\n\t\tlet argSizes = args.map(a => a.memSize);\n\n\t\tif (!argSizes.every(size => !Number.isNaN(size) && size >= 0)) {\n\t\t\tthrow new Error(\"invalid arg size\");\n\t\t}\n\n\t\treturn UPLC_BUILTINS[i].calcCost(params, argSizes);\n\t}\n\n\t/**\n\t * Used by IREvaluator\n\t * @internal\n\t * @param {Word} name\n\t * @param {UplcValue[]} args\n\t * @returns {UplcValue}\n\t */\n\tstatic evalStatic(name, args) {\n\t\tlet builtin = new UplcBuiltin(name.site, name.value);\n\n\t\tlet rte = new UplcRte();\n\n\t\tlet res = builtin.evalBuiltin(rte, name.site, args, true);\n\n\t\trte.throwError()\n\n\t\tif (res instanceof Promise) {\n\t\t\tthrow new Error(\"can't call trace through evalStatic\");\n\t\t} else {\n\t\t\treturn res;\n\t\t}\n\t}\n\n\t/**\n\t * @internal\n\t * @param {UplcRte} rte\n\t * @param {UplcFrame[]} stack\n\t * @param {ComputingState} state\n\t * @returns {CekState}\n\t */\n\tcomputeCek(rte, stack, state) {\n\t\trte.incrBuiltinCost();\n        return {reducing: new AppliedUplcBuiltin(this)};\n\t}\n\n\t/**\n\t * @internal\n\t * @param {UplcRte} rte \n\t * @param {Site} site\n\t * @param {UplcValue[]} args\n\t * @returns {Promise<UplcValue>}\n\t */\n\tevalMacro(rte, site, args) {\n\t\tassert(this.isMacro());\n\t\tif (typeof this.#name == \"string\") {\n\t\t\t// don't include the last Unit\n\t\t\treturn rte.callMacro(this.#name.slice((\"macro__\").length), args);\n\t\t} else {\n\t\t\tthrow new Error(\"unexpected\");\n\t\t}\n\t}\n\n\t/**\n\t * @internal\n\t * @param {UplcRte} rte \n\t * @param {Site} site\n\t * @param {UplcValue[]} args\n\t * @param {boolean} syncTrace if true => don't call rte.print method (used by IREvaluator)\n\t * @returns {UplcValue | Promise<UplcValue>} // trace returns a Promise (async print), all the other builtins return a synchronous value\n\t */\n\tevalBuiltin(rte, site, args, syncTrace = false) {\n\t\tif (!this.allowAny() && args.some(a => a.isAny())) {\n\t\t\treturn new UplcAny(site);\n\t\t} \n\n\t\trte.calcAndIncrCost(this, ...args);\n\n\t\t/**\n\t\t * @type {{[name: string]: (...args: UplcValue[]) => (UplcValue | Promise<UplcValue>)}}\n\t\t */\n\t\tconst callbacks = {\n\t\t\taddInteger: (a, b) => {\n\t\t\t\treturn new UplcInt(site, a.int + b.int);\n\t\t\t},\n\t\t\tsubtractInteger: (a, b) => {\n\t\t\t\treturn new UplcInt(site, a.int - b.int);\n\t\t\t},\n\t\t\tdivideInteger: (a, b) => {\n\t\t\t\tif (b.int === 0n) {\n\t\t\t\t\treturn rte.error(\"division by zero\");\n\t\t\t\t} else {\n\t\t\t\t\treturn new UplcInt(site, a.int / b.int);\n\t\t\t\t}\n\t\t\t},\n\t\t\tmultiplyInteger: (a, b) => {\n\t\t\t\treturn new UplcInt(site, a.int * b.int);\n\t\t\t},\n\t\t\tquotientInteger: (a, b) => {\n\t\t\t\tif (b.int === 0n) {\n\t\t\t\t\treturn rte.error(\"division by zero\");\n\t\t\t\t} else {\n\t\t\t\t\treturn new UplcInt(site, a.int/b.int + (b.int < 0n ? 1n : 0n));\n\t\t\t\t}\n\t\t\t},\n\t\t\tmodInteger: (a, b) => {\n\t\t\t\tif (b.int === 0n) {\n\t\t\t\t\treturn rte.error(\"division by zero\");\n\t\t\t\t} else {\n\t\t\t\t\treturn new UplcInt(site, a.int % b.int);\n\t\t\t\t}\n\t\t\t},\n\t\t\tremainderInteger: (a, b) => {\n\t\t\t\tif (b.int == 0n) {\n\t\t\t\t\treturn rte.error(\"division by zero\");\n\t\t\t\t} else {\n\t\t\t\t\treturn new UplcInt(site, a.int - (a.int/b.int + (b.int < 0n ? 1n : 0n))*b.int);\n\t\t\t\t}\n\t\t\t},\n\t\t\tequalsInteger: (a, b) => {\n\t\t\t\treturn new UplcBool(site, a.int == b.int);\n\t\t\t},\n\t\t\tlessThanInteger: (a, b) => {\n\t\t\t\treturn new UplcBool(site, a.int < b.int);\n\t\t\t},\n\t\t\tlessThanEqualsInteger: (a, b) => {\n\t\t\t\treturn new UplcBool(site, a.int <= b.int);\n\t\t\t},\n\t\t\tappendByteString: (a, b) => {\n\t\t\t\treturn new UplcByteArray(site, a.bytes.concat(b.bytes));\t\n\t\t\t},\n\t\t\tconsByteString: (a, b) => {\n\t\t\t\tlet bytes = b.bytes;\n\n\t\t\t\tconst byte = Number(a.int)\n\n\t\t\t\tif (byte < 0 || byte >= 256) {\n\t\t\t\t\treturn rte.error(\"byte out of range\");\n\t\t\t\t}\n\n\t\t\t\tbytes.unshift(byte);\n\t\t\t\t\n\t\t\t\treturn new UplcByteArray(site, bytes);\n\t\t\t},\n\t\t\tsliceByteString: (a, b, c) => {\n\t\t\t\tconst bytes = c.bytes;\n\t\t\t\tlet start = Math.max(Number(a.int), 0);\n\t\t\t\tlet end = Math.min(Number(a.int) + Number(b.int) - 1, bytes.length - 1);\n\t\t\t\t\n\t\t\t\tif (end < start) {\n\t\t\t\t\treturn new UplcByteArray(site, []);\n\t\t\t\t} else {\n\t\t\t\t\treturn new UplcByteArray(site, bytes.slice(start, end + 1));\n\t\t\t\t}\n\t\t\t},\n\t\t\tlengthOfByteString: (a) => {\n\t\t\t\treturn new UplcInt(site, BigInt(a.bytes.length));\n\t\t\t},\n\t\t\tindexByteString: (a, b) => {\n\t\t\t\tlet bytes = a.bytes;\n\t\t\t\tlet i = b.int;\n\t\t\t\tif (i < 0 || i >= bytes.length) {\n\t\t\t\t\tthrow new Error(\"index out of range\");\n\t\t\t\t}\n\n\t\t\t\treturn new UplcInt(site, BigInt(bytes[Number(i)]));\n\t\t\t},\n\t\t\tequalsByteString: (a, b) => {\n\t\t\t\treturn new UplcBool(site, ByteArrayData.comp(a.bytes, b.bytes) == 0);\n\t\t\t},\n\t\t\tlessThanByteString: (a, b) => {\n\t\t\t\treturn new UplcBool(site, ByteArrayData.comp(a.bytes, b.bytes) == -1);\n\t\t\t},\n\t\t\tlessThanEqualsByteString: (a, b) => {\n\t\t\t\treturn new UplcBool(site, ByteArrayData.comp(a.bytes, b.bytes) <= 0);\n\t\t\t},\n\t\t\tappendString: (a, b) => {\n\t\t\t\treturn new UplcString(site, a.string + b.string);\n\t\t\t},\n\t\t\tequalsString: (a, b) => {\n\t\t\t\treturn new UplcBool(site, a.string == b.string);\n\t\t\t},\n\t\t\tencodeUtf8: (a) => {\n\t\t\t\treturn new UplcByteArray(site, textToBytes(a.string));\n\t\t\t},\n\t\t\tdecodeUtf8: (a) => {\n\t\t\t\ttry {\n\t\t\t\t\treturn new UplcString(site, bytesToText(a.bytes));\n\t\t\t\t} catch(_) {\n\t\t\t\t\treturn rte.error(\"invalid utf-8\");\n\t\t\t\t}\n\t\t\t},\n\t\t\tsha2_256: (a) => {\n\t\t\t\treturn new UplcByteArray(site, Crypto.sha2_256(a.bytes))\n\t\t\t},\n\t\t\tsha3_256: (a) => {\n\t\t\t\treturn new UplcByteArray(site, Crypto.sha3(a.bytes))\n\t\t\t},\n\t\t\tblake2b_256: (a) => {\n\t\t\t\treturn new UplcByteArray(site, Crypto.blake2b(a.bytes)); \n\t\t\t},\n\t\t\tverifyEd25519Signature: (key, msg, signature) => {\n\t\t\t\trte.calcAndIncrCost(this, key, msg, signature);\n\n\t\t\t\tlet keyBytes = key.bytes;\n\t\t\t\tif (keyBytes.length != 32) {\n\t\t\t\t\treturn rte.error(`expected key of length 32 for verifyEd25519Signature, got key of length ${keyBytes.length}`);\n\t\t\t\t}\n\n\t\t\t\tlet msgBytes = msg.bytes;\n\t\t\t\t\n\t\t\t\tlet signatureBytes = signature.bytes;\n\t\t\t\tif (signatureBytes.length != 64) {\n\t\t\t\t\treturn rte.error(`expected signature of length 64 for verifyEd25519Signature, got signature of length ${signatureBytes.length}`);\n\t\t\t\t}\n\n\t\t\t\tlet ok = Ed25519.verify(signatureBytes, msgBytes, keyBytes);\n\n\t\t\t\treturn new UplcBool(site, ok);\n\t\t\t},\n\t\t\tifThenElse: (a, b, c) => {\n\t\t\t\tif (a.isAny()) {\n\t\t\t\t\treturn new UplcAny(site);\n\t\t\t\t} else {\n\t\t\t\t\treturn a.bool ? b : c;\n\t\t\t\t}\n\t\t\t},\n\t\t\tchooseUnit: (a, b) => {\n\t\t\t\ta.assertUnit();\n\n\t\t\t\treturn b;\n\t\t\t},\n\t\t\ttrace: (a, b) => {\n\t\t\t\tif (a.isAny() || syncTrace) {\n\t\t\t\t\treturn b;\n\t\t\t\t} else {\n\t\t\t\t\treturn rte.print(a.string.split(\"\\n\").map(l => `INFO (${site.toString()}) ${l}`)).then(() => {\n\t\t\t\t\t\treturn b;\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t},\n\t\t\tfstPair: (a) => {\n\t\t\t\tif (a.isPair()) {\n\t\t\t\t\treturn a.first;\n\t\t\t\t} else {\n\t\t\t\t\tthrow site.typeError(`expected pair or data-pair for first arg, got '${a.toString()}'`);\n\t\t\t\t}\n\t\t\t},\n\t\t\tsndPair: (a) => {\n\t\t\t\tif (a.isPair()) {\n\t\t\t\t\treturn a.second;\n\t\t\t\t} else {\n\t\t\t\t\tthrow site.typeError(`expected pair or data-pair for first arg, got '${a.toString()}'`);\n\t\t\t\t}\n\t\t\t},\n\t\t\tchooseList: (a, b, c) => {\n\t\t\t\tif (a.isAny()) {\n\t\t\t\t\treturn new UplcAny(site);\n\t\t\t\t} else if (a.isList()) {\n\t\t\t\t\tif (a.length == 0) {\n\t\t\t\t\t\treturn b;\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn c;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tthrow site.typeError(`expected list or map first arg, got '${a.toString()}'`);\n\t\t\t\t}\n\t\t\t},\n\t\t\tmkCons: (a, b) => {\n\t\t\t\tif (b.isList()) {\n\t\t\t\t\tif (!b.itemType.isSameType(a)) {\n\t\t\t\t\t\tthrow site.typeError(`wrong type for 2nd arg of mkCons, expected ${a.toString()}, got ${b.toString()}`);\n\t\t\t\t\t}\n\n\t\t\t\t\tlet lst = b.list;\n\t\t\t\t\tlst.unshift(a);\n\n\t\t\t\t\treturn new UplcList(site, b.itemType, lst);\n\t\t\t\t} else {\n\t\t\t\t\tthrow site.typeError(`expected list or map for second arg, got '${b.toString()}'`);\n\t\t\t\t}\n\t\t\t},\n\t\t\theadList: (a) => {\n\t\t\t\tif (a.isList()) {\n\t\t\t\t\tconst lst = a.list;\n\t\t\t\t\tif (lst.length == 0) {\n\t\t\t\t\t\treturn rte.error(\"empty list\");\n\t\t\t\t\t}\n\n\t\t\t\t\treturn lst[0];\n\t\t\t\t} else {\n\t\t\t\t\tthrow site.typeError(`__core__headList expects list or map, got '${a.toString()}'`);\n\t\t\t\t}\n\t\t\t},\n\t\t\ttailList: (a) => {\n\t\t\t\tif (a.isList()) {\n\t\t\t\t\tlet lst = a.list;\n\t\t\t\t\tif (lst.length == 0) {\n\t\t\t\t\t\treturn rte.error(\"empty list\");\n\t\t\t\t\t}\n\n\t\t\t\t\treturn new UplcList(site, a.itemType, lst.slice(1));\n\t\t\t\t} else {\n\t\t\t\t\tthrow site.typeError(`__core__tailList expects list or map, got '${a.toString()}'`);\n\t\t\t\t}\n\t\t\t},\n\t\t\tnullList: (a) => {\n\t\t\t\tif (a.isList()) {\n\t\t\t\t\treturn new UplcBool(site, a.list.length == 0);\n\t\t\t\t} else {\n\t\t\t\t\tthrow site.typeError(`__core__nullList expects list or map, got '${a.toString()}'`);\n\t\t\t\t}\n\t\t\t},\n\t\t\tchooseData: (a, b, c, d, e, f) => {\n\t\t\t\tif (a.isAny()) {\n\t\t\t\t\treturn new UplcAny(site);\n\t\t\t\t} else {\n\t\t\t\t\tconst data = a.data;\n\n\t\t\t\t\tif (data instanceof ConstrData) {\n\t\t\t\t\t\treturn b;\n\t\t\t\t\t} else if (data instanceof MapData) {\n\t\t\t\t\t\treturn c;\n\t\t\t\t\t} else if (data instanceof ListData) {\n\t\t\t\t\t\treturn d;\n\t\t\t\t\t} else if (data instanceof IntData) {\n\t\t\t\t\t\treturn e;\n\t\t\t\t\t} else if (data instanceof ByteArrayData) {\n\t\t\t\t\t\treturn f;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthrow new Error(\"unexpected\");\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\tconstrData: (a, b) => {\n\t\t\t\tconst i = a.int;\n\t\t\t\tassert(i >= 0);\n\n\t\t\t\tconst lst = b.list;\n\n\t\t\t\treturn new UplcDataValue(site, new ConstrData(Number(i), lst.map(item => item.data)));\n\t\t\t},\n\t\t\tmapData: (a) => {\n\t\t\t\treturn new UplcDataValue(site, new MapData(a.list.map(pair => {\n\t\t\t\t\treturn [pair.first.data, pair.second.data];\n\t\t\t\t})));\n\t\t\t},\n\t\t\tlistData: (a) => {\n\t\t\t\treturn new UplcDataValue(site, new ListData(a.list.map(item => item.data)));\n\t\t\t},\n\t\t\tiData: (a) => {\n\t\t\t\treturn new UplcDataValue(site, new IntData(a.int));\n\t\t\t},\n\t\t\tbData: (a) => {\n\t\t\t\treturn new UplcDataValue(site, new ByteArrayData(a.bytes));\n\t\t\t},\n\t\t\tunConstrData: (a) => {\n\t\t\t\tif (!a.isData()) {\n\t\t\t\t\tthrow site.typeError(`expected data for arg of unConstrData, got ${a.toString()}`);\n\t\t\t\t}\n\n\t\t\t\tlet data = a.data;\n\t\t\t\tif (!(data instanceof ConstrData)) {\n\t\t\t\t\treturn rte.error(`unexpected unConstrData argument '${data.toString()}'`);\n\t\t\t\t} else {\n\t\t\t\t\treturn new UplcPair(site, new UplcInt(site, BigInt(data.index)), new UplcList(site, UplcType.newDataType(), data.fields.map(f => new UplcDataValue(site, f))));\n\t\t\t\t}\n\t\t\t},\n\t\t\tunMapData: (a) => {\n\t\t\t\tif (!a.isData()) {\n\t\t\t\t\tthrow site.typeError(`expected data for arg of unMapData, got ${a.toString()}`);\n\t\t\t\t}\n\n\t\t\t\tlet data = a.data;\n\t\t\t\tif (!(data instanceof MapData)) {\n\t\t\t\t\treturn rte.error(`unexpected unMapData argument '${data.toString()}'`);\n\t\t\t\t} else {\n\t\t\t\t\treturn new UplcList(site, UplcType.newDataPairType(), data.map.map(([fst, snd]) => new UplcPair(site, new UplcDataValue(site, fst), new UplcDataValue(site, snd))));\n\t\t\t\t}\n\t\t\t},\n\t\t\tunListData: (a) => {\n\t\t\t\tif (!a.isData()) {\n\t\t\t\t\tthrow site.typeError(`expected data for arg of unListData, got ${a.toString()}`);\n\t\t\t\t}\n\n\t\t\t\tlet data = a.data;\n\t\t\t\tif (!(data instanceof ListData)) {\n\t\t\t\t\treturn rte.error(`unexpected unListData argument '${data.toString()}'`);\n\t\t\t\t} else {\n\t\t\t\t\treturn new UplcList(site, UplcType.newDataType(), data.list.map(item => new UplcDataValue(site, item)));\n\t\t\t\t}\n\t\t\t},\n\t\t\tunIData: (a) => {\n\t\t\t\tif (!a.isData()) {\n\t\t\t\t\tthrow site.typeError(`expected data for arg of unIData, got ${a.toString()}`);\n\t\t\t\t}\n\n\t\t\t\tlet data = a.data;\n\t\t\t\tif (!(data instanceof IntData)) {\n\t\t\t\t\treturn rte.error(`unexpected unIData argument '${data.toString()}'`);\n\t\t\t\t} else {\n\t\t\t\t\treturn new UplcInt(site, data.value);\n\t\t\t\t}\n\t\t\t},\n\t\t\tunBData: (a) => {\n\t\t\t\tif (!a.isData()) {\n\t\t\t\t\tthrow site.typeError(`expected data for arg of unBData, got ${a.toString()}`);\n\t\t\t\t}\n\n\t\t\t\tlet data = a.data;\n\t\t\t\tif (!(data instanceof ByteArrayData)) {\n\t\t\t\t\treturn rte.error(`unexpected unBData argument '${data.toString()}'`);\n\t\t\t\t} else {\n\t\t\t\t\treturn new UplcByteArray(site, data.bytes);\n\t\t\t\t}\n\t\t\t},\n\t\t\tequalsData: (a, b) => {\n\t\t\t\tif (!a.isData()) {\n\t\t\t\t\tthrow site.typeError(`expected data for 1st arg of equalsData, got ${a.toString()}`);\n\t\t\t\t}\n\n\t\t\t\tif (!b.isData()) {\n\t\t\t\t\tthrow site.typeError(`expected data for 2nd arg of equalsData, got ${b.toString()}`);\n\t\t\t\t}\n\n\t\t\t\treturn new UplcBool(site, a.data.isSame(b.data));\n\t\t\t},\n\t\t\tmkPairData: (a, b) => {\n\t\t\t\treturn new UplcPair(site, new UplcDataValue(site, a.data), new UplcDataValue(site, b.data));\n\t\t\t},\n\t\t\tmkNilData: (a) => {\n\t\t\t\ta.assertUnit();\n\t\t\t\treturn new UplcList(site, UplcType.newDataType(), []);\n\t\t\t},\n\t\t\tmkNilPairData: (a) => {\n\t\t\t\ta.assertUnit();\n\n\t\t\t\treturn new UplcList(site, UplcType.newDataPairType(), []);\n\t\t\t},\n\t\t\tserialiseData: (a) => {\n\t\t\t\treturn new UplcByteArray(site, a.data.toCbor());\n\t\t\t},\n\t\t\tverifyEcdsaSecp256k1Signature: (a, b, c) => {\n\t\t\t\tthrow new Error(\"no immediate need, so don't bother yet\");\n\t\t\t},\n\t\t\tverifySchnorrSecp256k1Signature: (a, b, c) => {\n\t\t\t\tthrow new Error(\"no immediate need, so don't bother yet\");\n\t\t\t}\n\t\t};\n\t\t\t\n\t\treturn assertDefined(callbacks[this.#name], `UplcBuiltin ${this.#name} not yet implemented`)(...args);\n\t}\n\n\t/**\n\t * @internal\n\t * @type {number}\n\t */\n\tget forceCount() {\n\t\treturn this.#forceCount;\n\t}\n}\n\n/**\n * @internal\n */\nexport class UplcFrame {\n\t/**\n\t * @param {UplcRte} rte \n\t * @param {UplcFrame[]} stack \n\t * @param {ReducingState} state \n\t * @returns {Promise<CekState>}\n\t */\n\tasync reduceCek(rte, stack, state) {\n\t\tthrow new Error(\"not yet implemented\");\n\t}\n\n\t/**\n\t * @type {Site}\n\t */\n\tget site() {\n\t\tthrow new Error(\"not yet implemented\");\n\t}\n}\n\n/**\n * @internal\n */\nexport class ForceFrame extends UplcFrame {\n    /**\n     * @readonly\n     * @type {UplcForce}\n     */\n    term;\n\n\t/**\n\t * @readonly\n\t * @type {CekEnv}\n\t */\n\tenv;\n\n    /**\n     * @param {UplcForce} term\n\t * @param {CekEnv} env\n     */\n    constructor(term, env) {\n        super();\n        this.term = term;\n\t\tthis.env = env;\n    }\n\n\tget site() {\n\t\treturn this.term.site;\n\t}\n\n\t/**\n\t * @param {UplcRte} rte \n\t * @param {UplcFrame[]} stack \n\t * @param {ReducingState} state \n\t * @returns {Promise<CekState>}\n\t */\n\tasync reduceCek(rte, stack, state) {\n\t\tconst term = state.reducing;\n\n\t\treturn await term.reduceForceFrame(rte, stack, this);\n\t}\n}\n\n/**\n * @internal\n */\nexport class PreCallFrame extends UplcFrame {\n    /**\n     * @readonly\n     * @type {UplcCall}\n     */\n    term;\n\n    /**\n     * @readonly\n     * @type {CekEnv}\n     */\n    env;\n\n    /**\n     * @param {UplcCall} term\n     * @param {CekEnv} env\n     */\n    constructor(term, env) {\n        super();\n        this.term = term;\n        this.env = env;\n    }\n\n\t/**\n\t * @type {Site}\n\t */\n\tget site() {\n\t\treturn this.term.site;\n\t}\n\n\t/**\n\t * \n\t * @param {UplcRte} rte \n\t * @param {UplcFrame[]} stack \n\t * @param {ReducingState} state \n\t * @returns {Promise<CekState>}\n\t */\n\tasync reduceCek(rte, stack, state) {\n\t\tconst term = state.reducing;\n\n\t\treturn term.reducePreCallFrame(rte, stack, this);\n\t}\n}\n\n/**\n * @internal\n */\nexport class CallFrame extends UplcFrame {\n    /**\n     * @readonly\n     * @type {UplcCall}\n     */\n    term;\n\n    /**\n     * @readonly\n     * @type {UplcLambdaWithEnv | AppliedUplcBuiltin}\n     */\n    fn;\n\n\t/**\n\t * @readonly\n\t * @type {CekEnv}\n\t */\n\tenv;\n\n    /**\n     * @param {UplcCall} term\n     * @param {UplcLambdaWithEnv | AppliedUplcBuiltin} fn\n\t * @param {CekEnv} env\n     */\n    constructor(term, fn, env) {\n        super();\n        this.term = term;\n        this.fn = fn;\n\t\tthis.env = env;\n    }\n\n\t/**\n\t * @type {Site}\n\t */\n\tget site() {\n\t\treturn this.term.site;\n\t}\n\n\t/**\n\t * @param {UplcRte} rte \n\t * @param {UplcFrame[]} stack \n\t * @param {ReducingState} state \n\t * @returns {Promise<CekState>}\n\t */\n\tasync reduceCek(rte, stack, state) {\n\t\treturn this.fn.reduceCallFrame(rte, stack, state, this);\n\t}\n}\n\n/**\n * @internal\n * @template {UplcTerm} T\n */\nclass UplcTermWithEnv {\n    /**\n    * @readonly\n    * @type {T}\n    */\n    term;\n\n    /**\n     * @readonly\n     * @type {CekEnv}\n     */\n    env;\n\n    /**\n     * @param {T} term \n     * @param {CekEnv} env \n     */\n    constructor(term, env) {\n        this.term = term;\n        this.env = env;\n    }\n\n\t/**\n\t * @type {Site}\n\t */\n\tget site() {\n\t\treturn this.term.site;\n\t}\n\n    toString() {\n        return `(WithEnv ${this.term.toString()})`;\n    }\n}\n\n/**\n * @internal\n * @extends {UplcTermWithEnv<UplcLambda>}\n */\nclass UplcLambdaWithEnv extends UplcTermWithEnv {\n\t/**\n\t * @param {UplcRte} rte \n\t * @param {UplcFrame[]} stack \n\t * @param {PreCallFrame} frame \n\t * @returns {Promise<CekState>}\n\t */\n\tasync reducePreCallFrame(rte, stack, frame) {\n\t\tstack.push(new CallFrame(frame.term, this, frame.env));\n\t\treturn {computing: frame.term.arg, env: frame.env};\n\t}\n\n\t/**\n\t * @param {UplcRte} rte \n\t * @param {UplcFrame[]} stack \n\t * @param {ForceFrame} frame \n\t * @returns {Promise<CekState>}\n\t */\n\tasync reduceForceFrame(rte, stack, frame) {\n\t\tthrow new Error(\"expected force after delay\");\n\t}\n\n\t/**\n\t * @param {UplcRte} rte \n\t * @param {UplcFrame[]} stack \n\t * @param {ReducingState} state \n\t * @param {CallFrame} frame \n\t * @returns {Promise<CekState>}\n\t */\n\tasync reduceCallFrame(rte, stack, state, frame) {\n\t\treturn {\n\t\t\tcomputing: this.term.expr, \n\t\t\tenv: {\n\t\t\t\tvalues: this.env.values.concat([state.reducing]),\n\t\t\t\tcallSites: frame.env.callSites.concat([frame.term.callSite])\n\t\t\t}\n\t\t};\n\t}\n}\n\n/**\n * @internal\n * @extends {UplcTermWithEnv<UplcDelay>}\n */\nclass UplcDelayWithEnv extends UplcTermWithEnv {\n\t/**\n\t * @param {UplcRte} rte \n\t * @param {UplcFrame[]} stack \n\t * @param {PreCallFrame} frame \n\t * @returns {CekState}\n\t */\n\treducePreCallFrame(rte, stack, frame) {\n\t\tthrow new Error(\"UplcCall term expects UplcLambdaWithEnv or UplcBuiltin for first arg\");\n\t}\n\n\t/**\n\t * @param {UplcRte} rte \n\t * @param {UplcFrame[]} stack \n\t * @param {ForceFrame} frame \n\t * @returns {CekState}\n\t */\n\treduceForceFrame(rte, stack, frame) {\n\t\treturn {\n\t\t\tcomputing: this.term.expr, \n\t\t\tenv: {\n\t\t\t\tvalues: this.env.values,\n\t\t\t\tcallSites: frame.env.callSites.concat([frame.term.site])\n\t\t\t}\n\t\t};\n\t}\n}\n\n/**\n * @internal\n * @implements {UplcValue}\n */\nclass UplcAnonValue extends UplcValueImpl {\n    /**\n     * @readonly\n     * @type {AppliedUplcBuiltin | UplcLambdaWithEnv | UplcDelayWithEnv}\n     */\n    term;\n\n    /**\n     * @param {Site} site\n     * @param {AppliedUplcBuiltin | UplcLambdaWithEnv | UplcDelayWithEnv} term \n     */\n    constructor(site, term) {\n        super(site);\n        this.term = term;\n    }\n\n\t/**\n\t * @param {TransferUplcAst} other \n\t * @returns {any}\n\t */\n\ttransfer(other) {\n\t\tthrow new Error(\"shouldn't be part of AST\");\n\t}\n\n\t/**\n\t * @param {Site} newSite \n\t * @returns {UplcValue}\n\t */\n\tcopy(newSite) {\n\t\tthrow new Error(\"shouldn't be part of AST\");\n\t}\n\n    /**\n     * @type {number}\n     */\n    get memSize() {\n        return 1;\n    }\n\n\t/**\n\t * @type {number}\n\t */\n\tget flatSize() {\n\t\tthrow new Error(\"shouldn't be part of AST\");\n\t}\n\n\t/**\n\t * @returns {string}\n\t */\n\ttoString() {\n\t\treturn this.term.toString();\n\t}\n}\n\n/**\n * @internal\n */\nclass AppliedUplcBuiltin {\n    /**\n     * @readonly\n     * @type {UplcBuiltin}\n     */\n    term;\n\n    /**\n     * @readonly\n     * @type {number}\n     */\n    forceCount;\n\n    /**\n     * @readonly\n     * @type {CekValue[]}\n     */\n    args;\n\n    /**\n     * @param {UplcBuiltin} term\n     * @param {number} forceCount\n     * @param {CekValue[]} args\n     */\n    constructor(term, forceCount = 0, args = []) {\n        this.term = term;\n        this.forceCount = forceCount;\n        this.args = args;\n    }\n\n\t/**\n\t * @type {Site}\n\t */\n\tget site() {\n\t\treturn this.term.site;\n\t}\n\n    /**\n     * @returns {string}\n     */\n    toString() {\n        return `(AppliedBuiltin ${this.forceCount} [${this.args.map(a => a.toString()).join(\", \")}] ${this.term.toString()})`;\n    }\n\n    /**\n     * @returns {AppliedUplcBuiltin}\n     */\n    force() {\n        assert(this.forceCount < this.term.forceCount);\n\n        return new AppliedUplcBuiltin(this.term, this.forceCount + 1, this.args);\n    }\n\n    /**\n     * @param {CekValue} arg \n     * @returns {AppliedUplcBuiltin}\n     */\n    apply(arg) {\n        assert(this.term.nArgs == -1 || this.args.length < this.term.nArgs);\n\n        return new AppliedUplcBuiltin(this.term, this.forceCount, this.args.concat([arg]));\n    }\n\n    /**\n     * @returns {boolean}\n     */\n    isFullForced() {\n        return this.forceCount == this.term.forceCount;\n    }\n\n    /**\n     * @returns {boolean}\n     */\n    isFullyApplied() {\n        if (this.term.isMacro()) {\n            if (this.args.length == 0) {\n                return false;\n            } else {\n                const last = this.args[this.args.length - 1];\n\n                if (last instanceof UplcConst && last.value instanceof UplcUnit) {\n                    return true;\n                } else {\n                    return false;\n                }\n            }\n        } else {\n            return this.args.length == this.term.nArgs;\n        }\n    }\n\n    /**\n\t * @internal\n     * @param {UplcRte} rte\n     * @param {Site[]} sites\n     * @returns {Promise<CekValue>}\n     */\n    async evalCek(rte, sites) {\n\t\tlet site = sites[sites.length - 1];\n\n        const args = this.args.map(a => {\n            if (a instanceof UplcConst) {\n                return a.value;\n            } else {\n                return new UplcAnonValue(Site.dummy(), a);\n            }\n        });\n\n\t\t/**\n\t\t * @type {UplcValue}\n\t\t */\n\t\tlet res;\n\n\t\tif (this.term.isMacro()) {\n\t\t\t// don't include the last unit\n\t\t\tassertDefined(args.pop()).assertUnit();\n\t\t\tres = await this.term.evalMacro(rte, site, args);\n\t\t} else {\n\t\t\tif (!this.term.allowAny() && args.some(a => a.isAny())) {\n\t\t\t\tres = new UplcAny(site);\n\t\t\t} else if (this.term.name == \"trace\") {\n\t\t\t\tif (!site.codeMapSite) {\n\t\t\t\t\tfor (let i = sites.length - 1; i >= 0; i--) {\n\t\t\t\t\t\tconst s = sites[i];\n\t\t\t\t\t\tif (s.codeMapSite) {\n\t\t\t\t\t\t\tsite = s.codeMapSite;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tsite = site.codeMapSite;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tres = await this.term.evalBuiltin(rte, site, args);\n\t\t\t} else {\n\t\t\t\tres = await this.term.evalBuiltin(rte, site, args);\n\t\t\t}\n\t\t}\n\n\t\tif (res instanceof UplcAnonValue) {\n\t\t\treturn res.term;\n\t\t} else {\n\t\t\treturn new UplcConst(res);\n\t\t}\n    }\n\n\t/**\n\t * @param {UplcRte} rte \n\t * @param {UplcFrame[]} stack \n\t * @param {PreCallFrame} frame \n\t * @returns {Promise<CekState>}\n\t */\n\tasync reducePreCallFrame(rte, stack, frame) {\n\t\tstack.push(new CallFrame(frame.term, this, frame.env));\n\t\treturn {computing: frame.term.arg, env: frame.env};\n\t}\n\n\t/**\n\t * @param {UplcRte} rte \n\t * @param {UplcFrame[]} stack \n\t * @param {ForceFrame} frame \n\t * @returns {Promise<CekState>}\n\t */\n\tasync reduceForceFrame(rte, stack, frame) {\n\t\tif (!this.isFullForced()) {\n\t\t\treturn {reducing: this.force()};\n\t\t} else {\n\t\t\tthrow new Error(`can't apply force to ${this.term.name}`);\n\t\t}\n\t}\n\n\t/**\n\t * @param {UplcRte} rte \n\t * @param {UplcFrame[]} stack \n\t * @param {ReducingState} state \n\t * @param {CallFrame} frame \n\t * @returns {Promise<CekState>}\n\t */\n\tasync reduceCallFrame(rte, stack, state, frame) {\n\t\tif (!this.isFullForced()) {\n\t\t\tthrow new Error(\"must be fully forced before call\");\n\t\t} else if (!this.isFullyApplied()) {\n\t\t\tconst fn = this.apply(state.reducing);\n\n\t\t\tif (fn.isFullyApplied()) {\n\t\t\t\tconst callSites = frame.env.callSites.concat([frame.term.callSite]);\n\n\t\t\t\tconst res = await fn.evalCek(rte, callSites);\n\n\t\t\t\tif (rte.hasError()) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\terror: rte.getError(), \n\t\t\t\t\t\tenv: {\n\t\t\t\t\t\t\tvalues: frame.env.values,\n\t\t\t\t\t\t\tcallSites: callSites\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t} else {\n\t\t\t\t\treturn {reducing: res};\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\treturn {reducing: fn};\n\t\t\t}\n\t\t} else {\n\t\t\tthrow new Error(\"already fully applied\");\n\t\t}\n\t}\n}\n\n/**\n * @internal\n * @typedef {UplcConst | AppliedUplcBuiltin | UplcLambdaWithEnv | UplcDelayWithEnv} CekValue\n */\n\n/**\n * @internal\n * @typedef {{\n * \t values: CekValue[],\n *   callSites: Site[]\n * }} CekEnv\n */\n\n/**\n * @internal\n * @typedef {{computing: UplcTerm, env: CekEnv}} ComputingState\n */\n\n/**\n * @internal\n * @typedef {{reducing: CekValue}} ReducingState\n */\n\n/**\n * @internal\n * @typedef {{error: string | RuntimeError, env: CekEnv}} ErrorState\n */\n\n/**\n * @internal\n * @typedef {ComputingState | ReducingState | ErrorState} CekState\n */\n\n/**\n * @internal\n * @param {UplcRte} rte\n * @param {UplcTerm} start\n * @param {null | UplcValue[]} args\n * @returns {Promise<UplcValue>}\n */\nexport async function evalCek(rte, start, args = null) {\n    if (args !== null) {\n        if (args.length == 0) {\n            start = new UplcForce(start.site, start);\n        } else {\n            for (let arg of args) {\n                start = new UplcCall(start.site, start, new UplcConst(arg));\n            }\n        }\n    }\n\n    /**\n     * @type {UplcFrame[]}\n     */\n    const stack = [];\n\n    /**\n     * @type {CekState}\n     */\n    let state = {computing: start, env: {values: [], callSites: []}};\n\n    // add the startup costs\n    rte.incrStartupCost();\n\n\twhile (true) {\n\t\tif (\"computing\" in state) {\n\t\t\tconst term = state.computing;\n\n\t\t\tstate = term.computeCek(rte, stack, state);\n\t\t} else if (\"reducing\" in state) {\n\t\t\tconst f = stack.pop();\n\n\t\t\tconst term = state.reducing;\n\n\t\t\tif (!f) {\n\t\t\t\tif (term instanceof UplcConst) {\n\t\t\t\t\treturn term.value;\n\t\t\t\t} else {\n\t\t\t\t\tthrow new Error(\"final UplcTerm in CEK isn't a UplcConst but a \" + term.toString());\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tstate = await f.reduceCek(rte, stack, state);\n\t\t\t}\n\t\t} else if (\"error\" in state) {\n\t\t\t/**\n\t\t\t * @type {string[]}\n\t\t\t */\n\t\t\tlet lines = rte.messages.slice();\n\n\t\t\tlet err = state.error;\n\n\t\t\tconst summary = \"thrown during UPLC evaluation\";\n\n\t\t\tif (typeof err == \"string\") {\n\t\t\t\tlet msg = err;\n\n\t\t\t\tif (msg == \"\" && lines.length > 0) {\n\t\t\t\t\tmsg = assertDefined(lines.pop()).split(\")\").slice(1).join(\")\").trim();\n\t\t\t\t}\n\n\t\t\t\t/**\n\t\t\t\t * @type {boolean}\n\t\t\t\t */\n\t\t\t\tlet codeMapSiteFound = false;\n\n\t\t\t\tfor (let i = state.env.callSites.length - 1; i >= 0; i--) {\n\t\t\t\t\tconst s = state.env.callSites[i];\n\n\t\t\t\t\tif (s.codeMapSite) {\n\t\t\t\t\t\tif (!codeMapSiteFound) {\n\t\t\t\t\t\t\tlines.push(`ERROR (${s.codeMapSite.toString()}) ${msg}`);\n\t\t\t\t\t\t\tcodeMapSiteFound = true;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tlines.push(`TRACE (${s.codeMapSite.toString()})`);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (!codeMapSiteFound) {\n\t\t\t\t\tlines.push(`ERROR ${msg}`);\n\t\t\t\t}\n\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\tlines = lines.concat(err.message.split(\"\\n\").filter(l => l != summary));\n\t\t\t}\n\n\t\t\tlines.unshift(summary);\n\n\t\t\tthrow new RuntimeError(lines.join(\"\\n\"));\n\t\t} else {\n\t\t\tthrow new Error(\"unhandled CEK state\");\n\t\t}\n\t}\n}\n\n\n///////////////////////////\n// Section 11: Uplc program\n///////////////////////////\n\n\n/**\n * This library uses version \"1.0.0\" of Plutus-core\n * @internal\n */\nconst UPLC_VERSION_COMPONENTS = [1n, 0n, 0n];\n\n /**\n  * i.e. \"1.0.0\"\n  * @internal\n  * @type {string}\n  */\nconst UPLC_VERSION = UPLC_VERSION_COMPONENTS.map(c => c.toString()).join(\".\");\n\n/**\n * This library uses V2 of the Plutus Ledger API, and is no longer compatible with V1\n * @internal\n */\nconst PLUTUS_SCRIPT_VERSION = \"PlutusScriptV2\";\n\n/**\n * @internal\n * @type {Object.<string, number>}\n */\nconst UPLC_TAG_WIDTHS = {\n\tterm:      4,\n\ttype:      3,\n\tconstType: 4,\n\tbuiltin:   7,\n\tconstant:  4,\n\tkind:      1\n};\n\n/**\n * TODO: purpose as enum type\n * @typedef {{\n *   purpose: null | ScriptPurpose \n *   callsTxTimeRange: boolean\n *   name?: string\n * }} ProgramProperties\n */\n\n/**\n * The constructor returns 'any' because it is an instance of TransferableUplcProgram, and the instance methods don't need to be defined here\n * @template TInstance\n * @typedef {{\n *   transferUplcProgram: (expr: any, properties: ProgramProperties, version: any[]) => TInstance,\n *   transferUplcAst: TransferUplcAst\n * }} TransferableUplcProgram\n */\n\n/**\n * @typedef {{\n*   mem: bigint, \n*   cpu: bigint,\n*   size?: number,\n*   builtins?: {[name: string]: Cost},\n*   terms?: {[name: string]: Cost},\n*   result?: RuntimeError | UplcValue,\n*   messages?: string[]\n* }} Profile\n*\n*\n* mem:  in 8 byte words (i.e. 1 mem unit is 64 bits)\n* cpu:  in reference cpu microseconds\n* size: in bytes\n* builtins: breakdown per builtin\n* terms: breakdown per termtype\n* result: result of evaluation\n* messages: printed messages (can be helpful when debugging)\n*/\n\n/**\n * Result of `program.compile()`. Contains the Untyped Plutus-Core AST, along with a code-mapping to the original source.\n */\n export class UplcProgram {\n\t#version;\n\t#expr;\n\t#properties;\n\n\t/**\n\t * @param {UplcTerm} expr \n\t * @param {ProgramProperties} properties\n\t * @param {UplcInt[]} version\n\t */\n\tconstructor(expr, properties = {purpose: null, callsTxTimeRange: false}, version = UPLC_VERSION_COMPONENTS.map(v => new UplcInt(expr.site, v, false))) {\n\t\tthis.#version    = version;\n\t\tthis.#expr       = expr;\n\t\tthis.#properties = properties;\n\t}\n\n\t/**\n\t * @type {UplcTerm}\n\t */\n\tget expr() {\n\t\treturn this.#expr;\n\t}\n\n\t/**\n\t * @type {Site}\n\t */\n\tget site() {\n\t\treturn new Site(this.#expr.site.src, 0);\n\t}\n\n\t/**\n\t * Returns the IR source\n\t * @type {string}\n\t */\n\tget src() {\n\t\treturn this.site.src.raw;\n\t}\n\n\t/**\n\t * @type {ProgramProperties}\n\t */\n\tget properties() {\n\t\treturn this.#properties;\n\t}\n\n\t/**\n\t * Transfers a `UplcProgram` from an old version of Helios to a new version of Helios, keeping the script hash the same.\n\t * \n\t * The main benefit for calling this method instead of serializing/deserializing is that the code mapping is maintained.\n\t * @template TInstance\n\t * @param {TransferableUplcProgram<TInstance>} other\n\t * @returns {TInstance}\n\t */\n\ttransfer(other) {\n\t\treturn other.transferUplcProgram(\n\t\t\tthis.#expr.transfer(other.transferUplcAst),\n\t\t\tthis.#properties,\n\t\t\tthis.#version.map(i => i.transfer(other.transferUplcAst))\n\t\t);\n\t}\n\n\t/**\n\t * Returns version of Plutus-core (!== Plutus script version!)\n\t * @type {string}\n\t */\n\tget versionString() {\n\t\treturn this.#version.map(v => v.toString()).join(\".\");\n\t}\n\n\t/**\n\t * @returns {string}\n\t */\n\tplutusScriptVersion() {\n\t\t// Note: only supports PlutusScriptV2 for now\n\t\treturn PLUTUS_SCRIPT_VERSION;\n\t}\n\n\t/**\n\t * Returns 1 for PlutusScriptV1, 2 for PlutusScriptV2\n\t * @returns {number}\n\t */\n\tversionTag() {\n\t\tlet v = this.plutusScriptVersion();\n\n\t\tswitch (v) {\n\t\t\tcase \"PlutusScriptV1\":\n\t\t\t\treturn 1;\n\t\t\tcase \"PlutusScriptV2\":\n\t\t\t\treturn 2;\n\t\t\tdefault:\n\t\t\t\tthrow new Error(`unhandled script version '${v}'`);\n\t\t}\n\t}\n\n\t/**\n\t * @returns {string}\n\t */\n\ttoString() {\n\t\treturn `(program ${this.versionString} ${this.#expr.toString()})`;\n\t}\n\n\t/**\n\t * Flat encodes the entire Plutus-core program.\n\t * Note that final padding isn't added now but is handled by bitWriter upon finalization.\n\t * @internal\n\t * @param {BitWriter} bitWriter\n\t */\n\ttoFlat(bitWriter) {\n\t\tthis.toFlatWithMapping(bitWriter, null);\n\t}\n\n\t/**\n\t * @internal\n\t * @param {BitWriter} bitWriter\n\t * @param {null | Map<string, number>} codeMapFileIndices\n\t */\n\ttoFlatWithMapping(bitWriter, codeMapFileIndices) {\n\t\tfor (let v of this.#version) {\n\t\t\tv.toFlatUnsigned(bitWriter);\n\t\t}\n\n\t\tthis.#expr.toFlat(bitWriter, codeMapFileIndices);\n\t}\n\t\n\t/**\n\t * Evaluates the term contained in UplcProgram (assuming it is a lambda term)\n\t * @internal\n\t * @param {null | UplcValue[]} args\n\t * @param {UplcRTECallbacksInternal} callbacks\n\t * @param {null | NetworkParams} networkParams\n\t * @returns {Promise<UplcValue>}\n\t */\n\tasync runInternal(args, callbacks = DEFAULT_UPLC_RTE_CALLBACKS, networkParams = null) {\n\t\tassertDefined(callbacks);\n\n\t\tlet rte = new UplcRte(callbacks, networkParams);\n\t\t\n\t\treturn await evalCek(rte, this.#expr, args);\n\t}\n\n\t/**\n\t * Wrap the top-level term with consecutive UplcCall (not exported) terms.\n\t * \n\t * Returns a new UplcProgram instance, leaving the original untouched.\n\t * @param {UplcValue[]} args\n\t * @returns {UplcProgram} - a new UplcProgram instance\n\t */\n\tapply(args) {\n\t\tlet expr = this.expr;\n\n\t\tfor (let arg of args) {\n\t\t\texpr = new UplcCall(arg.site, expr, new UplcConst(arg));\n\t\t}\n\n\t\treturn new UplcProgram(expr, this.#properties, this.#version);\n\t}\n\n\t/**\n\t * @param {null | UplcValue[]} args - if null the top-level term is returned as a value\n\t * @param {UplcRTECallbacks} callbacks \n\t * @param {null | NetworkParams} networkParams\n\t * @returns {Promise<UplcValue | RuntimeError>}\n\t */\n\tasync run(args, callbacks = DEFAULT_UPLC_RTE_CALLBACKS, networkParams = null) {\n\t\ttry {\n\t\t\treturn await this.runInternal(args, callbacks, networkParams);\n\t\t} catch (e) {\n\t\t\tif (!(e instanceof RuntimeError)) {\n\t\t\t\tthrow e;\n\t\t\t} else {\n\t\t\t\treturn e;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Run a `UplcProgram`. The printed messages are part of the return value.\n\t * @param {null | UplcValue[]} args\n\t * @returns {Promise<[(UplcValue | RuntimeError), string[]]>}\n\t */\n\tasync runWithPrint(args) {\n\t\t/**\n\t\t * @type {string[]}\n\t\t */\n\t\tconst messages = [];\n\n\t\tconst callbacks = Object.assign({}, DEFAULT_UPLC_RTE_CALLBACKS);\n\n\t\tcallbacks.onPrint = async function(msg) {\n\t\t\tmessages.push(msg);\n\t\t};\n\n\t\tconst res = await this.run(args, callbacks);\n\n\t\treturn [res, messages];\n\t}\n\n\t/**\n\t * Runs and profiles a `UplcProgram`. Needs the `NetworkParams` in order to calculate the execution budget.\n\t * @param {UplcValue[]} args\n\t * @param {NetworkParams} networkParams\n\t * @returns {Promise<Profile>} The returned profile contains a breakdown of the execution cost per Uplc term type and per Uplc builtin function type.\n\t */\n\tasync profile(args, networkParams) {\n\t\tlet callbacks = Object.assign({}, DEFAULT_UPLC_RTE_CALLBACKS);\n\n\t\tlet memCost = 0n;\n\t\tlet cpuCost = 0n;\n\n\t\t/**\n\t\t * @type {{[name: string]: Cost}}\n\t\t */\n\t\tconst builtins = {};\n\n\t\t/**\n\t\t * @type {{[name: string]: Cost}}\n\t\t */\n\t\tconst terms = {};\n\t\t\n\t\t/**\n\t\t * @type {(name: string, isTerm: boolean, cost: Cost) => void}\n\t\t */\n\t\tcallbacks.onIncrCost = (name, isTerm, cost) => {\n\t\t\tmemCost += cost.mem;\n\t\t\tcpuCost += cost.cpu;\n\n\t\t\tif (name !== undefined) {\n\t\t\t\tif (isTerm) {\n\t\t\t\t\tconst prev = terms[name];\n\t\t\t\t\tif (prev !== undefined) {\n\t\t\t\t\t\tterms[name] = {\n\t\t\t\t\t\t\tmem: prev.mem + cost.mem,\n\t\t\t\t\t\t\tcpu: prev.cpu + cost.cpu\n\t\t\t\t\t\t};\n\t\t\t\t\t} else {\n\t\t\t\t\t\tterms[name] = cost;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tconst prev = builtins[name];\n\n\t\t\t\t\tif (prev !== undefined) {\n\t\t\t\t\t\tbuiltins[name] = {\n\t\t\t\t\t\t\tmem: prev.mem + cost.mem,\n\t\t\t\t\t\t\tcpu: prev.cpu + cost.cpu\n\t\t\t\t\t\t};\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbuiltins[name] = cost;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\t\n\t\t/** @type {string[]} */\n\t\tlet messages = [];\n\n\t\t/**\n\t\t * @type {(msg: string) => Promise<void>}\n\t\t */\n\t\tcallbacks.onPrint = async function(msg) {\n\t\t\tmessages.push(msg);\n\t\t};\n\n\t\tlet result = await this.run(args, callbacks, networkParams);\n\n\t\treturn {\n\t\t\tmem: memCost,\n\t\t\tcpu: cpuCost,\n\t\t\tsize: this.calcSize(),\n\t\t\tbuiltins: builtins,\n\t\t\tterms: terms,\n\t\t\tresult: result,\n\t\t\tmessages: messages\n\t\t};\n\t}\n\n\t/**\n\t * Returns flat bytes of serialized script\n\t * @returns {number[]}\n\t */\n\tserializeBytes() {\n\t\tlet bitWriter = new BitWriter();\n\n\t\tthis.toFlat(bitWriter);\n\n\t\treturn bitWriter.finalize();\n\t}\n\n\t/**\n\t * Calculates the on chain size of the program (number of bytes).\n\t * @returns {number}\n\t */\n\tcalcSize() {\n\t\treturn this.serializeBytes().length;\n\t}\n\n\t/**\n\t * Returns the Cbor encoding of a script (flat bytes wrapped twice in Cbor bytearray).\n\t * @returns {number[]}\n\t */\n\ttoCbor() {\n\t\treturn Cbor.encodeBytes(Cbor.encodeBytes(this.serializeBytes()));\n\t}\n\n\t/**\n\t * @internal\n\t * @param {Map<string, number>} codeMapFileIndices \n\t */\n\ttoCborWithMapping(codeMapFileIndices) {\n\t\tlet bitWriter = new BitWriter();\n\n\t\tthis.toFlatWithMapping(bitWriter, codeMapFileIndices);\n\n\t\treturn Cbor.encodeBytes(Cbor.encodeBytes(bitWriter.finalize()));\n\t}\n\n\t/**\n\t * Returns the JSON representation of the serialized program (needed by cardano-cli).\n\t * @returns {string}\n\t */\n\tserialize() {\n\t\tconst cborHex = bytesToHex(this.toCbor());\n\n\t\treturn `{\"type\": \"${this.plutusScriptVersion()}\", \"description\": \"\", \"cborHex\": \"${cborHex}\"}`;\n\t}\n\n\t/**\n\t * @returns {number[]} - 28 byte hash\n\t */\n\thash() {\n\t\tlet innerBytes = Cbor.encodeBytes(this.serializeBytes());\n\n\t\tinnerBytes.unshift(this.versionTag());\n\n\t\t// used for both script addresses and minting policy hashes\n\t\treturn Crypto.blake2b(innerBytes, 28);\n\t}\n\n\t/**\n\t * Returns the `ValidatorHash` of the script. Throws an error if this isn't a spending validator script.\n\t * @type {ValidatorHash}\n\t */\n\tget validatorHash() {\n\t\tconst purpose = this.#properties.purpose;\n\n\t\tassert(purpose === null || purpose === \"spending\");\n\n\t\treturn new ValidatorHash(this.hash());\n\t}\n\n\t/**\n\t * Returns the `MintingPolicyHash` of the script. Throws an error if this isn't a minting policy.\n\t * @type {MintingPolicyHash}\n\t */\n\tget mintingPolicyHash() {\n\t\tconst purpose = this.#properties.purpose;\n\n\t\tassert(purpose === null || purpose === \"minting\");\n\n\t\treturn new MintingPolicyHash(this.hash());\n\t}\n\n\t/**\n\t * Returns the `StakingValidatorHash` of the script. Throws an error if this isn't a staking validator script.\n\t * @type {StakingValidatorHash}\n\t */\n\tget stakingValidatorHash() {\n\t\tconst purpose = this.#properties.purpose;\n\n\t\tassert(purpose === null || purpose === \"staking\");\n\n\t\treturn new StakingValidatorHash(this.hash());\n\t}\n\n\n\t/**\n\t * @internal\n\t * @param {number[] | string} bytes \n\t * @param {ProgramProperties} properties\n\t * @param {Source[]} files\n\t * @returns {UplcProgram}\n\t */\n\tstatic fromCborWithMapping(bytes, files, properties = {purpose: null, callsTxTimeRange: false}) {\n\t\tif (typeof bytes == \"string\") {\n\t\t\treturn UplcProgram.fromCborWithMapping(hexToBytes(bytes), files, properties)\n\t\t} else {\n\t\t\tif (Cbor.isBytes(bytes)) {\n\t\t\t\tbytes = Cbor.decodeBytes(bytes);\n\t\t\t}\n\n\t\t\tif (Cbor.isBytes(bytes)) {\n\t\t\t\tbytes = Cbor.decodeBytes(bytes);\n\t\t\t}\n\n\t\t\treturn UplcProgram.fromFlatWithMapping(bytes, files, properties);\n\t\t}\n\t}\n\n\t/**\n\t * @param {number[] | string} bytes \n\t * @param {ProgramProperties} properties\n\t * @returns {UplcProgram}\n\t */\n   \tstatic fromCbor(bytes, properties = {purpose: null, callsTxTimeRange: false}) {\n\t\treturn UplcProgram.fromCborWithMapping(bytes, [], properties);\n\t}\n\n\t/**\n\t * @param {number[]} bytes \n\t * @param {ProgramProperties} properties\n\t * @returns {UplcProgram}\n\t */\n\tstatic fromFlat(bytes, properties = {purpose: null, callsTxTimeRange: false}) {\n\t\treturn UplcProgram.fromFlatWithMapping(bytes, [], properties);\n\t}\n\n\t/**\n\t * @internal\n\t * @param {number[]} bytes \n\t * @param {ProgramProperties} properties\n\t * @param {Source[]} files\n\t * @returns {UplcProgram}\n\t */\n\tstatic fromFlatWithMapping(bytes, files, properties = {purpose: null, callsTxTimeRange: false}) {\n\t\tconst reader = new UplcDeserializer(bytes, files);\n\n\t\tconst version = [\n\t\t\treader.readInteger(),\n\t\t\treader.readInteger(),\n\t\t\treader.readInteger(),\n\t\t];\n\n\t\tconst versionKey = version.map(v => v.toString()).join(\".\");\n\n\t\tconst expr = reader.readTerm();\n\n\t\treader.finalize();\n\n\t\t// check version here, so any other errors in the deserialization are thrown first (which means the input is garbage)\n\t\tif (versionKey != UPLC_VERSION) {\n\t\t\tconsole.error(`Warning: Plutus-core script doesn't match version of Helios (expected ${UPLC_VERSION}, got ${versionKey})`);\n\t\t}\n\n\t\treturn new UplcProgram(expr, properties, version);\n\t}\n\n\t/**\n\t * Intended for transfer only\n\t * @param {any} expr \n\t * @param {ProgramProperties} properties \n\t * @param {any[]} version \n\t * @returns {UplcProgram}\n\t */\n\tstatic transferUplcProgram(expr, properties, version) {\n\t\tif (!(expr instanceof UplcTerm)) {\n\t\t\tthrow new Error(\"program expr not transferred correctly\");\n\t\t} else if (!version.every(v => v instanceof UplcInt)) {\n\t\t\tthrow new Error(\"program version ints not transferred correctly\");\n\t\t} else {\n\t\t\treturn new UplcProgram(expr, properties, version);\n\t\t}\n\t}\n\n\t/**\n\t * @type {TransferUplcAst}\n\t */\n\tstatic get transferUplcAst() {\n\t\treturn {\n\t\t\ttransferByteArrayData: (bytes) => new ByteArrayData(bytes),\n\t\t\ttransferConstrData:    (index, fields) => new ConstrData(index, fields),\n\t\t\ttransferIntData:       (value) => new IntData(value),\n\t\t\ttransferListData:      (items) => new ListData(items),\n\t\t\ttransferMapData:       (pairs) => new MapData(pairs),\n\t\t\ttransferSite:          (src, startPos, endPos, codeMapSite = null) => new Site(src, startPos, endPos, codeMapSite),\n\t\t\ttransferSource:        (raw, file) => new Source(raw, file?.toString() ?? \"<>\"), // in older versions of Helios the file arg had type (null | number)\n\t\t\ttransferUplcBool:      (site, value) => new UplcBool(site, value),\n\t\t\ttransferUplcBuiltin:   (site, name) => new UplcBuiltin(site, name),\n\t\t\ttransferUplcByteArray: (site, bytes) => new UplcByteArray(site, bytes),\n\t\t\ttransferUplcCall:      (site, a, b) => new UplcCall(site, a, b),\n\t\t\ttransferUplcConst:     (value) => new UplcConst(value),\n\t\t\ttransferUplcDataValue: (site, data) => new UplcDataValue(site, data),\n\t\t\ttransferUplcDelay:     (site, expr) => new UplcDelay(site, expr),\n\t\t\ttransferUplcError:     (site, msg) => new UplcError(site, msg),\n\t\t\ttransferUplcForce:     (site, expr) => new UplcForce(site, expr),\n\t\t\ttransferUplcInt:       (site, value, signed) => new UplcInt(site, value, signed),\n\t\t\ttransferUplcLambda:    (site, rhs, name = null) => new UplcLambda(site, rhs, name),\n\t\t\ttransferUplcList:      (site, itemType, items) => new UplcList(site, itemType, items),\n\t\t\ttransferUplcPair:      (site, first, second) => new UplcPair(site, first, second),\n\t\t\ttransferUplcString:    (site, value) => new UplcString(site, value),\n\t\t\ttransferUplcType:      (typeBits) => new UplcType(typeBits),\n\t\t\ttransferUplcUnit:      (site) => new UplcUnit(site),\n\t\t\ttransferUplcVariable:  (site, index) => new UplcVariable(site, index)\n\t\t};\n\t}\n}\n\n/**\n * Plutus-core deserializer creates a Plutus-core form an array of bytes\n */\n class UplcDeserializer extends BitReader {\n\t/**\n\t * @readonly\n\t * @type {Source[]}\n\t */\n\t#files;\n\n\t/**\n\t * @param {number[]} bytes \n\t * @param {Source[]} files - for serialized codeMapping\n\t */\n\tconstructor(bytes, files = []) {\n\t\tsuper(bytes);\n\n\t\tthis.#files = files;\n\t}\n\n\t/**\n\t * @param {string} category \n\t * @returns {number}\n\t */\n\ttagWidth(category) {\n\t\tassert(category in UPLC_TAG_WIDTHS, `unknown tag category ${category.toString()}`);\n\n\t\treturn UPLC_TAG_WIDTHS[category];\n\t}\n\n\t/**\n\t * Returns the name of a known builtin\n\t * Returns the integer id if id is out of range (thus if the builtin is unknown)\n\t * @param {number} id\n\t * @returns {string | number}\n\t */\n\tbuiltinName(id) {\n\t\tlet all = UPLC_BUILTINS;\n\n\t\tif (id >= 0 && id < all.length) {\n\t\t\treturn all[id].name;\n\t\t} else if (id >= UPLC_MACROS_OFFSET && id < UPLC_MACROS_OFFSET + UPLC_MACROS.length) {\n\t\t\treturn `macro__${assertDefined(UPLC_MACROS[id - UPLC_MACROS_OFFSET])}`;\n\t\t} else {\n\t\t\tconsole.error(`Warning: builtin id ${id.toString()} out of range`);\n\n\t\t\treturn id;\n\t\t}\n\t}\n\n\t/**\n\t * Reads a Plutus-core list with a specified size per element\n\t * Calls itself recursively until the end of the list is reached\n\t * @param {number} elemSize \n\t * @returns {number[]}\n\t */\n\treadLinkedList(elemSize) {\n\t\t// Cons and Nil constructors come from Lisp/Haskell\n\t\t//  cons 'a' creates a linked list node,\n\t\t//  nil      creates an empty linked list\n\t\tlet nilOrCons = this.readBits(1);\n\n\t\tif (nilOrCons == 0) {\n\t\t\treturn [];\n\t\t} else {\n\t\t\treturn [this.readBits(elemSize)].concat(this.readLinkedList(elemSize));\n\t\t}\n\t}\n\n\t/**\n\t * Reads a single UplcTerm\n\t * @returns {UplcTerm}\n\t */\n\treadTerm() {\n\t\tlet tag = this.readBits(this.tagWidth(\"term\"));\n\n\t\tswitch (tag) {\n\t\t\tcase 0:\n\t\t\t\treturn this.readVariable();\n\t\t\tcase 1:\n\t\t\t\treturn this.readDelay();\n\t\t\tcase 2:\n\t\t\t\treturn this.readLambda();\n\t\t\tcase 3:\n\t\t\t\treturn this.readCall(); // aka function application\n\t\t\tcase 4:\n\t\t\t\treturn this.readConstant();\n\t\t\tcase 5:\n\t\t\t\treturn this.readForce();\n\t\t\tcase 6:\n\t\t\t\treturn new UplcError(Site.dummy());\n\t\t\tcase 7:\n\t\t\t\treturn this.readBuiltin();\n\t\t\tcase 11:\n\t\t\t\treturn this.readCallWithSite();\n\t\t\tcase 13:\n\t\t\t\treturn this.readForceWithSite();\n\t\t\tdefault:\n\t\t\t\tthrow new Error(\"term tag \" + tag.toString() + \" unhandled\");\n\t\t}\n\t}\n\n\t/**\n\t * Reads a single unbounded integer\n\t * @param {boolean} signed \n\t * @returns {UplcInt}\n\t */\n\treadInteger(signed = false) {\n\t\tlet bytes = [];\n\n\t\tlet b = this.readByte();\n\t\tbytes.push(b);\n\n\t\twhile (!UplcInt.rawByteIsLast(b)) {\n\t\t\tb = this.readByte();\n\t\t\tbytes.push(b);\n\t\t}\n\n\t\t// strip the leading bit\n\t\tlet res = new UplcInt(Site.dummy(), UplcInt.bytesToBigInt(bytes.map(b => UplcInt.parseRawByte(b))), false); // raw int is unsigned\n\n\t\tif (signed) {\n\t\t\tres = res.toSigned(); // unzigzag is performed here\n\t\t}\n\n\t\treturn res;\n\t}\n\n\t/**\n\t * Reads bytearray or string characters\n\t * @returns {number[]}\n\t */\n\treadBytes() {\n\t\tthis.moveToByteBoundary(true);\n\n\t\tlet bytes = [];\n\n\t\tlet nChunk = this.readByte();\n\n\t\twhile (nChunk > 0) {\n\t\t\tfor (let i = 0; i < nChunk; i++) {\n\t\t\t\tbytes.push(this.readByte());\n\t\t\t}\n\n\t\t\tnChunk = this.readByte();\n\t\t}\n\n\t\treturn bytes;\n\t}\n\n\t/**\n\t * Reads a literal bytearray\n\t * @returns {UplcByteArray}\n\t */\n\treadByteArray() {\n\t\tlet bytes = this.readBytes();\n\n\t\treturn new UplcByteArray(Site.dummy(), bytes);\n\t}\n\n\t/**\n\t * Reads a literal string\n\t * @returns {UplcString}\n\t */\n\treadString() {\n\t\tlet bytes = this.readBytes();\n\n\t\tlet s = bytesToText(bytes);\n\n\t\treturn new UplcString(Site.dummy(), s);\n\t}\n\n\t/**\n\t * @param {() => UplcValue} typedReader \n\t * @returns {UplcValue[]}\n\t */\n\treadList(typedReader) {\n\t\t/** @type {UplcValue[]} */\n\t\tlet items = [];\n\n\t\twhile (this.readBits(1) == 1) {\n\t\t\titems.push(typedReader());\n\t\t}\n\n\t\treturn items;\n\t}\n\n\t/**\n\t * Reads a data object\n\t * @returns {UplcData}\n\t */\n\treadData() {\n\t\tlet bytes = this.readBytes();\n\n\t\treturn UplcData.fromCbor(bytes);\n\t}\n\n\t/**\n\t * Reads a variable term\n\t * @returns {UplcVariable}\n\t */\n\treadVariable() {\n\t\tlet index = this.readInteger()\n\n\t\treturn new UplcVariable(Site.dummy(), index);\n\t}\n\n\t/**\n\t * Reads a lambda expression term\n\t * @returns {UplcLambda}\n\t */\n\treadLambda() {\n\t\tlet rhs = this.readTerm();\n\n\t\treturn new UplcLambda(Site.dummy(), rhs);\n\t}\n\n\t/**\n\t * Reads a function application term\n\t * @returns {UplcCall}\n\t */\n\treadCall() {\n\t\tlet a = this.readTerm();\n\t\tlet b = this.readTerm();\n\n\t\treturn new UplcCall(Site.dummy(), a, b);\n\t}\n\n\t/**\n\t * Reads a function application term with a callSite (needed for bundler)\n\t * @internal\n\t * @returns {UplcCall}\n\t */\n\treadCallWithSite() {\n\t\tlet [fileIndex, pos] = [\n\t\t\tNumber(this.readInteger().value),\n\t\t\tNumber(this.readInteger().value)\n\t\t];\n\n\t\tconst src = assertDefined(this.#files[fileIndex], \"serialized UplcProgram contains codeMapping symbols, requires list of original sources\");\n\n\t\tlet site = new Site(src, pos);\n\t\t// also add self as codeMapSite\n\t\tsite = new Site(src, pos, undefined, site);\n\n\t\tlet a = this.readTerm();\n\t\tlet b = this.readTerm();\n\n\t\treturn new UplcCall(site, a, b);\n\t}\n\n\t/**\n\t * Reads a single constant\n\t * @returns {UplcConst}\n\t */\n\treadConstant() {\n\t\tlet typeList = this.readLinkedList(this.tagWidth(\"constType\"));\n\n\t\tlet res = new UplcConst(this.readTypedValue(typeList));\n\n\t\treturn res;\n\t}\n\n\t/**\n\t * Reads a single constant\n\t * @param {number[]} typeList \n\t * @returns {UplcValue}\n\t */\n\treadTypedValue(typeList) {\n\t\tconst typedReader = this.constructTypedReader(typeList);\n\n\t\tassertEq(typeList.length, 0, \"Did not consume all type parameters\");\n\n\t\treturn typedReader();\n\t}\n\n\t/**\n\t * Constructs a reader for a single construct recursively\n\t * @param {number[]} typeList \n\t * NOTE: the implicit assumption is that this functions modifies the typeList\n\t * by removing all elements that it \"consumed\" to define a type\n\t * @returns {() => UplcValue}\n\t */\n\tconstructTypedReader(typeList){\n\t\tconst type = assertDefined(typeList.shift());\n\n\t\tswitch (type) {\n\t\t\tcase 0: // signed Integer\n\t\t\t\treturn () => this.readInteger(true);\n\t\t\tcase 1: // bytearray\n\t\t\t\treturn () => this.readByteArray();\n\t\t\tcase 2: // utf8-string\n\t\t\t\treturn () => this.readString();\n\t\t\tcase 3:\n\t\t\t\treturn () => new UplcUnit(Site.dummy()); // no reading needed\n\t\t\tcase 4: // Bool\n\t\t\t\treturn () => new UplcBool(Site.dummy(), this.readBits(1) == 1);\n\t\t\tcase 5:\n\t\t\tcase 6:\n\t\t\t\tthrow new Error(\"unexpected type tag without type application\");\n\t\t\tcase 7:\n\t\t\t\tlet containerType = assertDefined(typeList.shift());\n\t\t\t\tif (containerType == 5) {\n\t\t\t\t\t// typeList is consumed by the construct call, so make sure to read it before!\n\t\t\t\t\tconst listType = UplcType.fromNumbers(typeList);\n\t\t\t\t\tconst typeReader = this.constructTypedReader(typeList);\n\n\t\t\t\t\treturn () => new UplcList(Site.dummy(), listType, this.readList(typeReader));\n\t\t\t\t} else {\n\t\t\t\t\tassertEq(containerType, 7, \"Unexpected type tag\");\n\t\t\t\t\tcontainerType = assertDefined(typeList.shift());\n\t\t\t\t\tif (containerType == 6) {\n\t\t\t\t\t\t// typeList is consumed by the construct call, so make sure to read it in correct order!\n\t\t\t\t\t\tconst leftReader = this.constructTypedReader(typeList);\n\t\t\t\t\t\tconst rightReader = this.constructTypedReader(typeList);\n\t\t\t\t\t\treturn () => new UplcPair(Site.dummy(), leftReader(), rightReader())\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\tcase 8:\n\t\t\t\treturn () => new UplcDataValue(Site.dummy(), this.readData());\n\t\t\tdefault:\n\t\t\t\tthrow new Error(`unhandled constant type ${type.toString()}`);\n\t\t}\n\t}\n\n\t/**\n\t * Reads a delay term\n\t * @returns {UplcDelay}\n\t */\n\treadDelay() {\n\t\tlet expr = this.readTerm();\n\n\t\treturn new UplcDelay(Site.dummy(), expr);\n\t}\n\n\t/**\n\t * Reads a force term\n\t * @returns {UplcForce}\n\t */\n\treadForce() {\n\t\tlet expr = this.readTerm();\n\n\t\treturn new UplcForce(Site.dummy(), expr);\n\t}\n\n\t/**\n\t * @internal\n\t * @returns {UplcForce}\n\t */\n\treadForceWithSite() {\n\t\tlet [fileIndex, pos] = [\n\t\t\tNumber(this.readInteger().value),\n\t\t\tNumber(this.readInteger().value)\n\t\t];\n\t\t\n\t\tconst src = assertDefined(this.#files[fileIndex], \"serialized UplcProgram contains codeMapping symbols, requires list of original sources\");\n\n\t\tlet site = new Site(src, pos);\n\t\t// also add self as codeMapSite\n\t\tsite = new Site(src, pos, undefined, site);\n\n\t\tlet expr = this.readTerm();\n\n\t\treturn new UplcForce(site, expr);\n\t}\n\n\t/**\n\t * Reads a builtin function ref term\n\t * @returns {UplcBuiltin}\n\t */\n\treadBuiltin() {\n\t\tlet id = this.readBits(this.tagWidth(\"builtin\"));\n\n\t\tlet name = this.builtinName(id);\n\n\t\treturn new UplcBuiltin(Site.dummy(), name);\n\t}\n\n\t/**\n\t * Move to the next byteboundary\n\t * (and check that we are at the end)\n\t */\n\tfinalize() {\n\t\tthis.moveToByteBoundary(true);\n\n\t\tassert(this.eof(), \"not at end\");\n\t}\n}\n\n/**\n * Deserializes a flat encoded `UplcProgram`.\n * @param {number[]} bytes \n * @param {ProgramProperties} properties\n * @returns {UplcProgram}\n */\nexport function deserializeUplcBytes(bytes, properties = {purpose: null, callsTxTimeRange: false}) {\n\treturn UplcProgram.fromFlat(bytes, properties);\n}\n\n/**\n * Parses a plutus core program. Returns a `UplcProgram` instance.\n * @param {string | {cborHex: string}} json a raw JSON string or a parsed JSON object\n * @returns {UplcProgram}\n */\nexport function deserializeUplc(json) {\n\tconst obj = typeof json == \"string\" ? JSON.parse(json) : json;\n\n\tif (!(\"cborHex\" in obj)) {\n\t\tthrow UserError.syntaxError(new Source(typeof json == \"string\" ? json : JSON.stringify(json, undefined, 4), \"<json>\"), 0, 1, \"cborHex field not in json\")\n\t}\n\n\tlet cborHex = obj.cborHex;\n\tif (typeof cborHex !== \"string\") {\n\t\tconst raw = typeof json == \"string\" ? json : JSON.stringify(json, undefined, 4);\n\t\tconst src = new Source(raw, \"<json>\");\n\t\tconst re = /cborHex/;\n\t\tconst cborHexMatch = raw.match(re);\n\t\tif (cborHexMatch === null) {\n\t\t\tthrow UserError.syntaxError(src, 0, 1, \"'cborHex' key not found\");\n\t\t} else {\n\t\t\tconst pos = raw.search(re)\n\t\t\tthrow UserError.syntaxError(src, pos, pos+1, \"cborHex not a string\");\n\t\t}\n\t}\n\n\treturn UplcProgram.fromCbor(hexToBytes(cborHex));\n}\n\n\n\n///////////////////////////\n// Section 12: Tokenization\n///////////////////////////\n\n/**\n * @internal\n */\nexport class Tokenizer {\n\t#src;\n\t#pos;\n\n\t/**\n\t * Tokens are accumulated in '#ts'\n\t * @type {Token[]} \n\t */\n\t#ts;\n\t#codeMap;\n\t#codeMapPos;\n\n\t#irMode;\n\n\t/**\n\t * @param {Source} src \n\t * @param {?CodeMap} codeMap \n\t * @param {boolean} irMode - if true '@' is treated as a regular character\n\t */\n\tconstructor(src, codeMap = null, irMode = false) {\n\t\tassert(src instanceof Source);\n\n\t\tthis.#src = src;\n\t\tthis.#pos = 0;\n\t\tthis.#ts = []; // reset to empty to list at start of tokenize()\n\t\tthis.#codeMap = codeMap; // can be a list of pairs [pos, site in another source]\n\t\tthis.#codeMapPos = 0; // not used if codeMap === null\n\t\tthis.#irMode = irMode;\n\t}\n\n\tincrPos() {\n\t\tthis.#pos += 1;\n\t}\n\n\tdecrPos() {\n\t\tthis.#pos -= 1;\n\t\tassert(this.#pos >= 0);\n\t}\n\n\tget currentSite() {\n\t\treturn new Site(this.#src, this.#pos);\n\t}\n\n\t/**\n\t * @param {Token} t \n\t */\n\tpushToken(t) {\n\t\tthis.#ts.push(t);\n\n\t\tif (this.#codeMap !== null && this.#codeMapPos < this.#codeMap.length) {\n\t\t\tlet pair = (this.#codeMap[this.#codeMapPos]);\n\n\t\t\tif (pair[0] == t.site.startPos) {\n\t\t\t\tt.site.setCodeMapSite(pair[1]);\n\t\t\t\tthis.#codeMapPos += 1;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Reads a single char from the source and advances #pos by one\n\t * @returns {string}\n\t */\n\treadChar() {\n\t\tassert(this.#pos >= 0);\n\n\t\tlet c;\n\t\tif (this.#pos < this.#src.length) {\n\t\t\tc = this.#src.getChar(this.#pos);\n\t\t} else {\n\t\t\tc = '\\0';\n\t\t}\n\n\t\tthis.incrPos();\n\n\t\treturn c;\n\t}\n\n\t/**\n\t * @returns {string}\n\t */\n\tpeekChar() {\n\t\tassert(this.#pos >= 0);\n\n\t\tif (this.#pos < this.#src.length) {\n\t\t\treturn this.#src.getChar(this.#pos);\n\t\t} else {\n\t\t\treturn '\\0';\n\t\t}\n\t}\n\n\t/**\n\t * Decreases #pos by one\n\t */\n\tunreadChar() {\n\t\tthis.decrPos();\n\t}\n\n\t/**\n\t * Start reading precisely one token\n\t * @param {Site} site \n\t * @param {string} c \n\t */\n\treadToken(site, c) {\n\t\tif (c == 'b') {\n\t\t\tthis.readMaybeUtf8ByteArray(site);\n\t\t} else if (c == '_' || (c >= 'A' && c <= 'Z') || (c >= 'a' && c <= 'z') || (this.#irMode && (c == '@' || c == '[' || c == ']'))) {\n\t\t\tthis.readWord(site, c);\n\t\t} else if (c == '/') {\n\t\t\tthis.readMaybeComment(site);\n\t\t} else if (c == '0') {\n\t\t\tthis.readSpecialInteger(site);\n\t\t} else if (c >= '1' && c <= '9') {\n\t\t\tthis.readDecimal(site, c);\n\t\t} else if (c == '#') {\n\t\t\tthis.readByteArray(site);\n\t\t} else if (c == '\"') {\n\t\t\tthis.readString(site);\n\t\t} else if (c == '?' || c == '!' || c == '%' || c == '&' || (c >= '(' && c <= '.') || (c >= ':' && c <= '>') || c == '[' || c == ']' || (c >= '{' && c <= '}')) {\n\t\t\tthis.readSymbol(site, c);\n\t\t} else if (!(c == ' ' || c == '\\n' || c == '\\t' || c == '\\r')) {\n\t\t\tsite.syntaxError(`invalid source character '${c}' (utf-8 not yet supported outside string literals)`);\n\t\t}\n\t}\n\n\t/**\n\t * Tokenize the complete source.\n\t * Nests groups before returning a list of tokens\n\t * @returns {Token[] | null}\n\t */\n\ttokenize() {\n\t\t// reset #ts\n\t\tthis.#ts = [];\n\n\t\tlet site = this.currentSite;\n\t\tlet c = this.readChar();\n\n\t\twhile (c != '\\0') {\n\t\t\tthis.readToken(site, c);\n\n\t\t\tsite = this.currentSite;\n\t\t\tc = this.readChar();\n\t\t}\n\n\t\treturn this.nestGroups(this.#ts);\n\t}\n\n\t/** \n\t * Returns a generator\n\t * Use gen.next().value to access to the next Token\n\t * Doesn't perform any grouping\n\t * Used for quickly parsing the ScriptPurpose header of a script\n\t * @returns {Generator<Token>}\n\t */\n\t*streamTokens() {\n\t\tthis.#ts = [];\n\n\t\tlet site = this.currentSite;\n\t\tlet c = this.readChar();\n\n\t\twhile (c != '\\0') {\n\t\t\tthis.readToken(site, c);\n\n\t\t\tlet t = this.#ts.shift();\n\t\t\twhile (t != undefined) {\n\t\t\t\tyield t;\n\t\t\t\tt = this.#ts.shift();\n\t\t\t}\n\n\t\t\tsite = this.currentSite;\n\t\t\tc = this.readChar();\n\t\t}\n\n\t\tassert(this.#ts.length == 0);\n\t}\n\n\t/**\n\t * Reads one word token.\n\t * Immediately turns \"true\" or \"false\" into a BoolLiteral instead of keeping it as Word\n\t * @param {Site} site\n\t * @param {string} c0 - first character \n\t */\n\treadWord(site, c0) {\n\t\tlet chars = [];\n\n\t\tlet c = c0;\n\t\twhile (c != '\\0') {\n\t\t\tif (c == '_' || (c >= '0' && c <= '9') || (c >= 'A' && c <= 'Z') || (c >= 'a' && c <= 'z') || (this.#irMode && (c == '@' || c == '[' || c == ']'))) {\n\t\t\t\tchars.push(c);\n\t\t\t\tc = this.readChar();\n\t\t\t} else {\n\t\t\t\tthis.unreadChar();\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tlet value = chars.join('');\n\n\t\tif (value == \"true\" || value == \"false\") {\n\t\t\tthis.pushToken(\n\t\t\t\tnew BoolLiteral(\n\t\t\t\t\tnew Site(site.src, site.startPos, this.currentSite.startPos),\n\t\t\t\t\tvalue == \"true\"\n\t\t\t\t)\n\t\t\t);\n\t\t} else {\n\t\t\tthis.pushToken(\n\t\t\t\tnew Word(\n\t\t\t\t\tnew Site(site.src, site.startPos, this.currentSite.startPos),\n\t\t\t\t\tvalue\n\t\t\t\t)\n\t\t\t);\n\t\t}\n\t}\n\n\t/**\n\t * Reads and discards a comment if current '/' char is followed by '/' or '*'.\n\t * Otherwise pushes Symbol('/') onto #ts\n\t * @param {Site} site \n\t */\n\t// comments are discarded\n\treadMaybeComment(site) {\n\t\tlet c = this.readChar();\n\n\t\tif (c == '\\0') {\n\t\t\tthis.pushToken(new SymbolToken(site, '/'));\n\t\t} else if (c == '/') {\n\t\t\tthis.readSingleLineComment();\n\t\t} else if (c == '*') {\n\t\t\tthis.readMultiLineComment(site);\n\t\t} else {\n\t\t\tthis.pushToken(new SymbolToken(site, '/'));\n\t\t\tthis.unreadChar();\n\t\t}\n\t}\n\n\t/**\n\t * Reads and discards a single line comment (from '//' to end-of-line)\n\t */\n\treadSingleLineComment() {\n\t\tlet c = this.readChar();\n\n\t\twhile (c != '\\n' && c != '\\0') {\n\t\t\tc = this.readChar();\n\t\t}\n\t}\n\n\t/**\n\t * Reads and discards a multi-line comment (from '/' '*' to '*' '/')\n\t * @param {Site} site \n\t */\n\treadMultiLineComment(site) {\n\t\tlet prev = '';\n\t\tlet c = this.readChar();\n\n\t\twhile (true) {\n\t\t\tprev = c;\n\t\t\tc = this.readChar();\n\n\t\t\tif (c == '/' && prev == '*') {\n\t\t\t\tbreak;\n\t\t\t} else if (c == '\\0') {\n\t\t\t\tconst errorSite = new Site(site.src, site.startPos, this.currentSite.startPos);\n\t\t\t\terrorSite.syntaxError(\"unterminated multiline comment\");\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * REads a literal integer\n\t * @param {Site} site \n\t */\n\treadSpecialInteger(site) {\n\t\tlet c = this.readChar();\n\n\t\tif (c == '\\0') {\n\t\t\tthis.pushToken(new IntLiteral(site, 0n));\n\t\t} else if (c == 'b') {\n\t\t\tthis.readBinaryInteger(site);\n\t\t} else if (c == 'o') {\n\t\t\tthis.readOctalInteger(site);\n\t\t} else if (c == 'x') {\n\t\t\tthis.readHexInteger(site);\n\t\t} else if ((c >= 'A' && c <= 'Z') || (c >= 'a' && c <= 'z')) {\n\t\t\tsite.syntaxError(`bad literal integer type 0${c}`);\n\t\t} else if (c >= '0' && c <= '9') {\n\t\t\tsite.syntaxError(\"unexpected leading 0\");\n\t\t} else if (c == '.') {\n\t\t\tthis.readFixedPoint(site, ['0']);\n\t\t} else {\n\t\t\tthis.pushToken(new IntLiteral(site, 0n));\n\t\t\tthis.unreadChar();\n\t\t}\n\t}\n\n\t/**\n\t * @param {Site} site \n\t */\n\treadBinaryInteger(site) {\n\t\tthis.readRadixInteger(site, \"0b\", c => (c == '0' || c == '1'));\n\t}\n\n\t/**\n\t * @param {Site} site \n\t */\n\treadOctalInteger(site) {\n\t\tthis.readRadixInteger(site, \"0o\", c => (c >= '0' && c <= '7'));\n\t}\n\n\t/**\n\t * @param {Site} site \n\t */\n\treadHexInteger(site) {\n\t\tthis.readRadixInteger(site, \"0x\",\n\t\t\tc => ((c >= '0' && c <= '9') || (c >= 'a' && c <= 'f')));\n\t}\n\n\t/**\n\t * @param {Site} site \n\t * @param {string[]} chars \n\t * @param {boolean} reverse\n\t * @returns {string[]}\n\t */\n\tstatic assertCorrectDecimalUnderscores(site, chars, reverse = false) {\n\t\tif (chars.some(c => c == '_')) {\n\t\t\tfor (let i = 0; i < chars.length; i++) {\n\t\t\t\tconst c = reverse ? chars[chars.length - 1 - i] : chars[i];\n\n\t\t\t\tif (i == chars.length - 1) {\n\t\t\t\t\tif (c == '_') {\n\t\t\t\t\t\tsite.syntaxError(\"redundant decimal underscore\");\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif ((i+1)%4 == 0) {\n\t\t\t\t\tif (c != '_') {\n\t\t\t\t\t\tsite.syntaxError(\"bad decimal underscore\");\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (c == '_') {\n\t\t\t\t\t\tsite.syntaxError(\"bad decimal underscore\");\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn chars.filter(c => c != '_');\n\t\t} else {\n\t\t\treturn chars;\n\t\t}\n\t}\n\n\t/**\n\t * @param {Site} site \n\t * @param {string} c0 - first character\n\t */\n\treadDecimal(site, c0) {\n\t\t/**\n\t\t * @type {string[]}\n\t\t */\n\t\tlet chars = [];\n\n\t\tlet c = c0;\n\t\twhile (c != '\\0') {\n\t\t\tif ((c >= '0' && c <= '9') || c == '_') {\n\t\t\t\tchars.push(c);\n\t\t\t} else {\n\t\t\t\tif ((c >= '0' && c <= '9') || (c >= 'A' && c <= 'Z') || (c >= 'a' && c <= 'z')) {\n\t\t\t\t\tconst errorSite = new Site(site.src, site.startPos, this.currentSite.startPos);\n\n\t\t\t\t\terrorSite.syntaxError(\"invalid syntax for decimal integer literal\");\n\t\t\t\t} else if (c == '.') {\n\t\t\t\t\tconst cf = this.peekChar();\n\n\t\t\t\t\tif (cf >= '0' && cf <= '9') {\n\t\t\t\t\t\tthis.readFixedPoint(site, chars);\n\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis.unreadChar();\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tc = this.readChar();\n\t\t}\n\n\t\tconst intSite = new Site(site.src, site.startPos, this.currentSite.startPos);\n\n\t\tchars = Tokenizer.assertCorrectDecimalUnderscores(intSite, chars, true);\n\n\t\tthis.pushToken(\n\t\t\tnew IntLiteral(\n\t\t\t\tintSite,\n\t\t\t\tBigInt(chars.filter(c => c != '_').join(''))\n\t\t\t)\n\t\t);\n\t}\n\n\t/**\n\t * @param {Site} site \n\t * @param {string} prefix \n\t * @param {(c: string) => boolean} valid - checks if character is valid as part of the radix\n\t */\n\treadRadixInteger(site, prefix, valid) {\n\t\tlet c = this.readChar();\n\n\t\tlet chars = [];\n\n\t\tif (!(valid(c))) {\n\t\t\tconst errorSite = new Site(site.src, site.startPos, this.currentSite.startPos);\n\n\t\t\terrorSite.syntaxError(`expected at least one char for ${prefix} integer literal`);\n\n\t\t\tthis.unreadChar();\n\t\t\treturn;\n\t\t}\n\n\t\twhile (c != '\\0') {\n\t\t\tif (valid(c)) {\n\t\t\t\tchars.push(c);\n\t\t\t} else {\n\t\t\t\tif ((c >= '0' && c <= '9') || (c >= 'A' && c <= 'Z') || (c >= 'a' && c <= 'z')) {\n\t\t\t\t\tconst errorSite = new Site(site.src, site.startPos, this.currentSite.startPos);\n\n\t\t\t\t\terrorSite.syntaxError(`invalid syntax for ${prefix} integer literal`);\n\t\t\t\t}\n\n\t\t\t\tthis.unreadChar();\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tc = this.readChar();\n\t\t}\n\n\t\tthis.pushToken(\n\t\t\tnew IntLiteral(\n\t\t\t\tnew Site(site.src, site.startPos, this.currentSite.startPos),\n\t\t\t\tBigInt(prefix + chars.join(''))\n\t\t\t)\n\t\t);\n\t}\n\n\t/**\n\t * @param {Site} site \n\t * @param {string[]} leading \n\t */\n\treadFixedPoint(site, leading) {\n\t\t/**\n\t\t * @type {string[]}\n\t\t */\n\t\tlet trailing = [];\n\n\t\tlet c = this.readChar();\n\n\t\twhile (c != '\\0') {\n\t\t\tif ((c >= '0' && c <= '9') || c == '_') {\n\t\t\t\ttrailing.push(c);\n\n\t\t\t} else {\n\t\t\t\tthis.unreadChar();\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tc = this.readChar();\n\t\t}\n\n\t\tconst tokenSite = new Site(site.src, site.startPos, this.currentSite.startPos);\n\n\t\tleading = Tokenizer.assertCorrectDecimalUnderscores(tokenSite, leading, true);\n\n\t\ttrailing = Tokenizer.assertCorrectDecimalUnderscores(tokenSite, trailing, false);\n\n\t\tif (trailing.length > REAL_PRECISION) {\n\t\t\ttokenSite.syntaxError(`literal real decimal places overflow (max ${REAL_PRECISION} supported, but ${trailing.length} specified)`);\n\n\t\t\ttrailing.splice(REAL_PRECISION);\n\t\t} \n\t\t\n\t\twhile (trailing.length < REAL_PRECISION) {\n\t\t\ttrailing.push('0');\n\t\t}\n\n\t\tthis.pushToken(\n\t\t\tnew RealLiteral(\n\t\t\t\ttokenSite,\n\t\t\t\tBigInt(leading.concat(trailing).join(''))\n\t\t\t)\n\t\t);\n\t}\n\n\t/**\n\t * Reads literal hexadecimal representation of ByteArray\n\t * @param {Site} site \n\t */\n\treadByteArray(site) {\n\t\tlet c = this.readChar();\n\n\t\tlet chars = [];\n\n\t\t// case doesn't matter\n\t\twhile ((c >= 'a' && c <= 'f') || (c >= '0' && c <= '9')) {\n\t\t\tchars.push(c);\n\t\t\tc = this.readChar();\n\t\t}\n\n\t\t// empty byteArray is allowed (eg. for Ada mintingPolicyHash)\n\n\t\t// last char is the one that made the while loop break, so should be unread\n\t\tthis.unreadChar();\n\n\t\tlet bytes = hexToBytes(chars.join(''));\n\n\t\tthis.pushToken(\n\t\t\tnew ByteArrayLiteral(\n\t\t\t\tnew Site(site.src, site.startPos, this.currentSite.startPos),\n\t\t\t\tbytes\n\t\t\t)\n\t\t);\n\t}\n\n\t/**\n\t * Reads literal Utf8 string and immediately encodes it as a ByteArray\n\t * @param {Site} site \n\t */\n\treadMaybeUtf8ByteArray(site) {\n\t\tlet c = this.readChar();\n\n\t\tif (c == '\"') {\n\t\t\tconst s = this.readStringInternal(site)\n\t\t\n\t\t\tthis.pushToken(\n\t\t\t\tnew ByteArrayLiteral(\n\t\t\t\t\tnew Site(site.src, site.startPos, this.currentSite.startPos),\n\t\t\t\t\ttextToBytes(s)\n\t\t\t\t)\n\t\t\t);\n\t\t} else {\n\t\t\tthis.unreadChar();\n\n\t\t\tthis.readWord(site, 'b');\n\t\t}\n\t}\n\n\t/**\n\t * Doesn't push a token, instead returning the string itself\n\t * @internal\n\t * @param {Site} site \n\t * @returns {string}\n\t */\n\treadStringInternal(site) {\n\t\tlet c = this.readChar();\n\n\t\tlet chars = [];\n\n\t\tlet escaping = false;\n\t\t/** @type {?Site} */\n\t\tlet escapeSite = null; // for escape syntax errors\n\n\t\twhile (!(!escaping && c == '\"')) {\n\t\t\tif (c == '\\0') {\n\t\t\t\tsite.syntaxError(\"unmatched '\\\"'\");\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tif (escaping) {\n\t\t\t\tif (c == 'n') {\n\t\t\t\t\tchars.push('\\n');\n\t\t\t\t} else if (c == 't') {\n\t\t\t\t\tchars.push('\\t');\n\t\t\t\t} else if (c == '\\\\') {\n\t\t\t\t\tchars.push('\\\\');\n\t\t\t\t} else if (c == '\"') {\n\t\t\t\t\tchars.push(c);\n\t\t\t\t} else if (escapeSite !== null) {\n\t\t\t\t\tconst errorSite = new Site(escapeSite.src, escapeSite.startPos, this.currentSite.startPos);\n\n\t\t\t\t\terrorSite.syntaxError(`invalid escape sequence ${c}`);\n\t\t\t\t} else {\n\t\t\t\t\tthrow new Error(\"escape site should be non-null\");\n\t\t\t\t}\n\n\t\t\t\tescaping = false;\n\t\t\t\tescapeSite = null;\n\t\t\t} else {\n\t\t\t\tif (c == '\\\\') {\n\t\t\t\t\tescapeSite = this.currentSite;\n\t\t\t\t\tescaping = true;\n\t\t\t\t} else {\n\t\t\t\t\tchars.push(c);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tc = this.readChar();\n\t\t}\n\n\t\treturn chars.join('');\n\t}\n\n\t/**\n\t * Reads literal string delimited by double quotes.\n\t * Allows for three escape character: '\\\\', '\\n' and '\\t'\n\t * @param {Site} site \n\t */\n\treadString(site) {\n\t\tconst s = this.readStringInternal(site)\n\t\t\n\t\tthis.pushToken(\n\t\t\tnew StringLiteral(\n\t\t\t\tnew Site(site.src, site.startPos, this.currentSite.startPos),\n\t\t\t\ts\n\t\t\t)\n\t\t);\n\t}\n\n\t/**\n\t * Reads single or double character symbols\n\t * @param {Site} site \n\t * @param {string} c0 - first character\n\t */\n\treadSymbol(site, c0) {\n\t\tlet chars = [c0];\n\n\t\t/** @type {(second: string) => boolean} */\n\t\tlet parseSecondChar = (second) => {\n\t\t\tlet d = this.readChar();\n\n\t\t\tif (d == second) {\n\t\t\t\tchars.push(d);\n\t\t\t\treturn true;\n\t\t\t} else {\n\t\t\t\tthis.unreadChar();\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\tif (c0 == '|') {\n\t\t\tparseSecondChar('|');\n\t\t} else if (c0 == '&') {\n\t\t\tparseSecondChar('&');\n\t\t} else if (c0 == '=') {\n\t\t\tparseSecondChar('=') || parseSecondChar('>');\n\t\t} else if (c0 == '!' || c0 == '<' || c0 == '>') { // could be !=, ==, <= or >=\n\t\t\tparseSecondChar('=');\n\t\t} else if (c0 == ':') {\n\t\t\tparseSecondChar(':');\n\t\t} else if (c0 == '-') {\n\t\t\tparseSecondChar('>');\n\t\t}\n\n\t\tthis.pushToken(\n\t\t\tnew SymbolToken(\n\t\t\t\tnew Site(site.src, site.startPos, site.endPos),\n\t\t\t\tchars.join('')\n\t\t\t)\n\t\t);\n\t}\n\n\t/**\n\t * Separates tokens in fields (separted by commas)\n\t * @param {Token[]} ts \n\t * @returns {Group | null}\n\t */\n\tstatic buildGroup(ts) {\n\t\tconst open = assertDefined(ts.shift()).assertSymbol();\n\n\t\tif (!open) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst stack = [open]; // stack of symbols\n\t\tlet curField = [];\n\t\tlet fields = [];\n\n\t\t/** @type {null | SymbolToken} */\n\t\tlet firstComma = null;\n\n\t\t/** @type {null | SymbolToken} */\n\t\tlet lastComma = null;\n\n\t\t/** @type {null | Site} */\n\t\tlet endSite = null;\n\n\t\twhile (stack.length > 0 && ts.length > 0) {\n\t\t\tconst t = assertToken(ts.shift(), open.site);\n\n\t\t\tif (!t) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tconst prev = stack.pop();\n\n\t\t\tendSite = t.site;\n\n\t\t\tif (t != undefined && prev != undefined) {\n\t\t\t\tif (!t.isSymbol(Group.matchSymbol(prev))) {\n\t\t\t\t\tstack.push(prev);\n\n\t\t\t\t\tif (Group.isCloseSymbol(t)) {\n\t\t\t\t\t\tt.site.syntaxError(`unmatched '${assertDefined(t.assertSymbol()).value}'`);\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t} else if (Group.isOpenSymbol(t)) {\n\t\t\t\t\t\tstack.push(assertDefined(t.assertSymbol()));\n\t\t\t\t\t\tcurField.push(t);\n\t\t\t\t\t} else if (t.isSymbol(\",\") && stack.length == 1) {\n\t\t\t\t\t\tif (firstComma === null) {\n\t\t\t\t\t\t\tfirstComma = t.assertSymbol();\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tlastComma = t.assertSymbol();\n\t\t\t\t\t\tif (curField.length == 0) {\n\t\t\t\t\t\t\tt.site.syntaxError(\"empty field\");\n\t\t\t\t\t\t\treturn null;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tfields.push(curField);\n\t\t\t\t\t\t\tcurField = [];\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcurField.push(t);\n\t\t\t\t\t}\n\t\t\t\t} else if (stack.length > 0) {\n\t\t\t\t\tcurField.push(t);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthrow new Error(\"unexpected\");\n\t\t\t}\n\t\t}\n\n\t\tlet last = stack.pop();\n\t\tif (last != undefined) {\n\t\t\tlast.syntaxError(`EOF while matching '${last.value}'`);\n\t\t\treturn null;\n\t\t}\n\n\t\tif (curField.length > 0) {\n\t\t\t// add removing field\n\t\t\tfields.push(curField);\n\t\t} else if (lastComma !== null) {\n\t\t\tlastComma.syntaxError(`trailing comma`);\n\t\t\treturn null;\n\t\t}\n\n\t\tlet site = open.site;\n\n\t\tif (endSite) {\n\t\t\tsite = site.merge(endSite);\n\t\t}\n\n\t\treturn new Group(site, open.value, fields, firstComma);\n\t}\n\n\t/**\n\t * Match group open with group close symbols in order to form groups.\n\t * This is recursively applied to nested groups.\n\t * @param {Token[]} ts \n\t * @returns {Token[] | null}\n\t */\n\tnestGroups(ts) {\n\t\t/**\n\t\t * @type {Token[][]}\n\t\t */\n\t\tconst stack = [];\n\n\t\t/**\n\t\t * @type {Token[]}\n\t\t */\n\t\tlet current = [];\n\n\t\tfor (let t of ts) {\n\t\t\tif (Group.isOpenSymbol(t)) {\n\t\t\t\tstack.push(current);\n\n\t\t\t\tcurrent = [t];\n\t\t\t} else if (Group.isCloseSymbol(t)) {\n\t\t\t\tconst prev = current[0]?.assertSymbol();\n\n\t\t\t\tif (!prev) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\n\t\t\t\tif (!t.isSymbol(Group.matchSymbol(prev))) {\n\t\t\t\t\tprev.syntaxError(`unmatched '${prev.value}'`);\n\t\t\t\t\tt.syntaxError(`unmatched '${assertDefined(t.assertSymbol()).value}'`);\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\n\t\t\t\tcurrent.push(t);\n\n\t\t\t\tconst group = Tokenizer.buildGroup(current);\n\t\t\t\tif (!group) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\n\t\t\t\tcurrent = assertDefined(stack.pop());\n\n\t\t\t\tcurrent.push(group);\n\t\t\t} else {\n\t\t\t\tcurrent.push(t);\n\t\t\t}\n\t\t}\n\n\t\tif (stack.length > 0) {\n\t\t\tconst t = stack[stack.length - 1][0];\n\n\t\t\tif (!t.isSymbol()) {\n\t\t\t\tif (current.length > 0) {\n\t\t\t\t\tconst open = current[0];\n\t\t\t\t\t\n\t\t\t\t\tif (open && open.isSymbol()) {\n\t\t\t\t\t\topen.syntaxError(`unmatched '${open.assertSymbol()?.value}`);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconsole.log(current)\n\t\t\t\t\t\tthrow new Error(\"unhandled\")\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tt.syntaxError(`unmatched '${t.assertSymbol()?.value}'`);\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn current;\n\t}\n}\n\n/**\n * Tokenizes a string (wrapped in Source)\n * Also used by VSCode plugin\n * @internal\n * @param {Source} src \n * @returns {Token[] | null}\n */\nexport function tokenize(src) {\n\tlet tokenizer = new Tokenizer(src);\n\n\treturn tokenizer.tokenize();\n}\n\n/**\n * Tokenizes an IR string with a codemap to the original source\n * @internal\n * @param {string} rawSrc \n * @param {CodeMap} codeMap \n * @returns {Token[]}\n */\nexport function tokenizeIR(rawSrc, codeMap = []) {\n\tlet src = new Source(rawSrc, \"<ir>\");\n\n\t// the Tokenizer for Helios can simply be reused for the IR\n\tlet tokenizer = new Tokenizer(src, codeMap, true);\n\n\tconst ts = tokenizer.tokenize();\n\n\tif (src.errors.length > 0) {\n\t\tconsole.log(src.pretty());\n\t\tthrow src.errors[0];\n\t} else if (ts === null) {\n\t\tthrow new Error(\"should've been thrown above\");\n\t}\n\n\treturn ts;\n}\n\n\n\n////////////////////////////////\n// Section 13: Eval common types\n////////////////////////////////\n/**\n * @template {HeliosData} T\n */\n\n/**\n * @internal\n * @typedef {{\n *   type:  string\n * } | {\n *   type:     \"List\"\n *   itemType: TypeSchema\n * } | {\n *   type:      \"Map\"\n *   keyType:   TypeSchema\n *   valueType: TypeSchema\n * } | {\n *   type:     \"Option\"\n *   someType: TypeSchema\n * } | {\n *   type:       \"Struct\"\n *   fieldTypes: NamedTypeSchema[]\n * } | {\n *   type:         \"Enum\"\n *   variantTypes: {name: string, fieldTypes: NamedTypeSchema[]}[]\n * }} TypeSchema\n */\n\n/**\n * @internal\n * @typedef {{\n * \t name: string\n * } & TypeSchema} NamedTypeSchema\n */\n\n/**\n * @internal\n * @typedef {{\n *   name: string\n *   typeClass: TypeClass\n * }} ParameterI\n */\n\n/**\n * @internal\n * @typedef {Map<ParameterI, Type>} InferenceMap\n */\n\n/**\n * Used by the bundle cli command to generate a typescript annotations and (de)serialization code\n * inputTypes form a type union\n * @internal\n * @typedef {{\n *   inputType:    string\n *   outputType:   string\n *   internalType: TypeSchema\n * }} TypeDetails\n */\n\n/**\n * @internal\n * @typedef {{[name: string]: (obj: any) => Promise<UplcData>}} JsToUplcHelpers\n */\n\n/**\n * @internal\n * @typedef {{[name: string]: (data: UplcData) => Promise<any>}} UplcToJsHelpers\n */\n\n/**\n * @internal\n * @typedef {(obj: any, helpers: JsToUplcHelpers) => Promise<UplcData>} JsToUplcConverter\n */\n\n/**\n * @internal\n * @typedef {(data: UplcData, helpers: UplcToJsHelpers) => Promise<any>} UplcToJsConverter\n */\n\n/**\n * @internal\n * @typedef {Named & Type & {\n *   asDataType:   DataType\n *   fieldNames:   string[]\n *   offChainType: (null | HeliosDataClass<HeliosData>)\n *   typeDetails?: TypeDetails\n *   jsToUplc:     JsToUplcConverter\n *   uplcToJs:     UplcToJsConverter\n *   ready:        boolean\n * }} DataType\n */\n\n/**\n * @internal\n * @typedef {DataType & {\n *   asEnumMemberType: EnumMemberType\n *   constrIndex:      number\n *   parentType:       DataType\n * }} EnumMemberType\n */\n\n/**\n * EvalEntities assert themselves\n * @internal\n * @typedef {{\n *   asDataType:       (null | DataType)\n *   asEnumMemberType: (null | EnumMemberType)\n *   asFunc:           (null | Func)\n *   asInstance:       (null | Instance)\n *   asNamed:          (null | Named)\n *   asNamespace:      (null | Namespace)\n *   asParametric:     (null | Parametric)\n * \t asType:           (null | Type)\n *   asTyped:          (null | Typed)\n *   asTypeClass:      (null | TypeClass)\n *   toString():       string\n * }} EvalEntity\n */\n\n/**\n * @internal\n * @typedef {Typed & {\n *   asFunc: Func\n * \t funcType: FuncType\n *   call(site: Site, args: Typed[], namedArgs?: {[name: string]: Typed}): (null | Typed)\n * }} Func\n */\n\n/**\n * @internal\n * @typedef {Typed & {\n *   asInstance:      Instance\n *   fieldNames:      string[]\n *   instanceMembers: InstanceMembers\n * }} Instance\n */\n\n/**\n * @internal\n * @typedef {EvalEntity & {\n *   asNamed: Named\n *   name:    string\n *   path:    string\n * }} Named\n */\n\n/**\n * @internal\n * @typedef {EvalEntity & {\n *   asNamespace: Namespace\n *   namespaceMembers: NamespaceMembers\n * }} Namespace\n */\n\n/**\n * @internal\n * @typedef {EvalEntity & {\n *   asParametric: Parametric\n *   offChainType: (null | ((...any) => HeliosDataClass<HeliosData>))\n *   typeClasses: TypeClass[]\n *   apply(types: Type[], site?: Site): EvalEntity\n *   inferCall(site: Site, args: Typed[], namedArgs?: {[name: string]: Typed}, paramTypes?: Type[]): Func\n * \t infer(site: Site, map: InferenceMap): Parametric\n * }} Parametric\n */\n\n/**\n * @internal\n * @typedef {EvalEntity & {\n *   asType:               Type\n *   instanceMembers:      InstanceMembers\n *   typeMembers:          TypeMembers\n *   isBaseOf(type: Type): boolean\n *   infer(site: Site, map: InferenceMap, type: null | Type): Type\n *   toTyped():            Typed\n *   isParametric():       boolean\n * }} Type\n */\n\n/**\n * @internal\n * @typedef {EvalEntity & {\n *   asTyped: Typed\n *   type: Type\n * }} Typed\n */\n\n/**\n * @internal\n * @typedef {EvalEntity & {\n *   asTypeClass:                        TypeClass\n *   genInstanceMembers(impl: Type):     TypeClassMembers\n *   genTypeMembers(impl: Type):         TypeClassMembers\n *   isImplementedBy(type: Type):        boolean\n *   toType(name: string, path: string, parameter?: null | ParameterI): Type\n * }} TypeClass\n */\n\n/**\n * @internal\n * @typedef {{[name: string]: (Parametric | Type)}} InstanceMembers\n */\n\n/**\n * @internal\n * @typedef {{[name: string]: EvalEntity}} NamespaceMembers\n */\n\n/**\n * @internal\n * @typedef {{[name: string]: (Parametric | Type | Typed)}} TypeMembers\n */\n\n/**\n * @internal\n * @typedef {{[name: string]: Type}} TypeClassMembers\n */\n\n/**\n * @internal\n * @param {Parametric} parametric\n * @param {Type[]} types\n * @returns {DataType}\n */\nexport function applyTypes(parametric, ...types) {\n    return assertDefined(parametric.apply(types).asDataType);\n}\n\n/**\n * @internal\n */\nexport class Common {\n\tconstructor() {\n\t}\n\n\t/**\n\t * @returns {boolean}\n\t */\n\tisParametric() {\n\t\treturn false;\n\t}\n\n    /**\n     * @param {Typed} i \n     * @param {Type} t \n     * @returns {boolean}\n     */\n    static instanceOf(i, t) {\n        return t.isBaseOf(i.type);\n    }\n\n\t/**\n\t * Compares two types. Throws an error if neither is a Type.\n\t * @example\n\t * Common.typesEq(IntType, IntType) == true\n\t * @param {Type} a \n\t * @param {Type} b \n\t * @returns {boolean}\n\t */\n\tstatic typesEq(a, b) {\n\t\treturn a.isBaseOf(b) && b.isBaseOf(a);\n\t}\n\n\t/**\n\t * @param {Type} type \n\t */\n\tstatic isEnum(type) {\n\t\treturn Object.values(type.typeMembers).some(v => v.asEnumMemberType);\n\t}\n\n\t/**\n\t * @param {Type} type \n\t */\n\tstatic countEnumMembers(type) {\n\t\treturn Object.values(type.typeMembers).reduce((prev, v) => v.asEnumMemberType ? prev + 1 : prev, 0);\n\t}\n  \n    /**\n     * @param {TypeClass} tc \n     * @returns {string[]}\n     */\n    static typeClassMembers(tc) {\n        const dummy = tc.toType(\"\", \"\");\n\n        const typeMemberNames = Object.keys(tc.genTypeMembers(dummy)).sort();\n        const instanceMemberNames = Object.keys(tc.genInstanceMembers(dummy)).sort();\n\n        return typeMemberNames.concat(instanceMemberNames);\n    }\n\n    /**\n     * @param {Type} type \n     * @param {TypeClass} tc \n     * @returns {boolean}\n     */\n    static typeImplements(type, tc) {\n\t\tif (type instanceof AllType || type.asDataType?.ready === false) {\n\t\t\treturn true;\n\t\t}\n\n        const typeMembers = tc.genTypeMembers(type);\n\n        for (let k in typeMembers) {\n            const check = type.typeMembers[k]?.asType;\n\n            if ((check && !typeMembers[k].asType?.isBaseOf(check)) || !check) {\n                return false;\n            } \n        }\n\n        const instanceMembers = tc.genInstanceMembers(type);\n\n        for (let k in instanceMembers) {\n            const check = type.instanceMembers[k]?.asType;\n\n            if ((check && !instanceMembers[k].asType?.isBaseOf(check)) || !check) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    /**\n     * @type {null | DataType}\n     */\n    get asDataType() {\n        return null;\n    }\n\n    /**\n     * @type {null | EnumMemberType}\n     */\n    get asEnumMemberType() {\n        return null;\n    }\n\n    /**\n     * @type {null | Func}\n     */\n    get asFunc() {\n        return null;\n    }\n\n    /**\n\t * @type {null | Instance}\n\t */\n\tget asInstance() {\n\t\treturn null;\n\t}\n\n    /**\n     * @type {null | Named}\n     */\n    get asNamed() {\n        return null;\n    }\n\n    /**\n\t * @type {null | Namespace}\n\t */\n\tget asNamespace() {\n\t\treturn null;\n\t}\n\n    /**\n     * @type {null | Parametric}\n     */\n    get asParametric() {\n        return null;\n    }\n\n\t/**\n\t * @type {null | Type}\n\t */\n\tget asType() {\n\t\treturn null;\n\t}\n\n    /**\n     * @type {null | Typed}\n     */\n    get asTyped() {\n        return this.asInstance ?? this.asFunc;\n    }\n\n\t/**\n\t * @type {null | TypeClass}\n\t */\n\tget asTypeClass() {\n\t\treturn null;\n\t}\n\n\t/**\n\t * @type {boolean}\n\t */\n\tget ready() {\n\t\treturn true;\n\t}\n\n\t/**\n\t * @param {any} obj\n\t * @param {JsToUplcHelpers} helpers\n\t * @returns {Promise<UplcData>}\n\t */\n\tjsToUplc(obj, helpers) {\n\t\tthrow new Error(\"not yet implemented\");\n\t}\n\n\t/**\n\t * @param {UplcData} data\n\t * @param {UplcToJsHelpers} helpers\n\t * @returns {Promise<any>}\n\t */\n\tuplcToJs(data, helpers) {\n\t\tthrow new Error(\"not yet implemented\");\n\t}\n\n    /**\n     * @returns {string}\n     */\n    toString() {\n        throw new Error(\"not yet implemented\");\n    }\n}\n\n/**\n * Used to represent all possible types whenever a TypeExpr throws an error (so type evaluation can continue in order to collect all type errors at once)\n * @internal\n * @implements {DataType}\n */\nexport class AllType extends Common {\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\t/**\n\t * @type {DataType}\n\t */\n\tget asDataType() {\n\t\treturn this;\n\t}\n\n\t/**\n\t * @type {Named}\n\t */\n\tget asNamed() {\n\t\treturn this;\n\t}\n\n\t/**\n     * @type {Type}\n     */\n\tget asType() {\n        return this;\n    }\n\n\t/**\n\t * @type {HeliosDataClass<HeliosData> | null}\n\t */\n\tget offChainType() {\n\t\treturn null;\n\t}\n\n\t/**\n\t * @type {string[]}\n\t */\n\tget fieldNames() {\n\t\treturn [];\n\t}\n\n\t/**\n\t * @type {InstanceMembers}\n\t */\n\tget instanceMembers() {\n\t\treturn {};\n\t}\n\n\t/**\n\t * @type {string}\n\t */\n\tget name() {\n\t\treturn \"\";\n\t}\n\n\t/**\n\t * @type {string}\n\t */\n\tget path() {\n\t\treturn \"\";\n\t}\n\n\t/**\n\t * @type {TypeMembers}\n\t */\n\tget typeMembers() {\n\t\treturn {}\n\t}\n\n\t/**\n     * @param {Site} site \n     * @param {InferenceMap} map \n     * @param {null | Type} type \n     * @returns {Type}\n     */\n\tinfer(site, map, type) {\n        return this;\n    }\n\n\t/**\n\t * @param {Type} other \n\t * @returns {boolean}\n\t */\n\tisBaseOf(other) {\n\t\treturn true;\n\t}\n\n\t/**\n\t * @returns {Typed}\n\t */\n\ttoTyped() {\n\t\tthrow new Error(\"can't be turned into a type\");\n\t}\n\n\t/**\n\t * @returns {string}\n\t */\n\ttoString() {\n\t\treturn \"All\";\n\t}\n}\n\n/**\n * @internal\n * @implements {DataType}\n */\nexport class AnyType extends Common {\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tget fieldNames() {\n\t\treturn []\n\t}\n\n\tget offChainType() {\n\t\treturn null;\n\t}\n\n\t/**\n\t * @type {string}\n\t */\n\tget name() {\n\t\treturn \"Any\";\n\t}\n\n\t/**\n\t * @type {string}\n\t */\n\tget path() {\n\t\treturn \"\";\n\t}\n\n\t/**\n     * @type {Type}\n     */\n\tget asType() {\n        return this;\n    }\n\n\t/**\n\t * @type {Named}\n\t */\n\tget asNamed() {\n\t\treturn this;\n\t}\n\n\t/**\n\t * @type {DataType}\n\t */\n\tget asDataType() {\n\t\treturn this;\n\t}\n\n\t/**\n\t * @type {InstanceMembers}\n\t */\n\tget instanceMembers() {\n\t\treturn {};\n\t}\n\t\n\t/**\n\t * @type {TypeMembers}\n\t */\n\tget typeMembers() {\n\t\treturn {}\n\t}\n\n\t/**\n     * @param {Site} site \n     * @param {InferenceMap} map \n     * @param {null | Type} type \n     * @returns {Type}\n     */\n\tinfer(site, map, type) {\n        return this;\n    }\n\n\t/**\n\t * @param {Type} other \n\t * @returns {boolean}\n\t */\n\tisBaseOf(other) {\n\t\treturn true;\n\t}\n\n\t/**\n\t * @returns {Typed}\n\t */\n\ttoTyped() {\n\t\tthrow new Error(\"can't be turned into a type\");\n\t}\n\n\t/**\n\t * @returns {string}\n\t */\n\ttoString() {\n\t\treturn \"Any\";\n\t}\n}\n\n/**\n * Type of special case of no-return value where execution can't continue.\n * @internal\n * @implements {Type}\n */\nexport class ErrorType extends Common {\n\tconstructor() {\n        super();\n\t}\n\n    /**\n     * @type {InstanceMembers}\n     */\n    get instanceMembers() {\n        return {};\n    }\n\n    /**\n     * @type {TypeMembers}\n     */\n    get typeMembers() {\n        return {};\n    }\n\n    /**\n     * @type {Type}\n     */\n    get asType() {\n        return this;\n    }\n\n    /**\n     * @param {Site} site \n     * @param {InferenceMap} map \n     * @param {null | Type} type \n     * @returns {Type}\n     */\n    infer(site, map, type) {\n        return this;\n    }\n\n\t/**\n\t * @param {Type} type \n\t * @returns {boolean}\n\t */\n\tisBaseOf(type) {\n\t\treturn type instanceof ErrorType;\n\t}\n\n    /**\n     * @returns {string}\n     */\n    toString() {\n        return \"()\";\n    }\n\n\t/**\n\t * @returns {Typed}\n\t */\n\ttoTyped() {\n\t\treturn new ErrorEntity();\n\t}\n}\n\n/**\n * @internal\n */\nexport class ArgType {\n\t#name;\n\t#type;\n\t#optional;\n\n\t/**\n\t * \n\t * @param {null | Word} name \n\t * @param {Type} type \n\t * @param {boolean} optional \n\t */\n\tconstructor(name, type, optional = false) {\n\t\tthis.#name = name;\n\t\tthis.#type = assertDefined(type);\n\t\tthis.#optional = optional;\n\t}\n\n\t/**\n\t * @type {string}\n\t */\n\tget name() {\n\t\tif (this.#name === null) {\n\t\t\treturn \"\";\n\t\t} else {\n\t\t\treturn this.#name.toString();\n\t\t}\n\t}\n\n\t/**\n\t * @type {Type}\n\t */\n\tget type() {\n\t\treturn this.#type;\n\t}\n\n    /**\n\t * @internal\n\t * @param {Site} site \n\t * @param {InferenceMap} map \n\t * @param {null | Type} type \n\t * @returns {ArgType}\n\t */\n\tinfer(site, map, type) {\n\t\treturn new ArgType(\n\t\t\tthis.#name,\n\t\t\tthis.#type.infer(site, map, type),\n\t\t\tthis.#optional\n\t\t);\n\t}\n\n    /**\n\t * @param {ArgType} other \n\t * @returns {boolean}\n\t */\n\tisBaseOf(other) {\n\t\t// if this arg has a default value, the other arg must also have a default value\n\t\tif (this.#optional && !other.#optional) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// if this is named, the other must be named as well\n\t\tif (this.#name != null) {\n\t\t\treturn this.#name.toString() == (other.#name?.toString() ?? \"\");\n\t\t}\n\n\t\tif (!other.#type.isBaseOf(this.#type)) { // note the reversal of the check\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * @returns {boolean}\n\t */\n\tisNamed() {\n\t\treturn this.#name !== null;\n\t}\n\n\t/**\n\t * @returns {boolean}\n\t */\n\tisOptional() {\n\t\treturn this.#optional;\n\t}\n\n\t/**\n\t * @returns {string}\n\t */\n\ttoString() {\n\t\treturn [\n\t\t\tthis.#name != null ? `${this.#name.toString()}: ` : \"\",\n\t\t\tthis.#optional ? \"?\" : \"\",\n\t\t\tthis.#type.toString()\n\t\t].join(\"\");\n\t}\n}\n\n/**\n * Function type with arg types and a return type\n * @internal\n * @implements {Type}\n */\nexport class FuncType extends Common {\n\t/**\n\t * @type {ArgType[]}\n\t */\n\t#argTypes;\n\n\t/**\n\t * @type {Type}\n\t */\n\t#retType;\n\n\t/**\n\t * @param {Type[] | ArgType[]} argTypes \n\t * @param {Type} retType \n\t */\n\tconstructor(argTypes, retType) {\n        super();\n\n\t\tthis.#argTypes = argTypes.map(at => (at instanceof ArgType) ? at : new ArgType(null, at));\n\n\t\tthis.#retType = retType;\n\t}\n\n    /**\n\t * @type {Type[]}\n\t */\n\tget argTypes() {\n\t\treturn this.#argTypes.slice().map(at => at.type);\n\t}\n\n\t/**\n\t * @type {InstanceMembers}\n\t */\n\tget instanceMembers() {\n\t\treturn {};\n\t}\n\n    /**\n\t * @type {number}\n\t */\n\tget nArgs() {\n\t\treturn this.#argTypes.length;\n\t}\n\n    /**\n\t * @type {number}\n\t */\n\tget nNonOptArgs() {\n\t\treturn this.#argTypes.filter(at => !at.isOptional()).length;\n\t}\n\n    /**\n\t * @type {number}\n\t */\n\tget nOptArgs() {\n\t\treturn this.#argTypes.filter(at => at.isOptional()).length;\n\t}\n\n    /**\n\t * @type {Type}\n\t */\n\tget retType() {\n\t\treturn this.#retType;\n\t}\n\n    /**\n\t * @type {TypeMembers}\n\t */\n\tget typeMembers() {\n\t\treturn {};\n\t}\n\n\t/**\n\t * @type {Type}\n\t */\n\tget asType() {\n\t\treturn this;\n    }\n\n\t/**\n\t * Expand tuples in posArgs, if that matches argTypes better\n\t * @param {Typed[]} posArgs \n\t * @returns {Typed[]}\n\t */\n\texpandTuplesInPosArgs(posArgs) {\n\t\tposArgs = posArgs.slice();\n\t\tlet arg = posArgs.shift();\n\n\t\t/**\n\t\t * @type {Typed[]}\n\t\t */\n\t\tlet result = [];\n\t\t\n\t\tlet i = 0;\n\t\t\n\t\twhile (arg) {\n\t\t\tif (i < this.#argTypes.length && Common.instanceOf(arg, this.#argTypes[i].type)) {\n\t\t\t\tresult.push(arg);\n\t\t\t\ti++;\n\t\t\t} else {\n\t\t\t\tconst tupleItemTypes = getTupleItemTypes(arg.type);\n\n\t\t\t\tif (tupleItemTypes && tupleItemTypes.every((tit, j) => (i+j < this.#argTypes.length) && Common.instanceOf(tit.toTyped(), this.#argTypes[i+j].type))) {\n\t\t\t\t\tresult = result.concat(tupleItemTypes.map(tit => tit.toTyped()));\n\t\t\t\t\ti += tupleItemTypes.length;\n\t\t\t\t} else {\n\t\t\t\t\t// mismatched type, but don't throw error here because better error will be thrown later\n\t\t\t\t\tresult.push(arg);\n\t\t\t\t\ti++;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\targ = posArgs.shift();\n\t\t}\n\n\t\treturn result;\n\t}\n\t\n\t/**\n\t * Checks if arg types are valid.\n\t * Throws errors if not valid. Returns the return type if valid. \n\t * @param {Site} site \n\t * @param {Typed[]} posArgs\n\t * @param {{[name: string]: Typed}} namedArgs\n\t * @returns {null | Type}\n\t */\n\tcheckCall(site, posArgs, namedArgs = {}) {\n\t\tposArgs = this.expandTuplesInPosArgs(posArgs); \n\n\t\tif (posArgs.length < this.nNonOptArgs) {\n\t\t\t// check if each nonOptArg is covered by the named args\n\t\t\tfor (let i = 0; i < this.nNonOptArgs; i++) {\n\t\t\t\tif (!this.#argTypes[i].isNamed()) {\n\t\t\t\t\tsite.typeError(`expected at least ${this.#argTypes.filter(at => !at.isNamed()).length} positional arg(s), got ${posArgs.length} positional arg(s)`);\n\t\t\t\t\treturn null;\n\t\t\t\t} else if (!(this.#argTypes[i].name in namedArgs)) {\n\t\t\t\t\tsite.typeError(`expected at least ${this.nNonOptArgs} arg(s), missing '${this.#argTypes[i].name}'`);\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t}\n\n\t\t} else if (posArgs.length > this.#argTypes.length) {\n\t\t\tsite.typeError(`expected at most ${this.#argTypes.length} arg(s), got ${posArgs.length} arg(s)`);\n\t\t\treturn null;\n\t\t}\n\n\t\tfor (let i = 0; i < posArgs.length; i++) {\n\t\t\tif (!Common.instanceOf(posArgs[i], this.#argTypes[i].type)) {\n\t\t\t\tsite.typeError(`expected '${this.#argTypes[i].type.toString()}' for arg ${i + 1}, got '${posArgs[i].type.toString()}'`);\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}\n\n\t\tfor (let key in namedArgs) {\n\t\t\tconst i = this.#argTypes.findIndex(at => at.name == key);\n\n\t\t\tif (i == -1) {\n\t\t\t\tsite.typeError(`arg named ${key} not found in function type ${this.toString()}`);\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (i < posArgs.length) {\n\t\t\t\tsite.typeError(`named arg '${key}' already covered by positional arg ${i+1}`);\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tconst thisArg = this.#argTypes[i];\n\n\t\t\tif (!Common.instanceOf(namedArgs[key], thisArg.type)) {\n\t\t\t\tsite.typeError(`expected '${thisArg.type.toString()}' for arg '${key}', got '${namedArgs[key].toString()}`);\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t}\n\n\t\treturn this.#retType;\n\t}\n\n    /**\n\t * @internal\n\t * @param {Site} site\n\t * @param {InferenceMap} map \n\t * @param {null | Type} type \n\t * @returns {Type}\n\t */\n\tinfer(site, map, type) {\n\t\tif (!type) {\n\t\t\treturn new FuncType(\n\t\t\t\tthis.#argTypes.map(at => at.infer(site, map, null)),\n\t\t\t\tthis.#retType.infer(site, map, null)\n\t\t\t);\n\t\t} else if (type instanceof FuncType) {\n\t\t\tif (type.argTypes.length == this.#argTypes.length) {\n\t\t\t\treturn new FuncType(\n\t\t\t\t\tthis.#argTypes.map((at, i) => at.infer(site, map, type.argTypes[i])),\n\t\t\t\t\tthis.#retType.infer(site, map, type.retType)\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\tthrow site.typeError(`unable to infer type of ${this.toString()}`);\n\t}\n\n    /**\n\t * @internal\n\t * @param {Site} site \n\t * @param {InferenceMap} map \n\t * @param {Type[]} argTypes \n\t * @returns {FuncType}\n\t */\n\tinferArgs(site, map, argTypes) {\n\t\tif (argTypes.length == this.argTypes.length) {\n\t\t\treturn new FuncType(\n\t\t\t\tthis.#argTypes.map((at, i) => at.infer(site, map, argTypes[i])),\n\t\t\t\tthis.#retType.infer(site, map, null)\n\t\t\t)\n\t\t}\n\n\t\tthrow site.typeError(`expected ${this.argTypes.length} arg(s), got ${argTypes.length}`);\n\t}\n\n    /** \n\t * Checks if any of 'this' argTypes or retType is same as Type.\n\t * Only if this checks return true is the association allowed.\n\t * @param {Site} site\n\t * @param {Type} type\n\t * @returns {boolean}\n\t */\n\tisAssociated(site, type) {\n\t\tfor (let arg of this.#argTypes) {\n\t\t\tif (Common.typesEq(arg.type, type)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\tif (Common.typesEq(type, this.#retType)) {\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n\n    /**\n\t * Checks if 'this' is a base type of another FuncType.\n\t * The number of args needs to be the same.\n\t * Each argType of the FuncType we are checking against needs to be the same or less specific (i.e. isBaseOf(this.#argTypes[i]))\n\t * The retType of 'this' needs to be the same or more specific\n\t * @param {Type} other \n\t * @returns {boolean}\n\t */\n\tisBaseOf(other) {\n\t\tif (other instanceof FuncType) {\n\t\t\tif (this.nNonOptArgs != other.nNonOptArgs) {\n\t\t\t\treturn false;\n\t\t\t} else {\n\t\t\t\tfor (let i = 0; i < this.nNonOptArgs; i++) {\n\t\t\t\t\tif (!this.#argTypes[i].isBaseOf(other.#argTypes[i])) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (!this.#retType.isBaseOf(other.#retType)) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n    /**\n\t * Checks if the type of the first arg is the same as 'type'\n\t * Also returns false if there are no args.\n\t * For a method to be a valid instance member its first argument must also be named 'self', but that is checked elsewhere\n\t * @param {Site} site \n\t * @param {Type} type \n\t * @returns {boolean}\n\t */\n\tisMaybeMethod(site, type) {\n\t\tif (this.#argTypes.length > 0) {\n\t\t\treturn Common.typesEq(this.#argTypes[0].type, type);\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\t/**\n\t * @returns {string}\n\t */\n\ttoString() {\n\t\treturn `(${this.#argTypes.map(a => a.toString()).join(\", \")}) -> ${this.#retType.toString()}`;\n\t}\n\t\n\t/**\n\t * Throws an error if name isn't found\n\t * @param {Site} site \n\t * @param {string} name \n\t * @returns {number}\n\t */\n\tgetNamedIndex(site, name) {\n\t\tconst i = this.#argTypes.findIndex(at => at.name == name);\n\n\t\tif (i == -1) {\n\t\t\tthrow site.typeError(`arg name ${name} not found`);\n\t\t} else {\n\t\t\treturn i;\n\t\t}\n\t}\n\n\t/**\n\t * @returns {Typed}\n\t */\n\ttoTyped() {\n\t\treturn new FuncEntity(this);\n\t}\n}\n\n/**\n * @internal\n * @template {HeliosData} T\n * @typedef {{\n *   name: string,\n *   path?: string,\n *   offChainType?: HeliosDataClass<T> | null,\n *   genOffChainType?: (() => HeliosDataClass<T>) | null\n *   fieldNames?: string[],\n *   genInstanceMembers: (self: Type) => InstanceMembers,\n *   genTypeMembers: (self: Type) => TypeMembers\n *   genTypeDetails?: (self: Type) => TypeDetails,\n *   jsToUplc?: JsToUplcConverter\n *   uplcToJs?: UplcToJsConverter\n * }} GenericTypeProps\n */\n\n/**\n * Created by statements\n * @internal\n * @template {HeliosData} T\n * @implements {DataType}\n */\nexport class GenericType extends Common {\n    #name;\n\n    /**\n     * @type {string}\n     */\n    #path;\n\n\t#genOffChainType;\n    #offChainType;\n    #fieldNames;\n\n\t/**\n\t * defer until needed\n\t * @type {(self: Type) => InstanceMembers}\n\t */\n\t#genInstanceMembers; \n\n\t/**\n\t * defer until needed\n\t * @type {(self: Type) => TypeMembers}\n\t */\n\t#genTypeMembers;\n\n\t/**\n\t * @type {null | InstanceMembers}\n\t */\n\t#instanceMembers;\n\n\t/**\n\t * @type {null | TypeMembers}\n\t */\n\t#typeMembers;\n\n\t/**\n\t * @type {null | ((self: Type) => TypeDetails)}\n\t */\n\t#genTypeDetails;\n\n\t#genDepth;\n\n\t/**\n\t * @type {null | JsToUplcConverter}\n\t */\n\t#jsToUplc;\n\n\t/**\n\t * @type {null | UplcToJsConverter}\n\t */\n\t#uplcToJs;\n\n    /**\n     * @param {GenericTypeProps<T>} props\n     */\n    constructor({\n\t\tname, \n\t\tpath, \n\t\toffChainType, \n\t\tgenOffChainType, \n\t\tfieldNames, \n\t\tgenInstanceMembers, \n\t\tgenTypeMembers, \n\t\tgenTypeDetails,\n\t\tjsToUplc,\n\t\tuplcToJs\n\t}) {\n        super();\n\n        this.#name = name;\n        this.#path = path ?? `__helios__${name.toLowerCase()}`;\n\t\tthis.#genOffChainType = genOffChainType ?? null;\n        this.#offChainType = offChainType ?? null;\n        this.#fieldNames = fieldNames ?? [];\n\n\t\tthis.#genInstanceMembers = genInstanceMembers;\n\t\tthis.#genTypeMembers = genTypeMembers;\n\t\tthis.#instanceMembers = null;\n\t\tthis.#typeMembers = null;\n\t\tthis.#genTypeDetails = genTypeDetails ?? null;\n\t\tthis.#genDepth = 0;\n\t\tthis.#jsToUplc = jsToUplc ?? null;\n\t\tthis.#uplcToJs = uplcToJs ?? null;\n    }\n\n    /**\n     * @type {DataType}\n     */\n    get asDataType() {\n        return this;\n    }\n\n    /**\n     * @type {Named}\n     */\n    get asNamed() {\n        return this;\n    }\n\n    /**\n     * @type {Type}\n     */\n    get asType() {\n        return this;\n    }\n\n    /**\n     * @type {string[]}\n     */\n    get fieldNames() {\n        return this.#fieldNames;\n    }\n\n    /**\n     * @type {InstanceMembers}\n     */\n    get instanceMembers() {\n\t\tif (!this.#instanceMembers) {\n\t\t\tthis.#instanceMembers = this.#genInstanceMembers(this);\n\t\t}\n\n\t\treturn this.#instanceMembers;\n    }\n\n    /**\n     * @type {string}\n     */\n    get name() {\n        return this.#name;\n    }\n\n    /**\n     * @type {null | HeliosDataClass<T>}\n     */\n    get offChainType() {\n\t\tif (this.#offChainType) {\n\t\t\treturn this.#offChainType;\n\t\t} else if (this.#genOffChainType) {\n\t\t\treturn this.#genOffChainType();\n\t\t} else {\n\t\t\treturn null;\n\t\t}\n    }\n\n\t/**\n\t * @type {TypeDetails}\n\t */\n\tget typeDetails() {\n\t\tif (this.#genTypeDetails) {\n\t\t\treturn this.#genTypeDetails(this);\n\t\t} else {\n\t\t\tthrow new Error(`typeDetails not available for ${this.toString()}`)\n\t\t}\n\t}\n\n    /**\n     * @type {string}\n     */\n    get path() {\n        return this.#path;\n    }\n\n\t/**\n\t * @type {boolean}\n\t */\n\tget ready() {\n\t\treturn this.#genDepth < 2;\n\t}\n\n    /**\n     * @type {TypeMembers}\n     */\n    get typeMembers() {\n\t\tif (!this.#typeMembers) {\n\t\t\tthis.#genDepth += 1;\n\t\t\tthis.#typeMembers = this.#genTypeMembers(this);\n\t\t\tthis.#genDepth -= 1;\n\t\t}\n\n\t\treturn this.#typeMembers;\n    }\n\n    /**\n     * @param {Site} site \n     * @param {InferenceMap} map\n     */\n    applyInternal(site, map) {\n\t\treturn {\n\t\t\tname: this.#name,\n\t\t\tpath: this.#path,\n\t\t\tfieldNames: this.#fieldNames,\n\t\t\tgenInstanceMembers: (self) => {\n\t\t\t\t/**\n\t\t\t\t * @type {InstanceMembers}\n\t\t\t\t */\n\t\t\t\tconst instanceMembers = {};\n\n\t\t\t\tconst oldInstanceMembers = this.#genInstanceMembers(self);\n\n\t\t\t\tfor (let k in oldInstanceMembers) {\n\t\t\t\t\tconst v = oldInstanceMembers[k];\n\n\t\t\t\t\tif (v.asParametric) {\n\t\t\t\t\t\tinstanceMembers[k] = v.asParametric.infer(site, map);\n\t\t\t\t\t} else if (v.asType) {\n\t\t\t\t\t\tinstanceMembers[k] = v.asType.infer(site, map, null);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthrow new Error(\"unhandled\");\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn instanceMembers;\n\t\t\t},\n\t\t\tgenTypeMembers: (self) => {\n\t\t\t\t/**\n\t\t\t\t * @type {TypeMembers}\n\t\t\t\t */\n\t\t\t\tconst typeMembers = {};\n\n\t\t\t\tconst oldTypeMembers = this.#genTypeMembers(self);\n\n\t\t\t\tfor (let k in oldTypeMembers) {\n\t\t\t\t\tconst v = oldTypeMembers[k];\n\n\t\t\t\t\tif (v.asParametric) {\n\t\t\t\t\t\ttypeMembers[k] = v.asParametric.infer(site, map);\n\t\t\t\t\t} else if (v.asTyped) {\n\t\t\t\t\t\ttypeMembers[k] = v.asTyped.type.infer(site, map, null).toTyped();\n\t\t\t\t\t} else if (v.asType) {\n\t\t\t\t\t\ttypeMembers[k] = v.asType.infer(site, map, null);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthrow new Error(\"unhandled\");\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn typeMembers;\n\t\t\t}\n\t\t}\n    }\n\n\t/**\n     * @param {Site} site \n     * @param {InferenceMap} map \n     * @param {null | Type} type \n     * @returns {Type}\n     */\n\tinfer(site, map, type) {\n\t\treturn this;\n\t}\n\n\t/**\n\t * @param {string} name \n\t * @param {string} path \n\t * @returns {GenericType}\n\t */\n\tchangeNameAndPath(name, path) {\n\t\treturn new GenericType({\n\t\t\tname: name,\n\t\t\tpath: path,\n\t\t\tfieldNames: this.#fieldNames,\n\t\t\tgenInstanceMembers: this.#genInstanceMembers,\n\t\t\tgenTypeMembers: this.#genTypeMembers\n\t\t});\n\t}\n\n    /**\n     * @param {Type} other \n     * @returns {boolean}\n     */\n    isBaseOf(other) {\n\t\tif (other.asEnumMemberType) {\n\t\t\treturn this.isBaseOf(other.asEnumMemberType.parentType);\n\t\t} else if (other.asNamed) { \n\t\t\treturn other.asNamed.path == this.#path;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n    }\n\n\t/**\n\t * @param {any} obj \n\t * @param {JsToUplcHelpers} helpers\n\t * @returns {Promise<UplcData>}\n\t */\n\tjsToUplc(obj, helpers) {\n\t\tif (this.#jsToUplc) {\n\t\t\treturn this.#jsToUplc(obj, helpers);\n\t\t} else {\n\t\t\tthrow new Error(`'${this.name}' doesn't support converting from JS to Uplc`);\n\t\t}\n\t}\n\n\t/**\n\t * @param {UplcData} data\n\t * @param {UplcToJsHelpers} helpers\n\t * @returns {Promise<any>}\n\t */\n\tuplcToJs(data, helpers) {\n\t\tif (this.#uplcToJs) {\n\t\t\treturn this.#uplcToJs(data, helpers);\n\t\t} else {\n\t\t\tthrow new Error(`'${this.name}' doesn't support converting from Uplc to JS`);\n\t\t}\n\t}\n\n    /**\n     * @returns {string}\n     */\n    toString() {\n        return this.name;\n    }\n\n\t/**\n\t * @returns {Typed}\n\t */\n\ttoTyped() {\n\t\treturn new DataEntity(this);\n\t}\n}\n\n\n/**\n * @internal\n * @template {HeliosData} T\n * @typedef {{\n *   name: string,\n *   path?: string,\n *   constrIndex: number,\n *   parentType: DataType,\n *   offChainType?: HeliosDataClass<T>,\n *   genOffChainType?: () => HeliosDataClass<T>,\n *   fieldNames?: string[],\n *   genInstanceMembers: (self: Type) => InstanceMembers,\n *   genTypeMembers?: (self: Type) => TypeMembers\n *   genTypeDetails?: (self: Type) => TypeDetails\n *   jsToUplc?: JsToUplcConverter\n *   uplcToJs?: UplcToJsConverter\n * }} GenericEnumMemberTypeProps\n */\n\n/**\n * Created by statements\n * @internal\n * @template {HeliosData} T\n * @implements {EnumMemberType}\n * @extends {GenericType<T>}\n */\nexport class GenericEnumMemberType extends GenericType {\n    #constrIndex;\n    #parentType;\n\n    /**\n     * @param {GenericEnumMemberTypeProps<T>} props\n     */\n    constructor({\n\t\tname, \n\t\tpath, \n\t\tconstrIndex, \n\t\tparentType, \n\t\toffChainType, \n\t\tgenOffChainType, \n\t\tfieldNames, \n\t\tgenInstanceMembers, \n\t\tgenTypeMembers,\n\t\tgenTypeDetails,\n\t\tjsToUplc,\n\t\tuplcToJs\n\t}) {\n        super({\n            name, \n            path: path ?? `${parentType.path}__${name.toLowerCase()}`, \n\t\t\tgenOffChainType,\n            offChainType, \n            fieldNames, \n            genInstanceMembers, \n            genTypeMembers: genTypeMembers ?? ((self) => ({})),\n\t\t\tgenTypeDetails,\n\t\t\tjsToUplc,\n\t\t\tuplcToJs\n        });\n\n        this.#constrIndex = constrIndex;\n        this.#parentType = parentType;\n    }\n    \n    /**\n     * @type {number}\n     */\n    get constrIndex() {\n        return this.#constrIndex;\n    }\n\n    /**\n     * @type {DataType}\n     */\n    get parentType() {\n        return this.#parentType;\n    }\n\n    /**\n     * @type {EnumMemberType}\n     */\n    get asEnumMemberType() {\n        return this;\n    }\n\n\t/**\n     * @param {Site} site \n     * @param {InferenceMap} map \n     * @param {null | Type} type \n     * @returns {Type}\n     */\n\tinfer(site, map, type) {\n\t\treturn this;\n\t}\n\n\t/**\n\t * @param {Type} other \n\t * @returns {boolean}\n\t */\n\tisBaseOf(other) {\n\t\tif (other instanceof GenericEnumMemberType) {\n\t\t\treturn other.path == this.path;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\t/**\n\t * @returns {string}\n\t */\n    toString() {\n        return `${this.#parentType.toString()}::${this.name}`;\n    }\n}\n\n\n/**\n * Type of return-value of functions that don't return anything (eg. assert, print, error)\n * @internal\n * @implements {Type}\n */\nexport class VoidType extends Common {\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\t/**\n     * @type {InstanceMembers}\n     */\n    get instanceMembers() {\n        return {};\n    }\n\n    /**\n     * @type {TypeMembers}\n     */\n    get typeMembers() {\n        return {};\n    }\n\n    /**\n     * @type {Type}\n     */\n    get asType() {\n        return this;\n    }\n\n    /**\n     * \n     * @param {Site} site \n     * @param {InferenceMap} map \n     * @param {null | Type} type \n     * @returns {Type}\n     */\n    infer(site, map, type) {\n        return this;\n    }\n\n\t/**\n\t * @param {Type} type \n\t * @returns {boolean}\n\t */\n\tisBaseOf(type) {\n\t\treturn type instanceof VoidType;\n\t}\n\n    /**\n     * @returns {string}\n     */\n    toString() {\n\t\treturn \"()\";\n\t}\n\t\n\t/**\n\t * @returns {Typed}\n\t */\n\ttoTyped() {\n\t\treturn new VoidEntity();\n\t}\n}\n\n\n/**\n * A regular non-Func Instance. DataValues can always be compared, serialized, used in containers.\n * @internal\n * @implements {Instance}\n */\nexport class DataEntity extends Common {\n\t#type;\n\n\t/**\n\t * @param {DataType} type \n\t */\n\tconstructor(type) {\n        super();\n\t\tassert(!(type instanceof FuncType));\n\t\tthis.#type = type;\n\t}\n\n    /**\n     * @type {string[]}\n     */\n    get fieldNames() {\n        return this.#type.fieldNames;\n    }\n\n    /**\n     * @type {InstanceMembers}\n     */\n    get instanceMembers() {\n        return this.#type.instanceMembers;\n    }\n\n\t/**\n\t * @type {Type}\n\t */\n\tget type() {\n\t\treturn this.#type;\n\t}\n\n    /**\n     * @type {Instance}\n     */\n    get asInstance() {\n        return this;\n    }\n\n\t/**\n\t * @type {Typed}\n\t */\n\tget asTyped() {\n\t\treturn this;\n\t}\n\n\t/**\n\t * @returns {string}\n\t */\n\ttoString() {\n\t\treturn this.#type.toString();\n\t}\n}\n\n/**\n * Returned by an error()\n * Special case of no-return-value that indicates that execution can't proceed.\n * @internal\n */\nexport class ErrorEntity extends Common {\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\t/**\n\t * @type {string[]}\n\t */\n\tget fieldNames() {\n\t\treturn [];\n\t}\n\n    /**\n     * @type {InstanceMembers}\n     */\n    get instanceMembers() {\n        return {};\n    }\n\n    /**\n     * @type {Type}\n     */\n\tget type() {\n\t\treturn new ErrorType();\n\t}\n\n    /**\n     * @type {Instance}\n     */\n    get asInstance() {\n        return this;\n    }\n\n\t/**\n\t * @type {Typed}\n\t */\n\tget asTyped() {\n\t\treturn this;\n\t}\n\n\t/**\n\t * @returns {string}\n\t */\n\ttoString() {\n\t\treturn \"()\";\n\t}\n}\n\n/**\n * @internal\n * @implements {Named}\n */\nexport class NamedEntity {\n\t#name;\n\t#path;\n\t#entity;\n\n\t/**\n\t * @param {string} name \n\t * @param {string} path \n\t * @param {EvalEntity} entity\n\t */\n\tconstructor(name, path, entity) {\n\t\tthis.#name = name;\n\t\tthis.#path = path;\n\t\tthis.#entity = entity;\n\t}\n\n\t/**\n\t * @type {null | DataType}\n\t */\n\tget asDataType() {\n\t\treturn this.#entity.asDataType;\n\t}\n\n\t/**\n\t * @type {null | EnumMemberType}\n\t */\n\tget asEnumMemberType() {\n\t\treturn this.#entity.asEnumMemberType;\n\t}\n\n\t/**\n\t * @type {null | Func}\n\t */\n\tget asFunc() {\n\t\treturn this.#entity.asFunc;\n\t}\n\n\t/**\n\t * @type {null | Instance}\n\t */\n\tget asInstance() {\n\t\treturn this.#entity.asInstance;\n\t}\n\n\t/**\n\t * @type {Named}\n\t */\n\tget asNamed() {\n\t\treturn this;\n\t}\n\n\t/**\n\t * @type {null | Namespace}\n\t */\n\tget asNamespace() {\n\t\treturn this.#entity.asNamespace;\n\t}\n\n\t/**\n\t * @type {null | Parametric}\n\t */\n\tget asParametric() {\n\t\treturn this.#entity.asParametric;\n\t}\n\n\t/**\n\t * @type {null | Type}\n\t */\n\tget asType() {\n\t\treturn this.#entity.asType;\n\t}\n\n\t/**\n\t * @type {null | Typed}\n\t */\n\tget asTyped() {\n\t\treturn this.#entity.asTyped;\n\t}\n\n\t/**\n\t * @type {null | TypeClass}\n\t */\n\tget asTypeClass() {\n\t\treturn this.#entity.asTypeClass;\n\t}\n\n\t/**\n\t * @type {string}\n\t */\n\tget name() {\n\t\treturn this.#name;\n\t}\n\n\t/**\n\t * @type {string}\n\t */\n\tget path() {\n\t\treturn this.#path;\n\t}\n\n\t/**\n\t * @returns {string}\n\t */\n\ttoString() {\n\t\treturn this.#entity.toString();\n\t}\n}\n\n/**\n * A callable Instance.\n * @internal\n * @implements {Func}\n */\nexport class FuncEntity extends Common {\n\t/**\n\t * @type {FuncType}\n\t */\n\t#type;\n\n\t/**\n\t * @param {FuncType} type\n\t */\n\tconstructor(type) {\n        super();\n\n\t\tassert(type instanceof FuncType);\n\n\t\tthis.#type = type;\n\t}\n\n\t/**\n\t * @type {Type}\n\t */\n\tget type() {\n\t\treturn this.#type;\n\t}\n\n    /**\n\t * Returns the underlying FuncType directly.\n\t * @type {FuncType}\n\t */\n\tget funcType() {\n\t\treturn this.#type;\n\t}\n\n\t/**\n\t * @type {Func}\n\t */\n\tget asFunc() {\n\t\treturn this;\n\t}\n\n\t/**\n\t * @type {Typed}\n\t */\n\tget asTyped() {\n\t\treturn this;\n\t}\n\n    /**\n\t * @param {Site} site \n\t * @param {Typed[]} args \n\t * @param {{[name: string]: Typed}} namedArgs\n\t * @returns {null | Typed}\n\t */\n\tcall(site, args, namedArgs = {}) {\n\t\tconst type = this.#type.checkCall(site, args, namedArgs);\n\n\t\tif (type === null) {\n\t\t\treturn null;\n\t\t} else {\n\t\t\treturn type.toTyped();\n\t\t}\n\t}\n\n\t/**\n\t * Returns a string representing the type.\n\t * @returns {string}\n\t */\n\ttoString() {\n\t\treturn this.#type.toString();\n\t}\n}\n\n/**\n * @internal\n * @implements {Typed}\n */\nexport class TypedEntity extends Common {\n\t/**\n\t * @type {Type}\n\t */\n\t#type;\n\n\t/**\n\t * @param {Type} type \n\t */\n\tconstructor(type) {\n\t\tsuper();\n\n\t\tthis.#type = type;\n\t}\n\n\t/**\n\t * @returns {Typed}\n\t */\n\tget asTyped() {\n\t\treturn this\n\t}\n\n\t/**\n\t * @type {Type}\n\t */\n\tget type() {\n\t\treturn this.#type;\n\t}\n}\n\n/**\n * Returned by functions that don't return anything (eg. assert, error, print)\n * @internal\n * @implements {Instance}\n */\nexport class VoidEntity extends Common {\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\t/**\n\t * @type {string[]}\n\t */\n\tget fieldNames() {\n\t\treturn [];\n\t}\n\n    /**\n     * @type {InstanceMembers}\n     */\n    get instanceMembers() {\n        return {};\n    }\n\n    /**\n     * @type {Type}\n     */\n\tget type() {\n\t\treturn new VoidType();\n\t}\n\n    /**\n     * @type {Instance}\n     */\n    get asInstance() {\n        return this;\n    }\n\n\t/**\n\t * @type {Typed}\n\t */\n\tget asTyped() {\n\t\treturn this;\n\t}\n\n\t/**\n\t * @returns {string}\n\t */\n\ttoString() {\n\t\treturn \"()\";\n\t}\n}\n\n/**\n * @internal\n * @implements {Namespace}\n */\nexport class ModuleNamespace extends Common {\n\t#members;\n\n\t/**\n\t * @param {NamespaceMembers} members\n\t */\n\tconstructor(members) {\n\t\tsuper();\n\t\tthis.#members = members;\n\t}\n\n\t/**\n\t * @type {NamespaceMembers}\n\t */\n\tget namespaceMembers() {\n\t\treturn this.#members;\n\t}\n\n\t/**\n\t * @type {Namespace}\n\t */\n\tget asNamespace() {\n\t\treturn this;\n\t}\n}\n\n\n///////////////////////////////////\n// Section 14: Eval primitive types\n///////////////////////////////////\n/**\n * @internal\n * @param {Type} type\n * @returns {InstanceMembers}\n */\nexport function genCommonInstanceMembers(type) {\n    return {\n        serialize: new FuncType([], ByteArrayType),\n        show: new FuncType([], StringType)\n    }\n}\n\n/**\n * @internal\n * @param {Type} type\n * @returns {TypeMembers}\n */\nexport function genCommonTypeMembers(type) {\n    return {\n        __eq:      new FuncType([type, type], BoolType),\n        __neq:     new FuncType([type, type], BoolType),\n        from_data: new FuncType([RawDataType], type),\n        __to_data: new FuncType([type], RawDataType),\n    }\n}\n\n/**\n * @internal\n * @param {Type} type\n * @param {Type} parentType\n * @returns {TypeMembers}\n */\nexport function genCommonEnumTypeMembers(type, parentType) {\n    return {\n        __eq:      new FuncType([type, parentType], BoolType),\n        __neq:     new FuncType([type, parentType], BoolType),\n        from_data: new FuncType([RawDataType], type),\n        __to_data: new FuncType([type], RawDataType),\n    }\n}\n\n\n/**\n * Builtin bool type\n * @internal\n * @type {DataType}\n */\nexport const BoolType = new GenericType({\n    name: \"Bool\",\n    offChainType: Bool,\n    genTypeDetails: (self) => ({\n        inputType: \"boolean\",\n        outputType: \"boolean\",\n        internalType: {\n            type: \"Bool\"\n        }\n    }),\n    jsToUplc: async (obj, helpers) => {\n        return new ConstrData(obj ? 1 : 0, []);\n    },\n    uplcToJs: async (data, helpers) => {\n        return data.index != 0;\n    },\n    genInstanceMembers: (self) => ({\n        ...genCommonInstanceMembers(self),\n        to_int:    new FuncType([], IntType),\n        trace:     new FuncType([StringType], self),\n        trace_if_false: new FuncType([StringType], self),\n        trace_if_true: new FuncType([StringType], self)\n    }),\n    genTypeMembers: (self) => ({\n        ...genCommonTypeMembers(self),\n        __and:     new FuncType([self, self], self),\n        __neq:     new FuncType([self, self], self),\n        __not:     new FuncType([self], self),\n        __or:      new FuncType([self, self], self),\n        and:       new FuncType([new FuncType([], self), new FuncType([], self)], self),\n        or:        new FuncType([new FuncType([], self), new FuncType([], self)], self)\n    })\n});\n\n/**\n * Builtin bytearray type\n * @internal\n * @type {DataType}\n */\nexport const ByteArrayType = new GenericType({\n    name: \"ByteArray\",\n    offChainType: ByteArray,\n    genTypeDetails: (self) => ({\n        inputType: \"number[] | string\",\n        outputType: \"number[]\",\n        internalType: {\n            type: \"ByteArray\"\n        }\n    }),\n    jsToUplc: async (obj, helpers) => {\n        const bytes = Array.isArray(obj) ? obj : hexToBytes(obj);\n\n        return new ByteArrayData(bytes);\n    },\n    uplcToJs: async (data, helpers) => {\n        return data.bytes;\n    },\n    genInstanceMembers: (self) => ({\n        ...genCommonInstanceMembers(self),\n        blake2b: new FuncType([], self),\n        decode_utf8: new FuncType([], StringType),\n        ends_with: new FuncType([self], BoolType),\n        length: IntType,\n        prepend: new FuncType([IntType], self),\n        sha2: new FuncType([], self),\n        sha3: new FuncType([], self),\n        slice: new FuncType([IntType, IntType], self),\n        starts_with: new FuncType([self], BoolType),\n    }),\n    genTypeMembers: (self) => ({\n        ...genCommonTypeMembers(self),\n        __add: new FuncType([self, self], self),\n        __geq: new FuncType([self, self], BoolType),\n        __gt: new FuncType([self, self], BoolType),\n        __leq: new FuncType([self, self], BoolType),\n        __lt: new FuncType([self, self], BoolType),\n        parse: new FuncType([StringType], self)\n    })\n});\n\n/**\n * @internal\n * @type {DataType}\n */\nexport const IntType = new GenericType({\n    name: \"Int\",\n    offChainType: HInt,\n    genTypeDetails: (self) => ({\n        inputType: \"number | bigint\",\n        outputType: \"bigint\",\n        internalType: {\n            type: \"Int\"\n        }\n    }),\n    jsToUplc: async (obj, helpers) => {\n        return new IntData(BigInt(obj));\n    },\n    uplcToJs: async (data, helpers) => {\n        return data.int;\n    },\n    genInstanceMembers: (self) => ({\n        ...genCommonInstanceMembers(self),\n        abs: new FuncType([], self),\n        bound: new FuncType([self, self], self),\n        bound_max: new FuncType([self], self),\n        bound_min: new FuncType([self], self),\n        decode_zigzag: new FuncType([], self),\n        encode_zigzag: new FuncType([], self),\n        to_base58: new FuncType([], StringType),\n        to_big_endian: new FuncType([], ByteArrayType),\n        to_bool: new FuncType([], BoolType),\n        to_hex: new FuncType([], StringType),\n        to_little_endian: new FuncType([], ByteArrayType),\n        to_real: new FuncType([], RealType)\n    }),\n    genTypeMembers: (self) => ({\n        ...genCommonTypeMembers(self),\n        __add: new FuncType([self, self], self),\n        __add1: new FuncType([self, RealType], RealType),\n        __div: new FuncType([self, self], self),\n        __div1: new FuncType([self, RealType], RealType),\n        __geq: new FuncType([self, self], BoolType),\n        __gt: new FuncType([self, self], BoolType),\n        __leq: new FuncType([self, self], BoolType),\n        __lt: new FuncType([self, self], BoolType),\n        __mod: new FuncType([self, self], self),\n        __mul: new FuncType([self, self], self),\n        __mul1: new FuncType([self, RealType], RealType),\n        __neg: new FuncType([self], self),\n        __pos: new FuncType([self], self),\n        __sub: new FuncType([self, self], self),\n        __sub1: new FuncType([self, RealType], RealType),\n        from_base58: new FuncType([StringType], self),\n        from_big_endian: new FuncType([ByteArrayType], self),\n        from_little_endian: new FuncType([ByteArrayType], self),\n        max: new FuncType([self, self], self),\n        min: new FuncType([self, self], self),\n        parse: new FuncType([StringType], self),\n        sqrt: new FuncType([self], self)\n    })\n});\n\n/**\n * Type of external data that must be cast/type-checked before using\n * Not named 'Data' in Js because it's too generic\n * @internal\n * @type {DataType}\n */\nexport const RawDataType = new GenericType({\n    name: \"Data\",\n    genInstanceMembers: (self) => ({\n        ...genCommonInstanceMembers(self),\n        tag: IntType\n    }),\n    genTypeMembers: (self) => ({\n        ...genCommonTypeMembers(self)\n    })\n});\n\n/**\n * Builtin Real fixed point number type\n * @internal\n * @type {DataType}\n */\nexport const RealType = new GenericType({\n    name: \"Real\",\n    genTypeDetails: (self) => ({\n        inputType: \"number\",\n        outputType: \"number\",\n        internalType: {\n            type: \"Real\"\n        }\n    }),\n    jsToUplc: async (obj, helpers) => {\n        return new IntData(BigInt(Math.round(obj*1000000)))\n    },\n    uplcToJs: async (data, helpers) => {\n        return Number(data.int)/1000000\n    },\n    genInstanceMembers: (self) => ({\n        ...genCommonInstanceMembers(self),\n        abs: new FuncType([], self),\n        ceil: new FuncType([], IntType),\n        floor: new FuncType([], IntType),\n        round: new FuncType([], IntType),\n        trunc: new FuncType([], IntType)\n    }),\n    genTypeMembers: (self) => ({\n        ...genCommonTypeMembers(self),\n        __add: new FuncType([self, self], self),\n        __add1: new FuncType([self, IntType], self),\n        __div: new FuncType([self, self], self),\n        __div1: new FuncType([self, IntType], self),\n        __eq1: new FuncType([self, IntType], BoolType),\n        __geq: new FuncType([self, self], BoolType),\n        __geq1: new FuncType([self, IntType], BoolType),\n        __gt: new FuncType([self, self], BoolType),\n        __gt1: new FuncType([self, IntType], BoolType),\n        __leq: new FuncType([self, self], BoolType),\n        __leq1: new FuncType([self, IntType], BoolType),\n        __lt: new FuncType([self, self], BoolType),\n        __lt1: new FuncType([self, IntType], BoolType),\n        __mul: new FuncType([self, self], self),\n        __mul1: new FuncType([self, IntType], self),\n        __neg: new FuncType([self], self),\n        __neq1: new FuncType([self, IntType], BoolType),\n        __pos: new FuncType([self], self),\n        __sub: new FuncType([self, self], self),\n        __sub1: new FuncType([self, IntType], self),\n        sqrt: new FuncType([self], self)\n    })\n});\n\n/**\n * Builtin string type\n * @internal\n * @type {DataType}\n */\nexport const StringType = new GenericType({\n    name: \"String\",\n    offChainType: HString,\n    genTypeDetails: (self) => ({\n        inputType: \"string\",\n        outputType: \"string\",\n        internalType: {\n            type: \"String\"\n        }\n    }),\n    jsToUplc: async (obj, helpers) => {\n        return new ByteArrayData(textToBytes(obj));\n    },\n    uplcToJs: async (data, helpers) => {\n        return bytesToText(data.bytes);\n    },\n    genInstanceMembers: (self) => ({\n        ...genCommonInstanceMembers(self),\n        encode_utf8: new FuncType([], ByteArrayType),\n        ends_with: new FuncType([self], BoolType),\n        starts_with: new FuncType([self], BoolType)\n    }),\n    genTypeMembers: (self) => ({\n        ...genCommonTypeMembers(self),\n        __add: new FuncType([self, self], self),\n        is_valid_utf8: new FuncType([ByteArrayType], BoolType)\n    })\n});\n\n\n///////////////////////////////////////\n// Section 15: Eval builtin typeclasses\n///////////////////////////////////////\n\n/**\n * Created by statements\n * @internal\n * @template {HeliosData} T\n * @implements {DataType}\n */\nexport class GenericParametricType extends GenericType {\n\t/**\n\t * \n\t * @param {GenericTypeProps<T>} props \n\t */\n\tconstructor(props) {\n\t\tsuper(props);\n\t}\n\n\t/**\n     * @param {Site} site \n     * @param {InferenceMap} map\n     * @param {null | Type} type \n     * @returns {Type}\n     */\n\tinfer(site, map, type) {\n\t\tif (type !== null) {\n\t\t\treturn this;\n\t\t} else {\n\t\t\tlet isMaybeParametric = false;\n\t\t\tmap.forEach((v) => {\n\t\t\t\tif (v.isParametric()) {\n\t\t\t\t\tisMaybeParametric = true;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tconst props = this.applyInternal(site, map);\n\n\t\t\treturn isMaybeParametric ? new GenericParametricType(props) : new GenericType(props);\n\t\t}\n\t}\n}\n\n\n/**\n * Created by statements\n * @internal\n * @template {HeliosData} T\n * @implements {EnumMemberType}\n * @extends {GenericEnumMemberType<T>}\n */\nexport class GenericParametricEnumMemberType extends GenericEnumMemberType {\n\t/**\n\t * \n\t * @param {GenericEnumMemberTypeProps<T>} props \n\t */\n\tconstructor(props) {\n\t\tsuper(props);\n\t}\n\n\t/**\n     * @param {Site} site \n     * @param {InferenceMap} map\n     * @param {null | Type} type \n     * @returns {Type}\n     */\n\tinfer(site, map, type) {\n\t\tif (type !== null) {\n\t\t\treturn this;\n\t\t} else {\n\t\t\tlet isMaybeParametric = false;\n\t\t\tmap.forEach((v) => {\n\t\t\t\tif (v.isParametric()) {\n\t\t\t\t\tisMaybeParametric = true;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tconst props = {\n\t\t\t\t...this.applyInternal(site, map),\n\t\t\t\tparentType: assertDefined(this.parentType.infer(site, map, null).asDataType),\n\t\t\t\tconstrIndex: this.constrIndex\n\t\t\t};\n\n\t\t\treturn isMaybeParametric ? new GenericParametricEnumMemberType(props) : new GenericEnumMemberType(props);\n\t\t}\n\t}\n}\n\n/**\n * @internal\n * @implements {Type}\n */\nexport class TypeClassImpl extends Common {\n\t/**\n\t * @type {string}\n\t */\n\t#name;\n\n\t/**\n\t * @type {null | ParameterI}\n\t */\n\t#parameter;\n\n\t/**\n\t * @type {InstanceMembers}\n\t */\n\t#instanceMembers;\n\n\t/**\n\t * @type {TypeMembers}\n\t */\n\t#typeMembers;\n\n\t/**\n\t * @param {TypeClass} typeClass\n\t * @param {string} name\n\t * @param {null | ParameterI} parameter - reference to original parameter, which is more unique than name\n\t */\n\tconstructor(typeClass, name, parameter) {\n\t\tsuper();\n\t\tthis.#name = name;\n\t\tthis.#parameter = parameter;\n        this.#instanceMembers = typeClass.genInstanceMembers(this);\n\t\tthis.#typeMembers = typeClass.genTypeMembers(this);\n    }\n\n\t/**\n\t * @returns {boolean}\n\t */\n\tisParametric() {\n\t\treturn true;\n\t}\n\n    /**\n\t * @type {InstanceMembers}\n\t */\n\tget instanceMembers() {\n\t\treturn this.#instanceMembers;\n\t}\n\n\t/**\n\t * @type {string}\n\t */\n\tget name() {\n\t\treturn this.#name;\n\t}\n\n\t/**\n\t * @type {TypeMembers}\n\t */\n\tget typeMembers() {\n\t\treturn this.#typeMembers;\n\t}\n\n    /**\n     * @type {Type}\n     */\n    get asType() {\n        return this;\n    }\n\n    /**\n\t * @internal\n\t * @param {Site} site \n\t * @param {InferenceMap} map \n\t * @param {null | Type} type\n\t * @returns {Type}\n\t */\n\tinfer(site, map, type) {\n\t\tconst p = assertDefined(this.#parameter, \"unable to infer dummy TypeClass instantiation\");\n\n\t\tconst prev = map.get(p);\n\n\t\tif (!prev) {\n\t\t\tif (type) {\n\t\t\t\tmap.set(p, type);\n\n\t\t\t\treturn type;\n\t\t\t} else {\n\t\t\t\t// type not yet available: could be parametric func inside a parametric type\n\t\t\t\treturn this;\n\t\t\t}\n\t\t} else {\n\t\t\treturn prev;\n\t\t}\n\t}\n\n\t/**\n\t * Returns 'true' if 'this' is a base-type of 'type'. Throws an error if 'this' isn't a Type.\n\t * @param {Type} type\n\t * @returns {boolean}\n\t */\n\tisBaseOf(type) {\n\t\tif (type instanceof TypeClassImpl) {\n\t\t\t// we cans simply use name because name-shadowing isn't allowed\n\t\t\treturn type.name == this.name;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n    /**\n\t * @returns {string}\n\t */\n\ttoString() {\n\t\treturn this.name;\n\t}\n\n\t/**\n\t * @returns {Typed}\n\t */\n\ttoTyped() {\n\t\treturn new TypedEntity(this);\n\t}\n}\n\n/**\n * @internal\n * @implements {DataType}\n */\nexport class DataTypeClassImpl extends TypeClassImpl {\n\t/**\n     * @type {string}\n     */\n\t#path;\n\n\t/**\n\t * @param {TypeClass} typeClass\n\t * @param {string} name\n\t * @param {string} path\n\t * @param {null | ParameterI} parameter\n\t */\n\tconstructor(typeClass, name, path, parameter) {\n\t\tsuper(typeClass, name, parameter);\n\n\t\tthis.#path = path;\n    }\n\n\t/**\n\t * @type {DataType}\n\t */\n\tget asDataType() {\n\t\treturn this;\n\t}\n\n\t/**\n\t * @type {Named}\n\t */\n\tget asNamed() {\n\t\treturn this;\n\t}\n\n\t/**\n\t * @type {string[]}\n\t */\n\tget fieldNames() {\n\t\treturn [];\n\t}\n\n\t/**\n\t * @type {null | HeliosDataClass<HeliosData>}\n\t */\n\tget offChainType() {\n\t\treturn null;\n\t}\n\n\t/**\n\t * @type {string}\n\t */\n\tget path() {\n\t\treturn this.#path;\n\t}\n\n\t/**\n\t * @returns {Typed}\n\t */\n\ttoTyped() {\n\t\treturn new DataEntity(this);\n\t}\n}\n\n/**\n * @internal\n * @implements {TypeClass}\n */\nexport class AnyTypeClass extends Common {\n    constructor() {\n        super();\n    }\n\n\t/**\n\t * @type {TypeClass}\n\t */\n\tget asTypeClass() {\n\t\treturn this;\n\t}\n\n    /**\n\t * @param {Type} impl\n\t * @returns {TypeClassMembers}\n\t */\n\tgenInstanceMembers(impl) {\n\t\treturn {};\n\t}\n\n\t/**\n\t * @param {Type} impl\n\t * @returns {TypeClassMembers}\n\t */\n\tgenTypeMembers(impl) {\n\t\treturn {};\n    }\n\n\t/**\n\t * @param {Type} type \n\t * @returns {boolean}\n\t */\n\tisImplementedBy(type) {\n\t\treturn true;\n\t}\n\n\t/**\n\t * @returns {string}\n\t */\n\ttoString() {\n\t\treturn \"Any\";\n\t}\n\n    /**\n     * @param {string} name \n\t * @param {string} path\n\t * @param {null | ParameterI} parameter\n     * @returns {Type}\n     */\n    toType(name, path, parameter = null) {\n\t\treturn new TypeClassImpl(this, name, parameter);\n    }\n}\n\n/**\n * @internal\n * @implements {TypeClass}\n */\nexport class DefaultTypeClass extends Common {\n    constructor() {\n        super();\n    }\n\n\t/**\n\t * @type {TypeClass}\n\t */\n\tget asTypeClass() {\n\t\treturn this;\n\t}\n\n\t/**\n\t * @param {Type} impl\n\t * @returns {TypeClassMembers}\n\t */\n\tgenTypeMembers(impl) {\n\t\treturn {\n            __eq: new FuncType([impl, impl], BoolType),\n            __neq: new FuncType([impl, impl], BoolType),\n\t\t\t__to_data: new FuncType([impl], RawDataType),\n\t\t\tfrom_data: new FuncType([RawDataType], impl)\n\t\t}\n\t}\n\n\t/**\t\n\t * @param {Type} impl\n\t * @returns {TypeClassMembers}\n\t */\n\tgenInstanceMembers(impl) {\n\t\treturn {\n            serialize: new FuncType([], ByteArrayType)\n\t\t}\n\t}\n\n\t/**\n\t * @param {Type} type \n\t * @returns {boolean}\n\t */\n\tisImplementedBy(type) {\n\t\treturn Common.typeImplements(type, this);\n\t}\n\n\t/**\n\t * @returns {string}\n\t */\n\ttoString() {\n\t\treturn \"\";\n\t}\n\n    /**\n     * @param {string} name \n\t * @param {string} path\n\t * @param {null | ParameterI} parameter\n     * @returns {DataType}\n     */\n    toType(name, path, parameter = null) {\n        return new DataTypeClassImpl(this, name, path, parameter);\n    }\n}\n\n\n/**\n * @internal\n * @implements {TypeClass}\n */\nexport class SummableTypeClass extends Common {\n    constructor() {\n        super();\n    }\n\n\t/**\n\t * @type {TypeClass}\n\t */\n\tget asTypeClass() {\n\t\treturn this;\n\t}\n\n\t/**\n\t * @param {Type} impl\n\t * @returns {TypeClassMembers}\n\t */\n\tgenTypeMembers(impl) {\n\t\treturn {\n            __add: new FuncType([impl, impl], impl),\n            __sub: new FuncType([impl, impl], impl)\n\t\t};\n\t}\n\n\t/**\t\n\t * @param {Type} impl\n\t * @returns {TypeClassMembers}\n\t */\n\tgenInstanceMembers(impl) {\n\t\treturn {};\n\t}\n\n\t/**\n\t * @param {Type} type \n\t * @returns {boolean}\n\t */\n\tisImplementedBy(type) {\n\t\treturn Common.typeImplements(type, this);\n\t}\n\n\t/**\n\t * @returns {string}\n\t */\n\ttoString() {\n\t\treturn \"Summable\";\n\t}\n\n    /**\n     * @param {string} name \n\t * @param {string} path\n\t * @param {null | ParameterI} parameter\n     * @returns {DataType}\n     */\n    toType(name, path, parameter = null) {\n        return new DataTypeClassImpl(this, name, path, parameter);\n    }\n}\n\n/**\n * @internal\n * @implements {ParameterI}\n */\nexport class Parameter {\n\t/** \n\t * @type {string} \n\t */\n\t#name;\n\n\t/** \n\t * @type {string} \n\t */\n\t#path;\n\n\t/** \n\t * @type {TypeClass}\n\t */\n\t#typeClass;\n\n\t/**\n\t * @param {string} name - typically \"a\" or \"b\"\n\t * @param {string} path - typicall \"__T0\" or \"__F0\"\n\t * @param {TypeClass} typeClass\n\t */\n\tconstructor(name, path, typeClass) {\n\t\tthis.#name = name;\n\t\tthis.#path = path;\n\t\tthis.#typeClass = typeClass\n\t}\n\n\t/**\n\t * @type {string}\n\t */\n\tget name() {\n\t\treturn this.#name;\n\t}\n\n\t/**\n\t * @type {Type}\n\t */\n\tget ref() {\n\t\treturn this.#typeClass.toType(this.#name, this.#path, this);\n\t}\n\n\t/**\n\t * A null TypeClass matches any type\n\t * @type {TypeClass}\n\t */\n\tget typeClass() {\n\t\treturn this.#typeClass;\n\t}\n\n\t/**\n\t * @returns {string}\n\t */\n\ttoString() {\n\t\tif (this.#typeClass && this.#typeClass.toString() != \"\") {\n\t\t\treturn `${this.#name}: ${this.#typeClass.toString()}`\n\t\t} else {\n\t\t\treturn this.#name;\n\t\t}\n\t}\n}\n\n/**\n * Only func instances can be parametrics instances,\n *  there are no other kinds of parametric instances\n * @internal\n * @implements {Parametric}\n */\nexport class ParametricFunc extends Common {\n\t#params;\n\t#fnType;\n\n\t/**\n\t * @param {Parameter[]} params\n\t * @param {FuncType} fnType\n\t */\n\tconstructor(params, fnType) {\n\t\tsuper();\n\t\tthis.#params = params;\n\t\tthis.#fnType = fnType;\n\t}\n\n\t/**\n\t * @type {null | ((...any) => HeliosDataClass<HeliosData>)}\n\t */\n\tget offChainType() {\n\t\treturn null;\n\t}\n\n\tget params() {\n\t\treturn this.#params;\n\t}\n\n\tget fnType() {\n\t\treturn this.#fnType;\n\t}\n\n\t/**\n\t * null TypeClasses aren't included\n\t * @type {TypeClass[]}\n\t */\n\tget typeClasses() {\n\t\treturn this.#params.map(p => p.typeClass);\n\t}\n\n\t/**\n\t * @param {Type[]} types \n\t * @param {Site} site\n\t * @returns {EvalEntity}\n\t */\n\tapply(types, site = Site.dummy()) {\n\t\tif (types.length != this.#params.length) {\n\t\t\tthrow site.typeError(\"wrong number of parameter type arguments\");\n\t\t}\n\n\t\t/**\n\t\t * @type {InferenceMap}\n\t\t */\n\t\tconst map = new Map();\n\n\t\tthis.#params.forEach((p, i) => {\n\t\t\tif (!p.typeClass.isImplementedBy(types[i])) {\n\t\t\t\tthrow site.typeError(\"typeclass match failed\")\n\t\t\t}\n\n\t\t\tmap.set(p, types[i]);\n\t\t});\n\n\t\tconst inferred = this.#fnType.infer(site, map, null);\n\n\t\treturn new FuncEntity(assertClass(inferred, FuncType));\n\t}\n\n\t/**\n\t * @type {Parametric}\n\t */\n\tget asParametric() {\n\t\treturn this;\n\t}\n\n    /**\n\t * Must infer before calling\n\t * @param {Site} site \n\t * @param {Typed[]} args\n\t * @param {{[name: string]: Typed}} namedArgs\n\t * @param {Type[]} paramTypes - so that paramTypes can be accessed by caller\n\t * @returns {Func}\n\t */\n\tinferCall(site, args, namedArgs = {}, paramTypes = []) {\n\t\t/**\n\t\t * @type {InferenceMap}\n\t\t */\n\t\tconst map = new Map();\n\n\t\tconst fnType = this.#fnType.inferArgs(site, map, args.map(a => a.type));\n\n\t\t// make sure that each parameter is defined in the map\n\t\tthis.#params.forEach(p => {\n\t\t\tconst pt = map.get(p);\n\n\t\t\tif (!pt) {\n\t\t\t\tthrow site.typeError(`failed to infer type of '${p.name}'  (hint: apply directly using [...])`);\n\t\t\t}\n\n\t\t\tparamTypes.push(pt);\n\t\t});\n\n\t\treturn new FuncEntity(fnType);\n\t}\n\t\n\t/**\n\t * @param {Site} site \n\t * @param {InferenceMap} map \n\t * @returns {Parametric}\n\t */\n\tinfer(site, map) {\n\t\tconst fnType = assertClass(this.#fnType.infer(site, map, null), FuncType);\n\n\t\treturn new ParametricFunc(this.#params, fnType);\n\t}\n\n    /**\n     * @returns {string}\n     */\n\ttoString() {\n\t\treturn `[${this.#params.map(p => p.toString()).join(\", \")}]${this.#fnType.toString()}`;\n\t}\n}\n\n/**\n * @internal\n * @implements {DataType}\n */\nclass AppliedType extends Common {\n    #types;\n    #apply;\n    #inner;\n\n    /**\n     * @param {Type[]} types\n     * @param {(types: Type[]) => DataType} apply\n     * @param {DataType} inner \n     */\n    constructor(types, apply, inner) {\n        super();\n\n        this.#types = types;\n        this.#apply = apply;\n        this.#inner = inner;\n    }\n\n    /**\n     * @type {string[]}\n     */\n    get fieldNames() {\n        return this.#inner.fieldNames;\n    }\n\n    /**\n     * @type {InstanceMembers}\n     */\n    get instanceMembers() {\n        return this.#inner.instanceMembers;\n    }\n\n    /**\n     * @type {string}\n     */\n    get name() {\n        return this.#inner.name;\n    }\n\n    /**\n     * @type {null | HeliosDataClass<HeliosData>}\n     */\n    get offChainType() {\n        return this.#inner.offChainType;\n    }\n\n    /**\n     * @type {string}\n     */\n    get path() {\n        return this.#inner.path;\n    }\n\n    /**\n     * @type {TypeMembers}\n     */\n    get typeMembers() {\n        return this.#inner.typeMembers;\n    }\n\n\t/**\n\t * @type {TypeDetails | undefined}\n\t */\n\tget typeDetails() {\n\t\treturn this.#inner.typeDetails;\n\t}\n\n    /**\n     * @type {DataType}\n     */\n    get asDataType() {\n        return this;\n    }\n\n    /**\n     * @type {Named}\n     */\n    get asNamed() {\n        return this;\n    }\n\n    /**\n     * @type {Type}\n     */\n    get asType() {\n        return this;\n    }\n\n\t/**\n\t * @param {any} obj \n\t * @param {JsToUplcHelpers} helpers\n\t * @returns {Promise<UplcData>}\n\t */\n\tjsToUplc(obj, helpers) {\n\t\treturn this.#inner.jsToUplc(obj, helpers);\n\t}\n\n\t/**\n\t * @param {UplcData} data \n\t * @param {UplcToJsHelpers} helpers\n\t * @returns {any | Promise<any>}\n\t */\n\tuplcToJs(data, helpers) {\n\t\treturn this.#inner.uplcToJs(data, helpers);\n\t}\n\n    /**\n     * @param {Site} site \n     * @param {InferenceMap} map \n     * @param {null | Type} type \n     * @returns {Type}\n     */\n    infer(site, map, type) {\n        if (!type) {\n            const infered = this.#types.map(t => t.infer(site, map, null));\n\n            return new AppliedType(infered, this.#apply, this.#apply(infered));\n\t\t} else if (type instanceof AppliedType && type.#types.length == this.#types.length) {\n            const infered = this.#types.map((t, i) => t.infer(site, map, type.#types[i]));\n\n            const res = new AppliedType(infered, this.#apply, this.#apply(infered));\n\n\t\t\tif (!res.isBaseOf(type)) {\n\t\t\t\tthrow site.typeError(\"unable to infer type\");\n\t\t\t}\n\n\t\t\treturn res;\n        } else {\n\t\t\tthrow site.typeError(\"unable to infer type\");\n\t\t}\n    }\n\n    /**\n     * @param {Type} other \n     * @returns {boolean}\n     */\n    isBaseOf(other) {\n        return this.#inner.isBaseOf(other);\n    }\n\n    /**\n     * @returns {string}\n     */\n    toString() {\n        return this.#inner.toString();\n    }\n\n\t/**\n\t * @returns {Typed}\n\t */\n\ttoTyped() {\n\t\treturn new DataEntity(this);\n\t}\n}\n\n/**\n * @internal\n * @implements {Parametric}\n */\nexport class ParametricType extends Common {\n\t#name;\n    #offChainType;\n    #parameters;\n    #apply;\n\n    /**\n     * @param {{\n\t * \t name: string,\n     *   offChainType?: ((...any) => HeliosDataClass<HeliosData>)\n     *   parameters: Parameter[]\n     *   apply: (types: Type[]) => DataType\n     * }} props\n     */\n    constructor({name, offChainType, parameters, apply}) {\n        super();\n\t\tthis.#name = name;\n        this.#offChainType = offChainType ?? null;\n        this.#parameters = parameters;\n        this.#apply = apply;\n    }\n\n    /**\n     * @type {Parametric}\n     */\n    get asParametric() {\n        return this;\n    }\n\n    /**\n     * @type {null | ((...any) => HeliosDataClass<HeliosData>)}\n     */\n    get offChainType() {\n        return this.#offChainType;\n    }\n\n\t/**\n\t * @type {TypeClass[]}\n\t */\n\tget typeClasses() {\n\t\treturn this.#parameters.map(p => p.typeClass);\n\t}\n\n    /**\n     * @param {Type[]} types \n     * @param {Site} site \n     * @returns {EvalEntity}\n     */\n    apply(types, site = Site.dummy()) {\n        if (types.length != this.#parameters.length) {\n\t\t\tthrow site.typeError(`expected ${this.#parameters.length} type parameter(s), got ${types.length}`);\n\t\t}\n\n\t\tthis.#parameters.forEach((p, i) => {\n\t\t\tif (!p.typeClass.isImplementedBy(types[i])) {\n\t\t\t\tthrow site.typeError(`${types[i].toString()} doesn't implement ${p.typeClass.toString()}`);\n\t\t\t}\n\t\t});\n\n\t\t// TODO: recursive problem, defer the implementation check\n\t\treturn new AppliedType(types, this.#apply, this.#apply(types));\n    }\n\n\t /**\n\t * Must infer before calling\n\t * @param {Site} site \n\t * @param {Typed[]} args\n\t * @param {{[name: string]: Typed}} namedArgs\n\t * @param {Type[]} paramTypes - so that paramTypes can be accessed by caller\n\t * @returns {Func}\n\t */\n\tinferCall(site, args, namedArgs = {}, paramTypes = []) {\n\t\tthrow site.typeError(\"not a parametric function\");\n\t}\n\n\t/**\n\t * @param {Site} site \n\t * @param {InferenceMap} map \n\t * @returns {Parametric}\n\t */\n\tinfer(site, map) {\n\t\tthrow site.typeError(\"not a parametric function\");\n\t}\n\n\t/**\n\t * @returns {string}\n\t */\n\ttoString() {\n\t\treturn `${this.#name}`;//[${this.#parameters.map(p => p.toString())}]`;\n\t}\n}\n\n\n/////////////////////////////////////\n// Section 16: Eval builtin functions\n/////////////////////////////////////\n\n/**\n * Used by print, error, and assert\n * @internal\n * @implements {Func}\n * @implements {Named}\n */\nexport class BuiltinFunc extends Common {\n\t/**\n\t * @type {string}\n\t */\n\t#name;\n\n\t/**\n\t * @type {FuncType}\n\t */\n\t#type;\n\n\t/**\n\t * \n\t * @param {{\n\t *   name: string,\n\t *   type: FuncType\n\t * }} props\n\t */\n\tconstructor({name, type}) {\n\t\tsuper();\n\t\tthis.#name = name;\n\t\tthis.#type = type;\n\t}\n\n\t/**\n\t * @type {string}\n\t */\n\tget name() {\n\t\treturn this.#name;\n\t}\n\n\t/**\n\t * @type {string}\n\t */\n\tget path() {\n\t\treturn `__helios__${this.#name}`;\n\t}\n\n\t/**\n\t * @type {Type}\n\t */\n\tget type() {\n\t\treturn this.#type;\n\t}\n\n\t/**\n\t * @type {FuncType}\n\t */\n\tget funcType() {\n\t\treturn this.#type;\n\t}\n\n\t/**\n\t * @type {Func}\n\t */\n\tget asFunc() {\n\t\treturn this;\n\t}\n\n\t/**\n     * @type {Named}\n     */\n\tget asNamed() {\n        return this;\n    }\n\n\t/**\n\t * @type {Typed}\n\t */\n\tget asTyped() {\n\t\treturn this;\n\t}\n\n\t/**\n\t * @param {Site} site \n\t * @param {Typed[]} args \n\t * @param {{[name: string]: Typed}} namedArgs\n\t * @returns {null | Typed}\n\t */\n\tcall(site, args, namedArgs = {}) {\n\t\tconst res = this.#type.checkCall(site, args, namedArgs);\n\n\t\tif (!res) {\n\t\t\treturn null\n\t\t} else {\n\t\t\treturn res.toTyped();\n\t\t}\n\t}\n\n\t/**\n     * @returns {string}\n     */\n    toString() {\n        return this.name;\n    }\n}\n\n/**\n * Special builtin function that throws an error if condition is false and returns Void\n * @internal\n */\nexport const AssertFunc = new BuiltinFunc({\n    name: \"assert\",\n    type: new FuncType([BoolType, StringType], new VoidType())\n});\n\n/**\n * Special builtin function that throws an error and returns ErrorInstance (special case of Void)\n * @internal\n */\nexport const ErrorFunc = new BuiltinFunc({\n\tname: \"error\",\n\ttype: new FuncType([StringType], new ErrorType())\n});\n\n/**\n * Special builtin function that prints a message and returns void\n * @internal\n */\nexport const PrintFunc = new BuiltinFunc({\n\tname: \"print\",\n\ttype:  new FuncType([StringType], new VoidType())\n});\n\n\n///////////////////////////////////\n// Section 17: Eval container types\n///////////////////////////////////\n\n\n/**\n * @internal\n * @param {Type[]} itemTypes\n * @returns {Type}\n */\nexport function IteratorType$(itemTypes) {\n\tconst props = {\n\t\tname: `Iterator[${itemTypes.map(it => it.toString()).join(\", \")}]`,\n\t\tpath: `__helios__iterator__${itemTypes.length}`,\n\t\tgenInstanceMembers: (self) => {\n\t\t\t// Note: to_list and to_map can't be part of Iterator because type information is lost (eg. we can map to an iterator over functions)\n\n\t\t\tconst itemType = itemTypes.length == 1 ? itemTypes[0] : TupleType$(itemTypes);\n\n\t\t\tconst members = {\n\t\t\t\tany: new FuncType([new FuncType(itemTypes, BoolType)], BoolType),\n\t\t\t\tdrop: new FuncType([IntType], self),\n\t\t\t\tfilter: new FuncType([new FuncType(itemTypes, BoolType)], self),\n\t\t\t\tfind: new FuncType([new FuncType(itemTypes, BoolType)], itemType),\n\t\t\t\tfor_each: new FuncType([new FuncType(itemTypes, new VoidType())], new VoidType()),\n\t\t\t\tfold: (() => {\n\t\t\t\t\tconst a = new Parameter(\"a\", `${FTPP}0`, new AnyTypeClass());\n\t\t\t\t\treturn new ParametricFunc([a], new FuncType([new FuncType([a.ref].concat(itemTypes), a.ref), a.ref], a.ref));\n\t\t\t\t})(),\n\t\t\t\thead: itemType,\n\t\t\t\tget: new FuncType([IntType], itemType),\n\t\t\t\tget_singleton: new FuncType([], itemType),\n\t\t\t\tis_empty: new FuncType([], BoolType),\n\t\t\t\tmap: (() => {\n\t\t\t\t\tconst a = new Parameter(\"a\", `${FTPP}0`, new AnyTypeClass());\n\t\t\t\t\treturn new ParametricFunc([a], new FuncType([new FuncType(itemTypes, a.ref)], IteratorType$([a.ref])));\n\t\t\t\t})(),\n\t\t\t\tmap2: (() => {\n\t\t\t\t\tconst a = new Parameter(\"a\", `${FTPP}0`, new AnyTypeClass());\n\t\t\t\t\tconst b = new Parameter(\"b\", `${FTPP}0`, new AnyTypeClass());\n\n\t\t\t\t\treturn new ParametricFunc([a, b], new FuncType([new FuncType(itemTypes, TupleType$([a.ref, b.ref]))], IteratorType$([a.ref, b.ref])));\n\t\t\t\t})(),\n\t\t\t\tprepend: new FuncType(itemTypes, self),\n\t\t\t\ttail: self,\n\t\t\t\ttake: new FuncType([IntType], self)\n\t\t\t}\n\n\t\t\tif (itemTypes.length < 10) {\n\t\t\t\tmembers.zip = (() => {\n\t\t\t\t\tconst a = new Parameter(\"a\", `${FTPP}0`, new DefaultTypeClass());\n\t\t\t\t\treturn new ParametricFunc([a], new FuncType([ListType$(a.ref)], IteratorType$(itemTypes.concat([a.ref]))));\n\t\t\t\t})();\n\t\t\t}\n\n\t\t\treturn members;\n\t\t},\n\t\tgenTypeMembers: (self) => ({})\n\t};\n\n\t// if any of the item type is parametric, this return type must also be parametric so that the item type inference methods are called correctly\n\t//  (i.e. the inference method of this Iterator type calls the inference methods of the itemtypes)\n\treturn itemTypes.some(it => it.isParametric()) ? new GenericParametricType(props) : new GenericType(props);\n};\n\n/**\n * @internal\n * @template {HeliosData} T\n * @implements {DataType}\n */\nexport class TupleType extends GenericType {\n\t#itemTypes;\n\n\t/**\n\t * @param {GenericTypeProps<T>} props\n\t * @param {Type[]} itemTypes\n\t */\n\tconstructor(props, itemTypes) {\n\t\tsuper(props);\n\n\t\tthis.#itemTypes = itemTypes;\n\t}\n\t\n\tget itemTypes() {\n\t\treturn this.#itemTypes;\n\t}\n\n\t/**\n     * @param {Type} other \n     * @returns {boolean}\n     */\n    isBaseOf(other) {\n\t\tif (other instanceof TupleType) {\n\t\t\treturn other.#itemTypes.length == this.#itemTypes.length && this.#itemTypes.every((it, i) => it.isBaseOf(other.#itemTypes[i]));\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n    }\n\n\t/**\n\t * @internal\n\t * @param {Site} site\n\t * @param {InferenceMap} map \n\t * @param {null | Type} type \n\t * @returns {Type}\n\t */\n\tinfer(site, map, type) {\n\t\tif (!this.#itemTypes.some(it => it.isParametric())) {\n\t\t\treturn this;\n\t\t}\n\n\t\tif (!type) {\n\t\t\tconst itemTypes = this.#itemTypes.map(it => it.infer(site, map, null));\n\n\t\t\treturn TupleType$(itemTypes);\n\t\t} else if (type instanceof TupleType && this.#itemTypes.length == type.#itemTypes.length) {\n\t\t\tconst itemTypes = this.#itemTypes.map((it, i) => it.infer(site, map, type.#itemTypes[i]));\n\n\t\t\treturn TupleType$(itemTypes);\n\t\t}\n\n\t\tthrow site.typeError(`unable to infer type of ${this.toString()} (${type instanceof TupleType} ${type instanceof GenericType})`);\n\t}\n}\n\n/**\n * TODO: rename DataType to something else\n * @internal\n * @param {Type} type \n * @return {boolean}\n */\nexport function isDataType(type) {\n\tconst dt = type.asDataType;\n\n\tif (!dt) {\n\t\treturn false;\n\t}\n\n\t// no need to check for primitives\n\tif (dt == IntType || dt == StringType || dt == ByteArrayType || dt == BoolType || dt == RealType) {\n\t\treturn true;\n\t}\n\n\tconst dataTypeClass = new DefaultTypeClass();\n\n\treturn dataTypeClass.isImplementedBy(dt)\n}\n\n/**\n * @internal\n * @param {Type[]} itemTypes\n * @param {boolean | null} isAllDataTypes - if the all the itemTypes are known datatypes, then don't check that here (could lead to infinite recursion)\n * @returns {Type}\n */\nexport function TupleType$(itemTypes, isAllDataTypes = null) {\n\tconst isData = isAllDataTypes !== null ? isAllDataTypes : itemTypes.every(it => {\n\t\treturn isDataType(it);\n\t});\n\n\tconst props = {\n\t\tname: `(${itemTypes.map(it => it.toString()).join(\", \")})`,\n\t\tpath: `__helios__tuple[${itemTypes.map(it => it.asDataType ? it.asDataType.path : \"__helios__func\").join(\"@\")}]`,\n\t\tgenInstanceMembers: (self) => {\n\t\t\tconst members = isData ? genCommonInstanceMembers(self) : {};\n\n\t\t\tconst getters = [\n\t\t\t\t\"first\",\n\t\t\t\t\"second\",\n\t\t\t\t\"third\",\n\t\t\t\t\"fourth\",\n\t\t\t\t\"fifth\"\n\t\t\t];\n\n\t\t\tfor (let i = 0; i< 5 && i < itemTypes.length; i++) {\n\t\t\t\tconst key = getters[i];\n\t\t\t\tmembers[key] = itemTypes[i]\n\t\t\t}\n\n\t\t\tconst a = new Parameter(\"a\", `${FTPP}0`, new AnyTypeClass());\n\t\t\tmembers.__to_func = new ParametricFunc([a], new FuncType([new FuncType(itemTypes, a.ref)], a.ref));\n\t\t\t\n\t\t\treturn members;\n\t\t},\n\t\tgenTypeMembers: (self) => {\n\t\t\treturn isData ? genCommonTypeMembers(self) : {};\n\t\t}\n\t};\n\n\treturn new TupleType(props, itemTypes);\n}\n\n/**\n * Returns null if `type` isn't a tuple\n * @internal\n * @param {Type} type \n * @returns {null | Type[]}\n */\nexport function getTupleItemTypes(type) {\n\tif (type instanceof TupleType) {\n\t\treturn type.itemTypes;\n\t} else {\n\t\treturn null;\n\t}\n}\n\n/**\n * Builtin list type\n * @internal\n * @type {Parametric}\n */\nexport const ListType = new ParametricType({\n\tname: \"[]\",\n\toffChainType: HList,\n\tparameters: [new Parameter(\"ItemType\", `${TTPP}0`, new DefaultTypeClass())],\n\tapply: ([itemType_]) => {\n\t\tconst itemType = assertDefined(itemType_.asDataType);\n\t\tconst offChainItemType = itemType.offChainType ?? null;\n\t\tconst offChainType = offChainItemType ? HList(offChainItemType) : null;\n\n\t\tconst props = {\n\t\t\toffChainType: offChainType,\n\t\t\tname: `[]${itemType.toString()}`,\n\t\t\tpath: `__helios__list[${itemType.path}]`,\n\t\t\tgenTypeDetails: (self) => ({\n\t\t\t\tinputType: `(${assertDefined(itemType.typeDetails?.inputType)})[]`,\n\t\t\t\toutputType: `(${assertDefined(itemType.typeDetails?.outputType)})[]`,\n\t\t\t\tinternalType: {\n\t\t\t\t\ttype: \"List\",\n\t\t\t\t\titemType: assertDefined(itemType.typeDetails?.internalType)\n\t\t\t\t}\n\t\t\t}),\n\t\t\tjsToUplc: async (obj, helpers) => {\n\t\t\t\tif (Array.isArray(obj)) {\n\t\t\t\t\treturn new ListData(await Promise.all(obj.map(item => itemType.jsToUplc(item, helpers))));\n\t\t\t\t} else {\n\t\t\t\t\tthrow new Error(\"expected array\");\t\n\t\t\t\t}\n\t\t\t},\n\t\t\tuplcToJs: async (data, helpers) => {\n\t\t\t\treturn await Promise.all(data.list.map(item => itemType.uplcToJs(item, helpers)));\n\t\t\t},\n\t\t\tgenInstanceMembers: (self) => {\n\t\t\t\t/**\n\t\t\t\t * @type {InstanceMembers}\n\t\t\t\t */\n\t\t\t\tconst specialMembers = {};\n\n\t\t\t\tif ((new SummableTypeClass()).isImplementedBy(itemType)) {\n\t\t\t\t\tspecialMembers.sum = new FuncType([], itemType);\n\t\t\t\t} else if (StringType.isBaseOf(itemType)) {\n\t\t\t\t\tspecialMembers.join = new FuncType([\n\t\t\t\t\t\tnew ArgType(new Word(Site.dummy(), \"separator\"), StringType, true)\n\t\t\t\t\t], StringType);\n\t\t\t\t} else if (ByteArrayType.isBaseOf(itemType)) {\n\t\t\t\t\tspecialMembers.join = new FuncType([\n\t\t\t\t\t\tnew ArgType(new Word(Site.dummy(), \"separator\"), ByteArrayType, true)\n\t\t\t\t\t], ByteArrayType);\n\t\t\t\t} else if (itemType.asNamed?.name.startsWith(\"[]\")) {\n\t\t\t\t\tspecialMembers.flatten = new FuncType([], itemType);\n\t\t\t\t}\n\n\t\t\t\treturn {\n\t\t\t\t\t...genCommonInstanceMembers(self),\n\t\t\t\t\t...specialMembers,\n\t\t\t\t\tall: new FuncType([new FuncType([itemType], BoolType)], BoolType),\n\t\t\t\t\tany: new FuncType([new FuncType([itemType], BoolType)], BoolType),\n\t\t\t\t\tappend: new FuncType([itemType], self),\n\t\t\t\t\tdrop: new FuncType([IntType], self),\n\t\t\t\t\tdrop_end: new FuncType([IntType], self),\n\t\t\t\t\tfilter: new FuncType([new FuncType([itemType], BoolType)], self),\n\t\t\t\t\tfind: new FuncType([new FuncType([itemType], BoolType)], itemType),\n\t\t\t\t\tfind_index: new FuncType([new FuncType([itemType], BoolType)], IntType),\n\t\t\t\t\tfind_safe: new FuncType([new FuncType([itemType], BoolType)], OptionType$(itemType)),\n\t\t\t\t\tfold: (() => {\n\t\t\t\t\t\tconst a = new Parameter(\"a\", `${FTPP}0`, new AnyTypeClass());\n\t\t\t\t\t\treturn new ParametricFunc([a], new FuncType([new FuncType([a.ref, itemType], a.ref), a.ref], a.ref));\n\t\t\t\t\t})(),\n\t\t\t\t\tfold2: (() => {\n\t\t\t\t\t\tconst a = new Parameter(\"a\", `${FTPP}0`, new AnyTypeClass());\n\t\t\t\t\t\tconst b = new Parameter(\"b\", `${FTPP}0`, new AnyTypeClass());\n\t\t\t\t\t\treturn new ParametricFunc([a, b], new FuncType([new FuncType([a.ref, b.ref, itemType], TupleType$([a.ref, b.ref])), a.ref, b.ref], TupleType$([a.ref, b.ref])));\n\t\t\t\t\t})(),\n\t\t\t\t\tfold3: (() => {\n\t\t\t\t\t\tconst a = new Parameter(\"a\", `${FTPP}0`, new AnyTypeClass());\n\t\t\t\t\t\tconst b = new Parameter(\"b\", `${FTPP}0`, new AnyTypeClass());\n\t\t\t\t\t\tconst c = new Parameter(\"c\", `${FTPP}0`, new AnyTypeClass());\n\t\t\t\t\t\treturn new ParametricFunc([a, b, c], new FuncType([new FuncType([a.ref, b.ref, c.ref, itemType], TupleType$([a.ref, b.ref, c.ref])), a.ref, b.ref, c.ref], TupleType$([a.ref, b.ref, c.ref])));\n\t\t\t\t\t})(),\n\t\t\t\t\tfold_lazy: (() => {\n\t\t\t\t\t\tconst a = new Parameter(\"a\", `${FTPP}0`, new AnyTypeClass());\n\t\t\t\t\t\treturn new ParametricFunc([a], new FuncType([new FuncType([itemType, new FuncType([], a.ref)], a.ref), a.ref], a.ref));\n\t\t\t\t\t})(),\n\t\t\t\t\tfold2_lazy: (() => {\n\t\t\t\t\t\tconst a = new Parameter(\"a\", `${FTPP}0`, new AnyTypeClass());\n\t\t\t\t\t\tconst b = new Parameter(\"b\", `${FTPP}0`, new AnyTypeClass());\n\t\t\t\t\t\treturn new ParametricFunc([a, b], new FuncType([new FuncType([itemType, new FuncType([], TupleType$([a.ref, b.ref]))], TupleType$([a.ref, b.ref])), a.ref, b.ref], TupleType$([a.ref, b.ref])));\n\t\t\t\t\t})(),\n\t\t\t\t\tfor_each: new FuncType([new FuncType([itemType], new VoidType())], new VoidType()),\n\t\t\t\t\tget: new FuncType([IntType], itemType),\n\t\t\t\t\tget_singleton: new FuncType([], itemType),\n\t\t\t\t\thead: itemType,\n\t\t\t\t\tis_empty: new FuncType([], BoolType),\n\t\t\t\t\tlength: IntType,\n\t\t\t\t\tmap: (() => {\n\t\t\t\t\t\tconst a = new Parameter(\"a\", `${FTPP}0`, new DefaultTypeClass());\n\t\t\t\t\t\treturn new ParametricFunc([a], new FuncType([new FuncType([itemType], a.ref)], ListType$(a.ref)));\n\t\t\t\t\t})(),\n\t\t\t\t\tmap_option: (() => {\n\t\t\t\t\t\tconst a = new Parameter(\"a\", `${FTPP}0`, new DefaultTypeClass());\n\t\t\t\t\t\treturn new ParametricFunc([a], new FuncType([new FuncType([itemType], OptionType$(a.ref))], ListType$(a.ref)));\n\t\t\t\t\t})(),\n\t\t\t\t\tprepend: new FuncType([itemType], self),\n\t\t\t\t\tset: new FuncType([IntType, itemType], self),\n\t\t\t\t\tsort: new FuncType([new FuncType([itemType, itemType], BoolType)], self),\n\t\t\t\t\tsplit_at: new FuncType([IntType], TupleType$([self, self], true)),\n\t\t\t\t\ttail: self,\n\t\t\t\t\ttake: new FuncType([IntType], self),\n\t\t\t\t\ttake_end: new FuncType([IntType], self),\n\t\t\t\t\tto_iterator: new FuncType([], IteratorType$([itemType])),\n\t\t\t\t\tzip: (() => {\n\t\t\t\t\t\tconst a = new Parameter(\"a\", `${FTPP}0`, new DefaultTypeClass());\n\t\t\t\t\t\treturn new ParametricFunc([a], new FuncType([ListType$(a.ref)], IteratorType$([itemType, a.ref])));\n\t\t\t\t\t})()\n\t\t\t\t}\n\t\t\t},\n\t\t\tgenTypeMembers: (self) => ({\n\t\t\t\t...genCommonTypeMembers(self),\n\t\t\t\t__add: new FuncType([self, self], self),\n\t\t\t\tnew: new FuncType([IntType, new FuncType([IntType], itemType)], self),\n\t\t\t\tnew_const: new FuncType([IntType, itemType], self),\n\t\t\t\tfrom_iterator: new FuncType([IteratorType$([itemType])], self)\n\t\t\t})\n\t\t};\n\n\t\treturn itemType_.isParametric() ? new GenericParametricType(props) : new GenericType(props);\n\t}\n});\n\n/**\n * @internal\n * @param {Type} itemType \n * @returns {DataType}\n */\nexport function ListType$(itemType) {\n\treturn applyTypes(ListType, itemType);\n}\n\n/**\n * Builtin map type (in reality list of key-value pairs)\n * @internal\n * @type {Parametric}\n */\nexport const MapType = new ParametricType({\n\tname: \"Map\",\n\toffChainType: HMap,\n\tparameters: [\n\t\tnew Parameter(\"KeyType\", `${TTPP}0`, new DefaultTypeClass()), \n\t\tnew Parameter(\"ValueType\", `${TTPP}1`, new DefaultTypeClass())\n\t],\n\tapply: ([keyType_, valueType_]) => {\n\t\tconst keyType = assertDefined(keyType_.asDataType);\n\t\tconst valueType = assertDefined(valueType_.asDataType);\n\t\tconst offChainKeyType = keyType.offChainType ?? null;\n\t\tconst offChainValueType = valueType.offChainType ?? null;\n\t\tconst offChainType = offChainKeyType && offChainValueType ? HMap(offChainKeyType, offChainValueType) : null;\n\n\t\tconst props = {\n\t\t\toffChainType: offChainType,\n\t\t\tname: `Map[${keyType.toString()}]${valueType.toString()}`,\n\t\t\tpath: `__helios__map[${keyType.path}@${valueType.path}]`,\n\t\t\tgenTypeDetails: (self) => ({\n\t\t\t\tinputType: `[${assertDefined(keyType.typeDetails?.inputType)}, ${assertDefined(valueType.typeDetails?.inputType)}][]`,\n\t\t\t\toutputType: `[${assertDefined(keyType.typeDetails?.outputType)}, ${assertDefined(valueType.typeDetails?.outputType)}][]`,\n\t\t\t\tinternalType: {\n\t\t\t\t\ttype: \"Map\",\n\t\t\t\t\tkeyType: assertDefined(keyType.typeDetails?.internalType),\n\t\t\t\t\tvalueType: assertDefined(valueType.typeDetails?.internalType)\n\t\t\t\t}\n\t\t\t}),\n\t\t\tgenInstanceMembers: (self) => ({\n\t\t\t\t...genCommonInstanceMembers(self),\n\t\t\t\tall: new FuncType([new FuncType([keyType, valueType], BoolType)], BoolType),\n\t\t\t\tany: new FuncType([new FuncType([keyType, valueType], BoolType)], BoolType),\n\t\t\t\tappend: new FuncType([keyType, valueType], self),\n\t\t\t\tdelete: new FuncType([keyType], self),\n\t\t\t\tfilter: new FuncType([new FuncType([keyType, valueType], BoolType)], self),\n\t\t\t\tfind: new FuncType([new FuncType([keyType, valueType], BoolType)], TupleType$([keyType, valueType], true)),\n\t\t\t\tfind_key: new FuncType([new FuncType([keyType], BoolType)], keyType),\n\t\t\t\tfind_key_safe: new FuncType([new FuncType([keyType], BoolType)], OptionType$(keyType)),\n\t\t\t\t// TODO: convert return value of find_safe to an OptionType of a TupleType (requires changing the way options work internally)\n\t\t\t\tfind_safe: new FuncType([new FuncType([keyType, valueType], BoolType)], TupleType$([new FuncType([], TupleType$([keyType, valueType])), BoolType], false)),\n\t\t\t\tfind_value: new FuncType([new FuncType([valueType], BoolType)], valueType),\n\t\t\t\tfind_value_safe: new FuncType([new FuncType([valueType], BoolType)], OptionType$(valueType)),\n\t\t\t\tfold: (() => {\n\t\t\t\t\tconst a = new Parameter(\"a\", `${FTPP}0`, new AnyTypeClass());\n\t\t\t\t\treturn new ParametricFunc([a], new FuncType([new FuncType([a.ref, keyType, valueType], a.ref), a.ref], a.ref));\n\t\t\t\t})(),\n\t\t\t\tfold_lazy: (() => {\n\t\t\t\t\tconst a = new Parameter(\"a\", `${FTPP}0`, new AnyTypeClass());\n\t\t\t\t\treturn new ParametricFunc([a], new FuncType([new FuncType([keyType, valueType, new FuncType([], a.ref)], a.ref), a.ref], a.ref));\n\t\t\t\t})(),\n\t\t\t\tfor_each: new FuncType([new FuncType([keyType, valueType], new VoidType())], new VoidType()),\n\t\t\t\tget: new FuncType([keyType], valueType),\n\t\t\t\tget_safe: new FuncType([keyType], OptionType$(valueType)),\n\t\t\t\thead: TupleType$([keyType, valueType], true),\n\t\t\t\thead_key: keyType,\n\t\t\t\thead_value: valueType,\n\t\t\t\tis_empty: new FuncType([], BoolType),\n\t\t\t\tlength: IntType,\n\t\t\t\tmap: (() => {\n\t\t\t\t\tconst a = new Parameter(\"a\", `${FTPP}0`, new DefaultTypeClass());\n\t\t\t\t\tconst b = new Parameter(\"b\", `${FTPP}1`, new DefaultTypeClass());\n\n\t\t\t\t\treturn new ParametricFunc([a, b], new FuncType([new FuncType([keyType, valueType], TupleType$([a.ref, b.ref], true))], MapType$(a.ref, b.ref)));\n\t\t\t\t})(),\n\t\t\t\tprepend: new FuncType([keyType, valueType], self),\n\t\t\t\tset: new FuncType([keyType, valueType], self),\n\t\t\t\tsort: new FuncType([new FuncType([keyType, valueType, keyType, valueType], BoolType)], self),\n\t\t\t\ttail: self,\n\t\t\t\tto_iterator: new FuncType([], IteratorType$([keyType, valueType])),\n\t\t\t\tupdate: new FuncType([keyType, new FuncType([valueType], valueType)], self),\n\t\t\t\tupdate_safe: new FuncType([keyType, new FuncType([valueType], valueType)], self)\n\t\t\t}),\n\t\t\tgenTypeMembers: (self) => ({\n\t\t\t\t...genCommonTypeMembers(self),\n\t\t\t\t__add: new FuncType([self, self], self),\n\t\t\t\tfrom_iterator: new FuncType([IteratorType$([keyType, valueType])], self)\n\t\t\t})\n\t\t}\n\n\t\treturn (keyType.isParametric() || valueType.isParametric()) ? new GenericParametricType(props) : new GenericType(props);\n\t}\n});\n\n/**\n * @internal\n * @param {Type} keyType \n * @param {Type} valueType\n * @returns {DataType}\n */\nexport function MapType$(keyType, valueType) {\n\treturn applyTypes(MapType, keyType, valueType);\n}\n\n/**\n * Builtin option type\n * @internal\n * @type {Parametric}\n */\nconst OptionType = new ParametricType({\n\tname: \"Option\",\n\toffChainType: Option,\n\tparameters: [new Parameter(\"SomeType\", `${TTPP}0`, new DefaultTypeClass())],\n\tapply: ([someType_]) => {\n\t\tconst someType = assertDefined(someType_.asDataType);\n\t\tconst someOffChainType = someType.offChainType ?? null;\n\t\tconst offChainType = someOffChainType ? Option(someOffChainType) : null;\n\t\tconst someTypePath = someType.path;\n\n\t\t/**\n\t\t * @type {null | EnumMemberType}\n\t\t */\n\t\tlet NoneType = null;\n\n\t\t/**\n\t\t * @type {null | EnumMemberType}\n\t\t */\n\t\tlet SomeType = null;\n\n\t\tconst appliedOptionTypeProps = {\n\t\t\toffChainType: offChainType,\n\t\t\tname: `Option[${someType.toString()}]`,\n\t\t\tpath: `__helios__option[${someTypePath}]`,\n\t\t\tgenTypeDetails: (self) => ({\n\t\t\t\tinputType: `null | ${assertDefined(someType.typeDetails?.inputType)}`,\n\t\t\t\toutputType: `null | ${assertDefined(someType.typeDetails?.outputType)}`,\n\t\t\t\tinternalType: {\n\t\t\t\t\ttype: \"Option\",\n\t\t\t\t\tsomeType: assertDefined(someType.typeDetails?.internalType)\n\t\t\t\t}\n\t\t\t}),\n\t\t\tgenInstanceMembers: (self) => ({\n\t\t\t\t...genCommonInstanceMembers(self),\n\t\t\t\tmap: (() => {\n\t\t\t\t\tconst a = new Parameter(\"a\", `${FTPP}0`, new DefaultTypeClass());\n\t\t\t\t\treturn new ParametricFunc([a], new FuncType([new FuncType([someType], a.ref)], OptionType$(a.ref)));\n\t\t\t\t})(),\n\t\t\t\tunwrap: new FuncType([], someType)\n\t\t\t}),\n\t\t\tgenTypeMembers: (self) => ({\n\t\t\t\t...genCommonTypeMembers(self),\n           \t\tNone: assertDefined(NoneType),\n            \tSome: assertDefined(SomeType)\n\t\t\t})\n\t\t};\n\n\t\tconst someTypeProps = {\n\t\t\tname: \"Some\",\n\t\t\tconstrIndex: 0,\n\t\t\tfieldNames: [\"some\"],\n\t\t\tpath: `__helios__option[${someTypePath}]__some`,\n\t\t\tgenInstanceMembers: (self) => ({\n\t\t\t\t...genCommonInstanceMembers(self),\n\t\t\t\tsome: someType\n\t\t\t}),\n\t\t\tgenTypeMembers: (self) => ({\n\t\t\t\t...genCommonTypeMembers(self)\n\t\t\t})\n\t\t};\n\n\t\tconst noneTypeProps = {\n\t\t\tname: \"None\",\n\t\t\tconstrIndex: 1,\n\t\t\tpath: `__helios__option[${someTypePath}]__none`,\n\t\t\tgenInstanceMembers: (self) => ({\n\t\t\t\t...genCommonInstanceMembers(self)\n\t\t\t}),\n\t\t\tgenTypeMembers: (self) => ({\n\t\t\t\t...genCommonTypeMembers(self)\n\t\t\t})\n\t\t};\n\n\t\tif (someType.isParametric()) {\n\t\t\tconst AppliedOptionType = new GenericParametricType(appliedOptionTypeProps);\n\n\t\t\tSomeType = new GenericParametricEnumMemberType({\n\t\t\t\t...someTypeProps,\n\t\t\t\tparentType: AppliedOptionType\n\t\t\t});\n\n\t\t\tNoneType = new GenericParametricEnumMemberType({\n\t\t\t\t...noneTypeProps,\n\t\t\t\tparentType: AppliedOptionType\n\t\t\t});\n\n\t\t\treturn AppliedOptionType;\n\t\t} else {\n\t\t\tconst AppliedOptionType = new GenericType(appliedOptionTypeProps);\n\n\t\t\tSomeType = new GenericEnumMemberType({\n\t\t\t\t...someTypeProps,\n\t\t\t\tparentType: AppliedOptionType\n\t\t\t});\n\n\t\t\tNoneType = new GenericEnumMemberType({\n\t\t\t\t...noneTypeProps,\n\t\t\t\tparentType: AppliedOptionType\n\t\t\t});\n\n\t\t\treturn AppliedOptionType;\n\t\t}\n\t}\n});\n\n/**\n * @internal\n * @param {Type} someType \n * @returns {DataType}\n */\nexport function OptionType$(someType) {\n\treturn applyTypes(OptionType, someType);\n}\n\n\n//////////////////////////////\n// Section 18: Eval time types\n//////////////////////////////\n\n/**\n * Builtin Duration type\n * @internal\n * @type {DataType}\n */\nexport var DurationType = new GenericType({\n    name: \"Duration\",\n    offChainType: Duration,\n    genTypeDetails: (self) => ({\n        inputType: `number | bigint`,\n        outputType: `number`,\n        internalType: {\n            type: \"Duration\"\n        }\n    }),\n    jsToUplc: async (obj, helpers) => {\n        return Duration.fromProps(obj)._toUplcData();\n    },\n    uplcToJs: async (data, helpers) => {\n        return Number(Duration.fromUplcData(data).value);\n    },\n    genInstanceMembers: (self) => ({\n        ...genCommonInstanceMembers(self)\n    }),\n    genTypeMembers: (self) => {\n        const selfInstance = new DataEntity(assertDefined(self.asDataType));\n\n        return {\n            ...genCommonTypeMembers(self),\n            __add: new FuncType([self, self], self),\n            __div: new FuncType([self, IntType], self),\n            __div1: new FuncType([self, DurationType], IntType),\n            __geq: new FuncType([self, DurationType], BoolType),\n            __gt: new FuncType([self, DurationType], BoolType),\n            __leq: new FuncType([self, DurationType], BoolType),\n            __lt: new FuncType([self, DurationType], BoolType),\n            __mod: new FuncType([self, self], self),\n            __mul: new FuncType([self, IntType], self),\n            __sub: new FuncType([self, self], self),\n            new: new FuncType([IntType], self),\n            SECOND: selfInstance,\n            MINUTE: selfInstance,\n            HOUR: selfInstance,\n            DAY: selfInstance,\n            WEEK: selfInstance\n        }\n    }\n});\n\n/**\n * Builtin Time type. Opaque alias of Int representing milliseconds since 1970\n * @internal\n * @type {DataType}\n */\nexport var TimeType = new GenericType({\n    name: \"Time\",\n    offChainType: Time,\n    genTypeDetails: (self) => ({\n        inputType: `number | bigint | string | Date`,\n        outputType: `Date`,\n        internalType: {\n            type: \"Time\"\n        }\n    }),\n    jsToUplc: async (obj, helpers) => {\n        return Time.fromProps(obj)._toUplcData();\n    },\n    uplcToJs: async (data, helpers) => {\n        return new Date(Number(Time.fromUplcData(data).value));\n    },\n    genInstanceMembers: (self) => ({\n        ...genCommonInstanceMembers(self)\n    }),\n    genTypeMembers: (self) => ({\n        ...genCommonTypeMembers(self),\n        __add: new FuncType([self, DurationType], TimeType),\n        __geq: new FuncType([self, TimeType], BoolType),\n        __gt: new FuncType([self, TimeType], BoolType),\n        __leq: new FuncType([self, TimeType], BoolType),\n        __lt: new FuncType([self, TimeType], BoolType),\n\t    __sub: new FuncType([self, TimeType], DurationType),\n        __sub1: new FuncType([self, DurationType], TimeType),\n        new: new FuncType([IntType], self)\n    })\n});\n\n/**\n * Builtin TimeRange type\n * @internal\n * @type {DataType}\n */\nexport var TimeRangeType = new GenericType({\n    name: \"TimeRange\",\n    genInstanceMembers: (self) => ({\n        ...genCommonInstanceMembers(self),\n        contains: new FuncType([TimeType], BoolType),\n        start: TimeType,\n        end: TimeType,\n        is_before: new FuncType([TimeType], BoolType),\n        is_after: new FuncType([TimeType], BoolType)\n    }),\n    genTypeMembers: (self) => {\n        const selfInstance = new DataEntity(assertDefined(self.asDataType));\n\n        return {\n            ...genCommonTypeMembers(self),\n            new: new FuncType([TimeType, TimeType], self),\n            ALWAYS: selfInstance,\n            NEVER: selfInstance,\n            from: new FuncType([TimeType], self),\n            to: new FuncType([TimeType], self)\n        };\n    }\n});\n\n\n//////////////////////////////\n// Section 19: Eval hash types\n//////////////////////////////\n\n/**\n * @param {Type} self\n * @returns {InstanceMembers}\n */\nfunction genHashInstanceMembers(self) {\n    return {\n        ...genCommonInstanceMembers(self)\n    };\n}\n\n/**\n * @param {Type} self\n * @returns {TypeMembers}\n */\nfunction genHashTypeMembers(self) {\n    return {\n        ...genCommonTypeMembers(self),\n        __geq: new FuncType([self, self], BoolType),\n        __gt: new FuncType([self, self], BoolType),\n        __leq: new FuncType([self, self], BoolType),\n        __lt: new FuncType([self, self], BoolType),\n        new: new FuncType([ByteArrayType], self)\n    };\n}\n\n/**\n * @param {HeliosDataClass<HeliosData>} offchainType \n */\nfunction genHashTypeProps(offchainType) {\n    return {\n        genTypeDetails: (self) => ({\n            inputType: `number[] | string | helios.${offchainType.name}`,\n            outputType: `helios.${offchainType.name}`,\n            internalType: {\n                type: offchainType.name\n            }\n        }),\n        jsToUplc: async (obj, helpers) => {\n            if (obj instanceof offchainType) {\n                return obj._toUplcData();\n            } else {\n                const bytes = Array.isArray(obj) ? obj : hexToBytes(obj);\n\n                return new ByteArrayData(bytes);\n            }\n        },\n        uplcToJs: async (data, helpers) => {\n            return new offchainType(data.bytes);\n        }\n    }\n}\n\n/**\n * @internal\n * @implements {DataType}\n */\nexport class ScriptHashType extends GenericType {\n    /**\n     * \n     * @param {null | string } name \n     * @param {null | HeliosDataClass<HeliosData>} offChainType \n     */\n    constructor(name = null, offChainType = null) {\n        if (offChainType && name) {\n            super({\n                ...genHashTypeProps(offChainType),\n                name: name,\n                offChainType: offChainType,\n                genInstanceMembers: genHashInstanceMembers,\n                genTypeMembers: (self) => ({\n                    ...genHashTypeMembers(self),\n                    from_script_hash: new FuncType([scriptHashType], self)\n                })\n            });\n        } else {\n            assert(name === null);\n\n            super({\n                name: \"ScriptHash\",\n                genInstanceMembers: (self) => ({\n                    ...genCommonInstanceMembers(self)\n                }),\n                genTypeMembers: (self) => ({\n                    ...genCommonTypeMembers(self)\n                })\n            });\n        }\n    }\n}\n\n/**\n * @internal\n * @type {DataType}\n */\nexport const scriptHashType = new ScriptHashType();\n\n/**\n * @internal\n * @type {DataType}\n */\nexport const DatumHashType = new GenericType({\n    ...genHashTypeProps(DatumHash),\n    name: \"DatumHash\",\n    offChainType: DatumHash,\n    genInstanceMembers: genHashInstanceMembers,\n    genTypeMembers: genHashTypeMembers\n});\n\n/**\n * @internal\n * @type {ScriptHashType}\n */\nexport const MintingPolicyHashType = new ScriptHashType(\"MintingPolicyHash\", MintingPolicyHash);\n\n/**\n * Builtin PubKey type\n * @internal\n * @type {DataType}\n */\nexport const PubKeyType = new GenericType({\n    name: \"PubKey\",\n    offChainType: PubKey,\n    genInstanceMembers: (self) => ({\n        ...genCommonInstanceMembers(self),\n        verify: new FuncType([ByteArrayType, ByteArrayType], BoolType)\n    }),\n    genTypeMembers: (self) => ({\n        ...genCommonTypeMembers(self),\n        new: new FuncType([ByteArrayType], self)\n    })\n});\n\n/**\n * Builtin PubKeyHash type\n * @internal\n * @type {DataType}\n */\nexport const PubKeyHashType = new GenericType({\n    ...genHashTypeProps(PubKeyHash),\n    name: \"PubKeyHash\",\n    offChainType: PubKeyHash,\n    genInstanceMembers: genHashInstanceMembers,\n    genTypeMembers: genHashTypeMembers\n});\n\n/**\n * Builtin StakingHash type\n * @internal\n * @type {DataType}\n */\nexport const StakingHashType = new GenericType({\n    name: \"StakingHash\",\n    genInstanceMembers: genCommonInstanceMembers,\n    genTypeMembers: (self) => ({\n        StakeKey: StakingHashStakeKeyType,\n        Validator: StakingHashValidatorType,\n        new_stakekey: new FuncType([PubKeyHashType], StakingHashStakeKeyType),\n        new_validator: new FuncType([StakingValidatorHashType], StakingHashValidatorType)\n    })\n});\n\n/**\n * @internal\n * @type {EnumMemberType}\n */\nexport const StakingHashStakeKeyType = new GenericEnumMemberType({\n    name: \"StakeKey\",\n    constrIndex: 0,\n    parentType: StakingHashType,\n    genInstanceMembers: (self) => ({\n        ...genCommonInstanceMembers(self),\n        hash: PubKeyHashType\n    }),\n    genTypeMembers: (self) => ({\n        ...genCommonEnumTypeMembers(self, StakingHashType)\n    })\n});\n\n/**\n * @internal\n * @type {EnumMemberType}\n */\nexport const StakingHashValidatorType = new GenericEnumMemberType({\n    name: \"Validator\",\n    constrIndex: 1,\n    parentType: StakingHashType,\n    genInstanceMembers: (self) => ({\n        ...genCommonInstanceMembers(self),\n        hash: StakingValidatorHashType\n    }),\n    genTypeMembers: (self) => ({\n        ...genCommonEnumTypeMembers(self, StakingHashType)\n    })\n});\n\n/**\n * @internal\n * @type {ScriptHashType}\n */\nexport const StakingValidatorHashType = new ScriptHashType(\"StakingValidatorHash\", StakingValidatorHash);\n\n/**\n * @internal\n * @type {ScriptHashType}\n */\nexport const ValidatorHashType = new ScriptHashType(\"ValidatorHash\", ValidatorHash);\n\n\n\n///////////////////////////////\n// Section 20: Eval money types\n///////////////////////////////\n\n/**\n * Builtin AssetClass type\n * @internal\n * @type {DataType}\n */\nexport const AssetClassType = new GenericType({\n    name: \"AssetClass\",\n    offChainType: AssetClass,\n    genTypeDetails: (self) => ({\n        inputType: \"string | {mph: number[] | string | helios.MintingPolicyHash, tokenName: number[] | string} | helios.AssetClass\",\n        outputType: \"helios.AssetClass\",\n        internalType: {\n            type: \"AssetClass\"\n        }\n    }),\n    jsToUplc: async (obj, helpers) => {\n        return AssetClass.fromProps(obj)._toUplcData();\n    },\n    uplcToJs: async (data, helpers) => {\n        return AssetClass.fromUplcData(data);\n    },\n    genInstanceMembers: (self) => ({\n        ...genCommonInstanceMembers(self),\n        mph: MintingPolicyHashType,\n        token_name: ByteArrayType\n    }),\n    genTypeMembers: (self) => {\n        const selfInstance = new DataEntity(assertDefined(self.asDataType));\n\n        return {\n            ...genCommonTypeMembers(self),\n            ADA: selfInstance,\n            new: new FuncType([MintingPolicyHashType, ByteArrayType], self),\n            __geq: new FuncType([self, self], BoolType),\n            __gt: new FuncType([self, self], BoolType),\n            __leq: new FuncType([self, self], BoolType),\n            __lt: new FuncType([self, self], BoolType)\n        }\n    }\n});\n\n\n/**\n * Builtin money Value type\n * @internal\n * @type {DataType}\n */\nexport const ValueType = new GenericType({\n    name: \"Value\",\n    offChainType: Value,\n    genTypeDetails: (self) => ({\n        inputType: `number | bigint | {lovelace?: number | bigint, assets: [string, number | bigint][] | [number[] | string | helios.MintingPolicyHash, [number[] | string, number | bigint][]][] | helios.Assets} | helios.Value`,\n        outputType: `helios.Value`,\n        internalType: {\n            type: \"Value\"\n        }\n    }),\n    jsToUplc: async (obj, helpers) => {\n        return Value.fromProps(obj)._toUplcData();\n    },\n    uplcToJs: async (data, helpers) => {\n        return Value.fromUplcData(data);\n    },\n    genInstanceMembers: (self) => ({\n        ...genCommonInstanceMembers(self),\n        contains: new FuncType([self], BoolType),\n        contains_policy: new FuncType([MintingPolicyHashType], BoolType),\n        get: new FuncType([AssetClassType], IntType),\n        get_assets: new FuncType([], ValueType),\n        get_lovelace: new FuncType([], IntType),\n        get_policy: new FuncType([MintingPolicyHashType], MapType$(ByteArrayType, IntType)),\n        get_safe: new FuncType([AssetClassType], IntType),\n        is_zero: new FuncType([], BoolType),\n        to_map: new FuncType([], MapType$(MintingPolicyHashType, MapType$(ByteArrayType, IntType))),\n        value: self // so that Value implements Valuable itself as well\n    }),\n    genTypeMembers: (self) => {\n        const selfInstance = new DataEntity(assertDefined(self.asDataType));\n\n        return {\n            ...genCommonTypeMembers(self),\n            __add: new FuncType([self, self], self),\n            __div: new FuncType([self, IntType], ValueType),\n            __geq: new FuncType([self, ValueType], BoolType),\n            __gt: new FuncType([self, ValueType], BoolType),\n            __leq: new FuncType([self, ValueType], BoolType),\n            __lt: new FuncType([self, ValueType], BoolType),\n            __mul: new FuncType([self, IntType], ValueType),\n            __sub: new FuncType([self, self], self),\n            from_map: new FuncType([MapType$(MintingPolicyHashType, MapType$(ByteArrayType, IntType))], self),\n            lovelace: new FuncType([IntType], self),\n            new: new FuncType([AssetClassType, IntType], self),\n            sum: (() => {\n                const a = new Parameter(\"a\", `${FTPP}0`, new ValuableTypeClass());\n                return new ParametricFunc([a], new FuncType([ListType$(a.ref)], self));\n            })(),\n            ZERO: selfInstance\n        }\n    }\n});\n\n/**\n * @internal\n * @implements {TypeClass}\n */\nexport class ValuableTypeClass extends DefaultTypeClass {\n\t/**\n\t * @param {Type} impl\n\t * @returns {TypeClassMembers}\n\t */\n\tgenTypeMembers(impl) {\n\t\treturn {\n            ...super.genTypeMembers(impl)\n        };\n\t}\n\n\t/**\t\n\t * @param {Type} impl\n\t * @returns {TypeClassMembers}\n\t */\n\tgenInstanceMembers(impl) {\n\t\treturn {\n            ...super.genInstanceMembers(impl),\n            value: ValueType\n\t\t};\n\t}\n\n\t/**\n\t * @returns {string}\n\t */\n\ttoString() {\n\t\treturn \"Valuable\";\n\t}\n}\n\n\n////////////////////////////\n// Section 21: Eval tx types\n////////////////////////////\n\n/**\n * Buitin Address type\n * @internal\n * @type {DataType}\n */\nexport const AddressType = new GenericType({\n    name: \"Address\",\n    offChainType: Address,\n    genTypeDetails: (self) => ({\n        inputType: \"string | helios.Address\",\n        outputType: \"helios.Address\",\n        internalType: {\n            type: \"Address\"\n        }\n    }),\n    jsToUplc: async (obj, helpers) => {\n        return (Address.fromProps(obj))._toUplcData();\n    },\n    uplcToJs: async (data, helpers) => {\n        return Address.fromUplcData(data);\n    },\n    genInstanceMembers: (self) => ({\n        ...genCommonInstanceMembers(self),\n        credential: CredentialType,\n        staking_credential: OptionType$(StakingCredentialType),\n        to_bytes: new FuncType([], ByteArrayType),\n        to_hex: new FuncType([], StringType)\n    }),\n    genTypeMembers: (self) => ({\n        ...genCommonTypeMembers(self),\n        new: new FuncType([CredentialType, OptionType$(StakingCredentialType)], self),\n        new_empty: new FuncType([], self),\n        from_bytes: new FuncType([ByteArrayType], self),\n        from_hex: new FuncType([StringType], self)\n    })\n});\n\n/**\n * @internal\n * @type {DataType}\n */\nexport const DCertType = new GenericType({\n    name: \"DCert\",\n    genInstanceMembers: (self) => ({\n        ...genCommonInstanceMembers(self)\n    }),\n    genTypeMembers: (self) => ({\n        ...genCommonTypeMembers(self),\n        Delegate: DCertDelegateType,\n        Deregister: DCertDeregisterType,\n        Register: DCertRegisterType,\n        RegisterPool: DCertRegisterPoolType,\n        RetirePool: DCertRetirePoolType,\n        new_delegate: new FuncType([StakingCredentialType, PubKeyHashType], DCertDelegateType),\n        new_deregister: new FuncType([StakingCredentialType], DCertDeregisterType),\n        new_register: new FuncType([StakingCredentialType], DCertRegisterType),\n        new_register_pool: new FuncType([PubKeyHashType, PubKeyHashType], DCertRegisterPoolType),\n        new_retire_pool: new FuncType([PubKeyHashType, IntType], DCertRetirePoolType)\n    })\n});\n\n/**\n * @internal\n * @type {EnumMemberType}\n */\nconst DCertDelegateType = new GenericEnumMemberType({\n    name: \"Delegate\",\n    constrIndex: 2,\n    parentType: DCertType,\n    genInstanceMembers: (self) => ({\n        ...genCommonInstanceMembers(self),\n        delegator: StakingCredentialType,\n\t\tpool_id: PubKeyHashType\n    }),\n    genTypeMembers: (self) => ({\n        ...genCommonEnumTypeMembers(self, DCertType)\n    })\n});\n\n/**\n * @internal\n * @type {EnumMemberType}\n */\nconst DCertDeregisterType = new GenericEnumMemberType({\n    name: \"Deregister\",\n    constrIndex: 1,\n    parentType: DCertType,\n    genInstanceMembers: (self) => ({\n        ...genCommonInstanceMembers(self),\n        credential: StakingCredentialType\n    }),\n    genTypeMembers: (self) => ({\n        ...genCommonEnumTypeMembers(self, DCertType)\n    })\n});\n\n/**\n * @internal\n * @type {EnumMemberType}\n */\nconst DCertRegisterType = new GenericEnumMemberType({\n    name: \"Register\",\n    constrIndex: 0,\n    parentType: DCertType,\n    genInstanceMembers: (self) => ({\n        ...genCommonInstanceMembers(self),\n        credential: StakingCredentialType\n    }),\n    genTypeMembers: (self) => ({\n        ...genCommonEnumTypeMembers(self, DCertType)\n    })\n});\n\n/**\n * @internal\n * @type {EnumMemberType}\n */\nconst DCertRegisterPoolType = new GenericEnumMemberType({\n    name: \"RegisterPool\",\n    constrIndex: 3,\n    parentType: DCertType,\n    genInstanceMembers: (self) => ({\n        ...genCommonInstanceMembers(self),\n        pool_id: PubKeyHashType,\n        pool_vrf: PubKeyHashType\n    }),\n    genTypeMembers: (self) => ({\n        ...genCommonEnumTypeMembers(self, DCertType)\n    })\n});\n\n/**\n * @internal\n * @type {EnumMemberType}\n */\nconst DCertRetirePoolType = new GenericEnumMemberType({\n    name: \"RetirePool\",\n    constrIndex: 4,\n    parentType: DCertType,\n    genInstanceMembers: (self) => ({\n        ...genCommonInstanceMembers(self),\n        pool_id: PubKeyHashType,\n        epoch: IntType\n    }),\n    genTypeMembers: (self) => ({\n        ...genCommonEnumTypeMembers(self, DCertType)\n    })\n});\n\n\n/**\n * Builtin Credential type\n * @internal\n * @type {DataType}\n */\nexport const CredentialType = new GenericType({\n    name: \"Credential\",\n    genInstanceMembers: (self) => ({\n        ...genCommonInstanceMembers(self),\n    }),\n    genTypeMembers: (self) => ({\n        ...genCommonTypeMembers(self),\n        PubKey: CredentialPubKeyType,\n        Validator: CredentialValidatorType,\n        new_pubkey: new FuncType([PubKeyHashType], CredentialPubKeyType),\n        new_validator: new FuncType([ValidatorHashType], CredentialValidatorType)\n    })\n});\n\n\n/**\n * Builtin Credential::PubKey\n */\nconst CredentialPubKeyType = new GenericEnumMemberType({\n    name: \"PubKey\",\n    constrIndex: 0,\n    fieldNames: [\"hash\"],\n    parentType: CredentialType,\n    genInstanceMembers: (self) => ({\n        ...genCommonInstanceMembers(self),\n        hash: PubKeyHashType\n    }),\n    genTypeMembers: (self) => ({\n        ...genCommonEnumTypeMembers(self, CredentialType)\n    })\n});\n\n/**\n * Builtin Credential::Validator type\n */\nconst CredentialValidatorType = new GenericEnumMemberType({\n    name: \"Validator\",\n    constrIndex: 1,\n    fieldNames: [\"hash\"],\n    parentType: CredentialType,\n    genInstanceMembers: (self) => ({\n        ...genCommonInstanceMembers(self),\n        hash: ValidatorHashType\n    }),\n    genTypeMembers: (self) => ({\n        ...genCommonEnumTypeMembers(self, CredentialType)\n    })\n});\n\n/**\n * @internal\n * @type {DataType}\n */\nexport const OutputDatumType = new GenericType({\n    name: \"OutputDatum\",\n    path: \"__helios__outputdatum\",\n    genInstanceMembers: (self) => ({\n        ...genCommonInstanceMembers(self),\n        get_inline_data: new FuncType([], RawDataType)\n    }),\n    genTypeMembers: (self) => ({\n        ...genCommonTypeMembers(self),\n        Hash: OutputDatumHashType,\n        Inline: OutputDatumInlineType,\n        None: OutputDatumNoneType,\n        new_hash: new FuncType([DatumHashType], OutputDatumHashType),\n\t\tnew_inline: (() => {\n            const a = new Parameter(\"a\", `${FTPP}0`, new DefaultTypeClass());\n\n            return new ParametricFunc([a], new FuncType([a.ref], OutputDatumInlineType))\n        })(),\n        new_none: new FuncType([], OutputDatumNoneType)\n    })\n});\n\n/**\n * @internal\n * @type {EnumMemberType}\n */\nconst OutputDatumHashType = new GenericEnumMemberType({\n    name: \"Hash\",\n    constrIndex: 1,\n    parentType: OutputDatumType,\n    genInstanceMembers: (self) => ({\n        ...genCommonInstanceMembers(self),\n        hash: DatumHashType\n    }),\n    genTypeMembers: (self) => ({\n        ...genCommonEnumTypeMembers(self, OutputDatumType)\n    })\n});\n\n/**\n * @internal\n * @type {EnumMemberType}\n */\nconst OutputDatumInlineType = new GenericEnumMemberType({\n    name: \"Inline\",\n    constrIndex: 2,\n    parentType: OutputDatumType,\n    genInstanceMembers: (self) => ({\n        ...genCommonInstanceMembers(self),\n        data: RawDataType\n    }),\n    genTypeMembers: (self) => ({\n        ...genCommonEnumTypeMembers(self, OutputDatumType)\n    })\n});\n\n/**\n * @internal\n * @type {EnumMemberType}\n */\nconst OutputDatumNoneType = new GenericEnumMemberType({\n    name: \"None\",\n    constrIndex: 0,\n    parentType: OutputDatumType,\n    genInstanceMembers: (self) => ({\n        ...genCommonInstanceMembers(self)\n    }),\n    genTypeMembers: (self) => ({\n        ...genCommonEnumTypeMembers(self, OutputDatumType)\n    })\n});\n\n/**\n * Base class for ScriptContext, ContractContext, Scripts and other \"macro\"-types\n * @internal\n */\nexport class MacroType extends Common {\n    /**\n     * @type {string[]}\n     */\n    get fieldNames() {\n        return [];\n    }\n\n    /**\n     * @type {InstanceMembers}\n     */\n    get instanceMembers() {\n        throw new Error(\"not yet implemented\");\n    }\n\n    /**\n     * @type {string}\n     */\n    get name() {\n        throw new Error(\"not yet implemented\");\n    }\n\n    /**\n     * @type {null | HeliosDataClass<HeliosData>}\n     */\n    get offChainType() {\n        return null;\n    }\n\n    /**\n     * @type {string}\n     */\n    get path() {\n        throw new Error(\"not yet implemented\");\n    }\n\n\t/**\n\t * @type {TypeMembers}\n\t */\n\tget typeMembers() {\n        return {};\n    }\n\n    /**\n     * @type {DataType}\n     */\n    get asDataType() {\n        return this;\n    }\n\n    /**\n     * @type {Named}\n     */\n    get asNamed() {\n        return this;\n    }\n\n    /**\n     * @type {Type}\n     */\n    get asType() {\n        return this;\n    }\n\n    /**\n     * @param {Site} site \n     * @param {InferenceMap} map \n     * @param {null | Type} type \n     * @returns {Type}\n     */\n    infer(site, map, type) {\n        return this;\n    }\n\n    /**\n     * @param {Type} other \n     * @returns {boolean}\n     */\n    isBaseOf(other) {\n        throw new Error(\"not yet implemented\");\n    }\n\n    /**\n     * @returns {string}\n     */\n\ttoString() {\n\t\treturn this.name;\n\t}\n\n    /**\n     * @returns {Typed}\n     */\n    toTyped() {\n        return new DataEntity(this);\n    }\n}\n\n/**\n * @internal\n * @typedef {{[name: string]: ScriptHashType}} ScriptTypes\n */\n\n/**\n * @internal\n * @implements {DataType}\n */\nexport class ScriptsType extends MacroType {\n    /**\n     * @type {{[name: string]: Typed}}\n     */\n    #scripts;\n\n    /**\n     * @param {ScriptTypes} scripts \n     */\n    constructor(scripts) {\n        super();\n\n        this.#scripts = {};\n        \n        for (let k in scripts) {\n            this.#scripts[k] = scripts[k].toTyped();\n        }\n    }\n\n    /**\n     * @type {InstanceMembers}\n     */\n     get instanceMembers() {\n        return {};\n    }\n\n    /**\n     * @type {TypeMembers}\n     */\n    get typeMembers() {\n        return {\n            ...this.#scripts\n        };\n    }\n\n    /**\n     * @type {string}\n     */\n    get name() {\n        return \"Scripts\";\n    }\n\n    /**\n     * @type {string}\n     */\n    get path() {\n        return \"__helios__scripts\";\n    }\n\n    /**\n     * @param {Type} other \n     * @returns {boolean}\n     */\n    isBaseOf(other) {\n        return other instanceof ScriptsType;\n    }\n\n    /**\n     * @returns {boolean}\n     */\n    isEmpty() {\n        return Object.keys(this.#scripts).length == 0;\n    }\n}\n\n/**\n * Builtin ScriptContext type\n * @internal\n * @implements {DataType}\n */\nexport class ScriptContextType extends MacroType {\n\tconstructor() {\n\t\tsuper();\n\t}\n\n    /**\n     * @type {string}\n     */\n    get name() {\n        return \"ScriptContext\";\n    }\n\n    /**\n\t * @type {InstanceMembers}\n\t */\n\tget instanceMembers() {\n        const members = {\n            ...genCommonInstanceMembers(this),\n            get_current_minting_policy_hash: new FuncType([], MintingPolicyHashType),\n            get_current_input: new FuncType([], TxInputType),\n            get_cont_outputs: new FuncType([], ListType$(TxOutputType)),\n            get_current_validator_hash: new FuncType([], ValidatorHashType),\n            get_spending_purpose_output_id: new FuncType([], TxOutputIdType),\n            get_staking_purpose:new FuncType([], StakingPurposeType),\n            get_script_purpose: new FuncType([], ScriptPurposeType),\n            tx: TxType\n        };\n        \n        return members;\n\t}\n\n    /**\n     * @type {string}\n     */\n    get path() {\n\t\treturn \"__helios__scriptcontext\";\n\t}\n\n\t/**\n\t * @type {TypeMembers}\n\t */\n\tget typeMembers() {\n        return {\n            ...genCommonTypeMembers(this),\n            new_certifying: new FuncType([TxType, DCertType], new ScriptContextType()),\n            new_minting: new FuncType([TxType, MintingPolicyHashType], new ScriptContextType()),\n            new_rewarding: new FuncType([TxType, StakingCredentialType], new ScriptContextType()),\n            new_spending: new FuncType([TxType, TxOutputIdType], new ScriptContextType())\n        };\n\t}\n\n    /**\n     * @param {Type} other \n     * @returns {boolean}\n     */\n    isBaseOf(other) {\n        return other instanceof ScriptContextType;\n    }\n}\n\n/**\n * Builtin ScriptContext type\n * @internal\n * @implements {DataType}\n */\nexport class ContractContextType extends MacroType {\n    constructor() {\n        super();\n    }\n\n    /**\n\t * @type {InstanceMembers}\n\t */\n\tget instanceMembers() {\n        return {\n            now: new FuncType([], TimeType),\n            agent: WalletType,\n            network: NetworkType,\n            new_tx_builder: new FuncType([], TxBuilderType)\n        };\n\t}\n\n    /**\n     * @type {string}\n     */\n    get name() {\n        return \"ContractContext\";\n    }\n\n    /**\n     * @type {string}\n     */\n    get path() {\n        return \"__helios__contractcontext\";\n    }\n\n    /**\n     * @param {Type} other \n     * @returns {boolean}\n     */\n    isBaseOf(other) {\n        return other instanceof ContractContextType;\n    }\n}\n\n/**\n * @internal\n */\nexport const WalletType = new GenericType({\n    name: \"Wallet\",\n    genInstanceMembers: (self) => ({\n        address: AddressType,\n        hash: PubKeyHashType,\n        pick: new FuncType([ValueType], ListType$(TxInputType))\n    }),\n    genTypeMembers: (self) => ({})\n});\n\n/**\n * Does this really need to be a class? (i.e. will it be instantiated with some properties)\n * @internal\n */\nexport const NetworkType = new GenericType({\n    name: \"Network\",\n    genInstanceMembers: (self) => ({\n        pick: new FuncType([AddressType, ValueType], ListType$(TxInputType)),\n        get: new FuncType([TxOutputIdType], TxInputType),\n        utxos_at: new FuncType([AddressType], IteratorType$([TxInputType]))\n    }),\n    genTypeMembers: (self) => ({}),\n});\n\n/**\n * Builtin ScriptPurpose type (Minting| Spending| Rewarding | Certifying)\n * @internal\n * @type {DataType}\n */\nexport const ScriptPurposeType = new GenericType({\n    name: \"ScriptPurpose\",\n    genInstanceMembers: (self) => ({\n        ...genCommonInstanceMembers(self)\n    }),\n    genTypeMembers: (self) => ({\n        ...genCommonTypeMembers(self),\n        Certifying: ScriptPurposeCertifyingType,\n        Minting: ScriptPurposeMintingType,\n        Rewarding: ScriptPurposeTypeRewarding,\n        Spending: ScriptPurposeSpendingType,\n        new_certifying: new FuncType([DCertType], ScriptPurposeCertifyingType),\n        new_minting: new FuncType([MintingPolicyHashType], ScriptPurposeMintingType),\n        new_rewarding: new FuncType([StakingCredentialType], ScriptPurposeTypeRewarding),\n        new_spending: new FuncType([TxOutputIdType], ScriptPurposeSpendingType), \n    })\n}); \n\n/**\n * Builtin ScriptPurpose::Certifying\n * @internal\n * @type {EnumMemberType}\n */\nconst ScriptPurposeCertifyingType = new GenericEnumMemberType({\n    name: \"Certifying\",\n    constrIndex: 3,\n    parentType: ScriptPurposeType,\n    genInstanceMembers: (self) => ({\n        ...genCommonInstanceMembers(self),\n        dcert: DCertType\n    }),\n    genTypeMembers: (self) => ({\n        ...genCommonEnumTypeMembers(self, ScriptPurposeType)\n    })\n});\n\n/**\n * Builtin ScriptPurpose::Minting\n * @internal\n * @type {EnumMemberType}\n */\nconst ScriptPurposeMintingType = new GenericEnumMemberType({\n    name: \"Minting\",\n    constrIndex: 0,\n    parentType: ScriptPurposeType,\n    genInstanceMembers: (self) => ({\n        ...genCommonInstanceMembers(self),\n        policy_hash: MintingPolicyHashType\n    }),\n    genTypeMembers: (self) => ({\n        ...genCommonEnumTypeMembers(self, ScriptPurposeType)\n    })\n});\n\n/**\n * Builtin ScriptPurpose::Rewarding\n * @internal\n * @type {EnumMemberType}\n */\nconst ScriptPurposeTypeRewarding = new GenericEnumMemberType({\n    name: \"Rewarding\",\n    constrIndex: 2,\n    parentType: ScriptPurposeType,\n    genInstanceMembers: (self) => ({\n        ...genCommonInstanceMembers(self),\n        credential: StakingCredentialType\n    }),\n    genTypeMembers: (self) => ({\n        ...genCommonEnumTypeMembers(self, ScriptPurposeType)\n    })\n});\n\n/**\n * Builtin ScriptPurpose::Spending\n * @internal\n * @type {EnumMemberType}\n */\nconst ScriptPurposeSpendingType = new GenericEnumMemberType({\n    name: \"Spending\",\n    constrIndex: 1,\n    parentType: ScriptPurposeType,\n    genInstanceMembers: (self) => ({\n        ...genCommonInstanceMembers(self),\n        output_id: TxOutputIdType\n    }),\n    genTypeMembers: (self) => ({\n        ...genCommonEnumTypeMembers(self, ScriptPurposeType)\n    })\n});\n\n/**\n * Builtin StakingCredential type\n * @internal\n * @type {DataType}\n */\nexport const StakingCredentialType = new GenericType({\n    name: \"StakingCredential\",\n    genInstanceMembers: (self) => ({\n        ...genCommonInstanceMembers(self)\n    }),\n    genTypeMembers: (self) => ({\n        ...genCommonTypeMembers(self),\n        Hash: StakingCredentialHashType,\n        Ptr: StakingCredentialPtrType,\n        new_hash: new FuncType([StakingHashType], StakingCredentialHashType),\n        new_ptr: new FuncType([IntType, IntType, IntType], StakingCredentialPtrType)\n    })\n});\n\n/**\n * Builtin StakingCredential::Hash\n * @internal\n * @type {EnumMemberType}\n */\nconst StakingCredentialHashType = new GenericEnumMemberType({\n    name: \"Hash\",\n    constrIndex: 0,\n    parentType: StakingCredentialType,\n    genInstanceMembers: (self) => ({\n        ...genCommonInstanceMembers(self),\n        hash: StakingHashType,\n    }),\n    genTypeMembers: (self) => ({\n        ...genCommonEnumTypeMembers(self, StakingCredentialType)\n    })\n});\n\n/**\n * Builtin StakingCredential::Ptr\n * @internal\n * @type {EnumMemberType}\n */\nconst StakingCredentialPtrType = new GenericEnumMemberType({\n    name: \"Ptr\",\n    constrIndex: 1,\n    parentType: StakingCredentialType,\n    genInstanceMembers: (self) => ({\n        ...genCommonInstanceMembers(self)\n    }),\n    genTypeMembers: (self) => ({\n        ...genCommonEnumTypeMembers(self, StakingCredentialType)\n    })\n});\n\n/**\n * Builtin StakingPurpose type (Rewarding or Certifying)\n * @internal\n * @type {DataType}\n */\nexport const StakingPurposeType = new GenericType({\n    name : \"StakingPurpose\",\n    genInstanceMembers: (self) => ({\n        ...genCommonInstanceMembers(self)\n    }),\n    genTypeMembers: (self) => ({\n        ...genCommonTypeMembers(self),\n        Certifying: StakingPurposeCertifyingType,\n        Rewarding: StakingPurposeRewardingType\n    })\n});\n\n/**\n * Builtin ScriptPurpose::Minting\n * @internal\n * @type {EnumMemberType}\n */\nconst StakingPurposeCertifyingType = new GenericEnumMemberType({\n    name: \"Certifying\",\n    constrIndex: 3,\n    parentType: StakingPurposeType,\n    genInstanceMembers: (self) => ({\n        ...genCommonInstanceMembers(self),\n        dcert: DCertType\n    }),\n    genTypeMembers: (self) => ({\n        ...genCommonEnumTypeMembers(self, StakingPurposeType)\n    })\n});\n\n/**\n * Builtin ScriptPurpose::Minting\n * @internal\n * @type {EnumMemberType}\n */\nconst StakingPurposeRewardingType = new GenericEnumMemberType({\n    name: \"Rewarding\",\n    constrIndex: 2,\n    parentType: StakingPurposeType,\n    genInstanceMembers: (self) => ({\n        ...genCommonInstanceMembers(self),\n        credential: StakingCredentialType,\n    }),\n    genTypeMembers: (self) => ({\n        ...genCommonEnumTypeMembers(self, StakingPurposeType)\n    })\n});\n\n/**\n * @internal\n */\nexport const TxBuilderType = new GenericType({\n    name: \"TxBuilder\",\n    path: \"__helios__txbuilder\",\n    genInstanceMembers: (self) => ({\n        ...genCommonInstanceMembers(self),\n        add_output: new FuncType([TxOutputType], self),\n        add_outputs: new FuncType([ListType$(TxOutputType)], self),\n        add_ref_input: new FuncType([TxInputType], self),\n        add_signer: new FuncType([PubKeyHashType], self),\n        finalize: new FuncType([], TxType),\n        pay: (() => {\n            const a = new Parameter(\"a\", `${FTPP}0`, new DefaultTypeClass());\n            return new ParametricFunc([a], new FuncType([AddressType, ValueType, a.ref], self));\n        })(),\n        pay_if_true: (() => {\n            const a = new Parameter(\"a\", `${FTPP}0`, new DefaultTypeClass());\n            return new ParametricFunc([a], new FuncType([BoolType, AddressType, ValueType, a.ref], self)); \n        })(),\n        mint: (() => {\n            const a = new Parameter(\"a\", `${FTPP}0`, new DefaultTypeClass());\n            return new ParametricFunc([a], new FuncType([ValueType, a.ref], self));\n        })(),\n        redeem: (() => {\n            const a = new Parameter(\"a\", `${FTPP}0`, new DefaultTypeClass());\n            return new ParametricFunc([a], new FuncType([TxInputType, a.ref], self));\n        })(),\n        redeem_many: (() => {\n            const a = new Parameter(\"a\", `${FTPP}0`, new DefaultTypeClass());\n            return new ParametricFunc([a], new FuncType([ListType$(TxInputType), a.ref], self));\n        })(),\n        spend: new FuncType([TxInputType], self),\n        spend_many: new FuncType([ListType$(TxInputType)], self)\n    }),\n    genTypeMembers: (self) => ({\n        ...genCommonTypeMembers(self)\n    })\n});\n\n/**\n * Builtin Tx type\n * @internal\n * @type {DataType}\n */\nexport const TxType = new GenericType({\n    name: \"Tx\",\n    jsToUplc: async (obj, helpers) => {\n        return helpers[\"Tx\"](obj)\n        //return obj.toTxData(assertDefined(networkParams));\n    },\n    uplcToJs: async (data, helpers) => {\n        return helpers[\"Tx\"](data);\n        //return TxId.fromUplcData(data.fields[11]);\n    },\n    genTypeDetails: (self) => ({\n        inputType: \"helios.Tx\",\n        outputType: \"helios.Tx\",\n        internalType: {\n            type: \"Tx\"\n        }\n    }),\n    genInstanceMembers: (self) => ({\n        ...genCommonInstanceMembers(self),\n        inputs: ListType$(TxInputType),\n\t\tref_inputs: ListType$(TxInputType),\n        outputs: ListType$(TxOutputType),\n        fee: ValueType,\n        minted: ValueType,\n        dcerts: ListType$(DCertType),\n        withdrawals: MapType$(StakingCredentialType, IntType),\n\t\ttime_range: TimeRangeType,\n\t\tsignatories: ListType$(PubKeyHashType),\n        redeemers: MapType$(ScriptPurposeType, RawDataType),\n        datums: MapType$(DatumHashType, RawDataType),\n        id: TxIdType,\n        find_datum_hash: (() => {\n            const a = new Parameter(\"a\", `${FTPP}0`, new DefaultTypeClass());\n\n            return new ParametricFunc([a], new FuncType([a.ref], DatumHashType))\n        })(),\n        get_datum_data: new FuncType([TxOutputType], RawDataType),\n        outputs_sent_to: new FuncType([PubKeyHashType], ListType$(TxOutputType)),\n        outputs_sent_to_datum: (() => {\n            const a = new Parameter(\"a\", `${FTPP}0`, new DefaultTypeClass());\n\n            return new ParametricFunc([a], new FuncType([PubKeyHashType, a.ref, BoolType], ListType$(TxOutputType)))\n        })(),\n        outputs_locked_by: new FuncType([ValidatorHashType], ListType$(TxOutputType)),\n        outputs_locked_by_datum: (() => {\n            const a = new Parameter(\"a\", `${FTPP}0`, new DefaultTypeClass());\n\n            return new ParametricFunc([a], new FuncType([ValidatorHashType, a.ref, BoolType], ListType$(TxOutputType)))\n        })(),\n        value_sent_to: new FuncType([PubKeyHashType], ValueType),\n        value_sent_to_datum: (() => {\n            const a = new Parameter(\"a\", `${FTPP}0`, new DefaultTypeClass());\n\n            return new ParametricFunc([a], new FuncType([PubKeyHashType, a.ref, BoolType], ValueType));\n        })(),\n        value_locked_by: new FuncType([ValidatorHashType], ValueType),\n        value_locked_by_datum: (() => {\n            const a = new Parameter(\"a\", `${FTPP}0`, new DefaultTypeClass());\n\n            return new ParametricFunc([a], new FuncType([ValidatorHashType, a.ref, BoolType], ValueType));\n        })(),\n        value_paid_to: (() => {\n            const a = new Parameter(\"a\", `${FTPP}0`, new DefaultTypeClass());\n\n            return new ParametricFunc([a], new FuncType([AddressType, a.ref], ValueType));\n        })(),\n        is_signed_by: new FuncType([PubKeyHashType], BoolType)\n    }),\n    genTypeMembers: (self) => ({\n        ...genCommonTypeMembers(self),\n        new: (() => {\n            const a = new Parameter(\"a\", `${FTPP}0`, new DefaultTypeClass());\n            const b = new Parameter(\"b\", `${FTPP}1`, new DefaultTypeClass());\n            \n            return new ParametricFunc([a, b], new FuncType([\n                ListType$(TxInputType), // 0\n                ListType$(TxInputType), // 1\n                ListType$(TxOutputType), // 2\n                ValueType, // 3\n                ValueType, // 4\n                ListType$(DCertType), // 5\n                MapType$(StakingCredentialType, IntType), // 6\n                TimeRangeType, // 7\n                ListType$(PubKeyHashType), // 8\n                MapType$(ScriptPurposeType, a.ref), // 9\n                MapType$(DatumHashType, b.ref), // 10\n                TxIdType // 11\n            ], self))\n        })()\n    })\n});\n\n/**\n * Builtin TxId type\n * @internal\n * @type {DataType}\n */\nexport const TxIdType = new GenericType({\n    name: \"TxId\",\n    offChainType: TxId,\n    genTypeDetails: (self) => ({\n        inputType: `number[] | string | helios.TxId`,\n        outputType: `helios.TxId`,\n        internalType: {\n            type: \"TxId\"\n        }\n    }),\n    jsToUplc: async (obj, helpers) => {\n        return TxId.fromProps(obj)._toUplcData();\n    },\n    uplcToJs: async (data, helpers) => {\n        return TxId.fromUplcData(data);\n    },\n    genInstanceMembers: (self) => ({\n        ...genCommonInstanceMembers(self)\n    }),\n    genTypeMembers: (self) => ({\n        ...genCommonTypeMembers(self),\n        __geq: new FuncType([self, self], BoolType),\n        __gt: new FuncType([self, self], BoolType),\n        __leq: new FuncType([self, self], BoolType),\n        __lt: new FuncType([self, self], BoolType),\n        new: new FuncType([ByteArrayType], self)\n    })\n});\n\n\n/**\n * Builtin TxInput type\n * @internal\n * @type {DataType}\n */\nexport const TxInputType = new GenericType({\n    name: \"TxInput\",\n    genInstanceMembers: (self) => ({\n        ...genCommonInstanceMembers(self),\n        output_id: TxOutputIdType,\n        output: TxOutputType,\n        address: AddressType,\n        value: ValueType,\n        datum: OutputDatumType\n    }),\n    genTypeMembers: (self) => ({\n        ...genCommonTypeMembers(self),\n        new: new FuncType([TxOutputIdType, TxOutputType], self)\n    })\n});\n\n/**\n * Builtin TxOutput type\n * @internal\n * @type {DataType}\n */\nexport const TxOutputType = new GenericType({\n    name: \"TxOutput\",\n    genInstanceMembers: (self) => ({\n        ...genCommonInstanceMembers(self),\n        address: AddressType,\n        value: ValueType,\n\t    datum: OutputDatumType,\n        ref_script_hash: OptionType$(scriptHashType)\n    }),\n    genTypeMembers: (self) => ({\n        ...genCommonTypeMembers(self),\n        new: new FuncType([AddressType, ValueType, OutputDatumType], self)\n    })\n});\n\n/**\n * Builtin TxOutputId type\n * @internal\n * @type {DataType}\n */\nexport const TxOutputIdType = new GenericType({\n    name: \"TxOutputId\",\n    genTypeDetails: (self) => ({\n        inputType: \"{txId: number[] | string | helios.TxId, utxoId: number | bigint} | helios.TxOutputId\",\n        outputType: \"helios.TxOutputId\",\n        internalType: {\n            type: \"TxOutputId\"\n        }\n    }),\n    jsToUplc: async (obj, helpers) => {\n        return TxOutputId.fromProps(obj)._toUplcData();\n    },\n    uplcToJs: async (data, helpers) => {\n        return TxOutputId.fromUplcData(data);\n    },\n    genInstanceMembers: (self) => ({\n        ...genCommonInstanceMembers(self),\n        tx_id: TxIdType,\n        index: IntType\n    }),\n    genTypeMembers: (self) => ({\n        ...genCommonTypeMembers(self),\n        __geq: new FuncType([self, TxOutputIdType], BoolType),\n        __gt: new FuncType([self, TxOutputIdType], BoolType),\n        __leq: new FuncType([self, TxOutputIdType], BoolType),\n        __lt: new FuncType([self, TxOutputIdType], BoolType),\n        new: new FuncType([TxIdType, IntType], TxOutputIdType)\n    })\n});\n\n\n/////////////////////\n// Section 22: Scopes\n/////////////////////\n\n/**\n * @internal\n * @type {{[name: string]: DataType}}\n */\nexport const builtinTypes = {\n\tAddress: AddressType,\n\tAssetClass: AssetClassType,\n\tBool: BoolType,\n\tByteArray: ByteArrayType,\n\tDCert: DCertType,\n\tCredential: CredentialType,\n\tDatumHash: DatumHashType,\n\tData: RawDataType,\n\tDuration: DurationType,\n\tInt: IntType,\n\tMintingPolicyHash: MintingPolicyHashType,\n\tOutputDatum: OutputDatumType,\n\tPubKey: PubKeyType,\n\tPubKeyHash: PubKeyHashType,\n\tReal: RealType,\n\tScriptHash: scriptHashType,\n    ScriptPurpose: ScriptPurposeType,\n    StakingCredential: StakingCredentialType,\n    StakingHash: StakingHashType,\n    StakingPurpose: StakingPurposeType,\n    StakingValidatorHash: StakingValidatorHashType,\n\tString: StringType,\n    Time: TimeType,\n    TimeRange: TimeRangeType,\n    Tx: TxType,\n    TxId: TxIdType,\n    TxInput: TxInputType,\n    TxOutput: TxOutputType,\n    TxOutputId: TxOutputIdType,\n\tValidatorHash: ValidatorHashType,\n    Value: ValueType\n};\n\n/**\n * GlobalScope sits above the top-level scope and contains references to all the builtin Values and Types\n * @internal\n */\nexport class GlobalScope {\n\t/**\n\t * @type {[Word, EvalEntity][]}\n\t */\n\t#values;\n\n\tconstructor() {\n\t\tthis.#values = [];\n\t}\n\n\t/**\n\t * Checks if scope contains a name\n\t * @param {Word} name \n\t * @returns {boolean}\n\t */\n\thas(name) {\n\t\tfor (let pair of this.#values) {\n\t\t\tif (pair[0].toString() == name.toString()) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * Sets a global name, doesn't check for uniqueness\n\t * Called when initializing GlobalScope\n\t * @param {string | Word} name\n\t * @param {EvalEntity} value\n\t */\n\tset(name, value) {\n\t\t/** @type {Word} */\n\t\tlet nameWord = !(name instanceof Word) ? Word.new(name) : name;\n\n\t\tthis.#values.push([nameWord, value]);\n\t}\n\n\t/**\n\t * Gets a named value from the scope.\n\t * Throws an error if not found.\n\t * @param {Word} name \n\t * @returns {null | EvalEntity}\n\t */\n\tget(name) {\n\t\tfor (let pair of this.#values) {\n\t\t\tif (pair[0].toString() == name.toString()) {\n\t\t\t\treturn pair[1];\n\t\t\t}\n\t\t}\n\n\t\tname.referenceError(`'${name.toString()}' undefined`);\n\t\treturn null;\n\t}\n\n\t/**\n\t * @returns {boolean}\n\t */\n\tisStrict() {\n\t\tthrow new Error(\"should've been returned be TopScope\");\n\t}\n\n\t/**\n\t * Initialize the GlobalScope with all the builtins\n\t * @param {ScriptTypes} scriptTypes - types of all the scripts in a contract/ensemble\n\t * @returns {GlobalScope}\n\t */\n\tstatic new(scriptTypes = {}) {\n\t\tlet scope = new GlobalScope();\n\n\t\t// List (aka '[]'), Option, and Map types are accessed through special expressions\n\n\t\t// fill the global scope with builtin types\n\t\tfor (let name in builtinTypes) {\n\t\t\tscope.set(name, builtinTypes[name])\n\t\t}\n\n\t\tscope.set(\"Any\",         \t\t  new AnyTypeClass());\n\t\tscope.set(\"Valuable\",             new ValuableTypeClass());\n\n\t\tif (Object.keys(scriptTypes).length > 0) {\n\t\t\tscope.set(\"Scripts\",     new ScriptsType(scriptTypes));\n\t\t}\n\n        scope.set(\"ScriptContext\",    new ScriptContextType());\n\t\tscope.set(\"ContractContext\",  new ContractContextType());\n\t\tscope.set(\"TxBuilder\",        TxBuilderType);\n\t\tscope.set(\"Wallet\",           WalletType);\n\t\tscope.set(\"Network\",          NetworkType);\n\n        // builtin functions\n        scope.set(\"assert\",               AssertFunc);\n\t\tscope.set(\"error\",                ErrorFunc);\n        scope.set(\"print\",                PrintFunc);\n\n\t\treturn scope;\n\t}\n\n\t/**\n\t * @param {(name: string, type: Type) => void} callback \n\t */\n\tloopTypes(callback) {\n\t\tfor (let [k, v] of this.#values) {\n\t\t\tif (v.asType) {\n\t\t\t\tcallback(k.value, v.asType);\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * User scope\n * @internal\n * @implements {EvalEntity}\n */\nexport class Scope extends Common {\n\t/** @type {GlobalScope | Scope} */\n\t#parent;\n\n\t/** \n\t * TopScope can elverage the #values to store ModuleScopes\n\t * @type {[Word, (EvalEntity | Scope), boolean][]} \n\t */\n\t#values;\n\n\t/**\n\t * @type {boolean}\n\t */\n\t#allowShadowing;\n\n\t/**\n\t * @param {GlobalScope | Scope} parent \n\t * @param {boolean} allowShadowing\n\t */\n\tconstructor(parent, allowShadowing = false) {\n\t\tsuper()\n\t\tthis.#parent = parent;\n\t\tthis.#values = []; // list of pairs\n\t\tthis.#allowShadowing = allowShadowing;\n\t}\n\n\t/**\n\t * @type {boolean}\n\t */\n\tget allowShadowing() {\n\t\treturn this.#allowShadowing;\n\t}\n\n\t/**\n\t * Used by top-scope to loop over all the statements\n\t */\n\tget values() {\n\t\treturn this.#values.slice();\n\t}\n\n\t/**\n\t * Checks if scope contains a name\n\t * @param {Word} name \n\t * @returns {boolean}\n\t */\n\thas(name) {\n\t\tfor (let pair of this.#values) {\n\t\t\tif (pair[0].toString() == name.toString()) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\tif (this.#parent !== null) {\n\t\t\treturn this.#parent.has(name);\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\t/**\n\t * Sets a named value. Throws an error if not unique\n\t * @param {Word} name \n\t * @param {EvalEntity | Scope} value \n\t */\n\tsetInternal(name, value, allowShadowing = false) {\n\t\tif (value instanceof Scope) {\n\t\t\tassert(name.value.startsWith(\"__scope__\"));\n\t\t}\n\n\t\tif (this.has(name)) {\n\t\t\tconst prevEntity = this.get(name, true);\n\n\t\t\tif (allowShadowing && value.asTyped && prevEntity && !(prevEntity instanceof Scope) && prevEntity.asTyped) {\n\t\t\t\tif (!(prevEntity.asTyped.type.isBaseOf(value.asTyped.type) && value.asTyped.type.isBaseOf(prevEntity.asTyped.type))) {\n\t\t\t\t\tthrow name.syntaxError(`'${name.toString()}' already defined`);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tname.syntaxError(`'${name.toString()}' already defined`);\n\t\t\t}\n\t\t}\n\n\t\tthis.#values.push([name, value, false]);\n\t}\n\n\t/**\n\t * Sets a named value. Throws an error if not unique\n\t * @param {Word} name \n\t * @param {EvalEntity | Scope} value \n\t */\n\tset(name, value) {\n\t\tthis.setInternal(name, value, this.#allowShadowing);\n\t}\n\n\t/**\n\t * @param {Word} name \n\t */\n\tremove(name) {\n\t\tthis.#values = this.#values.filter(([n, _]) => n.value != name.value);\n\t}\n\n\t/**\n\t * @param {Word} name \n\t * @returns {null | Scope}\n\t */\n\tgetScope(name) {\n\t\tassert(!name.value.startsWith(\"__scope__\"));\n\n\t\tconst entity = this.get(new Word(name.site, `__scope__${name.value}`));\n\n\t\tif (entity instanceof Scope) {\n\t\t\treturn entity;\n\t\t} else if (!entity) {\n\t\t\tname.typeError(`expected Scope`);\n\t\t\treturn null;\n\t\t} else {\n\t\t\tname.typeError(`expected Scope, got ${entity.toString()}`);\n\t\t\treturn null;\n\t\t}\n\t}\n\n\t/**\n\t * Gets a named value from the scope. Throws an error if not found\n\t * @param {Word} name \n\t * @param {boolean} dryRun - if false -> don't set used flag\n\t * @returns {null | EvalEntity | Scope}\n\t */\n\tget(name, dryRun = false) {\n\t\tif (!(name instanceof Word)) {\n\t\t\tname = Word.new(name);\n\t\t}\n\n\t\tfor (let i = this.#values.length - 1; i >= 0; i--) {\n\t\t\tconst [key, entity, _] = this.#values[i];\n\n\t\t\tif (key.toString() == name.toString()) {\n\t\t\t\tif (!dryRun) {\n\t\t\t\t\tthis.#values[i][2] = true;\n\t\t\t\t}\n\t\t\t\treturn entity;\n\t\t\t}\n\t\t}\n\n\t\tif (this.#parent !== null) {\n\t\t\treturn this.#parent.get(name, dryRun);\n\t\t} else {\n\t\t\tname.referenceError(`'${name.toString()}' undefined`);\n\t\t\treturn null;\n\t\t}\n\t}\n\n\t/**\n\t * @returns {boolean}\n\t */\n\tisStrict() {\n\t\treturn this.#parent.isStrict();\n\t}\n\n\t/**\n\t * Asserts that all named values are user.\n\t * Throws an error if some are unused.\n\t * Check is only run if we are in strict mode\n\t * @param {boolean} onlyIfStrict\n\t */\n\tassertAllUsed(onlyIfStrict = true) {\n\t\tif (!onlyIfStrict || this.isStrict()) {\n\t\t\tfor (let [name, entity, used] of this.#values) {\n\t\t\t\tif (!(entity instanceof Scope) && !used) {\n\t\t\t\t\tname.referenceError(`'${name.toString()}' unused`);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @param {Word} name \n\t * @returns {boolean}\n\t */\n\tisUsed(name) {\n\t\tfor (let [checkName, entity, used] of this.#values) {\n\t\t\tif (name.value == checkName.value && !(entity instanceof Scope)) {\n\t\t\t\treturn used;\n\t\t\t}\n\t\t}\n\n\t\tthrow new Error(`${name.value} not found`);\n\t}\n\n\tdump() {\n\t\tconsole.log(\"DUMPING SCOPE\", this.#values.length);\n\t\tthis.#values.forEach(([w, v]) => {\n\t\t\tconsole.log(w.value, v);\n\t\t});\n\t}\n\n\t/**\n\t * @param {(name: string, type: Type) => void} callback \n\t */\n\tloopTypes(callback) {\n\t\tthis.#parent.loopTypes(callback);\n\n\t\tfor (let [k, v] of this.#values) {\n\t\t\tif (v.asType) {\n\t\t\t\tcallback(k.value, v.asType);\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * TopScope is a special scope that can contain UserTypes\n * @internal\n */\nexport class TopScope extends Scope {\n\t#strict;\n\n\t/**\n\t * @param {GlobalScope} parent \n\t * @param {boolean} strict\n\t */\n\tconstructor(parent, strict = true) {\n\t\tsuper(parent);\n\t\tthis.#strict = strict;\n\t}\n\n\t/**\n\t * Prepends \"__scope__\" to name before actually setting scope\n\t * @param {Word} name \n\t * @param {Scope} value \n\t */\n\tsetScope(name, value) {\n\t\tassert(!name.value.startsWith(\"__scope__\"));\n\n\t\tthis.set(new Word(name.site, `__scope__${name.value}`), value);\n\t}\n\n\t/**\n\t * @param {Word} name \n\t * @param {EvalEntity | Scope} value \n\t */\n\tset(name, value) {\n\t\tsuper.setInternal(name, value, false);\n\t}\n\n\t/**\n\t * @param {boolean} s \n\t */\n\tsetStrict(s) {\n\t\tthis.#strict = s;\n\t}\n\n\t/**\n\t * @returns {boolean}\n\t */\n\tisStrict() {\n\t\treturn this.#strict;\n\t}\n\n\t/**\n\t * @param {Word} name \n\t * @returns {ModuleScope}\n\t */\n\tgetModuleScope(name) {\n\t\tassert(!name.value.startsWith(\"__scope__\"));\n\n\t\tconst maybeModuleScope = this.get(new Word(name.site, `__scope__${name.value}`));\n\n\t\tif (maybeModuleScope instanceof ModuleScope) {\n\t\t\treturn maybeModuleScope;\n\t\t} else {\n\t\t\tthrow new Error(\"expected ModuleScope\");\n\t\t}\n\t}\n}\n\n/**\n * @internal\n */\nexport class ModuleScope extends Scope {\n}\n\n\n/////////////////////////////\n// Section 23: IR definitions\n/////////////////////////////\n/**\n * For collecting test coverage statistics\n * @type {null | ((name: string, count: number) => void)}\n */\nvar onNotifyRawUsage = null;\n\n/**\n * Set the statistics collector (used by the test-suite)\n * @internal\n * @param {(name: string, count: number) => void} callback \n */\nexport function setRawUsageNotifier(callback) {\n\tonNotifyRawUsage = callback;\n}\n\nconst RE_BUILTIN = new RegExp(\"(?<![@[])__helios[a-zA-Z0-9_@[\\\\]]*\", \"g\");\n\n/**\n * Wrapper for a builtin function (written in IR)\n * @internal\n */\nclass RawFunc {\n\t/**\n\t * @type {string}\n\t */\n\t#name;\n\n\t/**\n\t * @type {((ttp: string[], ftp: string[]) => string)}\n\t */\n\t#definition;\n\n\t/**\n\t * Construct a RawFunc, and immediately scan the definition for dependencies\n\t * @param {string} name \n\t * @param {string | ((ttp: string[], ftp: string[]) => string)} definition\n\t */\n\tconstructor(name, definition) {\n\t\tthis.#name = name;\n\t\tassert(definition != undefined);\n\t\tthis.#definition = typeof definition == \"string\" ? \n\t\t\t(ttp, ftp) => {\n\t\t\t\tif (IRParametricName.matches(this.#name)) {\n\t\t\t\t\t// TODO: make sure definition is always a function for parametric names\n\t\t\t\t\tlet pName = IRParametricName.parse(this.#name);\n\t\t\t\t\tpName = new IRParametricName(pName.base, ttp, pName.fn, ftp);\n\t\t\t\t\tconst [def, _] = pName.replaceTemplateNames(new IR(definition)).generateSource();\n\t\t\t\t\treturn def;\n\t\t\t\t} else {\n\t\t\t\t\treturn definition;\n\t\t\t\t}\n\t\t\t} : \n\t\t\tdefinition;\t\n\t}\n\n\t/**\n\t * @type {string}\n\t */\n\tget name() {\n\t\treturn this.#name;\n\t}\n\n\t/**\n\t * @param {string[]} ttp\n\t * @param {string[]} ftp\n\t * @returns {IR}\n\t */\n\ttoIR(ttp = [], ftp = []) {\n\t\treturn new IR(replaceTabs(this.#definition(ttp, ftp)));\n\t}\n\n\t/**\n\t * Loads 'this.#dependecies' (if not already loaded), then load 'this'\n\t * @param {Map<string, RawFunc>} db \n\t * @param {IRDefinitions} dst \n\t * @param {string[]} ttp\n\t * @param {string[]} ftp\n\t * @returns {void}\n\t */\n\tload(db, dst, ttp = [], ftp = []) {\n\t\tif (onNotifyRawUsage !== null) {\n\t\t\tonNotifyRawUsage(this.#name, 1);\n\t\t}\n\n\t\tlet name = this.#name;\n\t\tif (ttp.length > 0 || ftp.length > 0){\n\t\t\tlet pName = IRParametricName.parse(name);\n\t\t\tpName = new IRParametricName(pName.base, ttp, pName.fn, ftp);\n\t\t\tname = pName.toString()\n\t\t}\n\n\t\tif (dst.has(name)) {\n\t\t\treturn;\n\t\t} else {\n\t\t\tconst ir = this.toIR(ttp, ftp);\n\n\t\t\tconst [def, _] = ir.generateSource();\n\t\t\tconst deps = new Set();\n\t\t\tdef.match(RE_BUILTIN)?.forEach(match => deps.add(match));\n\n\t\t\tfor (let dep of deps) {\n\t\t\t\tif (!db.has(dep)) {\n\t\t\t\t\tif (IRParametricName.matches(dep)) {\n\t\t\t\t\t\tconst pName = IRParametricName.parse(dep);\n\t\t\t\t\t\tconst genericName = pName.toTemplate(true);\n\n\t\t\t\t\t\tlet fn = db.get(genericName);\n\n\t\t\t\t\t\tif (fn) {\n\t\t\t\t\t\t\tfn.load(db, dst, pName.ttp, pName.ftp);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// TODO: make sure all templated defs use the functional approach instead of the replacement approach\n\t\t\t\t\t\t\tfn = db.get(pName.toTemplate(false));\n\n\t\t\t\t\t\t\tif (fn) {\n\t\t\t\t\t\t\t\tconst ir = pName.replaceTemplateNames(fn.toIR());\n\t\t\t\t\t\t\t\tfn = new RawFunc(dep, ir.toString());\n\t\t\t\t\t\t\t\tfn.load(db, dst);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tthrow new Error(`InternalError: dependency ${dep} not found`);\t\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthrow new Error(`InternalError: dependency ${dep} not found`);\n\t\t\t\t\t}\t\t\t\t\n\t\t\t\t} else {\n\t\t\t\t\tassertDefined(db.get(dep)).load(db, dst);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tdst.set(name, ir);\n\t\t}\n\t}\n}\n\n/**\n * Initializes the db containing all the builtin functions\n * @param {boolean} simplify\n * @param {boolean} isTestnet // needed for Address.to_bytes() and Address.to_hex()\n * @returns {Map<string, RawFunc>}\n */\n// only need to wrap these source in IR right at the very end\nfunction makeRawFunctions(simplify, isTestnet = config.IS_TESTNET) {\n\t/** @type {Map<string, RawFunc>} */\n\tlet db = new Map();\n\n\t// local utility functions\n\n\t/**\n\t * @param {RawFunc} fn \n\t */\n\tfunction add(fn) {\n\t\tif (db.has(fn.name)) {\n\t\t\tthrow new Error(`builtin ${fn.name} duplicate`);\n\t\t}\n\t\tdb.set(fn.name, fn);\n\t}\n\n\t/**\n\t * @param {string} ns \n\t */\n\tfunction addNeqFunc(ns) {\n\t\tadd(new RawFunc(`${ns}____neq`, \n\t\t`(self, other) -> {\n\t\t\t__helios__bool____not(${ns}____eq(self, other))\n\t\t}`));\n\t}\n\n\t/**\n\t * @param {string} ns \n\t */\n\tfunction addDataLikeEqFunc(ns) {\n\t\tadd(new RawFunc(`${ns}____eq`, \n\t\t`(self, other) -> {\n\t\t\t__core__equalsData(${ns}____to_data(self), ${ns}____to_data(other))\n\t\t}`));\n\t}\n\n\t/**\n\t * @param {string} ns \n\t */\n\tfunction addSerializeFunc(ns) {\n\t\tadd(new RawFunc(`${ns}__serialize`, \n\t\t`(self) -> {\n\t\t\t() -> {\n\t\t\t\t__core__serialiseData(${ns}____to_data(self))\n\t\t\t}\n\t\t}`));\n\t}\n\n\t/**\n\t * @param {string} ns \n\t */\n\tfunction addIntLikeFuncs(ns) {\n\t\tadd(new RawFunc(`${ns}____eq`, \"__helios__int____eq\"));\n\t\tadd(new RawFunc(`${ns}____neq`, \"__helios__int____neq\"));\n\t\tadd(new RawFunc(`${ns}__serialize`, \"__helios__int__serialize\"));\n\t\tadd(new RawFunc(`${ns}__from_data`, \"__helios__int__from_data\"));\n\t\tadd(new RawFunc(`${ns}__from_data_safe`, \"__helios__int__from_data_safe\"));\n\t\tadd(new RawFunc(`${ns}____to_data`, \"__helios__int____to_data\"));\n\t}\n\n\t/**\n\t * @param {string} ns \n\t */\n\tfunction addByteArrayLikeFuncs(ns) {\n\t\tadd(new RawFunc(`${ns}____eq`, \"__helios__bytearray____eq\"));\n\t\tadd(new RawFunc(`${ns}____neq`, \"__helios__bytearray____neq\"));\n\t\tadd(new RawFunc(`${ns}__serialize`, \"__helios__bytearray__serialize\"));\n\t\tadd(new RawFunc(`${ns}__from_data`, \"__helios__bytearray__from_data\"));\n\t\tadd(new RawFunc(`${ns}__from_data_safe`, \"__helios__bytearray__from_data_safe\"));\n\t\tadd(new RawFunc(`${ns}____to_data`, \"__helios__bytearray____to_data\"));\n\t\tadd(new RawFunc(`${ns}____lt`, \"__helios__bytearray____lt\"));\n\t\tadd(new RawFunc(`${ns}____leq`, \"__helios__bytearray____leq\"));\n\t\tadd(new RawFunc(`${ns}____gt`, \"__helios__bytearray____gt\"));\n\t\tadd(new RawFunc(`${ns}____geq`, \"__helios__bytearray____geq\"));\n\t\tadd(new RawFunc(`${ns}__new`, `__helios__common__identity`));\n\t\tadd(new RawFunc(`${ns}__show`, \"__helios__bytearray__show\"));\n\t}\n\n\t/**\n\t * Adds basic auto members to a fully named type\n\t * TODO: many types that are currently treated as Data could in fact be treated as something slighly better (eg. lists or pairs)\n\t * @param {string} ns \n\t * @param {{\n\t *   eq?: string, \n\t *   neq?: string, \n\t *   serialize?: string, \n\t *   from_data?: string, \n\t *   from_data_safe?: string, \n\t *   to_data?: string\n\t * }} custom\n\t */\n\tfunction addDataFuncs(ns, custom = {}) {\n\t\tadd(new RawFunc(`${ns}____eq`, custom?.eq ?? \"__helios__common____eq\"));\n\t\tadd(new RawFunc(`${ns}____neq`, custom?.neq ?? \"__helios__common____neq\"));\n\t\tadd(new RawFunc(`${ns}__serialize`, custom?.serialize ?? \"__helios__common__serialize\"));\n\t\tadd(new RawFunc(`${ns}__from_data`, custom?.from_data ?? \"__helios__common__identity\"));\n\t\tadd(new RawFunc(`${ns}__from_data_safe`, custom?.from_data_safe  ?? `(data) -> {__helios__option__SOME_FUNC(data)}`));\n\t\tadd(new RawFunc(`${ns}____to_data`, custom?.to_data ?? \"__helios__common__identity\"));\n\t}\n\n\t/**\n\t * Adds basic auto members to a fully named enum type\n\t * @param {string} ns \n\t * @param {number} constrIndex\n\t */\n\tfunction addEnumDataFuncs(ns, constrIndex) {\n\t\tadd(new RawFunc(`${ns}____eq`, \"__helios__common____eq\"));\n\t\tadd(new RawFunc(`${ns}____neq`, \"__helios__common____neq\"));\n\t\tadd(new RawFunc(`${ns}__serialize`, \"__helios__common__serialize\"));\n\t\tadd(new RawFunc(`${ns}____to_data`, \"__helios__common__identity\"));\n\t\tadd(new RawFunc(`${ns}__from_data`, \n\t\t`(data) -> {\n\t\t\t__helios__common__assert_constr_index(data, ${constrIndex})\n\t\t}`));\n\t\tadd(new RawFunc(`${ns}__from_data_safe`,\n\t\t`(data) -> {\n\t\t\t__core__chooseData(\n\t\t\t\tdata,\n\t\t\t\t() -> {\n\t\t\t\t\t__core__ifThenElse(\n\t\t\t\t\t\t__core__equalsInteger(${constrIndex}, __core__fstPair(__core__unConstrData__safe(data))),\n\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t__helios__option__SOME_FUNC(data)\n\t\t\t\t\t\t},\n\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t__helios__option__NONE_FUNC\n\t\t\t\t\t\t}\n\t\t\t\t\t)()\n\t\t\t\t},\n\t\t\t\t() -> {__helios__option__NONE_FUNC},\n\t\t\t\t() -> {__helios__option__NONE_FUNC},\n\t\t\t\t() -> {__helios__option__NONE_FUNC},\n\t\t\t\t() -> {__helios__option__NONE_FUNC}\n\t\t\t)()\n\t\t}`));\n\t}\n\n\t/**\n\t * Generates the IR needed to unwrap a Plutus-core constrData\n\t * @param {string} dataExpr\n\t * @param {number} iConstr \n\t * @param {number} iField \n\t * @param {string} errorExpr \n\t * @returns {string}\n\t */\n\tfunction unData(dataExpr, iConstr, iField, errorExpr = \"error(\\\"unexpected constructor index\\\")\") {\n\t\tlet inner = \"__core__sndPair(pair)\";\n\t\tfor (let i = 0; i < iField; i++) {\n\t\t\tinner = `__core__tailList(${inner})`;\n\t\t}\n\n\t\t// deferred evaluation of ifThenElse branches\n\t\treturn `(pair) -> {__core__ifThenElse(__core__equalsInteger(__core__fstPair(pair), ${iConstr}), () -> {__core__headList(${inner})}, () -> {${errorExpr}})()}(__core__unConstrData(${dataExpr}))`;\n\t}\n\n\t/**\n\t * Generates verbose IR for unwrapping a Plutus-core constrData.\n\t * If config.DEBUG === false then returns IR without print statement\n\t * @param {string} dataExpr\n\t * @param {string} constrName\n\t * @param {number} iConstr\n\t * @param {number} iField\n\t * @returns {string}\n\t */\n\tfunction unDataVerbose(dataExpr, constrName, iConstr, iField) {\n\t\tif (!config.DEBUG) {\n\t\t\treturn unData(dataExpr, iConstr, iField);\n\t\t} else {\n\t\t\treturn unData(dataExpr, iConstr, iField, `__helios__error(__core__appendString(\"bad constr for ${constrName}, want ${iConstr.toString()} but got \", __helios__int__show(__core__fstPair(pair))()))`)\n\t\t}\n\t}\n\n\t/**\n\t * Generates IR for constructing a list.\n\t * By default the result is kept as list, and not converted to data\n\t * @param {string[]} args \n\t * @param {boolean} toData \n\t * @returns \n\t */\n\tfunction makeList(args, toData = false) {\n\t\tlet n = args.length;\n\t\tlet inner = \"__core__mkNilData(())\";\n\n\t\tfor (let i = n - 1; i >= 0; i--) {\n\t\t\tinner = `__core__mkCons(${args[i]}, ${inner})`;\n\t\t}\n\n\t\tif (toData) {\n\t\t\tinner = `__core__listData(${inner})`\n\t\t}\n\n\t\treturn inner;\n\t}\n\n\n\t// Common builtins\n\tadd(new RawFunc(\"__helios__common__assert_constr_index\",\n\t`(data, i) -> {\n\t\t__core__ifThenElse(\n\t\t\t__core__equalsInteger(__core__fstPair(__core__unConstrData(data)), i),\n\t\t\t() -> {data},\n\t\t\t() -> {__helios__error(\"unexpected constructor index\")}\n\t\t)()\n\t}`));\n\tadd(new RawFunc(\"__helios__common__identity\",\n\t`(self) -> {self}`));\n\tadd(new RawFunc(\"__helios__common____eq\", \"__core__equalsData\"));\n\tadd(new RawFunc(\"__helios__common____neq\",\n\t`(a, b) -> {\n\t\t__helios__bool____not(__core__equalsData(a, b))\n\t}`));\n\tadd(new RawFunc(\"__helios__common__serialize\",\n\t`(self) -> {\n\t\t() -> {\n\t\t\t__core__serialiseData(self)\n\t\t}\n\t}`));\n\tadd(new RawFunc(\"__helios__common__any\",\n\t`(self, fn) -> {\n\t\t(recurse) -> {\n\t\t\trecurse(recurse, self, fn)\n\t\t}(\n\t\t\t(recurse, self, fn) -> {\n\t\t\t\t__core__chooseList(\n\t\t\t\t\tself, \n\t\t\t\t\t() -> {false}, \n\t\t\t\t\t() -> {\n\t\t\t\t\t\t__core__ifThenElse(\n\t\t\t\t\t\t\tfn(__core__headList__safe(self)),\n\t\t\t\t\t\t\t() -> {true}, \n\t\t\t\t\t\t\t() -> {recurse(recurse, __core__tailList__safe(self), fn)}\n\t\t\t\t\t\t)()\n\t\t\t\t\t}\n\t\t\t\t)()\n\t\t\t}\n\t\t)\n\t}`));\n\tadd(new RawFunc(\"__helios__common__all\", \n\t`(self, fn) -> {\n\t\t(recurse) -> {\n\t\t\trecurse(recurse, self, fn)\n\t\t}(\n\t\t\t(recurse, self, fn) -> {\n\t\t\t\t__core__chooseList(\n\t\t\t\t\tself,\n\t\t\t\t\t() -> {true},\n\t\t\t\t\t() -> {\n\t\t\t\t\t\t__core__ifThenElse(\n\t\t\t\t\t\t\tfn(__core__headList__safe(self)),\n\t\t\t\t\t\t\t() -> {recurse(recurse, __core__tailList__safe(self), fn)},\n\t\t\t\t\t\t\t() -> {false}\n\t\t\t\t\t\t)()\n\t\t\t\t\t}\n\t\t\t\t)()\n\t\t\t}\n\t\t)\n\t}`));\n\tadd(new RawFunc(\"__helios__common__map\",\n\t`(self, fn, init) -> {\n\t\t(recurse) -> {\n\t\t\trecurse(recurse, self, init)\n\t\t}(\n\t\t\t(recurse, rem, lst) -> {\n\t\t\t\t__core__chooseList(\n\t\t\t\t\trem,\n\t\t\t\t\t() -> {lst},\n\t\t\t\t\t() -> {\n\t\t\t\t\t\t__core__mkCons(\n\t\t\t\t\t\t\tfn(__core__headList__safe(rem)), \n\t\t\t\t\t\t\trecurse(recurse, __core__tailList__safe(rem), lst)\n\t\t\t\t\t\t)\n\t\t\t\t\t}\n\t\t\t\t)()\n\t\t\t}\n\t\t)\n\t}`));\n\tadd(new RawFunc(\"__helios__common__filter\", \n\t`(self, fn, nil) -> {\n\t\t(recurse) -> {\n\t\t\trecurse(recurse, self, fn)\n\t\t}(\n\t\t\t(recurse, self, fn) -> {\n\t\t\t\t__core__chooseList(\n\t\t\t\t\tself, \n\t\t\t\t\t() -> {nil}, \n\t\t\t\t\t() -> {\n\t\t\t\t\t\t(head) -> {\n\t\t\t\t\t\t\t__core__ifThenElse(\n\t\t\t\t\t\t\t\tfn(head),\n\t\t\t\t\t\t\t\t() -> {__core__mkCons(head, recurse(recurse, __core__tailList__safe(self), fn))}, \n\t\t\t\t\t\t\t\t() -> {recurse(recurse, __core__tailList__safe(self), fn)}\n\t\t\t\t\t\t\t)()\n\t\t\t\t\t\t}(__core__headList__safe(self))\n\t\t\t\t\t}\n\t\t\t\t)()\n\t\t\t}\n\t\t)\n\t}`));\n\tadd(new RawFunc(\"__helios__common__filter_list\", \n\t`(self, fn) -> {\n\t\t__helios__common__filter(self, fn, __helios__common__list_0)\n\t}`));\n\tadd(new RawFunc(\"__helios__common__filter_map\",\n\t`(self, fn) -> {\n\t\t__helios__common__filter(self, fn, __core__mkNilPairData(()))\n\t}`));\n\tadd(new RawFunc(\"__helios__common__find\",\n\t`(self, fn) -> {\n\t\t(recurse) -> {\n\t\t\trecurse(recurse, self, fn)\n\t\t}(\n\t\t\t(recurse, self, fn) -> {\n\t\t\t\t__core__chooseList(\n\t\t\t\t\tself, \n\t\t\t\t\t() -> {__helios__error(\"not found\")}, \n\t\t\t\t\t() -> {\n\t\t\t\t\t\t(head) -> {\n\t\t\t\t\t\t\t__core__ifThenElse(\n\t\t\t\t\t\t\t\tfn(head), \n\t\t\t\t\t\t\t\t() -> {head}, \n\t\t\t\t\t\t\t\t() -> {recurse(recurse, __core__tailList__safe(self), fn)}\n\t\t\t\t\t\t\t)()\n\t\t\t\t\t\t}(__core__headList__safe(self))\n\t\t\t\t\t}\n\t\t\t\t)()\n\t\t\t}\n\t\t)\n\t}`));\n\tadd(new RawFunc(\"__helios__common__find_safe\",\n\t`(self, fn, callback) -> {\n\t\t(recurse) -> {\n\t\t\trecurse(recurse, self, fn)\n\t\t}(\n\t\t\t(recurse, self, fn) -> {\n\t\t\t\t__core__chooseList(\n\t\t\t\t\tself, \n\t\t\t\t\t() -> {__core__constrData(1, __helios__common__list_0)}, \n\t\t\t\t\t() -> {\n\t\t\t\t\t\t(head) -> {\n\t\t\t\t\t\t\t__core__ifThenElse(\n\t\t\t\t\t\t\t\tfn(head), \n\t\t\t\t\t\t\t\t() -> {__core__constrData(0, __helios__common__list_1(callback(head)))}, \n\t\t\t\t\t\t\t\t() -> {recurse(recurse, __core__tailList__safe(self), fn)}\n\t\t\t\t\t\t\t)()\n\t\t\t\t\t\t}(__core__headList__safe(self))\n\t\t\t\t\t}\n\t\t\t\t)()\n\t\t\t}\n\t\t)\n\t}`));\n\tadd(new RawFunc(\"__helios__common__fold\",\n\t`(self, fn, z) -> {\n\t\t(recurse) -> {\n\t\t\trecurse(recurse, self, z)\n\t\t}(\n\t\t\t(recurse, self, z) -> {\n\t\t\t\t__core__chooseList(\n\t\t\t\t\tself, \n\t\t\t\t\t() -> {z}, \n\t\t\t\t\t() -> {recurse(recurse, __core__tailList__safe(self), fn(z, __core__headList__safe(self)))}\n\t\t\t\t)()\n\t\t\t}\n\t\t)\n\t}`));\n\tadd(new RawFunc(\"__helios__common__fold_lazy\",\n\t`(self, fn, z) -> {\n\t\t(recurse) -> {\n\t\t\trecurse(recurse, self)\n\t\t}(\n\t\t\t(recurse, self) -> {\n\t\t\t\t__core__chooseList(\n\t\t\t\t\tself, \n\t\t\t\t\t() -> {z}, \n\t\t\t\t\t() -> {fn(__core__headList__safe(self), () -> {recurse(recurse, __core__tailList__safe(self))})}\n\t\t\t\t)()\n\t\t\t}\n\t\t)\n\t}`));\n\tadd(new RawFunc(\"__helios__common__insert_in_sorted\",\n\t`(x, lst, comp) -> {\n\t\t(recurse) -> {\n\t\t\trecurse(recurse, lst)\n\t\t}(\n\t\t\t(recurse, lst) -> {\n\t\t\t\t__core__chooseList(\n\t\t\t\t\tlst,\n\t\t\t\t\t() -> {__core__mkCons(x, lst)},\n\t\t\t\t\t() -> {\n\t\t\t\t\t\t(head) -> {\n\t\t\t\t\t\t\t__core__ifThenElse(\n\t\t\t\t\t\t\t\tcomp(x, head),\n\t\t\t\t\t\t\t\t() -> {__core__mkCons(x, lst)},\n\t\t\t\t\t\t\t\t() -> {__core__mkCons(head, recurse(recurse, __core__tailList__safe(lst)))}\n\t\t\t\t\t\t\t)()\n\t\t\t\t\t\t}(__core__headList__safe(lst))\n\t\t\t\t\t}\n\t\t\t\t)()\n\t\t\t}\n\t\t)\n\t}`));\n\tadd(new RawFunc(\"__helios__common__sort\", \n\t`(lst, comp) -> {\n\t\t(recurse) -> {\n\t\t\trecurse(recurse, lst)\n\t\t}(\n\t\t\t(recurse, lst) -> {\n\t\t\t\t__core__chooseList(\n\t\t\t\t\tlst,\n\t\t\t\t\t() -> {lst},\n\t\t\t\t\t() -> {\n\t\t\t\t\t\t(head, tail) -> {\n\t\t\t\t\t\t\t__helios__common__insert_in_sorted(head, tail, comp)\n\t\t\t\t\t\t}(__core__headList__safe(lst), recurse(recurse, __core__tailList__safe(lst)))\n\t\t\t\t\t}\n\t\t\t\t)()\n\t\t\t}\n\t\t)\n\t}`));\n\tadd(new RawFunc(\"__helios__common__map_get\",\n\t`(self, key, fnFound, fnNotFound) -> {\n\t\t(recurse) -> {\n\t\t\trecurse(recurse, self, key)\n\t\t}(\n\t\t\t(recurse, self, key) -> {\n\t\t\t\t__core__chooseList(\n\t\t\t\t\tself, \n\t\t\t\t\tfnNotFound, \n\t\t\t\t\t() -> {\n\t\t\t\t\t\t(head) -> {\n\t\t\t\t\t\t\t__core__ifThenElse(\n\t\t\t\t\t\t\t\t__core__equalsData(key, __core__fstPair(head)), \n\t\t\t\t\t\t\t\t() -> {fnFound(__core__sndPair(head))}, \n\t\t\t\t\t\t\t\t() -> {recurse(recurse, __core__tailList__safe(self), key)}\n\t\t\t\t\t\t\t)()\n\t\t\t\t\t\t}(__core__headList__safe(self))\n\t\t\t\t\t}\n\t\t\t\t)()\n\t\t\t}\n\t\t)\n\t}`));\n\tadd(new RawFunc(\"__helios__common__is_in_bytearray_list\",\n\t`(lst, key) -> {\n\t\t__helios__common__any(lst, (item) -> {__core__equalsData(item, key)})\n\t}`));\n\tadd(new RawFunc(\"__helios__common__length\", \n\t`(lst) -> {\n\t\t(recurse) -> {\n\t\t\trecurse(recurse, lst)\n\t\t}(\n\t\t\t(recurse, lst) -> {\n\t\t\t\t__core__chooseList(\n\t\t\t\t\tlst, \n\t\t\t\t\t() -> {0}, \n\t\t\t\t\t() -> {__core__addInteger(recurse(recurse, __core__tailList__safe(lst)), 1)}\n\t\t\t\t)()\n\t\t\t}\n\t\t)\n\t}`));\n\tadd(new RawFunc(\"__helios__common__concat\", \n\t`(a, b) -> {\n\t\t(recurse) -> {\n\t\t\trecurse(recurse, b, a)\n\t\t}(\n\t\t\t(recurse, lst, rem) -> {\n\t\t\t\t__core__chooseList(\n\t\t\t\t\trem,\n\t\t\t\t\t() -> {lst},\n\t\t\t\t\t() -> {__core__mkCons(__core__headList__safe(rem), recurse(recurse, lst, __core__tailList__safe(rem)))}\n\t\t\t\t)()\n\t\t\t}\n\t\t)\n\t}`));\n\tadd(new RawFunc(\"__helios__common__slice_bytearray\",\n\t`(self, selfLengthFn) -> {\n\t\t(start, end) -> {\n\t\t\t(normalize) -> {\n\t\t\t\t(fn) -> {\n\t\t\t\t\tfn(normalize(start))\n\t\t\t\t}(\n\t\t\t\t\t(start) -> {\n\t\t\t\t\t\t(fn) -> {\n\t\t\t\t\t\t\tfn(normalize(end))\n\t\t\t\t\t\t}(\n\t\t\t\t\t\t\t(end) -> {\n\t\t\t\t\t\t\t\t__core__sliceByteString(start, __core__subtractInteger(end, __helios__int__max(start, 0)), self)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t)\n\t\t\t\t\t}\n\t\t\t\t)\n\t\t\t}(\n\t\t\t\t(pos) -> {\n\t\t\t\t\t__core__ifThenElse(\n\t\t\t\t\t\t__core__lessThanInteger(pos, 0),\n\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t__core__addInteger(__core__addInteger(selfLengthFn(self), 1), pos)\n\t\t\t\t\t\t},\n\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\tpos\n\t\t\t\t\t\t}\n\t\t\t\t\t)()\n\t\t\t\t}\n\t\t\t)\n\t\t}\n\t}`));\n\tadd(new RawFunc(\"__helios__common__starts_with\", \n\t`(self, selfLengthFn) -> {\n\t\t(prefix) -> {\n\t\t\t(n, m) -> {\n\t\t\t\t__core__ifThenElse(\n\t\t\t\t\t__core__lessThanInteger(n, m),\n\t\t\t\t\t() -> {false},\n\t\t\t\t\t() -> {\n\t\t\t\t\t\t__core__equalsByteString(prefix, __core__sliceByteString(0, m, self))\n\t\t\t\t\t}\n\t\t\t\t)()\n\t\t\t}(selfLengthFn(self), __core__lengthOfByteString(prefix))\n\t\t}\n\t}`));\n\tadd(new RawFunc(\"__helios__common__ends_with\",\n\t`(self, selfLengthFn) -> {\n\t\t(suffix) -> {\n\t\t\t(n, m) -> {\n\t\t\t\t__core__ifThenElse(\n\t\t\t\t\t__core__lessThanInteger(n, m),\n\t\t\t\t\t() -> {false},\n\t\t\t\t\t() -> {\n\t\t\t\t\t\t__core__equalsByteString(suffix, __core__sliceByteString(__core__subtractInteger(n, m), m, self))\n\t\t\t\t\t}\n\t\t\t\t)()\n\t\t\t}(selfLengthFn(self), __core__lengthOfByteString(suffix))\n\t\t}\n\t}`));\n\t// TODO: inline __core__sndPair(head)\n\tadd(new RawFunc(\"__helios__common__cip68_field\",\n\t`(self, name) -> {\n\t\t(map) -> {\n\t\t\t(recurse) -> {\n\t\t\t\trecurse(recurse, map)\n\t\t\t}(\n\t\t\t\t(recurse, map) -> {\n\t\t\t\t\t__core__chooseList(\n\t\t\t\t\t\tmap,\n\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t__helios__error(\n\t\t\t\t\t\t\t\t__core__appendString(\n\t\t\t\t\t\t\t\t\t\"field \",\n\t\t\t\t\t\t\t\t\t__core__appendString(\n\t\t\t\t\t\t\t\t\t\t__helios__bytearray__show(__core__unBData(name))(),\n\t\t\t\t\t\t\t\t\t\t\" not found in struct\"\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t},\n\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t(head) -> {\n\t\t\t\t\t\t\t\t(key, value) -> {\n\t\t\t\t\t\t\t\t\t__core__ifThenElse(\n\t\t\t\t\t\t\t\t\t\t__core__equalsData(key, name),\n\t\t\t\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t\t\t\tvalue\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t\t\t\trecurse(recurse, __core__tailList__safe(map))\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t)()\n\t\t\t\t\t\t\t\t}(__core__fstPair(head), __core__sndPair(head))\n\t\t\t\t\t\t\t}(__core__headList__safe(map))\n\t\t\t\t\t\t}\n\t\t\t\t\t)()\n\t\t\t\t}\n\t\t\t)\n\t\t}(__core__unMapData(__core__headList(__core__sndPair(__core__unConstrData(self)))))\n\t}`));\n\t// map is expected to already have been extracted\n\tadd(new RawFunc(\"__helios__common__cip68_field_safe\",\n\t`(map, name) -> {\n\t\t(recurse) -> {\n\t\t\trecurse(recurse, map)\n\t\t}(\n\t\t\t(recurse, map) -> {\n\t\t\t\t__core__chooseList(\n\t\t\t\t\tmap,\n\t\t\t\t\t() -> {\n\t\t\t\t\t\t__helios__option__NONE_FUNC\n\t\t\t\t\t},\n\t\t\t\t\t() -> {\n\t\t\t\t\t\t(head) -> {\n\t\t\t\t\t\t\t(key) -> {\n\t\t\t\t\t\t\t\t__core__ifThenElse(\n\t\t\t\t\t\t\t\t\t__core__equalsData(key, name),\n\t\t\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t\t\t__helios__option__SOME_FUNC(__core__sndPair(head))\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t\t\trecurse(recurse, __core__tailList__safe(map))\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t)()\n\t\t\t\t\t\t\t}(__core__fstPair(head))\n\t\t\t\t\t\t}(__core__headList__safe(map))\n\t\t\t\t\t}\n\t\t\t\t)()\n\t\t\t}\n\t\t)\n\t}`));\n\tadd(new RawFunc(\"__helios__common__test_cip68_field\",\n\t`(self, name, inner_test) -> {\n\t\t__core__chooseData(\n\t\t\tself,\n\t\t\t() -> {\n\t\t\t\t(fields) -> {\n\t\t\t\t\t__core__chooseList(\n\t\t\t\t\t\tfields,\n\t\t\t\t\t\t() -> {false},\n\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t(head) -> { \n\t\t\t\t\t\t\t\t__core__chooseData(\n\t\t\t\t\t\t\t\t\thead,\n\t\t\t\t\t\t\t\t\t() -> {false},\n\t\t\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t\t\t(map) -> {\n\t\t\t\t\t\t\t\t\t\t\t(recurse) -> {\n\t\t\t\t\t\t\t\t\t\t\t\trecurse(recurse, map)\n\t\t\t\t\t\t\t\t\t\t\t}(\n\t\t\t\t\t\t\t\t\t\t\t\t(recurse, map) -> {\n\t\t\t\t\t\t\t\t\t\t\t\t\t__core__chooseList(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tmap,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t() -> {false},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(head) -> {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(key, value) -> {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t__core__ifThenElse(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t__core__equalsData(key, name),\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tinner_test(value)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trecurse(recurse, __core__tailList__safe(map))\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)()\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}(__core__fstPair(head), __core__sndPair(head))\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}(__core__headList__safe(map))\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t)()\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t}(__core__unMapData__safe(head))\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t() -> {false},\n\t\t\t\t\t\t\t\t\t() -> {false},\n\t\t\t\t\t\t\t\t\t() -> {false}\n\t\t\t\t\t\t\t\t)()\n\t\t\t\t\t\t\t}(__core__headList__safe(fields))\n\t\t\t\t\t\t}\n\t\t\t\t\t)()\n\t\t\t\t}(__core__sndPair(__core__unConstrData__safe(self)))\n\t\t\t},\n\t\t\t() -> {false},\n\t\t\t() -> {false},\n\t\t\t() -> {false},\n\t\t\t() -> {false}\n\t\t)()\n\t}`));\n\tadd(new RawFunc(\"__helios__common__enum_fields\", \n\t`(self) -> {\n\t\t__core__sndPair(__core__unConstrData(self))\n\t}`));\n\tadd(new RawFunc(\"__helios__common__enum_field_0\", \n\t`(self) -> {\n\t\t__core__headList(__helios__common__enum_fields(self))\n\t}`));\n\tadd(new RawFunc(\"__helios__common__enum_fields_after_0\",\n\t`(self) -> {\n\t\t__core__tailList(__helios__common__enum_fields(self))\n\t}`));\n\tfor (let i = 1; i < 20; i++) {\n\t\tadd(new RawFunc(`__helios__common__enum_field_${i.toString()}`,\n\t`(self) -> {\n\t\t__core__headList(__helios__common__enum_fields_after_${(i-1).toString()}(self))\n\t}`));\n\t\tadd(new RawFunc(`__helios__common__enum_fields_after_${i.toString()}`,\n\t`(self) -> {\n\t\t__core__tailList(__helios__common__enum_fields_after_${(i-1).toString()}(self))\n\t}`));\n\t}\n\tadd(new RawFunc(\"__helios__common__struct_field_0\", \"__core__headList\"));\n\tadd(new RawFunc(\"__helios__common__struct_fields_after_0\", \"__core__tailList\"));\n\tfor (let i = 1; i < 20; i++) {\n\t\tadd(new RawFunc(`__helios__common__struct_field_${i.toString()}`,\n\t`(self) -> {\n\t\t__core__headList(__helios__common__struct_fields_after_${(i-1).toString()}(self))\n\t}`));\n\t\tadd(new RawFunc(`__helios__common__struct_fields_after_${i.toString()}`,\n\t`(self) -> {\n\t\t__core__tailList(__helios__common__struct_fields_after_${(i-1).toString()}(self))\n\t}`));\n\t}\n\tadd(new RawFunc(\"__helios__common__list_0\", \"__core__mkNilData(())\"));\n\tadd(new RawFunc(\"__helios__common__list_1\", \n\t`(a) -> {\n\t\t__core__mkCons(a, __helios__common__list_0)\n\t}`));\n\tfor (let i = 2; i < 20; i++) {\n\t\t/**\n\t\t * @type {string[]}\n\t\t */\n\t\tlet args = [];\n\n\t\tfor (let j = 0; j < i; j++) {\n\t\t\targs.push(`arg${j.toString()}`);\n\t\t}\n\n\t\tlet woFirst = args.slice()\n\t\tlet first = assertDefined(woFirst.shift());\n\n\t\tadd(new RawFunc(`__helios__common__list_${i.toString()}`,\n\t`(${args.join(\", \")}) -> {\n\t\t__core__mkCons(${first}, __helios__common__list_${(i-1).toString()}(${woFirst.join(\", \")}))\n\t}`));\n\t}\n\tadd(new RawFunc(`__helios__common__hash_datum_data[${FTPP}0]`, \n\t`(data) -> {\n\t\t__core__blake2b_256(${FTPP}0__serialize(data)())\n\t}`));\n\tadd(new RawFunc(`__helios__common__test_constr_data_2`,\n\t`(data, index, test_a, test_b) -> {\n\t\t__core__chooseData(\n\t\t\tdata,\n\t\t\t() -> {\n\t\t\t\t(pair) -> {\n\t\t\t\t\t__core__ifThenElse(\n\t\t\t\t\t\t__core__equalsInteger(__core__fstPair(pair), index),\n\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t(fields) -> {\n\t\t\t\t\t\t\t\t__core__chooseList(\n\t\t\t\t\t\t\t\t\tfields,\n\t\t\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t\t\tfalse\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t\t\t__core__ifThenElse(\n\t\t\t\t\t\t\t\t\t\t\ttest_a(__core__headList__safe(fields)),\n\t\t\t\t\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t\t\t\t\t(tail) -> {\n\t\t\t\t\t\t\t\t\t\t\t\t\t__core__chooseList(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttail,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfalse\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t__core__ifThenElse(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttest_b(__core__headList__safe(tail)),\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t__core__chooseList(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t__core__tailList__safe(tail), \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttrue\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfalse\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)()\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfalse\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)()\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t)()\n\t\t\t\t\t\t\t\t\t\t\t\t}(__core__tailList__safe(fields))\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t\t\t\t\tfalse\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t)()\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t)()\n\t\t\t\t\t\t\t}(__core__sndPair(pair))\n\t\t\t\t\t\t},\n\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\tfalse\n\t\t\t\t\t\t}\n\t\t\t\t\t)()\n\t\t\t\t}(__core__unConstrData__safe(data))\n\t\t\t},\n\t\t\t() -> {false},\n\t\t\t() -> {false},\n\t\t\t() -> {false},\n\t\t\t() -> {false}\n\t\t)()\n\t}`));\n\n\n\t// Global builtin functions\n\tadd(new RawFunc(\"__helios__print\", \n\t`(msg) -> {\n\t\t__core__trace(msg, ())\n\t}`));\n\tadd(new RawFunc(\"__helios__error\",\n\t`(msg) -> {\n\t\t__core__trace(\n\t\t\tmsg, \n\t\t\t() -> {\n\t\t\t\terror()\n\t\t\t}\n\t\t)()\n\t}`));\n\tadd(new RawFunc(\"__helios__assert\",\n\t`(cond, msg) -> {\n\t\t__core__ifThenElse(\n\t\t\tcond,\n\t\t\t() -> {\n\t\t\t\t()\n\t\t\t},\n\t\t\t() -> {\n\t\t\t\t__core__trace(\n\t\t\t\t\tmsg,\n\t\t\t\t\t() -> {\n\t\t\t\t\t\terror()\n\t\t\t\t\t}\n\t\t\t\t)()\n\t\t\t}\n\t\t)()\n\t}`));\n\n\n\t// Int builtins\n\tadd(new RawFunc(\"__helios__int____eq\", \"__core__equalsInteger\"));\n\tadd(new RawFunc(\"__helios__int__from_data\", \"__core__unIData\"));\n\tadd(new RawFunc(\"__helios__int__from_data_safe\",\n\t`(data) -> {\n\t\t__core__chooseData(\n\t\t\tdata,\n\t\t\t() -> {__helios__option__NONE_FUNC},\n\t\t\t() -> {__helios__option__NONE_FUNC},\n\t\t\t() -> {__helios__option__NONE_FUNC},\n\t\t\t() -> {\n\t\t\t\t__helios__option__SOME_FUNC(__core__unIData__safe(data))\n\t\t\t},\n\t\t\t() -> {__helios__option__NONE_FUNC}\n\t\t)()\n\t}`));\n\tadd(new RawFunc(\"__helios__int__test_data\", `(data) -> {\n\t\t__core__chooseData(data, false, false, false, true, false)\n\t}`));\n\tadd(new RawFunc(\"__helios__int____to_data\", \"__core__iData\"));\n\taddNeqFunc(\"__helios__int\");\n\taddSerializeFunc(\"__helios__int\");\n\tadd(new RawFunc(\"__helios__int____neg\",\n\t`(self) -> {\n\t\t__core__multiplyInteger(self, -1)\n\t}`));\n\tadd(new RawFunc(\"__helios__int____pos\", \"__helios__common__identity\"));\n\tadd(new RawFunc(\"__helios__int____add\", \"__core__addInteger\"));\n\tadd(new RawFunc(\"__helios__int____sub\", \"__core__subtractInteger\"));\n\tadd(new RawFunc(\"__helios__int____mul\", \"__core__multiplyInteger\"));\n\tadd(new RawFunc(\"__helios__int____div\", \"__core__divideInteger\"));\n\tadd(new RawFunc(\"__helios__int____mod\", \"__core__modInteger\"));\n\tadd(new RawFunc(\"__helios__int____add1\",\n\t`(a, b) -> {\n\t\t__core__addInteger(\n\t\t\t__core__multiplyInteger(a, __helios__real__ONE),\n\t\t\tb\n\t\t)\n\t}`));\n\tadd(new RawFunc(\"__helios__int____sub1\",\n\t`(a, b) -> {\n\t\t__core__subtractInteger(\n\t\t\t__core__multiplyInteger(a, __helios__real__ONE),\n\t\t\tb\n\t\t)\n\t}`));\n\tadd(new RawFunc(\"__helios__int____mul1\", \"__helios__int____mul\"));\n\tadd(new RawFunc(\"__helios__int____div1\",\n\t`(a, b) -> {\n\t\t__core__divideInteger(\n\t\t\t__core__multiplyInteger(a, __helios__real__ONESQ),\n\t\t\tb\n\t\t)\n\t}`));\n\tadd(new RawFunc(\"__helios__int____geq\",\n\t`(a, b) -> {\n\t\t__helios__bool____not(__core__lessThanInteger(a, b))\n\t}`));\n\tadd(new RawFunc(\"__helios__int____gt\",\n\t`(a, b) -> {\n\t\t__helios__bool____not(__core__lessThanEqualsInteger(a, b))\n\t}`));\n\tadd(new RawFunc(\"__helios__int____leq\", \"__core__lessThanEqualsInteger\"));\n\tadd(new RawFunc(\"__helios__int____lt\", \"__core__lessThanInteger\"));\n\tadd(new RawFunc(\"__helios__int____geq1\",\n\t`(a, b) -> {\n\t\t__helios__bool____not(\n\t\t\t__core__lessThanInteger(\n\t\t\t\t__core__multiplyInteger(a, __helios__real__ONE),\n\t\t\t\tb\n\t\t\t)\n\t\t)\n\t}`));\n\tadd(new RawFunc(\"__helios__int____gt1\",\n\t`(a, b) -> {\n\t\t__helios__bool____not(\n\t\t\t__core__lessThanEqualsInteger(\n\t\t\t\t__core__multiplyInteger(a, __helios__real__ONE),\n\t\t\t\tb\n\t\t\t)\n\t\t)\n\t}`));\n\tadd(new RawFunc(\"__helios__int____leq1\",\n\t`(a, b) -> {\n\t\t__core__lessThanEqualsInteger(\n\t\t\t__core__multiplyInteger(a, __helios__real__ONE),\n\t\t\tb\n\t\t)\n\t}`));\n\tadd(new RawFunc(\"__helios__int____lt1\",\n\t`(a, b) -> {\n\t\t__core__lessThanInteger(\n\t\t\t__core__multiplyInteger(a, __helios__real__ONE),\n\t\t\tb\n\t\t)\n\t}`));\n\tadd(new RawFunc(\"__helios__int__min\",\n\t`(a, b) -> {\n\t\t__core__ifThenElse(\n\t\t\t__core__lessThanInteger(a, b),\n\t\t\ta,\n\t\t\tb\n\t\t)\n\t}`));\n\tadd(new RawFunc(\"__helios__int__max\",\n\t`(a, b) -> {\n\t\t__core__ifThenElse(\n\t\t\t__core__lessThanInteger(a, b),\n\t\t\tb,\n\t\t\ta\n\t\t)\n\t}`));\n\tadd(new RawFunc(\"__helios__int__bound_min\",\n\t`(self) -> {\n\t\t(other) -> {\n\t\t\t__helios__int__max(self, other)\n\t\t}\n\t}`));\n\tadd(new RawFunc(\"__helios__int__bound_max\",\n\t`(self) -> {\n\t\t(other) -> {\n\t\t\t__helios__int__min(self, other)\n\t\t}\n\t}`));\n\tadd(new RawFunc(\"__helios__int__bound\",\n\t`(self) -> {\n\t\t(min, max) -> {\n\t\t\t__helios__int__max(__helios__int__min(self, max), min)\n\t\t}\n\t}`));\n\tadd(new RawFunc(\"__helios__int__abs\",\n\t`(self) -> {\n\t\t() -> {\n\t\t\t__core__ifThenElse(\n\t\t\t\t__core__lessThanInteger(self, 0),\n\t\t\t\t() -> {\n\t\t\t\t\t__core__multiplyInteger(self, -1)\n\t\t\t\t},\n\t\t\t\t() -> {\n\t\t\t\t\tself\n\t\t\t\t}\n\t\t\t)()\n\t\t}\n\t}`));\n\tadd(new RawFunc(\"__helios__int__encode_zigzag\",\n\t`(self) -> {\n\t\t() -> {\n\t\t\t__core__ifThenElse(\n\t\t\t\t__core__lessThanInteger(self, 0),\n\t\t\t\t() -> {\n\t\t\t\t\t__core__subtractInteger(__core__multiplyInteger(self, -2), 1)\n\t\t\t\t},\n\t\t\t\t() -> {\n\t\t\t\t\t__core__multiplyInteger(self, 2)\n\t\t\t\t}\n\t\t\t)()\n\t\t}\n\t}`));\n\tadd(new RawFunc(\"__helios__int__decode_zigzag\",\n\t`(self) -> {\n\t\t() -> {\n\t\t\t__core__ifThenElse(\n\t\t\t\t__core__lessThanInteger(self, 0),\n\t\t\t\t() -> {\n\t\t\t\t\t__helios__error(\"expected positive int\")\n\t\t\t\t},\n\t\t\t\t() -> {\n\t\t\t\t\t__core__ifThenElse(\n\t\t\t\t\t\t__core__equalsInteger(__core__modInteger(self, 2), 0),\n\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t__core__divideInteger(self, 2)\n\t\t\t\t\t\t},\n\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t__core__divideInteger(__core__addInteger(self, 1), -2)\n\t\t\t\t\t\t}\n\t\t\t\t\t)()\n\t\t\t\t}\n\t\t\t)()\n\t\t}\n\t}`));\n\tadd(new RawFunc(\"__helios__int__to_bool\",\n\t`(self) -> {\n\t\t() -> {\n\t\t\t__core__ifThenElse(__core__equalsInteger(self, 0), false, true)\n\t\t}\n\t}`));\n\tadd(new RawFunc(\"__helios__int__to_real\",\n\t`(self) -> {\n\t\t() -> {\n\t\t\t__core__multiplyInteger(self, __helios__real__ONE)\n\t\t}\n\t}`));\n\tadd(new RawFunc(\"__helios__int__to_hex\",\n\t`(self) -> {\n\t\t() -> {\n\t\t\t(recurse) -> {\n\t\t\t\t__core__decodeUtf8__safe(\n\t\t\t\t\t__core__ifThenElse(\n\t\t\t\t\t\t__core__lessThanInteger(self, 0),\n\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t__core__consByteString(\n\t\t\t\t\t\t\t\t45,\n\t\t\t\t\t\t\t\trecurse(recurse, __core__multiplyInteger(self, -1), #)\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t},\n\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\trecurse(recurse, self, #)\n\t\t\t\t\t\t}\n\t\t\t\t\t)()\n\t\t\t\t)\n\t\t\t}(\n\t\t\t\t(recurse, self, bytes) -> {\n\t\t\t\t\t(digit) -> {\n\t\t\t\t\t\t(bytes) -> {\n\t\t\t\t\t\t\t__core__ifThenElse(\n\t\t\t\t\t\t\t\t__core__lessThanInteger(self, 16),\n\t\t\t\t\t\t\t\t() -> {bytes},\n\t\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t\trecurse(recurse, __core__divideInteger(self, 16), bytes)\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t)()\n\t\t\t\t\t\t}(\n\t\t\t\t\t\t\t__core__consByteString(\n\t\t\t\t\t\t\t\t__core__ifThenElse(\n\t\t\t\t\t\t\t\t\t__core__lessThanInteger(digit, 10), \n\t\t\t\t\t\t\t\t\t__core__addInteger(digit, 48), \n\t\t\t\t\t\t\t\t\t__core__addInteger(digit, 87)\n\t\t\t\t\t\t\t\t), \n\t\t\t\t\t\t\t\tbytes\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t)\n\t\t\t\t\t}(__core__modInteger(self, 16))\n\t\t\t\t}\n\t\t\t)\n\t\t}\n\t}`));\n\tadd(new RawFunc(\"__helios__common__BASE58_ALPHABET\", \"#31323334353637383941424344454647484a4b4c4d4e505152535455565758595a6162636465666768696a6b6d6e6f707172737475767778797a\"))\n\tadd(new RawFunc(\"__helios__int__to_base58\",\n\t`(self) -> {\n\t\t() -> {\n\t\t\t__core__decodeUtf8(\n\t\t\t\t__core__ifThenElse(\n\t\t\t\t\t__core__lessThanInteger(self, 0),\n\t\t\t\t\t() -> {\n\t\t\t\t\t\t__helios__error(\"expected positive number\")\n\t\t\t\t\t},\n\t\t\t\t\t() -> {\n\t\t\t\t\t\t(recurse) -> {\n\t\t\t\t\t\t\trecurse(recurse, self, #)\n\t\t\t\t\t\t}(\n\t\t\t\t\t\t\t(recurse, self, bytes) -> {\n\t\t\t\t\t\t\t\t(digit) -> {\n\t\t\t\t\t\t\t\t\t(bytes) -> {\n\t\t\t\t\t\t\t\t\t\t__core__ifThenElse(\n\t\t\t\t\t\t\t\t\t\t\t__core__lessThanInteger(self, 58),\n\t\t\t\t\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t\t\t\t\tbytes\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t\t\t\t\trecurse(recurse, __core__divideInteger(self, 58), bytes)\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t)()\n\t\t\t\t\t\t\t\t\t}(\n\t\t\t\t\t\t\t\t\t\t__core__consByteString(\n\t\t\t\t\t\t\t\t\t\t\t__core__indexByteString(__helios__common__BASE58_ALPHABET, digit),\n\t\t\t\t\t\t\t\t\t\t\tbytes\n\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t}(__core__modInteger(self, 58))\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t)\n\t\t\t\t\t}\n\t\t\t\t)()\n\t\t\t)\n\t\t}\n\t}`));\n\tadd(new RawFunc(\"__helios__int__BASE58_INVERSE_ALPHABET_1\", \"#ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff000102030405060708ffffffffffff\"));\n\tadd(new RawFunc(\"__helios__int__BASE58_INVERSE_ALPHABET_2\", \"#ff090a0b0c0d0e0f10ff1112131415ff161718191a1b1c1d1e1f20ffffffffffff2122232425262728292a2bff2c2d2e2f30313233343536373839ffffffffff\"));\n\tadd(new RawFunc(\"__helios__int__invert_base58_char\", \n\t`(char) -> {\n\t\t(digit) -> {\n\t\t\t__core__ifThenElse(\n\t\t\t\t__core__equalsInteger(digit, 0xff),\n\t\t\t\t() -> {\n\t\t\t\t\t__helios__error(\"invalid base58 character\")\n\t\t\t\t},\n\t\t\t\t() -> {\n\t\t\t\t\tdigit\n\t\t\t\t}\n\t\t\t)()\n\t\t}(\n\t\t\t__core__ifThenElse(\n\t\t\t\t__core__lessThanInteger(char, 64),\n\t\t\t\t() -> {\n\t\t\t\t\t__core__indexByteString(__helios__int__BASE58_INVERSE_ALPHABET_1, char)\n\t\t\t\t},\n\t\t\t\t() -> {\n\t\t\t\t\t__core__ifThenElse(\n\t\t\t\t\t\t__core__lessThanInteger(char, 128),\n\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t__core__indexByteString(\n\t\t\t\t\t\t\t\t__helios__int__BASE58_INVERSE_ALPHABET_2,\n\t\t\t\t\t\t\t\t__core__subtractInteger(char, 64)\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t},\n\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t0xff\n\t\t\t\t\t\t}\n\t\t\t\t\t)()\n\t\t\t\t}\n\t\t\t)()\n\t\t)\n\t}`));\n\tadd(new RawFunc(\"__helios__int__from_base58\",\n\t`(str) -> {\n\t\t(bytes) -> {\n\t\t\t(n) -> {\n\t\t\t\t(recurse) -> {\n\t\t\t\t\trecurse(recurse, 0, 1, __core__subtractInteger(n, 1))\n\t\t\t\t}(\n\t\t\t\t\t(recurse, acc, pow, i) -> {\n\t\t\t\t\t\t__core__ifThenElse(\n\t\t\t\t\t\t\t__core__equalsInteger(i, -1),\n\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\tacc\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t(new_acc) -> {\n\t\t\t\t\t\t\t\t\trecurse(recurse, new_acc, __core__multiplyInteger(pow, 58), __core__subtractInteger(i, 1))\n\t\t\t\t\t\t\t\t}(\n\t\t\t\t\t\t\t\t\t__core__addInteger(\n\t\t\t\t\t\t\t\t\t\tacc,\n\t\t\t\t\t\t\t\t\t\t__core__multiplyInteger(\n\t\t\t\t\t\t\t\t\t\t\t__helios__int__invert_base58_char(\n\t\t\t\t\t\t\t\t\t\t\t\t__core__indexByteString(bytes, i)\n\t\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t\t\tpow\n\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t)()\n\t\t\t\t\t}\n\t\t\t\t)\n\t\t\t}(__core__lengthOfByteString(bytes))\n\t\t}(__core__encodeUtf8(str))\n\t}`));\n\tadd(new RawFunc(\"__helios__int__show_digit\",\n\t`(x) -> {\n\t\t__core__addInteger(__core__modInteger(x, 10), 48)\n\t}`));\n\tadd(new RawFunc(\"__helios__int__show\",\n\t`(self) -> {\n\t\t() -> {\n\t\t\t__core__decodeUtf8__safe(\n\t\t\t\t(recurse) -> {\n\t\t\t\t\t__core__ifThenElse(\n\t\t\t\t\t\t__core__lessThanInteger(self, 0),\n\t\t\t\t\t\t() -> {__core__consByteString(45, recurse(recurse, __core__multiplyInteger(self, -1), #))},\n\t\t\t\t\t\t() -> {recurse(recurse, self, #)}\n\t\t\t\t\t)()\n\t\t\t\t}(\n\t\t\t\t\t(recurse, i, bytes) -> {\n\t\t\t\t\t\t(bytes) -> {\n\t\t\t\t\t\t\t__core__ifThenElse(\n\t\t\t\t\t\t\t\t__core__lessThanInteger(i, 10),\n\t\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t\tbytes\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t\trecurse(recurse, __core__divideInteger(i, 10), bytes)\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t)()\n\t\t\t\t\t\t}(__core__consByteString(__helios__int__show_digit(i), bytes))\n\t\t\t\t\t}\n\t\t\t\t)\n\t\t\t)\n\t\t}\n\t}`));\n\t// not exposed, assumes positive number\n\tadd(new RawFunc(\"__helios__int__show_padded\",\n\t`(self, n) -> {\n\t\t(recurse) -> {\n\t\t\trecurse(recurse, self, 0, #)\n\t\t}(\n\t\t\t(recurse, x, pos, bytes) -> {\n\t\t\t\t__core__ifThenElse(\n\t\t\t\t\t__core__equalsInteger(x, 0),\n\t\t\t\t\t() -> {\n\t\t\t\t\t\t__core__ifThenElse(\n\t\t\t\t\t\t\t__core__lessThanEqualsInteger(n, pos),\n\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\tbytes\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\trecurse(\n\t\t\t\t\t\t\t\t\trecurse,\n\t\t\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\t\t\t__core__addInteger(pos, 1),\n\t\t\t\t\t\t\t\t\t__core__consByteString(48, bytes)\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t)()\n\t\t\t\t\t},\n\t\t\t\t\t() -> {\n\t\t\t\t\t\trecurse(\n\t\t\t\t\t\t\trecurse,\n\t\t\t\t\t\t\t__core__divideInteger(x, 10),\n\t\t\t\t\t\t\t__core__addInteger(pos, 1),\n\t\t\t\t\t\t\t__core__consByteString(__helios__int__show_digit(x), bytes)\n\t\t\t\t\t\t)\n\t\t\t\t\t}\n\t\t\t\t)()\n\t\t\t}\n\t\t)\n\t}`));\n\t\n\tadd(new RawFunc(\"__helios__int__parse_digit\",\n\t`(digit) -> {\n\t\t__core__ifThenElse(\n\t\t\t__core__lessThanEqualsInteger(digit, 57),\n\t\t\t() -> {\n\t\t\t\t__core__ifThenElse(\n\t\t\t\t\t__core__lessThanEqualsInteger(48, digit),\n\t\t\t\t\t() -> {\n\t\t\t\t\t\t__core__subtractInteger(digit, 48)\n\t\t\t\t\t},\n\t\t\t\t\t() -> {\n\t\t\t\t\t\t__helios__error(\"not a digit\")\n\t\t\t\t\t}\n\t\t\t\t)()\n\t\t\t},\n\t\t\t() -> {\n\t\t\t\t__helios__error(\"not a digit\")\n\t\t\t}\n\t\t)()\n\t}`));\n\tadd(new RawFunc(\"__helios__int__parse_hex_digit\",\n\t`(hex) -> {\n\t\t__core__ifThenElse(\n\t\t\t__core__lessThanEqualsInteger(hex, 57),\n\t\t\t() -> {\n\t\t\t\t__core__ifThenElse(\n\t\t\t\t\t__core__lessThanEqualsInteger(48, hex),\n\t\t\t\t\t() -> {\n\t\t\t\t\t\t__core__subtractInteger(hex, 48)\n\t\t\t\t\t},\n\t\t\t\t\t() -> {\n\t\t\t\t\t\t__helios__error(\"not a hex digit\")\n\t\t\t\t\t}\n\t\t\t\t)()\n\t\t\t},\n\t\t\t() -> {\n\t\t\t\t__core__ifThenElse(\n\t\t\t\t\t__core__lessThanEqualsInteger(hex, 70),\n\t\t\t\t\t() -> {\n\t\t\t\t\t\t__core__ifThenElse(\n\t\t\t\t\t\t\t__core__lessThanEqualsInteger(65, hex),\n\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t__core__subtractInteger(hex, 55)\n\t\t\t\t\t\t\t}, \n\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t__helios__error(\"not a hex digit\")\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t)()\n\t\t\t\t\t},\n\t\t\t\t\t() -> {\n\t\t\t\t\t\t__core__ifThenElse(\n\t\t\t\t\t\t\t__core__lessThanEqualsInteger(hex, 102),\n\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t__core__ifThenElse(\n\t\t\t\t\t\t\t\t\t__core__lessThanEqualsInteger(97, hex),\n\t\t\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t\t\t__core__subtractInteger(hex, 87)\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t\t\t__helios__error(\"not a hex digit\")\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t)()\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t__helios__error(\"not a hex digit\")\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t)()\n\t\t\t\t\t}\n\t\t\t\t)()\n\t\t\t}\n\t\t)()\n\t}`));\n\tadd(new RawFunc(\"__helios__int__parse\",\n\t`(string) -> {\n\t\t(bytes) -> {\n\t\t\t(n, b0) -> {\n\t\t\t\t(recurse) -> {\n\t\t\t\t\t__core__ifThenElse(\n\t\t\t\t\t\t__core__equalsInteger(b0, 48),\n\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t__core__ifThenElse(\n\t\t\t\t\t\t\t\t__core__equalsInteger(n, 1),\n\t\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t\t0\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t\t__helios__error(\"zero padded integer can't be parsed\")\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t)()\n\t\t\t\t\t\t},\n\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t__core__ifThenElse(\n\t\t\t\t\t\t\t\t__core__equalsInteger(b0, 45),\n\t\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t\t__core__ifThenElse(\n\t\t\t\t\t\t\t\t\t\t__core__equalsInteger(__core__indexByteString(bytes, 1), 48),\n\t\t\t\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t\t\t\t__helios__error(\"-0 not allowed\")\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t\t\t\t__core__multiplyInteger(\n\t\t\t\t\t\t\t\t\t\t\t\trecurse(recurse, 0, 1),\n\t\t\t\t\t\t\t\t\t\t\t\t-1\n\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t)()\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t\trecurse(recurse, 0, 0)\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t)()\n\t\t\t\t\t\t}\n\t\t\t\t\t)()\n\t\t\t\t}(\n\t\t\t\t\t(recurse, acc, i) -> {\n\t\t\t\t\t\t__core__ifThenElse(\n\t\t\t\t\t\t\t__core__equalsInteger(i, n),\n\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\tacc\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t(new_acc) -> {\n\t\t\t\t\t\t\t\t\trecurse(recurse, new_acc, __core__addInteger(i, 1))\n\t\t\t\t\t\t\t\t}(\n\t\t\t\t\t\t\t\t\t__core__addInteger(\n\t\t\t\t\t\t\t\t\t\t__core__multiplyInteger(acc, 10), \n\t\t\t\t\t\t\t\t\t\t__helios__int__parse_digit(__core__indexByteString(bytes, i))\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t)()\n\t\t\t\t\t}\n\t\t\t\t)\n\t\t\t}(__core__lengthOfByteString(bytes), __core__indexByteString(bytes, 0))\n\t\t}(__core__encodeUtf8(string))\n\t}`));\n\tadd(new RawFunc(\"__helios__int__from_big_endian\",\n\t`(bytes) -> {\n\t\t(n) -> {\n\t\t\t(recurse) -> {\n\t\t\t\trecurse(recurse, 0, 1, __core__subtractInteger(n, 1))\n\t\t\t}(\n\t\t\t\t(recurse, acc, pow, i) -> {\n\t\t\t\t\t__core__ifThenElse(\n\t\t\t\t\t\t__core__equalsInteger(i, -1),\n\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\tacc\n\t\t\t\t\t\t},\n\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t(new_acc) -> {\n\t\t\t\t\t\t\t\trecurse(recurse, new_acc, __core__multiplyInteger(pow, 256), __core__subtractInteger(i, 1))\n\t\t\t\t\t\t\t}(\n\t\t\t\t\t\t\t\t__core__addInteger(\n\t\t\t\t\t\t\t\t\tacc,\n\t\t\t\t\t\t\t\t\t__core__multiplyInteger(__core__indexByteString(bytes, i), pow)\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t}\n\t\t\t\t\t)()\n\t\t\t\t}\n\t\t\t)\n\t\t}(__core__lengthOfByteString(bytes))\n\t}`));\n\tadd(new RawFunc(\"__helios__int__from_little_endian\", \n\t`(bytes) -> {\n\t\t(n) -> {\n\t\t\t(recurse) -> {\n\t\t\t\trecurse(recurse, 0, 1, 0)\n\t\t\t}(\n\t\t\t\t(recurse, acc, pow, i) -> {\n\t\t\t\t\t__core__ifThenElse(\n\t\t\t\t\t\t__core__equalsInteger(i, n),\n\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\tacc\n\t\t\t\t\t\t},\n\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t(new_acc) -> {\n\t\t\t\t\t\t\t\trecurse(recurse, new_acc, __core__multiplyInteger(pow, 256), __core__addInteger(i, 1))\n\t\t\t\t\t\t\t}(\n\t\t\t\t\t\t\t\t__core__addInteger(\n\t\t\t\t\t\t\t\t\tacc,\n\t\t\t\t\t\t\t\t\t__core__multiplyInteger(__core__indexByteString(bytes, i), pow)\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t}\n\t\t\t\t\t)()\n\t\t\t\t}\n\t\t\t)\n\t\t}(__core__lengthOfByteString(bytes))\n\t}`));\n\tadd(new RawFunc(\"__helios__int__to_big_endian\",\n\t`(self) -> {\n\t\t() -> {\n\t\t\t__core__ifThenElse(\n\t\t\t\t__core__lessThanInteger(self, 0),\n\t\t\t\t() -> {\n\t\t\t\t\t__helios__error(\"can't convert negative number to big endian bytearray\")\n\t\t\t\t},\n\t\t\t\t() -> {\n\t\t\t\t\t(recurse) -> {\n\t\t\t\t\t\trecurse(recurse, self, #)\n\t\t\t\t\t}(\n\t\t\t\t\t\t(recurse, self, bytes) -> {\n\t\t\t\t\t\t\t(bytes) -> {\n\t\t\t\t\t\t\t\t__core__ifThenElse(\n\t\t\t\t\t\t\t\t\t__core__lessThanInteger(self, 256),\n\t\t\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t\t\tbytes\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t\t\trecurse(\n\t\t\t\t\t\t\t\t\t\t\trecurse,\n\t\t\t\t\t\t\t\t\t\t\t__core__divideInteger(self, 256),\n\t\t\t\t\t\t\t\t\t\t\tbytes\n\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t)()\n\t\t\t\t\t\t\t}(__core__consByteString(__core__modInteger(self, 256), bytes))\n\t\t\t\t\t\t}\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t)()\n\t\t}\n\t}`));\n\tadd(new RawFunc(\"__helios__int__to_little_endian\",\n\t`(self) -> {\n\t\t() -> {\n\t\t\t__core__ifThenElse(\n\t\t\t\t__core__lessThanInteger(self, 0),\n\t\t\t\t() -> {\n\t\t\t\t\t__helios__error(\"can't convert negative number to little endian bytearray\")\n\t\t\t\t},\n\t\t\t\t() -> {\n\t\t\t\t\t(recurse) -> {\n\t\t\t\t\t\trecurse(recurse, self)\n\t\t\t\t\t}(\n\t\t\t\t\t\t(recurse, self) -> {\n\t\t\t\t\t\t\t__core__consByteString(\n\t\t\t\t\t\t\t\t__core__modInteger(self, 256),\n\t\t\t\t\t\t\t\t__core__ifThenElse(\n\t\t\t\t\t\t\t\t\t__core__lessThanInteger(self, 256),\n\t\t\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t\t\t#\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t\t\trecurse(recurse, __core__divideInteger(self, 256))\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t)()\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t}\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t)()\n\t\t}\n\t}`));\n\tadd(new RawFunc(\"__helios__int__sqrt\",\n\t`(x) -> {\n\t\t__core__ifThenElse(\n\t\t\t__core__lessThanInteger(x, 2),\n\t\t\t() -> {\n\t\t\t\t__core__ifThenElse(\n\t\t\t\t\t__core__equalsInteger(x, 1),\n\t\t\t\t\t() -> {\n\t\t\t\t\t\t1\n\t\t\t\t\t},\n\t\t\t\t\t() -> {\n\t\t\t\t\t\t__core__ifThenElse(\n\t\t\t\t\t\t\t__core__equalsInteger(x, 0),\n\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t0\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t__helios__error(\"negative number in sqrt\")\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t)()\n\t\t\t\t\t}\n\t\t\t\t)()\n\t\t\t},\n\t\t\t() -> {\n\t\t\t\t(recurse) -> {\n\t\t\t\t\trecurse(recurse, __core__divideInteger(x, 2))\n\t\t\t\t}(\n\t\t\t\t\t(recurse, x0) -> {\n\t\t\t\t\t\t(x1) -> {\n\t\t\t\t\t\t\t__core__ifThenElse(\n\t\t\t\t\t\t\t\t__core__lessThanEqualsInteger(x0, x1),\n\t\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t\tx0\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t\trecurse(recurse, x1)\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t)()\n\t\t\t\t\t\t}(\n\t\t\t\t\t\t\t__core__divideInteger(\n\t\t\t\t\t\t\t\t__core__addInteger(\n\t\t\t\t\t\t\t\t\tx0,\n\t\t\t\t\t\t\t\t\t__core__divideInteger(x, x0)\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t2\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t)\n\t\t\t\t\t}\n\t\t\t\t)\n\t\t\t}\n\t\t)()\n\t}`));\n\n\n\t// Real builtins\n\taddIntLikeFuncs(\"__helios__real\");\n\tadd(new RawFunc(\"__helios__real__test_data\", \"__helios__int__test_data\"));\n\tadd(new RawFunc(\"__helios__real__PRECISION\", REAL_PRECISION.toString()));\n\tadd(new RawFunc(\"__helios__real__ONE\", '1' + new Array(REAL_PRECISION).fill('0').join('')));\n\tadd(new RawFunc(\"__helios__real__HALF\", '5' + new Array(REAL_PRECISION-1).fill('0').join('')));\n\tadd(new RawFunc(\"__helios__real__NEARLY_ONE\", new Array(REAL_PRECISION).fill('9').join('')));\n\tadd(new RawFunc(\"__helios__real__ONESQ\", '1' + new Array(REAL_PRECISION*2).fill('0').join('')));\n\tadd(new RawFunc(\"__helios__real____neg\", \"__helios__int____neg\"));\n\tadd(new RawFunc(\"__helios__real____pos\", \"__helios__int____pos\"));\n\tadd(new RawFunc(\"__helios__real____add\", \"__helios__int____add\"));\n\tadd(new RawFunc(\"__helios__real____add1\", \n\t`(a, b) -> {\n\t\t__core__addInteger(\n\t\t\ta,\n\t\t\t__core__multiplyInteger(b, __helios__real__ONE)\n\t\t)\n\t}`));\n\tadd(new RawFunc(\"__helios__real____sub\", \"__helios__int____sub\"));\n\tadd(new RawFunc(\"__helios__real____sub1\", \n\t`(a, b) -> {\n\t\t__core__subtractInteger(\n\t\t\ta,\n\t\t\t__core__multiplyInteger(b, __helios__real__ONE)\n\t\t)\n\t}`));\n\tadd(new RawFunc(\"__helios__real____mul\",\n\t`(a, b) -> {\n\t\t__core__divideInteger(\n\t\t\t__core__multiplyInteger(a, b),\n\t\t\t__helios__real__ONE\n\t\t)\n\t}`));\n\tadd(new RawFunc(\"__helios__real____mul1\", \"__helios__int____mul\"));\n\tadd(new RawFunc(\"__helios__real____div\",\n\t`(a, b) -> {\n\t\t__core__divideInteger(\n\t\t\t__core__multiplyInteger(a, __helios__real__ONE),\n\t\t\tb\n\t\t)\n\t}`));\n\tadd(new RawFunc(\"__helios__real____div1\", \"__helios__int____div\"));\n\tadd(new RawFunc(\"__helios__real____geq\", \"__helios__int____geq\"));\n\tadd(new RawFunc(\"__helios__real____gt\", \"__helios__int____gt\"));\n\tadd(new RawFunc(\"__helios__real____leq\", \"__helios__int____leq\"));\n\tadd(new RawFunc(\"__helios__real____lt\", \"__helios__int____lt\"));\n\tadd(new RawFunc(\"__helios__real____eq1\",\n\t`(a, b) -> {\n\t\t__core__equalsInteger(a,\n\t\t\t__core__multiplyInteger(\n\t\t\t\tb,\n\t\t\t\t__helios__real__ONE\n\t\t\t)\n\t\t)\n\t}`));\n\tadd(new RawFunc(\"__helios__real____neq1\",\n\t`(a, b) -> {\n\t\t__helios__bool____not(\n\t\t\t__core__equalsInteger(\n\t\t\t\ta,\n\t\t\t\t__core__multiplyInteger(b, __helios__real__ONE)\n\t\t\t)\n\t\t)\n\t}`));\n\tadd(new RawFunc(\"__helios__real____geq1\", \n\t`(a, b) -> {\n\t\t__helios__bool____not(\n\t\t\t__core__lessThanInteger(\n\t\t\t\ta,\n\t\t\t\t__core__multiplyInteger(b, __helios__real__ONE)\n\t\t\t)\n\t\t)\n\t}`));\n\tadd(new RawFunc(\"__helios__real____gt1\", \n\t`(a, b) -> {\n\t\t__helios__bool____not(\n\t\t\t__core__lessThanEqualsInteger(\n\t\t\t\ta, \n\t\t\t\t__core__multiplyInteger(b, __helios__real__ONE)\n\t\t\t)\n\t\t)\n\t}`));\n\tadd(new RawFunc(\"__helios__real____leq1\",\n\t`(a, b) -> {\n\t\t__core__lessThanEqualsInteger(\n\t\t\ta, \n\t\t\t__core__multiplyInteger(b, __helios__real__ONE)\n\t\t)\n\t}`));\n\tadd(new RawFunc(\"__helios__real____lt1\", \n\t`(a, b) -> {\n\t\t__core__lessThanInteger(\n\t\t\ta,\n\t\t\t__core__multiplyInteger(b, __helios__real__ONE)\n\t\t)\n\t}`));\n\tadd(new RawFunc(\"__helios__real__abs\", \"__helios__int__abs\"));\n\tadd(new RawFunc(\"__helios__real__sqrt\", \n\t`(self) -> {\n\t\t__helios__int__sqrt(\n\t\t\t__helios__int____mul(self, __helios__real__ONE)\n\t\t)\n\t}`));\n\tadd(new RawFunc(\"__helios__real__floor\", \n\t`(self) -> {\n\t\t() -> {\n\t\t\t__core__divideInteger(self, __helios__real__ONE)\n\t\t}\n\t}`));\n\tadd(new RawFunc(\"__helios__real__trunc\",\n\t`(self) -> {\n\t\t() -> {\n\t\t\t__core__quotientInteger(self, __helios__real__ONE)\n\t\t}\n\t}`));\n\tadd(new RawFunc(\"__helios__real__ceil\",\n\t`(self) -> {\n\t\t() -> {\n\t\t\t__core__divideInteger(\n\t\t\t\t__core__addInteger(self, __helios__real__NEARLY_ONE),\n\t\t\t\t__helios__real__ONE\n\t\t\t)\n\t\t}\n\t}`));\n\tadd(new RawFunc(\"__helios__real__round\",\n\t`(self) -> {\n\t\t() -> {\n\t\t\t__core__divideInteger(\n\t\t\t\t__core__addInteger(self, __helios__real__HALF),\n\t\t\t\t__helios__real__ONE\n\t\t\t)\n\t\t}\n\t}`));\n\tadd(new RawFunc(\"__helios__real__show\",\n\t`(self) -> {\n\t\t() -> {\n\t\t\t__helios__string____add(\n\t\t\t\t__helios__string____add(\n\t\t\t\t\t__core__ifThenElse(__core__lessThanInteger(self, 0), \"-\", \"\"),\n\t\t\t\t\t__helios__int__show(\n\t\t\t\t\t\t__helios__real__floor(\n\t\t\t\t\t\t\t__helios__real__abs(self)()\n\t\t\t\t\t\t)()\n\t\t\t\t\t)()\n\t\t\t\t),\n\t\t\t\t__helios__string____add(\n\t\t\t\t\t\".\",\n\t\t\t\t\t__core__decodeUtf8(\n\t\t\t\t\t\t__helios__int__show_padded(\n\t\t\t\t\t\t\t__helios__int____mod(self, __helios__real__ONE),\n\t\t\t\t\t\t\t__helios__real__PRECISION\n\t\t\t\t\t\t)\n\t\t\t\t\t)\n\t\t\t\t)\n\t\t\t)\n\t\t}\n\t}`));\n\n\n\t// Bool builtins\n\taddSerializeFunc(\"__helios__bool\");\n\tadd(new RawFunc(\"__helios__bool__test_data\",\n\t`(data) -> {\n\t\t__core__chooseData(\n\t\t\tdata,\n\t\t\t() -> {\n\t\t\t\t(pair) -> {\n\t\t\t\t\t(index, fields) -> {\n\t\t\t\t\t\t__core__chooseList(\n\t\t\t\t\t\t\tfields,\n\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t__core__ifThenElse(\n\t\t\t\t\t\t\t\t\t__core__equalsInteger(0, index),\n\t\t\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t\t\ttrue\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t\t\t__core__ifThenElse(\n\t\t\t\t\t\t\t\t\t\t\t__core__equalsInteger(1, index),\n\t\t\t\t\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t\t\t\t\ttrue\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t\t\t\t\tfalse\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t)()\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t)()\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\tfalse\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t)()\n\t\t\t\t\t}(__core__fstPair(pair), __core__sndPair(pair))\n\t\t\t\t\t\n\t\t\t\t}(__core__unConstrData__safe(data))\n\t\t\t},\n\t\t\t() -> {false},\n\t\t\t() -> {false},\n\t\t\t() -> {false},\n\t\t\t() -> {false}\n\t\t)()\n\t}`));\n\tadd(new RawFunc(\"__helios__bool____eq\", \n\t`(a, b) -> {\n\t\t__core__ifThenElse(a, b, __helios__bool____not(b))\n\t}`));\n\tadd(new RawFunc(\"__helios__bool____neq\",\n\t`(a, b) -> {\n\t\t__core__ifThenElse(a, __helios__bool____not(b), b)\n\t}`));\n\t// TODO: optimize this drastically by simply returning the comparison to 1\n\tadd(new RawFunc(\"__helios__bool__from_data\", \n\t`(d) -> {\n\t\t__core__ifThenElse(\n\t\t\t__core__equalsInteger(__core__fstPair(__core__unConstrData(d)), 0), \n\t\t\tfalse, \n\t\t\ttrue\n\t\t)\n\t}`));\n\tadd(new RawFunc(\"__helios__bool__from_data_safe\",\n\t`(data) -> {\n\t\t__core__chooseData(\n\t\t\tdata,\n\t\t\t() -> {\n\t\t\t\t__helios__option__SOME_FUNC(\n\t\t\t\t\t__core__equalsInteger(\n\t\t\t\t\t\t__core__fstPair(\n\t\t\t\t\t\t\t__core__unConstrData__safe(data)\n\t\t\t\t\t\t),\n\t\t\t\t\t\t1\n\t\t\t\t\t)\n\t\t\t\t)\n\t\t\t},\n\t\t\t() -> {__helios__option__NONE_FUNC},\n\t\t\t() -> {__helios__option__NONE_FUNC},\n\t\t\t() -> {__helios__option__NONE_FUNC},\n\t\t\t() -> {__helios__option__NONE_FUNC}\n\t\t)()\n\t}`));\n\tadd(new RawFunc(\"__helios__bool____to_data\",  \n\t`(b) -> {\n\t\t__core__constrData(__core__ifThenElse(b, 1, 0), __helios__common__list_0)\n\t}`));\n\tadd(new RawFunc(\"__helios__bool__and\",\n\t`(a, b) -> {\n\t\t__core__ifThenElse(\n\t\t\ta(), \n\t\t\t() -> {b()}, \n\t\t\t() -> {false}\n\t\t)()\n\t}`));\n\tadd(new RawFunc(\"__helios__bool__or\",\n\t`(a, b) -> {\n\t\t__core__ifThenElse(\n\t\t\ta(), \n\t\t\t() -> {true},\n\t\t\t() -> {b()}\n\t\t)()\n\t}`));\n\tadd(new RawFunc(\"__helios__bool____not\", \n\t`(b) -> {\n\t\t__core__ifThenElse(b, false, true)\n\t}`));\n\tadd(new RawFunc(\"__helios__bool__to_int\",\n\t`(self) -> {\n\t\t() -> {\n\t\t\t__core__ifThenElse(self, 1, 0)\n\t\t}\n\t}`));\n\tadd(new RawFunc(\"__helios__bool__show\",\n\t`(self) -> {\n\t\t() -> {\n\t\t\t__core__ifThenElse(self, \"true\", \"false\")\n\t\t}\n\t}`));\n\tadd(new RawFunc(\"__helios__bool__trace\",\n\t`(self) -> {\n\t\t(prefix) -> {\n\t\t\t__core__trace(\n\t\t\t\t__helios__string____add(\n\t\t\t\t\tprefix,\n\t\t\t\t\t__helios__bool__show(self)()\n\t\t\t\t), \n\t\t\t\tself\n\t\t\t)\n\t\t}\n\t}`));\n\tadd(new RawFunc(\"__helios__bool__trace_if_false\",\n\t`(self) -> {\n\t\t(msg) -> {\n\t\t\t__core__ifThenElse(\n\t\t\t\tself,\n\t\t\t\t() -> {\n\t\t\t\t\tself\n\t\t\t\t},\n\t\t\t\t() -> {\n\t\t\t\t\t__core__trace(msg, self)\n\t\t\t\t}\n\t\t\t)()\n\t\t}\n\t}`));\n\tadd(new RawFunc(\"__helios__bool__trace_if_true\",\n\t`(self) -> {\n\t\t(msg) -> {\n\t\t\t__core__ifThenElse(\n\t\t\t\tself,\n\t\t\t\t() -> {\n\t\t\t\t\t__core__trace(msg, self)\n\t\t\t\t},\n\t\t\t\t() -> {\n\t\t\t\t\tself\n\t\t\t\t}\n\t\t\t)()\n\t\t}\n\t}`));\n\n\n\t// String builtins\n\taddSerializeFunc(\"__helios__string\");\n\taddNeqFunc(\"__helios__string\");\n\tadd(new RawFunc(\"__helios__string____eq\", \"__core__equalsString\"));\n\tadd(new RawFunc(\"__helios__string__from_data\", \n\t`(d) -> {\n\t\t__core__decodeUtf8(__core__unBData(d))\n\t}`));\n\tadd(new RawFunc(\"__helios__string__from_data_safe\",\n\t`(data) -> {\n\t\t__core__chooseData(\n\t\t\tdata,\n\t\t\t() -> {__helios__option__NONE_FUNC},\n\t\t\t() -> {__helios__option__NONE_FUNC},\n\t\t\t() -> {__helios__option__NONE_FUNC},\n\t\t\t() -> {__helios__option__NONE_FUNC},\n\t\t\t() -> {\n\t\t\t\t(bytes) -> {\n\t\t\t\t\t__core__ifThenElse(\n\t\t\t\t\t\t__helios__string__is_valid_utf8(bytes),\n\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t__helios__option__SOME_FUNC(__core__decodeUtf8__safe(bytes))\n\t\t\t\t\t\t},\n\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t__helios__option__NONE_FUNC\n\t\t\t\t\t\t}\n\t\t\t\t\t)()\n\t\t\t\t}(__core__unBData__safe(data))\n\t\t\t\t\n\t\t\t},\n\t\t)()\n\t}`));\n\tadd(new RawFunc(\"__helios__string__show\", \n\t`(self) -> {\n\t\t() -> {\n\t\t\t__core__appendString(\n\t\t\t\t\"'\",\n\t\t\t\t__core__appendString(\n\t\t\t\t\tself,\n\t\t\t\t\t\"'\"\n\t\t\t\t)\n\t\t\t)\n\t\t}\n\t}`));\n\tadd(new RawFunc(\"__helios__string__parse_utf8_cont_byte\",\n\t`(byte, callback) -> {\n\t\t__core__ifThenElse(\n\t\t\t__core__equalsInteger(__core__divideInteger(byte, 64), 2),\n\t\t\t() -> {\n\t\t\t\tcallback(true, __core__modInteger(byte, 64))\n\t\t\t},\n\t\t\t() -> {\n\t\t\t\tcallback(false, 0)\n\t\t\t}\n\t\t)()\n\t}`));\n\tadd(new RawFunc(\"__helios__string__is_valid_utf8\",\n\t`(bytes) -> {\n\t\t(n) -> {\n\t\t\t(recurse) -> {\n\t\t\t\trecurse(recurse, 0)\n\t\t\t}(\n\t\t\t\t(recurse, i) -> {\n\t\t\t\t\t__core__ifThenElse(\n\t\t\t\t\t\t__core__equalsInteger(i, n),\n\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\ttrue\n\t\t\t\t\t\t},\n\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t(b0) -> {\n\t\t\t\t\t\t\t\t__core__ifThenElse(\n\t\t\t\t\t\t\t\t\t__core__lessThanEqualsInteger(b0, 127),\n\t\t\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t\t\trecurse(recurse, __core__addInteger(i, 1))\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t\t\t__core__ifThenElse(\n\t\t\t\t\t\t\t\t\t\t\t__core__equalsInteger(__core__divideInteger(b0, 32), 6),\n\t\t\t\t\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t\t\t\t\t(inext) -> {\n\t\t\t\t\t\t\t\t\t\t\t\t\t__core__ifThenElse(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t__core__lessThanEqualsInteger(inext, n),\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t__helios__string__parse_utf8_cont_byte(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t__core__indexByteString(bytes, __core__addInteger(i, 1)), \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(valid, c1) -> {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t__core__ifThenElse(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalid,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(c) -> {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t__core__ifThenElse(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t__helios__bool__and(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t() -> {__core__lessThanEqualsInteger(128, c)},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t() -> {__core__lessThanEqualsInteger(c, 2047)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trecurse(recurse, inext)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfalse\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)()\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t__core__addInteger(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t__core__multiplyInteger(__core__modInteger(b0, 32), 64),\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tc1\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfalse\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)()\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfalse\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t)()\n\t\t\t\t\t\t\t\t\t\t\t\t}(__core__addInteger(i, 2))\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t\t\t\t\t__core__ifThenElse(\n\t\t\t\t\t\t\t\t\t\t\t\t\t__core__equalsInteger(__core__divideInteger(b0, 16), 14),\n\t\t\t\t\t\t\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(inext) -> {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t__core__ifThenElse(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t__core__lessThanEqualsInteger(inext, n),\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t__helios__string__parse_utf8_cont_byte(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t__core__indexByteString(bytes, __core__addInteger(i, 1)),\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(valid, c1) -> {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t__core__ifThenElse(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalid,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t__helios__string__parse_utf8_cont_byte(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t__core__indexByteString(bytes, __core__addInteger(i, 2)),\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(valid, c2) -> {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t__core__ifThenElse(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalid,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(c) -> {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t__core__ifThenElse(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t__helios__bool__and(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t() -> {__core__lessThanEqualsInteger(2048, c)},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t() -> {__core__lessThanEqualsInteger(c, 65535)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trecurse(recurse, inext)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfalse\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)()\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t__core__addInteger(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t__core__multiplyInteger(__core__modInteger(b0, 16), 4096),\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t__core__addInteger(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t__core__multiplyInteger(c1, 64),\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tc2\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfalse\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)()\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfalse\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)()\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfalse\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)()\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}(__core__addInteger(i, 3))\n\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t__core__ifThenElse(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t__core__equalsInteger(__core__divideInteger(b0, 8), 30),\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(inext) -> {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t__core__ifThenElse(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t__core__lessThanEqualsInteger(inext, n),\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t__helios__string__parse_utf8_cont_byte(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t__core__indexByteString(bytes, __core__addInteger(i, 1)),\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(valid, c1) -> {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t__core__ifThenElse(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalid,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t__helios__string__parse_utf8_cont_byte(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t__core__indexByteString(bytes, __core__addInteger(i, 2)),\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(valid, c2) -> {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t__core__ifThenElse(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalid,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t__helios__string__parse_utf8_cont_byte(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t__core__indexByteString(bytes, __core__addInteger(i, 3)),\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(valid, c3) -> {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t__core__ifThenElse(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalid,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(c) -> {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t__core__ifThenElse(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t__helios__bool__and(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t() -> {__core__lessThanEqualsInteger(65536, c)},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t() -> {__core__lessThanEqualsInteger(c, 2097151)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trecurse(recurse, inext)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfalse\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)()\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t__core__addInteger(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t__core__multiplyInteger(__core__modInteger(b0, 8), 262144),\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t__core__addInteger(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t__core__multiplyInteger(c1, 4096),\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t__core__addInteger(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t__core__multiplyInteger(c2, 64),\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tc3\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfalse\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)()\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfalse\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)()\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfalse\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)()\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfalse\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)()\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}(__core__addInteger(i, 4))\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfalse\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t)()\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t)()\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t)()\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t)()\n\t\t\t\t\t\t\t}(__core__indexByteString(bytes, i))\n\t\t\t\t\t\t}\n\t\t\t\t\t)()\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t)\n\t\t}(__core__lengthOfByteString(bytes))\n\t}`));\n\tadd(new RawFunc(\"__helios__string__test_data\",\n\t`(data) -> {\n\t\t__core__chooseData(\n\t\t\tdata, \n\t\t\t() -> {false}, \n\t\t\t() -> {false},\n\t\t\t() -> {false},\n\t\t\t() -> {false},\n\t\t\t() -> {\n\t\t\t\t__helios__string__is_valid_utf8(__core__unBData__safe(data))\n\t\t\t}\n\t\t)()\n\t}`));\n\tadd(new RawFunc(\"__helios__string____to_data\", \n\t`(s) -> {\n\t\t__core__bData(__core__encodeUtf8(s))\n\t}`));\n\tadd(new RawFunc(\"__helios__string____add\", \"__core__appendString\"));\n\tadd(new RawFunc(\"__helios__string__starts_with\", \n\t`(self) -> {\n\t\t(prefix) -> {\n\t\t\t__helios__bytearray__starts_with(\n\t\t\t\t__core__encodeUtf8(self)\n\t\t\t)(__core__encodeUtf8(prefix))\n\t\t}\n\t}`));\n\tadd(new RawFunc(\"__helios__string__ends_with\", \n\t`(self) -> {\n\t\t(suffix) -> {\n\t\t\t__helios__bytearray__ends_with(\n\t\t\t\t__core__encodeUtf8(self)\n\t\t\t)(__core__encodeUtf8(suffix))\n\t\t}\n\t}`));\n\tadd(new RawFunc(\"__helios__string__encode_utf8\",\n\t`(self) -> {\n\t\t() -> {\n\t\t\t__core__encodeUtf8(self)\n\t\t}\n\t}`));\n\n\n\t// ByteArray builtins\n\taddSerializeFunc(\"__helios__bytearray\");\n\taddNeqFunc(\"__helios__bytearray\");\n\tadd(new RawFunc(\"__helios__bytearray__parse\",\n\t`(string) -> {\n\t\t(hex) -> {\n\t\t\t(i) -> {\n\t\t\t\t(recurse) -> {\n\t\t\t\t\trecurse(recurse, #, i)\n\t\t\t\t}(\n\t\t\t\t\t(recurse, tail, i) -> {\n\t\t\t\t\t\t__core__ifThenElse(\n\t\t\t\t\t\t\t__core__equalsInteger(i, -1),\n\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\ttail\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t(byte) -> {\n\t\t\t\t\t\t\t\t\trecurse(\n\t\t\t\t\t\t\t\t\t\trecurse, \n\t\t\t\t\t\t\t\t\t\t__core__consByteString(byte, tail), \n\t\t\t\t\t\t\t\t\t\t__core__subtractInteger(i, 2)\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t}(\n\t\t\t\t\t\t\t\t\t__core__addInteger(\n\t\t\t\t\t\t\t\t\t\t__helios__int__parse_hex_digit(__core__indexByteString(hex, i)),\n\t\t\t\t\t\t\t\t\t\t__core__multiplyInteger(\n\t\t\t\t\t\t\t\t\t\t\t16,\n\t\t\t\t\t\t\t\t\t\t\t__helios__int__parse_hex_digit(__core__indexByteString(hex, __core__subtractInteger(i, 1)))\n\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t)\t\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t)()\n\t\t\t\t\t}\n\t\t\t\t)\n\t\t\t}(__core__subtractInteger(__core__lengthOfByteString(hex), 1))\n\t\t}(__core__encodeUtf8(string))\n\t}`));\n\tadd(new RawFunc(\"__helios__bytearray____eq\", \"__core__equalsByteString\"));\n\tadd(new RawFunc(\"__helios__bytearray__from_data\", \"__core__unBData\"));\n\tadd(new RawFunc(\"__helios__bytearray__from_data_safe\",\n\t`(data) -> {\n\t\t__core__chooseData(\n\t\t\tdata,\n\t\t\t() -> {__helios__option__NONE_FUNC},\n\t\t\t() -> {__helios__option__NONE_FUNC},\n\t\t\t() -> {__helios__option__NONE_FUNC},\n\t\t\t() -> {__helios__option__NONE_FUNC},\n\t\t\t() -> {__helios__option__SOME_FUNC(__core__unBData__safe(data))}\n\t\t)()\n\t}`));\n\tadd(new RawFunc(\"__helios__bytearray__test_data\",\n\t`(data) -> {\n\t\t__core__chooseData(data, false, false, false, false, true)\n\t}`));\n\tadd(new RawFunc(`__helios__bytearray__test_data_fixed_length`,\n\t`(data, n) -> {\n\t\t__core__chooseData(\n\t\t\tdata,\n\t\t\t() -> {false},\n\t\t\t() -> {false},\n\t\t\t() -> {false},\n\t\t\t() -> {false},\n\t\t\t() -> {\n\t\t\t\t(bytes) -> {\n\t\t\t\t\t__core__ifThenElse(\n\t\t\t\t\t\t__core__equalsInteger(__core__lengthOfByteString(bytes), n),\n\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\ttrue\n\t\t\t\t\t\t},\n\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\tfalse\n\t\t\t\t\t\t}\n\t\t\t\t\t)()\n\t\t\t\t}(__core__unBData__safe(data))\n\t\t\t}\n\t\t)()\n\t}`));\n\tadd(new RawFunc(\"__helios__bytearray____to_data\", \"__core__bData\"));\n\tadd(new RawFunc(\"__helios__bytearray____add\", \"__core__appendByteString\"));\n\tadd(new RawFunc(\"__helios__bytearray____geq\",\n\t`(a, b) -> {\n\t\t__helios__bool____not(__core__lessThanByteString(a, b))\n\t}`));\n\tadd(new RawFunc(\"__helios__bytearray____gt\",\n\t`(a, b) -> {\n\t\t__helios__bool____not(__core__lessThanEqualsByteString(a, b))\n\t}`));\n\tadd(new RawFunc(\"__helios__bytearray____leq\", \"__core__lessThanEqualsByteString\"));\n\tadd(new RawFunc(\"__helios__bytearray____lt\", \"__core__lessThanByteString\"));\n\tadd(new RawFunc(\"__helios__bytearray__length\", \"__core__lengthOfByteString\"));\n\tadd(new RawFunc(\"__helios__bytearray__slice\",\n\t`(self) -> {\n\t\t__helios__common__slice_bytearray(self, __core__lengthOfByteString)\n\t}`));\n\tadd(new RawFunc(\"__helios__bytearray__starts_with\", \n\t`(self) -> {\n\t\t__helios__common__starts_with(self, __core__lengthOfByteString)\n\t}`));\n\tadd(new RawFunc(\"__helios__bytearray__ends_with\",\n\t`(self) -> {\n\t\t__helios__common__ends_with(self, __core__lengthOfByteString)\n\t}`));\n\tadd(new RawFunc(\"__helios__bytearray__prepend\", \n\t`(self) -> {\n\t\t(byte) -> {\n\t\t\t__core__consByteString(byte, self)\n\t\t}\n\t}`));\n\tadd(new RawFunc(\"__helios__bytearray__sha2\",\n\t`(self) -> {\n\t\t() -> {\n\t\t\t__core__sha2_256(self)\n\t\t}\n\t}`));\n\tadd(new RawFunc(\"__helios__bytearray__sha3\",\n\t`(self) -> {\n\t\t() -> {\n\t\t\t__core__sha3_256(self)\n\t\t}\n\t}`));\n\tadd(new RawFunc(\"__helios__bytearray__blake2b\",\n\t`(self) -> {\n\t\t() -> {\n\t\t\t__core__blake2b_256(self)\n\t\t}\n\t}`));\n\tadd(new RawFunc(\"__helios__bytearray__decode_utf8\",\n\t`(self) -> {\n\t\t() -> {\n\t\t\t__core__decodeUtf8(self)\n\t\t}\n\t}`));\n\tadd(new RawFunc(\"__helios__bytearray__show\",\n\t`(self) -> {\n\t\t() -> {\n\t\t\t(recurse) -> {\n\t\t\t\trecurse(recurse, self)\n\t\t\t}(\n\t\t\t\t(recurse, self) -> {\n\t\t\t\t\t(n) -> {\n\t\t\t\t\t\t__core__ifThenElse(\n\t\t\t\t\t\t\t__core__lessThanInteger(0, n),\n\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t__core__appendString(\n\t\t\t\t\t\t\t\t\t__core__decodeUtf8__safe(\n\t\t\t\t\t\t\t\t\t\t(hexBytes) -> {\n\t\t\t\t\t\t\t\t\t\t\t__core__ifThenElse(\n\t\t\t\t\t\t\t\t\t\t\t\t__core__equalsInteger(__core__lengthOfByteString(hexBytes), 1),\n\t\t\t\t\t\t\t\t\t\t\t\t__core__consByteString(48, hexBytes),\n\t\t\t\t\t\t\t\t\t\t\t\thexBytes\n\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t}(\n\t\t\t\t\t\t\t\t\t\t\t__core__encodeUtf8(\n\t\t\t\t\t\t\t\t\t\t\t\t__helios__int__to_hex(\n\t\t\t\t\t\t\t\t\t\t\t\t\t__core__indexByteString__safe(self, 0)\n\t\t\t\t\t\t\t\t\t\t\t\t)()\n\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t), \n\t\t\t\t\t\t\t\t\trecurse(recurse, __core__sliceByteString(1, n, self))\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t\"\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t)()\n\t\t\t\t\t}(__core__lengthOfByteString(self))\n\t\t\t\t}\n\t\t\t)\n\t\t}\n\t}`));\n\n\n\t// Iterator builtins (lazy lists)\n\t// many iterator methods must be generated for different number of arguments\n\tfor (let n = 1; n <= 10; n++) {\n\t\tconst basePath = `__helios__iterator__${n}`;\n\t\tconst head = (new Array(n)).fill(\"\").map((_, i) => `head${i}`).join(\", \");\n\t\tconst unit = (new Array(n)).fill(\"\").map((_, i) => \"()\").join(\", \");\n\t\tconst returnHead = n == 1 ? `${head}` : `(callback) -> {callback(${head})}`;\n\n\t\tadd(new RawFunc(`${basePath}__drop`,\n\t`(self) -> {\n\t\t(n) -> {\n\t\t\t(recurse) -> {\n\t\t\t\trecurse(recurse, self, n)\n\t\t\t}(\n\t\t\t\t(recurse, iterator, i) -> {\n\t\t\t\t\t__core__ifThenElse(\n\t\t\t\t\t\t__core__lessThanEqualsInteger(i, 0),\n\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\titerator\n\t\t\t\t\t\t},\n\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\titerator(\n\t\t\t\t\t\t\t\t(is_null, ${head}, next_iterator) -> {\n\t\t\t\t\t\t\t\t\t__core__ifThenElse(\n\t\t\t\t\t\t\t\t\t\tis_null,\n\t\t\t\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t\t\t\titerator\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t\t\t\trecurse(recurse, next_iterator, __core__subtractInteger(i, 1))\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t)()\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t}\n\t\t\t\t\t)()\n\t\t\t\t}\n\t\t\t)\n\t\t}\n\t}`\n\t\t));\n\n\t\tadd(new RawFunc(`${basePath}__is_empty`,\n\t`(self) -> {\n\t\t() -> {\n\t\t\tself(\n\t\t\t\t(is_null, ${head}, next_iterator) -> {\n\t\t\t\t\tis_null\n\t\t\t\t}\n\t\t\t)\n\t\t}\n\t}`\n\t\t));\n\n\t\tadd(new RawFunc(`${basePath}__head`,\n\t`(self) -> {\n\t\tself(\n\t\t\t(is_null, ${head}, next_iterator) -> {\n\t\t\t\t${returnHead}\n\t\t\t}\n\t\t)\n\t}`\n\t\t));\n\n\t\tadd(new RawFunc(`${basePath}__tail`,\n\t`(self) -> {\n\t\tself(\n\t\t\t(is_null, ${head}, next_iterator) -> {\n\t\t\t\tnext_iterator\n\t\t\t}\n\t\t)\n\t}`\n\t\t));\n\n\t\tadd(new RawFunc(`${basePath}__get`,\n\t`(self) -> {\n\t\t(i) -> {\n\t\t\t__core__ifThenElse(\n\t\t\t\t__core__lessThanInteger(i, 0),\n\t\t\t\t() -> {\n\t\t\t\t\t__helios__error(\"negative index in iterator.get()\")\n\t\t\t\t},\n\t\t\t\t() -> {\n\t\t\t\t\t(recurse) -> {\n\t\t\t\t\t\trecurse(recurse, self, i)\n\t\t\t\t\t}(\n\t\t\t\t\t\t(recurse, iterator, i) -> {\n\t\t\t\t\t\t\titerator(\n\t\t\t\t\t\t\t\t(is_null, ${head}, next_iterator) -> {\n\t\t\t\t\t\t\t\t\t__core__ifThenElse(\n\t\t\t\t\t\t\t\t\t\tis_null,\n\t\t\t\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t\t\t\t__helios__error(\"index out of range\")\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t\t\t\t__core__ifThenElse(\n\t\t\t\t\t\t\t\t\t\t\t\t__core__equalsInteger(i, 0),\n\t\t\t\t\t\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t\t\t\t\t\t${returnHead}\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t\t\t\t\t\trecurse(recurse, next_iterator, __core__subtractInteger(i, 1))\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t)()\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t)()\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t}\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t)()\n\t\t}\n\t}`\n\t\t));\n\n\t\tadd(new RawFunc(`${basePath}__get_singleton`,\n\t`(self) -> {\n\t\t() -> {\n\t\t\tself(\n\t\t\t\t(is_null, ${head}, next_iterator) -> {\n\t\t\t\t\t__core__ifThenElse(\n\t\t\t\t\t\tis_null,\n\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t__helios__error(\"empty iterator, not a singleton\")\n\t\t\t\t\t\t},\n\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t__core__ifThenElse(\n\t\t\t\t\t\t\t\t${basePath}__is_empty(next_iterator)(),\n\t\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t\t${returnHead}\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t\t__helios__error(\"not a singleton iterator\")\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t)()\n\t\t\t\t\t\t}\n\t\t\t\t\t)()\n\t\t\t\t}\n\t\t\t)\n\t\t}\n\t}`));\n\n\t\tadd(new RawFunc(`${basePath}__take`,\n\t`(self) -> {\n\t\t(n) -> {\n\t\t\t(recurse) -> {\n\t\t\t\trecurse(recurse, self, n)\n\t\t\t}(\n\t\t\t\t(recurse, iterator, i) -> {\n\t\t\t\t\t__core__ifThenElse(\n\t\t\t\t\t\t__core__lessThanEqualsInteger(i, 0),\n\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t(callback) -> {\n\t\t\t\t\t\t\t\tcallback(true, ${unit}, ())\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\titerator(\n\t\t\t\t\t\t\t\t(is_null, ${head}, next_iterator) -> {\n\t\t\t\t\t\t\t\t\t__core__ifThenElse(\n\t\t\t\t\t\t\t\t\t\tis_null,\n\t\t\t\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t\t\t\titerator\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t\t\t\t(callback) -> {\n\t\t\t\t\t\t\t\t\t\t\t\tcallback(false, ${head}, recurse(recurse, next_iterator, __core__subtractInteger(i, 1)))\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t)()\t\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t}\n\t\t\t\t\t)()\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t)\n\t\t}\n\t}`\n\t\t));\n\n\t\tadd(new RawFunc(`${basePath}__for_each`,\n\t`(self) -> {\n\t\t(fn) -> {\n\t\t\t(recurse) -> {\n\t\t\t\trecurse(recurse, self)\n\t\t\t}(\n\t\t\t\t(recurse, iterator) -> {\n\t\t\t\t\titerator(\n\t\t\t\t\t\t(is_null, ${head}, next_iterator) -> {\n\t\t\t\t\t\t\t__core__ifThenElse(\n\t\t\t\t\t\t\t\tis_null,\n\t\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t\t()\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t\t__core__chooseUnit(\n\t\t\t\t\t\t\t\t\t\tfn(${head}),\n\t\t\t\t\t\t\t\t\t\trecurse(recurse, next_iterator)\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t)()\n\t\t\t\t\t\t}\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t)\n\t\t}\n\t}`\n\t\t));\n\n\t\tadd(new RawFunc(`${basePath}__fold[${FTPP}0]`,\n\t`(self) -> {\n\t\t(fn, z0) -> {\n\t\t\t(recurse) -> {\n\t\t\t\trecurse(recurse, self, z0)\n\t\t\t}(\n\t\t\t\t(recurse, iterator, z) -> {\n\t\t\t\t\titerator(\n\t\t\t\t\t\t(is_null, ${head}, next_iterator) -> {\n\t\t\t\t\t\t\t__core__ifThenElse(\n\t\t\t\t\t\t\t\tis_null,\n\t\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t\tz\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t\trecurse(recurse, next_iterator, fn(z, ${head}))\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t)()\n\t\t\t\t\t\t}\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t)\n\t\t}\n\t}`\n\t\t));\n\n\t\tadd(new RawFunc(`${basePath}__find`,\n\t`(self) -> {\n\t\t(fn) -> {\n\t\t\t(recurse) -> {\n\t\t\t\trecurse(recurse, self)\n\t\t\t}(\n\t\t\t\t(recurse, iterator) -> {\n\t\t\t\t\titerator(\n\t\t\t\t\t\t(is_null, ${head}, next_iterator) -> {\n\t\t\t\t\t\t\t__core__ifThenElse(\n\t\t\t\t\t\t\t\tis_null,\n\t\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t\t__helios__error(\"not found\")\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t\t__core__ifThenElse(\n\t\t\t\t\t\t\t\t\t\tfn(${head}),\n\t\t\t\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t\t\t\t${returnHead}\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t\t\t\trecurse(recurse, next_iterator)\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t)()\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t)()\n\t\t\t\t\t\t}\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t)\n\t\t}\n\t}`\n\t\t));\n\n\t\tadd(new RawFunc(`${basePath}__any`,\n\t`(self) -> {\n\t\t(fn) -> {\n\t\t\t(recurse) -> {\n\t\t\t\trecurse(recurse, self)\n\t\t\t}(\n\t\t\t\t(recurse, iterator) -> {\n\t\t\t\t\titerator(\n\t\t\t\t\t\t(is_null, ${head}, next_iterator) -> {\n\t\t\t\t\t\t\t__core__ifThenElse(\n\t\t\t\t\t\t\t\tis_null,\n\t\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t\tfalse\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t\t__core__ifThenElse(\n\t\t\t\t\t\t\t\t\t\tfn(${head}),\n\t\t\t\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t\t\t\ttrue\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t\t\t\trecurse(recurse, next_iterator)\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t)()\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t)()\n\t\t\t\t\t\t}\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t)\n\t\t}\n\t}`\n\t\t));\n\n\t\tadd(new RawFunc(`${basePath}__prepend`,\n\t`(self) -> {\n\t\t(${head}) -> {\n\t\t\t(callback) -> {\n\t\t\t\tcallback(false, ${head}, self)\n\t\t\t}\n\t\t}\n\t}`\n\t\t));\n\n\t\tadd(new RawFunc(`${basePath}__filter`,\n\t`(self) -> {\n\t\t(fn) -> {\n\t\t\t(recurse) -> {\n\t\t\t\trecurse(recurse, self)\n\t\t\t}(\n\t\t\t\t(recurse, iterator) -> {\n\t\t\t\t\titerator(\n\t\t\t\t\t\t(is_null, ${head}, next_iterator) -> {\n\t\t\t\t\t\t\t(callback) -> {\n\t\t\t\t\t\t\t\t__core__ifThenElse(\n\t\t\t\t\t\t\t\t\tis_null,\n\t\t\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t\t\tcallback(true, ${unit}, ())\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t\t\t__core__ifThenElse(\n\t\t\t\t\t\t\t\t\t\t\tfn(${head}),\n\t\t\t\t\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t\t\t\t\tcallback(false, ${head}, recurse(recurse, next_iterator))\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t\t\t\t\trecurse(recurse, next_iterator)(callback)\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t)()\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t)()\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t)\n\t\t}\n\t}`\n\t\t));\n\t\tadd(new RawFunc(`${basePath}__map[${FTPP}0]`,\n\t`(self) -> {\n\t\t(fn) -> {\n\t\t\t(recurse) -> {\n\t\t\t\trecurse(recurse, self)\n\t\t\t}(\n\t\t\t\t(recurse, iterator) -> {\n\t\t\t\t\titerator(\n\t\t\t\t\t\t(is_null, ${head}, next_iterator) -> {\n\t\t\t\t\t\t\t(callback) -> {\n\t\t\t\t\t\t\t\t__core__ifThenElse(\n\t\t\t\t\t\t\t\t\tis_null,\n\t\t\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t\t\tcallback(true, (), ())\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t\t\tcallback(false, fn(${head}), recurse(recurse, next_iterator))\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t)()\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t)\n\t\t}\n\t}`\n\t\t));\n\t\tadd(new RawFunc(`${basePath}__map2[${FTPP}0@${FTPP}1]`,\n\t`(self) -> {\n\t\t(fn) -> {\n\t\t\t(recurse) -> {\n\t\t\t\trecurse(recurse, self)\n\t\t\t}(\n\t\t\t\t(recurse, iterator) -> {\n\t\t\t\t\titerator(\n\t\t\t\t\t\t(is_null, ${head}, next_iterator) -> {\n\t\t\t\t\t\t\t(callback) -> {\n\t\t\t\t\t\t\t\t__core__ifThenElse(\n\t\t\t\t\t\t\t\t\tis_null,\n\t\t\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t\t\tcallback(true, (), (), ())\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t\t\tfn(${head})(\n\t\t\t\t\t\t\t\t\t\t\t(new_head0, new_head1) -> {\n\t\t\t\t\t\t\t\t\t\t\t\tcallback(false, new_head0, new_head1, recurse(recurse, next_iterator))\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t)()\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t)\n\t\t}\n\t}`\n\t\t));\n\t\tadd(new RawFunc(`${basePath}__zip[${FTPP}0]`,\n\t`(self) -> {\n\t\t(lst) -> {\n\t\t\t(recurse, self, lst) -> {\n\t\t\t\trecurse(recurse, self, lst)\n\t\t\t}(\n\t\t\t\t(recurse, iterator, lst) -> {\n\t\t\t\t\titerator(\n\t\t\t\t\t\t(is_null, ${head}, next_iterator) -> {\n\t\t\t\t\t\t\t__core__ifThenElse(\n\t\t\t\t\t\t\t\tis_null,\n\t\t\t\t\t\t\t\t(callback) -> {\n\t\t\t\t\t\t\t\t\tcallback(true, ${unit}, (), ())\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t(callback) -> {\n\t\t\t\t\t\t\t\t\t__core__chooseList(\n\t\t\t\t\t\t\t\t\t\tlst,\n\t\t\t\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t\t\t\tcallback(true, ${unit}, (), ())\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t\t\t\tcallback(\n\t\t\t\t\t\t\t\t\t\t\t\tfalse,\n\t\t\t\t\t\t\t\t\t\t\t\t${head},\n\t\t\t\t\t\t\t\t\t\t\t\t${FTPP}0__from_data(__core__headList__safe(lst)),\n\t\t\t\t\t\t\t\t\t\t\t\trecurse(recurse, next_iterator, __core__tailList__safe(lst))\n\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t)()\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t}\n\t\t\t\t\t)\t\n\t\t\t\t}\n\t\t\t)\n\t\t}\n\t}`\n\t\t));\n\t}\n\n\n\t// Struct (list of data, which is used by structs which have more than 1 field, otherwise the internal of that single field is used directly)\n\taddSerializeFunc(\"__helios__struct\");\n\taddNeqFunc(\"__helios__struct\");\n\taddDataLikeEqFunc(\"__helios__struct\");\n\tadd(new RawFunc(\"__helios__struct__from_data\", \"__core__unListData\"));\n\tadd(new RawFunc(\"__helios__struct____to_data\", \"__core__listData\"));\n\n\n\t// Tuple builtins\n\tadd(new RawFunc(\"__helios__tuple[]____to_func\", (ttp) => `__helios__common__identity`));\n\tadd(new RawFunc(\"__helios__tuple[]__from_data\", (ttp) => {\n\t\tassert(ttp.length >= 2);\n\n\t\treturn `(data) -> {\n\t\t\t(fields) -> {\n\t\t\t\t(callback) -> {\n\t\t\t\t\tcallback(${ttp.map((tp, i) => {\n\t\t\t\t\t\tlet inner = \"fields\";\n\n\t\t\t\t\t\tfor (let j = 0; j < i; j++) {\n\t\t\t\t\t\t\tinner = `__core__tailList(${inner})`\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn `${tp}__from_data(__core__headList(${inner}))`;\n\t\t\t\t\t}).join(\", \")})\n\t\t\t\t}\n\t\t\t}(__core__unListData(data))\n\t\t}`;\n\t}));\n\tadd(new RawFunc(\"__helios__tuple[]__from_data_safe\", (ttp) => {\n\t\tassert(ttp.length >= 2);\n\n\t\tlet inner = `__helios__option__SOME_FUNC(\n\t\t\t(callback) -> {\n\t\t\t\tcallback(${ttp.map((_, i) => `opt${i}`).join(\", \")})\n\t\t\t}\n\t\t}`;\n\n\t\tfor (let i = ttp.length - 1; i >= 0; i--) {\n\t\t\tinner = `opt${i}(\n\t\t\t\t(valid, value${i}) -> {\n\t\t\t\t\t__core__ifThenElse(\n\t\t\t\t\t\tvalid,\n\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t${inner}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t__helios__option__NONE_FUNC\n\t\t\t\t\t\t}\n\t\t\t\t\t)()\n\t\t\t\t}\n\t\t\t)`;\n\t\t}\n\n\t\tfor (let i = ttp.length - 1; i >= 0; i--) {\n\t\t\tinner = `(fields) -> {\n\t\t\t\t__core__chooseList(\n\t\t\t\t\tfields,\n\t\t\t\t\t() -> {\n\t\t\t\t\t\t__helios__option__NONE_FUNC\n\t\t\t\t\t},\n\t\t\t\t\t() -> {\n\t\t\t\t\t\t(opt${i}) -> {\n\t\t\t\t\t\t\t${i == ttp.length - 1 ? inner : `${inner}(__core__tailList__safe(fields))`}\n\t\t\t\t\t\t}(${ttp[i]}__from_data_safe(__core__headList__safe(fields)))\n\t\t\t\t\t}\n\t\t\t\t)()\n\t\t\t}`;\n\t\t}\n\n\t\treturn `(data) -> {\n\t\t\t__core__chooseData(\n\t\t\t\tdata,\n\t\t\t\t() -> {__helios__option__NONE_FUNC},\n\t\t\t\t() -> {__helios__option__NONE_FUNC},\n\t\t\t\t() -> {\n\t\t\t\t\t(fields) -> {\n\t\t\t\t\t\t${ttp.map(tp => {\n\t\t\t\t\t\t\treturn `__core__chooseList(\n\t\t\t\t\t\t\t\tfields,\n\t\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t\t__helios__option__NONE_FUNC\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t() -> {\n\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t)()`\n\t\t\t\t\t\t})}\n\t\t\t\t\t}(__core__unListData__safe(data))\n\t\t\t\t},\n\t\t\t\t() -> {__helios__option__NONE_FUNC},\n\t\t\t\t() -> {__helios__option__NONE_FUNC}\n\t\t\t)\n\t\t}`\n\t}))\n\tadd(new RawFunc(\"__helios__tuple[]__show\", (ttp) => {\n\t\tlet inner = `${ttp[ttp.length-1]}__show(x${ttp.length-1})()`;\n\n\t\tfor (let i = ttp.length - 2; i >= 0; i--) {\n\t\t\tinner = `__core__appendString(\n\t\t\t\t${ttp[i]}__show(x${i})(),\n\t\t\t\t__core__appendString(\n\t\t\t\t\t\", \",\n\t\t\t\t\t${inner}\n\t\t\t\t)\n\t\t\t)`;\n\t\t}\n\n\t\treturn `(tuple) -> {\n\t\t\t() -> {\n\t\t\t\ttuple(\n\t\t\t\t\t(${ttp.map((_, i) => `x${i}`).join(\", \")}) -> {\n\t\t\t\t\t\t__core__appendString(\n\t\t\t\t\t\t\t\"(\",\n\t\t\t\t\t\t\t__core__appendString(\n\t\t\t\t\t\t\t\t${inner},\n\t\t\t\t\t\t\t\t\")\"\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t)\n\t\t\t\t\t}\n\t\t\t\t)\n\t\t\t}\n\t\t}`;\n\t}));\n\tadd(new RawFunc(\"__helios__tuple[]____to_data\", (ttp) => {\n\t\tassert(ttp.length >= 2);\n\n\t\tlet inner = `__core__mkNilData(())`;\n\n\t\tfor (let i = ttp.length - 1; i >= 0; i--) {\n\t\t\tinner = `__core__mkCons(${ttp[i]}____to_data(x${i}), ${inner})`;\n\t\t}\n\n\t\treturn `(tuple) -> {\n\t\t\ttuple(\n\t\t\t\t(${ttp.map((tp, i) => `x${i}`).join(\", \")}) -> {\n\t\t\t\t\t__core__listData(${inner})\n\t\t\t\t}\n\t\t\t)\n\t\t}`;\n\t}));\n\tadd(new RawFunc(\"__helios__tuple[]__test_data\", (ttp) => {\n\t\tassert(ttp.length >= 2);\n\n\t\tlet inner = `__core__chooseList(\n\t\t\tlist,\n\t\t\t() -> {true},\n\t\t\t() -> {false}\n\t\t)()`;\n\n\t\tfor (let i = ttp.length - 1; i >= 0; i--) {\n\t\t\tconst tp = ttp[i];\n\t\t\tinner = `__core__chooseList(\n\t\t\t\tlist,\n\t\t\t\t() -> {false},\n\t\t\t\t() -> {\n\t\t\t\t\t(head, list) -> {\n\t\t\t\t\t\t__helios__bool__and(\n\t\t\t\t\t\t\t() -> {${tp}__test_data(head)},\n\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t${inner}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t)\n\t\t\t\t\t}(__core__headList__safe(list), __core__tailList__safe(list))\n\t\t\t\t}\n\t\t\t)()`;\n\t\t}\n\n\n\t\treturn `(data) -> {\n\t\t\t__core__chooseData(\n\t\t\t\tdata,\n\t\t\t\t() -> {false},\n\t\t\t\t() -> {false},\n\t\t\t\t() -> {\n\t\t\t\t\t(list) -> {\n\t\t\t\t\t\t${inner}\n\t\t\t\t\t}(__core__unListData__safe(list))\n\t\t\t\t},\n\t\t\t\t() -> {false},\n\t\t\t\t() -> {false}\n\t\t\t)()\n\t\t}`;\n\t}));\n\tadd(new RawFunc(\"__helios__tuple[]__serialize\", (ttp) => {\n\t\tassert(ttp.length >= 2);\n\n\t\treturn `(tuple) -> {\n\t\t\t__helios__common__serialize(__helios__tuple[${ttp.join(\"@\")}]____to_data(tuple))\n\t\t}`\n\t}));\n\tadd(new RawFunc(\"__helios__tuple[]____eq\", (ttp) => {\n\t\tassert(ttp.length >= 2);\n\n\t\treturn `(a, b) -> {\n\t\t\t__helios__common____eq(\n\t\t\t\t__helios__tuple[${ttp.join(\"@\")}]____to_data(a),\n\t\t\t\t__helios__tuple[${ttp.join(\"@\")}]____to_data(b)\n\t\t\t)\n\t\t}`;\n\t}));\n\tadd(new RawFunc(\"__helios__tuple[]____neq\", (ttp) => {\n\t\tassert(ttp.length >= 2);\n\t\t\n\t\treturn `(a, b) -> {\n\t\t\t__helios__common____neq(\n\t\t\t\t__helios__tuple[${ttp.join(\"@\")}]____to_data(a),\n\t\t\t\t__helios__tuple[${ttp.join(\"@\")}]____to_data(b)\n\t\t\t)\n\t\t}`;\n\t}));\n\t[\"first\", \"second\", \"third\", \"fourth\", \"fifth\"].forEach((getter, i) => {\n\t\tadd(new RawFunc(`__helios__tuple[]__${getter}`, (ttp) => {\n\t\t\tassert(ttp.length >= 2);\n\t\n\t\t\treturn `(tuple) -> {\n\t\t\t\ttuple(\n\t\t\t\t\t(${ttp.map((tp, j) => `x${j}`).join(\", \")}) -> {\n\t\t\t\t\t\tx${i}\n\t\t\t\t\t}\n\t\t\t\t)\n\t\t\t}`\n\t\t}));\n\t});\n\t\n\n\t// List builtins\n\taddSerializeFunc(`__helios__list[${TTPP}0]`);\n\taddNeqFunc(`__helios__list[${TTPP}0]`);\n\taddDataLikeEqFunc(`__helios__list[${TTPP}0]`);\n\tadd(new RawFunc(`__helios__list[${TTPP}0]__test_data_internal`,\n\t`(lst) -> {\n\t\t(recurse) -> {\n\t\t\trecurse(recurse, lst)\n\t\t}(\n\t\t\t(recurse, lst) -> {\n\t\t\t\t__core__chooseList(\n\t\t\t\t\tlst,\n\t\t\t\t\t() -> {\n\t\t\t\t\t\ttrue\n\t\t\t\t\t},\n\t\t\t\t\t() -> {\n\t\t\t\t\t\t__core__ifThenElse(\n\t\t\t\t\t\t\t${TTPP}0__test_data(__core__headList__safe(lst)),\n\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\trecurse(recurse, __core__tailList__safe(lst))\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\tfalse\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t)()\n\t\t\t\t\t}\n\t\t\t\t)()\n\t\t\t}\n\t\t)\n\t}`));\n\tadd(new RawFunc(`__helios__list[${TTPP}0]__from_data`, \n\t`(data) -> {\n\t\t(lst) -> {\n\t\t\t(ignore) -> {\n\t\t\t\tlst\n\t\t\t}(\n\t\t\t\t__core__ifThenElse(\n\t\t\t\t\t__helios__list[${TTPP}0]__test_data_internal(lst),\n\t\t\t\t\t() -> {\n\t\t\t\t\t\t()\n\t\t\t\t\t},\n\t\t\t\t\t() -> {\n\t\t\t\t\t\t__core__trace(\"Warning: invalid list data\", ())\n\t\t\t\t\t}\n\t\t\t\t)()\n\t\t\t)\n\t\t}(__core__unListData(data))\n\t}`));\n\tadd(new RawFunc(`__helios__list[${TTPP}0]__from_data_safe`,\n\t`(data) -> {\n\t\t__core__chooseData(\n\t\t\tdata,\n\t\t\t() -> {__helios__option__NONE_FUNC},\n\t\t\t() -> {__helios__option__NONE_FUNC},\n\t\t\t() -> {\n\t\t\t\t__helios__option__SOME_FUNC(__core__unListData__safe(data))\n\t\t\t},\n\t\t\t() -> {__helios__option__NONE_FUNC},\n\t\t\t() -> {__helios__option__NONE_FUNC}\n\t\t)()\n\t}`));\n\tadd(new RawFunc(`__helios__list[${TTPP}0]__test_data`,\n\t`(data) -> {\n\t\t__core__chooseData(\n\t\t\tdata,\n\t\t\t() -> {false},\n\t\t\t() -> {false},\n\t\t\t() -> {\n\t\t\t\t__helios__list[${TTPP}0]__test_data_internal(__core__unListData__safe(data))\n\t\t\t},\n\t\t\t() -> {false},\n\t\t\t() -> {false}\n\t\t)()\n\t}`));\n\tadd(new RawFunc(`__helios__list[${TTPP}0]____to_data`, \"__core__listData\"));\n\tadd(new RawFunc(`__helios__list[${TTPP}0]__show`, \n\t`(self) -> {\n\t\t() -> {\n\t\t\t(recurse) -> {\n\t\t\t\t__core__appendString(\n\t\t\t\t\t\"[\",\n\t\t\t\t\t__core__appendString(\n\t\t\t\t\t\trecurse(recurse, self, true),\n\t\t\t\t\t\t\"]\"\n\t\t\t\t\t)\n\t\t\t\t)\n\t\t\t}(\n\t\t\t\t(recurse, self, first) -> {\n\t\t\t\t\t__core__chooseList(\n\t\t\t\t\t\tself,\n\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\"\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t__core__appendString(\n\t\t\t\t\t\t\t\t__core__ifThenElse(\n\t\t\t\t\t\t\t\t\tfirst,\n\t\t\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t\t\t\"\"\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t\t\t\", \"\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t)(),\n\t\t\t\t\t\t\t\t(head) -> {\n\t\t\t\t\t\t\t\t\t__core__appendString(\n\t\t\t\t\t\t\t\t\t\thead(\n\t\t\t\t\t\t\t\t\t\t\t(valid, value) -> {\n\t\t\t\t\t\t\t\t\t\t\t\t__core__ifThenElse(\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalid,\n\t\t\t\t\t\t\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t${TTPP}0__show(value)()\n\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"<n/a>\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t)()\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t\trecurse(recurse, __core__tailList__safe(self), false)\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t}(${TTPP}0__from_data_safe(__core__headList__safe(self)))\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t}\n\t\t\t\t\t)()\n\t\t\t\t}\n\t\t\t)\n\t\t}\n\t}`));\n\tadd(new RawFunc(`__helios__list[${TTPP}0]__new`,\n\t`(n, fn) -> {\n\t\t(recurse) -> {\n\t\t\trecurse(recurse, 0)\n\t\t}(\n\t\t\t(recurse, i) -> {\n\t\t\t\t__core__ifThenElse(\n\t\t\t\t\t__core__lessThanInteger(i, n),\n\t\t\t\t\t() -> {__core__mkCons(${TTPP}0____to_data(fn(i)), recurse(recurse, __core__addInteger(i, 1)))},\n\t\t\t\t\t() -> {__core__mkNilData(())}\n\t\t\t\t)()\n\t\t\t}\n\t\t)\n\t}`));\n\tadd(new RawFunc(`__helios__list[${TTPP}0]__new_const`,\n\t`(n, item) -> {\n\t\t__helios__list[${TTPP}0]__new(n, (i) -> {item})\n\t}`));\n\tadd(new RawFunc(`__helios__list[${TTPP}0]____add`, \"__helios__common__concat\"));\n\tadd(new RawFunc(`__helios__list[${TTPP}0]__length`, \"__helios__common__length\"));\n\tadd(new RawFunc(`__helios__list[${TTPP}0]__head`, \n\t`(self) -> {\n\t\t${TTPP}0__from_data(__core__headList(self))\n\t}`));\n\tadd(new RawFunc(`__helios__list[${TTPP}0]__tail`, \"__core__tailList\"));\n\tadd(new RawFunc(`__helios__list[${TTPP}0]__is_empty`,\n\t`(self) -> {\n\t\t() -> {\n\t\t\t__core__nullList(self)\n\t\t}\n\t}`));\n\tadd(new RawFunc(`__helios__list[__helios__data]__to_iterator`,\n\t`(self) -> {\n\t\t() -> {\n\t\t\t(recurse) -> {\n\t\t\t\trecurse(recurse, self)\n\t\t\t}(\n\t\t\t\t(recurse, lst) -> {\n\t\t\t\t\t(callback) -> {\n\t\t\t\t\t\t__core__chooseList(\n\t\t\t\t\t\t\tlst,\n\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\tcallback(true, (), ())\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\tcallback(\n\t\t\t\t\t\t\t\t\tfalse, \n\t\t\t\t\t\t\t\t\t__core__headList__safe(lst),\n\t\t\t\t\t\t\t\t\trecurse(recurse, __core__tailList__safe(lst))\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t)()\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t)\n\t\t}\n\t}`));\n\tadd(new RawFunc(`__helios__list[${TTPP}0]__to_iterator`,\n\t`(self) -> {\n\t\t() -> {\n\t\t\t(recurse) -> {\n\t\t\t\trecurse(recurse, self)\n\t\t\t}(\n\t\t\t\t(recurse, lst) -> {\n\t\t\t\t\t(callback) -> {\n\t\t\t\t\t\t__core__chooseList(\n\t\t\t\t\t\t\tlst,\n\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\tcallback(true, (), ())\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\tcallback(\n\t\t\t\t\t\t\t\t\tfalse, \n\t\t\t\t\t\t\t\t\t${TTPP}0__from_data(__core__headList__safe(lst)),\n\t\t\t\t\t\t\t\t\trecurse(recurse, __core__tailList__safe(lst))\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t)()\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t)\n\t\t}\n\t}`));\n\tadd(new RawFunc(`__helios__list[${TTPP}0]__from_iterator`,\n\t`(iterator) -> {\n\t\t(recurse) -> {\n\t\t\trecurse(recurse, iterator)\n\t\t}(\n\t\t\t(recurse, iterator) -> {\n\t\t\t\titerator(\n\t\t\t\t\t(is_null, head, next_iterator) -> {\n\t\t\t\t\t\t__core__ifThenElse(\n\t\t\t\t\t\t\tis_null,\n\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t__core__mkNilData(())\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t__core__mkCons(\n\t\t\t\t\t\t\t\t\t${TTPP}0____to_data(head),\n\t\t\t\t\t\t\t\t\trecurse(recurse, next_iterator)\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t)()\n\t\t\t\t\t}\n\t\t\t\t)\n\t\t\t}\n\t\t)\n\t}`));\n\tadd(new RawFunc(`__helios__list[${TTPP}0]__zip[${FTPP}0]`, \n\t`(self) -> {\n\t\t(other) -> {\n\t\t\t(recurse) -> {\n\t\t\t\trecurse(recurse, self, other)\n\t\t\t}(\n\t\t\t\t(recurse, lst1, lst2) -> {\n\t\t\t\t\t__core__chooseList(\n\t\t\t\t\t\tlst1,\n\t\t\t\t\t\t(callback) -> {\n\t\t\t\t\t\t\tcallback(true, (), (), ())\n\t\t\t\t\t\t},\n\t\t\t\t\t\t(callback) -> {\n\t\t\t\t\t\t\t__core__chooseList(\n\t\t\t\t\t\t\t\tlst2,\n\t\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t\tcallback(true, (), (), ())\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t\tcallback(\n\t\t\t\t\t\t\t\t\t\tfalse,\n\t\t\t\t\t\t\t\t\t\t${TTPP}0__from_data(__core__headList__safe(lst1)),\n\t\t\t\t\t\t\t\t\t\t${FTPP}0__from_data(__core__headList__safe(lst2)),\n\t\t\t\t\t\t\t\t\t\trecurse(recurse, __core__tailList__safe(lst1), __core__tailList__safe(lst2))\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t)()\n\t\t\t\t\t\t}\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t)\n\t\t}\n\t}`));\n\tadd(new RawFunc(`__helios__list[${TTPP}0]__get`,\n\t`(self) -> {\n\t\t(index) -> {\n\t\t\t${TTPP}0__from_data(__helios__list[__helios__data]__get(self)(index))\n\t\t}\n\t}`));\n\tadd(new RawFunc(\"__helios__list[__helios__data]__get\",\n\t`(self) -> {\n\t\t(index) -> {\n\t\t\t(recurse) -> {\n\t\t\t\trecurse(recurse, self, 0)\n\t\t\t}(\n\t\t\t\t(recurse, self, i) -> {\n\t\t\t\t\t__core__chooseList(\n\t\t\t\t\t\tself, \n\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t__helios__error(\"index out of range\")\n\t\t\t\t\t\t}, \n\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t__core__ifThenElse(\n\t\t\t\t\t\t\t\t__core__equalsInteger(index, i), \n\t\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t\t__core__headList__safe(self)\n\t\t\t\t\t\t\t\t}, \n\t\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t\trecurse(recurse, __core__tailList__safe(self), __core__addInteger(i, 1))\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t)()\n\t\t\t\t\t\t}\n\t\t\t\t\t)()\n\t\t\t\t}\n\t\t\t)\n\t\t}\n\t}`));\n\tadd(new RawFunc(`__helios__list[${TTPP}0]__get_singleton`,\n\t`(self) -> {\n\t\t() -> {\n\t\t\t${TTPP}0__from_data(\n\t\t\t\t__helios__list[__helios__data]__get_singleton(self)()\n\t\t\t)\n\t\t}\n\t}`));\n\tadd(new RawFunc(\"__helios__list[__helios__data]__get_singleton\",\n\t`(self) -> {\n\t\t() -> {\n\t\t\t__core__chooseUnit(\n\t\t\t\t__helios__assert(\n\t\t\t\t\t__core__nullList(__core__tailList(self)),\n\t\t\t\t\t\"not a singleton list\"\n\t\t\t\t),\n\t\t\t\t__core__headList(self)\n\t\t\t)\n\t\t}\n\t}`));\n\tadd(new RawFunc(`__helios__list[${TTPP}0]__set`,\n\t`(self) -> {\n\t\t(index, item) -> {\n\t\t\t__helios__list[__helios__data]__set(self)(index, ${TTPP}0____to_data(item))\n\t\t}\n\t}`));\n\tadd(new RawFunc(`__helios__list[__helios__data]__set`,\n\t`(self) -> {\n\t\t(index, item) -> {\n\t\t\t(recurse) -> {\n\t\t\t\trecurse(recurse, self, 0)\n\t\t\t}(\n\t\t\t\t(recurse, lst, i) -> {\n\t\t\t\t\t__core__chooseList(\n\t\t\t\t\t\tlst,\n\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t__helios__error(\"index out of range\")\n\t\t\t\t\t\t},\n\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t__core__ifThenElse(\n\t\t\t\t\t\t\t\t__core__equalsInteger(i, index),\n\t\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t\t__core__mkCons(item, __core__tailList__safe(lst))\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t\t__core__mkCons(\n\t\t\t\t\t\t\t\t\t\t__core__headList__safe(lst),\n\t\t\t\t\t\t\t\t\t\trecurse(recurse, __core__tailList__safe(lst), __core__addInteger(i, 1))\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t)()\n\t\t\t\t\t\t}\n\t\t\t\t\t)()\n\t\t\t\t}\n\t\t\t)\t\n\t\t}\n\t}`));\n\tadd(new RawFunc(`__helios__list[${TTPP}0]__split_at`, \"__helios__list[__helios__data]__split_at\"));\n\tadd(new RawFunc(`__helios__list[__helios__data]__split_at`, \n\t`(self) -> {\n\t\t(index) -> {\n\t\t\t(recurse) -> {\n\t\t\t\trecurse(recurse, self, 0, (head) -> {head})\n\t\t\t}(\n\t\t\t\t(recurse, lst, i, build_head) -> {\n\t\t\t\t\t__core__chooseList(\n\t\t\t\t\t\tlst,\n\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t__helios__error(\"index out of range\")\n\t\t\t\t\t\t},\n\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t__core__ifThenElse(\n\t\t\t\t\t\t\t\t__core__equalsInteger(i, index),\n\t\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t\t(callback) -> {\n\t\t\t\t\t\t\t\t\t\tcallback(build_head(__core__mkNilData(())), lst)\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t\trecurse(recurse, __core__tailList__safe(lst), __core__addInteger(i, 1), (h) -> {\n\t\t\t\t\t\t\t\t\t\tbuild_head(__core__mkCons(__core__headList__safe(lst), h))\n\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t)()\n\t\t\t\t\t\t}\n\t\t\t\t\t)()\n\t\t\t\t}\n\t\t\t)\n\t\t}\n\t}`));\n\tadd(new RawFunc(`__helios__list[${TTPP}0]__drop`, \"__helios__list[__helios__data]__drop\"));\n\tadd(new RawFunc(\"__helios__list[__helios__data]__drop\",\n\t`(self) -> {\n\t\t(n) -> {\n\t\t\t(recurse) -> {\n\t\t\t\t__core__ifThenElse(\n\t\t\t\t\t__core__lessThanInteger(n, 0),\n\t\t\t\t\t() -> {\n\t\t\t\t\t\t__helios__error(\"negative n in drop\")\n\t\t\t\t\t},\n\t\t\t\t\t() -> {\n\t\t\t\t\t\trecurse(recurse, self, n)\n\t\t\t\t\t}\n\t\t\t\t)()\n\t\t\t}(\n\t\t\t\t(recurse, lst, n) -> {\n\t\t\t\t\t__core__ifThenElse(\n\t\t\t\t\t\t__core__equalsInteger(n, 0),\n\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\tlst\n\t\t\t\t\t\t},\n\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\trecurse(\n\t\t\t\t\t\t\t\trecurse,\n\t\t\t\t\t\t\t\t__core__tailList(lst),\n\t\t\t\t\t\t\t\t__core__subtractInteger(n, 1)\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t}\n\t\t\t\t\t)()\n\t\t\t\t}\n\t\t\t)\n\t\t}\n\t}`));\n\tadd(new RawFunc(`__helios__list[${TTPP}0]__drop_end`, \"__helios__list[__helios__data]__drop_end\"));\n\tadd(new RawFunc(\"__helios__list[__helios__data]__drop_end\",\n\t`(self) -> {\n\t\t(n) -> {\n\t\t\t(recurse) -> {\n\t\t\t\t__core__ifThenElse(\n\t\t\t\t\t__core__lessThanInteger(n, 0),\n\t\t\t\t\t() -> {\n\t\t\t\t\t\t__helios__error(\"negative n in drop_end\")\n\t\t\t\t\t},\n\t\t\t\t\t() -> {\n\t\t\t\t\t\trecurse(recurse, self)(\n\t\t\t\t\t\t\t(count, result) -> {\n\t\t\t\t\t\t\t\t__core__ifThenElse(\n\t\t\t\t\t\t\t\t\t__core__lessThanInteger(count, n),\n\t\t\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t\t\t__helios__error(\"list too short\")\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t\t\tresult\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t)()\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t)\n\t\t\t\t\t}\n\t\t\t\t)()\n\t\t\t}(\n\t\t\t\t(recurse, lst) -> {\n\t\t\t\t\t__core__chooseList(\n\t\t\t\t\t\tlst,\n\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t(callback) -> {callback(0, lst)}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\trecurse(recurse, __core__tailList__safe(lst))(\n\t\t\t\t\t\t\t\t(count, result) -> {\n\t\t\t\t\t\t\t\t\t__core__ifThenElse(\n\t\t\t\t\t\t\t\t\t\t__core__equalsInteger(count, n),\n\t\t\t\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t\t\t\t(callback) -> {\n\t\t\t\t\t\t\t\t\t\t\t\tcallback(\n\t\t\t\t\t\t\t\t\t\t\t\t\tcount,\n\t\t\t\t\t\t\t\t\t\t\t\t\t__core__mkCons(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t__core__headList__safe(lst), \n\t\t\t\t\t\t\t\t\t\t\t\t\t\tresult\n\t\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t\t\t\t(callback) -> {\n\t\t\t\t\t\t\t\t\t\t\t\tcallback(\n\t\t\t\t\t\t\t\t\t\t\t\t\t__core__addInteger(count, 1),\n\t\t\t\t\t\t\t\t\t\t\t\t\tresult\n\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t)()\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t}\n\t\t\t\t\t)()\n\t\t\t\t}\n\t\t\t)\n\t\t}\n\t}`));\n\tadd(new RawFunc(`__helios__list[${TTPP}0]__take`, \"__helios__list[__helios__data]__take\"));\n\tadd(new RawFunc(\"__helios__list[__helios__data]__take\",\n\t`(self) -> {\n\t\t(n) -> {\n\t\t\t(recurse) -> {\n\t\t\t\t__core__ifThenElse(\n\t\t\t\t\t__core__lessThanInteger(n, 0),\n\t\t\t\t\t() -> {\n\t\t\t\t\t\t__helios__error(\"negative n in take\")\n\t\t\t\t\t},\n\t\t\t\t\t() -> {\n\t\t\t\t\t\trecurse(recurse, self, n)\n\t\t\t\t\t}\n\t\t\t\t)()\n\t\t\t}(\n\t\t\t\t(recurse, lst, n) -> {\n\t\t\t\t\t__core__ifThenElse(\n\t\t\t\t\t\t__core__equalsInteger(n, 0),\n\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t__core__mkNilData(())\n\t\t\t\t\t\t},\n\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t__core__mkCons(\n\t\t\t\t\t\t\t\t__core__headList(lst),\n\t\t\t\t\t\t\t\trecurse(\n\t\t\t\t\t\t\t\t\trecurse,\n\t\t\t\t\t\t\t\t\t__core__tailList(lst),\n\t\t\t\t\t\t\t\t\t__core__subtractInteger(n, 1)\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t}\n\t\t\t\t\t)()\n\t\t\t\t}\n\t\t\t)\n\t\t}\n\t}`));\n\tadd(new RawFunc(`__helios__list[${TTPP}0]__take_end`, \"__helios__list[__helios__data]__take_end\"));\n\tadd(new RawFunc(`__helios__list[__helios__data]__take_end`,\n\t`(self) -> {\n\t\t(n) -> {\n\t\t\t(recurse) -> {\n\t\t\t\t__core__ifThenElse(\n\t\t\t\t\t__core__lessThanInteger(n, 0),\n\t\t\t\t\t() -> {\n\t\t\t\t\t\t__helios__error(\"negative n in take_end\")\n\t\t\t\t\t},\n\t\t\t\t\t() -> {\n\t\t\t\t\t\trecurse(recurse, self)(\n\t\t\t\t\t\t\t(count, result) -> {\n\t\t\t\t\t\t\t\t__core__ifThenElse(\n\t\t\t\t\t\t\t\t\t__core__lessThanInteger(count, n),\n\t\t\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t\t\t__helios__error(\"list too short\")\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t\t\tresult\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t)()\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t)\n\t\t\t\t\t}\n\t\t\t\t)()\n\t\t\t}(\n\t\t\t\t(recurse, lst) -> {\n\t\t\t\t\t__core__chooseList(\n\t\t\t\t\t\tlst,\n\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t(callback) -> {callback(0, lst)}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\trecurse(recurse, __core__tailList__safe(lst))(\n\t\t\t\t\t\t\t\t(count, tail) -> {\n\t\t\t\t\t\t\t\t\t__core__ifThenElse(\n\t\t\t\t\t\t\t\t\t\t__core__equalsInteger(count, n),\n\t\t\t\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t\t\t\t(callback) -> {callback(count, tail)}\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t\t\t\t(callback) -> {\n\t\t\t\t\t\t\t\t\t\t\t\tcallback(\n\t\t\t\t\t\t\t\t\t\t\t\t\t__core__addInteger(count, 1),\n\t\t\t\t\t\t\t\t\t\t\t\t\tlst\n\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t)()\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t}\n\t\t\t\t\t)()\n\t\t\t\t}\n\t\t\t)\n\t\t}\n\t}`));\n\tadd(new RawFunc(`__helios__list[${TTPP}0]__any`,\n\t`(self) -> {\n\t\t(fn) -> {\n\t\t\t__helios__common__any(\n\t\t\t\tself, \n\t\t\t\t(item) -> {\n\t\t\t\t\tfn(${TTPP}0__from_data(item))\n\t\t\t\t}\n\t\t\t)\n\t\t}\n\t}`));\n\tadd(new RawFunc(`__helios__list[${TTPP}0]__all`,\n\t`(self) -> {\n\t\t(fn) -> {\n\t\t\t__helios__common__all(\n\t\t\t\tself, \n\t\t\t\t(item) -> {\n\t\t\t\t\tfn(${TTPP}0__from_data(item))\n\t\t\t\t}\n\t\t\t)\n\t\t}\n\t}`));\n\tadd(new RawFunc(`__helios__list[__helios__data]__append`,\n\t`(self) -> {\n\t\t(item) -> {\n\t\t\t(recurse) -> {\n\t\t\t\trecurse(recurse, self)\n\t\t\t}(\n\t\t\t\t(recurse, lst) -> {\n\t\t\t\t\t__core__chooseList(\n\t\t\t\t\t\tlst,\n\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t__core__mkCons(item, lst)\n\t\t\t\t\t\t},\n\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t__core__mkCons(__core__headList__safe(lst), recurse(recurse, __core__tailList__safe(lst)))\n\t\t\t\t\t\t}\n\t\t\t\t\t)()\n\t\t\t\t}\n\t\t\t)\n\t\t}\n\t}`));\n\tadd(new RawFunc(`__helios__list[${TTPP}0]__append`,\n\t`(self) -> {\n\t\t(item) -> {\n\t\t\t__helios__list[__helios__data]__append(self)(${TTPP}0____to_data(item))\n\t\t}\n\t}`));\n\tadd(new RawFunc(`__helios__list[${TTPP}0]__prepend`,\n\t`(self) -> {\n\t\t(item) -> {\n\t\t\t__core__mkCons(${TTPP}0____to_data(item), self)\n\t\t}\n\t}`));\n\tadd(new RawFunc(`__helios__list[${TTPP}0]__find`,\n\t`(self) -> {\n\t\t(fn) -> {\n\t\t\t(recurse) -> {\n\t\t\t\trecurse(recurse, self)\n\t\t\t}(\n\t\t\t\t(recurse, lst) -> {\n\t\t\t\t\t__core__chooseList(\n\t\t\t\t\t\tlst, \n\t\t\t\t\t\t() -> {__helios__error(\"not found\")}, \n\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t(item) -> {\n\t\t\t\t\t\t\t\t__core__ifThenElse(\n\t\t\t\t\t\t\t\t\tfn(item), \n\t\t\t\t\t\t\t\t\t() -> {item}, \n\t\t\t\t\t\t\t\t\t() -> {recurse(recurse, __core__tailList__safe(lst))}\n\t\t\t\t\t\t\t\t)()\n\t\t\t\t\t\t\t}(${TTPP}0__from_data(__core__headList__safe(lst)))\n\t\t\t\t\t\t}\n\t\t\t\t\t)()\n\t\t\t\t}\n\t\t\t)\n\t\t}\n\t}`));\n\tadd(new RawFunc(`__helios__list[${TTPP}0]__find_index`,\n\t`(self) -> {\n\t\t(fn) -> {\n\t\t\t(recurse) -> {\n\t\t\t\trecurse(recurse, self, 0)\n\t\t\t}(\n\t\t\t\t(recurse, lst, i) -> {\n\t\t\t\t\t__core__chooseList(\n\t\t\t\t\t\tlst,\n\t\t\t\t\t\t() -> {-1},\n\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t(item) -> {\n\t\t\t\t\t\t\t\t__core__ifThenElse(\n\t\t\t\t\t\t\t\t\tfn(item),\n\t\t\t\t\t\t\t\t\t() -> {i},\n\t\t\t\t\t\t\t\t\t() -> {recurse(recurse, __core__tailList__safe(lst), __core__addInteger(i, 1))}\n\t\t\t\t\t\t\t\t)()\n\t\t\t\t\t\t\t}(${TTPP}0__from_data(__core__headList__safe(lst)))\n\t\t\t\t\t\t}\n\t\t\t\t\t)()\n\t\t\t\t}\n\t\t\t)\n\t\t}\n\t}`));\n\tadd(new RawFunc(`__helios__list[${TTPP}0]__find_safe`,\n\t`(self) -> {\n\t\t(fn) -> {\n\t\t\t__helios__common__find_safe(\n\t\t\t\tself,\n\t\t\t\t(item) -> {\n\t\t\t\t\tfn(${TTPP}0__from_data(item))\n\t\t\t\t},\n\t\t\t\t__helios__common__identity\n\t\t\t)\n\t\t}\n\t}`));\n\tadd(new RawFunc(`__helios__list[${TTPP}0]__filter`,\n\t`(self) -> {\n\t\t(fn) -> {\n\t\t\t__helios__common__filter_list(\n\t\t\t\tself, \n\t\t\t\t(item) -> {\n\t\t\t\t\tfn(${TTPP}0__from_data(item))\n\t\t\t\t}\n\t\t\t)\n\t\t}\n\t}`));\n\tadd(new RawFunc(`__helios__list[${TTPP}0]__for_each`,\n\t`(self) -> {\n\t\t(fn) -> {\n\t\t\t(recurse) -> {\n\t\t\t\trecurse(recurse, self)\n\t\t\t}(\n\t\t\t\t(recurse, lst) -> {\n\t\t\t\t\t__core__chooseList(\n\t\t\t\t\t\tlst,\n\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t()\n\t\t\t\t\t\t},\n\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t__core__chooseUnit(\n\t\t\t\t\t\t\t\tfn(${TTPP}0__from_data(__core__headList__safe(lst))),\n\t\t\t\t\t\t\t\trecurse(recurse, __core__tailList__safe(lst))\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t}\n\t\t\t\t\t)()\n\t\t\t\t}\n\t\t\t)\n\t\t}\n\t}`));\n\tadd(new RawFunc(`__helios__list[${TTPP}0]__fold[${FTPP}0]`,\n\t`(self) -> {\n\t\t(fn, a0) -> {\n\t\t\t__helios__common__fold(\n\t\t\t\tself, \n\t\t\t\t(prev, item) -> {\n\t\t\t\t\tfn(prev, ${TTPP}0__from_data(item))\n\t\t\t\t}, \n\t\t\t\ta0\n\t\t\t)\n\t\t}\n\t}`));\n\tadd(new RawFunc(`__helios__list[${TTPP}0]__fold2[${FTPP}0@${FTPP}1]`,\n\t`(self) -> {\n\t\t(fn, a0, b0) -> {\n\t\t\t__helios__common__fold(\n\t\t\t\tself,\n\t\t\t\t(prev, item) -> {\n\t\t\t\t\tprev(\n\t\t\t\t\t\t(a, b) -> {\n\t\t\t\t\t\t\tfn(a, b, ${TTPP}0__from_data(item))\n\t\t\t\t\t\t}\n\t\t\t\t\t)\n\t\t\t\t},\n\t\t\t\t(callback) -> {\n\t\t\t\t\tcallback(a0, b0)\n\t\t\t\t}\n\t\t\t)\n\t\t}\n\t}`));\n\tadd(new RawFunc(`__helios__list[${TTPP}0]__fold3[${FTPP}0@${FTPP}1@${FTPP}2]`,\n\t`(self) -> {\n\t\t(fn, a0, b0, c0) -> {\n\t\t\t__helios__common__fold(\n\t\t\t\tself,\n\t\t\t\t(prev, item) -> {\n\t\t\t\t\tprev(\n\t\t\t\t\t\t(a, b, c) -> {\n\t\t\t\t\t\t\tfn(a, b, c, ${TTPP}0__from_data(item))\n\t\t\t\t\t\t}\n\t\t\t\t\t)\n\t\t\t\t},\n\t\t\t\t(callback) -> {\n\t\t\t\t\tcallback(a0, b0, c0)\n\t\t\t\t}\n\t\t\t)\n\t\t}\n\t}`));\n\tadd(new RawFunc(`__helios__list[${TTPP}0]__fold_lazy[${FTPP}0]`,\n\t`(self) -> {\n\t\t(fn, a0) -> {\n\t\t\t__helios__common__fold_lazy(\n\t\t\t\tself, \n\t\t\t\t(item, next) -> {\n\t\t\t\t\tfn(${TTPP}0__from_data(item), next)\n\t\t\t\t},\n\t\t\t\ta0\n\t\t\t)\n\t\t}\n\t}`));\n\tadd(new RawFunc(`__helios__list[${TTPP}0]__fold2_lazy[${FTPP}0@${FTPP}1]`,\n\t`(self) -> {\n\t\t(fn, a0, b0) -> {\n\t\t\t__helios__common__fold_lazy(\n\t\t\t\tself, \n\t\t\t\t(item, next) -> {\n\t\t\t\t\tfn(${TTPP}0__from_data(item), next)\n\t\t\t\t},\n\t\t\t\t(callback) -> {\n\t\t\t\t\tcallback(a0, b0)\n\t\t\t\t}\n\t\t\t)\n\t\t}\n\t}`));\n\tadd(new RawFunc(`__helios__list[${TTPP}0]__map[${FTPP}0]`,\n\t`(self) -> {\n\t\t(fn) -> {\n\t\t\t__helios__common__map(\n\t\t\t\tself, \n\t\t\t\t(item) -> {\n\t\t\t\t\t${FTPP}0____to_data(fn(${TTPP}0__from_data(item)))\n\t\t\t\t}, \n\t\t\t\t__core__mkNilData(())\n\t\t\t)\n\t\t}\n\t}`));\n\tadd(new RawFunc(`__helios__list[${TTPP}0]__map_option[${FTPP}0]`,\n\t`(self) -> {\n\t\t(fn) -> {\n\t\t\t(recurse) -> {\n\t\t\t\trecurse(recurse, self)\n\t\t\t}(\n\t\t\t\t(recurse, lst) -> {\n\t\t\t\t\t__core__chooseList(\n\t\t\t\t\t\tlst,\n\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\tlst\n\t\t\t\t\t\t},\n\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t(head, tail) -> {\n\t\t\t\t\t\t\t\t(opt) -> {\n\t\t\t\t\t\t\t\t\t__core__ifThenElse(\n\t\t\t\t\t\t\t\t\t\t__core__equalsInteger(__core__fstPair(opt), 0),\n\t\t\t\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t\t\t\t__core__mkCons(\n\t\t\t\t\t\t\t\t\t\t\t\t__core__headList(__core__sndPair(opt)),\n\t\t\t\t\t\t\t\t\t\t\t\ttail\n\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t},\t\n\t\t\t\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t\t\t\ttail\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t)()\n\t\t\t\t\t\t\t\t}(__core__unConstrData(fn(head)))\n\t\t\t\t\t\t\t}(\n\t\t\t\t\t\t\t\t${TTPP}0__from_data(__core__headList__safe(lst)),\n\t\t\t\t\t\t\t\trecurse(recurse, __core__tailList__safe(lst))\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t}\n\t\t\t\t\t)()\n\t\t\t\t}\n\t\t\t)\n\t\t}\n\t}`));\n\tadd(new RawFunc(`__helios__list[${TTPP}0]__sort`,\n\t`(self) -> {\n\t\t(comp) -> {\n\t\t\t__helios__common__sort(\n\t\t\t\tself, \n\t\t\t\t(a, b) -> {\n\t\t\t\t\tcomp(${TTPP}0__from_data(a), ${TTPP}0__from_data(b))\n\t\t\t\t}\n\t\t\t)\n\t\t}\n\t}`));\n\n\n\t// List specials\n\tadd(new RawFunc(`__helios__list[${TTPP}0]__sum`,\n\t`(self) -> {\n\t\t() -> {\n\t\t\t(recurse) -> {\n\t\t\t\trecurse(recurse, self)\n\t\t\t}(\n\t\t\t\t(recurse, lst) -> {\n\t\t\t\t\t__core__chooseList(\n\t\t\t\t\t\tlst,\n\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t0\n\t\t\t\t\t\t},\n\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t${TTPP}0____add(\n\t\t\t\t\t\t\t\t${TTPP}0__from_data(__core__headList__safe(lst)),\n\t\t\t\t\t\t\t\trecurse(recurse, __core__tailList__safe(lst))\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t}\n\t\t\t\t\t)()\n\t\t\t\t}\n\t\t\t)\n\t\t}\n\t}`));\n\tadd(new RawFunc(\"__helios__list[__helios__string]__join\",\n\t`(self) -> {\n\t\t(__useopt__separator, separator) -> {\n\t\t\t(separator) -> {\n\t\t\t\t(recurse) -> {\n\t\t\t\t\trecurse(recurse, self, \"\")\n\t\t\t\t}(\n\t\t\t\t\t(recurse, lst, sep) -> {\n\t\t\t\t\t\t__core__chooseList(\n\t\t\t\t\t\t\tlst,\n\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t\"\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t__helios__string____add(\n\t\t\t\t\t\t\t\t\t__helios__string____add(\n\t\t\t\t\t\t\t\t\t\tsep,\n\t\t\t\t\t\t\t\t\t\t__helios__string__from_data(__core__headList__safe(lst))\n\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\trecurse(recurse, __core__tailList__safe(lst), separator)\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t)()\n\t\t\t\t\t}\n\t\t\t\t)\n\t\t\t}(__core__ifThenElse(__useopt__separator, separator, \"\"))\n\t\t}\n\t}`));\n\tadd(new RawFunc(\"__helios__list[__helios__bytearray]__join\",\n\t`(self) -> {\n\t\t(__useopt__separator, separator) -> {\n\t\t\t(separator) -> {\n\t\t\t\t(recurse) -> {\n\t\t\t\t\trecurse(recurse, self, #)\n\t\t\t\t}(\n\t\t\t\t\t(recurse, lst, sep) -> {\n\t\t\t\t\t\t__core__chooseList(\n\t\t\t\t\t\t\tlst,\n\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t#\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t__helios__bytearray____add(\n\t\t\t\t\t\t\t\t\t__helios__bytearray____add(\n\t\t\t\t\t\t\t\t\t\tsep,\n\t\t\t\t\t\t\t\t\t\t__core__unBData(__core__headList__safe(lst))\n\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\trecurse(recurse, __core__tailList__safe(lst), separator)\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t)()\n\t\t\t\t\t}\n\t\t\t\t)\n\t\t\t}(__core__ifThenElse(__useopt__separator, separator, #))\n\t\t}\n\t}`));\n\tadd(new RawFunc(`__helios__list[${TTPP}0]__flatten`,\n\t`(self) -> {\n\t\t() -> {\n\t\t\t(recurse) -> {\n\t\t\t\trecurse(recurse, self)\n\t\t\t}(\n\t\t\t\t(recurse, lst) -> {\n\t\t\t\t\t__core__chooseList(\n\t\t\t\t\t\tlst,\n\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t__core__mkNilData(())\n\t\t\t\t\t\t},\n\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t__helios__list[${TTPP}0]____add(\n\t\t\t\t\t\t\t\t__core__unListData(__core__headList__safe(lst)),\n\t\t\t\t\t\t\t\trecurse(recurse, __core__tailList__safe(lst))\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t}\n\t\t\t\t\t)()\n\t\t\t\t}\n\t\t\t)\n\t\t}\n\t}`));\n\n\n\t// Map builtins\n\taddSerializeFunc(`__helios__map[${TTPP}0@${TTPP}1]`);\n\taddNeqFunc(`__helios__map[${TTPP}0@${TTPP}1]`);\n\taddDataLikeEqFunc(`__helios__map[${TTPP}0@${TTPP}1]`);\n\tadd(new RawFunc(`__helios__map[${TTPP}0@${TTPP}1]__test_data_internal`,\n\t`(map) -> {\n\t\t(recurse) -> {\n\t\t\trecurse(recurse, map)\n\t\t}(\n\t\t\t(recurse, map) -> {\n\t\t\t\t__core__chooseList(\n\t\t\t\t\tmap,\n\t\t\t\t\t() -> {\n\t\t\t\t\t\ttrue\n\t\t\t\t\t},\n\t\t\t\t\t() -> {\n\t\t\t\t\t\t(head) -> {\n\t\t\t\t\t\t\t__core__ifThenElse(\n\t\t\t\t\t\t\t\t${TTPP}0__test_data(__core__fstPair(head)),\n\t\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t\t__core__ifThenElse(\n\t\t\t\t\t\t\t\t\t\t${TTPP}1__test_data(__core__sndPair(head)),\n\t\t\t\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t\t\t\trecurse(recurse, __core__tailList__safe(map))\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t\t\t\tfalse\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t)()\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t\tfalse\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t)()\n\t\t\t\t\t\t}(__core__headList__safe(map))\n\t\t\t\t\t}\n\t\t\t\t)()\n\t\t\t}\n\t\t)\n\t}`));\n\tadd(new RawFunc(`__helios__map[${TTPP}0@${TTPP}1]__from_data`, \n\t`(data) -> {\n\t\t(map) -> {\n\t\t\t(ignore) -> {\n\t\t\t\tmap\n\t\t\t}(\n\t\t\t\t__core__ifThenElse(\n\t\t\t\t\t__helios__map[${TTPP}0@${TTPP}1]__test_data_internal(map),\n\t\t\t\t\t() -> {\n\t\t\t\t\t\t()\n\t\t\t\t\t},\n\t\t\t\t\t() -> {\n\t\t\t\t\t\t__core__trace(\"Warning: invalid map data\", ())\n\t\t\t\t\t}\n\t\t\t\t)()\n\t\t\t\t\n\t\t\t)\n\t\t}(__core__unMapData(data))\n\t}`));\n\tadd(new RawFunc(`__helios__map[${TTPP}0@${TTPP}1]__from_data_safe`,\n\t`(data) -> {\n\t\t__core__chooseData(\n\t\t\tdata,\n\t\t\t() -> {__helios__option__NONE_FUNC},\n\t\t\t() -> {\n\t\t\t\t__helios__option__SOME_FUNC(__core__unMapData__safe(data))\n\t\t\t},\n\t\t\t() -> {__helios__option__NONE_FUNC},\n\t\t\t() -> {__helios__option__NONE_FUNC},\n\t\t\t() -> {__helios__option__NONE_FUNC}\n\t\t)()\n\t}`));\n\tadd(new RawFunc(`__helios__map[${TTPP}0@${TTPP}1]__show`,\n\t`(self) -> {\n\t\t() -> {\n\t\t\t(recurse) -> {\n\t\t\t\t__core__appendString(\n\t\t\t\t\t\"{\",\n\t\t\t\t\t__core__appendString(\n\t\t\t\t\t\trecurse(recurse, self, true),\n\t\t\t\t\t\t\"}\"\n\t\t\t\t\t)\n\t\t\t\t)\n\t\t\t}(\n\t\t\t\t(recurse, self, first) -> {\n\t\t\t\t\t__core__chooseList(\n\t\t\t\t\t\tself,\n\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\"\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t__core__appendString(\n\t\t\t\t\t\t\t\t__core__ifThenElse(\n\t\t\t\t\t\t\t\t\tfirst,\n\t\t\t\t\t\t\t\t\t() -> {\"\"},\n\t\t\t\t\t\t\t\t\t() -> {\", \"}\n\t\t\t\t\t\t\t\t)(),\n\t\t\t\t\t\t\t\t(head) -> {\n\t\t\t\t\t\t\t\t\t(key, value) -> {\n\t\t\t\t\t\t\t\t\t\t__core__appendString(\n\t\t\t\t\t\t\t\t\t\t\t__core__appendString(\n\t\t\t\t\t\t\t\t\t\t\t\t__core__appendString(\n\t\t\t\t\t\t\t\t\t\t\t\t\tkey(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(valid, key) -> {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t__core__ifThenElse(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalid,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t${TTPP}0__show(key)()\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"<n/a>\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)()\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t\t\t\t\t\": \"\n\t\t\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t\t\t\tvalue(\n\t\t\t\t\t\t\t\t\t\t\t\t\t(valid, value) -> {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t__core__ifThenElse(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalid,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t${TTPP}1__show(value)()\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"<n/a>\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t\t\trecurse(recurse, __core__tailList__safe(self), false)\n\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t}(${TTPP}0__from_data_safe(__core__fstPair(head)), ${TTPP}1__from_data_safe(__core__sndPair(head)))\n\t\t\t\t\t\t\t\t}(__core__headList__safe(self))\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t}\n\t\t\t\t\t)()\n\t\t\t\t}\n\t\t\t)\n\t\t}\n\t}`));\n\tadd(new RawFunc(`__helios__map[${TTPP}0@${TTPP}1]__test_data`,\n\t`(data) -> {\n\t\t__core__chooseData(\n\t\t\tdata,\n\t\t\t() -> {false},\n\t\t\t() -> {\n\t\t\t\t__helios__map[${TTPP}0@${TTPP}1]__test_data_internal(__core__unMapData__safe(data))\n\t\t\t},\n\t\t\t() -> {false},\n\t\t\t() -> {false},\n\t\t\t() -> {false}\n\t\t)()\n\t}`));\n\tadd(new RawFunc(`__helios__map[${TTPP}0@${TTPP}1]____to_data`, \"__core__mapData\"));\n\tadd(new RawFunc(`__helios__map[${TTPP}0@${TTPP}1]____add`, \"__helios__common__concat\"));\n\tadd(new RawFunc(`__helios__map[${TTPP}0@${TTPP}1]__prepend`,\n\t`(self) -> {\n\t\t(key, value) -> {\n\t\t\t__core__mkCons(__core__mkPairData(${TTPP}0____to_data(key), ${TTPP}1____to_data(value)), self)\n\t\t}\n\t}`));\n\tadd(new RawFunc(`__helios__map[__helios__data@__helios__data]__append`,\n\t`(self) -> {\n\t\t(key, value) -> {\n\t\t\t__helios__list[__helios__data]__append(self)(__core__mkPairData(key, value))\n\t\t}\n\t}`));\n\tadd(new RawFunc(`__helios__map[${TTPP}0@${TTPP}1]__append`,\n\t`(self) -> {\n\t\t(key, value) -> {\n\t\t\t__helios__map[__helios__data@__helios__data]__append(self)(${TTPP}0____to_data(key), ${TTPP}1____to_data(value))\n\t\t}\n\t}`));\n\tadd(new RawFunc(`__helios__map[${TTPP}0@${TTPP}1]__head`,\n\t`(self) -> {\n\t\t(head) -> {\n\t\t\t(callback) -> {\n\t\t\t\tcallback(${TTPP}0__from_data(__core__fstPair(head)), ${TTPP}1__from_data(__core__sndPair(head)))\n\t\t\t}\n\t\t}(__core__headList(self))\n\t}`));\n\tadd(new RawFunc(`__helios__map[${TTPP}0@${TTPP}1]__head_key`,\n\t`(self) -> {\n\t\t${TTPP}0__from_data(__core__fstPair(__core__headList(self)))\n\t}`));\n\tadd(new RawFunc(`__helios__map[${TTPP}0@${TTPP}1]__head_value`,\n\t`(self) -> {\n\t\t${TTPP}1__from_data(__core__sndPair(__core__headList(self)))\n\t}`));\n\tadd(new RawFunc(`__helios__map[${TTPP}0@${TTPP}1]__length`,\n\t`(self) -> {\n\t\t__helios__common__length(self)\n\t}`));\n\tadd(new RawFunc(`__helios__map[${TTPP}0@${TTPP}1]__tail`, \"__core__tailList\"));\n\tadd(new RawFunc(`__helios__map[${TTPP}0@${TTPP}1]__is_empty`,\n\t`(self) -> {\n\t\t() -> {\n\t\t\t__core__nullList(self)\n\t\t}\n\t}`));\n\tadd(new RawFunc(`__helios__map[${TTPP}0@${TTPP}1]__get`,\n\t`(self) -> {\n\t\t(key) -> {\n\t\t\t__helios__common__map_get(\n\t\t\t\tself, \n\t\t\t\t${TTPP}0____to_data(key), \n\t\t\t\t(x) -> {${TTPP}1__from_data(x)}, \n\t\t\t\t() -> {__helios__error(\"key not found\")}\n\t\t\t)\n\t\t}\n\t}`));\n\tadd(new RawFunc(`__helios__map[${TTPP}0@${TTPP}1]__get_safe`,\n\t`(self) -> {\n\t\t(key) -> {\n\t\t\t__helios__common__map_get(\n\t\t\t\tself, \n\t\t\t\t${TTPP}0____to_data(key), \n\t\t\t\t(x) -> {\n\t\t\t\t\t__core__constrData(0, __helios__common__list_1(x))\n\t\t\t\t}, \n\t\t\t\t() -> {\n\t\t\t\t\t__core__constrData(1, __helios__common__list_0)\n\t\t\t\t}\n\t\t\t)\n\t\t}\n\t}`));\n\tadd(new RawFunc(`__helios__map[${TTPP}0@${TTPP}1]__all`,\n\t`(self) -> {\n\t\t(fn) -> {\n\t\t\t(fn) -> {\n\t\t\t\t__helios__common__all(self, fn)\n\t\t\t}(\n\t\t\t\t(pair) -> {\n\t\t\t\t\tfn(${TTPP}0__from_data(__core__fstPair(pair)), ${TTPP}1__from_data(__core__sndPair(pair)))\n\t\t\t\t}\n\t\t\t)\n\t\t}\n\t}`));\n\tadd(new RawFunc(`__helios__map[${TTPP}0@${TTPP}1]__any`,\n\t`(self) -> {\n\t\t(fn) -> {\n\t\t\t(fn) -> {\n\t\t\t\t__helios__common__any(self, fn)\n\t\t\t}(\n\t\t\t\t(pair) -> {\n\t\t\t\t\tfn(${TTPP}0__from_data(__core__fstPair(pair)), ${TTPP}1__from_data(__core__sndPair(pair)))\n\t\t\t\t}\n\t\t\t)\n\t\t}\n\t}`));\n\tadd(new RawFunc(`__helios__map[${TTPP}0@${TTPP}1]__delete`,\n\t`(self) -> {\n\t\t(key) -> {\n\t\t\t(key) -> {\n\t\t\t\t(recurse) -> {\n\t\t\t\t\trecurse(recurse, self)\n\t\t\t\t}(\n\t\t\t\t\t(recurse, self) -> {\n\t\t\t\t\t\t__core__chooseList(\n\t\t\t\t\t\t\tself,\n\t\t\t\t\t\t\t() -> {self},\n\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t(head, tail) -> {\n\t\t\t\t\t\t\t\t\t__core__ifThenElse(\n\t\t\t\t\t\t\t\t\t\t__core__equalsData(key, __core__fstPair(head)),\n\t\t\t\t\t\t\t\t\t\t() -> {recurse(recurse, tail)},\n\t\t\t\t\t\t\t\t\t\t() -> {__core__mkCons(head, recurse(recurse, tail))}\n\t\t\t\t\t\t\t\t\t)()\n\t\t\t\t\t\t\t\t}(__core__headList__safe(self), __core__tailList__safe(self))\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t)()\n\t\t\t\t\t}\n\t\t\t\t)\n\t\t\t}(${TTPP}0____to_data(key))\n\t\t}\n\t}`));\n\tadd(new RawFunc(`__helios__map[${TTPP}0@${TTPP}1]__filter`,\n\t`(self) -> {\n\t\t(fn) -> {\n\t\t\t__helios__common__filter_map(\n\t\t\t\tself, \n\t\t\t\t(pair) -> {\n\t\t\t\t\tfn(${TTPP}0__from_data(__core__fstPair(pair)), ${TTPP}1__from_data(__core__sndPair(pair)))\n\t\t\t\t}\n\t\t\t)\n\t\t}\n\t}`));\n\tadd(new RawFunc(`__helios__map[${TTPP}0@${TTPP}1]__find`,\n\t`(self) -> {\n\t\t(fn) -> {\n\t\t\t(recurse) -> {\n\t\t\t\trecurse(recurse, self)\n\t\t\t}(\n\t\t\t\t(recurse, self) -> {\n\t\t\t\t\t__core__chooseList(\n\t\t\t\t\t\tself, \n\t\t\t\t\t\t() -> {__helios__error(\"not found\")}, \n\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t(head) -> {\n\t\t\t\t\t\t\t\t(key, value) -> {\n\t\t\t\t\t\t\t\t\t__core__ifThenElse(\n\t\t\t\t\t\t\t\t\t\tfn(key, value), \n\t\t\t\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t\t\t\t(callback) -> {\n\t\t\t\t\t\t\t\t\t\t\t\tcallback(key, value)\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}, \n\t\t\t\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t\t\t\trecurse(recurse, __core__tailList__safe(self))\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t)()\n\t\t\t\t\t\t\t\t}(\n\t\t\t\t\t\t\t\t\t${TTPP}0__from_data(__core__fstPair(head)), \n\t\t\t\t\t\t\t\t\t${TTPP}1__from_data(__core__sndPair(head))\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t}(__core__headList__safe(self))\n\t\t\t\t\t\t}\n\t\t\t\t\t)()\n\t\t\t\t}\n\t\t\t)\n\t\t}\n\t}`));\n\tadd(new RawFunc(`__helios__map[${TTPP}0@${TTPP}1]__find_safe`,\n\t`(self) -> {\n\t\t(fn) -> {\n\t\t\t(recurse) -> {\n\t\t\t\trecurse(recurse, self, fn)\n\t\t\t}(\n\t\t\t\t(recurse, self, fn) -> {\n\t\t\t\t\t__core__chooseList(\n\t\t\t\t\t\tself, \n\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t(callback) -> {\n\t\t\t\t\t\t\t\tcallback(() -> {__helios__error(\"not found\")}, false)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}, \n\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t(head) -> {\n\t\t\t\t\t\t\t\t(key, value) -> {\n\t\t\t\t\t\t\t\t\t__core__ifThenElse(\n\t\t\t\t\t\t\t\t\t\tfn(key, value), \n\t\t\t\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t\t\t\t(callback) -> {\n\t\t\t\t\t\t\t\t\t\t\t\tcallback(\n\t\t\t\t\t\t\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(callback) -> {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcallback(key, value)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\ttrue\n\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}, \n\t\t\t\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t\t\t\trecurse(recurse, __core__tailList__safe(self), fn)\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t)()\n\t\t\t\t\t\t\t\t}(${TTPP}0__from_data(__core__fstPair(head)), ${TTPP}1__from_data(__core__sndPair(head)))\n\t\t\t\t\t\t\t}(__core__headList__safe(self))\n\t\t\t\t\t\t}\n\t\t\t\t\t)()\n\t\t\t\t}\n\t\t\t)\n\t\t}\n\t}`));\n\tadd(new RawFunc(`__helios__map[${TTPP}0@${TTPP}1]__find_key`,\n\t`(self) -> {\n\t\t(fn) -> {\n\t\t\t(recurse) -> {\n\t\t\t\trecurse(recurse, self)\n\t\t\t}(\n\t\t\t\t(recurse, map) -> {\n\t\t\t\t\t__core__chooseList(\n\t\t\t\t\t\tmap, \n\t\t\t\t\t\t() -> {__helios__error(\"not found\")}, \n\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t(item) -> {\n\t\t\t\t\t\t\t\t__core__ifThenElse(\n\t\t\t\t\t\t\t\t\tfn(item), \n\t\t\t\t\t\t\t\t\t() -> {item}, \n\t\t\t\t\t\t\t\t\t() -> {recurse(recurse, __core__tailList__safe(map))}\n\t\t\t\t\t\t\t\t)()\n\t\t\t\t\t\t\t}(${TTPP}0__from_data(__core__fstPair(__core__headList__safe(map))))\n\t\t\t\t\t\t}\n\t\t\t\t\t)()\n\t\t\t\t}\n\t\t\t)\n\t\t}\n\t}`));\n\tadd(new RawFunc(`__helios__map[${TTPP}0@${TTPP}1]__find_key_safe`,\n\t`(self) -> {\n\t\t(fn) -> {\n\t\t\t__helios__common__find_safe(\n\t\t\t\tself,\n\t\t\t\t(pair) -> {\n\t\t\t\t\tfn(${TTPP}0__from_data(__core__fstPair(pair)))\n\t\t\t\t},\n\t\t\t\t__core__fstPair\n\t\t\t)\n\t\t}\n\t}`));\n\tadd(new RawFunc(`__helios__map[${TTPP}0@${TTPP}1]__find_value`,\n\t`(self) -> {\n\t\t(fn) -> {\n\t\t\t(recurse) -> {\n\t\t\t\trecurse(recurse, self)\n\t\t\t}(\n\t\t\t\t(recurse, map) -> {\n\t\t\t\t\t__core__chooseList(\n\t\t\t\t\t\tmap, \n\t\t\t\t\t\t() -> {__helios__error(\"not found\")}, \n\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t(item) -> {\n\t\t\t\t\t\t\t\t__core__ifThenElse(\n\t\t\t\t\t\t\t\t\tfn(item), \n\t\t\t\t\t\t\t\t\t() -> {item}, \n\t\t\t\t\t\t\t\t\t() -> {recurse(recurse, __core__tailList__safe(map))}\n\t\t\t\t\t\t\t\t)()\n\t\t\t\t\t\t\t}(${TTPP}1__from_data(__core__sndPair(__core__headList__safe(map))))\n\t\t\t\t\t\t}\n\t\t\t\t\t)()\n\t\t\t\t}\n\t\t\t)\n\t\t}\n\t}`));\n\tadd(new RawFunc(`__helios__map[${TTPP}0@${TTPP}1]__find_value_safe`,\n\t`(self) -> {\n\t\t(fn) -> {\n\t\t\t__helios__common__find_safe(\n\t\t\t\tself,\n\t\t\t\t(pair) -> {\n\t\t\t\t\tfn(${TTPP}1__from_data(__core__sndPair(pair)))\n\t\t\t\t},\n\t\t\t\t__core__sndPair\n\t\t\t)\n\t\t}\n\t}`));\n\tadd(new RawFunc(`__helios__map[${TTPP}0@${TTPP}1]__map[${FTPP}0@${FTPP}1]`,\n\t`(self) -> {\n\t\t(fn) -> {\n\t\t\t__helios__common__map(\n\t\t\t\tself,\n\t\t\t\t(pair) -> {\n\t\t\t\t\t(mapped_pair) -> {\n\t\t\t\t\t\tmapped_pair(\n\t\t\t\t\t\t\t(key, value) -> {\n\t\t\t\t\t\t\t\t__core__mkPairData(${FTPP}0____to_data(key), ${FTPP}1____to_data(value))\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t)\n\t\t\t\t\t}(fn(${TTPP}0__from_data(__core__fstPair(pair)), ${TTPP}1__from_data(__core__sndPair(pair))))\n\t\t\t\t}, \n\t\t\t\t__core__mkNilPairData(())\n\t\t\t)\n\t\t}\n\t}`));\n\tadd(new RawFunc(`__helios__map[${TTPP}0@${TTPP}1]__fold[${FTPP}0]`,\n\t`(self) -> {\n\t\t(fn, z) -> {\n\t\t\t__helios__common__fold(self,\n\t\t\t\t(z, pair) -> {\n\t\t\t\t\tfn(z, ${TTPP}0__from_data(__core__fstPair(pair)), ${TTPP}1__from_data(__core__sndPair(pair)))\n\t\t\t\t}, \n\t\t\t\tz\n\t\t\t)\n\t\t}\n\t}`));\n\tadd(new RawFunc(`__helios__map[${TTPP}0@${TTPP}1]__fold_lazy[${FTPP}0]`,\n\t`(self) -> {\n\t\t(fn, z) -> {\n\t\t\t__helios__common__fold_lazy(self, \n\t\t\t\t(pair, next) -> {\n\t\t\t\t\tfn(${TTPP}0__from_data(__core__fstPair(pair)), ${TTPP}1__from_data(__core__sndPair(pair)), next)\n\t\t\t\t}, \n\t\t\t\tz\n\t\t\t)\n\t\t}\n\t}`));\n\tadd(new RawFunc(`__helios__map[${TTPP}0@${TTPP}1]__for_each`,\n\t`(self) -> {\n\t\t(fn) -> {\n\t\t\t(recurse) -> {\n\t\t\t\trecurse(recurse, self)\n\t\t\t}(\n\t\t\t\t(recurse, map) -> {\n\t\t\t\t\t__core__chooseList(\n\t\t\t\t\t\tmap,\n\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t()\n\t\t\t\t\t\t},\n\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t(head) -> {\n\t\t\t\t\t\t\t\t__core__chooseUnit(\n\t\t\t\t\t\t\t\t\tfn(${TTPP}0__from_data(__core__fstPair(head)), ${TTPP}1__from_data(__core__sndPair(head))),\n\t\t\t\t\t\t\t\t\trecurse(recurse, __core__tailList__safe(map))\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t}(__core__headList__safe(map))\n\t\t\t\t\t\t}\n\t\t\t\t\t)()\n\t\t\t\t}\n\t\t\t)\n\t\t}\n\t}`));\n\tadd(new RawFunc(`__helios__map[${TTPP}0@${TTPP}1]__set`, \n\t`(self) -> {\n\t\t(key, value) -> {\n\t\t\t(key, value) -> {\n\t\t\t\t(recurse) -> {\n\t\t\t\t\trecurse(recurse, self)\n\t\t\t\t}(\n\t\t\t\t\t(recurse, self) -> {\n\t\t\t\t\t\t__core__chooseList(\n\t\t\t\t\t\t\tself,\n\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t__core__mkCons(__core__mkPairData(key, value), __core__mkNilPairData(()))\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t(head, tail) -> {\n\t\t\t\t\t\t\t\t\t__core__ifThenElse(\n\t\t\t\t\t\t\t\t\t\t__core__equalsData(key, __core__fstPair(head)),\n\t\t\t\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t\t\t\t__core__mkCons(__core__mkPairData(key, value), tail)\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t\t\t\t__core__mkCons(head, recurse(recurse, tail))\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t)()\n\t\t\t\t\t\t\t\t}(__core__headList__safe(self), __core__tailList__safe(self))\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t)()\n\t\t\t\t\t}\n\t\t\t\t)\n\t\t\t}(${TTPP}0____to_data(key), ${TTPP}1____to_data(value))\n\t\t}\n\t}`));\n\tadd(new RawFunc(`__helios__map[${TTPP}0@${TTPP}1]__to_iterator`,\n\t`(self) -> {\n\t\t() -> {\n\t\t\t(recurse) -> {\n\t\t\t\trecurse(recurse, self)\n\t\t\t}(\n\t\t\t\t(recurse, map) -> {\n\t\t\t\t\t(callback) -> {\n\t\t\t\t\t\t__core__chooseList(\n\t\t\t\t\t\t\tmap,\n\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\tcallback(true, (), (), ())\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t(head) -> {\n\t\t\t\t\t\t\t\t\tcallback(\n\t\t\t\t\t\t\t\t\t\tfalse, \n\t\t\t\t\t\t\t\t\t\t${TTPP}0__from_data(__core__fstPair(head)),\n\t\t\t\t\t\t\t\t\t\t${TTPP}1__from_data(__core__sndPair(head)),\n\t\t\t\t\t\t\t\t\t\trecurse(recurse, __core__tailList__safe(map))\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t}(__core__headList__safe(map))\t\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t)()\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t)\n\t\t}\n\t}`));\n\tadd(new RawFunc(`__helios__map[${TTPP}0@${TTPP}1]__from_iterator`,\n\t`(iterator) -> {\n\t\t(recurse) -> {\n\t\t\trecurse(recurse, iterator)\n\t\t}(\n\t\t\t(recurse, iterator) -> {\n\t\t\t\titerator(\n\t\t\t\t\t(is_null, head0, head1, next_iterator) -> {\n\t\t\t\t\t\t__core__ifThenElse(\n\t\t\t\t\t\t\tis_null,\n\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t__core__mkNilPairData(())\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t__core__mkCons(\n\t\t\t\t\t\t\t\t\t__core__mkPairData(${TTPP}0____to_data(head0), ${TTPP}1____to_data(head1)),\n\t\t\t\t\t\t\t\t\trecurse(recurse, next_iterator)\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t)()\n\t\t\t\t\t}\n\t\t\t\t)\n\t\t\t}\n\t\t)\n\t}`));\n\tadd(new RawFunc(`__helios__map[${TTPP}0@${TTPP}1]__update`,\n\t`(self) -> {\n\t\t(key, fn) -> {\n\t\t\t(key) -> {\n\t\t\t\t(recurse) -> {\n\t\t\t\t\trecurse(recurse, self)\n\t\t\t\t}(\n\t\t\t\t\t(recurse, map) -> {\n\t\t\t\t\t\t__core__chooseList(\n\t\t\t\t\t\t\tmap,\n\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t__helios__error(\"key not found\")\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t(pair) -> {\n\t\t\t\t\t\t\t\t\t__core__ifThenElse(\n\t\t\t\t\t\t\t\t\t\t__core__equalsData(key, __core__fstPair(pair)),\n\t\t\t\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t\t\t\t__core__mkCons(\n\t\t\t\t\t\t\t\t\t\t\t\t__core__mkPairData(\n\t\t\t\t\t\t\t\t\t\t\t\t\tkey,\n\t\t\t\t\t\t\t\t\t\t\t\t\t${TTPP}1____to_data(fn(${TTPP}1__from_data(__core__sndPair(pair))))\n\t\t\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t\t\t\t__core__tailList(map)\n\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t\t\t\t__core__mkCons(pair, recurse(recurse, __core__tailList__safe(map)))\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t)()\n\t\t\t\t\t\t\t\t}(__core__headList__safe(map))\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t)()\n\t\t\t\t\t}\n\t\t\t\t)\n\t\t\t}(${TTPP}0____to_data(key))\n\t\t}\n\t}`));\n\tadd(new RawFunc(`__helios__map[${TTPP}0@${TTPP}1]__update_safe`,\n\t`(self) -> {\n\t\t(key, fn) -> {\n\t\t\t(key) -> {\n\t\t\t\t__helios__common__map(\n\t\t\t\t\tself,\n\t\t\t\t\t(pair) -> {\n\t\t\t\t\t\t(oldKey, oldValue) -> {\n\t\t\t\t\t\t\t(newValue) -> {\n\t\t\t\t\t\t\t\t__core__mkPairData(oldKey, newValue)\n\t\t\t\t\t\t\t}(\n\t\t\t\t\t\t\t\t__core__ifThenElse(\n\t\t\t\t\t\t\t\t\t__core__equalsData(oldKey, key),\n\t\t\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t\t\t${TTPP}1____to_data(fn(${TTPP}1__from_data(oldValue)))\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t\t\toldValue\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t)()\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t}(__core__fstPair(pair), __core__sndPair(pair))\n\t\t\t\t\t}, \n\t\t\t\t\t__core__mkNilPairData(())\n\t\t\t\t)\n\t\t\t}(${TTPP}0____to_data(key))\n\t\t}\n\t}`));\n\tadd(new RawFunc(`__helios__map[${TTPP}0@${TTPP}1]__sort`,\n\t`(self) -> {\n\t\t(comp) -> {\n\t\t\t__helios__common__sort(\n\t\t\t\tself, \n\t\t\t\t(a, b) -> {\n\t\t\t\t\tcomp(\n\t\t\t\t\t\t${TTPP}0__from_data(__core__fstPair(a)), \n\t\t\t\t\t\t${TTPP}1__from_data(__core__sndPair(a)), \n\t\t\t\t\t\t${TTPP}0__from_data(__core__fstPair(b)),\n\t\t\t\t\t\t${TTPP}1__from_data(__core__sndPair(b))\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t)\n\t\t}\n\t}`));\n\n\n\t// Option[T] builtins\n\tadd(new RawFunc(`__helios__option[${TTPP}0]__test_data`,\n\t`(data) -> {\n\t\t__core__chooseData(\n\t\t\tdata,\n\t\t\t() -> {\n\t\t\t\t(pair) -> {\n\t\t\t\t\t(index, fields) -> {\n\t\t\t\t\t\t__core__ifThenElse(\n\t\t\t\t\t\t\t__core__equalsInteger(index, 0),\n\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t__core__chooseList(\n\t\t\t\t\t\t\t\t\tfields,\n\t\t\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t\t\tfalse\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t\t\t__core__chooseList(\n\t\t\t\t\t\t\t\t\t\t\t__core__tailList__safe(fields),\n\t\t\t\t\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t\t\t\t\t${TTPP}0__test_data(__core__headList__safe(fields))\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t\t\t\t\tfalse\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t)()\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t)()\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t__core__ifThenElse(\n\t\t\t\t\t\t\t\t\t__core__equalsInteger(index, 1),\n\t\t\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t\t\t__core__chooseList(\n\t\t\t\t\t\t\t\t\t\t\tfields,\n\t\t\t\t\t\t\t\t\t\t\ttrue,\n\t\t\t\t\t\t\t\t\t\t\tfalse\n\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t\t\tfalse\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t)()\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t)()\n\t\t\t\t\t}(__core__fstPair(pair), __core__sndPair(pair))\n\t\t\t\t}(__core__unConstrData__safe(data))\n\t\t\t},\n\t\t\t() -> {false},\n\t\t\t() -> {false},\n\t\t\t() -> {false},\n\t\t\t() -> {false}\n\t\t)()\n\t}`))\n\taddDataFuncs(`__helios__option[${TTPP}0]`, {\n\t\tfrom_data: `(data) -> {\n\t\t\t(ignore) -> {\n\t\t\t\tdata\n\t\t\t}(\n\t\t\t\t__core__ifThenElse(\n\t\t\t\t\t__helios__option[${TTPP}0]__test_data(data),\n\t\t\t\t\t() -> {\n\t\t\t\t\t\t()\n\t\t\t\t\t},\n\t\t\t\t\t() -> {\n\t\t\t\t\t\t__core__trace(\"Warning: invalid option data\", ())\n\t\t\t\t\t}\n\t\t\t\t)()\n\t\t\t)\n\t\t}`,\n\t\tfrom_data_safe: `(data) -> {\n\t\t\t__core__chooseData(\n\t\t\t\tdata,\n\t\t\t\t() -> {\n\t\t\t\t\t__helios__option__SOME_FUNC(data)\n\t\t\t\t},\n\t\t\t\t() -> {__helios__option__NONE_FUNC},\n\t\t\t\t() -> {__helios__option__NONE_FUNC},\n\t\t\t\t() -> {__helios__option__NONE_FUNC},\n\t\t\t\t() -> {__helios__option__NONE_FUNC}\n\t\t\t)()\n\t\t}`\n\t});\n\tadd(new RawFunc(`__helios__option[${TTPP}0]__map[${FTPP}0]`, \n\t`(self) -> {\n\t\t(fn) -> {\n\t\t\t(pair) -> {\n\t\t\t\t__core__ifThenElse(\n\t\t\t\t\t__core__equalsInteger(__core__fstPair(pair), 0),\n\t\t\t\t\t() -> {\n\t\t\t\t\t\t__helios__option[${FTPP}0]__some__new(\n\t\t\t\t\t\t\tfn(\n\t\t\t\t\t\t\t\t${TTPP}0__from_data(\n\t\t\t\t\t\t\t\t\t__core__headList(__core__sndPair(pair))\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t)\n\t\t\t\t\t},\n\t\t\t\t\t() -> {\n\t\t\t\t\t\t__helios__option[${FTPP}0]__none__new()\n\t\t\t\t\t}\n\t\t\t\t)()\n\t\t\t}(__core__unConstrData(self))\n\t\t}\n\t}`));\n\tadd(new RawFunc(`__helios__option[${TTPP}0]__unwrap`, \n\t`(self) -> {\n\t\t() -> {\n\t\t\t${TTPP}0__from_data(__helios__common__enum_field_0(self))\n\t\t}\n\t}`));\n\tadd(new RawFunc(`__helios__option[${TTPP}0]__show`,\n\t`(self) -> {\n\t\t__core__chooseData(\n\t\t\tself,\n\t\t\t() -> {\n\t\t\t\t(pair) -> {\n\t\t\t\t\t(index) -> {\n\t\t\t\t\t\t__core__ifThenElse(\n\t\t\t\t\t\t\t__core__equalsInteger(index, 0),\n\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t(fields) -> {\n\t\t\t\t\t\t\t\t\t__core__chooseList(\n\t\t\t\t\t\t\t\t\t\tfields,\n\t\t\t\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t\t\t\t\"Option::Some{<n/a>}\"\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t\t\t\t(some) -> {\n\t\t\t\t\t\t\t\t\t\t\t\tsome(\n\t\t\t\t\t\t\t\t\t\t\t\t\t(valid, value) -> {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t__core__ifThenElse(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalid,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t__core__appendString(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"Option::Some{\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t__core__appendString(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t${TTPP}0__show(value)(),\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"}\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"Option::Some{<n/a>}\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t)()\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t}(${TTPP}0__from_data_safe(__core__headList__safe(fields)))\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t)()\n\t\t\t\t\t\t\t\t}(__core__sndPair(pair))\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t\"Option::None\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t)()\n\t\t\t\t\t}(__core__fstPair(pair))\n\t\t\t\t}(__core__unConstrData__safe(self))\n\t\t\t},\n\t\t\t() -> {\"Option{<n/a>}\"},\n\t\t\t() -> {\"Option{<n/a>}\"},\n\t\t\t() -> {\"Option{<n/a>}\"},\n\t\t\t() -> {\"Option{<n/a>}\"}\n\t\t)\n\t}`))\n\n\n\t// Option[T]::Some\n\taddEnumDataFuncs(`__helios__option[${TTPP}0]__some`, 0);\n\tadd(new RawFunc(\"__helios__option__SOME_FUNC\", \n\t`(some) -> {\n\t\t(callback) -> {callback(true, some)}\n\t}`));\n\tadd(new RawFunc(`__helios__option[${TTPP}0]__some____new`,\n\t`(some) -> {\n\t\t__core__constrData(0, __helios__common__list_1(${TTPP}0____to_data(some)))\n\t}`));\n\tadd(new RawFunc(`__helios__option[${TTPP}0]__some__new`, `__helios__option[${TTPP}0]__some____new`));\n\tadd(new RawFunc(`__helios__option[${TTPP}0]__some__cast`,\n\t`(data) -> {\n\t\t__helios__common__assert_constr_index(data, 0)\n\t}`));\n\tadd(new RawFunc(`__helios__option[${TTPP}0]__some__some`, \n\t`(self) -> {\n\t\t${TTPP}0__from_data(__helios__common__enum_field_0(self))\n\t}`));\n\tadd(new RawFunc(`__helios__option__is_some`,\n\t`(data) -> {\n\t\t__core__equalsInteger(__core__fstPair(__core__unConstrData(data)), 0)\n\t}`));\n\t\n\n\t// Option[T]::None\n\taddEnumDataFuncs(`__helios__option[${TTPP}0]__none`, 1);\n\tadd(new RawFunc(\"__helios__option__NONE\", \"__core__constrData(1, __helios__common__list_0)\"));\n\tadd(new RawFunc(\"__helios__option__NONE_FUNC\", `(callback) -> {callback(false, ())}`));\n\tadd(new RawFunc(`__helios__option[${TTPP}0]__none____new`,\n\t`() -> {\n\t\t__helios__option__NONE\n\t}`));\n\tadd(new RawFunc(`__helios__option[${TTPP}0]__none__new`, `__helios__option[${TTPP}0]__none____new`));\n\tadd(new RawFunc(`__helios__option[${TTPP}0]__none__cast`,\n\t`(data) -> {\n\t\t__helios__common__assert_constr_index(data, 1)\n\t}`));\n\n\n\t// ScriptHash builtin\n\taddByteArrayLikeFuncs(\"__helios__scripthash\");\n\tadd(new RawFunc(\"__helios__scripthash__test_data\", `(data) -> {__helios__bytearray__test_data_fixed_length(data, 28)}`));\n\n\t\n\tfor (let hash of [\"pubkeyhash\", \"validatorhash\", \"mintingpolicyhash\", \"stakingvalidatorhash\", \"datumhash\"]) {\n\t// Hash builtins\n\t\taddByteArrayLikeFuncs(`__helios__${hash}`);\n\t\tadd(new RawFunc(`__helios__${hash}__test_data`,\n\t\t`(data) -> {\n\t\t\t__helios__bytearray__test_data_fixed_length(data, ${hash == \"datumhash\" ? 32 : 28})\n\t\t}`));\n\t\tadd(new RawFunc(`__helios__${hash}__from_script_hash`, \"__helios__common__identity\"));\n\t}\n\n\t\n\t// PubKey builtin\n\taddByteArrayLikeFuncs(\"__helios__pubkey\");\n\tadd(new RawFunc(\"__helios__pubkey__test_data\", `(data) -> {__helios__bytearray__test_data_fixed_length(data, 32)}`));\n\tadd(new RawFunc(\"__helios__pubkey__verify\", \n\t`(self) -> {\n\t\t(message, signature) -> {\n\t\t\t__core__verifyEd25519Signature(self, message, signature)\n\t\t}\n\t}`));\n\n\n\t// ScriptContext builtins\n\taddDataFuncs(\"__helios__scriptcontext\");\n\t// TODO: test fields\n\tadd(new RawFunc(\"__helios__scriptcontext__test_data\",\n\t`(data) -> {\n\t\t__core__chooseData(\n\t\t\tdata,\n\t\t\t() -> {\n\t\t\t\ttrue\n\t\t\t},\n\t\t\t() -> {false},\n\t\t\t() -> {false},\n\t\t\t() -> {false},\n\t\t\t() -> {false}\n\t\t)()\n\t}`));\n\tadd(new RawFunc(\"__helios__scriptcontext__new_spending\",\n\t`(tx, output_id) -> {\n\t\t__core__constrData(0, __helios__common__list_2(\n\t\t\ttx,\n\t\t\t__core__constrData(1, __helios__common__list_1(output_id))\n\t\t))\n\t}`));\n\tadd(new RawFunc(\"__helios__scriptcontext__new_minting\",\n\t`(tx, mph) -> {\n\t\t__core__constrData(0, __helios__common__list_2(\n\t\t\ttx,\n\t\t\t__core__constrData(\n\t\t\t\t0, \n\t\t\t\t__helios__common__list_1(\n\t\t\t\t\t__helios__mintingpolicyhash____to_data(mph)\n\t\t\t\t)\n\t\t\t)\n\t\t))\n\t}`));\n\tadd(new RawFunc(\"__helios__scriptcontext__new_rewarding\",\n\t`(tx, cred) -> {\n\t\t__core__constrData(0, __helios__common__list_2(\n\t\t\ttx,\n\t\t\t__core__constrData(2, __helios__common__list_1(cred))\n\t\t))\n\t}`));\n\tadd(new RawFunc(\"__helios__scriptcontext__new_certifying\",\n\t`(tx, dcert) -> {\n\t\t__core__constrData(0, __helios__common__list_2(\n\t\t\ttx,\n\t\t\t__core__constrData(3, __helios__common__list_1(dcert))\n\t\t))\n\t}`));\n\tadd(new RawFunc(\"__helios__scriptcontext__tx\", \"__helios__common__enum_field_0\"));\n\tadd(new RawFunc(\"__helios__scriptcontext__purpose\", \"__helios__common__enum_field_1\"));\n\tadd(new RawFunc(\"__helios__scriptcontext__get_current_input\",\n\t`(self) -> {\n\t\t() -> {\n\t\t\t(id) -> {\n\t\t\t\t(recurse) -> {\n\t\t\t\t\trecurse(recurse, __helios__tx__inputs(__helios__scriptcontext__tx(self)))\n\t\t\t\t}(\n\t\t\t\t\t(recurse, lst) -> {\n\t\t\t\t\t\t__core__chooseList(\n\t\t\t\t\t\t\tlst, \n\t\t\t\t\t\t\t() -> {__helios__error(\"not found\")}, \n\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t(item) -> {\n\t\t\t\t\t\t\t\t\t__core__ifThenElse(\n\t\t\t\t\t\t\t\t\t\t__core__equalsData(__helios__txinput__output_id(item), id), \n\t\t\t\t\t\t\t\t\t\t() -> {item}, \n\t\t\t\t\t\t\t\t\t\t() -> {recurse(recurse, __core__tailList__safe(lst))}\n\t\t\t\t\t\t\t\t\t)()\n\t\t\t\t\t\t\t\t}(__core__headList__safe(lst))\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t)()\n\t\t\t\t\t}\n\t\t\t\t)\n\t\t\t}(__helios__scriptcontext__get_spending_purpose_output_id(self)())\n\t\t}\n\t}`));\n\tadd(new RawFunc(\"__helios__scriptcontext__get_cont_outputs\",\n\t`(self) -> {\n\t\t() -> {\n\t\t\t(vh) -> {\n\t\t\t\t(outputs) -> {\n\t\t\t\t\t__helios__common__filter_list(\n\t\t\t\t\t\toutputs,\n\t\t\t\t\t\t(output) -> {\n\t\t\t\t\t\t\t(credential) -> {\n\t\t\t\t\t\t\t\t(pair) -> {\n\t\t\t\t\t\t\t\t\t__core__ifThenElse(\n\t\t\t\t\t\t\t\t\t\t__core__equalsInteger(__core__fstPair(pair), 0),\n\t\t\t\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t\t\t\tfalse\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t\t\t\t__core__equalsByteString(__core__unBData(__core__headList(__core__sndPair(pair))), vh)\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t)()\n\t\t\t\t\t\t\t\t}(__core__unConstrData(credential))\n\t\t\t\t\t\t\t}(__helios__address__credential(__helios__txoutput__address(output)))\n\t\t\t\t\t\t}\n\t\t\t\t\t)\n\t\t\t\t}(__helios__tx__outputs(__helios__scriptcontext__tx(self)))\n\t\t\t}(__helios__scriptcontext__get_current_validator_hash(self)())\n\t\t}\n\t}`));\n\tadd(new RawFunc(\"__helios__scriptcontext__get_spending_purpose_output_id\",\n\t`(self) -> {\n\t\t() -> {\n\t\t\t__helios__common__enum_field_0(__helios__common__enum_field_1(self))\n\t\t}\n\t}`));\n\tadd(new RawFunc(\"__helios__scriptcontext__get_current_validator_hash\",\n\t`(self) -> {\n\t\t() -> {\n\t\t\t__helios__credential__validator__hash(\n\t\t\t\t__helios__credential__validator__cast(\n\t\t\t\t\t__helios__address__credential(\n\t\t\t\t\t\t__helios__txoutput__address(\n\t\t\t\t\t\t\t__helios__txinput__output(\n\t\t\t\t\t\t\t\t__helios__scriptcontext__get_current_input(self)()\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t)\n\t\t\t\t\t)\n\t\t\t\t)\n\t\t\t)\n\t\t}\n\t}`));\n\tadd(new RawFunc(\"__helios__scriptcontext__get_current_minting_policy_hash\", \n\t`(self) -> {\n\t\t() -> {\n\t\t\t__helios__mintingpolicyhash__from_data(__helios__scriptcontext__get_spending_purpose_output_id(self)())\n\t\t}\n\t}`));\n\tadd(new RawFunc(\"__helios__scriptcontext__get_staking_purpose\", \n\t`(self) -> {\n\t\t() -> {\n\t\t\t__helios__scriptcontext__purpose(self)\n\t\t}\n\t}`));\n\tadd(new RawFunc(\"__helios__scriptcontext__get_script_purpose\", \n\t`(self) -> {\n\t\t() -> {\n\t\t\t__helios__scriptcontext__purpose(self)\n\t\t}\n\t}`));\n\n\t\n\t// ContractContext builtin\n\taddDataFuncs(\"__helios__contractcontext\");\n\tadd(new RawFunc(\"__helios__contractcontext__now\", \n\t`(self) -> {\n\t\t() -> {\n\t\t\t__core__macro__now(())\n\t\t}\n\t}`));\n\tadd(new RawFunc(\"__helios__contractcontext__agent\", `(self) -> {self}`));\n\tadd(new RawFunc(\"__helios__contractcontext__network\", `(self) -> {()}`));\n\tadd(new RawFunc(\"__helios__contractcontext__new_tx_builder\", `(self) -> {__helios__txbuilder__new_empty}`));\n\n\n\t// Network builtin\n\tadd(new RawFunc(\"__helios__network__pick\", \n\t`(self) -> {\n\t\t(address, value) -> {\n\t\t\t__core__macro__pick(__helios__address____to_data(address), __helios__value____to_data(value), ())\n\t\t}\n\t}`));\n\tadd(new RawFunc(\"__helios__network__get\",\n\t`(self) -> {\n\t\t(id) -> {\n\t\t\t__core__macro__get_utxo(__helios__txoutputid____to_data(id), ())\n\t\t}\n\t}`));\n\tadd(new RawFunc(\"__helios__network__utxos_at\",\n\t`(self) -> {\n\t\t(addr) -> {\n\t\t\t__helios__list[__helios__data]__to_iterator(\n\t\t\t\t__core__macro__utxos_at(__helios__address____to_data(addr), ())\n\t\t\t)()\n\t\t}\n\t}`))\n\n\n\t// Wallet builtin\n\taddDataFuncs(\"__helios__wallet\");\n\tadd(new RawFunc(\"__helios__wallet__address\", `(self) -> {__helios__common__enum_field_1(self)}`));\n\tadd(new RawFunc(\"__helios__wallet__hash\", \n\t`(self) -> {\n\t\t__helios__credential__pubkey__hash(\n\t\t\t__helios__credential__pubkey__cast(\n\t\t\t\t__helios__address__credential(\n\t\t\t\t\t__helios__common__enum_field_0(self)\n\t\t\t\t)\n\t\t\t)\n\t\t)\n\t}`));\n\tadd(new RawFunc(\"__helios__wallet__pick\", \n\t`(self) -> {\n\t\t(value) -> {\n\t\t\t__core__macro__pick(__helios__common__enum_field_0(self), __helios__value____to_data(value), ())\n\t\t}\n\t}`));\n\n\n\t// StakingPurpose builtins\n\taddDataFuncs(\"__helios__stakingpurpose\");\n\tadd(new RawFunc(\"__helios__stakingpurpose__testdata\", \n\t`(data) -> {\n\t\t__core__chooseData(\n\t\t\tdata,\n\t\t\t() -> {\n\t\t\t\ttrue\n\t\t\t},\n\t\t\t() -> {false},\n\t\t\t() -> {false},\n\t\t\t() -> {false},\n\t\t\t() -> {false}\n\t\t)()\n\t}`));\n\n\n\t// StakingPurpose::Rewarding builtins\n\taddEnumDataFuncs(\"__helios__stakingpurpose__rewarding\", 2);\n\tadd(new RawFunc(\"__helios__stakingpurpose__rewarding__credential\", \"__helios__common__enum_field_0\"));\n\n\t\n\t// StakingPurpose::Certifying builtins\n\taddEnumDataFuncs(\"__helios__stakingpurpose__certifying\", 3);\n\tadd(new RawFunc(\"__helios__stakingpurpose__certifying__dcert\", \"__helios__common__enum_field_0\"));\n\n\n\t// ScriptPurpose builtins\n\taddDataFuncs(\"__helios__scriptpurpose\");\n\t// TODO: test fields\n\tadd(new RawFunc(\"__helios__scriptpurpose__test_data\",\n\t`(data) -> {\n\t\t__core__chooseData(\n\t\t\tdata,\n\t\t\t() -> {\n\t\t\t\ttrue\n\t\t\t},\n\t\t\t() -> {false},\n\t\t\t() -> {false},\n\t\t\t() -> {false},\n\t\t\t() -> {false}\n\t\t)()\n\t}`));\n\tadd(new RawFunc(\"__helios__scriptpurpose__new_minting\",\n\t`(mph) -> {\n\t\t__core__constrData(0, __helios__common__list_1(__helios__mintingpolicyhash____to_data(mph)))\n\t}`));\n\tadd(new RawFunc(\"__helios__scriptpurpose__new_spending\",\n\t`(output_id) -> {\n\t\t__core__constrData(1, __helios__common__list_1(output_id))\n\t}`));\n\tadd(new RawFunc(\"__helios__scriptpurpose__new_rewarding\",\n\t`(cred) -> {\n\t\t__core__constrData(2, __helios__common__list_1(cred))\n\t}`));\n\tadd(new RawFunc(\"__helios__scriptpurpose__new_certifying\",\n\t`(action) -> {\n\t\t__core__constrData(3, __helios__common__list_1(action))\n\t}`));\n\n\n\t// ScriptPurpose::Minting builtins\n\taddEnumDataFuncs(\"__helios__scriptpurpose__minting\", 0);\n\tadd(new RawFunc(\"__helios__scriptpurpose__minting__policy_hash\", \n\t`(self) -> {\n\t\t__helios__mintingpolicyhash__from_data(__helios__common__enum_field_0(self))\n\t}`));\n\n\t\n\t// ScriptPurpose::Spending builtins\n\taddEnumDataFuncs(\"__helios__scriptpurpose__spending\", 1);\n\tadd(new RawFunc(\"__helios__scriptpurpose__spending__output_id\", \"__helios__common__enum_field_0\"));\n\n\t\n\t// ScriptPurpose::Rewarding builtins\n\taddEnumDataFuncs(\"__helios__scriptpurpose__rewarding\", 2);\n\tadd(new RawFunc(\"__helios__scriptpurpose__rewarding__credential\", \"__helios__common__enum_field_0\"));\n\n\t\n\t// ScriptPurpose::Certifying builtins\n\taddEnumDataFuncs(\"__helios__scriptpurpose__certifying\", 3);\n\tadd(new RawFunc(\"__helios__scriptpurpose__certifying__dcert\", \"__helios__common__enum_field_0\"));\n\n\n\t// DCert builtins\n\taddDataFuncs(\"__helios__dcert\");\n\t// TODO: test each enum variant\n\tadd(new RawFunc(\"__helios__dcert__test_data\",\n\t`(data) -> {\n\t\t__core__chooseData(\n\t\t\tdata,\n\t\t\t() -> {\n\t\t\t\ttrue\n\t\t\t},\n\t\t\t() -> {false},\n\t\t\t() -> {false},\n\t\t\t() -> {false},\n\t\t\t() -> {false}\n\t\t)()\n\t}`));\n\tadd(new RawFunc(\"__helios__dcert__new_register\",\n\t`(cred) -> {\n\t\t__core__constrData(0, __helios__common__list_1(cred))\n\t}`));\n\tadd(new RawFunc(\"__helios__dcert__new_deregister\",\n\t`(cred) -> {\n\t\t__core__constrData(1, __helios__common__list_1(cred))\n\t}`));\n\tadd(new RawFunc(\"__helios__dcert__new_delegate\",\n\t`(cred, pool_id) -> {\n\t\t__core__constrData(2, __helios__common__list_2(cred, __helios__pubkeyhash____to_data(pool_id)))\n\t}`));\n\tadd(new RawFunc(\"__helios__dcert__new_register_pool\",\n\t`(id, vrf) -> {\n\t\t__core__constrData(3, __helios__common__list_2(__helios__pubkeyhash____to_data(id), __helios__pubkeyhash____to_data(vrf)))\n\t}`));\n\tadd(new RawFunc(\"__helios__dcert__new_retire_pool\",\n\t`(id, epoch) -> {\n\t\t__core__constrData(4, __helios__common__list_2(__helios__pubkeyhash____to_data(id), __helios__int____to_data(epoch)))\n\t}`));\n\n\n\t// DCert::Register builtins\n\taddEnumDataFuncs(\"__helios__dcert__register\", 0);\n\tadd(new RawFunc(\"__helios__dcert__register__credential\", \"__helios__common__enum_field_0\"));\n\n\n\t// DCert::Deregister builtins\n\taddEnumDataFuncs(\"__helios__dcert__deregister\", 1);\n\tadd(new RawFunc(\"__helios__dcert__deregister__credential\", \"__helios__common__enum_field_0\"));\n\n\n\t// DCert::Delegate builtins\n\taddEnumDataFuncs(\"__helios__dcert__delegate\", 2);\n\tadd(new RawFunc(\"__helios__dcert__delegate__delegator\", \"__helios__common__enum_field_0\"));\n\tadd(new RawFunc(\"__helios__dcert__delegate__pool_id\", \n\t`(self) -> {\n\t\t__helios__pubkeyhash__from_data(__helios__common__enum_field_1(self))\n\t}`));\n\n\n\t// DCert::RegisterPool builtins\n\taddEnumDataFuncs(\"__helios__dcert__registerpool\", 3);\n\tadd(new RawFunc(\"__helios__dcert__registerpool__pool_id\", \n\t`(self) -> {\n\t\t__helios__pubkeyhash__from_data(__helios__common__enum_field_0(self))\n\t}`));\n\tadd(new RawFunc(\"__helios__dcert__registerpool__pool_vrf\", \n\t`(self) -> {\n\t\t__helios__pubkeyhash__from_data(__helios__common__enum_field_1(self))\n\t}`));\n\n\n\t// DCert::RetirePool builtins\n\taddEnumDataFuncs(\"__helios__dcert__retirepool\", 4);\n\tadd(new RawFunc(\"__helios__dcert__retirepool__pool_id\", \n\t`(self) -> {\n\t\t__helios__pubkeyhash__from_data(__helios__common__enum_field_0(self))\n\t}`));\n\tadd(new RawFunc(\"__helios__dcert__retirepool__epoch\", \n\t`(self) -> {\n\t\t__helios__int__from_data(__helios__common__enum_field_1(self))\n\t}`));\n\n\n\t// TxBuilder builtins\n\taddDataFuncs(\"__helios__txbuilder\");\n\tadd(new RawFunc(`__helios__txbuilder__new`,\n\t`(inputs, ref_inputs, outputs, fee, minted, dcerts, withdrawals, validity, signatories, redeemers, datums) -> {\n\t\t__core__constrData(0, __helios__common__list_12(\n\t\t\t__core__listData(inputs),\n\t\t\t__core__listData(ref_inputs),\n\t\t\t__core__listData(outputs),\n\t\t\t__core__mapData(fee),\n\t\t\t__core__mapData(minted),\n\t\t\t__core__listData(dcerts),\n\t\t\t__core__mapData(withdrawals),\n\t\t\t__helios__timerange____to_data(validity),\n\t\t\t__core__listData(signatories),\n\t\t\t__core__mapData(redeemers),\n\t\t\t__core__mapData(datums),\n\t\t\t__helios__txid__new(#00010203040506070809101112131415161718192021222324252627)\n\t\t))\n\t}`));\n\tadd(new RawFunc(`__helios__txbuilder__new_empty`,\n\t`() -> {\n\t\t__helios__txbuilder__new(\n\t\t\t__core__mkNilData(()),\n\t\t\t__core__mkNilData(()),\n\t\t\t__core__mkNilData(()),\n\t\t\t__core__mkNilPairData(()),\n\t\t\t__core__mkNilPairData(()),\n\t\t\t__core__mkNilData(()),\n\t\t\t__core__mkNilPairData(()),\n\t\t\t__helios__timerange__ALWAYS,\n\t\t\t__core__mkNilData(()),\n\t\t\t__core__mkNilPairData(()),\n\t\t\t__core__mkNilPairData(())\n\t\t)\n\t}`));\n\tadd(new RawFunc(`__helios__txbuilder__unwrap`, \n\t`(self, callback) -> {\n\t\t(fields) -> {\n\t\t\t(inputs, fields) -> {\n\t\t\t\t(ref_inputs, fields) -> {\n\t\t\t\t\t(outputs, fields) -> {\n\t\t\t\t\t\t(fee, fields) -> {\n\t\t\t\t\t\t\t(minted, fields) -> {\n\t\t\t\t\t\t\t\t(dcerts, fields) -> {\n\t\t\t\t\t\t\t\t\t(withdrawals, fields) -> {\n\t\t\t\t\t\t\t\t\t\t(validity, fields) -> {\n\t\t\t\t\t\t\t\t\t\t\t(signatories, fields) -> {\n\t\t\t\t\t\t\t\t\t\t\t\t(redeemers, fields) -> {\n\t\t\t\t\t\t\t\t\t\t\t\t\t(datums, fields) -> {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcallback(inputs, ref_inputs, outputs, fee, minted, dcerts, withdrawals, validity, signatories, redeemers, datums)\n\t\t\t\t\t\t\t\t\t\t\t\t\t}(__core__unMapData(__core__headList(fields)), __core__tailList(fields))\n\t\t\t\t\t\t\t\t\t\t\t\t}(__core__unMapData(__core__headList(fields)), __core__tailList(fields))\n\t\t\t\t\t\t\t\t\t\t\t}(__core__unListData(__core__headList(fields)), __core__tailList(fields))\n\t\t\t\t\t\t\t\t\t\t}(__helios__timerange__from_data(__core__headList(fields)), __core__tailList(fields))\n\t\t\t\t\t\t\t\t\t}(__core__unMapData(__core__headList(fields)), __core__tailList(fields))\n\t\t\t\t\t\t\t\t}(__core__unListData(__core__headList(fields)), __core__tailList(fields))\n\t\t\t\t\t\t\t}(__core__unMapData(__core__headList(fields)), __core__tailList(fields))\n\t\t\t\t\t\t}(__core__unMapData(__core__headList(fields)), __core__tailList(fields))\n\t\t\t\t\t}(__core__unListData(__core__headList(fields)), __core__tailList(fields))\n\t\t\t\t}(__core__unListData(__core__headList(fields)), __core__tailList(fields))\n\t\t\t}(__core__unListData(__core__headList(fields)), __core__tailList(fields))\n\t\t}(__core__sndPair(__core__unConstrData(self)))\n\t}`));\n\tadd(new RawFunc(`__helios__txbuilder__spend`, \n\t`(self) -> {\n\t\t(input) -> {\n\t\t\t__helios__txbuilder__unwrap(self, (inputs, ref_inputs, outputs, fee, minted, dcerts, withdrawals, validity, signatories, redeemers, datums) -> {\n\t\t\t\t__helios__txbuilder__new(\n\t\t\t\t\t__helios__list[__helios__data]__append(inputs)(__helios__txinput____to_data(input)),\n\t\t\t\t\tref_inputs,\n\t\t\t\t\toutputs, \n\t\t\t\t\tfee, \n\t\t\t\t\tminted, \n\t\t\t\t\tdcerts, \n\t\t\t\t\twithdrawals, \n\t\t\t\t\tvalidity, \n\t\t\t\t\tsignatories, \n\t\t\t\t\tredeemers, \n\t\t\t\t\tdatums\n\t\t\t\t)\n\t\t\t})\n\t\t}\n\t}`));\n\tadd(new RawFunc(`__helios__txbuilder__spend_many`,\n\t`(self) -> {\n\t\t(extra_inputs) -> {\n\t\t\t__helios__txbuilder__unwrap(self, (inputs, ref_inputs, outputs, fee, minted, dcerts, withdrawals, validity, signatories, redeemers, datums) -> {\n\t\t\t\t__helios__txbuilder__new(\n\t\t\t\t\t__helios__common__concat(inputs, extra_inputs),\n\t\t\t\t\tref_inputs,\n\t\t\t\t\toutputs, \n\t\t\t\t\tfee, \n\t\t\t\t\tminted, \n\t\t\t\t\tdcerts, \n\t\t\t\t\twithdrawals, \n\t\t\t\t\tvalidity, \n\t\t\t\t\tsignatories, \n\t\t\t\t\tredeemers, \n\t\t\t\t\tdatums\n\t\t\t\t)\n\t\t\t})\n\t\t}\n\t}`))\n\tadd(new RawFunc(`__helios__txbuilder__redeem[${FTPP}0]`, \n\t`(self) -> {\n\t\t(input, redeemer) -> {\n\t\t\t__helios__txbuilder__unwrap(self, (inputs, ref_inputs, outputs, fee, minted, dcerts, withdrawals, validity, signatories, redeemers, datums) -> {\n\t\t\t\t__helios__txbuilder__new(\n\t\t\t\t\t__helios__list[__helios__data]__append(inputs)(\n\t\t\t\t\t\t__helios__txinput____to_data(input)\n\t\t\t\t\t),\n\t\t\t\t\tref_inputs, \n\t\t\t\t\toutputs, \n\t\t\t\t\tfee, \n\t\t\t\t\tminted, \n\t\t\t\t\tdcerts, \n\t\t\t\t\twithdrawals, \n\t\t\t\t\tvalidity, \n\t\t\t\t\tsignatories,\n\t\t\t\t\t__helios__map[__helios__data@__helios__data]__append(redeemers)(\n\t\t\t\t\t\t__helios__scriptpurpose__new_spending(__helios__txinput__output_id(input)),\n\t\t\t\t\t\t${FTPP}0____to_data(redeemer)\n\t\t\t\t\t),\n\t\t\t\t\tdatums\n\t\t\t\t)\n\t\t\t})\n\t\t}\n\t}`));\n\tadd(new RawFunc(`__helios__txbuilder__redeem_many[${FTPP}0]`,\n\t`(self) -> {\n\t\t(inputs, redeemer) -> {\n\t\t\t(recurse) -> {\n\t\t\t\trecurse(recurse, inputs)\n\t\t\t}(\n\t\t\t\t(recurse, inputs) -> {\n\t\t\t\t\t__core__chooseList(\n\t\t\t\t\t\tinputs,\n\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\tself\n\t\t\t\t\t\t},\n\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t__helios__txbuilder__redeem[${FTPP}0](\n\t\t\t\t\t\t\t\trecurse(recurse, __core__tailList__safe(inputs))\n\t\t\t\t\t\t\t)(\n\t\t\t\t\t\t\t\t__core__headList__safe(inputs),\n\t\t\t\t\t\t\t\tredeemer\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t}\n\t\t\t\t\t)()\n\t\t\t\t}\n\t\t\t)\n\t\t}\n\t}`));\n\tadd(new RawFunc(`__helios__txbuilder__add_output`,\n\t`(self) -> {\n\t\t(output) -> {\n\t\t\t__helios__txbuilder__unwrap(self, (inputs, ref_inputs, outputs, fee, minted, dcerts, withdrawals, validity, signatories, redeemers, datums) -> {\n\t\t\t\t__helios__txbuilder__new(\n\t\t\t\t\tinputs,\n\t\t\t\t\tref_inputs,\n\t\t\t\t\t__helios__list[__helios__data]__append(outputs)(\n\t\t\t\t\t\t__helios__txoutput____to_data(output)\n\t\t\t\t\t),\n\t\t\t\t\tfee,\n\t\t\t\t\tminted,\n\t\t\t\t\tdcerts,\n\t\t\t\t\twithdrawals,\n\t\t\t\t\tvalidity,\n\t\t\t\t\tsignatories,\n\t\t\t\t\tredeemers,\n\t\t\t\t\tdatums\n\t\t\t\t)\n\t\t\t})\n\t\t}\n\t}`));\n\tadd(new RawFunc(`__helios__txbuilder__add_outputs`,\n\t`(self) -> {\n\t\t(extra_outputs) -> {\n\t\t\t__helios__txbuilder__unwrap(self, (inputs, ref_inputs, outputs, fee, minted, dcerts, withdrawals, validity, signatories, redeemers, datums) -> {\n\t\t\t\t__helios__txbuilder__new(\n\t\t\t\t\tinputs,\n\t\t\t\t\tref_inputs,\n\t\t\t\t\t__helios__common__concat(outputs, extra_outputs),\n\t\t\t\t\tfee,\n\t\t\t\t\tminted,\n\t\t\t\t\tdcerts,\n\t\t\t\t\twithdrawals,\n\t\t\t\t\tvalidity,\n\t\t\t\t\tsignatories,\n\t\t\t\t\tredeemers,\n\t\t\t\t\tdatums\n\t\t\t\t)\n\t\t\t})\n\t\t}\n\t}`));\n\tadd(new RawFunc(`__helios__txbuilder__pay[${FTPP}0]`,\n\t`(self) -> {\n\t\t(address, value, datum) -> {\n\t\t\t__helios__txbuilder__unwrap(self, (inputs, ref_inputs, outputs, fee, minted, dcerts, withdrawals, validity, signatories, redeemers, datums) -> {\n\t\t\t\t__helios__txbuilder__new(\n\t\t\t\t\tinputs,\n\t\t\t\t\tref_inputs,\n\t\t\t\t\t__helios__list[__helios__data]__append(outputs)(\n\t\t\t\t\t\t__helios__txoutput____to_data(\n\t\t\t\t\t\t\t__helios__txoutput__new(\n\t\t\t\t\t\t\t\taddress, \n\t\t\t\t\t\t\t\tvalue, \n\t\t\t\t\t\t\t\t__helios__outputdatum__new_inline[__helios__data](\n\t\t\t\t\t\t\t\t\t${FTPP}0____to_data(datum)\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t)\n\t\t\t\t\t),\n\t\t\t\t\tfee,\n\t\t\t\t\tminted,\n\t\t\t\t\tdcerts,\n\t\t\t\t\twithdrawals,\n\t\t\t\t\tvalidity,\n\t\t\t\t\tsignatories,\n\t\t\t\t\tredeemers,\n\t\t\t\t\tdatums\n\t\t\t\t)\n\t\t\t})\n\t\t}\n\t}`));\n\tadd(new RawFunc(`__helios__txbuilder__pay_if_true[${FTPP}0]`,\n\t`(self) -> {\n\t\t(cond, address, value, datum) -> {\n\t\t\t__core__ifThenElse(\n\t\t\t\tcond,\n\t\t\t\t() -> {\n\t\t\t\t\t__helios__txbuilder__unwrap(self, (inputs, ref_inputs, outputs, fee, minted, dcerts, withdrawals, validity, signatories, redeemers, datums) -> {\n\t\t\t\t\t\t__helios__txbuilder__new(\n\t\t\t\t\t\t\tinputs,\n\t\t\t\t\t\t\tref_inputs,\n\t\t\t\t\t\t\t__helios__list[__helios__data]__append(outputs)(\n\t\t\t\t\t\t\t\t__helios__txoutput____to_data(\n\t\t\t\t\t\t\t\t\t__helios__txoutput__new(\n\t\t\t\t\t\t\t\t\t\taddress, \n\t\t\t\t\t\t\t\t\t\tvalue, \n\t\t\t\t\t\t\t\t\t\t__helios__outputdatum__new_inline[__helios__data](\n\t\t\t\t\t\t\t\t\t\t\t${FTPP}0____to_data(datum)\n\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\tfee,\n\t\t\t\t\t\t\tminted,\n\t\t\t\t\t\t\tdcerts,\n\t\t\t\t\t\t\twithdrawals,\n\t\t\t\t\t\t\tvalidity,\n\t\t\t\t\t\t\tsignatories,\n\t\t\t\t\t\t\tredeemers,\n\t\t\t\t\t\t\tdatums\n\t\t\t\t\t\t)\n\t\t\t\t\t})\n\t\t\t\t},\n\t\t\t\t() -> {\n\t\t\t\t\tself\n\t\t\t\t}\n\t\t\t)()\n\t\t}\n\t}`));\n\tadd(new RawFunc(`__helios__txbuilder__mint[${FTPP}0]`,\n\t`(self) -> {\n\t\t(value, redeemer) -> {\n\t\t\t__core__chooseUnit(\n\t\t\t\t__helios__assert(\n\t\t\t\t\t__core__equalsInteger(__helios__common__length(value), 1),\n\t\t\t\t\t__helios__string____add(\"expected a single mph in mint value, got \", __helios__int__show(__helios__common__length(value))())\n\t\t\t\t),\n\t\t\t\t(mph) -> {\n\t\t\t\t\t__helios__txbuilder__unwrap(self, (inputs, ref_inputs, outputs, fee, minted, dcerts, withdrawals, validity, signatories, redeemers, datums) -> {\n\t\t\t\t\t\t__core__chooseUnit(\n\t\t\t\t\t\t\t__helios__assert(\n\t\t\t\t\t\t\t\t__helios__bool____not(\n\t\t\t\t\t\t\t\t\t__helios__value__contains_policy(minted)(mph)\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\"already minted before\"\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t__helios__txbuilder__new(\n\t\t\t\t\t\t\t\tinputs,\n\t\t\t\t\t\t\t\tref_inputs,\n\t\t\t\t\t\t\t\toutputs,\n\t\t\t\t\t\t\t\tfee,\n\t\t\t\t\t\t\t\t__helios__value____add(minted, value),\n\t\t\t\t\t\t\t\tdcerts,\n\t\t\t\t\t\t\t\twithdrawals,\n\t\t\t\t\t\t\t\tvalidity,\n\t\t\t\t\t\t\t\tsignatories,\n\t\t\t\t\t\t\t\t__helios__map[__helios__data@__helios__data]__append(redeemers)(\n\t\t\t\t\t\t\t\t\t__helios__scriptpurpose__new_minting(mph),\n\t\t\t\t\t\t\t\t\t${FTPP}0____to_data(redeemer)\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\tdatums\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t)\n\t\t\t\t\t})\n\t\t\t\t}(__helios__mintingpolicyhash__from_data(__core__fstPair(__core__headList(value))))\n\t\t\t)\n\t\t}\n\t}`));\n\tadd(new RawFunc(`__helios__txbuilder__add_ref_input`, \n\t`(self) -> {\n\t\t(ref_input) -> {\n\t\t\t__helios__txbuilder__unwrap(self, (inputs, ref_inputs, outputs, fee, minted, dcerts, withdrawals, validity, signatories, redeemers, datums) -> {\n\t\t\t\t__helios__txbuilder__new(\n\t\t\t\t\tinputs,\n\t\t\t\t\t__helios__list[__helios__data]__append(ref_inputs)(__helios__txinput____to_data(ref_input)),\n\t\t\t\t\toutputs,\n\t\t\t\t\tfee,\n\t\t\t\t\tminted,\n\t\t\t\t\tdcerts,\n\t\t\t\t\twithdrawals,\n\t\t\t\t\tvalidity,\n\t\t\t\t\tsignatories,\n\t\t\t\t\tredeemers,\n\t\t\t\t\tdatums\n\t\t\t\t)\n\t\t\t})\n\t\t}\n\t}`));\n\tadd(new RawFunc(`__helios__txbuilder__add_signer`,\n\t`(self) -> {\n\t\t(pk) -> {\n\t\t\t__helios__txbuilder__unwrap(self, (inputs, ref_inputs, outputs, fee, minted, dcerts, withdrawals, validity, signatories, redeemers, datums) -> {\n\t\t\t\t__helios__txbuilder__new(\n\t\t\t\t\tinputs,\n\t\t\t\t\tref_inputs,\n\t\t\t\t\toutputs,\n\t\t\t\t\tfee,\n\t\t\t\t\tminted,\n\t\t\t\t\tdcerts,\n\t\t\t\t\twithdrawals,\n\t\t\t\t\tvalidity,\n\t\t\t\t\t__helios__list[__helios__data]__append(signatories)(__helios__pubkeyhash____to_data(pk)),\n\t\t\t\t\tredeemers,\n\t\t\t\t\tdatums\n\t\t\t\t)\n\t\t\t})\n\t\t}\n\t}`));\n\tadd(new RawFunc(`__helios__txbuilder__finalize`,\n\t`(self) -> {\n\t\t() -> {\n\t\t\t__core__macro__finalize(self, ())\n\t\t}\n\t}`));\n\n\n\t// Tx builtins\n\taddDataFuncs(\"__helios__tx\");\n\t// TODO: test fields\n\tadd(new RawFunc(\"__helios__tx__test_data\",\n\t`(data) -> {\n\t\t__core__chooseData(\n\t\t\tdata,\n\t\t\t() -> {\n\t\t\t\ttrue\n\t\t\t},\n\t\t\t() -> {false},\n\t\t\t() -> {false},\n\t\t\t() -> {false},\n\t\t\t() -> {false}\n\t\t)()\n\t}`));\n\tadd(new RawFunc(`__helios__tx__new[${FTPP}0@${FTPP}1]`,\n\t`(inputs, ref_inputs, outputs, fee, minted, dcerts, withdrawals, validity, signatories, redeemers, datums, txId) -> {\n\t\t__core__constrData(0, __helios__common__list_12(\n\t\t\t__core__listData(inputs),\n\t\t\t__core__listData(ref_inputs),\n\t\t\t__core__listData(outputs),\n\t\t\t__core__mapData(fee),\n\t\t\t__core__mapData(minted),\n\t\t\t__core__listData(dcerts),\n\t\t\t__core__mapData(withdrawals),\n\t\t\t__helios__timerange____to_data(validity),\n\t\t\t__core__listData(signatories),\n\t\t\t__core__mapData(redeemers),\n\t\t\t__core__mapData(datums),\n\t\t\t__helios__txid____to_data(txId)\n\t\t))\n\t}`));\n\tadd(new RawFunc(\"__helios__tx__inputs\", \n\t`(self) -> {\n\t\t__core__unListData(__helios__common__enum_field_0(self))\n\t}`));\n\tadd(new RawFunc(\"__helios__tx__ref_inputs\", \n\t`(self) -> {\n\t\t__core__unListData(__helios__common__enum_field_1(self))\n\t}`))\n\tadd(new RawFunc(\"__helios__tx__outputs\", \n\t`(self) -> {\n\t\t__core__unListData(__helios__common__enum_field_2(self))\n\t}`));\n\tadd(new RawFunc(\"__helios__tx__fee\", \n\t`(self) -> {\n\t\t__core__unMapData(__helios__common__enum_field_3(self))\n\t}`));\n\tadd(new RawFunc(\"__helios__tx__minted\", \n\t`(self) -> {\n\t\t__core__unMapData(__helios__common__enum_field_4(self))\n\t}`));\n\tadd(new RawFunc(\"__helios__tx__dcerts\", \n\t`(self) -> {\n\t\t__core__unListData(__helios__common__enum_field_5(self))\n\t}`));\n\tadd(new RawFunc(\"__helios__tx__withdrawals\", \n\t`(self) -> {\n\t\t__core__unMapData(__helios__common__enum_field_6(self))\n\t}`));\n\tadd(new RawFunc(\"__helios__tx__time_range\", \"__helios__common__enum_field_7\"));\n\tadd(new RawFunc(\"__helios__tx__signatories\", \n\t`(self) -> {\n\t\t__core__unListData(__helios__common__enum_field_8(self))\n\t}`));\n\tadd(new RawFunc(\"__helios__tx__redeemers\", \n\t`(self) -> {\n\t\t__core__unMapData(__helios__common__enum_field_9(self))\n\t}`));\n\tadd(new RawFunc(\"__helios__tx__datums\", \n\t`(self) -> {\n\t\t__core__unMapData(__helios__common__enum_field_10(self))\n\t}`));\n\tadd(new RawFunc(\"__helios__tx__id\", \"__helios__common__enum_field_11\"));\n\tadd(new RawFunc(`__helios__tx__find_datum_hash[${FTPP}0]`,\n\t`(self) -> {\n\t\t(datum) -> {\n\t\t\t__helios__datumhash__from_data(\n\t\t\t\t__core__fstPair(\n\t\t\t\t\t__helios__common__find(\n\t\t\t\t\t\t__helios__tx__datums(self),\n\t\t\t\t\t\t(pair) -> {\n\t\t\t\t\t\t\t__core__equalsData(__core__sndPair(pair), datum)\n\t\t\t\t\t\t}\n\t\t\t\t\t)\n\t\t\t\t)\n\t\t\t)\n\t\t}\n\t}`));\n\tadd(new RawFunc(\"__helios__tx__get_datum_data\",\n\t`(self) -> {\n\t\t(output) -> {\n\t\t\t(output) -> {\n\t\t\t\t(idx) -> {\n\t\t\t\t\t__core__ifThenElse(\n\t\t\t\t\t\t__core__equalsInteger(idx, 1),\n\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t__helios__common__map_get(\n\t\t\t\t\t\t\t\t__helios__tx__datums(self), \n\t\t\t\t\t\t\t\t__core__headList(__core__sndPair(output)),\n\t\t\t\t\t\t\t\t__helios__common__identity,\n\t\t\t\t\t\t\t\t() -> {__helios__error(\"datumhash not found\")}\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t},\n\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t__core__ifThenElse(\n\t\t\t\t\t\t\t\t__core__equalsInteger(idx, 2),\n\t\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t\t__core__headList(__core__sndPair(output))\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t() -> {__helios__error(\"output doesn't have a datum\")}\n\t\t\t\t\t\t\t)()\n\t\t\t\t\t\t}\n\t\t\t\t\t)()\n\t\t\t\t}(__core__fstPair(output))\n\t\t\t}(__core__unConstrData(__helios__txoutput__datum(output)))\n\t\t}\n\t}`));\n\tadd(new RawFunc(\"__helios__tx__filter_outputs\",\n\t`(self, fn) -> {\n\t\t__helios__common__filter_list(\n\t\t\t__helios__tx__outputs(self), \n\t\t\tfn\n\t\t)\n\t}`));\n\tadd(new RawFunc(\"__helios__tx__outputs_sent_to\",\n\t`(self) -> {\n\t\t(pkh) -> {\n\t\t\t__helios__tx__filter_outputs(self, (output) -> {\n\t\t\t\t__helios__txoutput__is_sent_to(output)(pkh)\n\t\t\t})\n\t\t}\n\t}`));\n\tadd(new RawFunc(`__helios__tx__outputs_sent_to_datum[${FTPP}0]`,\n\t`(self) -> {\n\t\t(pkh, datum, isInline) -> {\n\t\t\t__core__ifThenElse(\n\t\t\t\tisInline,\n\t\t\t\t() -> {\n\t\t\t\t\t__helios__tx__outputs_sent_to_inline_datum[${FTPP}0](self, pkh, datum)\n\t\t\t\t},\n\t\t\t\t() -> {\n\t\t\t\t\t__helios__tx__outputs_sent_to_datum_hash[${FTPP}0](self, pkh, datum)\n\t\t\t\t}\n\t\t\t)()\n\t\t}\n\t}`));\n\tadd(new RawFunc(`__helios__tx__outputs_sent_to_datum_hash[${FTPP}0]`,\n\t`(self, pkh, datum) -> {\n\t\t(datumHash) -> {\n\t\t\t__helios__tx__filter_outputs(\n\t\t\t\tself, \n\t\t\t\t(output) -> {\n\t\t\t\t\t__helios__bool__and(\n\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t__helios__txoutput__is_sent_to(output)(pkh)\n\t\t\t\t\t\t},\n\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t__helios__txoutput__has_datum_hash(output, datumHash)\n\t\t\t\t\t\t}\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t)\n\t\t}(__helios__common__hash_datum_data[${FTPP}0](datum))\n\t}`));\n\tadd(new RawFunc(`__helios__tx__outputs_sent_to_inline_datum[${FTPP}0]`,\n\t`(self, pkh, datum) -> {\n\t\t__helios__tx__filter_outputs(\n\t\t\tself, \n\t\t\t(output) -> {\n\t\t\t\t__helios__bool__and(\n\t\t\t\t\t() -> {\n\t\t\t\t\t\t__helios__txoutput__is_sent_to(output)(pkh)\n\t\t\t\t\t},\n\t\t\t\t\t() -> {\n\t\t\t\t\t\t__helios__txoutput__has_inline_datum[${FTPP}0](output, datum)\n\t\t\t\t\t}\n\t\t\t\t)\n\t\t\t}\n\t\t)\n\t}`));\n\tadd(new RawFunc(\"__helios__tx__outputs_locked_by\",\n\t`(self) -> {\n\t\t(vh) -> {\n\t\t\t__helios__tx__filter_outputs(self, (output) -> {\n\t\t\t\t__helios__txoutput__is_locked_by(output)(vh)\n\t\t\t})\n\t\t}\n\t}`));\n\tadd(new RawFunc(`__helios__tx__outputs_locked_by_datum[${FTPP}0]`,\n\t`(self) -> {\n\t\t(vh, datum, isInline) -> {\n\t\t\t__core__ifThenElse(\n\t\t\t\tisInline,\n\t\t\t\t() -> {\n\t\t\t\t\t__helios__tx__outputs_locked_by_inline_datum[${FTPP}0](self, vh, datum)\n\t\t\t\t},\n\t\t\t\t() -> {\n\t\t\t\t\t__helios__tx__outputs_locked_by_datum_hash[${FTPP}0](self, vh, datum)\n\t\t\t\t}\n\t\t\t)()\n\t\t}\n\t}`));\n\tadd(new RawFunc(`__helios__tx__outputs_locked_by_datum_hash[${FTPP}0]`,\n\t`(self, vh, datum) -> {\n\t\t(datumHash) -> {\n\t\t\t__helios__tx__filter_outputs(\n\t\t\t\tself, \n\t\t\t\t(output) -> {\n\t\t\t\t\t__helios__bool__and(\n\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t__helios__txoutput__is_locked_by(output)(vh)\n\t\t\t\t\t\t},\n\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t__helios__txoutput__has_datum_hash(output, datumHash)\n\t\t\t\t\t\t}\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t)\n\t\t}(__helios__common__hash_datum_data[${FTPP}0](datum))\n\t}`));\n\tadd(new RawFunc(`__helios__tx__outputs_locked_by_inline_datum[${FTPP}0]`,\n\t`(self, vh, datum) -> {\n\t\t__helios__tx__filter_outputs(\n\t\t\tself, \n\t\t\t(output) -> {\n\t\t\t\t__helios__bool__and(\n\t\t\t\t\t() -> {\n\t\t\t\t\t\t__helios__txoutput__is_locked_by(output)(vh)\n\t\t\t\t\t},\n\t\t\t\t\t() -> {\n\t\t\t\t\t\t__helios__txoutput__has_inline_datum[${FTPP}0](output, datum)\n\t\t\t\t\t}\n\t\t\t\t)\n\t\t\t}\n\t\t)\n\t}`));\n\tadd(new RawFunc(`__helios__tx__outputs_paid_to[${FTPP}0]`,\n\t`(self) -> {\n\t\t(addr, datum) -> {\n\t\t\t__helios__tx__filter_outputs(\n\t\t\t\tself, \n\t\t\t\t(output) -> {\n\t\t\t\t\t__helios__bool__and(\n\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t__helios__address____eq(__helios__txoutput__address(output), addr)\n\t\t\t\t\t\t},\n\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t__helios__txoutput__has_inline_datum[${FTPP}0](output, datum)\n\t\t\t\t\t\t}\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t)\n\t\t}\n\t}`));\n\tadd(new RawFunc(\"__helios__tx__value_sent_to\",\n\t`(self) -> {\n\t\t(pkh) -> {\n\t\t\t__helios__txoutput__sum_values(__helios__tx__outputs_sent_to(self)(pkh))\n\t\t}\n\t}`));\n\tadd(new RawFunc(`__helios__tx__value_sent_to_datum[${FTPP}0]`,\n\t`(self) -> {\n\t\t(pkh, datum, isInline) -> {\n\t\t\t__helios__txoutput__sum_values(__helios__tx__outputs_sent_to_datum[${FTPP}0](self)(pkh, datum, isInline))\n\t\t}\n\t}`));\n\tadd(new RawFunc(\"__helios__tx__value_locked_by\",\n\t`(self) -> {\n\t\t(vh) -> {\n\t\t\t__helios__txoutput__sum_values(__helios__tx__outputs_locked_by(self)(vh))\n\t\t}\n\t}`));\n\tadd(new RawFunc(`__helios__tx__value_locked_by_datum[${FTPP}0]`,\n\t`(self) -> {\n\t\t(vh, datum, isInline) -> {\n\t\t\t__helios__txoutput__sum_values(__helios__tx__outputs_locked_by_datum[${FTPP}0](self)(vh, datum, isInline))\n\t\t}\n\t}`));\n\tadd(new RawFunc(`__helios__tx__value_paid_to[${FTPP}0]`,\n\t`(self) -> {\n\t\t(addr, datum) -> {\n\t\t\t__helios__txoutput__sum_values(__helios__tx__outputs_paid_to[${FTPP}0](self)(addr, datum))\n\t\t}\n\t}`));\n\tadd(new RawFunc(\"__helios__tx__is_signed_by\",\n\t`(self) -> {\n\t\t(hash) -> {\n\t\t\t(hash) -> {\n\t\t\t\t__helios__common__any(\n\t\t\t\t\t__helios__tx__signatories(self),\n\t\t\t\t\t(signatory) -> {\n\t\t\t\t\t\t__core__equalsData(signatory, hash)\n\t\t\t\t\t}\n\t\t\t\t)\n\t\t\t}(__helios__pubkeyhash____to_data(hash))\n\t\t}\n\t}`));\n\n\n\t// TxId builtins\n\taddDataFuncs(\"__helios__txid\");\n\tadd(new RawFunc(\"__helios__txid__bytes\",\n\t`(self) -> {\n\t\t__core__unBData(__core__headList(__core__sndPair(__core__unConstrData(self))))\n\t}`));\n\tadd(new RawFunc(\"__helios__txid____lt\", \n\t`(a, b) -> {\n\t\t__helios__bytearray____lt(__helios__txid__bytes(a), __helios__txid__bytes(b))\n\t}`));\n\tadd(new RawFunc(\"__helios__txid____leq\", \n\t`(a, b) -> {\n\t\t__helios__bytearray____leq(__helios__txid__bytes(a), __helios__txid__bytes(b))\n\t}`));\n\tadd(new RawFunc(\"__helios__txid____gt\", \n\t`(a, b) -> {\n\t\t__helios__bytearray____gt(__helios__txid__bytes(a), __helios__txid__bytes(b))\n\t}`));\n\tadd(new RawFunc(\"__helios__txid____geq\", \n\t`(a, b) -> {\n\t\t__helios__bytearray____geq(__helios__txid__bytes(a), __helios__txid__bytes(b))\n\t}`));\n\tadd(new RawFunc(\"__helios__txid__new\",\n\t`(bytes) -> {\n\t\t__core__constrData(0, __helios__common__list_1(__core__bData(bytes))) \n\t}`));\n\tadd(new RawFunc(\"__helios__txid__test_data\",\n\t`(data) -> {\n\t\t__core__chooseData(\n\t\t\tdata,\n\t\t\t() -> {\n\t\t\t\t(pair) -> {\n\t\t\t\t\t(index, fields) -> {\n\t\t\t\t\t\t__core__ifThenElse(\n\t\t\t\t\t\t\t__core__equalsInteger(0, index),\n\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t__core__chooseList(\n\t\t\t\t\t\t\t\t\tfields,\n\t\t\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t\t\tfalse\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t\t\t__core__chooseList(\n\t\t\t\t\t\t\t\t\t\t\t__core__tailList__safe(fields),\n\t\t\t\t\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t\t\t\t\t__helios__bytearray__test_data_fixed_length(__core__headList__safe(fields), 32)\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t\t\t\t\tfalse\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t)()\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t)()\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\tfalse\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t)()\n\t\t\t\t\t}(__core__fstPair(pair), __core__sndPair(pair))\n\t\t\t\t}(__core__unConstrData__safe(data))\n\t\t\t},\n\t\t\t() -> {false},\n\t\t\t() -> {false},\n\t\t\t() -> {false},\n\t\t\t() -> {false}\n\t\t)()\n\t}`));\n\tadd(new RawFunc(\"__helios__txid__show\",\n\t`(self) -> {\n\t\t__helios__bytearray__show(__helios__txid__bytes(self))\n\t}`));\n\n\n\t// TxInput builtins\n\taddDataFuncs(\"__helios__txinput\");\n\tadd(new RawFunc(\"__helios__txinput__test_data\", \n\t`(data) -> {\n\t\t__helios__common__test_constr_data_2(data 0, __helios__txoutputid__test_data, __helios__txoutput__test_data)\n\t}`));\n\tadd(new RawFunc(\"__helios__txinput__new\",\n\t`(output_id, output) -> {\n\t\t__core__constrData(0, __helios__common__list_2(output_id, output))\n\t}`));\n\tadd(new RawFunc(\"__helios__txinput__output_id\", \"__helios__common__enum_field_0\"));\n\tadd(new RawFunc(\"__helios__txinput__output\", \"__helios__common__enum_field_1\"));\n\tadd(new RawFunc(\"__helios__txinput__address\",\n\t`(self) -> {\n\t\t__helios__txoutput__address(__helios__txinput__output(self))\n\t}`));\n\tadd(new RawFunc(\"__helios__txinput__value\", \n\t`(self) -> {\n\t\t__helios__txoutput__value(__helios__txinput__output(self))\n\t}`));\n\tadd(new RawFunc(\"__helios__txinput__datum\",\n\t`(self) -> {\n\t\t__helios__txoutput__datum(__helios__txinput__output(self))\n\t}`));\n\t\n\n\t// TxOutput builtins\n\taddDataFuncs(\"__helios__txoutput\");\n\t// TODO: test fields\n\tadd(new RawFunc(\"__helios__txoutput__test_data\",\n\t`(data) -> {\n\t\t__core__chooseData(\n\t\t\tdata,\n\t\t\t() -> {\n\t\t\t\ttrue\n\t\t\t},\n\t\t\t() -> {false},\n\t\t\t() -> {false},\n\t\t\t() -> {false},\n\t\t\t() -> {false}\n\t\t)()\n\t}`));\n\tadd(new RawFunc(\"__helios__txoutput__new\", \n\t`(address, value, datum) -> {\n\t\t__core__constrData(0, __helios__common__list_4(address, __core__mapData(value), datum, __helios__option__NONE))\n\t}`));\n\tadd(new RawFunc(\"__helios__txoutput__address\", \"__helios__common__enum_field_0\"));\n\tadd(new RawFunc(\"__helios__txoutput__value\", `(self) -> {\n\t\t__core__unMapData(__helios__common__enum_field_1(self))\n\t}`));\n\tadd(new RawFunc(\"__helios__txoutput__datum\", \"__helios__common__enum_field_2\"));\n\tadd(new RawFunc(\"__helios__txoutput__ref_script_hash\", \"__helios__common__enum_field_3\"));\n\tadd(new RawFunc(\"__helios__txoutput__get_datum_hash\",\n\t`(self) -> {\n\t\t() -> {\n\t\t\t(pair) -> {\n\t\t\t\t__core__ifThenElse(\n\t\t\t\t\t__core__equalsInteger(__core__fstPair(pair), 1),\n\t\t\t\t\t() -> {\n\t\t\t\t\t\t__helios__datumhash__from_data(\n\t\t\t\t\t\t\t__core__headList(__core__sndPair(pair))\n\t\t\t\t\t\t)\n\t\t\t\t\t},\n\t\t\t\t\t() -> {#}\n\t\t\t\t)()\n\t\t\t}(__core__unConstrData(__helios__txoutput__datum(self)))\n\t\t}\n\t}`));\n\tadd(new RawFunc(\"__helios__txoutput__has_datum_hash\",\n\t`(self, datumHash) -> {\n\t\t__helios__datumhash____eq(__helios__txoutput__get_datum_hash(self)(), datumHash)\n\t}`));\n\tadd(new RawFunc(`__helios__txoutput__has_inline_datum[${FTPP}0]`,\n\t`(self, datum) -> {\n\t\t(pair) -> {\n\t\t\t__core__ifThenElse(\n\t\t\t\t__core__equalsInteger(__core__fstPair(pair), 2),\n\t\t\t\t() -> {\n\t\t\t\t\t__core__equalsData(\n\t\t\t\t\t\t${FTPP}0____to_data(datum),\n\t\t\t\t\t\t__core__headList(__core__sndPair(pair))\n\t\t\t\t\t)\n\t\t\t\t},\n\t\t\t\t() -> {false}\n\t\t\t)()\n\t\t}(__core__unConstrData(__helios__txoutput__datum(self)))\n\t}`));\n\tadd(new RawFunc(\"__helios__txoutput__is_locked_by\",\n\t`(self) -> {\n\t\t(hash) -> {\n\t\t\t(credential) -> {\n\t\t\t\t__core__ifThenElse(\n\t\t\t\t\t__helios__credential__is_validator(credential),\n\t\t\t\t\t() -> {\n\t\t\t\t\t\t__helios__validatorhash____eq(\n\t\t\t\t\t\t\thash, \n\t\t\t\t\t\t\t__helios__credential__validator__hash(\n\t\t\t\t\t\t\t\t__helios__credential__validator__cast(credential)\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t)\n\t\t\t\t\t},\n\t\t\t\t\t() -> {false}\n\t\t\t\t)()\n\t\t\t}(__helios__address__credential(__helios__txoutput__address(self)))\n\t\t}\n\t}`));\n\tadd(new RawFunc(\"__helios__txoutput__is_sent_to\",\n\t`(self) -> {\n\t\t(pkh) -> {\n\t\t\t(credential) -> {\n\t\t\t\t__core__ifThenElse(\n\t\t\t\t\t__helios__credential__is_pubkey(credential),\n\t\t\t\t\t() -> {\n\t\t\t\t\t\t__helios__pubkeyhash____eq(\n\t\t\t\t\t\t\tpkh, \n\t\t\t\t\t\t\t__helios__credential__pubkey__hash(\n\t\t\t\t\t\t\t\t__helios__credential__pubkey__cast(credential)\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t)\n\t\t\t\t\t},\n\t\t\t\t\t() -> {false}\n\t\t\t\t)()\n\t\t\t}(__helios__address__credential(__helios__txoutput__address(self)))\n\t\t}\n\t}`));\n\tadd(new RawFunc(\"__helios__txoutput__sum_values\",\n\t`(outputs) -> {\n\t\t__helios__common__fold(\n\t\t\toutputs, \n\t\t\t(prev, txOutput) -> {\n\t\t\t\t__helios__value____add(\n\t\t\t\t\tprev,\n\t\t\t\t\t__helios__txoutput__value(txOutput)\n\t\t\t\t)\n\t\t\t}, \n\t\t\t__helios__value__ZERO\n\t\t)\n\t}`));\n\n\n\t// OutputDatum\n\taddDataFuncs(\"__helios__outputdatum\");\n\t// TODO: test each enum variant\n\tadd(new RawFunc(\"__helios__outputdatum__test_data\", \n\t`(data) -> {\n\t\t__core__chooseData(\n\t\t\tdata,\n\t\t\t() -> {\n\t\t\t\ttrue\n\t\t\t},\n\t\t\t() -> {false},\n\t\t\t() -> {false},\n\t\t\t() -> {false},\n\t\t\t() -> {false}\n\t\t)()\n\t}`));\n\tadd(new RawFunc(\"__helios__outputdatum__new_none\",\n\t`() -> {\n\t\t__core__constrData(0, __helios__common__list_0)\n\t}`));\n\tadd(new RawFunc(\"__helios__outputdatum__new_hash\",\n\t`(hash) -> {\n\t\t__core__constrData(1, __helios__common__list_1(__helios__datumhash____to_data(hash)))\n\t}`));\n\tadd(new RawFunc(`__helios__outputdatum__new_inline[__helios__data]`,\n\t`(data) -> {\n\t\t__core__constrData(2, __helios__common__list_1(data))\n\t}`));\n\tadd(new RawFunc(`__helios__outputdatum__new_inline[${FTPP}0]`,\n\t`(data) -> {\n\t\t__helios__outputdatum__new_inline[__helios__data](${FTPP}0____to_data(data))\n\t}`));\n\tadd(new RawFunc(\"__helios__outputdatum__get_inline_data\",\n\t`(self) -> {\n\t\t() -> {\n\t\t\t(pair) -> {\n\t\t\t\t(index, fields) -> {\n\t\t\t\t\t__core__ifThenElse(\n\t\t\t\t\t\t__core__equalsInteger(index, 2),\n\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t__core__headList(fields)\n\t\t\t\t\t\t},\n\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t__helios__error(\"not an inline datum\")\n\t\t\t\t\t\t}\n\t\t\t\t\t)()\n\t\t\t\t}(__core__fstPair(pair), __core__sndPair(pair))\n\t\t\t}(__core__unConstrData(self))\n\t\t}\n\t}`));\n\n\n\t// OutputDatum::None\n\taddEnumDataFuncs(\"__helios__outputdatum__none\", 0);\n\t\n\n\t// OutputDatum::Hash\n\taddEnumDataFuncs(\"__helios__outputdatum__hash\", 1);\n\tadd(new RawFunc(\"__helios__outputdatum__hash__hash\", \n\t`(self) -> {\n\t\t__helios__datumhash__from_data(__helios__common__enum_field_0(self))\n\t}`));\n\n\n\t// OutputDatum::Inline\n\taddEnumDataFuncs(\"__helios__outputdatum__inline\", 2);\n\tadd(new RawFunc(\"__helios__outputdatum__inline__data\", \"__helios__common__enum_field_0\"));\n\n\n\t// RawData\n\taddDataFuncs(\"__helios__data\");\n\tadd(new RawFunc(\"__helios__data__test_data\", `(data) -> {true}`));\n\tadd(new RawFunc(\"__helios__data__tag\", \n\t`(self) -> {\n\t\t__core__fstPair(__core__unConstrData(self))\n\t}`));\n\n\n\t// TxOutputId\n\taddDataFuncs(\"__helios__txoutputid\");\n\tadd(new RawFunc(\"__helios__txoutputid__test_data\",\n\t`(data) -> {\n\t\t__helios__common__test_constr_data_2(data, 0, __helios__txid__test_data, __helios__int__test_data)\n\t}`));\n\tadd(new RawFunc(\"__helios__txoutputid__tx_id\", \"__helios__common__enum_field_0\"));\n\tadd(new RawFunc(\"__helios__txoutputid__index\", \n\t`(self) -> {\n\t\t__helios__int__from_data(__helios__common__enum_field_1(self))\n\t}`));\n\tadd(new RawFunc(\"__helios__txoutputid__comp\", \n\t`(a, b, comp_txid, comp_index) -> {\n\t\t(a_txid, a_index) -> {\n\t\t\t(b_txid, b_index) -> {\n\t\t\t\t__core__ifThenElse(\n\t\t\t\t\t__core__equalsData(a_txid, b_txid),\n\t\t\t\t\t() -> {\n\t\t\t\t\t\tcomp_index(a_index, b_index)\n\t\t\t\t\t},\n\t\t\t\t\t() -> {\n\t\t\t\t\t\tcomp_txid(a_txid, b_txid)\n\t\t\t\t\t}\n\t\t\t\t)()\n\t\t\t}(__helios__txoutputid__tx_id(b), __helios__txoutputid__index(b))\n\t\t}(__helios__txoutputid__tx_id(a), __helios__txoutputid__index(a))\n\t}`));\n\tadd(new RawFunc(\"__helios__txoutputid____lt\", \n\t`(a, b) -> {\n\t\t__helios__txoutputid__comp(a, b, __helios__txid____lt, __helios__int____lt)\n\t}`));\n\tadd(new RawFunc(\"__helios__txoutputid____leq\", \n\t`(a, b) -> {\n\t\t__helios__txoutputid__comp(a, b, __helios__txid____leq, __helios__int____leq)\n\t}`));\n\tadd(new RawFunc(\"__helios__txoutputid____gt\", \n\t`(a, b) -> {\n\t\t__helios__txoutputid__comp(a, b, __helios__txid____gt, __helios__int____gt)\n\t}`));\n\tadd(new RawFunc(\"__helios__txoutputid____geq\", \n\t`(a, b) -> {\n\t\t__helios__txoutputid__comp(a, b, __helios__txid____geq, __helios__int____geq)\n\t}`));\n\tadd(new RawFunc(\"__helios__txoutputid__new\",\n\t`(tx_id, idx) -> {\n\t\t__core__constrData(0, __helios__common__list_2(tx_id, __helios__int____to_data(idx)))\n\t}`));\n\tadd(new RawFunc(\"__helios__txoutputid__show\",\n\t`(self) -> {\n\t\t() -> {\n\t\t\t__helios__string____add(\n\t\t\t\t__helios__txid__show(__helios__txoutputid__tx_id(self))(),\n\t\t\t\t__helios__string____add(\n\t\t\t\t\t\"#\",\n\t\t\t\t\t__helios__int__show(__helios__txoutputid__index(self))()\n\t\t\t\t)\n\t\t\t)\n\t\t}\n\t}`));\n\n\n\t// Address\n\taddDataFuncs(\"__helios__address\");\n\tadd(new RawFunc(\"__helios__address__to_hex\", \n\t`(self) -> {\n\t\t__helios__bytearray__show(__helios__address__to_bytes(self)())\n\t}`));\n\tadd(new RawFunc(\"__helios__address__show\", \"__helios__address__to_hex\"));\n\tadd(new RawFunc(\"__helios__address__header\",\n\t`(self) -> {\n\t\t() -> {\n\t\t\t(credential, staking_credential) -> {\n\t\t\t\t__core__ifThenElse(\n\t\t\t\t\t__helios__credential__is_pubkey(credential),\n\t\t\t\t\t() -> {\n\t\t\t\t\t\t(staking_option_pair) -> {\n\t\t\t\t\t\t\t__core__ifThenElse(\n\t\t\t\t\t\t\t\t__core__equalsInteger(__core__fstPair(staking_option_pair), 0),\n\t\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t\t(staking_credential) -> {\n\t\t\t\t\t\t\t\t\t\t__core__ifThenElse(\n\t\t\t\t\t\t\t\t\t\t\t__helios__credential__is_pubkey(staking_credential),\n\t\t\t\t\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t\t\t\t\t${isTestnet ? \"0x00\" : \"0x01\"}\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t\t\t\t\t${isTestnet ? \"0x20\" : \"0x21\"}\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t)()\n\t\t\t\t\t\t\t\t\t}(__core__headList(__core__sndPair(__core__unConstrData(__helios__stakingcredential__hash__cast(__core__headList(__core__sndPair(staking_option_pair)))))))\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t\t${isTestnet ? \"0x60\" : \"0x61\"}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t)()\n\t\t\t\t\t\t}(__core__unConstrData(staking_credential))\n\t\t\t\t\t},\n\t\t\t\t\t() -> {\n\t\t\t\t\t\t(staking_option_pair) -> {\n\t\t\t\t\t\t\t__core__ifThenElse(\n\t\t\t\t\t\t\t\t__core__equalsInteger(__core__fstPair(staking_option_pair), 0)\n\t\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t\t(staking_credential) -> {\n\t\t\t\t\t\t\t\t\t\t__core__ifThenElse(\n\t\t\t\t\t\t\t\t\t\t\t__helios__credential__is_pubkey(staking_credential),\n\t\t\t\t\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t\t\t\t\t${isTestnet ? \"0x10\" : \"0x11\"}\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t\t\t\t\t${isTestnet ? \"0x30\" : \"0x31\"}\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t)()\n\t\t\t\t\t\t\t\t\t}(__core__headList(__core__sndPair(__core__unConstrData(__helios__stakingcredential__hash__cast(__core__headList(__core__sndPair(staking_option_pair)))))))\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t\t${isTestnet ? \"0x70\" : \"0x71\"}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t)()\n\t\t\t\t\t\t}(__core__unConstrData(staking_credential))\n\t\t\t\t\t}\n\t\t\t\t)()\n\t\t\t}(\n\t\t\t\t__helios__address__credential(self),\n\t\t\t\t__helios__address__staking_credential(self)\n\t\t\t)\n\t\t}\n\t}`));\n\tadd(new RawFunc(\"__helios__address__to_bytes\",\n\t`(self) -> {\n\t\t() -> {\n\t\t\t(credential, staking_credential) -> {\n\t\t\t\t__core__ifThenElse(\n\t\t\t\t\t__helios__credential__is_pubkey(credential),\n\t\t\t\t\t() -> {\n\t\t\t\t\t\t(staking_option_pair) -> {\n\t\t\t\t\t\t\t__core__ifThenElse(\n\t\t\t\t\t\t\t\t__core__equalsInteger(__core__fstPair(staking_option_pair), 0),\n\t\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t\t(staking_credential) -> {\n\t\t\t\t\t\t\t\t\t\t__core__ifThenElse(\n\t\t\t\t\t\t\t\t\t\t\t__helios__credential__is_pubkey(staking_credential),\n\t\t\t\t\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t\t\t\t\t__core__consByteString(\n\t\t\t\t\t\t\t\t\t\t\t\t\t${isTestnet ? \"0x00\" : \"0x01\"},\n\t\t\t\t\t\t\t\t\t\t\t\t\t__core__appendByteString(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t__helios__credential__pubkey__hash(credential),\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t__helios__credential__pubkey__hash(staking_credential)\n\t\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t\t\t\t\t__core__consByteString(\n\t\t\t\t\t\t\t\t\t\t\t\t\t${isTestnet ? \"0x20\" : \"0x21\"},\n\t\t\t\t\t\t\t\t\t\t\t\t\t__core__appendByteString(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t__helios__credential__pubkey__hash(credential),\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t__helios__credential__validator__hash(staking_credential)\n\t\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t)()\n\t\t\t\t\t\t\t\t\t}(__core__headList(__core__sndPair(__core__unConstrData(__helios__stakingcredential__hash__cast(__core__headList(__core__sndPair(staking_option_pair)))))))\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t\t__core__consByteString(\n\t\t\t\t\t\t\t\t\t\t${isTestnet ? \"0x60\" : \"0x61\"},\n\t\t\t\t\t\t\t\t\t\t__helios__credential__pubkey__hash(credential)\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t)()\n\t\t\t\t\t\t}(__core__unConstrData(staking_credential))\n\t\t\t\t\t},\n\t\t\t\t\t() -> {\n\t\t\t\t\t\t(staking_option_pair) -> {\n\t\t\t\t\t\t\t__core__ifThenElse(\n\t\t\t\t\t\t\t\t__core__equalsInteger(__core__fstPair(staking_option_pair), 0),\n\t\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t\t(staking_credential) -> {\n\t\t\t\t\t\t\t\t\t\t__core__ifThenElse(\n\t\t\t\t\t\t\t\t\t\t\t__helios__credential__is_pubkey(staking_credential),\n\t\t\t\t\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t\t\t\t\t__core__consByteString(\n\t\t\t\t\t\t\t\t\t\t\t\t\t${isTestnet ? \"0x10\" : \"0x11\"},\n\t\t\t\t\t\t\t\t\t\t\t\t\t__core__appendByteString(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t__helios__credential__validator__hash(credential),\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t__helios__credential__pubkey__hash(staking_credential)\n\t\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t\t\t\t\t__core__consByteString(\n\t\t\t\t\t\t\t\t\t\t\t\t\t${isTestnet ? \"0x30\" : \"0x31\"},\n\t\t\t\t\t\t\t\t\t\t\t\t\t__core__appendByteString(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t__helios__credential__validator__hash(credential),\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t__helios__credential__validator__hash(staking_credential)\n\t\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t)()\n\t\t\t\t\t\t\t\t\t}(__core__headList(__core__sndPair(__core__unConstrData(__helios__stakingcredential__hash__cast(__core__headList(__core__sndPair(staking_option_pair)))))))\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t\t__core__consByteString(\n\t\t\t\t\t\t\t\t\t\t${isTestnet ? \"0x70\" : \"0x71\"},\n\t\t\t\t\t\t\t\t\t\t__helios__credential__validator__hash(credential)\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t)()\n\t\t\t\t\t\t}(__core__unConstrData(staking_credential))\n\t\t\t\t\t}\n\t\t\t\t)()\n\t\t\t}(\n\t\t\t\t__helios__address__credential(self),\n\t\t\t\t__helios__address__staking_credential(self)\n\t\t\t)\n\t\t}\n\t}`));\n\tadd(new RawFunc(\"__helios__address__from_bytes\",\n\t`(bytes) -> {\n\t\t(header) -> {\n\t\t\t__core__ifThenElse(\n\t\t\t\t__core__equalsInteger(__core__modInteger(header, 2), ${isTestnet ? \"0\" : \"1\"}),\n\t\t\t\t() -> {\n\t\t\t\t\t(is_pubkey_spending, staking_type) -> {\n\t\t\t\t\t\t__core__ifThenElse(\n\t\t\t\t\t\t\tis_pubkey_spending,\n\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t__core__ifThenElse(\n\t\t\t\t\t\t\t\t\t__core__equalsInteger(staking_type, 0),\n\t\t\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t\t\t__helios__address__new(\n\t\t\t\t\t\t\t\t\t\t\t__helios__credential__new_pubkey(__core__sliceByteString(1, 28, bytes)),\n\t\t\t\t\t\t\t\t\t\t\t__core__constrData(0, __helios__common__list_1(\n\t\t\t\t\t\t\t\t\t\t\t\t__helios__stakingcredential__new_hash(\n\t\t\t\t\t\t\t\t\t\t\t\t\t__helios__credential__new_pubkey(__core__sliceByteString(29, 28, bytes))\n\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t))\n\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t\t\t__core__ifThenElse(\n\t\t\t\t\t\t\t\t\t\t\t__core__equalsInteger(staking_type, 1),\n\t\t\t\t\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t\t\t\t\t__helios__address__new(\n\t\t\t\t\t\t\t\t\t\t\t\t\t__helios__credential__new_pubkey(__core__sliceByteString(1, 28, bytes)),\n\t\t\t\t\t\t\t\t\t\t\t\t\t__core__constrData(0, __helios__common__list_1(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t__helios__stakingcredential__new_hash(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t__helios__credential__new_validator(__core__sliceByteString(29, 28, bytes))\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t\t\t))\n\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t\t\t\t\t__core__ifThenElse(\n\t\t\t\t\t\t\t\t\t\t\t\t\t__core__equalsInteger(staking_type, 3),\n\t\t\t\t\t\t\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t__helios__address__new(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t__helios__credential__new_pubkey(__core__sliceByteString(1, 28, bytes)),\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t__helios__option__NONE\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t__helios__error(\"unhandled staking type\")\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t)()\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t)()\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t)()\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t__core__ifThenElse(\n\t\t\t\t\t\t\t\t\t__core__equalsInteger(staking_type, 0),\n\t\t\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t\t\t__helios__address__new(\n\t\t\t\t\t\t\t\t\t\t\t__helios__credential__new_validator(__core__sliceByteString(1, 28, bytes)),\n\t\t\t\t\t\t\t\t\t\t\t__core__constrData(0, __helios__common__list_1(\n\t\t\t\t\t\t\t\t\t\t\t\t__helios__stakingcredential__new_hash(\n\t\t\t\t\t\t\t\t\t\t\t\t\t__helios__credential__new_pubkey(__core__sliceByteString(29, 28, bytes))\n\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t))\n\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t\t\t__core__ifThenElse(\n\t\t\t\t\t\t\t\t\t\t\t__core__equalsInteger(staking_type, 1),\n\t\t\t\t\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t\t\t\t\t__helios__address__new(\n\t\t\t\t\t\t\t\t\t\t\t\t\t__helios__credential__new_validator(__core__sliceByteString(1, 28, bytes)),\n\t\t\t\t\t\t\t\t\t\t\t\t\t__core__constrData(0, __helios__common__list_1(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t__helios__stakingcredential__new_hash(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t__helios__credential__new_validator(__core__sliceByteString(29, 28, bytes))\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t\t\t))\n\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t\t\t\t\t__core__ifThenElse(\n\t\t\t\t\t\t\t\t\t\t\t\t\t__core__equalsInteger(staking_type, 3),\n\t\t\t\t\t\t\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t__helios__address__new(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t__helios__credential__new_validator(__core__sliceByteString(1, 28, bytes)),\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t__helios__option__NONE\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t__helios__error(\"unhandled staking type\")\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t)()\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t)()\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t)()\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t)()\n\t\t\t\t\t}(\n\t\t\t\t\t\t__core__equalsInteger(__core__modInteger(__core__divideInteger(header, 16), 2), 0),\n\t\t\t\t\t\t__core__divideInteger(header, 32)\n\t\t\t\t\t)\n\t\t\t\t},\n\t\t\t\t() -> {\n\t\t\t\t\t__helios__error(\n\t\t\t\t\t\t__core__appendString(\n\t\t\t\t\t\t\t\"not a ${isTestnet ? \"testnet\" : \"mainnet\"} address (header: \",\n\t\t\t\t\t\t\t__core__appendString(\n\t\t\t\t\t\t\t\t__helios__int__show(header)(),\n\t\t\t\t\t\t\t\t\")\"\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t)\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t)()\n\t\t}(__core__indexByteString(bytes, 0))\n\t}`));\n\tadd(new RawFunc(\"__helios__address__from_hex\",\n\t`(hex) -> {\n\t\t__helios__address__from_bytes(__helios__bytearray__parse(hex))\n\t}`));\n\tadd(new RawFunc(\"__helios__address__test_data\", \n\t`(data) -> {\n\t\t__helios__common__test_constr_data_2(data, 0, __helios__credential__test_data, __helios__option[__helios__stakingcredential]__test_data)\n\t}`));\n\tadd(new RawFunc(\"__helios__address__new\", \n\t`(cred, staking_cred) -> {\n\t\t__core__constrData(0, __helios__common__list_2(cred, staking_cred))\n\t}`));\n\tadd(new RawFunc(\"__helios__address__new_empty\",\n\t`() -> {\n\t\t__core__constrData(0, __helios__common__list_2(__helios__credential__new_pubkey(#), __helios__option__NONE))\n\t}`))\n\tadd(new RawFunc(\"__helios__address__credential\", \"__helios__common__enum_field_0\"));\n\tadd(new RawFunc(\"__helios__address__staking_credential\", \"__helios__common__enum_field_1\"));\n\tadd(new RawFunc(\"__helios__address__is_staked\",\n\t`(self) -> {\n\t\t() -> {\n\t\t\t__core__equalsInteger(__core__fstPair(__core__unConstrData(__helios__common__enum_field_1(self))), 0)\n\t\t}\n\t}`));\n\n\n\t// Credential builtins\n\taddDataFuncs(\"__helios__credential\");\n\tadd(new RawFunc(\"__helios__credential__test_data\",\n\t`(data) -> {\n\t\t__core__chooseData(\n\t\t\tdata,\n\t\t\t() -> {\n\t\t\t\t(pair) -> {\n\t\t\t\t\t(index, fields) -> {\n\t\t\t\t\t\t__core__ifThenElse(\n\t\t\t\t\t\t\t__core__equalsInteger(index, 0),\n\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t__core__chooseList(\n\t\t\t\t\t\t\t\t\tfields,\n\t\t\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t\t\tfalse\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t\t\t__core__chooseList(\n\t\t\t\t\t\t\t\t\t\t\t__core__tailList__safe(fields),\n\t\t\t\t\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t\t\t\t\t__helios__validatorhash__test_data(__core__headList__safe(fields))\n\t\t\t\t\t\t\t\t\t\t\t}, \n\t\t\t\t\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t\t\t\t\tfalse\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t)()\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t)()\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t__core__ifThenElse(\n\t\t\t\t\t\t\t\t\t__core__equalsInteger(index, 1),\n\t\t\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t\t\t__core__chooseList(\n\t\t\t\t\t\t\t\t\t\t\tfields,\n\t\t\t\t\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t\t\t\t\tfalse\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t\t\t\t\t__core__chooseList(\n\t\t\t\t\t\t\t\t\t\t\t\t\t__core__tailList__safe(fields),\n\t\t\t\t\t\t\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t__helios__pubkeyhash__test_data(__core__headList__safe(fields))\n\t\t\t\t\t\t\t\t\t\t\t\t\t}, \n\t\t\t\t\t\t\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tfalse\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t)()\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t)()\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t\t\tfalse\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t)()\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t)()\n\t\t\t\t\t}(__core__fstPair(pair), __core__sndPair(pair))\n\t\t\t\t}(__core__unConstrData__safe(data))\n\t\t\t},\n\t\t\t() -> {false},\n\t\t\t() -> {false},\n\t\t\t() -> {false},\n\t\t\t() -> {false}\n\t\t)()\n\t}`));\n\tadd(new RawFunc(\"__helios__credential__new_pubkey\",\n\t`(hash) -> {\n\t\t__core__constrData(0, __helios__common__list_1(__helios__pubkeyhash____to_data(hash)))\n\t}`));\n\tadd(new RawFunc(\"__helios__credential__new_validator\",\n\t`(hash) -> {\n\t\t__core__constrData(1, __helios__common__list_1(__helios__validatorhash____to_data(hash)))\n\t}`));\n\tadd(new RawFunc(\"__helios__credential__is_pubkey\",\n\t`(self) -> {\n\t\t__core__equalsInteger(__core__fstPair(__core__unConstrData(self)), 0)\n\t}`));\n\tadd(new RawFunc(\"__helios__credential__is_validator\",\n\t`(self) -> {\n\t\t__core__equalsInteger(__core__fstPair(__core__unConstrData(self)), 1)\n\t}`));\n\n\n\t// Credential::PubKey builtins\n\taddEnumDataFuncs(\"__helios__credential__pubkey\", 0);\n\tadd(new RawFunc(\"__helios__credential__pubkey__cast\",\n\t`(data) -> {\n\t\t__helios__common__assert_constr_index(data, 0)\n\t}`));\n\tadd(new RawFunc(\"__helios__credential__pubkey__hash\", \n\t`(self) -> {\n\t\t__helios__pubkeyhash__from_data(__helios__common__enum_field_0(self))\n\t}`));\n\n\n\t// Credential::Validator builtins\n\taddEnumDataFuncs(\"__helios__credential__validator\", 1);\n\tadd(new RawFunc(\"__helios__credential__validator____new\", \"__helios__credential__new_validator\"));\n\tadd(new RawFunc(\"__helios__credential__validator__cast\",\n\t`(data) -> {\n\t\t__helios__common__assert_constr_index(data, 1)\n\t}`));\n\tadd(new RawFunc(\"__helios__credential__validator__hash\", \n\t`(self) -> {\n\t\t__helios__validatorhash__from_data(__helios__common__enum_field_0(self))\n\t}`));\n\n\n\t// StakingHash builtins\n\taddDataFuncs(\"__helios__stakinghash\");\n\tadd(new RawFunc(\"__helios__stakinghash__test_data\", \"__helios__credential__test_data\"));\n\tadd(new RawFunc(\"__helios__stakinghash__new_stakekey\", \"__helios__credential__new_pubkey\"));\n\tadd(new RawFunc(\"__helios__stakinghash__new_validator\", \"__helios__credential__new_validator\"));\n\tadd(new RawFunc(\"__helios__stakinghash__is_stakekey\", \"__helios__credential__is_stakekey\"));\n\tadd(new RawFunc(\"__helios__stakinghash__is_validator\", \"__helios__credential__is_validator\"));\n\n\n\t// StakingHash::StakeKey builtins\n\taddEnumDataFuncs(\"__helios__stakinghash__stakekey\", 0);\n\tadd(new RawFunc(\"__helios__stakinghash__stakekey__test_data\", \"__helios__credential__pubkey__test_data\"));\n\tadd(new RawFunc(\"__helios__stakinghash__stakekey__cast\", \"__helios__credential__pubkey__cast\"));\n\tadd(new RawFunc(\"__helios__stakinghash__stakekey__hash\", \"__helios__credential__pubkey__hash\"));\n\n\n\t// StakingHash::Validator builtins\n\taddEnumDataFuncs(\"__helios__stakinghash__validator\", 1);\n\tadd(new RawFunc(\"__helios__stakinghash__validator__test_data\", \"__helios__credential__validator__test_data\"));\n\tadd(new RawFunc(\"__helios__stakinghash__validator__cast\", \"__helios__credential__validator__cast\"));\n\tadd(new RawFunc(\"__helios__stakinghash__validator__hash\", \"__helios__credential__validator__hash\"));\n\n\n\t// StakingCredential builtins\n\taddDataFuncs(\"__helios__stakingcredential\");\n\t// TODO: test fields\n\tadd(new RawFunc(\"__helios__stakingcredential__test_data\",\n\t`(data) -> {\n\t\t__core__chooseData(\n\t\t\tdata,\n\t\t\t() -> {\n\t\t\t\ttrue\n\t\t\t},\n\t\t\t() -> {false},\n\t\t\t() -> {false},\n\t\t\t() -> {false},\n\t\t\t() -> {false}\n\t\t)()\n\t}`));\n\tadd(new RawFunc(\"__helios__stakingcredential__new_hash\", \n\t`(cred) -> {\n\t\t__core__constrData(0, __helios__common__list_1(cred))\n\t}`));\n\tadd(new RawFunc(\"__helios__stakingcredential__hash__cast\",\n\t`(data) -> {\n\t\t__helios__common__assert_constr_index(data, 0)\n\t}`));\n\tadd(new RawFunc(\"__helios__stakingcredential__new_ptr\", \n\t`(i, j, k) -> {\n\t\t__core__constrData(1, __helios__common__list_3(\n\t\t\t__helios__int____to_data(i), \n\t\t\t__helios__int____to_data(j), \n\t\t\t__helios__int____to_data(k)\n\t\t))\n\t}`));\n\tadd(new RawFunc(\"__helios__stakingcredential__ptr__cast\",\n\t`(data) -> {\n\t\t__helios__common__assert_constr_index(data, 1)\n\t}`));\n\n\t\n\t// StakingCredential::Hash builtins\n\taddEnumDataFuncs(\"__helios__stakingcredential__hash\", 0);\n\tadd(new RawFunc(\"__helios__stakingcredential__hash__hash\", \"__helios__common__enum_field_0\"));\n\n\n\t// StakingCredential::Ptr builtins\n\taddEnumDataFuncs(\"__helios__stakingcredential__ptr\", 1);\n\n\n\t// Time builtins\n\taddIntLikeFuncs(\"__helios__time\");\n\tadd(new RawFunc(\"__helios__time__test_data\", `__helios__int__test_data`));\n\tadd(new RawFunc(\"__helios__time__new\", `__helios__common__identity`));\n\tadd(new RawFunc(\"__helios__time____add\", `__helios__int____add`));\n\tadd(new RawFunc(\"__helios__time____sub\", `__helios__int____sub`));\n\tadd(new RawFunc(\"__helios__time____sub1\", `__helios__int____sub`));\n\tadd(new RawFunc(\"__helios__time____geq\", `__helios__int____geq`));\n\tadd(new RawFunc(\"__helios__time____gt\", `__helios__int____gt`));\n\tadd(new RawFunc(\"__helios__time____leq\", `__helios__int____leq`));\n\tadd(new RawFunc(\"__helios__time____lt\", `__helios__int____lt`));\n\tadd(new RawFunc(\"__helios__time__show\", `__helios__int__show`));\n\n\n\t// Duratin builtins\n\taddIntLikeFuncs(\"__helios__duration\");\n\tadd(new RawFunc(\"__helios__duration__test_data\", `__helios__int__test_data`));\n\tadd(new RawFunc(\"__helios__duration__new\", `__helios__common__identity`));\n\tadd(new RawFunc(\"__helios__duration__show\", `__helios__int__show`));\n\tadd(new RawFunc(\"__helios__duration____add\", `__helios__int____add`));\n\tadd(new RawFunc(\"__helios__duration____sub\", `__helios__int____sub`));\n\tadd(new RawFunc(\"__helios__duration____mul\", `__helios__int____mul`));\n\tadd(new RawFunc(\"__helios__duration____div\", `__helios__int____div`));\n\tadd(new RawFunc(\"__helios__duration____div1\", `__helios__int____div`));\n\tadd(new RawFunc(\"__helios__duration____mod\", `__helios__int____mod`));\n\tadd(new RawFunc(\"__helios__duration____geq\", `__helios__int____geq`));\n\tadd(new RawFunc(\"__helios__duration____gt\", `__helios__int____gt`));\n\tadd(new RawFunc(\"__helios__duration____leq\", `__helios__int____leq`));\n\tadd(new RawFunc(\"__helios__duration____lt\", `__helios__int____lt`));\n\tadd(new RawFunc(\"__helios__duration__SECOND\", \"1000\"));\n\tadd(new RawFunc(\"__helios__duration__MINUTE\", \"60000\"));\n\tadd(new RawFunc(\"__helios__duration__HOUR\", \"3600000\"));\n\tadd(new RawFunc(\"__helios__duration__DAY\", \"86400000\"));\n\tadd(new RawFunc(\"__helios__duration__WEEK\", \"604800000\"));\n\n\n\t// TimeRange builtins\n\taddDataFuncs(\"__helios__timerange\");\n\t// TODO: test fields\n\tadd(new RawFunc(\"__helios__timerange__test_data\",\n\t`(data) -> {\n\t\t__core__chooseData(\n\t\t\tdata,\n\t\t\t() -> {\n\t\t\t\ttrue\n\t\t\t},\n\t\t\t() -> {false},\n\t\t\t() -> {false},\n\t\t\t() -> {false},\n\t\t\t() -> {false}\n\t\t)()\n\t}`));\n\tadd(new RawFunc(\"__helios__timerange__new\", `\n\t(a, b) -> {\n\t\t(a, b) -> {\n\t\t\t__core__constrData(0, __helios__common__list_2(\n\t\t\t\t__core__constrData(0, __helios__common__list_2(\n\t\t\t\t\t__core__constrData(1, __helios__common__list_1(a)),\n\t\t\t\t\t__helios__bool____to_data(true)\n\t\t\t\t)),\n\t\t\t\t__core__constrData(0, __helios__common__list_2(\n\t\t\t\t\t__core__constrData(1, __helios__common__list_1(b)),\n\t\t\t\t\t__helios__bool____to_data(true)\n\t\t\t\t))\n\t\t\t))\n\t\t}(__helios__time____to_data(a), __helios__time____to_data(b))\n\t}`));\n\tadd(new RawFunc(\"__helios__timerange__ALWAYS\", `\n\t__core__constrData(0, __helios__common__list_2(\n\t\t__core__constrData(0, __helios__common__list_2(\n\t\t\t__core__constrData(0, __helios__common__list_0),\n\t\t\t__helios__bool____to_data(true)\n\t\t)),\n\t\t__core__constrData(0, __helios__common__list_2(\n\t\t\t__core__constrData(2, __helios__common__list_0),\n\t\t\t__helios__bool____to_data(true)\n\t\t))\n\t))`));\n\tadd(new RawFunc(\"__helios__timerange__NEVER\", `\n\t__core__constrData(0, __helios__common__list_2(\n\t\t__core__constrData(0, __helios__common__list_2(\n\t\t\t__core__constrData(2, __helios__common__list_0),\n\t\t\t__helios__bool____to_data(true)\n\t\t)),\n\t\t__core__constrData(0, __helios__common__list_2(\n\t\t\t__core__constrData(0, __helios__common__list_0),\n\t\t\t__helios__bool____to_data(true)\n\t\t))\n\t))`));\n\tadd(new RawFunc(\"__helios__timerange__from\", `\n\t(a) -> {\n\t\t(a) -> {\n\t\t\t__core__constrData(0, __helios__common__list_2(\n\t\t\t\t__core__constrData(0, __helios__common__list_2(\n\t\t\t\t\t__core__constrData(1, __helios__common__list_1(a)),\n\t\t\t\t\t__helios__bool____to_data(true)\n\t\t\t\t)),\n\t\t\t\t__core__constrData(0, __helios__common__list_2(\n\t\t\t\t\t__core__constrData(2, __helios__common__list_0),\n\t\t\t\t\t__helios__bool____to_data(true)\n\t\t\t\t))\n\t\t\t))\n\t\t}(__helios__time____to_data(a))\n\t}`));\n\tadd(new RawFunc(\"__helios__timerange__to\", `\n\t(b) -> {\n\t\t(b) -> {\n\t\t\t__core__constrData(0, __helios__common__list_2(\n\t\t\t\t__core__constrData(0, __helios__common__list_2(\n\t\t\t\t\t__core__constrData(0, __helios__common__list_0),\n\t\t\t\t\t__helios__bool____to_data(true)\n\t\t\t\t)),\n\t\t\t\t__core__constrData(0, __helios__common__list_2(\n\t\t\t\t\t__core__constrData(1, __helios__common__list_1(b)),\n\t\t\t\t\t__helios__bool____to_data(true)\n\t\t\t\t))\n\t\t\t))\n\t\t}(__helios__time____to_data(b))\n\t}`));\n\tadd(new RawFunc(\"__helios__timerange__is_before\", \n\t`(self) -> {\n\t\t(t) -> {\n\t\t\t(upper) -> {\n\t\t\t\t(extended, closed) -> {\n\t\t\t\t\t(extType) -> {\n\t\t\t\t\t\t__core__ifThenElse(\n\t\t\t\t\t\t\t__core__equalsInteger(extType, 2),\n\t\t\t\t\t\t\t() -> {false},\n\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t__core__ifThenElse(\n\t\t\t\t\t\t\t\t\t__core__equalsInteger(extType, 0),\n\t\t\t\t\t\t\t\t\t() -> {true},\n\t\t\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t\t\t__core__ifThenElse(\n\t\t\t\t\t\t\t\t\t\t\tclosed,\n\t\t\t\t\t\t\t\t\t\t\t() -> {__core__lessThanInteger(__core__unIData(__core__headList(__core__sndPair(__core__unConstrData(extended)))), t)},\n\t\t\t\t\t\t\t\t\t\t\t() -> {__core__lessThanEqualsInteger(__core__unIData(__core__headList(__core__sndPair(__core__unConstrData(extended)))), t)}\n\t\t\t\t\t\t\t\t\t\t)()\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t)()\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t)()\n\t\t\t\t\t}(__core__fstPair(__core__unConstrData(extended)))\n\t\t\t\t}(__helios__common__enum_field_0(upper), __helios__bool__from_data(__helios__common__enum_field_1(upper)))\n\t\t\t}(__helios__common__enum_field_1(self))\n\t\t}\n\t}`));\n\tadd(new RawFunc(\"__helios__timerange__is_after\",\n\t`(self) -> {\n\t\t(t) -> {\n\t\t\t(lower) -> {\n\t\t\t\t(extended, closed) -> {\n\t\t\t\t\t(extType) -> {\n\t\t\t\t\t\t__core__ifThenElse(\n\t\t\t\t\t\t\t__core__equalsInteger(extType, 0),\n\t\t\t\t\t\t\t() -> {false},\n\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t__core__ifThenElse(\n\t\t\t\t\t\t\t\t\t__core__equalsInteger(extType, 2),\n\t\t\t\t\t\t\t\t\t() -> {true},\n\t\t\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t\t\t__core__ifThenElse(\n\t\t\t\t\t\t\t\t\t\t\tclosed,\n\t\t\t\t\t\t\t\t\t\t\t() -> {__core__lessThanInteger(t, __core__unIData(__core__headList(__core__sndPair(__core__unConstrData(extended)))))},\n\t\t\t\t\t\t\t\t\t\t\t() -> {__core__lessThanEqualsInteger(t, __core__unIData(__core__headList(__core__sndPair(__core__unConstrData(extended)))))}\n\t\t\t\t\t\t\t\t\t\t)()\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t)()\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t)()\n\t\t\t\t\t}(__core__fstPair(__core__unConstrData(extended)))\n\t\t\t\t}(__helios__common__enum_field_0(lower), __helios__bool__from_data(__helios__common__enum_field_1(lower)))\n\t\t\t}(__helios__common__enum_field_0(self))\n\t\t}\n\t}`));\n\tadd(new RawFunc(\"__helios__timerange__contains\",\n\t`(self) -> {\n\t\t(t) -> {\n\t\t\t(lower) -> {\n\t\t\t\t(extended, closed) -> {\n\t\t\t\t\t(lowerExtType, checkUpper) -> {\n\t\t\t\t\t\t__core__ifThenElse(\n\t\t\t\t\t\t\t__core__equalsInteger(lowerExtType, 2),\n\t\t\t\t\t\t\t() -> {false},\n\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t__core__ifThenElse(\n\t\t\t\t\t\t\t\t\t__core__equalsInteger(lowerExtType, 0),\n\t\t\t\t\t\t\t\t\t() -> {checkUpper()},\n\t\t\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t\t\t__core__ifThenElse(\n\t\t\t\t\t\t\t\t\t\t\t__core__ifThenElse(\n\t\t\t\t\t\t\t\t\t\t\t\tclosed,\n\t\t\t\t\t\t\t\t\t\t\t\t() -> {__core__lessThanEqualsInteger(__core__unIData(__core__headList(__core__sndPair(__core__unConstrData(extended)))), t)},\n\t\t\t\t\t\t\t\t\t\t\t\t() -> {__core__lessThanInteger(__core__unIData(__core__headList(__core__sndPair(__core__unConstrData(extended)))), t)}\n\t\t\t\t\t\t\t\t\t\t\t)(),\n\t\t\t\t\t\t\t\t\t\t\t() -> {checkUpper()},\n\t\t\t\t\t\t\t\t\t\t\t() -> {false}\n\t\t\t\t\t\t\t\t\t\t)()\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t)()\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t)()\n\t\t\t\t\t}(__core__fstPair(__core__unConstrData(extended)), () -> {\n\t\t\t\t\t\t(upper) -> {\n\t\t\t\t\t\t\t(extended, closed) -> {\n\t\t\t\t\t\t\t\t(upperExtType) -> {\n\t\t\t\t\t\t\t\t\t__core__ifThenElse(\n\t\t\t\t\t\t\t\t\t\t__core__equalsInteger(upperExtType, 0),\n\t\t\t\t\t\t\t\t\t\t() -> {false},\n\t\t\t\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t\t\t\t__core__ifThenElse(\n\t\t\t\t\t\t\t\t\t\t\t\t__core__equalsInteger(upperExtType, 2),\n\t\t\t\t\t\t\t\t\t\t\t\t() -> {true},\n\t\t\t\t\t\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t\t\t\t\t\t__core__ifThenElse(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t__core__ifThenElse(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclosed,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t() -> {__core__lessThanEqualsInteger(t, __core__unIData(__core__headList(__core__sndPair(__core__unConstrData(extended)))))},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t() -> {__core__lessThanInteger(t, __core__unIData(__core__headList(__core__sndPair(__core__unConstrData(extended)))))}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t)(),\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttrue,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tfalse\n\t\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t)()\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t)()\n\t\t\t\t\t\t\t\t}(__core__fstPair(__core__unConstrData(extended)))\n\t\t\t\t\t\t\t}(__helios__common__enum_field_0(upper), __helios__bool__from_data(__helios__common__enum_field_1(upper)))\n\t\t\t\t\t\t}(__helios__common__enum_field_1(self))\n\t\t\t\t\t})\n\t\t\t\t}(__helios__common__enum_field_0(lower), __helios__bool__from_data(__helios__common__enum_field_1(lower)))\n\t\t\t}(__helios__common__enum_field_0(self))\n\t\t}\n\t}`));\n\tadd(new RawFunc(\"__helios__timerange__start\",\n\t`(self) -> {\n\t\t__helios__time__from_data(__helios__common__enum_field_0(__helios__common__enum_field_0(__helios__common__enum_field_0(self))))\n\t}`));\n\tadd(new RawFunc(\"__helios__timerange__end\",\n\t`(self) -> {\n\t\t__helios__time__from_data(__helios__common__enum_field_0(__helios__common__enum_field_0(__helios__common__enum_field_1(self))))\n\t}`));\n\tadd(new RawFunc(\"__helios__timerange__show\",\n\t`(self) -> {\n\t\t() -> {\n\t\t\t(show_extended) -> {\n\t\t\t\t__helios__string____add(\n\t\t\t\t\t(lower) -> {\n\t\t\t\t\t\t(extended, closed) -> {\n\t\t\t\t\t\t\t__helios__string____add(\n\t\t\t\t\t\t\t\t__core__ifThenElse(closed, \"[\", \"(\"),\n\t\t\t\t\t\t\t\tshow_extended(extended)\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t}(__helios__common__enum_field_0(lower), __helios__bool__from_data(__helios__common__enum_field_1(lower)))\n\t\t\t\t\t}(__helios__common__enum_field_0(self)),\n\t\t\t\t\t__helios__string____add(\n\t\t\t\t\t\t\",\",\n\t\t\t\t\t\t(upper) -> {\n\t\t\t\t\t\t\t(extended, closed) -> {\n\t\t\t\t\t\t\t\t__helios__string____add(\n\t\t\t\t\t\t\t\t\tshow_extended(extended),\n\t\t\t\t\t\t\t\t\t__core__ifThenElse(closed, \"]\", \")\")\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t}(__helios__common__enum_field_0(upper), __helios__bool__from_data(__helios__common__enum_field_1(upper)))\n\t\t\t\t\t\t}(__helios__common__enum_field_1(self))\n\t\t\t\t\t)\n\t\t\t\t)\n\t\t\t}(\n\t\t\t\t(extended) -> {\n\t\t\t\t\t(extType) -> {\n\t\t\t\t\t\t__core__ifThenElse(\n\t\t\t\t\t\t\t__core__equalsInteger(extType, 0),\n\t\t\t\t\t\t\t() -> {\"-inf\"},\n\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t__core__ifThenElse(\n\t\t\t\t\t\t\t\t\t__core__equalsInteger(extType, 2),\n\t\t\t\t\t\t\t\t\t() -> {\"+inf\"},\n\t\t\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t\t\t(fields) -> {\n\t\t\t\t\t\t\t\t\t\t\t__helios__int__show(\n\t\t\t\t\t\t\t\t\t\t\t\t__helios__int__from_data(__core__headList(fields))\n\t\t\t\t\t\t\t\t\t\t\t)()\n\t\t\t\t\t\t\t\t\t\t}(__core__sndPair(__core__unConstrData(extended)))\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t)()\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t)()\n\t\t\t\t\t}(__core__fstPair(__core__unConstrData(extended)))\n\t\t\t\t}\n\t\t\t)\n\t\t}\n\t}`))\n\n\n\t// AssetClass builtins\n\taddDataFuncs(\"__helios__assetclass\");\n\tadd(new RawFunc(\"__helios__assetclass__test_data\",\n\t`(data) -> {\n\t\t__helios__common__test_constr_data_2(data, 0, __helios__mintingpolicyhash__test_data, __helios__bytearray__test_data)\n\t}`));\n\tadd(new RawFunc(\"__helios__assetclass__ADA\", `__helios__assetclass__new(#, #)`));\n\tadd(new RawFunc(\"__helios__assetclass__new\",\n\t`(mph, token_name) -> {\n\t\t__core__constrData(0, __helios__common__list_2(\n\t\t\t__helios__mintingpolicyhash____to_data(mph), \n\t\t\t__helios__bytearray____to_data(token_name)\n\t\t))\n\t}`));\n\tadd(new RawFunc(\"__helios__assetclass__mph\", \n\t`(self) -> {\n\t\t__helios__mintingpolicyhash__from_data(__helios__common__enum_field_0(self))\n\t}`));\n\tadd(new RawFunc(\"__helios__assetclass__token_name\", \n\t`(self) -> {\n\t\t__helios__bytearray__from_data(__helios__common__enum_field_1(self))\n\t}`));\n\tadd(new RawFunc(\"__helios__assetclass__show\",\n\t`(self) -> {\n\t\t__core__chooseData(\n\t\t\tself,\n\t\t\t() -> {\n\t\t\t\t(fields) -> {\n\t\t\t\t\t__core__chooseList(\n\t\t\t\t\t\tfields,\n\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\"N/A\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t(mph) -> {\n\t\t\t\t\t\t\t\t__core__appendString(\n\t\t\t\t\t\t\t\t\t__core__chooseData(\n\t\t\t\t\t\t\t\t\t\tmph,\n\t\t\t\t\t\t\t\t\t\t() -> {\"N/A\"},\n\t\t\t\t\t\t\t\t\t\t() -> {\"N/A\"},\n\t\t\t\t\t\t\t\t\t\t() -> {\"N/A\"},\n\t\t\t\t\t\t\t\t\t\t() -> {\"N/A\"},\n\t\t\t\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t\t\t\t__helios__bytearray__show(__core__unBData__safe(mph))()\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t)(),\n\t\t\t\t\t\t\t\t\t__core__appendString(\n\t\t\t\t\t\t\t\t\t\t\".\",\n\t\t\t\t\t\t\t\t\t\t(fields) -> {\n\t\t\t\t\t\t\t\t\t\t\t__core__chooseList(\n\t\t\t\t\t\t\t\t\t\t\t\tfields,\n\t\t\t\t\t\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"N/A\"\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t\t\t\t\t\t(token_name) -> {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t__core__chooseData(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttoken_name,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t() -> {\"N/A\"},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t() -> {\"N/A\"},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t() -> {\"N/A\"},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t() -> {\"N/A\"},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t__helios__bytearray__show(__core__unBData__safe(token_name))()\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t)()\n\t\t\t\t\t\t\t\t\t\t\t\t\t}(__core__headList__safe(fields))\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t)()\n\t\t\t\t\t\t\t\t\t\t}(__core__tailList__safe(fields))\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t}(__core__headList__safe(fields))\n\t\t\t\t\t\t}\n\t\t\t\t\t)()\n\t\t\t\t}(__core__sndPair(__core__unConstrData__safe(self)))\n\t\t\t},\n\t\t\t() -> {\"N/A\"},\n\t\t\t() -> {\"N/A\"},\n\t\t\t() -> {\"N/A\"},\n\t\t\t() -> {\"N/A\"}\n\t\t)\n\t}`));\n\tadd(new RawFunc(\"__helios__assetclass____lt\",\n\t`(a, b) -> {\n\t\t(mpha, mphb) -> {\n\t\t\t__core__ifThenElse(\n\t\t\t\t__helios__bytearray____eq(mpha, mphb),\n\t\t\t\t() -> {\n\t\t\t\t\t__helios__bytearray____lt(\n\t\t\t\t\t\t__helios__assetclass__token_name(a),\n\t\t\t\t\t\t__helios__assetclass__token_name(b)\n\t\t\t\t\t)\n\t\t\t\t},\n\t\t\t\t() -> {\n\t\t\t\t\t__helios__bytearray____lt(mpha, mphb)\n\t\t\t\t}\n\t\t\t)()\n\t\t}(__helios__assetclass__mph(a), __helios__assetclass__mph(b))\n\t}`));\n\tadd(new RawFunc(\"__helios__assetclass____leq\",\n\t`(a, b) -> {\n\t\t(mpha, mphb) -> {\n\t\t\t__core__ifThenElse(\n\t\t\t\t__helios__bytearray____eq(mpha, mphb),\n\t\t\t\t() -> {\n\t\t\t\t\t__helios__bytearray____leq(\n\t\t\t\t\t\t__helios__assetclass__token_name(a),\n\t\t\t\t\t\t__helios__assetclass__token_name(b)\n\t\t\t\t\t)\n\t\t\t\t},\n\t\t\t\t() -> {\n\t\t\t\t\t__helios__bytearray____lt(mpha, mphb)\n\t\t\t\t}\n\t\t\t)()\n\t\t}(__helios__assetclass__mph(a), __helios__assetclass__mph(b))\n\t}`));\n\tadd(new RawFunc(\"__helios__assetclass____gt\",\n\t`(a, b) -> {\n\t\t(mpha, mphb) -> {\n\t\t\t__core__ifThenElse(\n\t\t\t\t__helios__bytearray____eq(mpha, mphb),\n\t\t\t\t() -> {\n\t\t\t\t\t__helios__bytearray____gt(\n\t\t\t\t\t\t__helios__assetclass__token_name(a),\n\t\t\t\t\t\t__helios__assetclass__token_name(b)\n\t\t\t\t\t)\n\t\t\t\t},\n\t\t\t\t() -> {\n\t\t\t\t\t__helios__bytearray____gt(mpha, mphb)\n\t\t\t\t}\n\t\t\t)()\n\t\t}(__helios__assetclass__mph(a), __helios__assetclass__mph(b))\n\t}`));\n\tadd(new RawFunc(\"__helios__assetclass____geq\",\n\t`(a, b) -> {\n\t\t(mpha, mphb) -> {\n\t\t\t__core__ifThenElse(\n\t\t\t\t__helios__bytearray____eq(mpha, mphb),\n\t\t\t\t() -> {\n\t\t\t\t\t__helios__bytearray____geq(\n\t\t\t\t\t\t__helios__assetclass__token_name(a),\n\t\t\t\t\t\t__helios__assetclass__token_name(b)\n\t\t\t\t\t)\n\t\t\t\t},\n\t\t\t\t() -> {\n\t\t\t\t\t__helios__bytearray____gt(mpha, mphb)\n\t\t\t\t}\n\t\t\t)()\n\t\t}(__helios__assetclass__mph(a), __helios__assetclass__mph(b))\n\t}`));\n\n\n\t// Value builtins\n\taddSerializeFunc(\"__helios__value\");\n\t// TODO: test each entry in the map\n\tadd(new RawFunc(\"__helios__value__test_data\",\n\t`(data) -> {\n\t\t__core__chooseData(\n\t\t\tdata,\n\t\t\t() -> {false},\n\t\t\t() -> {\n\t\t\t\t(map) -> {\n\t\t\t\t\t(recurse) -> {\n\t\t\t\t\t\trecurse(recurse, map)\n\t\t\t\t\t}(\n\t\t\t\t\t\t(recurse, map) -> {\n\t\t\t\t\t\t\t__core__chooseList(\n\t\t\t\t\t\t\t\tmap,\n\t\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t\ttrue\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t\t(head) -> {\n\t\t\t\t\t\t\t\t\t\t(key, value) -> {\n\t\t\t\t\t\t\t\t\t\t\t__core__ifThenElse(\n\t\t\t\t\t\t\t\t\t\t\t\t__helios__mintingpolicyhash__test_data(key),\n\t\t\t\t\t\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t\t\t\t\t\t__core__chooseData(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t() -> {false},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(inner) -> {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t__core__chooseList(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tinner,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfalse\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(recurse_inner) -> {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trecurse_inner(recurse_inner, inner)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(recurse_inner, inner) -> {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t__core__chooseList(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tinner,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttrue\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(head) -> {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(key, value) -> {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t__core__ifThenElse(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t__helios__bytearray__test_data(key),\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t__core__ifThenElse(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t__helios__int__test_data(value),\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttrue\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfalse\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)()\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfalse\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)()\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}(__core__fstPair(head), __core__sndPair(head))\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}(__core__headList__safe(inner))\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)()\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)()\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}(__core__unMapData__safe(value))\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t() -> {false},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t() -> {false},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t() -> {false}\n\t\t\t\t\t\t\t\t\t\t\t\t\t)()\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t\t\t\t\t\tfalse\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t)()\n\t\t\t\t\t\t\t\t\t\t}(__core__fstPair(head), __core__sndPair(head))\n\t\t\t\t\t\t\t\t\t}(__core__headList__safe(map))\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t)()\n\t\t\t\t\t\t}\n\t\t\t\t\t)\n\t\t\t\t}(__core__unMapData__safe(data))\n\t\t\t},\n\t\t\t() -> {false},\n\t\t\t() -> {false},\n\t\t\t() -> {false}\n\t\t)()\n\t}`));\n\tadd(new RawFunc(\"__helios__value__from_data\", \"__core__unMapData\"));\n\tadd(new RawFunc(\"__helios__value__from_data_safe\",\n\t`(data) -> {\n\t\t__core__chooseData(\n\t\t\tdata,\n\t\t\t() -> {__helios__option__NONE_FUNC},\n\t\t\t() -> {\n\t\t\t\t__helios__option__SOME_FUNC(__core__unMapData__safe(data))\n\t\t\t},\n\t\t\t() -> {__helios__option__NONE_FUNC},\n\t\t\t() -> {__helios__option__NONE_FUNC},\n\t\t\t() -> {__helios__option__NONE_FUNC}\n\t\t)()\n\t}`));\n\tadd(new RawFunc(\"__helios__value____to_data\", \"__core__mapData\"));\n\tadd(new RawFunc(\"__helios__value__value\", \"__helios__common__identity\"));\n\tadd(new RawFunc(\"__helios__value__ZERO\", \"__core__mkNilPairData(())\"));\n\tadd(new RawFunc(\"__helios__value__lovelace\",\n\t`(i) -> {\n\t\t__helios__value__new(__helios__assetclass__ADA, i)\n\t}`));\n\tadd(new RawFunc(\"__helios__value__new\",\n\t`(assetClass, i) -> {\n\t\t__core__ifThenElse(\n\t\t\t__core__equalsInteger(0, i),\n\t\t\t() -> {\n\t\t\t\t__helios__value__ZERO\n\t\t\t},\n\t\t\t() -> {\n\t\t\t\t(mph, tokenName) -> {\n\t\t\t\t\t__core__mkCons(\n\t\t\t\t\t\t__core__mkPairData(\n\t\t\t\t\t\t\tmph, \n\t\t\t\t\t\t\t__core__mapData(\n\t\t\t\t\t\t\t\t__core__mkCons(\n\t\t\t\t\t\t\t\t\t__core__mkPairData(tokenName, __helios__int____to_data(i)), \n\t\t\t\t\t\t\t\t\t__core__mkNilPairData(())\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t), \n\t\t\t\t\t\t__core__mkNilPairData(())\n\t\t\t\t\t)\n\t\t\t\t}(__helios__common__enum_field_0(assetClass), __helios__common__enum_field_1(assetClass))\n\t\t\t}\n\t\t)()\n\t}`));\n\tadd(new RawFunc(\"__helios__value__from_map\", \"__helios__common__identity\"));\n\tadd(new RawFunc(\"__helios__value__to_map\", \n\t`(self) -> {\n\t\t() -> {\n\t\t\tself\n\t\t}\n\t}`));\n\tadd(new RawFunc(\"__helios__value__get_map_keys\",\n\t`(map) -> {\n\t\t(recurse) -> {\n\t\t\trecurse(recurse, map)\n\t\t}(\n\t\t\t(recurse, map) -> {\n\t\t\t\t__core__chooseList(\n\t\t\t\t\tmap, \n\t\t\t\t\t() -> {__helios__common__list_0}, \n\t\t\t\t\t() -> {__core__mkCons(__core__fstPair(__core__headList__safe(map)), recurse(recurse, __core__tailList__safe(map)))}\n\t\t\t\t)()\n\t\t\t}\n\t\t)\n\t}`));\n\tadd(new RawFunc(\"__helios__value__merge_map_keys\",\n\t`(a, b) -> {\n\t\t(aKeys) -> {\n\t\t\t(recurse) -> {\n\t\t\t\t(uniqueBKeys) -> {\n\t\t\t\t\t__helios__common__concat(aKeys, uniqueBKeys)\n\t\t\t\t}(recurse(recurse, aKeys, b))\n\t\t\t}(\n\t\t\t\t(recurse, keys, map) -> {\n\t\t\t\t\t__core__chooseList(\n\t\t\t\t\t\tmap, \n\t\t\t\t\t\t() -> {__helios__common__list_0}, \n\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t(key) -> {\n\t\t\t\t\t\t\t\t__core__ifThenElse(\n\t\t\t\t\t\t\t\t\t__helios__common__is_in_bytearray_list(aKeys, key), \n\t\t\t\t\t\t\t\t\t() -> {recurse(recurse, keys, __core__tailList__safe(map))},\n\t\t\t\t\t\t\t\t\t() -> {__core__mkCons(key, recurse(recurse, keys, __core__tailList__safe(map)))}\n\t\t\t\t\t\t\t\t)()\n\t\t\t\t\t\t\t}(__core__fstPair(__core__headList__safe(map)))\n\t\t\t\t\t\t}\n\t\t\t\t\t)()\n\t\t\t\t}\n\t\t\t)\n\t\t}(__helios__value__get_map_keys(a))\n\t}`));\n\n\tadd(new RawFunc(\"__helios__value__get_inner_map\",\n\t`(map, mph) -> {\n\t\t(recurse) -> {\n\t\t\trecurse(recurse, map)\n\t\t}(\n\t\t\t(recurse, map) -> {\n\t\t\t\t__core__chooseList(\n\t\t\t\t\tmap, \n\t\t\t\t\t() -> {__core__mkNilPairData(())},\n\t\t\t\t\t() -> {\n\t\t\t\t\t\t__core__ifThenElse(\n\t\t\t\t\t\t\t__core__equalsData(__core__fstPair(__core__headList__safe(map)), mph), \n\t\t\t\t\t\t\t() -> {__core__unMapData(__core__sndPair(__core__headList__safe(map)))},\n\t\t\t\t\t\t\t() -> {recurse(recurse, __core__tailList__safe(map))}\n\t\t\t\t\t\t)()\n\t\t\t\t\t}\n\t\t\t\t)()\n\t\t\t}\n\t\t)\n\t}`));\n\tadd(new RawFunc(\"__helios__value__get_inner_map_int\",\n\t`(map, key) -> {\n\t\t(recurse) -> {\n\t\t\trecurse(recurse, map, key)\n\t\t}(\n\t\t\t(recurse, map, key) -> {\n\t\t\t\t__core__chooseList(\n\t\t\t\t\tmap, \n\t\t\t\t\t() -> {0}, \n\t\t\t\t\t() -> {\n\t\t\t\t\t\t__core__ifThenElse(\n\t\t\t\t\t\t\t__core__equalsData(__core__fstPair(__core__headList__safe(map)), key), \n\t\t\t\t\t\t\t() -> {__core__unIData(__core__sndPair(__core__headList__safe(map)))}, \n\t\t\t\t\t\t\t() -> {recurse(recurse, __core__tailList__safe(map), key)}\n\t\t\t\t\t\t)()\n\t\t\t\t\t}\n\t\t\t\t)()\n\t\t\t}\n\t\t)\n\t}`));\n\tadd(new RawFunc(\"__helios__value__add_or_subtract_inner\",\n\t`(op) -> {\n\t\t(a, b) -> {\n\t\t\t(recurse) -> {\n\t\t\t\trecurse(recurse, __helios__value__merge_map_keys(a, b), __core__mkNilPairData(()))\n\t\t\t}(\n\t\t\t\t(recurse, keys, result) -> {\n\t\t\t\t\t__core__chooseList(\n\t\t\t\t\t\tkeys, \n\t\t\t\t\t\t() -> {result}, \n\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t(key, tail) -> {\n\t\t\t\t\t\t\t\t(sum) -> {\n\t\t\t\t\t\t\t\t\t__core__ifThenElse(\n\t\t\t\t\t\t\t\t\t\t__core__equalsInteger(sum, 0), \n\t\t\t\t\t\t\t\t\t\t() -> {tail}, \n\t\t\t\t\t\t\t\t\t\t() -> {__core__mkCons(__core__mkPairData(key, __core__iData(sum)), tail)}\n\t\t\t\t\t\t\t\t\t)()\n\t\t\t\t\t\t\t\t}(op(__helios__value__get_inner_map_int(a, key), __helios__value__get_inner_map_int(b, key)))\n\t\t\t\t\t\t\t}(__core__headList__safe(keys), recurse(recurse, __core__tailList__safe(keys), result))\n\t\t\t\t\t\t}\n\t\t\t\t\t)()\n\t\t\t\t}\n\t\t\t)\n\t\t}\n\t}`));\n\tadd(new RawFunc(\"__helios__value__add_or_subtract\",\n\t`(a, b, op) -> {\n\t\t(recurse) -> {\n\t\t\trecurse(recurse, __helios__value__merge_map_keys(a, b), __core__mkNilPairData(()))\n\t\t}(\n\t\t\t(recurse, keys, result) -> {\n\t\t\t\t__core__chooseList(\n\t\t\t\t\tkeys, \n\t\t\t\t\t() -> {result}, \n\t\t\t\t\t() -> {\n\t\t\t\t\t\t(key, tail) -> {\n\t\t\t\t\t\t\t(item) -> {\n\t\t\t\t\t\t\t\t__core__chooseList(\n\t\t\t\t\t\t\t\t\titem, \n\t\t\t\t\t\t\t\t\t() -> {tail}, \n\t\t\t\t\t\t\t\t\t() -> {__core__mkCons(__core__mkPairData(key, __core__mapData(item)), tail)}\n\t\t\t\t\t\t\t\t)()\n\t\t\t\t\t\t\t}(__helios__value__add_or_subtract_inner(op)(__helios__value__get_inner_map(a, key), __helios__value__get_inner_map(b, key)))\n\t\t\t\t\t\t}(__core__headList__safe(keys), recurse(recurse, __core__tailList__safe(keys), result))\n\t\t\t\t\t}\n\t\t\t\t)()\n\t\t\t}\n\t\t)\n\t}`));\n\tadd(new RawFunc(\"__helios__value__map_quantities\",\n\t`(self, op) -> {\n\t\t(recurseInner) -> {\n\t\t\t(recurseOuter) -> {\n\t\t\t\trecurseOuter(recurseOuter, self)\n\t\t\t}(\n\t\t\t\t(recurseOuter, outer) -> {\n\t\t\t\t\t__core__chooseList(\n\t\t\t\t\t\touter,\n\t\t\t\t\t\t() -> {__core__mkNilPairData(())},\n\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t(head) -> {\n\t\t\t\t\t\t\t\t__core__mkCons(\n\t\t\t\t\t\t\t\t\t__core__mkPairData(\n\t\t\t\t\t\t\t\t\t\t__core__fstPair(head), \n\t\t\t\t\t\t\t\t\t\t__core__mapData(recurseInner(recurseInner, __core__unMapData(__core__sndPair(head))))\n\t\t\t\t\t\t\t\t\t),  \n\t\t\t\t\t\t\t\t\trecurseOuter(recurseOuter, __core__tailList__safe(outer))\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t}(__core__headList__safe(outer))\n\t\t\t\t\t\t}\n\t\t\t\t\t)()\n\t\t\t\t}\n\t\t\t)\n\t\t}(\n\t\t\t(recurseInner, inner) -> {\n\t\t\t\t__core__chooseList(\n\t\t\t\t\tinner,\n\t\t\t\t\t() -> {__core__mkNilPairData(())},\n\t\t\t\t\t() -> {\n\t\t\t\t\t\t(head) -> {\n\t\t\t\t\t\t\t__core__mkCons(\n\t\t\t\t\t\t\t\t__core__mkPairData(\n\t\t\t\t\t\t\t\t\t__core__fstPair(head),\n\t\t\t\t\t\t\t\t\t__core__iData(op(__core__unIData(__core__sndPair(head))))\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\trecurseInner(recurseInner, __core__tailList__safe(inner))\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t}(__core__headList__safe(inner))\n\t\t\t\t\t}\n\t\t\t\t)()\n\t\t\t}\n\t\t)\n\t}`));\n\tadd(new RawFunc(\"__helios__value__compare_inner\",\n\t`(comp, a, b) -> {\n\t\t(recurse) -> {\n\t\t\trecurse(recurse, __helios__value__merge_map_keys(a, b))\n\t\t}(\n\t\t\t(recurse, keys) -> {\n\t\t\t\t__core__chooseList(\n\t\t\t\t\tkeys, \n\t\t\t\t\t() -> {true}, \n\t\t\t\t\t() -> {\n\t\t\t\t\t\t(key) -> {\n\t\t\t\t\t\t\t__core__ifThenElse(\n\t\t\t\t\t\t\t\t__helios__bool____not(\n\t\t\t\t\t\t\t\t\tcomp(\n\t\t\t\t\t\t\t\t\t\t__helios__value__get_inner_map_int(a, key), \n\t\t\t\t\t\t\t\t\t\t__helios__value__get_inner_map_int(b, key)\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t), \n\t\t\t\t\t\t\t\t() -> {false}, \n\t\t\t\t\t\t\t\t() -> {recurse(recurse, __core__tailList__safe(keys))}\n\t\t\t\t\t\t\t)()\n\t\t\t\t\t\t}(__core__headList__safe(keys))\n\t\t\t\t\t}\n\t\t\t\t)()\n\t\t\t}\n\t\t)\n\t}`));\n\tadd(new RawFunc(\"__helios__value__compare\",\n\t`(a, b, comp) -> {\n\t\t(recurse) -> {\n\t\t\trecurse(recurse, __helios__value__merge_map_keys(a, b))\n\t\t}(\n\t\t\t(recurse, keys) -> {\n\t\t\t\t__core__chooseList(\n\t\t\t\t\tkeys, \n\t\t\t\t\t() -> {true}, \n\t\t\t\t\t() -> {\n\t\t\t\t\t\t(key) -> {\n\t\t\t\t\t\t\t__core__ifThenElse(\n\t\t\t\t\t\t\t\t__helios__bool____not(\n\t\t\t\t\t\t\t\t\t__helios__value__compare_inner(\n\t\t\t\t\t\t\t\t\t\tcomp, \n\t\t\t\t\t\t\t\t\t\t__helios__value__get_inner_map(a, key), \n\t\t\t\t\t\t\t\t\t\t__helios__value__get_inner_map(b, key)\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t), \n\t\t\t\t\t\t\t\t() -> {false}, \n\t\t\t\t\t\t\t\t() -> {recurse(recurse, __core__tailList__safe(keys))}\n\t\t\t\t\t\t\t)()\n\t\t\t\t\t\t}(__core__headList__safe(keys))\n\t\t\t\t\t}\n\t\t\t\t)()\n\t\t\t}\n\t\t)\n\t}`));\n\tadd(new RawFunc(\"__helios__value____eq\",\n\t`(a, b) -> {\n\t\t__helios__value__compare(a, b, __core__equalsInteger)\n\t}`));\n\tadd(new RawFunc(\"__helios__value____neq\",\n\t`(a, b) -> {\n\t\t__helios__bool____not(__helios__value____eq(a, b))\n\t}`));\n\tadd(new RawFunc(\"__helios__value____add\",\n\t`(a, b) -> {\n\t\t__helios__value__add_or_subtract(a, b, __core__addInteger)\n\t}`));\n\tadd(new RawFunc(\"__helios__value____sub\",\n\t`(a, b) -> {\n\t\t__helios__value__add_or_subtract(a, b, __core__subtractInteger)\n\t}`));\n\tadd(new RawFunc(\"__helios__value____mul\",\n\t`(a, scale) -> {\n\t\t__helios__value__map_quantities(a, (qty) -> {__core__multiplyInteger(qty, scale)})\n\t}`));\n\tadd(new RawFunc(\"__helios__value____div\",\n\t`(a, den) -> {\n\t\t__helios__value__map_quantities(a, (qty) -> {__core__divideInteger(qty, den)})\n\t}`));\n\tadd(new RawFunc(\"__helios__value____geq\",\n\t`(a, b) -> {\n\t\t__helios__value__compare(\n\t\t\ta, \n\t\t\tb, \n\t\t\t(a_qty, b_qty) -> {\n\t\t\t\t__helios__bool____not(\n\t\t\t\t\t__core__lessThanInteger(a_qty, b_qty)\n\t\t\t\t)\n\t\t\t}\n\t\t)\n\t}`));\n\tadd(new RawFunc(\"__helios__value__contains\", `\n\t(self) -> {\n\t\t(value) -> {\n\t\t\t__helios__value____geq(self, value)\n\t\t}\n\t}`));\n\tadd(new RawFunc(\"__helios__value____gt\",\n\t`(a, b) -> {\n\t\t__helios__bool__and(\n\t\t\t() -> {\n\t\t\t\t__helios__bool____not(\n\t\t\t\t\t__helios__bool__and(\n\t\t\t\t\t\t__helios__value__is_zero(a),\n\t\t\t\t\t\t__helios__value__is_zero(b)\n\t\t\t\t\t)\n\t\t\t\t)\n\t\t\t},\n\t\t\t() -> {\n\t\t\t\t__helios__value__compare(\n\t\t\t\t\ta, \n\t\t\t\t\tb,\n\t\t\t\t\t(a_qty, b_qty) -> {\n\t\t\t\t\t\t__helios__bool____not(__core__lessThanEqualsInteger(a_qty, b_qty))\n\t\t\t\t\t}\n\t\t\t\t)\n\t\t\t}\n\t\t)\n\t}`));\n\tadd(new RawFunc(\"__helios__value____leq\",\n\t`(a, b) -> {\n\t\t__helios__value__compare(a, b, __core__lessThanEqualsInteger)\n\t}`));\n\tadd(new RawFunc(\"__helios__value____lt\",\n\t`(a, b) -> {\n\t\t__helios__bool__and(\n\t\t\t() -> {\n\t\t\t\t__helios__bool____not(\n\t\t\t\t\t__helios__bool__and(\n\t\t\t\t\t\t__helios__value__is_zero(a),\n\t\t\t\t\t\t__helios__value__is_zero(b)\n\t\t\t\t\t)\n\t\t\t\t)\n\t\t\t},\n\t\t\t() -> {\n\t\t\t\t__helios__value__compare( \n\t\t\t\t\ta, \n\t\t\t\t\tb,\n\t\t\t\t\t(a_qty, b_qty) -> {\n\t\t\t\t\t\t__core__lessThanInteger(a_qty, b_qty)\n\t\t\t\t\t}\n\t\t\t\t)\n\t\t\t}\n\t\t)\n\t}`));\n\tadd(new RawFunc(\"__helios__value__is_zero_inner\",\n\t`(tokens) -> {\n\t\t(recurse) -> {\n\t\t\trecurse(recurse, tokens)\n\t\t}(\n\t\t\t(recurse, tokens) -> {\n\t\t\t\t__core__chooseList(\n\t\t\t\t\ttokens,\n\t\t\t\t\t() -> {\n\t\t\t\t\t\ttrue\n\t\t\t\t\t},\n\t\t\t\t\t() -> {\n\t\t\t\t\t\t__helios__bool__and(\n\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t__core__equalsInteger(__core__unIData(__core__sndPair(__core__headList__safe(tokens))), 0)\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\trecurse(recurse, __core__tailList__safe(tokens))\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t)\n\t\t\t\t\t}\n\t\t\t\t)()\n\t\t\t}\n\t\t)\n\t}`));\n\tadd(new RawFunc(\"__helios__value__is_zero\",\n\t`(self) -> {\n\t\t() -> {\n\t\t\t(recurse) -> {\n\t\t\t\trecurse(recurse, self)\n\t\t\t}(\n\t\t\t\t(recurse, map) -> {\n\t\t\t\t\t__core__chooseList(\n\t\t\t\t\t\tmap,\n\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\ttrue\n\t\t\t\t\t\t},\n\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t__helios__bool__and(\n\t\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t\t__helios__value__is_zero_inner(__core__unMapData(__core__sndPair(__core__headList__safe(map))))\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t\trecurse(recurse, __core__tailList__safe(map))\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t}\n\t\t\t\t\t)()\n\t\t\t\t}\n\t\t\t)\n\t\t}\n\t}`));\n\tadd(new RawFunc(\"__helios__value__get\",\n\t`(self) -> {\n\t\t(assetClass) -> {\n\t\t\t(mph, tokenName) -> {\n\t\t\t\t(outer, inner) -> {\n\t\t\t\t\touter(outer, inner, self)\n\t\t\t\t}(\n\t\t\t\t\t(outer, inner, map) -> {\n\t\t\t\t\t\t__core__chooseList(\n\t\t\t\t\t\t\tmap, \n\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t__helios__error(\n\t\t\t\t\t\t\t\t\t__helios__string____add(\n\t\t\t\t\t\t\t\t\t\t__helios__string____add(\n\t\t\t\t\t\t\t\t\t\t\t\"policy \", \n\t\t\t\t\t\t\t\t\t\t\t__helios__mintingpolicyhash__show(__core__unBData(mph))()\n\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t\t\" not found\"\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t__core__ifThenElse(\n\t\t\t\t\t\t\t\t\t__core__equalsData(__core__fstPair(__core__headList__safe(map)), mph), \n\t\t\t\t\t\t\t\t\t() -> {inner(inner, __core__unMapData(__core__sndPair(__core__headList__safe(map))))}, \n\t\t\t\t\t\t\t\t\t() -> {outer(outer, inner, __core__tailList__safe(map))}\n\t\t\t\t\t\t\t\t)()\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t)()\n\t\t\t\t\t}, (inner, map) -> {\n\t\t\t\t\t\t__core__chooseList(\n\t\t\t\t\t\t\tmap, \n\t\t\t\t\t\t\t() -> {__helios__error(\"tokenName not found\")}, \n\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t__core__ifThenElse(\n\t\t\t\t\t\t\t\t\t__core__equalsData(__core__fstPair(__core__headList__safe(map)), tokenName),\n\t\t\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t\t\t__core__unIData(__core__sndPair(__core__headList__safe(map)))\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t\t\tinner(inner, __core__tailList__safe(map))\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t)()\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t)()\n\t\t\t\t\t}\n\t\t\t\t)\n\t\t\t}(__helios__common__enum_field_0(assetClass), __helios__common__enum_field_1(assetClass))\n\t\t}\n\t}`));\n\tadd(new RawFunc(\"__helios__value__get_safe\",\n\t`(self) -> {\n\t\t(assetClass) -> {\n\t\t\t(mintingPolicyHash, tokenName) -> {\n\t\t\t\t(outer, inner) -> {\n\t\t\t\t\touter(outer, inner, self)\n\t\t\t\t}(\n\t\t\t\t\t(outer, inner, map) -> {\n\t\t\t\t\t\t__core__chooseList(\n\t\t\t\t\t\t\tmap, \n\t\t\t\t\t\t\t() -> {0}, \n\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t__core__ifThenElse(\n\t\t\t\t\t\t\t\t\t__core__equalsData(__core__fstPair(__core__headList__safe(map)), mintingPolicyHash), \n\t\t\t\t\t\t\t\t\t() -> {inner(inner, __core__unMapData(__core__sndPair(__core__headList__safe(map))))}, \n\t\t\t\t\t\t\t\t\t() -> {outer(outer, inner, __core__tailList__safe(map))}\n\t\t\t\t\t\t\t\t)()\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t)()\n\t\t\t\t\t}, (inner, map) -> {\n\t\t\t\t\t\t__core__chooseList(\n\t\t\t\t\t\t\tmap, \n\t\t\t\t\t\t\t() -> {0}, \n\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t__core__ifThenElse(\n\t\t\t\t\t\t\t\t\t__core__equalsData(__core__fstPair(__core__headList__safe(map)), tokenName),\n\t\t\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t\t\t__core__unIData(__core__sndPair(__core__headList__safe(map)))\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t\t\tinner(inner, __core__tailList__safe(map))\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t)()\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t)()\n\t\t\t\t\t}\n\t\t\t\t)\n\t\t\t}(__helios__common__enum_field_0(assetClass), __helios__common__enum_field_1(assetClass))\n\t\t}\n\t}`));\n\tadd(new RawFunc(\"__helios__value__get_lovelace\",\n\t`(self) -> {\n\t\t() -> {\n\t\t\t__helios__value__get_safe(self)(__helios__assetclass__ADA)\n\t\t}\n\t}`));\n\tadd(new RawFunc(\"__helios__value__get_assets\",\n\t`(self) -> {\n\t\t() -> {\n\t\t\t__helios__common__filter_map(\n\t\t\t\tself,\n\t\t\t\t(pair) -> {\n\t\t\t\t\t__helios__bool____not(__core__equalsByteString(__core__unBData(__core__fstPair(pair)), #))\n\t\t\t\t}\n\t\t\t)\n\t\t}\n\t}`));\n\tadd(new RawFunc(\"__helios__value__get_policy\", \n\t`(self) -> {\n\t\t(mph) -> {\n\t\t\t(mph) -> {\n\t\t\t\t(recurse) -> {\n\t\t\t\t\trecurse(recurse, self)\n\t\t\t\t}(\n\t\t\t\t\t(recurse, map) -> {\n\t\t\t\t\t\t__core__chooseList(\n\t\t\t\t\t\t\tmap,\n\t\t\t\t\t\t\t() -> {__helios__error(\"policy not found\")},\n\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t__core__ifThenElse(\n\t\t\t\t\t\t\t\t\t__core__equalsData(__core__fstPair(__core__headList__safe(map)), mph),\n\t\t\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t\t\t__core__unMapData(__core__sndPair(__core__headList__safe(map)))\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t\t\trecurse(recurse, __core__tailList__safe(map))\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t)()\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t)()\n\t\t\t\t\t}\n\t\t\t\t)\n\t\t\t}(__helios__mintingpolicyhash____to_data(mph))\n\t\t} \n\t}`));\n\tadd(new RawFunc(\"__helios__value__contains_policy\",\n\t`(self) -> {\n\t\t(mph) -> {\n\t\t\t(mph) -> {\n\t\t\t\t(recurse) -> {\n\t\t\t\t\trecurse(recurse, self)\n\t\t\t\t}(\n\t\t\t\t\t(recurse, map) -> {\n\t\t\t\t\t\t__core__chooseList(\n\t\t\t\t\t\t\tmap,\n\t\t\t\t\t\t\t() -> {false},\n\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t__core__ifThenElse(\n\t\t\t\t\t\t\t\t\t__core__equalsData(__core__fstPair(__core__headList__safe(map)), mph),\n\t\t\t\t\t\t\t\t\t() -> {true},\n\t\t\t\t\t\t\t\t\t() -> {recurse(recurse, __core__tailList__safe(map))}\n\t\t\t\t\t\t\t\t)()\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t)()\n\t\t\t\t\t}\n\t\t\t\t)\n\t\t\t}(__helios__mintingpolicyhash____to_data(mph))\n\t\t}\n\t}`));\n\tadd(new RawFunc(\"__helios__value__show\",\n\t`(self) -> {\n\t\t() -> {\n\t\t\t__helios__common__fold(\n\t\t\t\tself,\n\t\t\t\t(prev, pair) -> {\n\t\t\t\t\t(mph, tokens) -> {\n\t\t\t\t\t\t__helios__common__fold(\n\t\t\t\t\t\t\ttokens,\n\t\t\t\t\t\t\t(prev, pair) -> {\n\t\t\t\t\t\t\t\t(token_name, qty) -> {\n\t\t\t\t\t\t\t\t\t__helios__string____add(\n\t\t\t\t\t\t\t\t\t\tprev,\n\t\t\t\t\t\t\t\t\t\t__core__ifThenElse(\n\t\t\t\t\t\t\t\t\t\t\t__helios__mintingpolicyhash____eq(mph, #),\n\t\t\t\t\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t\t\t\t\t__helios__string____add(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"lovelace: \",\n\t\t\t\t\t\t\t\t\t\t\t\t\t__helios__string____add(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t__helios__int__show(qty)(),\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\\\\n\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t\t\t\t\t__helios__string____add(\n\t\t\t\t\t\t\t\t\t\t\t\t\t__helios__mintingpolicyhash__show(mph)(),\n\t\t\t\t\t\t\t\t\t\t\t\t\t__helios__string____add(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\".\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t__helios__string____add(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t__helios__bytearray__show(token_name)(),\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t__helios__string____add(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\": \",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t__helios__string____add(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t__helios__int__show(qty)(),\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\\\\n\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t)()\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t}(__core__unBData__safe(__core__fstPair(pair)), __core__unIData__safe(__core__sndPair(pair)))\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tprev\n\t\t\t\t\t\t)\n\t\t\t\t\t}(__core__unBData__safe(__core__fstPair(pair)), __core__unMapData__safe(__core__sndPair(pair)))\n\t\t\t\t},\n\t\t\t\t\"\"\n\t\t\t)\n\t\t}\n\t}`))\n\tadd(new RawFunc(`__helios__value__sum[${FTPP}0]`,\n\t`(self) -> {\n\t\t(recurse) -> {\n\t\t\trecurse(recurse, self)\n\t\t}(\n\t\t\t(recurse, lst) -> {\n\t\t\t\t__core__chooseList(\n\t\t\t\t\tlst,\n\t\t\t\t\t() -> {\n\t\t\t\t\t\t__helios__value__ZERO\n\t\t\t\t\t},\n\t\t\t\t\t() -> {\n\t\t\t\t\t\t__helios__value____add(\n\t\t\t\t\t\t\t${FTPP}0__value(${FTPP}0__from_data(__core__headList__safe(lst))),\n\t\t\t\t\t\t\trecurse(recurse, __core__tailList__safe(lst))\n\t\t\t\t\t\t)\n\t\t\t\t\t}\n\t\t\t\t)()\n\t\t\t}\n\t\t)\n\t}`));\n\n\treturn db;\n}\n\n/**\n * @internal\n */\nexport class ToIRContext {\n\t/**\n\t * @readonly\n\t * @type {boolean}\n\t */\n\tsimplify;\n\n\t/**\n\t * @readonly\n\t * @type {string}\n\t */\n\tindent; \n\n\t/**\n\t * @type {Map<string, RawFunc>}\n\t */\n\t#db;\n\t\n\t/**\n\t * @param {boolean} simplify \n\t * @param {string} indent\n\t * @param {Map<string, RawFunc>} db\n\t */\n\tconstructor(simplify, indent = \"\", db = new Map()) {\n\t\tthis.simplify = simplify;\n\t\tthis.indent = indent;\n\n\t\tthis.#db = db;\n\t}\n\n\t/**\n\t * @returns {ToIRContext}\n\t */\n\ttab() {\n\t\treturn new ToIRContext(this.simplify, this.indent + TAB, this.#db);\n\t}\n\n\t/**\n\t * @type {Map<string, RawFunc>}\n\t */\n\tget db() {\n\t\tif (this.#db.size == 0) {\n\t\t\tthis.#db = makeRawFunctions(this.simplify);\n\t\t}\n\n\t\treturn this.#db;\n\t}\n}\n\n\n/**\n * Load all raw generics so all possible implementations can be generated correctly during type parameter injection phase\n * @internal\n * @param {ToIRContext} ctx\n * @returns {Map<string, ((ttp: string[], ftp: string[]) => IR)>}\n */\nexport function fetchRawGenerics(ctx) {\n\t/**\n\t * @type {Map<string, ((ttp: string[], ftp: string[]) => IR)>}\n\t */\n\tconst map = new Map();\n\n\tfor (let [k, v] of ctx.db) {\n\t\tif (IRParametricName.matches(k)) {\n\t\t\t// load without dependencies\n\t\t\t/**\n\t\t\t * \n\t\t\t * @param {string[]} ttp \n\t\t\t * @param {string[]} ftp \n\t\t\t * @returns {IR}\n\t\t\t */\n\t\t\tconst fn = (ttp, ftp) => v.toIR(ttp, ftp);\n\t\t\tmap.set(k, fn)\n\t\t}\n\t}\n\n\treturn map;\n}\n\n/**\n * Doesn't add templates\n * @internal\n * @param {ToIRContext} ctx\n * @param {IR} ir \n * @param {null | IRDefinitions} userDefs - some userDefs might have the __helios prefix\n * @returns {IRDefinitions}\n */\nexport function fetchRawFunctions(ctx, ir, userDefs = null) {\n\t// notify statistics of existence of builtin in correct order\n\tif (onNotifyRawUsage !== null) {\n\t\tfor (let [name, _] of ctx.db) {\n\t\t\t// don't add templates, as they will never actually be used (type parameters are substituted)\n\t\t\tif (!IRParametricName.isTemplate(name)) {\n\t\t\t\tonNotifyRawUsage(name, 0);\n\t\t\t}\n\t\t}\n\t}\n\n\tlet [src, _] = ir.generateSource();\n\n\tlet matches = src.match(RE_BUILTIN);\n\n\t/**\n\t * @type {IRDefinitions}\n\t */\n\tconst map = new Map();\n\n\tif (matches !== null) {\n\t\tfor (let m of matches) {\n\t\t\tif (!IRParametricName.matches(m) && !map.has(m) && (!userDefs || !userDefs.has(m))) {\n\t\t\t\tconst builtin = ctx.db.get(m);\n\n\t\t\t\tif (!builtin) {\n\t\t\t\t\tconsole.log(src);\n\t\t\t\t\tthrow new Error(`builtin ${m} not found`);\n\t\t\t\t}\n\n\t\t\t\tbuiltin.load(ctx.db, map);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn map;\n}\n\n/**\n * @internal\n * @param {ToIRContext} ctx\n * @param {IR} ir \n * @returns {IR}\n */\nexport function wrapWithRawFunctions(ctx, ir) {\n\tconst map = fetchRawFunctions(ctx, ir);\n\t\n\treturn IR.wrapWithDefinitions(ir, map);\n}\n\n\n\n/////////////////////////////////////\n// Section 24: Helios AST expressions\n/////////////////////////////////////\n\n/**\n * Base class of every Type and Instance expression.\n * @internal\n */\nexport class Expr extends Token {\n\t/**@type {null | EvalEntity} */\n\t#cache;\n\n\t/**\n\t * @param {Site} site \n\t \n\t */\n\tconstructor(site) {\n\t\tsuper(site);\n\t\tthis.#cache = null;\n\t}\n\n\t/**\n\t * @type {null | EvalEntity}\n\t */\n\tget cache() {\n\t\treturn this.#cache;\n\t}\n\n\t/**\n\t * Used in switch cases where initial typeExpr is used as memberName instead\n\t * @param {null | EvalEntity} c\n\t */\n\tset cache(c) {\n\t\tthis.#cache = c;\n\t}\n\n\t/**\n\t * @param {Scope} scope \n\t * @returns {null | EvalEntity}\n\t */\n\tevalInternal(scope) {\n\t\tthrow new Error(\"not yet implemented\");\n\t}\n\n\t/**\n\t * @param {Scope} scope \n\t * @returns {null | EvalEntity}\n\t */\n\teval(scope) {\n\t\t//if (this.#cache === null) {\n\t\t\tthis.#cache = this.evalInternal(scope);\n\t\t//}\n\n\t\treturn this.#cache;\n\t}\n\n\t/**\n\t * @param {Scope} scope \n\t * @returns {null | DataType}\n\t */\n\tevalAsDataType(scope) {\n\t\tconst result_ = this.eval(scope);\n\n\t\tif (!result_) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst result = result_.asDataType;\n\n\t\tif (!result) {\n\t\t\tthis.typeError(\"not a data type\");\n\t\t\treturn null;\n\t\t}\n\n\t\treturn result;\n\t}\n\n\t/**\n\t * @param {Scope} scope \n\t * @returns {null | Type}\n\t */\n\tevalAsType(scope) {\n\t\tconst r = this.eval(scope);\n\n\t\tif (!r) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst result = r.asType;\n\n\t\tif (!result) {\n\t\t\tthis.typeError(`${r.toString()} isn't a type`);\n\t\t\treturn null;\n\t\t}\n\n\t\treturn result;\n\t}\n\n\t/**\n\t * @param {Scope} scope \n\t * @returns {null | Typed}\n\t */\n\tevalAsTyped(scope) {\n\t\tconst r  = this.eval(scope);\n\n\t\tif (!r) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst result = r.asTyped;\n\n\t\tif (!result) {\n\t\t\tthis.typeError(`${r.toString()} isn't a value`);\n\t\t\treturn null;\n\t\t}\n\n\t\treturn result;\n\t}\n\n\t/**\n\t * @returns {boolean}\n\t */\n\tisLiteral() {\n\t\treturn false;\n\t}\n\n\t/**\n\t * @param {ToIRContext} ctx\n\t * @returns {IR}\n\t */\n\ttoIR(ctx) {\n\t\tthrow new Error(\"not yet implemented\");\n\t}\n\n\t/**\n\t * @returns {string}\n\t */\n\ttoString() {\n\t\tthrow new Error(\"not yet implemented\");\n\t}\n}\n\n/**\n * Simple reference class (i.e. using a Word)\n * @internal\n */\nexport class RefExpr extends Expr {\n\t#name;\n\n\t/**\n\t * @param {Word} name\n\t */\n\tconstructor(name) {\n\t\tsuper(name.site);\n\t\tthis.#name = name;\n\t}\n\n\t/**\n\t * @param {Scope} scope \n\t * @returns {null | EvalEntity}\n\t */\n\tevalInternal(scope) {\n\t\treturn scope.get(this.#name);\n\t}\n\n\t/**\n\t * @param {ToIRContext} ctx\n\t * @returns {IR}\n\t */\n\ttoIR(ctx) {\n\t\tconst path = this.cache?.asNamed ? this.cache.asNamed.path : this.#name.value;\n\n\t\tlet ir = new IR(path, this.site);\n\t\t\n\t\treturn ir;\n\t}\n\n\t/**\n\t * @returns {string}\n\t */\n\ttoString() {\n\t\treturn this.#name.toString();\n\t}\n}\n\n/**\n * Name::Member expression\n * @internal\n */\nexport class PathExpr extends Expr {\n\t#baseExpr;\n\t#memberName;\n\n\t/**\n\t * @param {Site} site \n\t * @param {Expr} baseExpr \n\t * @param {Word} memberName\n\t */\n\tconstructor(site, baseExpr, memberName) {\n\t\tsuper(site);\n\t\tthis.#baseExpr = baseExpr;\n\t\tthis.#memberName = memberName;\n\t}\n\n\t/**\n\t * @type {Expr}\n\t */\n\tget baseExpr() {\n\t\treturn this.#baseExpr;\n\t}\n\t\n\t/**\n\t * @param {Scope} scope \n\t * @returns {null | EvalEntity}\n\t */\n\tevalInternal(scope) {\n\t\tconst base = this.#baseExpr.eval(scope);\n\n\t\tif (!base) {\n\t\t\treturn null;\n\t\t}\n\n\t\t/**\n\t\t * @type {null | EvalEntity}\n\t\t */\n\t\tlet member = null;\n\n\t\tif (base.asNamespace) {\n\t\t\tmember = base.asNamespace.namespaceMembers[this.#memberName.value];\n\t\t} else if (base.asType) {\n\t\t\tconst typeMembers = base.asType.typeMembers;\n\n\t\t\tmember = typeMembers[this.#memberName.value];\n\t\t}\n\n\t\tif (!member) {\n\t\t\tthis.#memberName.referenceError(`${base.toString()}::${this.#memberName.value} not found`);\n\t\t\treturn null;\n\t\t}\n\n\t\tif (member.asType?.toTyped().asFunc) {\n\t\t\treturn member.asType.toTyped();\n\t\t} else {\n\t\t\treturn member;\n\t\t}\n\t}\n\n\t/**\n\t * @param {ToIRContext} ctx\n\t * @returns {IR}\n\t */\n\ttoIR(ctx) {\n\t\tconst v = this.cache;\n\n\t\tif (v?.asNamed) {\n\t\t\treturn new IR(`${v.asNamed.path}`, this.site);\n\t\t} else if (this.#baseExpr.cache?.asNamed) {\n\t\t\treturn new IR(`${this.#baseExpr.cache.asNamed.path}__${this.#memberName.value}`, this.site);\n\t\t} else {\n\t\t\tthrow new Error(`expected named value, ${v?.toString()}`);\n\t\t}\n\t}\n\n\t/**\n\t * @returns {string}\n\t */\n\ttoString() {\n\t\treturn `${this.#baseExpr.toString()}::${this.#memberName.toString()}`;\n\t}\n}\n\n/**\n * Name::Member expression which can instantiate zero field structs and enum members\n * @internal\n */\nexport class ValuePathExpr extends PathExpr {\n\n\t/**\n\t * @param {Site} site \n\t * @param {Expr} baseExpr \n\t * @param {Word} memberName\n\t */\n\tconstructor(site, baseExpr, memberName) {\n\t\tsuper(site, baseExpr, memberName);\n\t}\n\t\n\t/**\n\t * @param {Scope} scope \n\t * @returns {null | EvalEntity}\n\t */\n\tevalInternal(scope) {\n\t\tconst member = super.evalInternal(scope);\n\n\t\tif (!member) {\n\t\t\treturn null;\n\t\t}\n\n\t\tif (member.asEnumMemberType && member.asEnumMemberType.fieldNames.length == 0) {\n\t\t\treturn new DataEntity(member.asEnumMemberType);\n\t\t} else {\n\t\t\treturn member;\n\t\t}\n\t}\n\n\t/**\n\t * @returns {boolean}\n\t */\n\tisLiteral() {\n\t\treturn (this.cache?.asTyped?.type.asEnumMemberType?.fieldNames?.length ?? -1) == 0;\n\t}\n\n\t/**\n\t * @param {ToIRContext} ctx\n\t * @returns {IR}\n\t */\n\ttoIR(ctx) {\n\t\tconst v = this.cache;\n\n\t\tif (v?.asTyped?.type?.asEnumMemberType && v.asTyped.type.asEnumMemberType.fieldNames.length == 0) {\n\t\t\treturn new IR([\n\t\t\t\tnew IR(`${v.asTyped.type.asEnumMemberType.path}____new`, this.site),\n\t\t\t\tnew IR(\"()\")\n\t\t\t]);\n\t\t} else {\n\t\t\treturn super.toIR(ctx);\n\t\t}\n\t}\n}\n\n/**\n * []ItemType\n * @internal\n */\nexport class ListTypeExpr extends Expr {\n\t#itemTypeExpr;\n\n\t/**\n\t * @param {Site} site \n\t * @param {Expr} itemTypeExpr \n\t */\n\tconstructor(site, itemTypeExpr) {\n\t\tsuper(site);\n\t\tthis.#itemTypeExpr = itemTypeExpr;\n\t}\n\t\n\t/**\n\t * @param {Scope} scope \n\t * @returns {null | Type}\n\t */\n\tevalInternal(scope) {\n\t\tconst itemType_ = this.#itemTypeExpr.eval(scope);\n\n\t\tif (!itemType_) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst itemType = itemType_.asType;\n\n\t\tif (!itemType) {\n\t\t\tthis.#itemTypeExpr.typeError(`'${itemType_.toString()}' isn't a type`);\n\t\t\treturn null;\n\t\t}\n\n\t\treturn ListType$(itemType);\n\t}\n\n\t/**\n\t * @returns {string}\n\t */\n\ttoString() {\n\t\treturn `[]${this.#itemTypeExpr.toString()}`;\n\t}\n}\n\n/**\n * Map[KeyType]ValueType expression\n * @internal\n */\nexport class MapTypeExpr extends Expr {\n\t#keyTypeExpr;\n\t#valueTypeExpr;\n\n\t/**\n\t * @param {Site} site \n\t * @param {Expr} keyTypeExpr \n\t * @param {Expr} valueTypeExpr \n\t */\n\tconstructor(site, keyTypeExpr, valueTypeExpr) {\n\t\tsuper(site);\n\t\tthis.#keyTypeExpr = keyTypeExpr;\n\t\tthis.#valueTypeExpr = valueTypeExpr;\n\t}\n\n\t/**\n\t * @param {Scope} scope \n\t * @returns {null | EvalEntity}\n\t */\n\tevalInternal(scope) {\n\t\tconst keyType_ = this.#keyTypeExpr.eval(scope);\n\t\tif (!keyType_) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst keyType = keyType_.asType;\n\t\tif (!keyType) {\n\t\t\tthis.#keyTypeExpr.typeError(\"map key type not a type\");\n\t\t\treturn null;\n\t\t}\n\n\t\tconst valueType_ = this.#valueTypeExpr.eval(scope);\n\t\tif (!valueType_) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst valueType = valueType_.asType;\n\t\tif (!valueType) {\n\t\t\tthis.#valueTypeExpr.typeError(\"map value type not a type\");\n\t\t\treturn null;\n\t\t}\n\n\t\treturn MapType$(keyType, valueType);\n\t}\n\n\t/**\n\t * @returns {string}\n\t */\n\ttoString() {\n\t\treturn `Map[${this.#keyTypeExpr.toString()}]${this.#valueTypeExpr.toString()}`;\n\t}\n}\n\n/**\n * Iterator[Type1, ...] expr\n * @internal\n */\nexport class IteratorTypeExpr extends Expr {\n\t#itemTypeExprs;\n\n\t/**\n\t * @param {Site} site\n\t * @param {Expr[]} itemTypeExprs\n\t */\n\tconstructor(site, itemTypeExprs) {\n\t\tsuper(site);\n\n\t\tthis.#itemTypeExprs = itemTypeExprs;\n\t}\n\n\t/**\n\t * @param {Scope} scope\n\t * @returns {null | EvalEntity}\n\t */\n\tevalInternal(scope) {\n\t\tconst itemTypes_ = this.#itemTypeExprs.map(ite => {\n\t\t\tconst ite_ = ite.eval(scope);\n\n\t\t\tif (!ite_) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tconst itemType = ite_.asType;\n\n\t\t\tif (!itemType) {\n\t\t\t\tite.typeError(\"not a type\");\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\treturn itemType;\n\t\t});\n\n\t\tconst itemTypes = reduceNull(itemTypes_);\n\t\tif (itemTypes === null) {\n\t\t\treturn null;\n\t\t}\n\n\t\tif (itemTypes.length > 10) {\n\t\t\tthis.site.typeError(\"too many Iterator type args (limited to 10)\");\n\t\t\treturn null;\n\t\t}\n\n\t\treturn IteratorType$(itemTypes);\n\t}\n\n\t/**\n\t * @returns {string}\n\t */\n\ttoString() {\n\t\treturn `Iterator[${this.#itemTypeExprs.map(ite => ite.toString()).join(\", \")}]`;\n\t}\n}\n\n/**\n * Option[SomeType] expression\n * @internal\n */\nexport class OptionTypeExpr extends Expr {\n\t#someTypeExpr;\n\n\t/**\n\t * @param {Site} site \n\t * @param {Expr} someTypeExpr \n\t */\n\tconstructor(site, someTypeExpr) {\n\t\tsuper(site);\n\t\tthis.#someTypeExpr = someTypeExpr;\n\t}\n\n\t/**\n\t * @param {Scope} scope \n\t * @returns {null | Type}\n\t */\n\tevalInternal(scope) {\n\t\tconst someType = this.#someTypeExpr.evalAsType(scope);\n\n\t\tif (!someType) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn OptionType$(someType);\n\t}\n\n\t/**\n\t * @returns {string}\n\t */\n\ttoString() {\n\t\treturn `Option[${this.#someTypeExpr.toString()}]`;\n\t}\n}\n\n/**\n * '()' which can only be used as return type of func\n * @internal\n */\nexport class VoidTypeExpr extends Expr {\n\t/**\n\t * @param {Site} site \n\t */\n\tconstructor(site) {\n\t\tsuper(site);\n\t}\n\n\t/**\n\t * @param {Scope} scope \n\t * @returns {EvalEntity}\n\t */\n\tevalInternal(scope) {\n\t\treturn new VoidType();\n\t}\n\n\t/**\n\t * @returns {string}\n\t */\n\ttoString() {\n\t\treturn \"()\";\n\t}\n}\n\n/**\n * @internal\n */\nexport class TupleTypeExpr extends Expr {\n\t#itemTypeExprs;\n\n\t/**\n\t * @param {Site} site\n\t * @param {Expr[]} itemTypeExprs\n\t */\n\tconstructor(site, itemTypeExprs) {\n\t\tsuper(site);\n\t\tthis.#itemTypeExprs = itemTypeExprs;\n\t}\n\n\t/**\n\t * @param {Scope} scope\n\t * @returns {null | EvalEntity}\n\t */\n\tevalInternal(scope) {\n\t\tconst itemTypes_ = this.#itemTypeExprs.map(ite => {\n\t\t\tconst ite_ = ite.eval(scope);\n\n\t\t\tif (!ite_) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tconst itemType = ite_.asType;\n\n\t\t\tif (!itemType) {\n\t\t\t\tite.typeError(\"not a type\");\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\treturn itemType;\n\t\t});\n\n\t\tconst itemTypes = reduceNull(itemTypes_);\n\t\tif (itemTypes === null) {\n\t\t\treturn null;\n\t\t}\n\n\t\tif (itemTypes.length > 10) {\n\t\t\tthis.site.typeError(\"too many Type type args (limited to 10)\");\n\t\t\treturn null;\n\t\t}\n\n\t\treturn TupleType$(itemTypes);\n\t}\n\n\t/**\n\t * @returns {string}\n\t */\n\ttoString() {\n\t\treturn `(${this.#itemTypeExprs.map(ite => ite.toString()).join(\", \")})`;\n\t}\n}\n\n/**\n * @internal\n */\nexport class FuncArgTypeExpr extends Token {\n\t#name;\n\t#typeExpr;\n\toptional;\n\n\t/**\n\t * @param {Site} site \n\t * @param {null | Word} name \n\t * @param {Expr} typeExpr \n\t * @param {boolean} optional \n\t */\n\tconstructor(site, name, typeExpr, optional) {\n\t\tsuper(site);\n\t\tthis.#name = name;\n\t\tthis.#typeExpr = typeExpr;\n\t\tthis.optional = optional;\n\t}\n\n\t/**\n\t * @returns {boolean}\n\t */\n\tisNamed() {\n\t\treturn this.#name == null;\n\t}\n\n\t/**\n\t * @returns {boolean}\n\t */\n\tisOptional() {\n\t\treturn this.optional;\n\t}\n\n\t/**\n\t * @param {Scope} scope \n\t * @returns {null | ArgType}\n\t */\n\teval(scope) {\n\t\tconst type_ = this.#typeExpr.eval(scope);\n\n\t\tif (!type_) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst type = type_.asType;\n\t\tif (!type) {\n\t\t\tthis.#typeExpr.typeError(`'${type_.toString()}' isn't a type`);\n\t\t\treturn null;\n\t\t}\n\n\t\treturn new ArgType(this.#name, type, this.optional);\n\t}\n\n\t/**\n\t * @returns {string}\n\t */\n\ttoString() {\n\t\treturn [\n\t\t\tthis.#name != null ? `${this.#name.toString()}: ` : \"\",\n\t\t\tthis.optional ? \"?\" : \"\",\n\t\t\tthis.#typeExpr.toString()\n\t\t].join(\"\");\n\t}\n}\n\n/**\n * (ArgType1, ...) -> RetType expression\n * @internal\n */\nexport class FuncTypeExpr extends Expr {\n\t#argTypeExprs;\n\t#retTypeExpr;\n\n\t/**\n\t * @param {Site} site\n\t * @param {FuncArgTypeExpr[]} argTypeExprs \n\t * @param {Expr} retTypeExpr \n\t */\n\tconstructor(site, argTypeExprs, retTypeExpr) {\n\t\tsuper(site);\n\t\tthis.#argTypeExprs = argTypeExprs;\n\t\tthis.#retTypeExpr = retTypeExpr;\n\t}\n\n\t/**\n\t * @param {Scope} scope \n\t * @returns {null | Type}\n\t */\n\tevalInternal(scope) {\n\t\tconst argTypes_ = this.#argTypeExprs.map(a => a.eval(scope));\n\n\t\tconst retType_ = this.#retTypeExpr.eval(scope);\n\n\t\tif (!retType_) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst retType = retType_.asType;\n\t\tif (!retType) {\n\t\t\tthis.#retTypeExpr.typeError(\"return type isn't a type\");\n\t\t\treturn null;\n\t\t}\n\n\t\tconst argTypes = reduceNull(argTypes_);\n\n\t\tif (argTypes === null) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn new FuncType(argTypes, retType);\n\t}\n\n\t/**\n\t * @returns {string}\n\t */\n\ttoString() {\n\t\treturn `(${this.#argTypeExprs.map(a => a.toString()).join(\", \")}) -> ${this.#retTypeExpr.toString()}`;\n\t}\n}\n\n/**\n * expr(...); ...\n * @internal\n */\nexport class ChainExpr extends Expr {\n\t/**\n\t * @readonly\n\t * @type {Expr}\n\t */\n\tupstreamExpr;\n\n\t/**\n\t * @readonly\n\t * @type {Expr}\n\t */\n\tdownstreamExpr;\n\n\t/**\n\t * @param {Site} site \n\t * @param {Expr} upstreamExpr \n\t * @param {Expr} downstreamExpr \n\t */\n\tconstructor(site, upstreamExpr, downstreamExpr) {\n\t\tsuper(site);\n\t\tthis.upstreamExpr = upstreamExpr;\n\t\tthis.downstreamExpr = downstreamExpr;\n\t}\n\n\ttoString() {\n\t\treturn `${this.upstreamExpr.toString()}; ${this.downstreamExpr.toString()}`;\n\t}\n\n\t/**\n\t * @param {Scope} scope\n\t * @returns {null | EvalEntity}\n\t */\n\tevalInternal(scope) {\n\t\tconst upstreamVal_ = this.upstreamExpr.eval(scope);\n\n\t\tif (upstreamVal_) {\n\t\t\tconst upstreamVal = upstreamVal_.asTyped;\n\n\t\t\tif (!upstreamVal) {\n\t\t\t\tthis.upstreamExpr.typeError(\"upstream isn't typed\");\n\t\t\t} else {\n\t\t\t\tif ((new ErrorType()).isBaseOf(upstreamVal.type)) {\n\t\t\t\t\tthis.downstreamExpr.typeError(\"unreachable code (upstream always throws error)\");\n\t\t\t\t} else if (!((new VoidType()).isBaseOf(upstreamVal.type))) {\n\t\t\t\t\tthis.upstreamExpr.typeError(\"unexpected return value (hint: use '='\");\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn this.downstreamExpr.eval(scope);\n\t}\n\n\t/**\n\t * @param {ToIRContext} ctx\n\t * @returns {IR}\n\t */\n\ttoIR(ctx) {\n\t\treturn new IR([\n\t\t\tnew IR(\"__core__chooseUnit(\", this.site),\n\t\t\tthis.upstreamExpr.toIR(ctx),\n\t\t\tnew IR(\", \"),\n\t\t\tthis.downstreamExpr.toIR(ctx),\n\t\t\tnew IR(\")\")\n\t\t]);\n\t}\n}\n\n/**\n * '... = ... ; ...' expression\n * @internal\n */\nexport class AssignExpr extends ChainExpr {\n\t/**\n\t * @type {DestructExpr}\n\t */\n\t#nameType;\n\n\t/**\n\t * @param {Site} site \n\t * @param {DestructExpr} nameType \n\t * @param {Expr} upstreamExpr \n\t * @param {Expr} downstreamExpr \n\t */\n\tconstructor(site, nameType, upstreamExpr, downstreamExpr) {\n\t\tsuper(site, assertDefined(upstreamExpr), assertDefined(downstreamExpr));\n\t\tthis.#nameType = assertDefined(nameType);\n\t}\n\n\t/**\n\t * @param {Scope} scope \n\t * @returns {null | EvalEntity}\n\t */\n\tevalInternal(scope) {\n\t\tconst subScope = new Scope(scope, scope.allowShadowing);\n\n\t\tlet upstreamVal = this.upstreamExpr.eval(scope);\n\n\t\tif (upstreamVal && upstreamVal.asTyped) {\n\t\t\tif (this.#nameType.hasType() || this.#nameType.isTuple()) {\n\t\t\t\tthis.#nameType.evalInAssignExpr(subScope, assertDefined(upstreamVal.asTyped.type.asType), 0);\n\t\t\t} else if (this.upstreamExpr.isLiteral() || scope.has(this.#nameType.name)) {\n\t\t\t\t// enum variant type resulting from a constructor-like associated function must be cast back into its enum type\n\t\t\t\tif ((this.upstreamExpr instanceof CallExpr &&\n\t\t\t\t\tthis.upstreamExpr.fnExpr instanceof PathExpr) || \n\t\t\t\t\t(this.upstreamExpr instanceof PathExpr && \n\t\t\t\t\t!this.upstreamExpr.isLiteral())) \n\t\t\t\t{\n\t\t\t\t\tconst upstreamType = upstreamVal.asTyped.type;\n\n\t\t\t\t\tif (upstreamType.asEnumMemberType) {\n\t\t\t\t\t\tupstreamVal = new DataEntity(upstreamType.asEnumMemberType.parentType);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tsubScope.set(this.#nameType.name, upstreamVal);\n\t\t\t} else {\n\t\t\t\tthis.typeError(\"unable to infer type of assignment rhs\");\n\t\t\t}\n\t\t} else if (this.#nameType.hasType()) {\n\t\t\tthis.#nameType.evalInAssignExpr(subScope, null, 0);\n\t\t} else {\n\t\t\tthis.upstreamExpr.typeError(\"rhs isn't an instance\");\n\t\t\tsubScope.set(this.#nameType.name, new DataEntity(new AnyType()));\n\t\t}\n\t\t\n\t\tconst downstreamVal = this.downstreamExpr.eval(subScope);\n\n\t\tsubScope.assertAllUsed();\n\n\t\treturn downstreamVal;\n\t}\n\n\t/**\n\t * \n\t * @param {ToIRContext} ctx\n\t * @returns {IR}\n\t */\n\ttoIR(ctx) {\n\t\tlet inner = this.downstreamExpr.toIR(ctx.tab());\n\n\t\tinner = this.#nameType.wrapDestructIR(ctx, inner, 0);\n\n\t\tlet upstream = this.upstreamExpr.toIR(ctx);\n\n\t\t// enum member run-time error IR\n\t\tif (this.#nameType.hasType()) {\n\t\t\tconst t = assertDefined(this.#nameType.type);\n\n\t\t\tif (t.asEnumMemberType) {\n\t\t\t\tupstream = new IR([\n\t\t\t\t\tnew IR(\"__helios__common__assert_constr_index(\"),\n\t\t\t\t\tupstream,\n\t\t\t\t\tnew IR(`, ${t.asEnumMemberType.constrIndex})`)\n\t\t\t\t]);\n\t\t\t}\n\t\t}\n\n\t\treturn new IR([\n\t\t\tnew IR(\"(\"),\n\t\t\tthis.#nameType.toNameIR(0), // wrapDestructIR depends on this name\n\t\t\tnew IR(\") \"),\n\t\t\tnew IR(\"->\", this.site), new IR(` {\\n${ctx.indent}${TAB}`),\n\t\t\tinner,\n\t\t\tnew IR(`\\n${ctx.indent}}(`),\n\t\t\tupstream,\n\t\t\tnew IR(\")\")\n\t\t]);\n\t}\n\n\t/**\n\t * @returns {string}\n\t */\n\ttoString() {\n\t\tlet downstreamStr = this.downstreamExpr.toString();\n\t\tassert(downstreamStr != undefined);\n\n\t\treturn `${this.#nameType.toString()} = ${this.upstreamExpr.toString()}; ${downstreamStr}`;\n\t}\n}\n\n/**\n * Helios equivalent of unit\n * @internal\n */\nexport class VoidExpr extends Expr {\n\t/**\n\t * @param {Site} site\n\t */\n\tconstructor(site) {\n\t\tsuper(site);\n\t}\n\n\t/**\n\t * @param {Scope} scope \n\t * @returns {Instance}\n\t */\n\tevalInternal(scope) {\n\t\treturn new VoidEntity();\n\t}\n\n\t/**\n\t * @param {ToIRContext} ctx\n\t * @returns {IR}\n\t */\n\ttoIR(ctx) {\n\t\treturn new IR(\"()\", this.site);\n\t}\n\n\t/**\n\t * @returns {string}\n\t */\n\ttoString() {\n\t\treturn \"()\";\n\t}\n}\n\n/**\n * Literal expression class (wraps literal tokens)\n * @internal\n */\nexport class PrimitiveLiteralExpr extends Expr {\n\t#primitive;\n\n\t/**\n\t * @param {PrimitiveLiteral} primitive \n\t */\n\tconstructor(primitive) {\n\t\tsuper(primitive.site);\n\t\tthis.#primitive = primitive;\n\t}\n\n\t/**\n\t * @type {DataType}\n\t */\n\tget type() {\n\t\tif (this.#primitive instanceof IntLiteral) {\n\t\t\treturn IntType;\n\t\t} else if (this.#primitive instanceof RealLiteral) {\n\t\t\treturn RealType;\n\t\t} else if (this.#primitive instanceof BoolLiteral) {\n\t\t\treturn BoolType;\n\t\t} else if (this.#primitive instanceof StringLiteral) {\n\t\t\treturn StringType;\n\t\t} else if (this.#primitive instanceof ByteArrayLiteral) {\n\t\t\treturn ByteArrayType;\n\t\t} else {\n\t\t\tthrow new Error(\"unhandled primitive type\");\n\t\t}\t\n\t}\n\n\t/**\n\t * @param {Scope} scope \n\t * @returns {EvalEntity}\n\t */\n\tevalInternal(scope) {\n\t\treturn new DataEntity(this.type);\n\t}\n\n\t/**\n\t * @returns {boolean}\n\t */\n\tisLiteral() {\n\t\treturn true;\n\t}\n\n\t/**\n\t * @param {ToIRContext} ctx\n\t * @returns {IR}\n\t */\n\ttoIR(ctx) {\n\t\t// all literals can be reused in their string-form in the IR\n\t\treturn new IR(this.#primitive.toString(), this.#primitive.site);\n\t}\n\n\t/**\n\t * @returns {string}\n\t */\n\ttoString() {\n\t\treturn this.#primitive.toString();\n\t}\n}\n\n/**\n * Literal UplcData which is the result of parameter substitutions.\n * @internal\n */\nexport class LiteralDataExpr extends Expr {\n\t#type;\n\t#data;\n\n\t/**\n\t * @param {Site} site \n\t * @param {DataType} type\n\t * @param {UplcData} data\n\t */\n\tconstructor(site, type, data) {\n\t\tsuper(site);\n\t\tthis.#type = type;\n\t\tthis.#data = data;\n\t}\n\n\t/**\n\t * @internal\n\t * @type {DataType}\n\t */\n\tget type() {\n\t\treturn this.#type;\n\t}\n\n\t/**\n\t * @returns {boolean}\n\t */\n\tisLiteral() {\n\t\treturn true;\n\t}\n\n\t/**\n\t * @param {Scope} scope \n\t * @returns {EvalEntity}\n\t */\n\tevalInternal(scope) {\n\t\treturn new DataEntity(this.#type);\n\t}\n\n\t/**\n\t * @type {EvalEntity}\n\t */\n\tget cache() {\n\t\treturn new DataEntity(this.#type);\n\t}\n\n\t/**\n\t * @param {ToIRContext} ctx\n\t * @returns {IR}\n\t */\n\ttoIR(ctx) {\n\t\treturn new IR(this.toString(), this.site);\n\t}\n\n\t/**\n\t * @returns {string}\n\t */\n\ttoString() {\n\t\treturn `##${bytesToHex(this.#data.toCbor())}`;\n\t}\n}\n\n/**\n * Struct field (part of a literal struct constructor)\n * @internal\n */\nexport class StructLiteralField {\n\t#name;\n\t#value;\n\n\t/**\n\t * @param {null | Word} name \n\t * @param {Expr} value \n\t */\n\tconstructor(name, value) {\n\t\tthis.#name = name;\n\t\tthis.#value = value;\n\t}\n\n\t/**\n\t * @type {Word}\n\t */\n\tget name() {\n\t\tif (this.#name === null) {\n\t\t\tthrow new Error(\"name of field not given\");\n\t\t} else {\n\t\t\treturn this.#name;\n\t\t}\n\t}\n\n\tget site() {\n\t\tif (this.#name === null) {\n\t\t\treturn this.#value.site;\n\t\t} else {\n\t\t\treturn this.#name.site;\n\t\t}\n\t}\n\t\n\t/**\n\t * @param {Scope} scope \n\t * @returns {null | EvalEntity}\n\t */\n\teval(scope) {\n\t\treturn this.#value.eval(scope);\n\t}\n\n\t/**\n\t * @returns {boolean}\n\t */\n\tisNamed() {\n\t\treturn this.#name !== null;\n\t}\n\n\t/**\n\t * @param {ToIRContext} ctx\n\t * @returns {IR}\n\t */\n\ttoIR(ctx) {\n\t\treturn this.#value.toIR(ctx);\n\t}\n\n\t/**\n\t * @returns {string}\n\t */\n\ttoString() {\n\t\tif (this.#name === null) {\n\t\t\treturn this.#value.toString();\n\t\t} else {\n\t\t\treturn `${this.#name.toString()}: ${this.#value.toString()}`;\n\t\t}\n\t}\n}\n\n/**\n * Struct literal constructor\n * @internal\n */\nexport class StructLiteralExpr extends Expr {\n\t#typeExpr;\n\t#fields;\n\n\t/**\n\t * @param {Expr} typeExpr \n\t * @param {StructLiteralField[]} fields \n\t */\n\tconstructor(typeExpr, fields) {\n\t\tsuper(typeExpr.site);\n\t\tthis.#typeExpr = typeExpr;\n\t\tthis.#fields = fields;\n\t}\n\n\t/**\n\t * @param {Scope} scope \n\t * @returns {null | EvalEntity}\n\t */\n\tevalInternal(scope) {\n\t\tconst type_ = this.#typeExpr.eval(scope);\n\n\t\tif (!type_) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst type = type_.asDataType;\n\n\t\tif (!type) {\n\t\t\tthis.#typeExpr.typeError(`'${this.#typeExpr.toString()}' doesn't evaluate to a data type`);\n\t\t\treturn null;\n\t\t}\n\n\t\tif (type.fieldNames.length != this.#fields.length) {\n\t\t\tthis.typeError(`wrong number of fields for ${type.toString()}, expected ${type.fieldNames.length}, got ${this.#fields.length}`);\n\t\t\treturn null;\n\t\t}\n\n\t\t/**\n\t\t * @param {Word} name\n\t\t * @returns {null | Type}\n\t\t */\n\t\tconst getMemberType = (name) => {\n\t\t\tconst memberVal = type.instanceMembers[name.value];\n\n\t\t\tif (!memberVal) {\n\t\t\t\tname.typeError(`member '${name.value}' not defined`);\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tconst memberType = memberVal.asType;\n\n\t\t\tif (!memberType) {\n\t\t\t\tname.typeError(`member '${name.value}' isn't a type`);\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\treturn memberType;\n\t\t};\n\n\t\tfor (let i = 0; i < this.#fields.length; i++) {\n\t\t\tconst f = this.#fields[i];\n\t\t\n\t\t\tconst fieldVal_ = f.eval(scope);\n\t\t\tif (!fieldVal_) {\n\t\t\t\treturn null\n\t\t\t}\n\n\t\t\tconst fieldVal = fieldVal_.asTyped;\n\t\t\tif (!fieldVal) {\n\t\t\t\tf.site.typeError(\"not typed\");\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tif (f.isNamed()) {\n\t\t\t\tif (type.fieldNames.findIndex(n => n == f.name.value) == -1) {\n\t\t\t\t\tf.name.site.typeError(\"not a valid field\");\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\n\t\t\t\t// check the named type\n\t\t\t\tconst memberType = getMemberType(f.name);\n\t\t\t\tif (!memberType) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tif (!memberType.isBaseOf(fieldVal.type)) {\n\t\t\t\t\tf.site.typeError(`wrong field type for '${f.name.toString()}', expected ${memberType.toString()}, got ${fieldVal.type.toString()}`);\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// check the positional type\n\t\t\t\tconst memberType = getMemberType(new Word(f.site, type.fieldNames[i]));\n\n\t\t\t\tif (!memberType) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (!memberType.isBaseOf(fieldVal.type)) {\n\t\t\t\t\tf.site.typeError(`wrong field type for field ${i.toString()}, expected ${memberType.toString()}, got ${fieldVal.type.toString()}`);\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn new DataEntity(type);\n\t}\n\n\t/**\n\t * @returns {boolean}\n\t */\n\tisLiteral() {\n\t\treturn true;\n\t}\n\n\t/**\n\t * @returns {boolean}\n\t */\n\tisNamed() {\n\t\t// the expression builder already checked that all fields are named or all or positional (i.e. not mixed)\n\t\treturn this.#fields.length > 0 && this.#fields[0].isNamed();\n\t}\n\n\t/**\n\t * @param {ToIRContext} ctx\n\t * @param {Site} site\n\t * @param {string} path\n\t * @param {IR[]} fields\n\t */\n\tstatic toIRInternal(ctx, site, path, fields) {\n\t\treturn new IR([\n\t\t\tnew IR(`${path}____new`),\n\t\t\tnew IR(\"(\"),\n\t\t\tnew IR(fields).join(\", \"),\n\t\t\tnew IR(\")\")\n\t\t], site);\n\t}\n\n\t/**\n\t * @param {ToIRContext} ctx\n\t * @returns {IR}\n\t */\n\ttoIR(ctx) {\n\t\tconst type = assertDefined(this.#typeExpr.cache?.asDataType);\n\n\t\tconst fields = this.#fields.slice();\n\n\t\t// sort fields by correct name\n\t\tif (this.isNamed()) {\n\t\t\tfields.sort((a, b) => type.fieldNames.findIndex(n => n == a.name.value) - type.fieldNames.findIndex(n => n == b.name.value));\n\t\t}\n\n\t\tconst irFields = fields.map(f => f.toIR(ctx));\n\n\t\treturn StructLiteralExpr.toIRInternal(ctx, this.site, type.path, irFields);\n\t}\n\n\t/**\n\t * @returns {string}\n\t */\n\ttoString() {\n\t\treturn `${this.#typeExpr.toString()}{${this.#fields.map(f => f.toString()).join(\", \")}}`;\n\t}\n}\n\n/**\n * []{...} expression\n * @internal\n */\nexport class ListLiteralExpr extends Expr {\n\t#itemTypeExpr;\n\t#itemExprs;\n\n\t/**\n\t * @param {Site} site \n\t * @param {Expr} itemTypeExpr \n\t * @param {Expr[]} itemExprs \n\t */\n\tconstructor(site, itemTypeExpr, itemExprs) {\n\t\tsuper(site);\n\t\tthis.#itemTypeExpr = itemTypeExpr;\n\t\tthis.#itemExprs = itemExprs;\n\t}\n\n\t/**\n\t * @type {DataType}\n\t */\n\tget itemType() {\n\t\treturn assertDefined(this.#itemTypeExpr.cache?.asDataType);\n\t}\n\n\t/**\n\t * @param {Scope} scope\n\t * @returns {null | EvalEntity}\n\t */\n\tevalInternal(scope) {\n\t\tconst itemType_ = this.#itemTypeExpr.eval(scope);\n\t\tif (!itemType_) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst itemType = itemType_.asDataType;\n\n\t\tif (!itemType) {\n\t\t\tthis.#itemTypeExpr.typeError(\"content of list can't be func\");\n\t\t\treturn null;\n\t\t}\n\n\t\tfor (let itemExpr of this.#itemExprs) {\n\t\t\tconst itemVal_ = itemExpr.eval(scope);\n\t\t\tif (!itemVal_) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tconst itemVal = itemVal_.asTyped;\n\n\t\t\tif (!itemVal) {\n\t\t\t\titemExpr.typeError(\"not typed\");\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (!itemType.isBaseOf(itemVal.type)) {\n\t\t\t\titemExpr.typeError(`expected ${itemType.toString()}, got ${itemVal.type.toString()}`);\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t}\n\n\t\treturn new DataEntity(ListType$(itemType));\n\t}\n\n\t/**\n\t * @returns {boolean}\n\t */\n\tisLiteral() {\n\t\treturn true;\n\t}\n\n\t/**\n\t * @param {ToIRContext} ctx\n\t * @returns {IR}\n\t */\n\ttoIR(ctx) {\n\t\tlet ir = new IR(\"__core__mkNilData(())\");\n\n\t\t// starting from last element, keeping prepending a data version of that item\n\n\t\tfor (let i = this.#itemExprs.length - 1; i >= 0; i--) {\n\n\t\t\tlet itemIR = new IR([\n\t\t\t\tnew IR(`${this.itemType.path}____to_data`),\n\t\t\t\tnew IR(\"(\"),\n\t\t\t\tthis.#itemExprs[i].toIR(ctx),\n\t\t\t\tnew IR(\")\"),\n\t\t\t]);\n\n\t\t\tir = new IR([\n\t\t\t\tnew IR(\"__core__mkCons\"),\n\t\t\t\tnew IR(\"(\"),\n\t\t\t\titemIR,\n\t\t\t\tnew IR(\", \"),\n\t\t\t\tir,\n\t\t\t\tnew IR(\")\")\n\t\t\t]);\n\t\t}\n\n\t\treturn ir;\n\t}\n\n\t/**\n\t * @returns {string}\n\t */\n\ttoString() {\n\t\treturn `[]${this.#itemTypeExpr.toString()}{${this.#itemExprs.map(itemExpr => itemExpr.toString()).join(', ')}}`;\n\t}\n}\n\n/**\n * Map[...]...{... : ...} expression\n * @internal\n */\nexport class MapLiteralExpr extends Expr {\n\t#keyTypeExpr;\n\t#valueTypeExpr;\n\t#pairExprs;\n\n\t/**\n\t * @param {Site} site \n\t * @param {Expr} keyTypeExpr \n\t * @param {Expr} valueTypeExpr\n\t * @param {[Expr, Expr][]} pairExprs \n\t */\n\tconstructor(site, keyTypeExpr, valueTypeExpr, pairExprs) {\n\t\tsuper(site);\n\t\tthis.#keyTypeExpr = keyTypeExpr;\n\t\tthis.#valueTypeExpr = valueTypeExpr;\n\t\tthis.#pairExprs = pairExprs;\n\t}\n\n\t/**\n\t * @type {DataType}\n\t */\n\tget keyType() {\n\t\treturn assertDefined(this.#keyTypeExpr.cache?.asDataType);\n\t}\n\n\t/**\n\t * @type {DataType}\n\t */\n\tget valueType() {\n\t\treturn assertDefined(this.#valueTypeExpr.cache?.asDataType);\n\t}\n\n\t/**\n\t * @param {Scope} scope\n\t * @returns {null | EvalEntity}\n\t */\n\tevalInternal(scope) {\n\t\tconst keyType_ = this.#keyTypeExpr.eval(scope);\n\t\tif (!keyType_) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst keyType = keyType_.asDataType;\n\t\tif (!keyType) {\n\t\t\tthis.#keyTypeExpr.typeError(\"key-type of Map can't be func\");\n\t\t\treturn null;\n\t\t}\n\n\t\tconst valueType_ = this.#valueTypeExpr.eval(scope);\n\t\tif (!valueType_) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst valueType = valueType_.asDataType;\n\t\tif (!valueType) {\n\t\t\tthis.#valueTypeExpr.typeError(\"value-type of Map can't be func\");\n\t\t\treturn null;\n\t\t}\n\n\t\tfor (let [keyExpr, valueExpr] of this.#pairExprs) {\n\t\t\tconst keyVal_ = keyExpr.eval(scope);\n\t\t\tif (!keyVal_) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tconst keyVal = keyVal_.asTyped;\n\t\t\tif (!keyVal) {\n\t\t\t\tkeyExpr.typeError(\"not typed\");\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tconst valueVal_ = valueExpr.eval(scope); \n\t\t\tif (!valueVal_) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tconst valueVal = valueVal_.asTyped;\n\t\t\tif (!valueVal) {\n\t\t\t\tvalueExpr.typeError(\"not typed\");\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (!keyType.isBaseOf(keyVal.type)) {\n\t\t\t\tkeyExpr.typeError(`expected ${keyType.toString()} for map key, got ${keyVal.toString()}`);\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\t\n\t\t\tif (!valueType.isBaseOf(valueVal.type)) {\n\t\t\t\tvalueExpr.typeError(`expected ${valueType.toString()} for map value, got ${valueVal.toString()}`);\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t}\n\n\t\treturn new DataEntity(MapType$(keyType, valueType));\n\t}\n\n\t/**\n\t * @returns {boolean}\n\t */\n\tisLiteral() {\n\t\treturn true;\n\t}\n\n\t/**\n\t * @param {ToIRContext} ctx\n\t * @returns {IR}\n\t */\n\ttoIR(ctx) {\n\t\tlet ir = new IR(\"__core__mkNilPairData(())\");\n\n\t\t// starting from last element, keeping prepending a data version of that item\n\n\t\tfor (let i = this.#pairExprs.length - 1; i >= 0; i--) {\n\t\t\tlet [keyExpr, valueExpr] = this.#pairExprs[i];\n\n\t\t\tlet keyIR = new IR([\n\t\t\t\tnew IR(`${this.keyType.path}____to_data`),\n\t\t\t\tnew IR(\"(\"),\n\t\t\t\tkeyExpr.toIR(ctx),\n\t\t\t\tnew IR(\")\"),\n\t\t\t]);\n\n\t\t\tlet valueIR = new IR([\n\t\t\t\tnew IR(`${this.valueType.path}____to_data`),\n\t\t\t\tnew IR(\"(\"),\n\t\t\t\tvalueExpr.toIR(ctx),\n\t\t\t\tnew IR(\")\"),\n\t\t\t]);\n\n\t\t\tir = new IR([\n\t\t\t\tnew IR(\"__core__mkCons(\"),\n\t\t\t\tnew IR(\"__core__mkPairData(\"),\n\t\t\t\tkeyIR,\n\t\t\t\tnew IR(\",\"),\n\t\t\t\tvalueIR,\n\t\t\t\tnew IR(\")\"),\n\t\t\t\tnew IR(\", \"),\n\t\t\t\tir,\n\t\t\t\tnew IR(\")\")\n\t\t\t], this.site);\n\t\t}\n\n\t\treturn ir;\n\t}\n\n\t/**\n\t * @returns {string}\n\t */\n\ttoString() {\n\t\treturn `Map[${this.#keyTypeExpr.toString()}]${this.#valueTypeExpr.toString()}{${this.#pairExprs.map(([keyExpr, valueExpr]) => `${keyExpr.toString()}: ${valueExpr.toString()}`).join(', ')}}`;\n\t}\n}\n\n/**\n * NameTypePair is base class of FuncArg and DataField (differs from StructLiteralField) \n * @internal\n */\nexport class NameTypePair {\n\t#name;\n\t#typeExpr;\n\n\t/**\n\t * @param {Word} name \n\t * @param {null | Expr} typeExpr \n\t */\n\tconstructor(name, typeExpr) {\n\t\tthis.#name = name;\n\t\tthis.#typeExpr = typeExpr;\n\t}\n\n\t/**\n\t * @type {Site}\n\t */\n\tget site() {\n\t\treturn this.#name.site;\n\t}\n\n\t/**\n\t * @type {Word}\n\t */\n\tget name() {\n\t\treturn this.#name;\n\t}\n\n\t/**\n\t * Throws an error if called before evalType()\n\t * @type {Type}\n\t */\n\tget type() {\n\t\tif (this.isIgnored()) {\n\t\t\treturn new AllType();\n\t\t} else if (this.#typeExpr === null) {\n\t\t\tthrow new Error(\"typeExpr not set in \" + this.site.src.raw.split(\"\\n\")[0]);\n\t\t} else {\n\t\t\t// asDataType might be null if the evaluation of its TypeExpr threw a syntax error\n\t\t\treturn this.#typeExpr.cache?.asType ?? new AllType();\n\t\t}\n\t}\n\n\t/**\n\t * @type {null | Expr}\n\t */\n\tget typeExpr() {\n\t\treturn this.#typeExpr\n\t}\n\n\t/**\n\t * @type {string}\n\t */\n\tget typeName() {\n\t\tif (this.#typeExpr === null) {\n\t\t\treturn \"\";\n\t\t} else {\n\t\t\treturn this.#typeExpr.toString();\n\t\t}\n\t}\n\n\t/**\n\t * @returns {boolean}\n\t */\n\tisIgnored() {\n\t\treturn this.name.value === \"_\";\n\t}\n\n\t/**\n\t * @returns {boolean}\n\t */\n\thasType() {\n\t\treturn this.#typeExpr !== null;\n\t}\n\n\t/**\n\t * Evaluates the type, used by FuncLiteralExpr and DataDefinition\n\t * @param {Scope} scope \n\t * @returns {null | Type}\n\t */\n\tevalType(scope) {\n\t\tif (this.isIgnored()) {\n\t\t\treturn new AllType();\n\t\t} else if (this.#typeExpr === null) {\n\t\t\tthrow new Error(\"typeExpr not set in \" + this.site.src.raw.split(\"\\n\")[0]);\n\t\t} else {\n\t\t\tconst t = this.#typeExpr.eval(scope);\n\n\t\t\tif (!t) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tif (!t.asType) {\n\t\t\t\tthis.#typeExpr.typeError(`'${t.toString()} isn't a valid type`);\n\t\t\t\treturn null;\n\t\t\t} else {\n\t\t\t\treturn t.asType;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @returns {IR}\n\t */\n\ttoIR() {\n\t\treturn new IR(this.#name.toString(), this.#name.site);\n\t}\n\n\t/**\n\t * \n\t * @returns {string}\n\t */\n\ttoString() {\n\t\tif (this.#typeExpr === null) {\n\t\t\treturn this.name.toString();\n\t\t} else {\n\t\t\treturn `${this.name.toString()}: ${this.#typeExpr.toString()}`;\n\t\t}\n\t}\n}\n\n/**\n * Function argument class\n * @internal\n */\nexport class FuncArg extends NameTypePair {\n\t#defaultValueExpr;\n\n\t/**\n\t * @param {Word} name \n\t * @param {null | Expr} typeExpr\n\t * @param {null | Expr} defaultValueExpr\n\t */\n\tconstructor(name, typeExpr, defaultValueExpr = null) {\n\t\tsuper(name, typeExpr);\n\n\t\tthis.#defaultValueExpr = defaultValueExpr;\n\t}\n\n\t/**\n\t * @param {Scope} scope \n\t */\n\tevalDefault(scope) {\n\t\tif (this.#defaultValueExpr != null) {\n\t\t\tconst v_ = this.#defaultValueExpr.eval(scope);\n\t\t\tif (!v_) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst v = v_.asTyped;\n\t\t\tif (!v) {\n\t\t\t\tthis.#defaultValueExpr.typeError(\"not typed\");\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst t = this.evalType(scope);\n\t\t\tif (!t) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (!t.isBaseOf(v.type)) {\n\t\t\t\tthis.#defaultValueExpr.site.typeError(`expected ${t.toString()}, got ${v.type.toString()}`);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @param {Scope} scope \n\t * @returns {null | ArgType}\n\t */\n\tevalArgType(scope) {\n\t\tconst t = super.evalType(scope);\n\n\t\tif (!t) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn new ArgType(this.name, t, this.#defaultValueExpr != null);\n\t}\n\n\t/**\n\t * @returns {IR}\n\t */\n\ttoIR() {\n\t\tconst name = super.toIR();\n\n\t\tif (this.#defaultValueExpr == null) {\n\t\t\treturn name;\n\t\t} else {\n\t\t\treturn new IR([\n\t\t\t\tnew IR(`__useopt__${this.name.toString()}`),\n\t\t\t\tnew IR(\", \"),\n\t\t\t\tname\n\t\t\t]);\n\t\t}\n\t}\n\n\t/**\n\t * @param {IR} bodyIR \n\t * @param {string} name \n\t * @param {IR} defaultIR \n\t * @returns {IR}\n\t */\n\tstatic wrapWithDefaultInternal(bodyIR, name, defaultIR) {\n\t\treturn new IR([\n\t\t\tnew IR(`(${name}) -> {`),\n\t\t\tbodyIR,\n\t\t\tnew IR([\n\t\t\t\tnew IR(`}(__core__ifThenElse(__useopt__${name}, () -> {${name}}, () -> {`),\n\t\t\t\tdefaultIR, \n\t\t\t\tnew IR(\"})())\")\n\t\t\t])\n\t\t]);\n\t}\n\n\t/**\n\t * (argName) -> {\n\t *   <bodyIR>\n\t * }(\n\t *   ifThenElse(\n\t * \t\t__useoptarg__argName,\n\t *  \t() -> {\n\t *        argName\n\t *      },\n\t *      () -> {\n\t *        <defaultValueExpr>\n\t *      }\n\t *   )()\n\t * )\n\t * TODO: indentation\n\t * @param {ToIRContext} ctx\n\t * @param {IR} bodyIR \n\t * @returns {IR}\n\t */\n\twrapWithDefault(ctx, bodyIR) {\n\t\tif (this.#defaultValueExpr == null) {\n\t\t\treturn bodyIR;\n\t\t} else {\n\t\t\tconst name = this.name.toString();\n\n\t\t\treturn FuncArg.wrapWithDefaultInternal(bodyIR, name, this.#defaultValueExpr.toIR(ctx));\n\t\t}\n\t}\n}\n\n/**\n * (..) -> RetTypeExpr {...} expression\n * @internal\n */\nexport class FuncLiteralExpr extends Expr {\n\t#args;\n\t#retTypeExpr;\n\t#bodyExpr;\n\n\t/**\n\t * @param {Site} site\n\t * @param {FuncArg[]} args \n\t * @param {null | Expr} retTypeExpr \n\t * @param {Expr} bodyExpr \n\t */\n\tconstructor(site, args, retTypeExpr, bodyExpr) {\n\t\tsuper(site);\n\t\tthis.#args = args;\n\t\tthis.#retTypeExpr = retTypeExpr;\n\t\tthis.#bodyExpr = bodyExpr;\n\t}\n\n\t/**\n\t * @type {number}\n\t */\n\tget nArgs() {\n\t\treturn this.#args.length;\n\t}\n\n\t/**\n\t * @type {string[]}\n\t */\n\tget argNames() {\n\t\treturn this.#args.map(a => a.name.value);\n\t}\n\n\t/**\n\t * @type {Type[]}\n\t */\n\tget argTypes() {\n\t\treturn this.#args.map(a => a.type);\n\t}\n\n\t/**\n\t * @type {string[]}\n\t */\n\tget argTypeNames() {\n\t\treturn this.#args.map(a => a.typeName)\n\t}\n\n\t/**\n\t * @type {Expr}\n\t */\n\tget retExpr() {\n\t\tlet expr = this.#bodyExpr;\n\n\t\twhile (expr instanceof ChainExpr) {\n\t\t\texpr = expr.downstreamExpr;\n\t\t}\n\n\t\treturn expr;\n\t}\n\n\t/**\n\t * @type {Type}\n\t */\n\tget retType() {\n\t\tif (this.#retTypeExpr === null) {\n\t\t\treturn new AllType();\n\t\t} else {\n\t\t\treturn assertDefined(this.#retTypeExpr.cache?.asType);\n\t\t}\n\t}\n\t\n\t/**\n\t * @returns {boolean}\n\t */\n\tisLiteral() {\n\t\treturn true;\n\t}\n\n\t/**\n\t * @param {Scope} scope \n\t * @returns {null | FuncType}\n\t */\n\tevalType(scope) {\n\t\tlet args = this.#args;\n\t\tif (this.isMethod()) {\n\t\t\targs = args.slice(1);\n\t\t}\n\n\t\tconst argTypes = reduceNull(args.map(a => a.evalArgType(scope)));\n\n\t\tconst retType = this.#retTypeExpr ? this.#retTypeExpr.evalAsType(scope) : new AllType();\n\n\t\tif (argTypes === null || retType === null) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn new FuncType(argTypes, retType);\n\t}\n\n\t/**\n\t * @param {Scope} scope \n\t * @returns {null | EvalEntity}\n\t */\n\tevalInternal(scope) {\n\t\tconst fnType = this.evalType(scope);\n\n\t\tif (!fnType) {\n\t\t\treturn null;\n\t\t}\n\t\t\n\t\t// argTypes is calculated separately again here so it includes self\n\t\tconst argTypes = this.#args.map(a => a.evalType(scope));\n\n\t\tconst subScope = new Scope(scope, true);\n\n\t\targTypes.forEach((a, i) => {\n\t\t\tif (a && !this.#args[i].isIgnored()) {\n\t\t\t\tthis.#args[i].evalDefault(subScope);\n\n\t\t\t\tsubScope.set(this.#args[i].name, a.toTyped());\n\t\t\t}\n\t\t});\n\n\t\tlet bodyVal = this.#bodyExpr.eval(subScope);\n\n\t\tif (!bodyVal) {\n\t\t\treturn null;\n\t\t}\n\n\t\tif (this.#retTypeExpr == null) {\n\t\t\tif (bodyVal.asTyped) {\n\t\t\t\treturn new FuncEntity(new FuncType(fnType.argTypes, bodyVal.asTyped.type));\n\t\t\t} else {\n\t\t\t\tthis.#bodyExpr.typeError(\"expect multi or typed\");\n\t\t\t\treturn null;\n\t\t\t}\n\t\t} else if (bodyVal.asTyped) {\n\t\t\tif (!fnType.retType.isBaseOf(bodyVal.asTyped.type)) {\n\t\t\t\tthis.#retTypeExpr.typeError(`wrong return type, expected ${fnType.retType.toString()} but got ${bodyVal.asTyped.type.toString()}`);\n\t\t\t\treturn null;\n\t\t\t}\n\t\t} else {\n\t\t\tthis.#bodyExpr.typeError(\"expect multi or typed\");\n\t\t\treturn null;\n\t\t}\n\n\t\tsubScope.assertAllUsed();\n\n\t\treturn new FuncEntity(fnType);\n\t}\n\n\tisMethod() {\n\t\treturn this.#args.length > 0 && this.#args[0].name.toString() == \"self\";\n\t}\n\n\t/**\n\t * @returns {IR}\n\t */\n\targsToIR() {\n\t\tlet args = this.#args.map(a => a.toIR());\n\t\tif (this.isMethod()) {\n\t\t\targs = args.slice(1);\n\t\t}\n\n\t\treturn (new IR(args)).join(\", \");\n\t}\n\n\t/**\n\t * In reverse order, because later opt args might depend on earlier args\n\t * @param {ToIRContext} ctx\n\t * @param {IR} innerIR \n\t * @returns {IR}\n\t */\n\twrapWithDefaultArgs(ctx, innerIR) {\n\t\tconst args = this.#args.slice().reverse();\n\n\t\tfor (let arg of args) {\n\t\t\tinnerIR = arg.wrapWithDefault(ctx, innerIR);\n\t\t}\n\n\t\treturn innerIR;\n\t}\n\n\t/**\n\t * @param {ToIRContext} ctx\n\t * @returns {IR}\n\t */\n\ttoIRInternal(ctx) {\n\t\tlet argsWithCommas = this.argsToIR();\n\n\t\tlet innerIndent = ctx.indent;\n\t\tlet methodIndent = ctx.indent;\n\t\tif (this.isMethod()) {\n\t\t\tinnerIndent += TAB;\n\t\t}\n\n\t\tlet innerIR = this.#bodyExpr.toIR(ctx.tab());\n\n\t\tinnerIR = this.wrapWithDefaultArgs(ctx, innerIR);\n\n\t\tlet ir = new IR([\n\t\t\tnew IR(\"(\"),\n\t\t\targsWithCommas,\n\t\t\tnew IR(\") \"), new IR(\"->\", this.site), new IR(` {\\n${innerIndent}${TAB}`),\n\t\t\tinnerIR,\n\t\t\tnew IR(`\\n${innerIndent}}`),\n\t\t]);\n\n\t\t// wrap with 'self'\n\t\tif (this.isMethod()) {\n\t\t\tir = new IR([\n\t\t\t\tnew IR(`(self) -> {\\n${methodIndent}${TAB}`),\n\t\t\t\tir,\n\t\t\t\tnew IR(`\\n${methodIndent}}`),\n\t\t\t]);\n\t\t}\n\n\t\treturn ir;\n\t}\n\n\t/**\n\t * @param {ToIRContext} ctx\n\t * @returns {IR}\n\t */\n\ttoIR(ctx) {\n\t\treturn this.toIRInternal(ctx);\n\t}\n\n\t/**\n\t * @returns {string}\n\t */\n\ttoString() {\n\t\tif (this.#retTypeExpr == null) {\n\t\t\treturn `(${this.#args.map(a => a.toString()).join(\", \")}) -> {${this.#bodyExpr.toString()}}`;\n\t\t} else {\n\t\t\treturn `(${this.#args.map(a => a.toString()).join(\", \")}) -> ${this.#retTypeExpr.toString()} {${this.#bodyExpr.toString()}}`;\n\t\t}\n\t}\n}\n\n/**\n * value[...] expression\n * @internal\n */\nexport class ParametricExpr extends Expr {\n\t#baseExpr;\n\t#parameters;\n\n\t/**\n\t * @param {Site} site - site of brackets\n\t * @param {Expr} baseExpr\n\t * @param {Expr[]} parameters\n\t */\n\tconstructor(site, baseExpr, parameters) {\n\t\tsuper(site);\n\t\tthis.#baseExpr = baseExpr;\n\t\tthis.#parameters = parameters;\n\t}\n\n\t/**\n\t * @type {Type[]}\n\t */\n\tget paramTypes() {\n\t\treturn this.#parameters.map(p => {\n\t\t\tconst pt = p.cache?.asType;\n\n\t\t\tif (!pt) {\n\t\t\t\tthrow new Error(\"not a type\");\n\t\t\t}\n\n\t\t\treturn pt;\n\t\t})\n\t}\n\n\t/**\n\t * @param {Scope} scope \n\t * @returns {null | EvalEntity}\n\t */\n\tevalInternal(scope) {\n\t\tconst paramTypes = reduceNull(this.#parameters.map(p => p.evalAsType(scope)));\n\n\t\tconst baseVal = this.#baseExpr.eval(scope);\n\n\t\tif (!baseVal) {\n\t\t\treturn null;\n\t\t}\n\n\t\tif (!baseVal.asParametric) {\n\t\t\tthis.site.typeError(`'${baseVal.toString()}' isn't a parametric type`);\n\t\t\treturn null;\n\t\t} \n\n\t\tif (paramTypes === null) {\n\t\t\treturn null\n\t\t}\n\t\t\n\t\treturn baseVal.asParametric.apply(paramTypes, this.site);\n\t}\n\n\t/**\n\t * Reused by CallExpr\n\t * @param {Type[]} paramTypes\n\t * @returns {string}\n\t */\n\tstatic toApplicationIR(paramTypes) {\n\t\treturn `[${paramTypes.map(pt => {\n\t\t\tif (pt instanceof FuncType) {\n\t\t\t\treturn \"__fn\";\n\t\t\t} else {\n\t\t\t\treturn assertDefined(pt.asNamed).path;\n\t\t\t}\n\t\t}).join(\"@\")}]`;\n\t}\n\n\t/**\n\t * @param {ToIRContext} ctx\n\t * @returns {IR}\n\t */\n\ttoIR(ctx) {\n\t\tconst params = ParametricExpr.toApplicationIR(this.paramTypes);\n\t\t\n\t\tif (this.#baseExpr instanceof MemberExpr) {\n\t\t\treturn this.#baseExpr.toIR(ctx, params);\n\t\t} else {\n\t\t\treturn IR.new`${this.#baseExpr.toIR(ctx).toString()}${params}${this.site}`;\n\t\t}\n\t}\n\n\t/**\n\t * @returns {string}\n\t */\n\ttoString() {\n\t\treturn `${this.#baseExpr.toString()}[${this.#parameters.map(p => p.toString()).join(\", \")}]`;\n\t}\n}\n\n/**\n * Unary operator expression\n * Note: there are no post-unary operators, only pre\n * @internal\n */\nexport class UnaryExpr extends Expr {\n\t#op;\n\t#a;\n\n\t/**\n\t * @param {SymbolToken} op \n\t * @param {Expr} a \n\t */\n\tconstructor(op, a) {\n\t\tsuper(op.site);\n\t\tthis.#op = op;\n\t\tthis.#a = a;\n\t}\n\n\t/**\n\t * Turns an op symbol into an internal name\n\t * @returns {Word}\n\t */\n\ttranslateOp() {\n\t\tconst op = this.#op.toString();\n\t\tconst site = this.#op.site;\n\n\t\tif (op == \"+\") {\n\t\t\treturn new Word(site, \"__pos\");\n\t\t} else if (op == \"-\") {\n\t\t\treturn new Word(site, \"__neg\");\n\t\t} else if (op == \"!\") {\n\t\t\treturn new Word(site, \"__not\");\n\t\t} else {\n\t\t\tthrow new Error(\"unhandled unary op\");\n\t\t}\n\t}\n\n\t/**\n\t * @param {Scope} scope \n\t * @returns {null | EvalEntity}\n\t */\n\tevalInternal(scope) {\n\t\tconst a_ = this.#a.eval(scope);\n\t\tif (!a_) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst a = a_.asInstance;\n\t\tif (!a) {\n\t\t\tthis.#a.site.typeError(\"not an instance\");\n\t\t\treturn null;\n\t\t}\n\n\t\tconst op = this.translateOp().value;\n\n\t\tconst fnVal = a.type.typeMembers[op]?.asType?.toTyped()?.asFunc;\n\n\t\tif (fnVal) {\n\t\t\t// immediately applied\n\t\t\treturn fnVal.asFunc.call(this.#op.site, [a]);\n\t\t} else {\n\t\t\tthis.#a.site.typeError(`'${this.#op.toString()} ${a.type.toString()}' undefined`);\n\t\t\treturn null;\n\t\t}\n\t}\n\n\t/**\n\t * @param {ToIRContext} ctx\n\t * @returns {IR}\n\t */\n\ttoIR(ctx) {\n\t\tconst path = assertDefined(this.cache?.asTyped?.type?.asNamed).path;\n\n\t\treturn IR.new`${path}__${this.translateOp().value}${this.site}(${this.#a.toIR(ctx)})`;\n\t}\n\n\t/**\n\t * @returns {string}\n\t */\n\ttoString() {\n\t\treturn `${this.#op.toString()}${this.#a.toString()}`;\n\t}\n}\n\n/**\n * @internal\n * @type {{[name: string]: string}}\n */\nexport const BINARY_SYMBOLS_MAP = {\n\t\"||\": \"__or\",\n\t\"&&\": \"__and\",\n\t\"==\": \"__eq\",\n\t\"!=\": \"__neq\",\n\t\"<\": \"__lt\",\n\t\"<=\": \"__leq\",\n\t\">\": \"__gt\",\n\t\">=\": \"__geq\",\n\t\"+\": \"__add\",\n\t\"-\": \"__sub\",\n\t\"*\": \"__mul\",\n\t\"/\": \"__div\",\n\t\"%\": \"__mod\"\n}\n\n/**\n * Binary operator expression\n * @internal\n */\nexport class BinaryExpr extends Expr {\n\t#op;\n\t#a;\n\t#b;\n\t#swap; // swap a and b for commutative ops\n\t#alt; // use alt (each operator can have one overload)\n\n\t/**\n\t * @param {SymbolToken} op \n\t * @param {Expr} a \n\t * @param {Expr} b \n\t */\n\tconstructor(op, a, b) {\n\t\tsuper(op.site);\n\t\tthis.#op = op;\n\t\tthis.#a = a;\n\t\tthis.#b = b;\n\t\tthis.#swap = false;\n\t\tthis.#alt = 0;\n\t}\n\n\t/** \n\t * @type {Expr}\n\t */\n\tget first() {\n\t\treturn this.#swap ? this.#b : this.#a;\n\t}\n\n\t/**\n\t * @type {Expr} \n\t */\n\tget second() {\n\t\treturn this.#swap ? this.#a : this.#b;\n\t}\n\n\ttoString() {\n\t\treturn `${this.#a.toString()} ${this.#op.toString()} ${this.#b.toString()}`;\n\t}\n\n\t/**\n\t * Turns op symbol into internal name\n\t * @param {number} alt\n\t * @returns {Word}\n\t */\n\ttranslateOp(alt = 0) {\n\t\tconst op = this.#op.toString();\n\t\tconst site = this.#op.site;\n\n\t\tlet name = BINARY_SYMBOLS_MAP[op];\n\n\t\tif (!name) {\n\t\t\tthrow new Error(\"unhandled\");\n\t\t}\n\n\t\tif (alt > 0) {\n\t\t\tname += alt.toString();\n\t\t}\n\n\t\treturn new Word(site, name);\n\t}\n\n\t/**\n\t * @returns {boolean}\n\t */\n\tisCommutative() {\n\t\tswitch (this.#op.toString()) {\n\t\t\tcase \"+\":\n\t\t\tcase \"*\":\n\t\t\tcase \"==\":\n\t\t\tcase \"!=\":\n\t\t\t\treturn true;\n\t\t\tdefault:\n\t\t\t\treturn false;\n\t\t}\n\t}\n\n\t/**\n\t * @param {Scope} scope \n\t * @returns {null | EvalEntity}\n\t */\n\tevalInternal(scope) {\n\t\tconst a_ = this.#a.eval(scope);\n\t\tconst b_ = this.#b.eval(scope);\n\t\t\n\t\tif (!a_ || !b_) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst a = a_.asInstance;\n\t\tif (!a) {\n\t\t\tthis.#a.typeError(`lhs of ${this.#op.toString()} not an instance`);\n\t\t\treturn null;\n\t\t}\n\n\t\tconst b = b_.asInstance;\n\t\tif (!b) {\n\t\t\tthis.#b.typeError(`rhs of ${this.#op.toString()} not an instance`);\n\t\t\treturn null;\n\t\t}\n\n\t\tfor (let swap of (this.isCommutative() ? [false, true] : [false])) {\n\t\t\tfor (let alt of [0, 1, 2]) {\n\t\t\t\tlet first  = swap ? b : a;\n\t\t\t\tlet second = swap ? a : b;\n\n\t\t\t\tconst fnVal_ = first.type.typeMembers[this.translateOp(alt).value];\n\n\t\t\t\tlet fnVal = fnVal_?.asType?.toTyped()?.asFunc;\n\t\t\t\tif (!fnVal) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tif (fnVal.funcType.argTypes[0].isBaseOf(first.type) && fnVal.funcType.argTypes[1].isBaseOf(second.type)) {\n\t\t\t\t\tlet res = fnVal.call(this.#op.site, [first, second]);\n\n\t\t\t\t\tthis.#swap = swap;\n\t\t\t\t\tthis.#alt  = alt;\n\n\t\t\t\t\treturn res;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis.typeError(`'${a.type.toString()} ${this.#op.toString()} ${b.type.toString()}' undefined`);\n\t\treturn null;\n\t}\n\n\t/**\n\t * @param {ToIRContext} ctx\n\t * @returns {IR}\n\t */\n\ttoIR(ctx) {\n\t\tlet path = assertDefined(this.first.cache?.asTyped?.type.asNamed).path;\n\n\t\tlet op = this.translateOp(this.#alt).value;\n\n\t\tif (op == \"__and\" || op == \"__or\") {\n\t\t\treturn new IR([\n\t\t\t\tnew IR(`${path}${op}`, this.site), new IR(`(\\n${ctx.indent}${TAB}() -> {`),\n\t\t\t\tthis.first.toIR(ctx.tab()),\n\t\t\t\tnew IR(`},\\n${ctx.indent}${TAB}() -> {`),\n\t\t\t\tthis.second.toIR(ctx.tab()),\n\t\t\t\tnew IR(`}\\n${ctx.indent})`)\n\t\t\t]);\n\t\t} else {\n\t\t\treturn new IR([\n\t\t\t\tnew IR(`${path}__${op}`, this.site), new IR(\"(\", this.site),\n\t\t\t\tthis.first.toIR(ctx),\n\t\t\t\tnew IR(\", \"),\n\t\t\t\tthis.second.toIR(ctx),\n\t\t\t\tnew IR(\")\")\n\t\t\t]);\n\t\t}\n\t}\n}\n\n/**\n * Parentheses expression\n * @internal\n */\nexport class ParensExpr extends Expr {\n\t#exprs;\n\n\t/**\n\t * @param {Site} site \n\t * @param {Expr[]} exprs\n\t */\n\tconstructor(site, exprs) {\n\t\tsuper(site);\n\t\tthis.#exprs = exprs;\n\t}\n\n\t/**\n\t * @returns {boolean}\n\t */\n\tisLiteral() {\n\t\treturn this.#exprs.every(e => e.isLiteral());\n\t}\n\n\t/**\n\t * @param {Scope} scope \n\t * @returns {null | EvalEntity}\n\t */\n\tevalInternal(scope) {\n\t\tif (this.#exprs.length === 1) {\n\t\t\treturn this.#exprs[0].eval(scope);\n\t\t} else {\n\t\t\tconst entries = reduceNull(this.#exprs.map(e => {\n\t\t\t\tconst v_ = e.eval(scope);\n\t\t\t\tif (!v_) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\n\t\t\t\tconst v = v_.asTyped;\n\t\t\t\tif (!v) {\n\t\t\t\t\te.site.typeError(\"not typed\");\n\t\t\t\t\treturn null;\n\t\t\t\t} \n\t\t\t\t\n\t\t\t\tif ((new ErrorType()).isBaseOf(v.type)) {\n\t\t\t\t\te.site.typeError(\"unexpected error call in multi-valued expression\");\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\n\t\t\t\treturn v.type;\n\t\t\t}));\n\n\t\t\tif (entries === null) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\t//return new MultiEntity(entries);\n\n\t\t\treturn TupleType$(entries).toTyped();\n\t\t}\n\t}\n\n\t/**\n\t * @param {ToIRContext} ctx\n\t * @returns {IR}\n\t */\n\ttoIR(ctx) {\n\t\tif (this.#exprs.length === 1) {\n\t\t\treturn this.#exprs[0].toIR(ctx);\n\t\t} else {\n\t\t\treturn new IR(\n\t\t\t\t[new IR(`(callback) -> {\\n${ctx.indent + TAB}callback(\\n${ctx.indent + TAB + TAB}`, this.site)]\n\t\t\t\t.concat(new IR(this.#exprs.map(e => e.toIR(ctx.tab().tab()))).join(`,\\n${ctx.indent + TAB + TAB}`))\n\t\t\t\t.concat([new IR(`\\n${ctx.indent + TAB})\\n${ctx.indent}}`)])\n\t\t\t);\n\t\t}\n\t}\n\n\t/**\n\t * @returns {string}\n\t */\n\ttoString() {\n\t\treturn `(${this.#exprs.map(e => e.toString()).join(\", \")})`;\n\t}\n}\n\n/**\n * @internal\n */\nexport class CallArgExpr extends Token {\n\t#name;\n\t#valueExpr;\n\n\t/**\n\t * @param {Site} site \n\t * @param {null | Word} name \n\t * @param {Expr} valueExpr \n\t */\n\tconstructor(site, name, valueExpr) {\n\t\tsuper(site);\n\n\t\tthis.#name = name;\n\t\tthis.#valueExpr = valueExpr;\n\t}\n\n\t/**\n\t * @type {string}\n\t */\n\tget name() {\n\t\treturn this.#name?.toString() ?? \"\";\n\t}\n\n\t/**\n\t * @type {Expr}\n\t */\n\tget valueExpr() {\n\t\treturn this.#valueExpr;\n\t}\n\n\t/**\n\t * @type {EvalEntity}\n\t */\n\tget value() {\n\t\treturn assertDefined(this.#valueExpr.cache);\n\t}\n\n\t/**\n\t * @returns {boolean}\n\t */\n\tisNamed() {\n\t\treturn this.#name != null;\n\t}\n\n\t/**\n\t * @returns {boolean}\n\t */\n\tisLiteral() {\n\t\treturn this.#valueExpr.isLiteral();\n\t}\n\n\t/**\n\t * @returns {string}\n\t */\n\ttoString() {\n\t\treturn [\n\t\t\tthis.#name != null ? `${this.#name.toString()}: `: \"\",\n\t\t\tthis.#valueExpr.toString()\n\t\t].join(\"\");\n\t}\n\n\t/**\n\t * @param {Scope} scope \n\t * @returns {null | EvalEntity}\n\t */\n\teval(scope) {\n\t\treturn this.#valueExpr.eval(scope);\n\t}\n}\n\n/**\n * ...(...) expression\n * @internal\n */\nexport class CallExpr extends Expr {\n\t#fnExpr;\n\t#argExprs;\n\n\t/**\n\t * @type {Type[]}\n\t */\n\t#paramTypes;\n\n\t/**\n\t * @type {null | Func}\n\t */\n\t#appliedFnVal;\n\n\t/**\n\t * @param {Site} site \n\t * @param {Expr} fnExpr \n\t * @param {CallArgExpr[]} argExprs \n\t */\n\tconstructor(site, fnExpr, argExprs) {\n\t\tsuper(site);\n\t\tthis.#fnExpr = fnExpr;\n\t\tthis.#argExprs = argExprs;\n\t\tthis.#paramTypes = [];\n\t\tthis.#appliedFnVal = null; // only for infered parametric funcions\n\t}\n\n\tget fnExpr() {\n\t\treturn this.#fnExpr;\n\t}\n\n\ttoString() {\n\t\treturn `${this.#fnExpr.toString()}(${this.#argExprs.map(a => a.toString()).join(\", \")})`;\n\t}\n\n\t/**\n\t * @returns {boolean}\n\t */\n\tisLiteral() {\n\t\tif (this.#fnExpr instanceof PathExpr && this.cache?.asTyped && this.#fnExpr.baseExpr.cache?.asType?.isBaseOf(this.cache.asTyped.type)) {\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\t/**\n\t * @param {Scope} scope \n\t * @returns {null | EvalEntity}\n\t */\n\tevalInternal(scope) {\n\t\tconst fnVal = this.#fnExpr.eval(scope);\n\n\t\tconst argVals = reduceNull(this.#argExprs.map((ae, i) => {\n\t\t\tconst av_ = ae.eval(scope);\n\n\t\t\tif (!av_) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\t\n\t\t\tconst av = av_.asTyped;\n\n\t\t\tif (!av) {\n\t\t\t\tae.typeError(`arg ${i+1} not an instance`);\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\treturn av;\n\t\t}));\n\n\t\tif (!fnVal || argVals === null) {\n\t\t\treturn null;\n\t\t}\n\n\t\t/**\n\t\t * @type {Typed[]}\n\t\t */\n\t\tconst posArgVals = [];\n\n\t\tthis.#argExprs.forEach((argExpr, i) => {\n\t\t\tif (!argExpr.isNamed()) {\n\t\t\t\tposArgVals.push(argVals[i]);\n\t\t\t}\n\t\t});\n\n\t\t/**\n\t\t * @type {{[name: string]: Typed}}\n\t\t */\n\t\tconst namedArgVals = {};\n\n\t\tthis.#argExprs.forEach((argExpr, i) => {\n\t\t\tif (argExpr.isNamed()) {\n\t\t\t\tconst val = argVals[i];\n\n\t\t\t\tif (val.asTyped) {\n\t\t\t\t\tnamedArgVals[argExpr.name] = val.asTyped;\n\t\t\t\t} else {\n\t\t\t\t\tthrow new Error(\"unexpected\");\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tassert(posArgVals.every(pav => pav != undefined));\n\n\t\tif (fnVal.asParametric) {\n\t\t\tthis.#paramTypes = [];\n\n\t\t\tthis.#appliedFnVal = fnVal.asParametric.inferCall(this.site, posArgVals, namedArgVals, this.#paramTypes);\n\n\t\t\treturn this.#appliedFnVal.call(this.site, posArgVals, namedArgVals);\n\t\t} else if (fnVal.asFunc) {\n\t\t\treturn fnVal.asFunc.call(this.site, posArgVals, namedArgVals);\n\t\t} else {\n\t\t\tthis.#fnExpr.typeError(`expected function, got ${fnVal.toString()}`);\n\t\t\treturn null;\n\t\t}\n\t}\n\n\t/**\n\t * Don't call this inside eval() because param types won't yet be complete.\n\t * @type {FuncType}\n\t */\n\tget fn() {\n\t\tif (this.#fnExpr.cache?.asParametric) {\n\t\t\treturn assertClass(this.#appliedFnVal?.type?.asType, FuncType);\n\t\t} else {\n\t\t\treturn assertClass(this.#fnExpr.cache?.asTyped?.type.asType, FuncType);\n\t\t}\n\t}\n\n\t/**\n\t * @param {ToIRContext} ctx\n\t * @returns {[Expr[], IR[]]} - first list are positional args, second list named args and remaining opt args\n\t */\n\texpandArgs(ctx) {\n\t\tconst fn = this.fn;\n\t\tconst nNonOptArgs = fn.nNonOptArgs;\n\n\t\t/**\n\t\t * @type {Expr[]}\n\t\t */\n\t\tconst positional = [];\n\n\t\tthis.#argExprs.forEach(ae => {\n\t\t\tif (!ae.isNamed()) {\n\t\t\t\tpositional.push(ae.valueExpr);\n\t\t\t}\n\t\t});\n\n\t\t/**\n\t\t * @type {IR[]}\n\t\t */\n\t\tconst namedOptional = [];\n\n\t\tthis.#argExprs.forEach(ae => {\n\t\t\tif (ae.isNamed()) {\n\t\t\t\tconst i = fn.getNamedIndex(ae.site, ae.name);\n\n\t\t\t\tif (i < nNonOptArgs) {\n\t\t\t\t\tpositional[i] = ae.valueExpr;\n\t\t\t\t} else {\n\t\t\t\t\tnamedOptional[i - nNonOptArgs] = new IR([\n\t\t\t\t\t\tnew IR(\"true\"),\n\t\t\t\t\t\tnew IR(\", \"),\n\t\t\t\t\t\tae.valueExpr.toIR(ctx)\n\t\t\t\t\t]);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tfor (let i = nNonOptArgs; i < fn.nArgs; i++) {\n\t\t\tif (namedOptional[i - nNonOptArgs] == undefined) {\n\t\t\t\tnamedOptional[i - nNonOptArgs] = new IR([\n\t\t\t\t\tnew IR(\"false\"),\n\t\t\t\t\tnew IR(\", \"),\n\t\t\t\t\tnew IR(\"()\")\n\t\t\t\t]);\n\t\t\t}\n\t\t}\n\n\t\treturn [positional.filter(p => p != undefined), namedOptional];\n\t}\n\n\t/**\n\t * @param {ToIRContext} ctx\n\t * @returns {IR}\n\t */\n\ttoFnExprIR(ctx) {\n\t\tif (this.#fnExpr.cache?.asParametric instanceof ParametricFunc) {\n\t\t\tassert(this.#paramTypes.length > 0);\n\n\t\t\tconst params = ParametricExpr.toApplicationIR(this.#paramTypes);\n\n\t\t\tif (this.#fnExpr instanceof MemberExpr) {\n\t\t\t\treturn this.#fnExpr.toIR(ctx, params);\n\t\t\t} else {\n\t\t\t\treturn new IR(`${this.#fnExpr.toIR(ctx).toString()}${params}`, this.#fnExpr.site);\n\t\t\t}\n\t\t} else {\n\t\t\treturn this.#fnExpr.toIR(ctx);\n\t\t}\n\t}\n\n\t/**\n\t * @private\n\t * @param {Expr[]} posExprs \n\t * @returns {Map<Expr, number>}\n\t */\n\tdetectExpandedTuples(posExprs) {\n\t\t/**\n\t\t * @type {Map<Expr, number>}\n\t\t */\n\t\tconst result = new Map();\n\n\t\tconst posArgs = reduceNull(posExprs.map(e => e.cache?.asTyped ?? null));\n\n\t\tif (!posArgs) {\n\t\t\tposExprs.forEach(e => {\n\t\t\t\tresult.set(e, 0);\n\t\t\t})\n\n\t\t\treturn result;\n\t\t}\n\n\t\tconst expandedPosArgs = this.fn.expandTuplesInPosArgs(posArgs);\n\n\t\tlet j = 0;\n\n\t\tfor (let i = 0; i < posArgs.length; i++) {\n\t\t\tif (j >= expandedPosArgs.length) {\n\t\t\t\tthrow new Error(\"unexpected\");\n\t\t\t}\n\n\t\t\tif (posArgs[i] == expandedPosArgs[j]) {\n\t\t\t\tresult.set(posExprs[i], 0);\n\t\t\t\tj++;\n\t\t\t} else {\n\t\t\t\tconst tupleItemTypes = getTupleItemTypes(posArgs[i].type);\n\t\t\t\tif (!tupleItemTypes) {\n\t\t\t\t\tthrow new Error(\"unexpected\");\n\t\t\t\t}\n\n\t\t\t\tresult.set(posExprs[i], tupleItemTypes.length);\n\t\t\t\tj += tupleItemTypes.length;\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t}\n\n\t/**\n\t * @param {ToIRContext} ctx\n\t * @returns {IR}\n\t */\n\ttoIR(ctx) {\n\t\tlet fnIR = this.toFnExprIR(ctx);\n\n\t\t/**\n\t\t * We need the func type for things like multivalued args and optional args \n\t\t * @type {FuncType} \n\t\t */\n\t\tconst fn = this.fn;\n\n\t\t/**\n\t\t * First step is to eliminate the named args\n\t\t * @type {[Expr[], IR[]]}\n\t\t */\n\t\tconst [posExprs, namedOptExprs] = this.expandArgs(ctx);\n\n\t\t// some multiValued args (always positional)\n\t\tconst isExpandedTuple = this.detectExpandedTuples(posExprs);\n\n\t\tif (posExprs.some(e => (isExpandedTuple.get(e) ?? 0) > 0 )) {\n\t\t\t// count the number of final args\n\t\t\tlet n = 0;\n\n\t\t\tposExprs.forEach((e, i) => {\n\t\t\t\tif ((isExpandedTuple.get(e) ?? 0) > 0) {\n\t\t\t\t\tn += assertDefined(isExpandedTuple.get(e));\n\t\t\t\t} else {\n\t\t\t\t\tn += 1;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tn += namedOptExprs.length;\n\n\t\t\tif (n > fn.nArgs) {\n\t\t\t\tnamedOptExprs.splice(0, n - fn.nArgs);\n\t\t\t}\n\n\t\t\tlet names = [];\n\n\t\t\tfor (let i = 0; i < fn.nArgs; i++) {\n\t\t\t\tif (i >= fn.nNonOptArgs) {\n\t\t\t\t\tnames.push(`__useopt__x${i}`);\n\t\t\t\t}\n\n\t\t\t\tnames.push(`x${i}`);\n\t\t\t}\n\n\t\t\tlet ir = new IR([\n\t\t\t\tfnIR,\n\t\t\t\tnew IR(\"(\"),\n\t\t\t\tnew IR(names.map(n => new IR(n))).join(\", \"),\n\t\t\t\tnew IR(\")\", this.site)\n\t\t\t]);\n\n\t\t\tfor (let namedIR of namedOptExprs.slice().reverse()) {\n\t\t\t\tconst n2 = assertDefined(names.pop());\n\t\t\t\tconst n1 = assertDefined(names.pop());\n\t\t\t\tassert(n1.startsWith(\"__useopt__\"));\n\n\t\t\t\tir = new IR([\n\t\t\t\t\tnew IR(\"(\"),\n\t\t\t\t\tnew IR(n1),\n\t\t\t\t\tnew IR(\", \"),\n\t\t\t\t\tnew IR(n2),\n\t\t\t\t\tnew IR(\") -> {\"),\n\t\t\t\t\tir,\n\t\t\t\t\tnew IR(\"}(\"),\n\t\t\t\t\tassertDefined(namedIR), // bool - val pair\n\t\t\t\t\tnew IR(\")\")\n\t\t\t\t]);\n\t\t\t}\n\n\t\t\tfor (let i = posExprs.length - 1; i >= 0; i--) {\n\t\t\t\tconst e = posExprs[i];\n\n\t\t\t\tif ((isExpandedTuple.get(e) ?? 0) > 0) {\n\t\t\t\t\tconst nMulti = assertDefined(isExpandedTuple.get(e));\n\t\t\t\t\tconst multiNames = [];\n\t\t\t\t\tconst multiOpt = [];\n\n\t\t\t\t\twhile (multiNames.length < nMulti) {\n\t\t\t\t\t\tmultiNames.unshift(assertDefined(names.pop()));\n\n\t\t\t\t\t\tif (names.length > 0 && names[names.length-1] == `__useopt__${multiNames[0]}`) {\n\t\t\t\t\t\t\tmultiOpt.unshift(assertDefined(names.pop()));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (multiOpt.length > 0) {\n\t\t\t\t\t\tir = new IR([\n\t\t\t\t\t\t\tnew IR(\"(\"),\n\t\t\t\t\t\t\tnew IR(multiOpt.map(n => new IR(n))).join(\", \"),\n\t\t\t\t\t\t\tnew IR(\") -> {\"),\n\t\t\t\t\t\t\tir,\n\t\t\t\t\t\t\tnew IR(\"}(\"),\n\t\t\t\t\t\t\tnew IR(multiOpt.map(n => new IR(\"true\"))).join(\", \"),\n\t\t\t\t\t\t\tnew IR(\")\")\n\t\t\t\t\t\t])\n\t\t\t\t\t}\n\n\t\t\t\t\tir = new IR([\n\t\t\t\t\t\te.toIR(ctx),\n\t\t\t\t\t\tnew IR(\"((\"),\n\t\t\t\t\t\tnew IR(multiNames.map(n => new IR(n))).join(\", \"),\n\t\t\t\t\t\tnew IR(\") -> {\"),\n\t\t\t\t\t\tir,\n\t\t\t\t\t\tnew IR(\"})\")\n\t\t\t\t\t]);\n\t\t\t\t} else {\n\t\t\t\t\tconst name = assertDefined(names.pop());\n\n\t\t\t\t\tif (names.length > 0 && names[names.length - 1] == `__useopt__${name}`) {\n\t\t\t\t\t\tir = new IR([\n\t\t\t\t\t\t\tnew IR(\"(\"),\n\t\t\t\t\t\t\tnew IR(assertDefined(names.pop())),\n\t\t\t\t\t\t\tnew IR(\") -> {\"),\n\t\t\t\t\t\t\tnew IR(\"}(true)\")\n\t\t\t\t\t\t]);\n\t\t\t\t\t}\n\n\t\t\t\t\tir = new IR([\n\t\t\t\t\t\tnew IR(\"(\"),\n\t\t\t\t\t\tnew IR(name),\n\t\t\t\t\t\tnew IR(\") -> {\"),\n\t\t\t\t\t\tir,\n\t\t\t\t\t\tnew IR(\"}(\"),\n\t\t\t\t\t\te.toIR(ctx),\n\t\t\t\t\t\tnew IR(\")\")\n\t\t\t\t\t]);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn ir;\n\t\t} else /* no multivalued args */ {\n\t\t\tif (posExprs.length + namedOptExprs.length > fn.nArgs) {\n\t\t\t\tnamedOptExprs.splice(0, posExprs.length + namedOptExprs.length - fn.nArgs);\n\t\t\t}\n\n\t\t\tlet args = posExprs.map((a, i) => {\n\t\t\t\tlet ir = a.toIR(ctx);\n\n\t\t\t\tif (i >= fn.nNonOptArgs) {\n\t\t\t\t\tir = new IR([\n\t\t\t\t\t\tnew IR(\"true, \"),\n\t\t\t\t\t\tir\n\t\t\t\t\t]);\n\t\t\t\t}\n\n\t\t\t\treturn ir;\n\t\t\t}).concat(namedOptExprs);\n\n\t\t\treturn new IR([\n\t\t\t\tfnIR,\n\t\t\t\tnew IR(\"(\", this.site),\n\t\t\t\t(new IR(args)).join(\", \"),\n\t\t\t\tnew IR(\")\")\n\t\t\t]);\n\t\t}\n\t}\n}\n\n/**\n *  ... . ... expression\n * @internal\n */\nexport class MemberExpr extends Expr {\n\t#objExpr;\n\t#memberName;\n\n\t/**\n\t * @param {Site} site \n\t * @param {Expr} objExpr \n\t * @param {Word} memberName \n\t */\n\tconstructor(site, objExpr, memberName) {\n\t\tsuper(site);\n\t\tthis.#objExpr = objExpr;\n\t\tthis.#memberName = memberName;\n\t}\n\n\t/**\n\t * @param {Scope} scope \n\t * @returns {null | EvalEntity}\n\t */\n\tevalInternal(scope) {\n\t\tconst objVal_ = this.#objExpr.eval(scope);\n\t\tif (!objVal_) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst objVal = objVal_.asInstance;\n\t\tif (!objVal) {\n\t\t\tthis.#objExpr.site.typeError(`lhs of '.' not an instance`);\n\t\t\treturn null;\n\t\t}\n\n\t\tlet member = objVal.instanceMembers[this.#memberName.value];\n\t\tif (!member) {\n\n\t\t\tif (objVal?.type?.asEnumMemberType) {\n\t\t\t\tmember = objVal.type.asEnumMemberType.parentType.instanceMembers[this.#memberName.value];\n\t\t\t}\n\n\t\t\tif (!member) {\n\t\t\t\tthis.#memberName.referenceError(`'${objVal.type.toString()}.${this.#memberName.value}' undefined`);\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}\n\n\t\tif (member.asParametric) {\n\t\t\treturn member;\n\t\t} else if (member.asType) {\n\t\t\tconst memberVal = member.asType.toTyped();\n\n\t\t\treturn memberVal;\n\t\t} else {\n\t\t\tthrow new Error(\"expected type or parametric\");\n\t\t}\n\t}\n\n\t/**\n\t * @param {ToIRContext} ctx\n\t * @param {string} params - applied type parameters must be inserted Before the call to self\n\t * @returns {IR}\n\t */\n\ttoIR(ctx, params = \"\") {\n\t\t// members can be functions so, field getters are also encoded as functions for consistency\n\n\t\tconst objType = assertDefined(this.#objExpr.cache?.asTyped?.type?.asNamed); \n\n\t\tlet objPath = objType.path;\n\n\t\t// if we are getting the member of an enum member we should check if it a field or method, because for a method we have to use the parent type\n\t\tif (objType.asEnumMemberType && (objType.asEnumMemberType.instanceMembers[this.#memberName.value] === undefined)) {\n\t\t\tobjPath = objType.asEnumMemberType.parentType.path;\n\t\t}\n\n\t\tlet ir = new IR(`${objPath}__${this.#memberName.toString()}${params}`, this.site);\n\n\t\treturn new IR([\n\t\t\tir, new IR(\"(\"),\n\t\t\tthis.#objExpr.toIR(ctx),\n\t\t\tnew IR(\")\"),\n\t\t]);\n\t}\n\n\t/**\n\t * @returns {string}\n\t */\n\ttoString() {\n\t\treturn `${this.#objExpr.toString()}.${this.#memberName.toString()}`;\n\t}\n}\n\n/**\n * if-then-else expression \n * @internal\n */\nexport class IfElseExpr extends Expr {\n\t#conditions;\n\t#branches;\n\n\t/**\n\t * @param {Site} site \n\t * @param {Expr[]} conditions \n\t * @param {Expr[]} branches \n\t */\n\tconstructor(site, conditions, branches) {\n\t\tassert(branches.length == conditions.length + 1);\n\t\tassert(branches.length > 1);\n\n\t\tsuper(site);\n\t\tthis.#conditions = conditions;\n\t\tthis.#branches = branches;\n\t}\n\n\ttoString() {\n\t\tlet s = \"\";\n\t\tfor (let i = 0; i < this.#conditions.length; i++) {\n\t\t\ts += `if (${this.#conditions[i].toString()}) {${this.#branches[i].toString()}} else `;\n\t\t}\n\n\t\ts += `{${this.#branches[this.#conditions.length].toString()}}`;\n\n\t\treturn s;\n\t}\n\n\t/**\n\t * @param {Site} site\n\t * @param {null | Type} prevType\n\t * @param {Type} newType\n\t * @returns {null | Type}\n\t */\n\tstatic reduceBranchType(site, prevType, newType) {\n\t\tif (prevType === null || prevType instanceof ErrorType) {\n\t\t\treturn newType;\n\t\t} else if (newType instanceof ErrorType) {\n\t\t\treturn prevType;\n\t\t} else if (!prevType.isBaseOf(newType)) {\n\t\t\tif (newType.isBaseOf(prevType)) {\n\t\t\t\treturn newType;\n\t\t\t} else {\n\t\t\t\t// check if enumparent is base of newType and of prevType\n\t\t\t\tif (newType.asEnumMemberType) {\n\t\t\t\t\tconst parentType = newType.asEnumMemberType.parentType;\n\n\t\t\t\t\tif (parentType.isBaseOf(prevType) && parentType.isBaseOf(newType)) {\n\t\t\t\t\t\treturn parentType;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tsite.typeError(\"inconsistent types\");\n\t\t\t\treturn null;\n\t\t\t}\n\t\t} else {\n\t\t\treturn prevType;\n\t\t}\n\t}\n\n\t/**\n\t * @param {Site} site\n\t * @param {null | Type} prevType\n\t * @param {Typed} newValue\n\t * @returns {null | Type}\n\t */\n\tstatic reduceBranchMultiType(site, prevType, newValue) {\n\t\tif (newValue.asTyped && (new ErrorType()).isBaseOf(newValue.asTyped.type)) {\n\t\t\treturn prevType;\n\t\t}\n\n\t\tconst newType = assertDefined(newValue.asTyped).type;\n\n\t\tif (prevType === null) {\n\t\t\treturn newType;\n\t\t} else {\n\t\t\treturn IfElseExpr.reduceBranchType(site, prevType, newType);\n\t\t}\n\t}\n\n\t/**\n\t * @param {Scope} scope \n\t * @returns {null | EvalEntity}\n\t */\n\tevalInternal(scope) {\n\t\tfor (let c of this.#conditions) {\n\t\t\tconst cVal_ = c.eval(scope);\n\t\t\tif (!cVal_) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tconst cVal = cVal_.asTyped;\n\n\t\t\tif (!cVal || !BoolType.isBaseOf(cVal.type)) {\n\t\t\t\tc.typeError(\"expected bool\");\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * @type {null | Type}\n\t\t */\n\t\tlet branchMultiType = null;\n\n\t\tfor (let b of this.#branches) {\n\t\t\t// don't allow shadowing\n\t\t\tconst branchScope = new Scope(scope, false);\n\n\t\t\tconst branchVal = b.evalAsTyped(branchScope);\n\n\t\t\tif (!branchVal) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tbranchMultiType = IfElseExpr.reduceBranchMultiType(\n\t\t\t\tb.site, \n\t\t\t\tbranchMultiType, \n\t\t\t\tbranchVal\n\t\t\t);\n\t\t}\n\n\t\tif (branchMultiType === null) {\n\t\t\t// i.e. every branch throws an error\n\t\t\treturn new ErrorEntity();\n\t\t} else  {\n\t\t\treturn branchMultiType.toTyped();\n\t\t}\n\t}\n\n\t/**\n\t * @param {ToIRContext} ctx\n\t * @returns {IR}\n\t */\n\ttoIR(ctx) {\n\t\tlet n = this.#conditions.length;\n\n\t\t// each branch actually returns a function to allow deferred evaluation\n\t\tlet res = new IR([\n\t\t\tnew IR(\"() -> {\"),\n\t\t\tthis.#branches[n].toIR(ctx),\n\t\t\tnew IR(\"}\")\n\t\t]);\n\n\t\t// TODO: nice indentation\n\t\tfor (let i = n - 1; i >= 0; i--) {\n\t\t\tres = new IR([\n\t\t\t\tnew IR(\"__core__ifThenElse(\"),\n\t\t\t\tthis.#conditions[i].toIR(ctx),\n\t\t\t\tnew IR(\", () -> {\"),\n\t\t\t\tthis.#branches[i].toIR(ctx),\n\t\t\t\tnew IR(\"}, () -> {\"),\n\t\t\t\tres,\n\t\t\t\tnew IR(\"()})\"),\n\t\t\t]);\n\t\t}\n\n\t\treturn new IR([res, new IR(\"()\", this.site)]);\n\t}\n}\n\n/**\n * DestructExpr is for the lhs-side of assignments and for switch cases\n * `NameExpr [':' TypeExpr ['{' ... '}']]`\n * @internal\n */\nexport class DestructExpr {\n\t/**\n\t * @type {Word}\n\t */\n\t#name;\n\n\t/**\n\t * @type {null | Expr}\n\t */\n\t#typeExpr;\n\n\t/**\n\t * @type {DestructExpr[]}\n\t */\n\t#destructExprs;\n\n\t/**\n\t * @type {boolean}\n\t */\n\t#isTuple;\n\n\t/**\n\t * @param {Word} name - use an underscore as a sink\n\t * @param {null | Expr} typeExpr \n\t * @param {DestructExpr[]} destructExprs\n\t * @param {boolean} isTuple typeExpr must be `null` if isTuple is `true` and `destructExpr.length` must be `> 0`\n\t */\n\tconstructor(name, typeExpr, destructExprs = [], isTuple = false) {\n\t\tthis.#name = assertDefined(name);\n\t\tthis.#typeExpr = typeExpr;\n\t\tthis.#destructExprs = destructExprs;\n\t\tthis.#isTuple = isTuple;\n\n\t\tif (isTuple) {\n\t\t\tassert(this.#destructExprs.length > 0 && this.#typeExpr == null);\n\t\t} else {\n\t\t\tassert(!(this.#typeExpr == null && this.#destructExprs.length > 0), `unexpected syntax: ${this.toString()}`);\n\t\t}\n\t}\n\n\t/**\n\t * @type {Site}\n\t */\n\tget site() {\n\t\treturn this.#name.site;\n\t}\n\n\t/**\n\t * @type {Word}\n\t */\n\tget name() {\n\t\treturn this.#name;\n\t}\n\n\t/**\n\t * @returns {boolean}\n\t */\n\tisTuple() {\n\t\treturn this.#isTuple;\n\t}\n\n\t/**\n\t * @returns {boolean}\n\t */\n\thasDestructExprs() {\n\t\treturn this.#destructExprs.length > 0;\n\t}\n\n\t/**\n\t * @returns {boolean}\n\t */\n\tisIgnored() {\n\t\treturn this.name.value === \"_\";\n\t}\n\n\t/**\n\t * @returns {boolean}\n\t */\n\thasType() {\n\t\treturn this.#typeExpr !== null;\n\t}\n\n\t/**\n\t * Throws an error if called before evalType()\n\t * @type {null | Type}\n\t */\n\tget type() {\n\t\tif (this.#typeExpr === null) {\n\t\t\tif (this.#isTuple) {\n\t\t\t\tconst nestedTypes = reduceNull(this.#destructExprs.map(e => e.type));\n\n\t\t\t\tif (!nestedTypes) {\n\t\t\t\t\tthis.site.typeError(`invalid nested tuple in in destruct expression`);\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\n\t\t\t\treturn TupleType$(nestedTypes);\n\t\t\t} else if (this.isIgnored()) {\n\t\t\t\treturn new AllType();\n\t\t\t} else {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t} else {\n\t\t\tif (!this.#typeExpr.cache?.asType) {\n\t\t\t\tthis.#typeExpr.typeError(`invalid type '${assertDefined(this.#typeExpr.cache, \"cache unset\").toString()}'`);\n\t\t\t\treturn null;\n\t\t\t} else {\n\t\t\t\treturn this.#typeExpr.cache.asType;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @type {Word}\n\t */\n\tget typeName() {\n\t\tif (this.#typeExpr === null) {\n\t\t\treturn new Word(this.site, \"\");\n\t\t} else {\n\t\t\treturn new Word(this.#typeExpr.site, this.#typeExpr.toString());\n\t\t}\n\t}\n\n\t/**\n\t * @returns {string}\n\t */\n\ttoString() {\n\t\tif (this.#typeExpr === null) {\n\t\t\tif (this.#destructExprs.length > 0 && this.#isTuple) {\n\t\t\t\treturn `${this.name.toString()}: (${this.#destructExprs.map(de => de.toString()).join(\", \")})`;\n\t\t\t} else {\n\t\t\t\treturn this.name.toString();\n\t\t\t}\n\t\t} else {\n\t\t\tlet destructStr = \"\";\n\n\t\t\tif (this.#destructExprs.length > 0) {\n\t\t\t\tdestructStr = `{${this.#destructExprs.map(de => de.toString()).join(\", \")}}`;\n\t\t\t}\n\n\t\t\tif (this.isIgnored()) {\n\t\t\t\treturn `${this.#typeExpr.toString()}${destructStr}`;\n\t\t\t} else {\n\t\t\t\treturn `${this.name.toString()}: ${this.#typeExpr.toString()}${destructStr}`;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Evaluates the type, used by FuncLiteralExpr and DataDefinition\n\t * @param {Scope} scope \n\t * @param {null | Type} upstreamType\n\t * @returns {null | Type}\n\t */\n\tevalType(scope, upstreamType = null) {\n\t\tif (this.#typeExpr === null) {\n\t\t\tif (this.#isTuple) {\n\t\t\t\tconst upstreamItemTypes = upstreamType ? getTupleItemTypes(upstreamType) : null;\n\t\t\t\tconst nestedTypes = reduceNull(this.#destructExprs.map((e, i) => e.evalType(scope, upstreamItemTypes ? upstreamItemTypes[i] : null)));\n\n\t\t\t\tif (!nestedTypes) {\n\t\t\t\t\tthis.site.typeError(`invalid nested tuple in in destruct expression`);\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\n\t\t\t\treturn TupleType$(nestedTypes);\n\t\t\t} else if (this.isIgnored()) {\n\t\t\t\treturn new AllType();\n\t\t\t} else {\n\t\t\t\tthrow new Error(\"typeExpr not set in \" + this.site.src.raw.split(\"\\n\")[0]);\n\t\t\t}\n\t\t} else {\n\t\t\tconst t = this.#typeExpr.evalAsType(scope);\n\n\t\t\tif (t && upstreamType && !upstreamType.asEnumMemberType && t.asEnumMemberType) {\n\t\t\t\treturn t.asEnumMemberType.parentType;\n\t\t\t} else {\n\t\t\t\treturn t;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @param {Scope} scope \n\t * @param {Type} upstreamType \n\t */\n\tevalDestructExprs(scope, upstreamType) {\n\t\tif (this.#destructExprs.length > 0) {\n\t\t\tif (this.#isTuple) {\n\t\t\t\tconst tupleItemTypes = getTupleItemTypes(upstreamType);\n\n\t\t\t\tif (!tupleItemTypes) {\n\t\t\t\t\tthis.site.typeError(\"upstream value isn't a tuple, can't destruct\");\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (tupleItemTypes.length != this.#destructExprs.length) {\n\t\t\t\t\tthis.site.typeError(`wrong number of destruct tuple fields, expected ${tupleItemTypes.length}, got ${this.#destructExprs.length}`);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tfor (let i = 0; i < this.#destructExprs.length; i++) {\n\t\t\t\t\tthis.#destructExprs[i].evalInternal(\n\t\t\t\t\t\tscope, \n\t\t\t\t\t\ttupleItemTypes[i], \n\t\t\t\t\t\ti\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (!upstreamType.asDataType) {\n\t\t\t\t\tthis.site.typeError(\"can't destruct a function\");\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst upstreamFieldNames = upstreamType.asDataType.fieldNames;\n\n\t\t\t\tif (upstreamFieldNames.length != this.#destructExprs.length) {\n\t\t\t\t\tthis.site.typeError(`wrong number of destruct fields, expected ${upstreamFieldNames.length}, got ${this.#destructExprs.length}`);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tfor (let i = 0; i < this.#destructExprs.length; i++) {\n\t\t\t\t\tthis.#destructExprs[i].evalInternal(\n\t\t\t\t\t\tscope, \n\t\t\t\t\t\tassertDefined(upstreamType.instanceMembers[upstreamFieldNames[i]].asDataType), // we `asDataType` because methods can't be destructed\n\t\t\t\t\t\ti\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @param {Scope} scope \n\t * @param {Type} upstreamType\n\t * @param {number} i\n\t */\n\tevalInternal(scope, upstreamType, i) {\n\t\tif (this.hasType()) {\n\t\t\tconst t = this.evalType(scope);\n\t\t\tif (!t) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// differs from upstreamType because can be enum parent\n\t\t\tlet checkType = t;\n\n\t\t\t// if t is enum variant, get parent instead (exact variant is checked at runtime instead)\n\t\t\tif (t.asEnumMemberType && !upstreamType.asEnumMemberType) {\n\t\t\t\tcheckType = t.asEnumMemberType.parentType;\n\t\t\t}\n\n\t\t\tif (!checkType.isBaseOf(upstreamType)) {\n\t\t\t\tthis.site.typeError(`expected ${checkType.toString()} for destructure field ${i+1}, got ${upstreamType.toString()}`);\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tif (!this.isIgnored()) {\n\t\t\t\t// TODO: take into account ghost type parameters\n\t\t\t\tscope.set(this.name, t.toTyped());\n\t\t\t}\n\n\t\t\tthis.evalDestructExprs(scope, t);\n\t\t} else {\n\t\t\tif (!this.isIgnored()) {\n\t\t\t\t// TODO: take into account ghost type parameters\n\t\t\t\tscope.set(this.name, upstreamType.toTyped());\n\t\t\t}\n\n\t\t\tthis.evalDestructExprs(scope, upstreamType);\n\t\t}\n\t}\n\n\t/**\n\t * @param {Scope} scope\n\t * @param {DataType} caseType\n\t */\n\tevalInSwitchCase(scope, caseType) {\n\t\tif (!this.isIgnored()) {\n\t\t\tscope.set(this.#name, caseType.toTyped());\n\t\t}\n\n\t\tif (this.#typeExpr) {\n\t\t\tthis.#typeExpr.cache = caseType;\n\t\t}\n\n\t\tthis.evalDestructExprs(scope, caseType);\n\t}\n\n\t/**\n\t * @param {Scope} scope \n\t * @param {null | Type} upstreamType\n\t * @param {number} i\n\t */\n\tevalInAssignExpr(scope, upstreamType, i) {\n\t\tconst t = this.evalType(scope);\n\n\t\tif (!t) {\n\t\t\tscope.set(this.name, new DataEntity(new AnyType()));\n\t\t\treturn;\n\t\t}\n\n\t\t// differs from upstreamType because can be enum parent\n\t\t// if t is enum variant, get parent instead (exact variant is checked at runtime instead)\n\t\t// also do this for nested as well\n\t\tconst checkType = this.evalType(scope, upstreamType);\n\n\t\tif (checkType && upstreamType) {\n\t\t\tif (!checkType.isBaseOf(upstreamType)) {\n\t\t\t\tthis.site.typeError(`expected ${checkType.toString()} for rhs ${i+1}, got ${upstreamType.toString()}`);\n\t\t\t}\n\t\t}\n\n\t\tif (!this.isIgnored()) {\n\t\t\t// TODO: take into account ghost type parameters\n\t\t\tscope.set(this.name, t.toTyped());\n\t\t}\n\n\t\tthis.evalDestructExprs(scope, t);\n\t}\n\n\t/**\n\t * @param {number} argIndex \n\t * @returns {IR}\n\t */\n\ttoNameIR(argIndex) {\n\t\tif (this.isIgnored()) {\n\t\t\treturn new IR(`__lhs_${argIndex}`);\n\t\t} else {\n\t\t\treturn new IR(this.#name.toString(), this.#name.site)\n\t\t}\n\t}\n\n\t/**\n\t * @param {number} fieldIndex\n\t * @returns {string}\n\t */\n\tgetFieldFn(fieldIndex) {\n\t\tconst type = assertDefined(this.type);\n\n\t\tif (type.asDataType) {\n\t\t\treturn `${type.asDataType.path}__${type.asDataType.fieldNames[fieldIndex]}`;\n\t\t} else {\n\t\t\treturn \"\";\n\t\t}\n\t}\n\n\t/**\n\t * @private\n\t * @param {ToIRContext} ctx\n\t * @param {IR} inner \n\t * @param {string} objName \n\t * @param {number} fieldIndex \n\t * @param {string} fieldGetter\n\t * @returns {IR}\n\t */\n\twrapDestructIRInternal(ctx, inner, objName, fieldIndex, fieldGetter) {\n\t\tif (this.isIgnored() && this.#destructExprs.length == 0) {\n\t\t\treturn inner;\n\t\t} else {\n\t\t\tconst baseName = this.isIgnored() ? `${objName}_${fieldIndex}` : this.#name.toString();\n\n\t\t\tfor (let i = this.#destructExprs.length - 1; i >= 0; i--) {\n\t\t\t\tconst de = this.#destructExprs[i];\n\n\t\t\t\tconst innerGetter = this.#isTuple ? de.toNameIR(i).toString() : `${this.getFieldFn(i)}(${baseName})`;\n\n\t\t\t\tinner = de.wrapDestructIRInternal(ctx.tab(), inner, baseName, i, innerGetter);\n\t\t\t}\n\n\t\t\tif (this.#isTuple) {\n\t\t\t\tinner = IR.new`${baseName}(\n\t\t\t\t\t(${new IR(this.#destructExprs.map((de, i) => de.toNameIR(i))).join(\", \")}) -> {\n\t\t\t\t\t\t${inner}\n\t\t\t\t\t}\n\t\t\t\t)`;\n\t\t\t}\n\n\t\t\tlet getter = fieldGetter;\n\n\t\t\tconst t = this.type;\n\n\t\t\t// assert correct constructor index\n\t\t\tif (this.#typeExpr && t && t.asEnumMemberType) {\n\t\t\t\tconst constrIdx = t.asEnumMemberType.constrIndex;\n\n\t\t\t\tgetter = `__helios__common__assert_constr_index(${getter}, ${constrIdx})`;\n\t\t\t}\n\t\t\t\n\t\t\treturn new IR([\n\t\t\t\tnew IR(\"(\"),\n\t\t\t\tnew IR(baseName, this.#name.site),\n\t\t\t\tnew IR(\") \"),\n\t\t\t\tnew IR(\"->\", this.site), new IR(` {\\n${ctx.indent}${TAB}`),\n\t\t\t\tinner,\n\t\t\t\tnew IR(`\\n${ctx.indent}}(${getter})`),\n\t\t\t]);\n\t\t}\n\t}\n\n\t/**\n\t * \n\t * @param {ToIRContext} ctx\n\t * @param {IR} inner - downstream IR expression\n\t * @param {number} argIndex \n\t * @returns {IR}\n\t */\n\twrapDestructIR(ctx, inner, argIndex) {\n\t\tif (this.#destructExprs.length == 0) {\n\t\t\treturn inner;\n\t\t} else {\n\t\t\t/**\n\t\t\t * same as this.toNameIR()\n\t\t\t * TODO: can __lhs be changed to underscore?\n\t\t\t */\n\t\t\tconst baseName = this.isIgnored() ? `__lhs_${argIndex}` : this.#name.toString();\n\n\t\t\tfor (let i = this.#destructExprs.length - 1; i >= 0; i--) {\n\t\t\t\tconst de = this.#destructExprs[i];\n\n\t\t\t\tconst getter = this.#isTuple ? de.toNameIR(i).toString() : `${this.getFieldFn(i)}(${baseName})`;\n\n\t\t\t\tinner = de.wrapDestructIRInternal(ctx.tab(), inner, baseName, i, getter);\n\t\t\t}\n\n\t\t\tif (this.#isTuple) {\n\t\t\t\treturn IR.new`${baseName}(\n\t\t\t\t\t(${new IR(this.#destructExprs.map((de, i) => de.toNameIR(i))).join(\", \")}) -> {\n\t\t\t\t\t\t${inner}\n\t\t\t\t\t}\n\t\t\t\t)`;\n\t\t\t} else {\n\t\t\t\treturn inner;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @returns {IR}\n\t */\n\ttoIR() {\n\t\treturn new IR(this.#name.toString(), this.#name.site);\n\t}\n}\n\n/**\n * Switch case for a switch expression\n * @internal\n */\nexport class SwitchCase extends Token {\n\t#lhs;\n\t#bodyExpr;\n\n\t/** \n\t * @type {null | number} \n\t */\n\t#constrIndex;\n\n\t/**\n\t * @param {Site} site \n\t * @param {DestructExpr} lhs\n\t * @param {Expr} bodyExpr \n\t */\n\tconstructor(site, lhs, bodyExpr) {\n\t\tsuper(site);\n\t\tthis.#lhs = lhs;\n\t\tthis.#bodyExpr = bodyExpr;\n\t\tthis.#constrIndex = null;\n\t}\n\n\t/**\n\t * @type {Expr}\n\t */\n\tget body() {\n\t\treturn this.#bodyExpr;\n\t}\n\n\t/**\n\t * Used by parser to check if typeExpr reference the same base enum\n\t * @type {Word} - word representation of type\n\t */\n\tget memberName() {\n\t\treturn this.#lhs.typeName;\n\t}\n\n\t/**\n\t * @returns {boolean}\n\t */\n\tisDataMember() {\n\t\tswitch (this.memberName.value) {\n\t\t\tcase \"Int\":\n\t\t\tcase \"[]Data\":\n\t\t\tcase \"ByteArray\":\n\t\t\tcase \"Map[Data]Data\":\n\t\t\t\treturn true;\n\t\t\tdefault:\n\t\t\t\treturn false;\n\t\t}\n\t}\n\n\t/**\n\t * @type {number}\n\t */\n\tget constrIndex() {\n\t\tif (this.#constrIndex === null) {\n\t\t\tthrow new Error(\"constrIndex not yet set\");\n\t\t} else {\n\t\t\treturn this.#constrIndex;\n\t\t}\n\t}\n\n\t/**\n\t * @returns {string}\n\t */\n\ttoString() {\n\t\treturn `${this.#lhs.toString()} => ${this.#bodyExpr.toString()}`;\n\t}\n\n\t/**\n\t * Evaluates the switch type and body value of a case.\n\t * @param {Scope} scope \n\t * @param {DataType} enumType\n\t * @returns {null | Typed}\n\t */\n\tevalEnumMember(scope, enumType) {\n\t\tconst caseType = enumType.typeMembers[this.memberName.value]?.asEnumMemberType;\n\t\tif (!caseType) {\n\t\t\tthis.memberName.typeError(`${this.memberName.value} isn't a valid enum member of ${enumType.toString()}`);\n\t\t\treturn null;\n\t\t}\n\n\t\tthis.#constrIndex = caseType.constrIndex;\n\n\t\tassert(this.#constrIndex >= 0);\n\n\t\tconst caseScope = new Scope(scope, false);\n\n\t\tthis.#lhs.evalInSwitchCase(caseScope, caseType);\n\n\t\tconst bodyVal_ = this.#bodyExpr.eval(caseScope);\n\t\t\n\t\tif (!bodyVal_) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst bodyVal = bodyVal_.asTyped;\n\n\t\tif (!bodyVal) {\n\t\t\tthis.#bodyExpr.typeError(\"not typed\");\n\t\t\treturn null;\n\t\t}\n\n\t\tcaseScope.assertAllUsed();\n\n\t\treturn bodyVal;\n\t}\n\n\t/**\n\t * Evaluates the switch type and body value of a case.\n\t * @param {Scope} scope\n\t * @returns {null | Typed}\n\t */\n\tevalDataMember(scope) {\n\t\t/** @type {DataType} */\n\t\tlet memberType;\n\n\t\tswitch (this.memberName.value) {\n\t\t\tcase \"Int\":\n\t\t\t\tmemberType = IntType;\n\t\t\t\tbreak;\n\t\t\tcase \"ByteArray\":\n\t\t\t\tmemberType = ByteArrayType;\n\t\t\t\tbreak;\n\t\t\tcase \"[]Data\":\n\t\t\t\tmemberType = ListType$(RawDataType);\n\t\t\t\tbreak;\n\t\t\tcase \"Map[Data]Data\":\n\t\t\t\tmemberType = MapType$(RawDataType, RawDataType);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tconst maybeMemberType_ = scope.get(this.memberName);\n\t\t\t\tif (!maybeMemberType_) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\n\t\t\t\tlet maybeMemberType = maybeMemberType_.asDataType;\n\t\t\t\tif (!maybeMemberType) {\n\t\t\t\t\tthis.memberName.typeError(\"expected a data type\");\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t\tmemberType = maybeMemberType;\n\n\t\t\t\tif (!Common.isEnum(memberType)) {\n\t\t\t\t\tthis.memberName.typeError(\"expected an enum type\");\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t}\n\n\t\tconst caseScope = new Scope(scope, false);\n\n\t\tthis.#lhs.evalInSwitchCase(caseScope, memberType);\n\n\t\tconst bodyVal_ = this.#bodyExpr.eval(caseScope);\n\n\t\tif (!bodyVal_) {\n\t\t\treturn null;\n\t\t}\n\n\t\tcaseScope.assertAllUsed();\n\n\t\tconst bodyVal = bodyVal_.asTyped;\n\n\t\tif (!bodyVal) {\n\t\t\tthis.#bodyExpr.typeError(\"not typed\");\n\t\t\treturn null;\n\t\t}\n\n\t\treturn bodyVal;\n\t}\n\n\t/**\n\t * Accept an arg because will be called with the result of the controlexpr\n\t * @param {ToIRContext} ctx\n\t * @returns {IR}\n\t */\n\ttoIR(ctx) {\n\t\tlet inner = this.#bodyExpr.toIR(ctx.tab());\n\n\t\tinner = this.#lhs.wrapDestructIR(ctx, inner, 0);\n\n\t\treturn new IR([\n\t\t\tnew IR(\"(\"),\n\t\t\tthis.#lhs.toNameIR(0), // wrapDestructIR depends on this name\n\t\t\tnew IR(\") \"),\n\t\t\tnew IR(\"->\", this.site), new IR(` {\\n${ctx.indent}${TAB}`),\n\t\t\tinner,\n\t\t\tnew IR(`\\n${ctx.indent}}`),\n\t\t]);\n\t}\n}\n\n/**\n * @internal\n */\nexport class UnconstrDataSwitchCase extends SwitchCase {\n\t#intVarName;\n\t#lstVarName;\n\n\t/**\n\t * @param {Site} site \n\t * @param {?Word} intVarName \n\t * @param {?Word} lstVarName \n\t * @param {Expr} bodyExpr \n\t */\n\tconstructor(site, intVarName, lstVarName, bodyExpr) {\n\t\tsuper(site, new DestructExpr(new Word(site, \"_\"), new RefExpr(new Word(site, \"(Int, []Data)\"))), bodyExpr);\n\n\t\tthis.#intVarName = intVarName;\n\t\tthis.#lstVarName = lstVarName;\n\t}\n\n\tisDataMember() {\n\t\treturn true;\n\t}\n\n\ttoString() {\n\t\treturn `(${this.#intVarName === null ? \"\" : this.#intVarName.value + \": \"}Int, ${this.#lstVarName === null ? \"\" : this.#lstVarName.value + \": \"} []Data) => ${this.body.toString()}`;\n\t}\n\n\t/**\n\t * @param {Scope} scope \n\t * @param {Type} enumType\n\t * @returns {Instance}\n\t */\n\tevalEnumMember(scope, enumType) {\n\t\tthrow new Error(\"not available\");\n\t}\n\n\t/**\n\t * Evaluates the switch type and body value of a case.\n\t * @param {Scope} scope\n\t * @returns {null | Typed}\n\t */\n\tevalDataMember(scope) {\n\t\t/**\n\t\t * @type {null | Typed}\n\t\t */\n\t\tlet bodyVal = null;\n\n\t\tif (this.#intVarName !== null || this.#lstVarName !== null) {\n\t\t\tlet caseScope = new Scope(scope, false);\n\n\t\t\tif (this.#intVarName !== null) {\n\t\t\t\tcaseScope.set(this.#intVarName, new DataEntity(IntType));\n\t\t\t}\n\n\t\t\tif (this.#lstVarName !== null) {\n\t\t\t\tcaseScope.set(this.#lstVarName, new DataEntity(ListType$(RawDataType)));\n\t\t\t}\n\n\t\t\tconst bodyVal_ = this.body.eval(caseScope);\n\n\t\t\tif (!bodyVal_) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tbodyVal = bodyVal_.asTyped;\n\n\t\t\tcaseScope.assertAllUsed();\n\t\t} else {\n\t\t\tconst bodyVal_ = this.body.eval(scope);\n\n\t\t\tif (!bodyVal_) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tbodyVal = bodyVal_.asTyped;\n\t\t}\n\n\t\tif (!bodyVal) {\n\t\t\tthis.body.typeError(\"not typed\");\n\t\t\treturn null;\n\t\t}\n\n\t\treturn bodyVal;\n\t}\n\n\t/**\n\t * Accepts two args\n\t * @param {ToIRContext} ctx\n\t * @returns {IR}\n\t */\n\ttoIR(ctx) {\n\t\treturn new IR([\n\t\t\tnew IR(`(data) -> {\\n${ctx.indent}${TAB}`),\n\t\t\tnew IR(`(pair) -> {\\n${ctx.indent}${TAB}${TAB}`),\n\t\t\tnew IR(`(${this.#intVarName !== null ? this.#intVarName.toString() : \"_\"}, ${this.#lstVarName !== null ? this.#lstVarName.toString() : \"_\"}) `), new IR(\"->\", this.site), new IR(` {\\n${ctx.indent}${TAB}${TAB}${TAB}`),\n\t\t\tthis.body.toIR(ctx.tab().tab().tab()),\n\t\t\tnew IR(`\\n${ctx.indent}${TAB}${TAB}}(__core__fstPair(pair), __core__sndPair(pair))`),\n\t\t\tnew IR(`\\n${ctx.indent}${TAB}}(__core__unConstrData(data))`),\n\t\t\tnew IR(`\\n${ctx.indent}}`)\n\t\t]);\n\t}\n}\n\n/**\n * Default switch case\n * @internal\n */\nexport class SwitchDefault extends Token {\n\t#bodyExpr;\n\n\t/**\n\t * @param {Site} site\n\t * @param {Expr} bodyExpr\n\t */\n\tconstructor(site, bodyExpr) {\n\t\tsuper(site);\n\t\tthis.#bodyExpr = bodyExpr;\n\t}\n\n\ttoString() {\n\t\treturn `else => ${this.#bodyExpr.toString()}`;\n\t}\n\n\t/**\n\t * @param {Scope} scope \n\t * @returns {null | Typed}\n\t */\n\teval(scope) {\n\t\tconst bodyVal_ = this.#bodyExpr.eval(scope);\n\n\t\tif (!bodyVal_) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst bodyVal = bodyVal_.asTyped;\n\n\t\tif (!bodyVal) {\n\t\t\tthis.#bodyExpr.typeError(\"not typed\");\n\t\t\treturn null;\n\t\t}\n\n\t\treturn bodyVal;\n\t}\n\n\t/**\n\t * @param {ToIRContext} ctx\n\t * @returns {IR}\n\t */\n\ttoIR(ctx) {\n\t\treturn new IR([\n\t\t\tnew IR(`(_) `), new IR(\"->\", this.site), new IR(` {\\n${ctx.indent}${TAB}`),\n\t\t\tthis.#bodyExpr.toIR(ctx.tab()),\n\t\t\tnew IR(`\\n${ctx.indent}}`)\n\t\t]);\n\t}\n}\n\n/**\n * Parent class of EnumSwitchExpr and DataSwitchExpr\n */\nclass SwitchExpr extends Expr {\n\t#controlExpr;\n\t#cases;\n\t#defaultCase;\n\n\t/** \n\t * @param {Site} site\n\t * @param {Expr} controlExpr - input value of the switch\n\t * @param {SwitchCase[]} cases\n\t * @param {null | SwitchDefault} defaultCase\n\t*/\n\tconstructor(site, controlExpr, cases, defaultCase = null) {\n\t\tsuper(site);\n\t\tthis.#controlExpr = controlExpr;\n\t\tthis.#cases = cases;\n\t\tthis.#defaultCase = defaultCase;\n\t}\n\n\tget controlExpr() {\n\t\treturn this.#controlExpr;\n\t}\n\n\tget cases() {\n\t\treturn this.#cases;\n\t}\n\n\tget defaultCase() {\n\t\treturn this.#defaultCase;\n\t}\n\n\t/**\n\t * If there isn't enough coverage then we can simply set the default case to void, so the other branches can be error, print or assert\n\t */\n\tsetDefaultCaseToVoid() {\n\t\tthis.#defaultCase = new SwitchDefault(this.site, new VoidExpr(this.site));\n\t}\n\n\ttoString() {\n\t\treturn `${this.#controlExpr.toString()}.switch{${this.#cases.map(c => c.toString()).join(\", \")}${this.#defaultCase === null ? \"\" : \", \" + this.#defaultCase.toString()}}`;\n\t}\n}\n\n/**\n * Switch expression for Enum, with SwitchCases and SwitchDefault as children\n * @internal\n */\nexport class EnumSwitchExpr extends SwitchExpr {\n\t/**\n\t * @param {Scope} scope \n\t * @returns {null | EvalEntity}\n\t */\n\tevalInternal(scope) {\n\t\tconst controlVal_ = this.controlExpr.eval(scope);\n\t\tif (!controlVal_) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst controlVal = controlVal_.asTyped;\n\n\t\tif (!controlVal) {\n\t\t\tthis.controlExpr.typeError(\"not typed\");\n\t\t\treturn null;\n\t\t}\n\n\t\tconst enumType = controlVal.type.asDataType;\n\n\t\tif (!enumType) {\n\t\t\tthis.controlExpr.typeError(\"not an enum\");\n\t\t\treturn null;\n\t\t}\n\n\t\tconst nEnumMembers = Common.countEnumMembers(enumType);\n\n\t\t// check that we have enough cases to cover the enum members\n\t\tif (this.defaultCase === null && nEnumMembers > this.cases.length) {\n\t\t\t// mutate defaultCase to VoidExpr\n\t\t\tthis.setDefaultCaseToVoid();\n\t\t}\n\n\t\t/** @type {null | Type} */\n\t\tlet branchMultiType = null;\n\n\t\tfor (let c of this.cases) {\n\t\t\tconst branchVal = c.evalEnumMember(scope, enumType);\n\n\t\t\tif (!branchVal) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\n\t\t\tbranchMultiType = IfElseExpr.reduceBranchMultiType(\n\t\t\t\tc.site, \n\t\t\t\tbranchMultiType, \n\t\t\t\tbranchVal\n\t\t\t);\n\t\t}\n\n\t\tif (this.defaultCase !== null) {\n\t\t\tconst defaultVal = this.defaultCase.eval(scope);\n\n\t\t\tif (defaultVal) {\n\t\t\t\tbranchMultiType = IfElseExpr.reduceBranchMultiType(\n\t\t\t\t\tthis.defaultCase.site,\n\t\t\t\t\tbranchMultiType, \n\t\t\t\t\tdefaultVal\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\tif (branchMultiType === null) {\n\t\t\treturn new ErrorEntity();\n\t\t} else {\n\t\t\treturn branchMultiType.toTyped();\n\t\t}\n\t}\n\n\t/**\n\t * @param {ToIRContext} ctx\n\t * @returns {IR}\n\t */\n\ttoIR(ctx) {\n\t\tlet cases = this.cases.slice();\n\n\t\t/** @type {SwitchCase | SwitchDefault} */\n\t\tlet last;\n\t\tif (this.defaultCase !== null) {\n\t\t\tlast = this.defaultCase;\n\t\t} else {\n\t\t\tlast = assertDefined(cases.pop());\n\t\t}\n\n\t\tlet n = cases.length;\n\n\t\tlet res = last.toIR(ctx.tab().tab().tab());\n\n\t\t// TODO: if constrIndex is null then use the case test that is defined as a builtin (needed to be able to treat StakingCredential as an enum)\n\t\t// TODO: once the null fallback has been implemented get rid of constrIndex\n\t\tfor (let i = n - 1; i >= 0; i--) {\n\t\t\tconst c = cases[i];\n\t\t\t\n\t\t\tconst test = IR.new`__core__equalsInteger(i, ${c.constrIndex.toString()})`;\n\n\t\t\tres = IR.new`__core__ifThenElse(\n\t\t\t\t${test},\n\t\t\t\t() -> {\n\t\t\t\t\t${c.toIR(ctx.tab().tab().tab())}\n\t\t\t\t}, () -> {\n\t\t\t\t\t${res}\n\t\t\t\t}\n\t\t\t)()`;\n\t\t}\n\n\t\treturn new IR([\n\t\t\tnew IR(`(e) `), new IR(\"->\", this.site), new IR(` {\\n${ctx.indent}${TAB}(\\n${ctx.indent}${TAB}${TAB}(i) -> {\\n${ctx.indent}${TAB}${TAB}${TAB}`),\n\t\t\tres,\n\t\t\tnew IR(`\\n${ctx.indent}${TAB}${TAB}}(__core__fstPair(__core__unConstrData(e)))\\n${ctx.indent}${TAB})(e)\\n${ctx.indent}}(`),\n\t\t\tthis.controlExpr.toIR(ctx),\n\t\t\tnew IR(\")\"),\n\t\t]);\n\t}\n}\n\n/**\n * Switch expression for Data\n * @internal\n */\nexport class DataSwitchExpr extends SwitchExpr {\n\t/**\n\t * @param {Scope} scope \n\t * @returns {null | EvalEntity}\n\t */\n\tevalInternal(scope) {\n\t\tconst controlVal_ = this.controlExpr.eval(scope);\n\t\tif (!controlVal_) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst controlVal = controlVal_.asTyped;\n\t\tif (!controlVal) {\n\t\t\tthis.controlExpr.typeError(\"not typed\");\n\t\t\treturn null;\n\t\t}\n\n\t\tconst dataType = controlVal.type.asDataType;\n\t\tif (!dataType) {\n\t\t\tthis.controlExpr.typeError(\"not a data type\");\n\t\t\treturn null;\n\t\t}\n\n\t\tif (!RawDataType.isBaseOf(dataType)) {\n\t\t\tthis.controlExpr.typeError(`expected Data type, got ${controlVal.type.toString()}`);\n\t\t\treturn null;\n\t\t}\n\n\t\t// check that we have enough cases to cover the enum members\n\t\tif (this.defaultCase === null && this.cases.length < 5) {\n\t\t\t// mutate defaultCase to VoidExpr\n\t\t\tthis.setDefaultCaseToVoid();\n\t\t}\n\n\t\t/** @type {null | Type} */\n\t\tlet branchMultiType = null;\n\n\t\tfor (let c of this.cases) {\n\t\t\tconst branchVal = c.evalDataMember(scope);\n\n\t\t\tif (!branchVal) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tbranchMultiType = IfElseExpr.reduceBranchMultiType(\n\t\t\t\tc.site, \n\t\t\t\tbranchMultiType, \n\t\t\t\tbranchVal\n\t\t\t);\n\t\t}\n\n\t\tif (this.defaultCase !== null) {\n\t\t\tconst defaultVal = this.defaultCase.eval(scope);\n\n\t\t\tif (defaultVal) {\n\t\t\t\tbranchMultiType = IfElseExpr.reduceBranchMultiType(\n\t\t\t\t\tthis.defaultCase.site, \n\t\t\t\t\tbranchMultiType, \n\t\t\t\t\tdefaultVal\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\tif (branchMultiType === null) {\n\t\t\t// only possible if each branch is an error\n\t\t\treturn new ErrorEntity();\n\t\t} else {\n\t\t\treturn branchMultiType.toTyped();\n\t\t}\n\t}\n\n\t/**\n\t * @param {ToIRContext} ctx\n\t * @returns {IR}\n\t */\n\ttoIR(ctx) {\n\t\t/** @type {[?IR, ?IR, ?IR, ?IR, ?IR]} */\n\t\tlet cases = [null, null, null, null, null]; // constr, map, list, int, byteArray\n\n\t\tfor (let c of this.cases) {\n\t\t\tlet ir = c.toIR(ctx.tab().tab());\n\n\t\t\tswitch (c.memberName.value) {\n\t\t\t\tcase \"ByteArray\":\n\t\t\t\t\tcases[4] = new IR([\n\t\t\t\t\t\tnew IR(\"(\"), new IR(\"e\"), new IR(\") -> {\"), \n\t\t\t\t\t\tir,\n\t\t\t\t\t\tnew IR(\"(\"),\n\t\t\t\t\t\tnew IR(\"__helios__bytearray__from_data\"),\n\t\t\t\t\t\tnew IR(\"(\"), new IR(\"e\"), new IR(\")\"),\n\t\t\t\t\t\tnew IR(\")\"),\n\t\t\t\t\t\tnew IR(\"}\")\n\t\t\t\t\t]);\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"Int\":\n\t\t\t\t\tcases[3] = new IR([\n\t\t\t\t\t\tnew IR(\"(\"), new IR(\"e\"), new IR(\") -> {\"), \n\t\t\t\t\t\tir,\n\t\t\t\t\t\tnew IR(\"(\"),\n\t\t\t\t\t\tnew IR(\"__helios__int__from_data\"),\n\t\t\t\t\t\tnew IR(\"(\"), new IR(\"e\"), new IR(\")\"),\n\t\t\t\t\t\tnew IR(\")\"),\n\t\t\t\t\t\tnew IR(\"}\")\n\t\t\t\t\t]);\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"[]Data\":\n\t\t\t\t\tcases[2] = new IR([\n\t\t\t\t\t\tnew IR(\"(\"), new IR(\"e\"), new IR(\") -> {\"), \n\t\t\t\t\t\tir,\n\t\t\t\t\t\tnew IR(\"(\"),\n\t\t\t\t\t\tnew IR(\"__code__unListData\"),\n\t\t\t\t\t\tnew IR(\"(\"), new IR(\"e\"), new IR(\")\"),\n\t\t\t\t\t\tnew IR(\")\"),\n\t\t\t\t\t\tnew IR(\"}\")\n\t\t\t\t\t]);\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"Map[Data]Data\":\n\t\t\t\t\tcases[1] = new IR([\n\t\t\t\t\t\tnew IR(\"(\"), new IR(\"e\"), new IR(\") -> {\"), \n\t\t\t\t\t\tir,\n\t\t\t\t\t\tnew IR(\"(\"),\n\t\t\t\t\t\tnew IR(\"__code__unMapData\"),\n\t\t\t\t\t\tnew IR(\"(\"), new IR(\"e\"), new IR(\")\"),\n\t\t\t\t\t\tnew IR(\")\"),\n\t\t\t\t\t\tnew IR(\"}\")\n\t\t\t\t\t]);\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"(Int, []Data)\":\n\t\t\t\t\t// conversion from_data is handled by UnconstrDataSwitchCase\n\t\t\t\t\tcases[0] = ir;\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tif (cases[0] !== null) {\n\t\t\t\t\t\tthrow new Error(\"should've been caught before\");\n\t\t\t\t\t}\n\n\t\t\t\t\tcases[0] = ir;\n\t\t\t}\n\t\t}\n\n\t\tif (this.defaultCase !== null) {\n\t\t\tfor (let i = 0; i < 5; i++) {\n\t\t\t\tif (cases[i] === null) {\n\t\t\t\t\tcases[i] = new IR(`${ctx.indent}${TAB}def`);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tlet res = new IR([\n\t\t\tnew IR(`${ctx.indent}__core__chooseData(e, `, this.site),\n\t\t\tnew IR(cases.map(c => assertDefined(c))).join(\", \"),\n\t\t\tnew IR(`${ctx.indent})`)\n\t\t]);\n\n\t\tif (this.defaultCase !== null) {\n\t\t\tres = new IR([\n\t\t\t\tnew IR(`${ctx.indent}(def) -> {\\n`),\n\t\t\t\tres,\n\t\t\t\tnew IR(`\\n${ctx.indent}}(`),\n\t\t\t\tthis.defaultCase.toIR(ctx),\n\t\t\t\tnew IR(`)`)\n\t\t\t]);\n\t\t}\n\n\t\tres = new IR([\n\t\t\tnew IR(`${ctx.indent}(e) -> {\\n`),\n\t\t\tres,\n\t\t\tnew IR(\"(e)\"),\n\t\t\tnew IR(`${ctx.indent}}(`),\n\t\t\tthis.controlExpr.toIR(ctx),\n\t\t\tnew IR(\")\")\n\t\t]);\n\n\t\treturn res;\n\t}\n}\n\n\n////////////////////////////////////\n// Section 25: Helios AST statements\n////////////////////////////////////\n\n/**\n * Base class for all statements\n * Doesn't return a value upon calling eval(scope)\n * @internal\n */\nexport class Statement extends Token {\n\t#name;\n\t#basePath; // set by the parent Module\n\n\t/**\n\t * @param {Site} site \n\t * @param {Word} name \n\t */\n\tconstructor(site, name) {\n\t\tsuper(site);\n\t\tthis.#name = name;\n\t\tthis.#basePath = \"__user\";\n\t}\n\n\t/**\n\t * @type {Word}\n\t */\n\tget name() {\n\t\treturn this.#name;\n\t}\n\n\t/**\n\t * @type {string}\n\t */\n\tget path() {\n\t\treturn `${this.#basePath}__${this.name.toString()}`;\n\t}\n\n\t/**\n\t * @param {ModuleScope} scope \n\t */\n\teval(scope) {\n\t\tthrow new Error(\"not yet implemented\");\n\t}\n\n\t/**\n\t * @param {string} namespace \n\t * @param {(name: string, cs: ConstStatement) => void} callback \n\t */\n\tloopConstStatements(namespace, callback) {\n\t\tthrow new Error(\"not yet implemented\");\n\t}\n\n\t/**\n\t * @param {string} basePath \n\t */\n\tsetBasePath(basePath) {\n\t\tthis.#basePath = basePath;\n\t}\n\n\t/**\n\t * Returns IR of statement.\n\t * No need to specify indent here, because all statements are top-level\n\t * @param {ToIRContext} ctx\n\t * @param {IRDefinitions} map \n\t */\n\ttoIR(ctx, map) {\n\t\tthrow new Error(\"not yet implemented\");\n\t}\n\n\t/**\n\t * @returns {string}\n\t */\n\ttoString() {\n\t\tthrow new Error(\"not yet implemented\");\n\t}\n}\n\n/**\n * Each field in `import {...} from <ModuleName>` is given a separate ImportFromStatement\n * @internal\n */\nexport class ImportFromStatement extends Statement {\n\t#origName;\n\t#moduleName;\n\n\t/**\n\t * @param {Site} site \n\t * @param {Word} name\n\t * @param {Word} origName\n\t * @param {Word} moduleName\n\t */\n\tconstructor(site, name, origName, moduleName) {\n\t\tsuper(site, name);\n\t\tthis.#origName = origName;\n\t\tthis.#moduleName = moduleName;\n\t}\n\n\t/**\n\t * @type {Word}\n\t */\n\tget moduleName() {\n\t\treturn this.#moduleName;\n\t}\n\n\t/**\n\t * @param {ModuleScope} scope\n\t * @returns {null | EvalEntity}\n\t */\n\tevalInternal(scope) {\n\t\tconst importedScope = scope.getScope(this.#moduleName);\n\n\t\tif (!importedScope) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst importedEntity = importedScope.get(this.#origName);\n\n\t\tif (importedEntity instanceof Scope) {\n\t\t\tthis.#origName.typeError(`can't import a module from a module`);\n\t\t\treturn null;\n\t\t} else {\n\t\t\treturn importedEntity;\n\t\t}\n\t}\n\n\t/**\n\t * @param {ModuleScope} scope \n\t */\n\teval(scope) {\n\t\tconst v = this.evalInternal(scope);\n\n\t\tif (v) {\n\t\t\tscope.set(this.name, v);\n\t\t}\n\t}\n\n\t/**\n\t * Do nothing\n\t * @param {string} namespace \n\t * @param {(name: string, cs: ConstStatement) => void} callback \n\t */\n\tloopConstStatements(namespace, callback) {\n\t}\n\n\t/**\n\t * @param {ToIRContext} ctx\n\t * @param {IRDefinitions} map \n\t */\n\ttoIR(ctx, map) {\n\t\t// import statements only have a scoping function and don't do anything to the IR\n\t}\n}\n\n/**\n * `import <ModuleName>`\n * @internal\n */\nexport class ImportModuleStatement extends Statement {\n\t/**\n\t * @type {Map<string, EvalEntity>}\n\t */\n\t#imported;\n\n\t/**\n\t * @param {Site} site \n\t * @param {Word} moduleName\n\t */\n\tconstructor(site, moduleName) {\n\t\tsuper(site, moduleName);\n\t\tthis.#imported = new Map();\n\t}\n\n\t/**\n\t * @type {Word}\n\t */\n\tget moduleName() {\n\t\treturn this.name;\n\t}\n\n\t/**\n\t * @param {ModuleScope} scope\n\t * @returns {null | EvalEntity}\n\t */\n\tevalInternal(scope) {\n\t\tconst importedScope = scope.getScope(this.name);\n\n\t\tif (!importedScope) {\n\t\t\treturn null;\n\t\t}\n\t\t\n\t\t/**\n\t\t * @type {NamespaceMembers}\n\t\t */\n\t\tconst namespaceMembers = {};\n\n\t\tfor (let [name, entity] of importedScope.values) {\n\t\t\tif (!(entity instanceof Scope)) {\n\t\t\t\tnamespaceMembers[name.value] = entity;\n\t\t\t}\n\t\t}\n\n\t\treturn new ModuleNamespace(namespaceMembers);\n\t}\n\n\t/**\n\t * @param {ModuleScope} scope \n\t */\n\teval(scope) {\n\t\tlet v = this.evalInternal(scope);\n\n\t\tif (v) {\n\t\t\tscope.set(this.name, v);\n\t\t}\n\t}\n\n\t/**\n\t * Do nothing\n\t * @param {string} namespace \n\t * @param {(name: string, cs: ConstStatement) => void} callback \n\t */\n\tloopConstStatements(namespace, callback) {\n\t}\n\n\t/**\n\t * @param {ToIRContext} ctx\n\t * @param {IRDefinitions} map \n\t */\n\ttoIR(ctx, map) {\n\t\t// import statements only have a scoping function and don't do anything to the IR\n\t}\n}\n\n/**\n * Const value statement\n * @internal\n */\nexport class ConstStatement extends Statement {\n\t/**\n\t * @type {Expr}\n\t */\n\t#typeExpr;\n\n\t/**\n\t * @type {null | Expr}\n\t */\n\t#valueExpr;\n\n\t/**\n\t * @param {Site} site \n\t * @param {Word} name \n\t * @param {Expr} typeExpr - can be null in case of type inference\n\t * @param {null | Expr} valueExpr \n\t */\n\tconstructor(site, name, typeExpr, valueExpr) {\n\t\tsuper(site, name);\n\t\tthis.#typeExpr = typeExpr;\n\t\tthis.#valueExpr = valueExpr;\n\t}\n\n\t/**\n\t * @type {DataType}\n\t */\n\tget type() {\n\t\treturn assertDefined(this.#typeExpr.cache?.asDataType, this.#typeExpr.cache?.toString() ?? this.#typeExpr.toString());\n\t}\n\n\t/**\n\t * Include __const prefix in path so that mutual recursion injection isn't applied\n\t * @type {string}\n\t */\n\tget path() {\n\t\treturn `__const${super.path}`;\n\t}\n\n\t/**\n\t * @returns {boolean}\n\t */\n\tisSet() {\n\t\treturn this.#valueExpr !== null;\n\t}\n\n\t/**\n\t * Use this to change a value of something that is already typechecked.\n\t * @param {UplcData} data\n\t */\n\tchangeValueSafe(data) {\n\t\tconst type = this.type;\n\t\tconst site = this.#valueExpr ? this.#valueExpr.site : this.site;\n\n\t\tthis.#valueExpr = new LiteralDataExpr(site, type, data);\n\t}\n\n\t/**\n\t * @returns {string}\n\t */\n\ttoString() {\n\t\treturn `const ${this.name.toString()}${this.#typeExpr.toString()}${this.#valueExpr ? ` = ${this.#valueExpr.toString()}` : \"\"};`;\n\t}\n\n\t/**\n\t * @param {Scope} scope \n\t * @returns {null | DataType}\n\t */\n\tevalType(scope) {\n\t\treturn this.#typeExpr.evalAsDataType(scope);\n\t}\n\n\t/**\n\t * @param {Scope} scope \n\t * @returns {null | EvalEntity}\n\t */\n\tevalInternal(scope) {\n\t\tconst type = this.#typeExpr.evalAsDataType(scope);\n\n\t\tif (!type) {\n\t\t\treturn null;\n\t\t}\n\n\t\tif (this.#valueExpr) {\n\t\t\tconst value = this.#valueExpr.evalAsTyped(scope);\n\n\t\t\tif (!value) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tif (!type.isBaseOf(value.type)) {\n\t\t\t\tthis.#valueExpr.typeError(\"wrong type\");\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}\n\n\t\treturn new DataEntity(type);\n\t}\n\n\t/**\n\t * Evaluates rhs and adds to scope\n\t * @param {TopScope} scope \n\t */\n\teval(scope) {\n\t\tconst data = this.evalInternal(scope);\n\n\t\tif (!data) {\n\t\t\tscope.set(this.name, new NamedEntity(this.name.value, this.path, new DataEntity(new AllType())));\n\t\t} else {\n\t\t\tscope.set(this.name, new NamedEntity(this.name.value, this.path, data));\n\t\t}\n\t}\n\n\t/**\n\t * @param {string} namespace \n\t * @param {(name: string, cs: ConstStatement) => void} callback \n\t */\n\tloopConstStatements(namespace, callback) {\n\t\tcallback(`${namespace}${this.name.value}`, this);\n\t}\n\n\t/**\n\t * @param {ToIRContext} ctx\n\t * @returns {IR}\n\t */\n\ttoIRInternal(ctx) {\n\t\tlet ir = assertDefined(this.#valueExpr).toIR(ctx);\n\n\t\tif (this.#valueExpr instanceof LiteralDataExpr) {\n\t\t\t/*ir = new IR([\n\t\t\t\tnew IR(`${this.#valueExpr.type.path}__from_data`),\n\t\t\t\tnew IR(\"(\", this.site),\n\t\t\t\tir,\n\t\t\t\tnew IR(\")\")\n\t\t\t]);*/\n\n\t\t\tir = IR.new`${this.#valueExpr.type.path}__from_data${null}(${this.site}${ir})`;\n\t\t}\n\n\t\treturn ir;\n\t}\n\n\t/**\n\t * @param {ToIRContext} ctx\n\t * @param {IRDefinitions} map \n\t */\n\ttoIR(ctx, map) {\n\t\tif (this.#valueExpr) {\n\t\t\tmap.set(this.path, this.toIRInternal(ctx));\n\t\t}\n\t}\n}\n\n\n/**\n * @internal\n */\nexport class TypeParameter {\n\t#name;\n\t#typeClassExpr;\n\n\t/**\n\t * @param {Word} name \n\t * @param {null | Expr} typeClassExpr \n\t */\n\tconstructor(name, typeClassExpr) {\n\t\tthis.#name = name;\n\t\tthis.#typeClassExpr = typeClassExpr;\n\t}\n\n\t/**\n\t * @type {string}\n\t */\n\tget name() {\n\t\treturn this.#name.value;\n\t}\n\n\t/**\n\t * @type {TypeClass}\n\t */\n\tget typeClass() {\n\t\tif (this.#typeClassExpr) {\n\t\t\treturn assertDefined(this.#typeClassExpr.cache?.asTypeClass);\n\t\t} else {\n\t\t\treturn new DefaultTypeClass();\n\t\t}\n\t}\n\n\t/**\n\t * @param {Scope} scope \n\t * @param {string} path\n\t * @returns {null | Parameter}\n\t */\n\teval(scope, path) {\n\t\t/**\n\t\t * @type {TypeClass}\n\t\t */\n\t\tlet typeClass = new DefaultTypeClass();\n\n\t\tif (this.#typeClassExpr) {\n\t\t\tconst typeClass_ = this.#typeClassExpr.eval(scope);\n\t\t\tif (!typeClass_) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tif (!typeClass_.asTypeClass) {\n\t\t\t\tthis.#typeClassExpr?.typeError(\"not a typeclass\");\n\t\t\t\treturn null;\n\t\t\t} else {\n\t\t\t\ttypeClass = typeClass_.asTypeClass;\n\t\t\t}\n\t\t}\n\n\t\tconst parameter = new Parameter(this.name, path, typeClass);\n\n\t\tscope.set(this.#name, typeClass.toType(this.#name.value, path, parameter));\n\n\t\treturn parameter;\n\t}\n\n\t/**\n\t * @returns {string}\n\t */\n\ttoString() {\n\t\tif (this.#typeClassExpr) {\n\t\t\treturn `${this.#name}: ${this.#typeClassExpr.toString()}`;\n\t\t} else {\n\t\t\treturn `${this.#name}`;\n\t\t}\n\t}\n}\n\n/**\n * @internal\n */\nexport class TypeParameters {\n\t#parameterExprs;\n\t#prefix;\n\n\t/**\n\t * @type {null | Parameter[]}\n\t */\n\t#parameters;\n\n\t/**\n\t * @param {TypeParameter[]} parameterExprs \n\t * @param {boolean} isForFunc\n\t */\n\tconstructor(parameterExprs, isForFunc) {\n\t\tthis.#parameterExprs = parameterExprs;\n\t\tthis.#prefix = isForFunc ? FTPP : TTPP;\n\t\tthis.#parameters = null;\n\t}\n\n\t/**\n\t * @returns {boolean}\n\t */\n\thasParameters() {\n\t\treturn this.#parameterExprs.length > 0;\n\t}\n\n\t/** \n\t * @type {string[]}\n\t */\n\tget parameterNames() {\n\t\treturn this.#parameterExprs.map(pe => pe.name);\n\t}\n\n\t/**\n\t * @returns {Parameter[]}\n\t */\n\tgetParameters() {\n\t\treturn assertDefined(this.#parameters, \"parameters not yet evaluated\");\n\t}\n\n\t/**\n\t * Always include the braces, even if there aren't any type parameters, so that the mutual recursion injection function has an easier time figuring out what can depend on what\n\t * @param {string} base\n\t * @returns {string}\n\t */\n\tgenTypePath(base) {\n\t\treturn `${base}[${this.#parameterExprs.map((_, i) => `${this.#prefix}${i}`).join(\"@\")}]`;\n\t}\n\n\t/**\n\t * Always include the braces, even if there aren't any type parameters, so that the mutual recursion injection function has an easier time figuring out what can depend on what\n\t * @param {string} base\n\t * @returns {string}\n\t */\n\tgenFuncPath(base) {\n\t\tif (this.hasParameters()) {\n\t\t\treturn this.genTypePath(base);\n\t\t} else {\n\t\t\treturn base;\n\t\t}\n\t}\n\n\t/**\n\t * @returns {string}\n\t */\n\ttoString() {\n\t\tif (!this.hasParameters()) {\n\t\t\treturn \"\";\n\t\t} else {\n\t\t\treturn `[${this.#parameterExprs.map(p => p.toString()).join(\", \")}]`;\n\t\t}\n\t}\n\n\t/**\n\t * @param {Scope} scope \n\t * @returns {Scope}\n\t */\n\tevalParams(scope) {\n\t\tconst subScope = new Scope(scope);\n\n\t\tthis.#parameters = [];\n\n\t\tthis.#parameterExprs.forEach((pe, i) => {\n\t\t\tconst p = pe.eval(subScope, `${this.#prefix}${i}`);\n\n\t\t\tif (p) {\n\t\t\t\tthis.#parameters?.push(p);\n\t\t\t}\n\t\t});\n\n\t\treturn subScope;\n\t}\n\n\t/**\n\t * @param {Scope} scope \n\t * @param {(scope: Scope) => (null | FuncType)} evalConcrete\n\t * @returns {null | ParametricFunc | FuncType}\n\t */\n\tevalParametricFuncType(scope, evalConcrete, impl = null) {\n\t\tconst typeScope = this.evalParams(scope);\n\n\t\tconst type = evalConcrete(typeScope);\n\n\t\tif (!type) {\n\t\t\treturn null;\n\t\t}\n\n\t\ttypeScope.assertAllUsed();\n\n\t\treturn this.hasParameters() ? new ParametricFunc(this.getParameters(), type) : type;\n\t}\n\n\t/**\n\t * @param {Scope} scope \n\t * @param {(scope: Scope) => (null | FuncType)} evalConcrete \n\t * @returns {null | EvalEntity}\n\t */\n\tevalParametricFunc(scope, evalConcrete) {\n\t\tconst type = this.evalParametricFuncType(scope, evalConcrete);\n\n\t\tif (!type) {\n\t\t\treturn null;\n\t\t}\n\n\t\tif (type.asType) {\n\t\t\treturn type.asType.toTyped();\n\t\t} else {\n\t\t\treturn type;\n\t\t}\n\t}\n\n\t/**\n\t * @param {Scope} scope\n\t * @param {Site} site\n\t * @param {(scope: Scope) => DataType} evalConcrete\n\t * @returns {[DataType | ParametricType, Scope]}\n\t */\n\tcreateParametricType(scope, site, evalConcrete) {\n\t\tconst typeScope = this.evalParams(scope);\n\n\t\tconst type = evalConcrete(new Scope(typeScope));\n\n\t\tif (!this.hasParameters()) {\n\t\t\treturn [type, typeScope];\n\t\t} else {\n\t\t\tconst paramType = new ParametricType({\n\t\t\t\tname: type.name,\n\t\t\t\tparameters: this.getParameters(),\n\t\t\t\tapply: (paramTypes) => {\n\t\t\t\t\t/**\n\t\t\t\t\t * @type {InferenceMap}\n\t\t\t\t\t */\n\t\t\t\t\tconst map = new Map();\n\n\t\t\t\t\tparamTypes.forEach((pt, i) => {\n\t\t\t\t\t\tconst p = this.getParameters()[i];\n\n\t\t\t\t\t\tmap.set(p, pt);\n\t\t\t\t\t});\n\n\t\t\t\t\tconst appliedType = assertDefined(type.infer(site, map, null).asDataType);\n\n\t\t\t\t\tconst appliedPath = IRParametricName.parse(type.path, true).toImplementation(paramTypes.map(pt => assertDefined(pt.asDataType).path)).toString();\n\n\t\t\t\t\tif (appliedType instanceof GenericType) {\n\t\t\t\t\t\treturn appliedType.changeNameAndPath(\n\t\t\t\t\t\t\t`${type.name}[${paramTypes.map(pt => pt.toString()).join(\",\")}]`,\n\t\t\t\t\t\t\tappliedPath\n\t\t\t\t\t\t);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthrow new Error(\"unexpected\");\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn [paramType, typeScope];\n\t\t}\n\t}\n}\n\n/**\n * Single field in struct or enum member\n * @internal\n */\nexport class DataField extends NameTypePair {\n\t#tag;\n\n\t/**\n\t * @param {Word} name \n\t * @param {Expr} typeExpr \n\t * @param {null | StringLiteral} tag\n\t */\n\tconstructor(name, typeExpr, tag = null) {\n\t\tsuper(name, typeExpr);\n\t\tthis.#tag = tag;\n\t}\n\n\t/**\n\t * Throws an error if called before evalType()\n\t * @type {DataType}\n\t */\n\tget type() {\n\t\treturn assertDefined(super.type.asDataType);\n\t}\n\n\t/**\n\t * @returns {boolean}\n\t */\n\thasTag() {\n\t\treturn this.#tag !== null;\n\t}\n\n\t/**\n\t * @type {string}\n\t */\n\tget tag() {\n\t\treturn this.#tag ? this.#tag.value : this.name.value;\n\t}\n\n\t/**\n\t * Evaluates the type, used by FuncLiteralExpr and DataDefinition\n\t * @param {Scope} scope \n\t * @returns {null | DataType}\n\t */\n\teval(scope) {\n\t\tif (this.typeExpr === null) {\n\t\t\tthrow new Error(\"typeExpr not set in \" + this.site.src.raw.split(\"\\n\")[0]);\n\t\t} else {\n\t\t\tconst t = this.typeExpr.eval(scope);\n\n\t\t\tif (!t) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tif (t.asDataType) {\n\t\t\t\tconst dt = t.asDataType;\n\n\t\t\t\tif (isDataType(dt)) {\n\t\t\t\t\treturn dt;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.typeExpr.typeError(`'${t.toString()}' isn't a valid data field type`);\n\t\t\treturn null;\n\t\t}\n\t}\n}\n\n/**\n * Base class for struct and enum member\n * @internal\n */\nexport class DataDefinition {\n\t#site;\n\t#name;\n\t#fields;\n\n\t/**\n\t * @param {Site} site \n\t * @param {Word} name \n\t * @param {DataField[]} fields \n\t */\n\tconstructor(site, name, fields) {\n\t\tthis.#site = site;\n\t\tthis.#name = name;\n\t\tthis.#fields = fields;\n\t}\n\n\t/**\n\t * @type {Site}\n\t */\n\tget site() {\n\t\treturn this.#site;\n\t}\n\n\t/**\n\t * @type {Word}\n\t */\n\tget name() {\n\t\treturn this.#name;\n\t}\n\n\t/**\n\t * @type {DataField[]}\n\t */\n\tget fields() {\n\t\treturn this.#fields.slice();\n\t}\n\n\thasTags() {\n\t\treturn this.#fields.some(f => f.hasTag());\n\t}\n\n\t/**\n\t * Returns index of a field.\n\t * Returns -1 if not found.\n\t * @param {Word} name \n\t * @returns {number}\n\t */\n\tfindField(name) {\n\t\tlet found = -1;\n\t\tlet i = 0;\n\t\tfor (let f of this.#fields) {\n\t\t\tif (f.name.toString() == name.toString()) {\n\t\t\t\tfound = i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\ti++;\n\t\t}\n\n\t\treturn found;\n\t}\n\n\t/**\n\t * @type {string[]}\n\t */\n\tget fieldNames() {\n\t\treturn this.#fields.map(f => f.name.value);\n\t}\n\n\t/**\n\t * @param {Word} name \n\t * @returns {boolean}\n\t */\n\thasField(name) {\n\t\treturn this.findField(name) != -1;\n\t}\n\n\t/**\n\t * @param {Word} name \n\t * @returns {boolean}\n\t */\n\thasMember(name) {\n\t\treturn this.hasField(name) || name.value == \"copy\";\n\t}\n\n\t/**\n\t * @returns {string}\n\t */\n\ttoStringFields() {\n\t\treturn `{${this.#fields.map(f => f.toString()).join(\", \")}}`;\n\t}\n\n\t/**\n\t * @returns {string}\n\t */\n\ttoString() {\n\t\treturn `${this.name.toString()} ${this.toStringFields()}`;\n\t}\n\n\t/**\n\t * @param {Scope} scope \n\t * @returns {InstanceMembers}\n\t */\n\tevalFieldTypes(scope) {\n\t\t/**\n\t\t * @type {InstanceMembers}\n\t\t */\n\t\tconst fields = {};\n\n\t\tfor (let f of this.#fields) {\n\t\t\tconst f_ = f.eval(scope);\n\n\t\t\tif (f_) {\n\t\t\t\tfields[f.name.value] = f_;\n\t\t\t}\n\t\t}\n\n\t\treturn fields;\n\t}\n\n\t/**\n\t * @param {Type} self\n\t * @returns {Type}\n\t */\n\tgenCopyType(self) {\n\t\treturn new FuncType(this.#fields.map(f => new ArgType(f.name, f.type, true)), self);\n\t}\n\n\t/**\n\t * @type {number}\n\t */\n\tget nFields() {\n\t\treturn this.#fields.length;\n\t}\n\n\t/**\n\t * @param {number} i \n\t * @returns {DataType}\n\t */\n\tgetFieldType(i) {\n\t\treturn this.#fields[i].type;\n\t}\n\n\t/**\n\t * @param {string} name \n\t * @returns {number}\n\t */\n\tgetFieldIndex(name) {\n\t\tconst i = this.findField(new Word(Site.dummy(), name));\n\n\t\tif (i == -1) {\n\t\t\tthrow new Error(`field ${name} not find in ${this.toString()}`);\n\t\t} else {\n\t\t\treturn i;\n\t\t}\n\t}\n\n\t/**\n\t * @param {number} i\n\t * @returns {string}\n\t */\n\tgetFieldName(i) {\n\t\treturn this.#fields[i].name.toString();\n\t}\n\n\t/**\n\t * Gets insance member value.\n\t * @param {Type} self\n\t * @returns {InstanceMembers}\n\t */\n\tgenInstanceMembers(self) {\n\t\tconst members = {\n\t\t\t...genCommonInstanceMembers(self),\n\t\t\tcopy: new FuncType(this.#fields.map(f => new ArgType(f.name, f.type, true)), self),\n\t\t};\n\n\t\tfor (let f of this.fields) {\n\t\t\tmembers[f.name.value] = f.type;\n\t\t}\n\n\t\treturn members;\n\t}\n\n\t/**\n\t * @param {Type} self\n\t * @returns {TypeMembers}\n\t */\n\tgenTypeMembers(self) {\n\t\treturn {\n\t\t\t...genCommonTypeMembers(self)\n\t\t};\n\t}\n\n\t/**\n\t * @returns {[string, string, NamedTypeSchema[]]}\n\t */\n\tgenTypeDetails() {\n\t\tconst inputTypeParts = [];\n\t\tconst outputTypeParts = [];\n\t\tconst internalTypeParts = [];\n\n\t\tthis.fieldNames.forEach((fn, i) => {\n\t\t\tconst ftd = assertDefined(this.getFieldType(i).typeDetails);\n\t\t\tinputTypeParts.push(`${fn}: ${ftd.inputType}`);\n\t\t\toutputTypeParts.push(`${fn}: ${ftd.outputType}`);\n\t\t\tinternalTypeParts.push({\n\t\t\t\t...ftd.internalType,\n\t\t\t\tname: fn\n\t\t\t});\n\t\t})\n\n\t\treturn [\n\t\t\t`{${inputTypeParts.join(\", \")}}`,\n\t\t\t`{${outputTypeParts.join(\", \")}}`,\n\t\t\tinternalTypeParts\t\n\t\t];\n\t}\n\n\t/**\n\t * @param {any} obj\n\t * @param {JsToUplcHelpers} helpers\n\t * @return {Promise<UplcData[]>}\n\t */\n\tasync jsFieldsToUplc(obj, helpers) {\n\t\t/**\n\t\t * @type {Promise<UplcData>[]}\n\t\t */\n\t\tconst fields = [];\n\n\t\tif (Object.keys(obj).length == this.nFields && Object.keys(obj).every(k => this.hasField(new Word(Site.dummy(), k)))) {\n\t\t\tthis.fieldNames.forEach((fieldName, i) => {\n\t\t\t\tconst arg = assertDefined(obj[fieldName]);\n\n\t\t\t\tconst fieldType = this.getFieldType(i);\n\n\t\t\t\tif (!fieldType.typeDetails) {\n\t\t\t\t\tthrow new Error(`typeDetails for ${fieldType.name} not yet implemented`);\n\t\t\t\t}\n\n\t\t\t\tfields.push(fieldType.jsToUplc(arg, helpers));\n\t\t\t});\n\t\t} else {\n\t\t\tthrow new Error(`expected ${this.nFields} args, got ${Object.keys(obj).length}`);\n\t\t}\n\n\t\treturn Promise.all(fields);\n\t}\n\n\t/**\n\t * Uses field names as keys, not tags\n\t * @param {any} obj\n\t * @param {JsToUplcHelpers} helpers\n\t * @return {Promise<[UplcData, UplcData][]>}\n\t */\n\tasync jsMapToUplc(obj, helpers) {\n\t\t/**\n\t\t * @type {[UplcData, UplcData][]}\n\t\t */\n\t\tconst fields = [];\n\n\t\tif (Object.keys(obj).length == this.nFields && Object.keys(obj).every(k => this.hasField(new Word(Site.dummy(), k)))) {\n\t\t\tfor (let i = 0; i < this.nFields; i++) {\n\t\t\t\tconst fieldName = this.fieldNames[i];\n\n\t\t\t\tconst arg = assertDefined(obj[fieldName]);\n\n\t\t\t\tconst fieldType = this.getFieldType(i);\n\n\t\t\t\tif (!fieldType.typeDetails) {\n\t\t\t\t\tthrow new Error(`typeDetails for ${fieldType.name} not yet implemented`);\n\t\t\t\t}\n\n\t\t\t\tfields.push([\n\t\t\t\t\tnew ByteArrayData(textToBytes(this.#fields[i].tag)),\n\t\t\t\t\tawait fieldType.jsToUplc(arg, helpers)\n\t\t\t\t]);\n\t\t\t};\n\t\t} else {\n\t\t\tthrow new Error(`expected ${this.nFields} args, got ${Object.keys(obj).length}`);\n\t\t}\n\n\t\treturn fields;\n\t}\n\n\t/**\n\t * @param {UplcData[]} fields \n\t * @param {UplcToJsHelpers} helpers\n\t * @returns {Promise<any>}\n\t */\n\tasync uplcFieldsToJs(fields, helpers) {\n\t\tconst obj = {};\n\n\t\tfor (let i = 0; i < fields.length; i++) {\n\t\t\tconst f = fields[i];\n\n\t\t\tconst fn = this.getFieldName(i);\n\n\t\t\tobj[fn] = await this.getFieldType(i).uplcToJs(f, helpers);\n\t\t};\n\n\t\treturn obj;\n\t}\n\n\t/**\n\t * For Cip68-tagged structs\n\t * @param {[UplcData, UplcData][]} fields \n\t * @param {UplcToJsHelpers} helpers\n\t * @returns {Promise<any>}\n\t */\n\tasync uplcMapToJs(fields, helpers) {\n\t\tconst obj = {};\n\n\t\tfor (let i = 0; i < this.#fields.length; i++) {\n\t\t\tconst f = this.#fields[i];\n\n\t\t\tconst fn = this.getFieldName(i);\n\n\t\t\tconst j = fields.findIndex(([key, value]) => {\n\t\t\t\treturn ByteArrayData.comp(key.bytes, textToBytes(f.tag))\n\t\t\t})\n\n\t\t\tif (j == -1) {\n\t\t\t\tthrow new Error(`couldn't find field ${f.tag}`)\n\t\t\t}\n\n\t\t\tobj[fn] = await this.getFieldType(i).uplcToJs(fields[j][1], helpers);\n\t\t};\n\n\t\treturn obj;\n\t}\n\n\t/**\n\t * @param {ToIRContext} ctx\n\t * @param {string} path\n\t * @param {IRDefinitions} map \n\t * @param {number} constrIndex\n\t */\n\ttoIR_new(ctx, path, map, constrIndex) {\n\t\tconst isConstr = constrIndex != -1;\n\n\t\t/**\n\t\t * @type {IR}\n\t\t */\n\t\tlet ir;\n\n\t\tif (this.hasTags()) {\n\t\t\tir = IR.new`__core__mkNilPairData(())`;\n\n\t\t\tfor (let i = this.nFields - 1; i >= 0; i--) {\n\t\t\t\tconst f = this.#fields[i];\n\n\t\t\t\tir = IR.new`__core__mkCons(\n\t\t\t\t\t__core__mkPairData(\n\t\t\t\t\t\t__core__bData(#${bytesToHex(textToBytes(f.tag))}),\n\t\t\t\t\t\t${f.type.path}____to_data(${f.name.value})\n\t\t\t\t\t),\n\t\t\t\t\t${ir}\n\t\t\t\t)`;\n\t\t\t}\n\n\t\t\t// TODO: according to https://cips.cardano.org/cips/cip68/#metadata an additional 'extra' (which can be unit)  should be added. Is that really necessary?\n\t\t\tir = IR.new`__core__constrData(\n\t\t\t\t0,\n\t\t\t\t__core__mkCons(\n\t\t\t\t\t__core__mapData(${ir}),\n\t\t\t\t\t__core__mkCons(\n\t\t\t\t\t\t__core__iData(1),\n\t\t\t\t\t\t__core__mkNilData(())\n\t\t\t\t\t)\n\t\t\t\t)\n\t\t\t)`;\n\n\t\t\tir = IR.new`(${new IR(this.#fields.map(f => new IR(f.name.value))).join(\", \")}) -> {${ir}}`;\n\t\t} else if (this.nFields == 1) {\n\t\t\tif (isConstr) {\n\t\t\t\tir = IR.new`(self) -> {\n\t\t\t\t\t__core__constrData(${constrIndex}, __helios__common__list_1(${this.getFieldType(0).path}____to_data(self)))\n\t\t\t\t}${this.site}`;\n\t\t\t} else {\n\t\t\t\tir = IR.new`__helios__common__identity`;\n\t\t}\n\t\t} else {\n\t\t\tir = IR.new`__core__mkNilData(())`;\n\n\t\t\tfor (let i = this.nFields - 1; i >= 0; i--) {\n\t\t\t\tconst f = this.#fields[i];\n\n\t\t\t\tir = IR.new`__core__mkCons(${f.type.path}____to_data(${f.name.value}), ${ir})`;\n\t\t\t}\n\n\t\t\tif (isConstr) {\n\t\t\t\tir =  IR.new`__core__constrData(${constrIndex}, ${ir})`;\n\t\t\t}\n\n\t\t\tir = IR.new`(${new IR(this.#fields.map(f => new IR(f.name.value))).join(\", \")}) -> {${ir}}`;\n\t\t}\n\n\t\tconst key = `${path}____new`;\n\n\t\tmap.set(key, ir);\n\t}\n\n\t/**\n\t * @internal\n\t * @param {ToIRContext} ctx\n\t * @param {string} path\n\t * @param {IRDefinitions} map \n\t * @param {string[]} getterNames\n\t * @param {number} constrIndex\n\t */\n\ttoIR_copy(ctx, path, map, getterNames, constrIndex = -1) {\n\t\tconst key = `${path}__copy`;\n\n\t\tlet ir = StructLiteralExpr.toIRInternal(ctx, this.site, path, this.#fields.map(df => new IR(df.name.value)));\n\n\t\t// wrap with defaults\n\n\t\tfor (let i = getterNames.length - 1; i >= 0; i--) {\n\t\t\tconst fieldName = this.#fields[i].name.toString();\n\n\t\t\tir = FuncArg.wrapWithDefaultInternal(ir, fieldName, IR.new`${getterNames[i]}(self)`);\n\t\t}\n\n\t\tconst args = new IR(this.#fields.map(f => new IR([\n\t\t\tnew IR(`__useopt__${f.name.toString()}`),\n\t\t\tnew IR(\", \"),\n\t\t\tnew IR(`${f.name.toString()}`)\n\t\t]))).join(\", \")\n\n\t\tir = IR.new`(self) -> {\n\t\t\t(${args}) -> {\n\t\t\t\t${ir}\n\t\t\t}\n\t\t}`;\n\n\t\tmap.set(key, ir);\n\t}\n\n\t/**\n\t * @internal\n\t * @param {string} baseName\n\t * @param {boolean} isEnumMember\n\t * @returns {IR}\n\t */\n\ttoIR_show(baseName, isEnumMember = false) {\n\t\tif (this.hasTags()) {\n\t\t\tassert(!isEnumMember);\n\t\t\tlet ir = IR.new`\"\"`;\n\n\t\t\tfor (let i = 0; i < this.nFields; i++) {\n\t\t\t\tconst f = this.#fields[i];\n\t\t\t\tconst p = f.type.path;\n\n\t\t\t\tir = IR.new`__core__appendString(\n\t\t\t\t\t${ir},\n\t\t\t\t\t__core__appendString(\n\t\t\t\t\t\t${i > 0 ? `\", ${f.name}: \"`: `\"${f.name}: \"`},\n\t\t\t\t\t\t(opt) -> {\n\t\t\t\t\t\t\topt(\n\t\t\t\t\t\t\t\t(valid, value) -> {\n\t\t\t\t\t\t\t\t\t__core__ifThenElse(\n\t\t\t\t\t\t\t\t\t\tvalid,\n\t\t\t\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t\t\t\t(opt) -> {\n\t\t\t\t\t\t\t\t\t\t\t\topt(\n\t\t\t\t\t\t\t\t\t\t\t\t\t(valid, value) -> {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t__core__ifThenElse(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalid,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t${p}__show(value)()\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"<n/a>\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t)()\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t}(${p}__from_data_safe(value))\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t\t\t\t\"<n/a>\"\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t)()\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t}(__helios__common__cip68_field_safe(self, __core__bData(#${bytesToHex(textToBytes(f.tag))})))\n\t\t\t\t\t)\n\t\t\t\t)`;\n\t\t\t}\n\n\t\t\treturn IR.new`(data) -> {\n\t\t\t\t__core__chooseData(\n\t\t\t\t\tdata,\n\t\t\t\t\t() -> {\n\t\t\t\t\t\t(fields) -> {\n\t\t\t\t\t\t\t__core__chooseList(\n\t\t\t\t\t\t\t\tfields,\n\t\t\t\t\t\t\t\t() -> {\"${baseName}{<n/a>}\"},\n\t\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t\t(data) -> {\n\t\t\t\t\t\t\t\t\t\t__core__chooseData(\n\t\t\t\t\t\t\t\t\t\t\tdata,\n\t\t\t\t\t\t\t\t\t\t\t() -> {\"${baseName}{<n/a>}\"},\n\t\t\t\t\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t\t\t\t\t(self) -> {\n\t\t\t\t\t\t\t\t\t\t\t\t\t__core__appendString(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"${baseName}{\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t__core__appendString(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t${ir},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"}\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t\t}(__core__unMapData(data))\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t() -> {\"${baseName}{<n/a>}\"},\n\t\t\t\t\t\t\t\t\t\t\t() -> {\"${baseName}{<n/a>}\"},\n\t\t\t\t\t\t\t\t\t\t\t() -> {\"${baseName}{<n/a>}\"}\n\t\t\t\t\t\t\t\t\t\t)()\n\t\t\t\t\t\t\t\t\t}(__core__headList__safe(fields))\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t)()\n\t\t\t\t\t\t}(__core__sndPair(__core__unConstrData__safe(data)))\n\t\t\t\t\t},\n\t\t\t\t\t() -> {\"${baseName}{<n/a>}\"},\n\t\t\t\t\t() -> {\"${baseName}{<n/a>}\"},\n\t\t\t\t\t() -> {\"${baseName}{<n/a>}\"},\n\t\t\t\t\t() -> {\"${baseName}{<n/a>}\"}\n\t\t\t\t)\n\t\t\t}`;\n\t\t} else if (this.nFields == 1 && !isEnumMember) {\n\t\t\treturn IR.new`${this.#fields[0].type.path}__show`;\n\t\t} else {\n\t\t\tlet ir = IR.new`(fields) -> {\"\"}`;\n\n\t\t\tfor (let i = this.nFields - 1; i >= 0; i--) {\n\t\t\t\tconst f = this.#fields[i];\n\t\t\t\tconst p = f.type.path;\n\n\t\t\t\tir = IR.new`(fields) -> {\n\t\t\t\t\t__core__chooseList(\n\t\t\t\t\t\tfields,\n\t\t\t\t\t\t() -> {\"\"},\n\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t__core__appendString(\n\t\t\t\t\t\t\t\t${i > 0 ? `\", ${f.name}: \"` : `\"${f.name}: \"`},\n\t\t\t\t\t\t\t\t__core__appendString(\n\t\t\t\t\t\t\t\t\t(opt) -> {\n\t\t\t\t\t\t\t\t\t\topt(\n\t\t\t\t\t\t\t\t\t\t\t(valid, value) -> {\n\t\t\t\t\t\t\t\t\t\t\t\t__core__ifThenElse(\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalid,\n\t\t\t\t\t\t\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t${p}__show(value)()\n\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"<n/a>\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t)()\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t}(${p}__from_data_safe(__core__headList__safe(fields))),\n\t\t\t\t\t\t\t\t\t${ir}(__core__tailList__safe(fields))\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t}\n\t\t\t\t\t)()\n\t\t\t\t}`;\n\t\t\t}\n\n\t\t\treturn IR.new`(self) -> {\n\t\t\t\t() -> {\n\t\t\t\t\t__core__appendString(\n\t\t\t\t\t\t\"${baseName}{\",\n\t\t\t\t\t\t__core__appendString(\n\t\t\t\t\t\t\t${ir}(self),\n\t\t\t\t\t\t\t\"}\"\n\t\t\t\t\t\t)\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t}`;\n\t\t}\n\t}\n\n\t/**\n\t * @internal\n\t * @returns {IR}\n\t */\n\ttoIR_test_data() {\n\t\tif (this.hasTags()) {\n\t\t\tconst fields = this.#fields;\n\n\t\t\tlet ir = IR.new``;\n\n\t\t\tfields.forEach((f, i) => {\n\t\t\t\tif (i == 0) {\n\t\t\t\t\tir = IR.new`__helios__common__test_cip68_field(\n\t\t\t\t\t\tdata,\n\t\t\t\t\t\t__core__bData(#${bytesToHex(textToBytes(f.tag))}),\n\t\t\t\t\t\t${f.type.path}__test_data\t\n\t\t\t\t\t)`;\n\t\t\t\t} else {\n\t\t\t\t\tir = IR.new`__core__ifThenElse(\n\t\t\t\t\t\t__helios__common__test_cip68_field(\n\t\t\t\t\t\t\tdata,\n\t\t\t\t\t\t\t__core__bData(#${bytesToHex(textToBytes(f.tag))}),\n\t\t\t\t\t\t\t${f.type.path}__test_data\t\n\t\t\t\t\t\t),\n\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t${ir}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\tfalse\n\t\t\t\t\t\t}\n\t\t\t\t\t)()`;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn IR.new`(data) -> {\n\t\t\t\t${ir}\n\t\t\t}`;\n\t\t} else if (this.nFields == 1) {\n\t\t\treturn IR.new`${this.#fields[0].type.path}__test_data`;\n\t\t} else {\n\t\t\tconst reversedFields = this.#fields.slice().reverse();\n\n\t\t\tlet ir = IR.new`(fields) -> {\n\t\t\t\t__core__chooseList(\n\t\t\t\t\tfields,\n\t\t\t\t\ttrue,\n\t\t\t\t\tfalse\n\t\t\t\t)\n\t\t\t}`;\n\n\t\t\treversedFields.forEach(f => {\n\t\t\t\tir = IR.new`(fields) -> {\n\t\t\t\t\t__core__chooseList(\n\t\t\t\t\t\tfields,\n\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\tfalse\n\t\t\t\t\t\t},\n\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t(head) -> {\n\t\t\t\t\t\t\t\t__core__ifThenElse(\n\t\t\t\t\t\t\t\t\t${f.type.path}__test_data(head),\n\t\t\t\t\t\t\t\t\t() -> {${ir}(__core__tailList__safe(fields))},\n\t\t\t\t\t\t\t\t\t() -> {false}\n\t\t\t\t\t\t\t\t)()\n\t\t\t\t\t\t\t}(__core__headList__safe(fields))\n\t\t\t\t\t\t}\n\t\t\t\t\t)()\n\t\t\t\t}`;\n\t\t\t});\n\n\t\t\treturn IR.new`(data) -> {\n\t\t\t\t__core__chooseData(\n\t\t\t\t\tdata,\n\t\t\t\t\t() -> {false},\n\t\t\t\t\t() -> {false},\n\t\t\t\t\t() -> {\n\t\t\t\t\t\t${ir}(__core__unListData__safe(data))\n\t\t\t\t\t},\n\t\t\t\t\t() -> {false},\n\t\t\t\t\t() -> {false}\n\t\t\t\t)()\n\t\t\t}`;\n\t\t}\n\t}\n\n\t/**\n\t * @internal\n\t * @param {string} path\n\t * @returns {IR}\n\t */\n\ttoIR_from_data_fields(path) {\n\t\tif (this.hasTags()) {\n\n\t\t\t//let ir = IR.new`(data) -> {__core__mkNilPairData(())}`;\n\n\t\t\tlet ir = IR.new(`(data) -> {\n\t\t\t\t(ignore) -> {\n\t\t\t\t\tdata\n\t\t\t\t}(\n\t\t\t\t\t__core__ifThenElse(\n\t\t\t\t\t\t${path}__test_data(data),\n\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t()\n\t\t\t\t\t\t},\n\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t__core__trace(\"Warning: invalid ${this.name.toString()} data\", ())\n\t\t\t\t\t\t}\n\t\t\t\t\t)()\n\t\t\t\t)\n\t\t\t}`);\n\t\t\t/*for (let i = this.nFields - 1; i >= 0; i--) {\n\t\t\t\tconst f = this.#fields[i]\n\t\t\t\tconst ftPath = f.type.path;\n\n\t\t\t\tir = IR.new`(data) -> {\n\t\t\t\t\t__core__mkCons(\n\t\t\t\t\t\t__core__mkPairData(\n\t\t\t\t\t\t\t__core__bData(#${bytesToHex(textToBytes(f.tag))}),\n\t\t\t\t\t\t\t${ftPath}____to_data(\n\t\t\t\t\t\t\t\t${ftPath}__from_data(\n\t\t\t\t\t\t\t\t\t__helios__common__cip68_field(\n\t\t\t\t\t\t\t\t\t\tdata, \n\t\t\t\t\t\t\t\t\t\t__core__bData(#${bytesToHex(textToBytes(f.tag))})\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t),\n\t\t\t\t\t\t${ir}(data)\n\t\t\t\t\t)\n\t\t\t\t}`;\n\t\t\t}\n\n\t\t\tir = IR.new`(data) -> {\n\t\t\t\t__core__constrData(\n\t\t\t\t\t0, \n\t\t\t\t\t__core__mkCons(\n\t\t\t\t\t\t__core__mapData(${ir}(data)),\n\t\t\t\t\t\t__core__mkCons(\n\t\t\t\t\t\t\t__core__iData(1),\n\t\t\t\t\t\t\t__core__mkNilData(())\n\t\t\t\t\t\t)\n\t\t\t\t\t)\n\t\t\t\t)\n\t\t\t}`;*/\n\n\t\t\treturn ir;\n\t\t} else {\n\t\t\tlet ir = IR.new(`(fields) -> {\n\t\t\t\t(ignore) -> {\n\t\t\t\t\tfields\n\t\t\t\t}(\n\t\t\t\t\t__core__ifThenElse(\n\t\t\t\t\t\t${path}__test_data(__core__listData(fields)),\n\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t()\n\t\t\t\t\t\t},\n\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t__core__trace(\"Warning: invalid ${this.name.toString()} data\", ())\n\t\t\t\t\t\t}\n\t\t\t\t\t)()\n\t\t\t\t)\n\t\t\t}`)\n\n\t\t\treturn ir;\n\n\t\t\t/*let ir = IR.new`(fields) -> {__core__mkNilData(())}`;\n\n\t\t\tfor (let i = this.nFields - 1; i >= 0; i--) {\n\t\t\t\tconst ftPath = this.getFieldType(i).path;\n\n\t\t\t\tir = IR.new`(fields) -> {\n\t\t\t\t\t__core__mkCons(\n\t\t\t\t\t\t${ftPath}____to_data(\n\t\t\t\t\t\t\t${ftPath}__from_data(\n\t\t\t\t\t\t\t\t__core__headList(fields)\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t), \n\t\t\t\t\t\t${ir}(__core__tailList(fields))\n\t\t\t\t\t)\n\t\t\t\t}`;\n\t\t\t}\n\n\t\t\treturn ir;*/\n\t\t}\n\t}\n\n\t/**\n\t * Doesn't return anything, but sets its IRdef in the map\n\t * @param {ToIRContext} ctx\n\t * @param {string} path\n\t * @param {IRDefinitions} map\n\t * @param {number} constrIndex\n\t */\n\ttoIR(ctx, path, map, constrIndex) {\n\t\t/**\n\t\t * @type {string[]}\n\t\t */\n\t\tconst getterNames = [];\n\n\t\tif (this.hasTags()) {\n\t\t\tfor (let i = 0; i < this.#fields.length; i++) {\n\t\t\t\tconst f = this.#fields[i];\n\t\t\t\tconst key = `${path}__${f.name.value}`;\n\n\t\t\t\t// equalsData is much more efficient than first converting to byteArray\n\t\t\t\tconst getter = IR.new`(self) -> {${f.type.path}__from_data(__helios__common__cip68_field(self, __core__bData(#${bytesToHex(textToBytes(f.tag))})))}`;\n\n\t\t\t\tmap.set(key, getter);\n\t\t\t\tgetterNames.push(key);\n\t\t\t}\n\t\t} else {\n\t\t\tconst isConstr = constrIndex != -1;\n\n\t\t\tconst getterBaseName = isConstr ? \"__helios__common__enum_field\" : \"__helios__common__struct_field\";\n\n\t\t\tif (this.fields.length == 1 && !isConstr) {\n\t\t\t\tconst f = this.fields[0];\n\t\t\t\tconst key = `${path}__${f.name.value}`;\n\n\t\t\t\tconst getter =  IR.new`__helios__common__identity${f.site}`;\n\t\t\t\t\n\t\t\t\tmap.set(key, getter);\n\n\t\t\t\tgetterNames.push(key);\n\t\t\t} else {\n\t\t\t\t// add a getter for each field\n\t\t\t\tfor (let i = 0; i < this.#fields.length; i++) {\n\t\t\t\t\tlet f = this.#fields[i];\n\t\t\t\t\tlet key = `${path}__${f.name.value}`;\n\t\t\t\t\tgetterNames.push(key);\n\n\t\t\t\t\t/**\n\t\t\t\t\t * @type {IR}\n\t\t\t\t\t */\n\t\t\t\t\tlet getter;\n\n\t\t\t\t\tif (i < 20) {\n\t\t\t\t\t\tgetter = IR.new`(self) ${null}->${f.site} {\n\t\t\t\t\t\t\t${f.type.path}__from_data(${getterBaseName}_${i}(self))\n\t\t\t\t\t\t}`\n\t\t\t\t\t} else {\n\t\t\t\t\t\tlet inner = new IR(\"self\");\n\n\t\t\t\t\t\tif (isConstr) {\n\t\t\t\t\t\t\tinner = IR.new`__core__sndPair(__core__unConstrData(${inner}))`;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tfor (let j = 0; j < i; j++) {\n\t\t\t\t\t\t\tinner = IR.new`__core__tailList(${inner})`;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tinner = IR.new`${f.type.path}__from_data(__core__headList(${inner}))`\n\n\t\t\t\t\t\tgetter = IR.new`(self) ${null}->${f.site} {${inner}}`;\n\t\t\t\t\t}\n\n\t\t\t\t\tmap.set(key, getter)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis.toIR_new(ctx, path, map, constrIndex);\n\t\tthis.toIR_copy(ctx, path, map, getterNames);\n\t}\n}\n\n/**\n * Struct statement\n * @internal\n */\nexport class StructStatement extends Statement {\n\t#parameters;\n\t#dataDef;\n\t#impl;\n\n\t/**\n\t * @param {Site} site\n\t * @param {Word} name\n\t * @param {TypeParameters} parameters\n\t * @param {DataField[]} fields \n\t * @param {ImplDefinition} impl\n\t */\n\tconstructor(site, name, parameters, fields, impl) {\n\t\tsuper(site, name);\n\n\t\tthis.#parameters = parameters;\n\t\tthis.#dataDef = new DataDefinition(this.site, name, fields);\n\t\tthis.#impl = impl;\n\t}\n\n\tget path() {\n\t\treturn this.#parameters.genTypePath(super.path);\n\t}\n\n\t/**\n\t * @param {string} basePath \n\t */\n\tsetBasePath(basePath) {\n\t\tsuper.setBasePath(basePath);\n\n\t\tthis.#impl.setBasePath(this.path);\n\t}\n\n\t/**\n\t * @returns {HeliosDataClass<HeliosData>}\n\t */\n\tgenOffChainType() {\n\t\tconst statement = this;\n\n\t\tclass Struct extends HeliosData {\n\t\t\t/**\n\t\t\t * So we can access fields by index\n\t\t\t * @type {HeliosData[]}\n\t\t\t */\n\t\t\t#fields;\n\n\t\t\t/**\n\t\t\t * @param  {...any} args\n\t\t\t */\n\t\t\tconstructor(...args) {\n\t\t\t\tsuper();\n\n\t\t\t\tthis.#fields = [];\n\n\t\t\t\tif (args.length == 1 && (typeof args[0] == \"object\") && Object.keys(args[0]).length == statement.#dataDef.nFields && Object.keys(args[0]).every(k => statement.#dataDef.hasField(new Word(Site.dummy(), k)))) {\n\t\t\t\t\tstatement.#dataDef.fieldNames.forEach((fieldName, i) => {\n\t\t\t\t\t\tconst arg = assertDefined(args[0][fieldName]);\n\n\t\t\t\t\t\tconst fieldType = statement.#dataDef.getFieldType(i);\n\n\t\t\t\t\t\tif (!fieldType.offChainType) {\n\t\t\t\t\t\t\tthrow new Error(`offChainType for ${fieldType.name} not yet implemented`);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst FieldClass = fieldType.offChainType;\n\n\t\t\t\t\t\tconst instance = arg instanceof FieldClass ? arg : new FieldClass(arg);\n\n\t\t\t\t\t\tthis.#fields.push(instance);\n\t\t\t\t\t\tthis[fieldName] = instance;\n\t\t\t\t\t});\n\t\t\t\t} else if (args.length != statement.#dataDef.nFields) {\n\t\t\t\t\tthrow new Error(`expected ${statement.#dataDef.nFields} args, got ${args.length}`);\n\t\t\t\t} else {\n\t\t\t\t\targs.forEach((arg, i) => {\n\t\t\t\t\t\tconst fieldName = statement.#dataDef.getFieldName(i);\n\t\t\t\t\t\tconst fieldType = statement.#dataDef.getFieldType(i);\n\n\t\t\t\t\t\tif (!fieldType.offChainType) {\n\t\t\t\t\t\t\tthrow new Error(`offChainType for ${fieldType.name} not yet implemented`);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst FieldClass = fieldType.offChainType;\n\n\t\t\t\t\t\tconst instance = arg instanceof FieldClass ? arg : new FieldClass(arg);\n\n\t\t\t\t\t\tthis.#fields.push(instance);\n\t\t\t\t\t\tthis[fieldName] = instance;\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * Overload 'instanceof' operator\n\t\t\t * @param {any} other \n\t\t\t * @returns {boolean}\n\t\t\t */\n\t\t\tstatic [Symbol.hasInstance](other) {\n\t\t\t\treturn (other._structStatement === statement) && (other instanceof HeliosData);\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * @type {StructStatement}\n\t\t\t */\n\t\t\tget _structStatement() {\n\t\t\t\treturn statement;\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * @type {HeliosData[]}\n\t\t\t */\n\t\t\tget _fields() {\n\t\t\t\treturn this.#fields;\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * @returns {UplcData}\n\t\t\t */\n\t\t\t_toUplcData() {\n\t\t\t\tif (this.#fields.length == 1) {\n\t\t\t\t\treturn this.#fields[0]._toUplcData();\n\t\t\t\t} else {\n\t\t\t\t\treturn new ListData(this.#fields.map(f => f._toUplcData()));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * @param {string | number[]} bytes \n\t\t\t * @returns {Struct}\n\t\t\t */\n\t\t\tstatic fromUplcCbor(bytes) {\n\t\t\t\treturn Struct.fromUplcData(UplcData.fromCbor(bytes));\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * @param {UplcData} data \n\t\t\t * @returns {Struct}\n\t\t\t */\n\t\t\tstatic fromUplcData(data) {\n\t\t\t\tconst dataItems = data.list;\n\n\t\t\t\tif (dataItems.length != statement.#dataDef.nFields) {\n\t\t\t\t\tthrow new Error(\"unexpected number of fields\");\n\t\t\t\t}\n\n\t\t\t\tconst args = dataItems.map((item, i) => {\n\t\t\t\t\treturn assertDefined(statement.#dataDef.getFieldType(i).offChainType).fromUplcData(item);\n\t\t\t\t});\n\n\t\t\t\treturn new Struct(...args);\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * @returns {boolean}\n\t\t\t */\n\t\t\tstatic isBuiltin() {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\tObject.defineProperty(Struct, \"name\", {value: this.name, writable: false});\t\t\n\n\t\treturn Struct;\n\t}\n\n\t/**\n\t * @returns {string}\n\t */\n\ttoString() {\n\t\treturn `struct ${this.name.toString()}${this.#parameters.toString()} ${this.#dataDef.toStringFields()}`;\n\t}\n\n\t/**\n\t * Evaluates own type and adds to scope\n\t * @param {TopScope} scope \n\t */\n\teval(scope) {\n\t\tconst [type, typeScope] = this.#parameters.createParametricType(scope, this.site, (typeScope) => {\n\t\t\tconst props = {\n\t\t\t\tfieldNames: this.#dataDef.fieldNames,\n\t\t\t\tname: this.name.value,\n\t\t\t\tpath: this.path, // includes template parameters\n\t\t\t\tgenTypeDetails: (self) => {\n\t\t\t\t\tconst [inputType, outputType, internalTypeFields] = this.#dataDef.genTypeDetails();\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\tinputType: inputType,\n\t\t\t\t\t\toutputType: outputType,\n\t\t\t\t\t\tinternalType: {\n\t\t\t\t\t\t\ttype: \"Struct\",\n\t\t\t\t\t\t\tfieldTypes: internalTypeFields\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t},\n\t\t\t\tjsToUplc: async (obj, helpers) => {\n\t\t\t\t\tif (this.#dataDef.hasTags()) {\n\t\t\t\t\t\tconst pairs = await this.#dataDef.jsMapToUplc(obj, helpers);\n\n\t\t\t\t\t\treturn new ConstrData(0, [new MapData(pairs), new IntData(1n)]);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t/**\n\t\t\t\t\t\t * @type {UplcData[]}\n\t\t\t\t\t\t */\n\t\t\t\t\t\tconst fields = await this.#dataDef.jsFieldsToUplc(obj, helpers);\n\n\t\t\t\t\t\tif (fields.length == 1) {\n\t\t\t\t\t\t\treturn fields[0];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn new ListData(fields);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tuplcToJs: async (data, helpers) => {\n\t\t\t\t\tif (this.#dataDef.hasTags()) {\n\t\t\t\t\t\treturn this.#dataDef.uplcMapToJs(data.fields[0].map, helpers);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (this.#dataDef.nFields == 1) {\n\t\t\t\t\t\t\treturn this.#dataDef.getFieldType(0).uplcToJs(data, helpers);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn this.#dataDef.uplcFieldsToJs(data.list, helpers);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tgenOffChainType: () => this.genOffChainType(),\n\t\t\t\tgenInstanceMembers: (self) => ({\n\t\t\t\t\t...genCommonInstanceMembers(self),\n\t\t\t\t\t...this.#dataDef.evalFieldTypes(typeScope),\n\t\t\t\t\t...this.#impl.genInstanceMembers(typeScope),\n\t\t\t\t\tcopy: this.#dataDef.genCopyType(self)\n\t\t\t\t}),\n\t\t\t\tgenTypeMembers: (self) => ({\n\t\t\t\t\t...genCommonTypeMembers(self),\n\t\t\t\t\t...this.#impl.genTypeMembers(typeScope)\n\t\t\t\t})\n\t\t\t};\n\n\t\t\tif (this.#parameters.hasParameters()) {\n\t\t\t\treturn new GenericParametricType(props);\n\t\t\t} else {\n\t\t\t\treturn new GenericType(props);\n\t\t\t}\n\t\t});\n\n\t\tconst path = this.#parameters.hasParameters() ? super.path : this.path;\n\t\t\n\t\tscope.set(this.name, new NamedEntity(this.name.value, path, type));\n\n\t\tvoid this.#dataDef.evalFieldTypes(typeScope);\n\n\t\ttypeScope.assertAllUsed();\n\n\t\tthis.#impl.eval(typeScope);\n\t}\n\n\t/**\n\t * @param {string} namespace \n\t * @param {(name: string, cs: ConstStatement) => void} callback \n\t */\n\tloopConstStatements(namespace, callback) {\n\t\tthis.#impl.loopConstStatements(`${namespace}${this.name.value}::`, callback);\n\t}\n\n\t/**\n\t * @param {ToIRContext} ctx\n\t * @param {IRDefinitions} map\n\t */\n\ttoIR(ctx, map) {\n\t\tmap.set(`${this.path}__test_data`, this.#dataDef.toIR_test_data());\n\n\t\tif (this.#dataDef.hasTags()) {\n\t\t\tmap.set(`${this.path}____eq`, IR.new`__helios__common____eq${this.site}`);\n\t\t\tmap.set(`${this.path}____neq`, IR.new`__helios__common____neq${this.site}`);\n\t\t\tmap.set(`${this.path}__serialize`, IR.new`__helios__common__serialize${this.site}`);\n\t\t\tmap.set(`${this.path}____to_data`, IR.new`__helios__common__identity${this.site}`);\n\n\t\t\tif (config.CHECK_CASTS && !ctx.simplify) {\n\t\t\t\tmap.set(`${this.path}__from_data`, IR.new`(data) -> {\n\t\t\t\t\t(ignore) -> {\n\t\t\t\t\t\tdata\n\t\t\t\t\t}(\n\t\t\t\t\t\t__core__ifThenElse(\n\t\t\t\t\t\t\t${this.path}__test_data(data),\n\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t()\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t__core__trace(\"Warning: invalid ${this.name.toString()} data\", ())\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t)()\n\t\t\t\t\t)\n\t\t\t\t}${this.site}`);\n\t\t\t} else {\n\t\t\t\tmap.set(`${this.path}__from_data`, IR.new`__helios__common__identity${this.site}`);\n\t\t\t}\n\n\t\t\tmap.set(`${this.path}__from_data_safe`, IR.new`__helios__option__SOME_FUNC${this.site}`);\n\t\t} else {\n\t\t\tconst implPath = this.#dataDef.nFields == 1 ? this.#dataDef.getFieldType(0).path : \"__helios__struct\";\n\n\t\t\tmap.set(`${this.path}____eq`, IR.new`${implPath}____eq${this.site}`);\n\t\t\tmap.set(`${this.path}____neq`, IR.new`${implPath}____neq${this.site}`);\n\t\t\tmap.set(`${this.path}__serialize`, IR.new`${implPath}__serialize${this.site}`);\n\n\t\t\t// the from_data method can include field checks\n\t\t\tif (this.#dataDef.fieldNames.length == 1 || (!(config.CHECK_CASTS && !ctx.simplify))) {\n\t\t\t\tmap.set(`${this.path}__from_data`, IR.new`${implPath}__from_data${this.site}`);\n\t\t\t} else {\n\t\t\t\tmap.set(`${this.path}__from_data`, IR.new`(data) -> {\n\t\t\t\t\t(ignore) -> {\n\t\t\t\t\t\t__core__unListData(data)\n\t\t\t\t\t}(\n\t\t\t\t\t\t__core__ifThenElse(\n\t\t\t\t\t\t\t${this.path}__test_data(data),\n\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t()\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t__core__trace(\"Warning: invalid ${this.name.toString()} data\", ())\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t)()\n\t\t\t\t\t)\n\t\t\t\t}${this.site}`);\n\t\t\t}\n\t\t\tif (this.#dataDef.fieldNames.length == 1) {\n\t\t\t\tmap.set(`${this.path}__from_data_safe`, IR.new`${this.#dataDef.getFieldType(0).path}__from_data_safe${this.site}`);\n\t\t\t} else {\n\t\t\t\tmap.set(`${this.path}__from_data_safe`, IR.new`(data) -> {\n\t\t\t\t\t__core__chooseData(\n\t\t\t\t\t\tdata,\n\t\t\t\t\t\t() -> {__helios__option__NONE_FUNC},\n\t\t\t\t\t\t() -> {__helios__option__NONE_FUNC},\n\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t__helios__option__SOME_FUNC(__core__unListData__safe(data))\n\t\t\t\t\t\t},\n\t\t\t\t\t\t() -> {__helios__option__NONE_FUNC},\n\t\t\t\t\t\t() -> {__helios__option__NONE_FUNC}\n\t\t\t\t\t)()\n\t\t\t\t}`);\n\t\t\t}\n\n\t\t\tmap.set(`${this.path}____to_data`, new IR(`${implPath}____to_data`, this.site));\n\t\t}\n\n\t\t// super.toIR adds __new and copy, which might depend on __to_data, so must come after\n\t\tthis.#dataDef.toIR(ctx, this.path, map, -1);\n\t\tmap.set(`${this.path}__show`, this.#dataDef.toIR_show(this.name.value));\n\n\t\tthis.#impl.toIR(ctx, map);\n\t}\n}\n\n/**\n * Function statement\n * (basically just a named FuncLiteralExpr)\n * @internal\n */\nexport class FuncStatement extends Statement {\n\t#parameters;\n\t#funcExpr;\n\n\t/**\n\t * @param {Site} site \n\t * @param {Word} name \n\t * @param {TypeParameters} parameters\n\t * @param {FuncLiteralExpr} funcExpr \n\t */\n\tconstructor(site, name, parameters, funcExpr) {\n\t\tsuper(site, name);\n\t\tthis.#parameters = parameters;\n\t\tthis.#funcExpr = funcExpr;\n\t}\n\n\t/**\n\t * @type {string}\n\t */\n\tget path() {\n\t\treturn this.#parameters.genFuncPath(super.path,);\n\t}\n\n\t/**\n\t * @type {number}\n\t */\n\tget nArgs() {\n\t\treturn this.#funcExpr.nArgs;\n\t}\n\n\t/**\n\t * @type {string[]}\n\t */\n\tget argNames() {\n\t\treturn this.#funcExpr.argNames;\n\t}\n\t\n\t/**\n\t * @type {Type[]}\n\t */\n\tget argTypes() {\n\t\treturn this.#funcExpr.argTypes;\n\t}\n\n\t/**\n\t * @type {string[]}\n\t */\n\tget argTypeNames() {\n\t\treturn this.#funcExpr.argTypeNames;\n\t}\n\n\t/**\n\t * @type {Type}\n\t */\n\tget retType() {\n\t\treturn this.#funcExpr.retType;\n\t}\n\n\t/**\n\t * @type {Site}\n\t */\n\tget retSite() {\n\t\treturn this.#funcExpr.retExpr.site;\n\t}\n\n\t/**\n\t * @returns {string}\n\t */\n\ttoString() {\n\t\treturn `func ${this.name.toString()}${this.#parameters.toString()}${this.#funcExpr.toString()}`;\n\t}\n\n\t/**\n\t * Evaluates a function and returns a func value\n\t * @param {Scope} scope \n\t * @returns {null | EvalEntity}\n\t */\n\tevalInternal(scope) {\n\t\tconst typed = this.#parameters.evalParametricFunc(scope, (subScope) => {\n\t\t\tconst type = this.#funcExpr.evalType(subScope);\n\n\t\t\tif (!type) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tconst implScope = new Scope(subScope);\n\n\t\t\t// recursive calls expect func value, not func type\n\t\t\timplScope.set(this.name, new NamedEntity(this.name.value, super.path, type.toTyped()));\n\n\t\t\t\n\t\t\tvoid this.#funcExpr.evalInternal(implScope);\n\n\t\t\treturn type;\n\t\t});\n\n\t\treturn typed;\n\t}\n\n\t/**\n\t * Evaluates type of a funtion.\n\t * Separate from evalInternal so we can use this function recursively inside evalInternal\n\t * @param {Scope} scope \n\t * @returns {null | ParametricFunc | FuncType}\n\t */\n\tevalType(scope) {\n\t\treturn this.#parameters.evalParametricFuncType(scope, (subScope) => {\n\t\t\treturn this.#funcExpr.evalType(subScope);\n\t\t});\n\t}\n\n\t/**\n\t * @param {Scope} scope \n\t */\n\teval(scope) {\n\t\tconst typed = this.evalInternal(scope);\n\n\t\tif (typed) {\n\t\t\tassert(!typed.asType);\n\n\t\t\tscope.set(this.name, new NamedEntity(this.name.value, super.path, typed));\n\t\t}\n\t}\n\n\t/**\n\t * Do nothing\n\t * @param {string} namespace \n\t * @param {(name: string, cs: ConstStatement) => void} callback \n\t */\n\tloopConstStatements(namespace, callback) {\n\t}\n\n\t/**\n\t * Returns IR of function\n\t * @param {ToIRContext} ctx\n\t * @returns {IR}\n\t */\n\ttoIRInternal(ctx) {\n\t\treturn this.#funcExpr.toIR(ctx);\n\t}\n\n\t/**\n\t * @param {ToIRContext} ctx\n\t * @param {IRDefinitions} map \n\t */\n\ttoIR(ctx, map) {\n\t\tmap.set(this.path, this.toIRInternal(ctx));\n\t}\n\n\t/**\n\t * @param {Statement} s \n\t * @returns {boolean}\n\t */\n\tstatic isMethod(s) {\n\t\tif (s instanceof FuncStatement) {\n\t\t\treturn s.#funcExpr.isMethod();\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n}\n\n/**\n * EnumMember defintion is similar to a struct definition\n * @internal\n */\nexport class EnumMember {\n\t/** @type {null | EnumStatement} */\n\t#parent;\n\n\t/** @type {null | number} */\n\t#constrIndex;\n\n\t#dataDef;\n\n\t/**\n\t * @param {Word} name\n\t * @param {DataField[]} fields\n\t */\n\tconstructor(name, fields) {\n\t\tthis.#parent = null; // registered later\n\t\tthis.#constrIndex = null;\n\t\tthis.#dataDef = new DataDefinition(name.site, name, fields);\n\t}\n\n\t/**\n\t * @returns {number}\n\t */\n\tget constrIndex() {\n\t\tif (this.#constrIndex === null) {\n\t\t\tthrow new Error(\"constrIndex not set\");\n\t\t} else {\n\t\t\treturn this.#constrIndex;\n\t\t}\n\t}\n\n\t/**\n\t * @type {Word}\n\t */\n\tget name() {\n\t\treturn this.#dataDef.name;\n\t}\n\n\t/** \n\t * @param {EnumStatement} parent\n\t * @param {number} i\n\t*/\n\tregisterParent(parent, i) {\n\t\tthis.#parent = parent;\n\t\tthis.#constrIndex = i;\n\t}\n\t\n\t/**\n\t * @type {EnumStatement}\n\t */\n\tget parent() {\n\t\tif (this.#parent === null) {\n\t\t\tthrow new Error(\"parent not yet registered\");\n\t\t} else {\n\t\t\treturn this.#parent;\n\t\t}\n\t}\n\n\t/**\n\t * @returns {HeliosDataClass<HeliosData>}\n\t */\n\tgenOffChainType() {\n\t\tconst statement = this;\n\n\t\tconst enumStatement = statement.parent;\n\n\t\tconst index = statement.constrIndex;\n\n\t\tconst nFields = statement.#dataDef.nFields;\n\n\t\t/**\n\t\t * @type {[string, DataType][]} - [name, type]\n\t\t */\n\t\tconst fields = [];\n\n\t\tfor (let i = 0; i < nFields; i++) {\n\t\t\tfields.push([statement.#dataDef.getFieldName(i), statement.#dataDef.getFieldType(i)]);\n\t\t}\n\n\t\t// similar to Struct\n\t\tclass EnumVariant extends HeliosData {\n\t\t\t/**\n\t\t\t * So we can access fields by index\n\t\t\t * @type {HeliosData[]}\n\t\t\t */\n\t\t\t#fields;\n\n\t\t\t/**\n\t\t\t * @param  {...any} args\n\t\t\t */\n\t\t\tconstructor(...args) {\n\t\t\t\tsuper();\n\t\t\t\tif (args.length != nFields) {\n\t\t\t\t\tthrow new Error(`expected ${nFields} args, got ${args.length}`);\n\t\t\t\t}\n\n\t\t\t\tthis.#fields = [];\n\n\t\t\t\targs.forEach((arg, i) => {\n\t\t\t\t\tconst [fieldName, fieldType] = fields[i];\n\t\t\t\t\tconst FieldClass = assertDefined(fieldType.offChainType);\n\n\t\t\t\t\tconst instance = arg instanceof FieldClass ? arg : new FieldClass(arg);\n\n\t\t\t\t\tthis.#fields.push(instance);\n\t\t\t\t\tthis[fieldName] = instance;\n\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * Overload 'instanceof' operator\n\t\t\t * @param {any} other \n\t\t\t * @returns {boolean}\n\t\t\t */\n\t\t\tstatic [Symbol.hasInstance](other) {\n\t\t\t\treturn (other._enumVariantStatement === statement) && (other instanceof HeliosData);\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * @type {EnumStatement}\n\t\t\t */\n\t\t\tget _enumStatement() {\n\t\t\t\treturn enumStatement;\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * @type {EnumMember}\n\t\t\t */\n\t\t\tget _enumVariantStatement() {\n\t\t\t\treturn statement;\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * @returns {UplcData}\n\t\t\t */\n\t\t\t_toUplcData() {\n\t\t\t\treturn new ConstrData(index, this.#fields.map(f => f._toUplcData()));\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * @returns {boolean}\n\t\t\t */\n\t\t\tstatic isBuiltin() {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * @param {string | number[]} bytes \n\t\t\t * @returns {EnumVariant}\n\t\t\t */\n\t\t\tstatic fromUplcCbor(bytes) {\n\t\t\t\treturn EnumVariant.fromUplcData(UplcData.fromCbor(bytes));\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * @param {UplcData} data \n\t\t\t * @returns {EnumVariant}\n\t\t\t */\n\t\t\tstatic fromUplcData(data) {\n\t\t\t\tassert(data.index == index, \"wrong index\");\n\n\t\t\t\tconst dataItems = data.list;\n\n\t\t\t\tif (dataItems.length != nFields) {\n\t\t\t\t\tthrow new Error(\"unexpected number of fields\");\n\t\t\t\t}\n\n\t\t\t\tconst args = dataItems.map((item, i) => {\n\t\t\t\t\treturn assertDefined(fields[i][1].offChainType).fromUplcData(item);\n\t\t\t\t});\n\n\t\t\t\treturn new EnumVariant(...args);\n\t\t\t}\n\t\t}\n\n\t\tObject.defineProperty(EnumVariant, \"name\", {value: this.#dataDef.name, writable: false});\n\n\t\treturn EnumVariant;\n\n\t}\n\n\t/**\n\t * @type {DataDefinition}\n\t */\n\tget dataDefinition() {\n\t\treturn this.#dataDef;\n\t}\n\n\t/**\n\t * @param {Scope} scope \n\t */\n\tevalDataFields(scope) {\n\t\tthis.#dataDef.evalFieldTypes(scope);\n\t}\n\n\t/**\n\t * @param {Scope} scope \n\t * @returns {(parent: DataType) => EnumMemberType}\n\t */\n\tevalType(scope) {\n\t\tif (this.#parent === null) {\n\t\t\tthrow new Error(\"parent should've been registered\");\n\t\t}\n\n\t\treturn (parent) => {\n\t\t\tconst path = `${parent.path}__${this.#dataDef.name.value}`; \n\n\t\t\tconst props = {\n\t\t\t\tname: this.#dataDef.name.value,\n\t\t\t\tpath: path, \n\t\t\t\tconstrIndex: this.constrIndex,\n\t\t\t\tgenOffChainType: () => this.genOffChainType(),\n\t\t\t\tparentType: parent,\n\t\t\t\tfieldNames: this.#dataDef.fieldNames,\n\t\t\t\tgenInstanceMembers: (self) => {\n\t\t\t\t\tconst res = {\n\t\t\t\t\t\t...genCommonInstanceMembers(self),\n\t\t\t\t\t\t...this.#dataDef.evalFieldTypes(scope),\n\t\t\t\t\t\tcopy: this.#dataDef.genCopyType(self)\n\t\t\t\t\t}\n\n\t\t\t\t\treturn res;\n\t\t\t\t},\n\t\t\t\tgenTypeMembers: (self) => ({\n\t\t\t\t\t...genCommonEnumTypeMembers(self, parent),\n\t\t\t\t})\n\t\t\t};\n\n\t\t\tif (this.parent.hasParameters()) {\n\t\t\t\treturn new GenericParametricEnumMemberType(props);\n\t\t\t} else {\n\t\t\t\treturn new GenericEnumMemberType(props);\n\t\t\t}\n\t\t};\n\t}\n\n\tget path() {\n\t\treturn `${this.parent.path}__${this.#dataDef.name.toString()}`;\n\t}\n\n\t/**\n\t * @param {ToIRContext} ctx\n\t * @param {IRDefinitions} map \n\t */\n\ttoIR(ctx, map) {\n\t\tmap.set(`${this.path}____eq`, IR.new`__helios__common____eq${this.#dataDef.site}`);\n\t\tmap.set(`${this.path}____neq`, IR.new`__helios__common____neq${this.#dataDef.site}`);\n\t\tmap.set(`${this.path}__serialize`, IR.new`__helios__common__serialize${this.#dataDef.site}`);\n\n\t\tmap.set(`${this.path}__test_data`, IR.new`(data) -> {\n\t\t\t__core__chooseData(\n\t\t\t\tdata,\n\t\t\t\t() -> {\n\t\t\t\t\t(pair) -> {\n\t\t\t\t\t\t__core__ifThenElse(\n\t\t\t\t\t\t\t__core__equalsInteger(__core__fstPair(pair), ${this.#constrIndex}),\n\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t${this.#dataDef.toIR_test_data()}(__core__listData(__core__sndPair(pair)))\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\tfalse\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t)()\n\t\t\t\t\t}(__core__unConstrData__safe(data))\n\t\t\t\t},\n\t\t\t\t() -> {false},\n\t\t\t\t() -> {false},\n\t\t\t\t() -> {false},\n\t\t\t\t() -> {false}\n\t\t\t)()\n\t\t}`);\n\n\t\tif (config.CHECK_CASTS && !ctx.simplify) {\n\t\t\tmap.set(`${this.path}__from_data`, IR.new`(data) -> {\n\t\t\t\t(ignore) -> {\n\t\t\t\t\tdata\n\t\t\t\t}(\n\t\t\t\t\t__core__ifThenElse(\n\t\t\t\t\t\t${this.path}__test_data(data),\n\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t()\n\t\t\t\t\t\t},\n\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t__core__trace(\"Warning: invalid ${this.name.toString()} data\", ())\n\t\t\t\t\t\t}\n\t\t\t\t\t)()\n\t\t\t\t)\n\t\t\t}`);\n\t\t} else {\n\t\t\tmap.set(`${this.path}__from_data`, new IR(`(data) -> {\n\t\t\t\t__helios__common__assert_constr_index(data, ${this.constrIndex})\n\t\t\t}`, this.#dataDef.site));\n\t\t}\n\n\t\tmap.set(`${this.path}__from_data_safe`, IR.new`(data) -> {\n\t\t\t__core__chooseData(\n\t\t\t\tdata,\n\t\t\t\t() -> {\n\t\t\t\t\t(index) -> {\n\t\t\t\t\t\t__core__ifThenElse(\n\t\t\t\t\t\t\t__core__equalsInteger(index, ${this.constrIndex}),\n\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t__helios__option__SOME_FUNC(data)\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t\t__helios__option__NONE_FUNC\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t)()\n\t\t\t\t\t}(__core__fstPair(__core__unConstrData__safe(data)))\n\t\t\t\t},\n\t\t\t\t() -> {__helios__option__NONE_FUNC},\n\t\t\t\t() -> {__helios__option__NONE_FUNC},\n\t\t\t\t() -> {__helios__option__NONE_FUNC},\n\t\t\t\t() -> {__helios__option__NONE_FUNC}\n\t\t\t)()\n\t\t}`);\n\n\t\tmap.set(`${this.path}____to_data`, new IR(\"__helios__common__identity\", this.#dataDef.site));\n\n\t\t// super.toIR adds __new and copy, which might depend on __to_data, so must come after\n\t\tthis.#dataDef.toIR(ctx, this.path, map, this.constrIndex);\n\n\t\tconst longName = (this.#parent?.name?.value ?? \"\") + \"::\" + this.name.value;\n\t\tmap.set(`${this.path}__show`, IR.new`(data) -> {\n\t\t\t__core__chooseData(\n\t\t\t\tdata,\n\t\t\t\t() -> {\n\t\t\t\t\t(fields) -> {\n\t\t\t\t\t\t${this.#dataDef.toIR_show(longName, true)}(fields)()\n\t\t\t\t\t}(__core__sndPair(__core__unConstrData__safe(data)))\n\t\t\t\t},\n\t\t\t\t() -> {\"${longName}{<n/a>}\"},\n\t\t\t\t() -> {\"${longName}{<n/a>}\"},\n\t\t\t\t() -> {\"${longName}{<n/a>}\"},\n\t\t\t\t() -> {\"${longName}{<n/a>}\"}\n\t\t\t)\n\t\t}`);\n\t}\n}\n\n/**\n * Enum statement, containing at least one member\n * @internal\n */\nexport class EnumStatement extends Statement {\n\t#parameters;\n\t#members;\n\t#impl;\n\n\t/**\n\t * @param {Site} site \n\t * @param {Word} name \n\t * @param {TypeParameters} parameters\n\t * @param {EnumMember[]} members \n\t * @param {ImplDefinition} impl\n\t */\n\tconstructor(site, name, parameters, members, impl) {\n\t\tsuper(site, name);\n\t\tthis.#parameters = parameters;\n\t\tthis.#members = members;\n\t\tthis.#impl = impl;\n\t\t\n\t\tfor (let i = 0; i < this.#members.length; i++) {\n\t\t\tthis.#members[i].registerParent(this, i);\n\t\t}\n\t}\n\n\t/**\n\t * @type {string}\n\t */\n\tget path() {\n\t\treturn this.#parameters.genTypePath(super.path);\n\t}\n\n\t/**\n\t * @returns {boolean}\n\t */\n\thasParameters() {\n\t\treturn this.#parameters.hasParameters();\n\t}\n\n\t/**\n\t * @param {string} basePath \n\t */\n\tsetBasePath(basePath) {\n\t\tsuper.setBasePath(basePath);\n\n\t\tthis.#impl.setBasePath(this.path);\n\t}\n\n\t/**\n\t * @internal\n\t * @returns {HeliosDataClass<HeliosData>}\n\t */\n\tgenOffChainType() {\n\t\tconst statement = this;\n\n\t\tconst nVariants = statement.nEnumMembers;\n\n\t\t/**\n\t\t * @type {HeliosDataClass<HeliosData>[]}\n\t\t */\n\t\tconst variants = [];\n\n\t\tfor (let i = 0; i < nVariants; i++) {\n\t\t\tvariants.push(this.#members[i].genOffChainType());\n\t\t}\n\n\t\tclass Enum extends HeliosData {\n\t\t\tconstructor() {\n\t\t\t\tsuper();\n\t\t\t\tthrow new Error(\"can't be constructed (hint: construct an enum)\");\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * Overload 'instanceof' operator\n\t\t\t * @param {any} other \n\t\t\t * @returns {boolean}\n\t\t\t */\n\t\t\tstatic [Symbol.hasInstance](other) {\n\t\t\t\treturn (other._enumStatement === statement) && (other instanceof HeliosData);\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * @type {EnumStatement}\n\t\t\t */\n\t\t\tget _enumStatement() {\n\t\t\t\treturn statement;\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * @param {number[] | string} bytes Array of bytes, or hexadecimal representation.\n\t\t\t * @returns {HeliosData}\n\t\t\t */\n\t\t\tstatic fromUplcCbor(bytes) {\n\t\t\t\treturn Enum.fromUplcData(UplcData.fromCbor(bytes));\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * @param {UplcData} data \n\t\t\t * @returns {HeliosData}\n\t\t\t */\n\t\t\tstatic fromUplcData(data) {\n\t\t\t\tconst variant = assertDefined(variants[data.index], \"index out of range\");\n\n\t\t\t\treturn variant.fromUplcData(data);\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * @returns {boolean}\n\t\t\t */\n\t\t\tstatic isBuiltin() {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\tObject.defineProperty(Enum, \"name\", {value: this.name, writable: false});\n\n\t\tfor (let v of variants) {\n\t\t\tObject.defineProperty(Enum, v.name, {value: v, writable: false});\n\t\t}\n\n\t\treturn Enum;\n\t}\n\n\t/**\n\t * Returns index of enum member.\n\t * Returns -1 if not found\n\t * @param {Word} name \n\t * @returns {number}\n\t */\n\t// returns an index\n\tfindEnumMember(name) {\n\t\tlet found = -1;\n\t\tlet i = 0;\n\t\tfor (let member of this.#members) {\n\t\t\tif (member.name.toString() == name.toString()) {\n\t\t\t\tfound = i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\ti++;\n\t\t}\n\n\t\treturn found;\n\t}\n\n\t/**\n\t * @param {number} i\n\t * @returns {EnumMember}\n\t */\n\tgetEnumMember(i) {\n\t\treturn assertDefined(this.#members[i]);\n\t}\n\n\t/**\n\t * @param {Word} name\n\t * @returns {boolean}\n\t */\n\thasEnumMember(name) {\n\t\treturn this.findEnumMember(name) != -1;\n\t}\n\n\t/**\n\t * @returns {number}\n\t */\n\tget nEnumMembers() {\n\t\treturn this.#members.length;\n\t}\n\n\t/**\n\t * @param {Scope} scope \n\t */\n\teval(scope) {\n\t\tconst [type, typeScope] = this.#parameters.createParametricType(scope, this.site, (typeScope) => {\n\t\t\t/**\n\t\t\t * @type {{[name: string]: (parent: DataType) => EnumMemberType}}\n\t\t\t */\n\t\t\tconst genFullMembers = {};\n\n\t\t\tthis.#members.forEach(m => {\n\t\t\t\tgenFullMembers[m.name.value] = m.evalType(typeScope);\n\t\t\t});\n\n\t\t\tconst props = {\n\t\t\t\tname: this.name.value,\n\t\t\t\tpath: this.path,\n\t\t\t\tgenTypeDetails: (self) => {\n\t\t\t\t\tconst inputEnumTypeParts = [];\n\t\t\t\t\tconst outputEnumTypeParts = [];\n\t\t\t\t\tconst internalEnumTypeParts = [];\n\n\t\t\t\t\tthis.#members.forEach(member => {\n\t\t\t\t\t\tconst [inputType, outputType, internalTypeFields] = member.dataDefinition.genTypeDetails();\n\t\t\t\t\t\t\n\t\t\t\t\t\tinputEnumTypeParts.push(`{\"${member.name.value}\": ${inputType}}`);\n\t\t\t\t\t\toutputEnumTypeParts.push(`{\"${member.name.value}\": ${outputType}}`);\n\t\t\t\t\t\tinternalEnumTypeParts.push({name: member.name.value, fieldTypes: internalTypeFields});\n\t\t\t\t\t});\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\tinputType: inputEnumTypeParts.join(\" | \"),\n\t\t\t\t\t\toutputType: outputEnumTypeParts.join(\" | \"),\n\t\t\t\t\t\tinternalType: {\n\t\t\t\t\t\t\ttype: \"Enum\",\n\t\t\t\t\t\t\tvariantTypes: internalEnumTypeParts\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t},\n\t\t\t\tjsToUplc: async (obj, helpers) => {\n\t\t\t\t\tconst memberName = assertDefined(Object.keys(obj)[0]);\n\n\t\t\t\t\tconst i = this.#members.findIndex(m => m.name.value == memberName);\n\n\t\t\t\t\tif (i == -1) {\n\t\t\t\t\t\tthrow new Error(`invalid ${memberName} of ${this.name.value}`);\n\t\t\t\t\t}\n\n\t\t\t\t\tconst member = this.#members[i];\n\n\t\t\t\t\tconst fields = await member.dataDefinition.jsFieldsToUplc(assertDefined(obj[memberName]), helpers);\n\n\t\t\t\t\treturn new ConstrData(i, fields);\n\t\t\t\t},\n\t\t\t\tuplcToJs: async (data, helpers) => {\n\t\t\t\t\tconst i = data.index;\n\n\t\t\t\t\tif (i < 0 || i >= this.#members.length) {\n\t\t\t\t\t\tthrow new Error(`enum variant index ${i} out of range`);\n\t\t\t\t\t}\n\n\t\t\t\t\tconst member = this.#members[i];\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\t[member.name.value]: await member.dataDefinition.uplcFieldsToJs(data.fields, helpers)\n\t\t\t\t\t};\n\t\t\t\t},\n\t\t\t\tgenOffChainType: () => this.genOffChainType(),\n\t\t\t\tgenInstanceMembers: (self) => ({\n\t\t\t\t\t...genCommonInstanceMembers(self),\n\t\t\t\t\t...this.#impl.genInstanceMembers(typeScope),\n\t\t\t\t}),\n\t\t\t\tgenTypeMembers: (self) => {\n\t\t\t\t\tconst typeMembers_ = {\n\t\t\t\t\t\t...genCommonTypeMembers(self),\n\t\t\t\t\t\t...this.#impl.genTypeMembers(typeScope)\n\t\t\t\t\t};\n\t\t\t\t\t\n\t\t\t\t\t// TODO: detect duplicates\n\t\t\t\t\tfor (let memberName in genFullMembers) {\n\t\t\t\t\t\ttypeMembers_[memberName] = genFullMembers[memberName](assertDefined(self.asDataType))\n\t\t\t\t\t}\n\n\t\t\t\t\treturn typeMembers_\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tif (this.#parameters.hasParameters()) {\n\t\t\t\treturn new GenericParametricType(props)\n\t\t\t} else {\n\t\t\t\treturn new GenericType(props);\n\t\t\t}\n\t\t});\n\n\t\t// don't include type parameters in path (except empty), these are added by application statement\n\t\tconst path = this.#parameters.hasParameters() ? super.path : this.path;\n\t\t\n\t\tscope.set(this.name, new NamedEntity(this.name.value, path, type));\n\n\t\tthis.#members.forEach(m => {\n\t\t\tm.evalDataFields(typeScope);\n\t\t});\n\n\t\ttypeScope.assertAllUsed();\n\t\t\n\t\tthis.#impl.eval(typeScope);\n\t}\n\n\t/**\n\t * @param {string} namespace \n\t * @param {(name: string, cs: ConstStatement) => void} callback \n\t */\n\tloopConstStatements(namespace, callback) {\n\t\tthis.#impl.loopConstStatements(`${namespace}${this.name.value}::`, callback);\n\t}\n\n\t/**\n\t * @returns {IR}\n\t */\n\ttoIR_test_data() {\n\t\tlet ir = IR.new`false`;\n\n\t\tthis.#members.forEach(m => {\n\t\t\tir = IR.new`__core__ifThenElse(\n\t\t\t\t${m.path}__test_data(data),\n\t\t\t\t() -> {\n\t\t\t\t\ttrue\n\t\t\t\t},\n\t\t\t\t() -> {\n\t\t\t\t\t${ir}\n\t\t\t\t}\n\t\t\t)()`;\n\t\t});\n\n\t\treturn IR.new`(data) -> {\n\t\t\t${ir}\n\t\t}`;\n\t}\n\n\t/**\n\t * @internal\n\t * @returns {IR}\n\t */\n\ttoIR_show() {\n\t\tconst name = this.name.value;\n\n\t\tconst last = this.#members[this.#members.length-1];\n\n\t\tlet ir = IR.new`${last.path}__show(data)()`;\n\n\t\tfor (let i = this.#members.length - 2; i >= 0; i--) {\n\t\t\tconst m = this.#members[i];\n\n\t\t\tir = IR.new`__core__ifThenElse(\n\t\t\t\t__core__equalsInteger(index, ${m.constrIndex}),\n\t\t\t\t() -> {\n\t\t\t\t\t${m.path}__show(data)()\n\t\t\t\t},\n\t\t\t\t() -> {\n\t\t\t\t\t${ir}\n\t\t\t\t}\n\t\t\t)()`;\n\t\t}\n\n\t\treturn IR.new`(data) -> {\n\t\t\t__core__chooseData(\n\t\t\t\tdata,\n\t\t\t\t() -> {\n\t\t\t\t\t(index) -> {\n\t\t\t\t\t\t${ir}\n\t\t\t\t\t}(__core__fstPair(__core__unConstrData__safe(data)))\n\t\t\t\t},\n\t\t\t\t() -> {\"${name}{<n/a>}\"},\n\t\t\t\t() -> {\"${name}{<n/a>}\"},\n\t\t\t\t() -> {\"${name}{<n/a>}\"},\n\t\t\t\t() -> {\"${name}{<n/a>}\"}\n\t\t\t)\n\t\t}`;\n\t}\n\n\t/**\n\t * @param {ToIRContext} ctx\n\t * @param {IRDefinitions} map \n\t */\n\ttoIR(ctx, map) {\n\t\tmap.set(`${this.path}____eq`, IR.new`__helios__common____eq${this.site}`);\n\t\tmap.set(`${this.path}____neq`, IR.new`__helios__common____neq${this.site}`);\n\t\tmap.set(`${this.path}__serialize`, IR.new`__helios__common__serialize${this.site}`);\n\t\tmap.set(`${this.path}____to_data`, IR.new`__helios__common__identity${this.site}`);\n\n\t\tmap.set(`${this.path}__test_data`, this.toIR_test_data());\n\t\tmap.set(`${this.path}__show`, this.toIR_show());\n\n\t\t// there could be circular dependencies here, which is ok\n\t\tif (config.CHECK_CASTS && !ctx.simplify) {\n\t\t\tmap.set(`${this.path}__from_data`, IR.new`(data) -> {\n\t\t\t\t(ignore) -> {\n\t\t\t\t\tdata\n\t\t\t\t}(\n\t\t\t\t\t__core__ifThenElse(\n\t\t\t\t\t\t${this.path}__test_data(data),\n\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t()\n\t\t\t\t\t\t},\n\t\t\t\t\t\t() -> {\n\t\t\t\t\t\t\t__core__trace(\"Warning: invalid ${this.name.toString()} data\", ())\n\t\t\t\t\t\t}\n\t\t\t\t\t)()\n\t\t\t\t)\n\t\t\t}${this.site}`);\n\t\t} else {\n\t\t\tmap.set(`${this.path}__from_data`, IR.new`__helios__common__identity${this.site}`);\n\t\t}\n\n\t\tmap.set(`${this.path}__from_data_safe`, IR.new`__helios__option__SOME_FUNC${this.site}`);\n\n\t\t// member __new and copy methods might depend on __to_data, so must be added after\n\t\tfor (let member of this.#members) {\n\t\t\tmember.toIR(ctx, map);\n\t\t}\n\n\t\tthis.#impl.toIR(ctx, map);\n\t}\n\n\t/**\n\t * @returns {string}\n\t */\n\ttoString() {\n\t\treturn `enum ${this.name.toString()}${this.#parameters.toString()} {${this.#members.map(m => m.toString()).join(\", \")}}`;\n\t}\n}\n\n/**\n * Impl statements, which add functions and constants to registry of user types (Struct, Enum Member and Enums)\n * @internal\n */\nexport class ImplDefinition {\n\t#selfTypeExpr;\n\t#statements;\n\n\t/**\n\t * @param {Expr} selfTypeExpr;\n\t * @param {(FuncStatement | ConstStatement)[]} statements \n\t */\n\tconstructor(selfTypeExpr, statements) {\n\t\tthis.#selfTypeExpr = selfTypeExpr;\n\t\tthis.#statements = statements;\n\t}\n\n\t/**\n\t * @type {Site}\n\t */\n\tget site() {\n\t\treturn this.#selfTypeExpr.site;\n\t}\n\n\t/**\n\t * @param {string} basePath \n\t */\n\tsetBasePath(basePath) {\n\t\tfor (let s of this.#statements) {\n\t\t\ts.setBasePath(basePath);\n\t\t}\n\t}\n\n\t/**\n\t * @returns {string}\n\t */\n\ttoString() {\n\t\treturn `${this.#statements.map(s => s.toString()).join(\"\\n\")}`;\n\t}\n\n\t/**\n\t * @param {Scope} scope \n\t * @returns {TypeMembers}\n\t */\n\tgenTypeMembers(scope) {\n\t\t/**\n\t\t * @type {TypeMembers}\n\t\t */\n\t\tconst typeMembers = {};\n\n\t\tfor (let s of this.#statements) {\n\t\t\tif (s instanceof ConstStatement) {\n\t\t\t\tconst s_ = s.evalType(scope);\n\t\t\t\tif (s_) {\n\t\t\t\t\ttypeMembers[s.name.value] = s_.toTyped();\n\t\t\t\t}\n\t\t\t} else if (!FuncStatement.isMethod(s)) {\n\t\t\t\tconst s_ = s.evalType(scope);\n\n\t\t\t\tif (s_) {\n\t\t\t\t\ttypeMembers[s.name.value] = s_;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn typeMembers;\n\t}\n\n\t/**\n\t * Doesn't add the common types\n\t * @param {Scope} scope \n\t * @returns {InstanceMembers}\n\t */\n\tgenInstanceMembers(scope) {\n\t\t/**\n\t\t * @type {InstanceMembers}\n\t\t */\n\t\tconst instanceMembers = {};\n\n\t\tfor (let s of this.#statements) {\n\t\t\tif (FuncStatement.isMethod(s)) {\n\t\t\t\tconst s_ = s.evalType(scope);\n\n\t\t\t\tif (s_) {\n\t\t\t\t\tinstanceMembers[s.name.value] = s_;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn instanceMembers;\n\t}\n\n\t/**\n\t * @param {Scope} scope \n\t */\n\teval(scope) {\n\t\tvoid this.#selfTypeExpr.eval(scope);\n\n\t\tfor (let s of this.#statements) {\n\t\t\tvoid s.evalInternal(scope);\n\t\t}\n\t}\n\n\t/**\n\t * @param {string} namespace \n\t * @param {(name: string, cs: ConstStatement) => void} callback \n\t */\n\tloopConstStatements(namespace, callback) {\n\t\tfor (let s of this.#statements) {\n\t\t\ts.loopConstStatements(namespace, callback);\n\t\t}\n\t}\n\t\n\t/**\n\t * Returns IR of all impl members\n\t * @param {ToIRContext} ctx\n\t * @param {IRDefinitions} map \n\t */\n\ttoIR(ctx, map) {\n\t\tfor (let s of this.#statements) {\n\t\t\ts.toIR(ctx, map);\n\t\t}\n\t}\n}\n\n\n//////////////////////////////////\n// Section 26: Helios AST building\n//////////////////////////////////\n\nconst AUTOMATIC_METHODS = [\n\t\"__eq\",\n\t\"__neq\",\n\t\"copy\",\n\t\"from_data\",\n\t\"test_data\",\n\t\"serialize\"\n];\n\n/**\n * @type {null | ((path: StringLiteral) => (string | null))}\n */\nlet importPathTranslator = null\n\n/**\n * Used by VSCode plugin and CLI\n * The sources can't be modified directly because that messes up the codemapping\n * @internal\n * @param {(path: StringLiteral) => (string | null)} fn \n */\nexport function setImportPathTranslator(fn) {\n\timportPathTranslator = fn\n}\n\n/**\n * @internal\n * @param {Token[]} ts\n * @returns {Statement[]}\n */\nexport function buildProgramStatements(ts) {\n\t/**\n\t * @type {Statement[]}\n\t */\n\tlet statements = [];\n\n\twhile (ts.length != 0) {\n\t\tconst t = ts.shift()?.assertWord();\n\n\t\tif (!t) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tconst kw = t.value;\n\n\t\t/**\n\t\t * @type {Statement | (Statement | null)[] | null}\n\t\t */\n\t\tlet s = null;\n\n\t\tif (kw == \"const\") {\n\t\t\ts = buildConstStatement(t.site, ts);\n\t\t} else if (kw == \"struct\") {\n\t\t\ts = buildStructStatement(t.site, ts);\n\t\t} else if (kw == \"func\") {\n\t\t\ts = buildFuncStatement(t.site, ts);\n\t\t} else if (kw == \"enum\") {\n\t\t\ts = buildEnumStatement(t.site, ts);\n\t\t} else if (kw == \"import\") {\n\t\t\ts = buildImportStatements(t.site, ts);\n\t\t} else {\n\t\t\tt.syntaxError(`invalid top-level keyword '${kw}'`);\n\t\t}\n\n\t\tif (s) {\n\t\t\tif (Array.isArray(s)) {\n\t\t\t\tfor (let s_ of s) {\n\t\t\t\t\tif (s_) {\n\t\t\t\t\t\tstatements.push(s_);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tstatements.push(s);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn statements;\n}\n\n/**\n * @internal\n * @param {Token[]} ts\n * @param {null | ScriptPurpose} expectedPurpose\n * @returns {[ScriptPurpose, Word] | null} - [purpose, name] (ScriptPurpose is an integer)\n * @internal\n */\nexport function buildScriptPurpose(ts, expectedPurpose = null) {\n\t// need at least 2 tokens for the script purpose\n\tif (ts.length < 2) {\n\n\t\tif (ts.length == 0) {\n\t\t\tSite.dummy().syntaxError(\"invalid script purpose syntax\");\n\t\t} else {\n\t\t\tts[0].syntaxError(\"invalid script purpose syntax\");\n\t\t\tts.splice(0);\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tconst purposeWord = ts.shift()?.assertWord();\n\n\tif (!purposeWord) {\n\t\treturn null;\n\t}\n\n\t/**\n\t * @type {ScriptPurpose | null}\n\t */\n\tlet purpose = null;\n\n\tif (purposeWord.isWord(\"spending\")) {\n\t\tpurpose = \"spending\";\n\t} else if (purposeWord.isWord(\"minting\")) {\n\t\tpurpose = \"minting\";\n\t} else if (purposeWord.isWord(\"staking\")) {\n\t\tpurpose = \"staking\";\n\t} else if (purposeWord.isWord(\"testing\")) { // 'test' is not reserved as a keyword though\n\t\tpurpose = \"testing\";\n\t} else if (purposeWord.isWord(\"endpoint\")) {\n\t\tpurpose = \"endpoint\";\n\t} else if (purposeWord.isWord(\"module\")) {\n\t\tpurpose = \"module\";\n\t} else if (purposeWord.isKeyword()) {\n\t\tpurposeWord.syntaxError(`script purpose missing`);\n\n\t\tts.unshift(purposeWord);\n\n\t\treturn null;\n\t} else {\n\t\tpurposeWord.syntaxError(`unrecognized script purpose '${purposeWord.value}' (expected 'testing', 'spending', 'staking', 'minting', 'endpoint' or 'module')`);\n\t\tpurpose = \"unknown\";\n\t}\n\n\tif (expectedPurpose !== null && purpose !== null) {\n\t\tif (expectedPurpose != purpose) {\n\t\t\tpurposeWord.syntaxError(`expected '${expectedPurpose}' script purpose`);\n\t\t}\n\t}\n\n\tconst name = assertToken(ts.shift(), purposeWord.site)?.assertWord()?.assertNotKeyword();\n\n\tif (!name) {\n\t\treturn null;\n\t}\n\n\tif (name.value === \"main\") {\n\t\tname.syntaxError(`${purposeWord.value} script can't be named 'main'`);\n\t}\n\n\treturn [purpose, name];\n}\n\n/**\n * Also used by VSCode plugin\n * @internal\n * @param {Token[]} ts \n * @param {null | ScriptPurpose} expectedPurpose \n * @returns {[null | ScriptPurpose, Word | null, Statement[], number]}\n */\nexport function buildScript(ts, expectedPurpose = null) {\n\tconst first = ts[0];\n\n\tconst purposeName = buildScriptPurpose(ts, expectedPurpose);\n\n\tconst statements = buildProgramStatements(ts);\n\n\tlet mainIdx = -1;\n\n\tconst [purpose, name] = purposeName !== null ? purposeName : [null, null];\n\n\tif (purpose != \"module\") {\n\t\tmainIdx = statements.findIndex(s => s.name.value === \"main\");\n\n\t\tif (mainIdx == -1) {\n\t\t\tif (name !== null) {\n\t\t\t\tfirst.site.merge(name.site).syntaxError(\"entrypoint 'main' not found\");\n\t\t\t} else {\n\t\t\t\tfirst.site.syntaxError(\"entrypoint 'main' not found\");\n\t\t\t}\n\t\t}\n\t}\n\n\treturn [purpose, name, statements, mainIdx];\n}\n\n/**\n * Quickly extract the script purpose header of a script source, by parsing only the minimally necessary characters.\n * @param {string} rawSrc \n * @returns {null | [ScriptPurpose, string]} Returns `null` if the script header is missing or syntactically incorrect. The first string returned is the script purpose, the second value returned is the script name.\n */\nexport function extractScriptPurposeAndName(rawSrc) {\n\ttry {\n\t\tlet src = new Source(rawSrc, \"\");\n\n\t\tlet tokenizer = new Tokenizer(src);\n\n\t\tlet gen = tokenizer.streamTokens();\n\n\t\t// Don't parse the whole script, just 'eat' 2 tokens: `<purpose> <name>`\n\t\tlet ts = [];\n\t\tfor (let i = 0; i < 2; i++) {\n\t\t\tlet yielded = gen.next();\n\t\t\tif (yielded.done) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tts.push(yielded.value);\n\t\t}\n\n\t\tconst purposeName = buildScriptPurpose(ts);\n\n\t\tsrc.throwErrors();\n\n\t\tif (purposeName !== null) {\n\t\t\tconst [purpose, name] = purposeName;\n\n\t\t\treturn [purpose, name.value];\n\t\t} else {\n\t\t\tthrow new Error(\"unexpected\"); // should've been caught above by calling src.throwErrors()\n\t\t}\n\t} catch (e) {\n\t\tif (!(e instanceof UserError)) {\n\t\t\tthrow e;\n\t\t} else {\n\t\t\treturn null;\n\t\t}\n\t}\n}\n\n/**\n * @internal\n * @param {Site} site \n * @param {Token[]} ts \n * @returns {ConstStatement | null}\n */\nfunction buildConstStatement(site, ts) {\n\tif (ts.length == 0) {\n\t\tsite.syntaxError(\"invalid syntax (expected name after 'const')\");\n\t\treturn null;\n\t}\n\n\tconst name = assertToken(ts.shift(), site)?.assertWord()?.assertNotKeyword();\n\n\tif (!name) {\n\t\treturn null;\n\t}\n\n\tif (!(ts.length > 0 && ts[0].isSymbol(\":\"))) {\n\t\tsite.merge(name.site).syntaxError(`expected type annotation after 'const ${name.value}'`);\n\t\tts.splice(0);\n\t\treturn null;\n\t}\n\n\tconst colon = assertDefined(ts.shift());\n\n\tlet equalsPos = SymbolToken.find(ts, \"=\");\n\tconst statementEndPos = Word.find(ts, [\"const\", \"func\", \"struct\", \"enum\", \"import\"]);\n\n\tlet typeEndPos = equalsPos;\n\n\tlet hasRhs = false;\n\n\tif (equalsPos == -1 && statementEndPos == -1) {\n\t\ttypeEndPos = ts.length;\n\t} else if (statementEndPos != -1 && (equalsPos == -1 || (equalsPos > statementEndPos))) {\n\t\ttypeEndPos = statementEndPos;\n\t} else if (equalsPos == 0) {\n\t\tcolon.site.merge(ts[0].site).syntaxError(\"expected type expression between ':' and '='\");\n\t\tts.shift();\n\t\treturn null;\n\t} else {\n\t\thasRhs = true;\n\t}\n\n\tlet endSite = ts[typeEndPos-1].site;\n\n\tconst typeExpr = buildTypeExpr(colon.site, ts.splice(0, typeEndPos));\n\tif (!typeExpr) {\n\t\treturn null;\n\t}\n\n\t/**\n\t * @type {null | Expr}\n\t */\n\tlet valueExpr = null;\n\n\tif (hasRhs) {\n\t\tconst maybeEquals = ts.shift();\n\n\t\tif (maybeEquals === undefined) {\n\t\t\tsite.merge(name.site).syntaxError(\"expected '=' after 'const'\");\n\t\t\tts.splice(0);\n\t\t\treturn null;\n\t\t} else if (!maybeEquals.isSymbol(\"=\")) {\n\t\t\tsite.merge(maybeEquals.site).syntaxError(\"expected '=' after 'const'\");\n\t\t\treturn null;\n\t\t} else {\n\t\t\tconst equals = maybeEquals.assertSymbol(\"=\");\n\n\t\t\tif (!equals) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tconst nextStatementPos = Word.find(ts, [\"const\", \"func\", \"struct\", \"enum\", \"import\"]);\n\n\t\t\tconst tsValue = nextStatementPos == -1 ? ts.splice(0) : ts.splice(0, nextStatementPos);\n\n\t\t\tif (tsValue.length == 0) {\n\t\t\t\tequals.syntaxError(\"expected expression after '='\");\n\t\t\t\treturn null;\n\t\t\t} else {\n\t\t\t\tendSite = tsValue[tsValue.length-1].site;\n\n\t\t\t\tvalueExpr = buildValueExpr(tsValue);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn new ConstStatement(site.merge(endSite), name, typeExpr, valueExpr);\n}\n\n/**\n * @param {Site} site \n * @param {Token[]} ts \n * @returns {RefExpr | null}\n */\nfunction buildTypeClassExpr(site, ts) {\n\tconst name = assertToken(ts.shift(), site, \"expected word\")?.assertWord()?.assertNotKeyword();\n\tif (!name) {\n\t\treturn null;\n\t}\n\n\treturn new RefExpr(name);\n}\n\n/**\n * @param {Site} site \n * @param {Token[]} ts \n * @returns {null | TypeParameter}\n */\nfunction buildTypeParameter(site, ts) {\n\tconst name = assertToken(ts.shift(), site, \"expected type parameter name\")?.assertWord()?.assertNotKeyword() ?? null;\n\tif (!name) {\n\t\treturn null;\n\t}\n\n\tconst maybeColon = ts.shift();\n\tif (!maybeColon) {\n\t\treturn new TypeParameter(name, null);\n\t}\n\n\tconst colon = maybeColon.assertSymbol(\":\");\n\tif (!colon) {\n\t\treturn null;\n\t}\n\n\tconst typeClassExpr = buildTypeClassExpr(site, ts);\n\tif (!typeClassExpr) {\n\t\treturn null;\n\t}\n\n\tif (ts.length > 0) {\n\t\tts[0].syntaxError(\"unexpected token\");\n\t\treturn null;\n\t}\n\n\treturn new TypeParameter(name, typeClassExpr);\n}\n\n/**\n * @param {Token[]} ts \n * @param {boolean} isForFunc\n * @returns {TypeParameters}\n */\nfunction buildTypeParameters(ts, isForFunc) {\n\tif (ts.length > 0 && ts[0].isGroup(\"[\")) {\n\t\tconst brackets = assertDefined(ts.shift()).assertGroup(\"[\");\n\n\t\tif (brackets) {\n\t\t\t/**\n\t\t\t * @type {TypeParameter[] | null}\n\t\t\t */\n\t\t\tconst params = reduceNull(brackets.fields.map(fts => {\n\t\t\t\treturn buildTypeParameter(brackets.site, fts);\n\t\t\t}));\n\n\t\t\tif (params) {\n\t\t\t\treturn new TypeParameters(params, isForFunc);\n\t\t\t}\t\t\t\n\t\t}\n\t}\n\n\treturn new TypeParameters([], isForFunc);\n}\n\n/**\n * @internal\n * @param {Token[]} ts\n * @returns {[Token[], Token[]]}\n */\nfunction splitDataImpl(ts) {\n\tconst implPos = Word.find(ts, [\"const\", \"func\"]);\n\n\tif (implPos == -1) {\n\t\treturn [ts, []];\n\t} else {\n\t\treturn [ts.slice(0, implPos), ts.slice(implPos)];\n\t}\n}\n\n\n/**\n * @internal\n * @param {Site} site \n * @param {Token[]} ts \n * @returns {StructStatement | null}\n */\nfunction buildStructStatement(site, ts) {\n\tconst maybeName = assertToken(ts.shift(), site, \"expected name after 'struct'\");\n\tif (!maybeName) {\n\t\treturn null;\n\t}\n\n\tconst name = maybeName.assertWord()?.assertNotKeyword();\n\tif (!name) {\n\t\treturn null;\n\t}\n\n\tconst parameters = buildTypeParameters(ts, false);\n\n\tconst maybeBraces = assertToken(ts.shift(), name.site, `expected '{...}' after 'struct ${name.toString()}'`);\n\tif (!maybeBraces) {\n\t\treturn null;\n\t}\n\n\tif (!maybeBraces.isGroup(\"{\", 1)) {\n\t\tmaybeBraces.syntaxError(\"expected non-empty '{..}' without separators\");\n\t\treturn null;\n\t}\n\n\tconst braces = maybeBraces.assertGroup(\"{\", 1);\n\n\tif (!braces) {\n\t\treturn null;\n\t}\n\n\tconst [tsFields, tsImpl] = splitDataImpl(braces.fields[0]);\n\n\tconst fields = buildDataFields(tsFields, true);\n\n\t/**\n\t * @type {Expr}\n\t */\n\tlet selfTypeExpr = new RefExpr(name);\n\n\tif (parameters.hasParameters()) {\n\t\tselfTypeExpr = new ParametricExpr(\n\t\t\tselfTypeExpr.site, \n\t\t\tselfTypeExpr,\n\t\t\tparameters.parameterNames.map(n => new RefExpr(new Word(selfTypeExpr.site, n)))\n\t\t)\n\t}\n\n\tconst impl = buildImplDefinition(tsImpl, selfTypeExpr, fields.map(f => f.name), braces.site.endSite);\n\n\tif (impl === null) {\n\t\treturn null;\n\t} else {\n\t\treturn new StructStatement(site.merge(braces.site), name, parameters, fields, impl);\n\t}\n}\n\n/**\n * @internal\n * @param {Token[]} ts \n * @param {boolean} allowTags\n * @returns {DataField[]}\n */\nfunction buildDataFields(ts, allowTags = false) {\n\t/** @type {DataField[]} */\n\tconst fields = []\n\n\t/**\n\t * @param {Word} fieldName\n\t */\n\tfunction assertUnique(fieldName) {\n\t\tif (fields.findIndex(f => f.name.toString() == fieldName.toString()) != -1) {\n\t\t\tfieldName.typeError(`duplicate field \\'${fieldName.toString()}\\'`);\n\t\t}\n\t}\n\n\t/**\n\t * @type {Map<string, StringLiteral>}\n\t */\n\tconst tags = new Map()\n\n\twhile (ts.length > 0) {\n\t\tconst colonPos = SymbolToken.find(ts, \":\");\n\n\t\tif (colonPos == -1) {\n\t\t\tts[0].site.merge(ts[ts.length-1].site).syntaxError(\"expected ':' in data field\");\n\t\t\treturn fields;\n\t\t}\n\n\t\tconst colon = ts[colonPos];\n\t\tconst tsBef = ts.slice(0, colonPos);\n\t\tconst tsAft = ts.slice(colonPos+1);\n\t\tconst maybeFieldName = tsBef.shift();\n\t\tif (maybeFieldName === undefined) {\n\t\t\tcolon.syntaxError(\"expected word before ':'\");\n\t\t\tcontinue;\n\t\t} else {\n\t\t\tconst fieldName = maybeFieldName?.assertWord()?.assertNotKeyword();\n\n\t\t\tif (!fieldName) {\n\t\t\t\treturn fields;\n\t\t\t}\n\n\t\t\tassertUnique(fieldName);\n\n\t\t\tif (tsAft.length == 0) {\n\t\t\t\tcolon.syntaxError(\"expected type expression after ':'\");\n\t\t\t\treturn fields;\n\t\t\t}\n\n\t\t\tconst nextColonPos = SymbolToken.find(tsAft, \":\");\n\n\t\t\tif (nextColonPos != -1) {\n\t\t\t\tif (nextColonPos == 0) {\n\t\t\t\t\ttsAft[nextColonPos].syntaxError(\"expected word before ':'\");\n\t\t\t\t\treturn fields;\n\t\t\t\t}\n\n\t\t\t\tvoid tsAft[nextColonPos-1].assertWord();\n\n\t\t\t\tts = tsAft.splice(nextColonPos-1);\n\t\t\t} else {\n\t\t\t\tts = [];\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * @type {null | StringLiteral}\n\t\t\t */\n\t\t\tlet tag = null;\n\n\t\t\tif (allowTags && tsAft.length > 0 && tsAft[tsAft.length - 1] instanceof StringLiteral) {\n\t\t\t\ttag = assertClass(tsAft.pop(), StringLiteral);\n\n\t\t\t\tif (tags.has(tag.value)) {\n\t\t\t\t\ttag.syntaxError(`duplicate field tag \"${tag.value}\"`);\n\t\t\t\t\treturn fields;\n\t\t\t\t}\n\n\t\t\t\ttags.set(tag.value, tag)\n\t\t\t} else {\n\t\t\t\tif (tags.has(fieldName.value)) {\n\t\t\t\t\tfieldName.syntaxError(`duplicate field tag \"${fieldName.value}\" (default taken from field name)`);\n\t\t\t\t\treturn fields;\n\t\t\t\t}\n\t\t\t\ttags.set(fieldName.value, new StringLiteral(fieldName.site, fieldName.value));\n\n\t\t\t}\n\n\t\t\tconst typeExpr = buildTypeExpr(colon.site, tsAft);\n\n\t\t\tif (!typeExpr) {\n\t\t\t\treturn fields;\n\t\t\t}\n\n\t\t\tfields.push(new DataField(fieldName, typeExpr, tag));\n\t\t}\n\t}\n\n\treturn fields;\n}\n\n/**\n * @internal\n * @param {Site} site \n * @param {Token[]} ts \n * @param {null | Expr} methodOf - methodOf !== null then first arg can be named 'self'\n * @returns {FuncStatement | null}\n */\nfunction buildFuncStatement(site, ts, methodOf = null) {\n\tconst name = assertToken(ts.shift(), site)?.assertWord()?.assertNotKeyword();\n\n\tif (!name) {\n\t\treturn null;\n\t}\n\n\tif (ts.length == 0) {\n\t\tname.site.syntaxError(\"invalid syntax\");\n\t\treturn null;\n\t}\n\n\tconst parameters = buildTypeParameters(ts, true);\n\n\tconst fnExpr = buildFuncLiteralExpr(ts, methodOf, false);\n\n\tif (!fnExpr) {\n\t\treturn null;\n\t}\n\n\treturn new FuncStatement(site.merge(fnExpr.site), name, parameters, fnExpr);\n}\n\n/**\n * @internal\n * @param {Token[]} ts \n * @param {null | Expr} methodOf - methodOf !== null then first arg can be named 'self'\n * @param {boolean} allowInferredRetType\n * @returns {FuncLiteralExpr | null}\n */\nfunction buildFuncLiteralExpr(ts, methodOf = null, allowInferredRetType = false) {\n\tconst parens = assertDefined(ts.shift()).assertGroup(\"(\");\n\tif (!parens) {\n\t\treturn null;\n\t}\n\n\tconst site = parens.site;\n\tconst args = buildFuncArgs(parens, methodOf);\n\n\tconst arrow = assertToken(ts.shift(), site)?.assertSymbol(\"->\");\n\tif (!arrow) {\n\t\treturn null;\n\t}\n\n\tconst bodyPos = Group.find(ts, \"{\");\n\n\tif (bodyPos == -1) {\n\t\tsite.syntaxError(\"no function body\");\n\t\treturn null;\n\t} else if (bodyPos == 0 && !allowInferredRetType) {\n\t\tsite.syntaxError(\"no return type specified\");\n\t}\n\n\tconst retTypeExpr = buildFuncRetTypeExpr(arrow.site, ts.splice(0, bodyPos), allowInferredRetType);\n\n\tconst bodyGroup = assertToken(ts.shift(), site)?.assertGroup(\"{\", 1)\n\n\tif (!bodyGroup) {\n\t\treturn null;\n\t}\n\n\tconst bodyExpr = buildValueExpr(bodyGroup.fields[0]);\n\n\tif (!bodyExpr) {\n\t\treturn null;\n\t}\n\n\treturn new FuncLiteralExpr(arrow.site, args, retTypeExpr, bodyExpr);\n}\n\n/**\n * @internal\n * @param {Group} parens \n * @param {null | Expr} methodOf - methodOf !== nul then first arg can be named 'self'\n * @returns {FuncArg[]}\n */\nfunction buildFuncArgs(parens, methodOf = null) {\n\t/** @type {FuncArg[]} */\n\tconst args = [];\n\n\tlet hasDefaultArgs = false;\n\n\tfor (let i = 0; i < parens.fields.length; i++) {\n\t\tconst f = parens.fields[i];\n\t\tconst ts = f.slice();\n\n\t\tconst name = assertToken(ts.shift(), parens.site)?.assertWord();\n\n\t\tif (!name) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (name.toString() == \"self\") {\n\t\t\tif (i != 0 || methodOf === null) {\n\t\t\t\tname.syntaxError(\"'self' is reserved\");\n\t\t\t} else {\n\t\t\t\tif (ts.length > 0) {\n\t\t\t\t\tif (ts[0].isSymbol(\":\")) {\n\t\t\t\t\t\tts[0].syntaxError(\"unexpected type expression after 'self'\");\n\t\t\t\t\t} else {\n\t\t\t\t\t\tts[0].syntaxError(\"unexpected token\");\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\targs.push(new FuncArg(name, methodOf));\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (name.toString() == \"_\") {\n\t\t\tif (ts.length > 0) {\n\t\t\t\tif (ts[0].isSymbol(\":\")) {\n\t\t\t\t\tts[0].syntaxError(\"unexpected type expression after '_'\");\n\t\t\t\t} else {\n\t\t\t\t\tts[0].syntaxError(\"unexpected token\");\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\targs.push(new FuncArg(name, methodOf));\n\t\t\t}\n\t\t} else {\n\t\t\tif (name.isKeyword()) {\n\t\t\t\tname.syntaxError(\"unexpected keyword\");\n\t\t\t}\n\n\t\t\tfor (let prev of args) {\n\t\t\t\tif (prev.name.toString() == name.toString()) {\n\t\t\t\t\tname.syntaxError(`duplicate argument '${name.toString()}'`);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst maybeColon = ts.shift();\n\t\t\tif (maybeColon === undefined) {\n\t\t\t\tname.syntaxError(`expected ':' after '${name.toString()}'`);\n\t\t\t} else {\n\t\t\t\tconst colon = maybeColon.assertSymbol(\":\");\n\n\t\t\t\tif (!colon) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tconst equalsPos = SymbolToken.find(ts, \"=\");\n\n\t\t\t\t/**\n\t\t\t\t * @type {null | Expr}\n\t\t\t\t */\n\t\t\t\tlet defaultValueExpr = null;\n\n\t\t\t\tif (equalsPos != -1) {\n\t\t\t\t\tif (equalsPos == ts.length-1) {\n\t\t\t\t\t\tts[equalsPos].syntaxError(\"expected expression after '='\");\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconst vts = ts.splice(equalsPos);\n\n\t\t\t\t\t\tvts.shift()?.assertSymbol(\"=\");\n\t\t\t\t\t\t\n\t\t\t\t\t\tdefaultValueExpr = buildValueExpr(vts);\n\n\t\t\t\t\t\thasDefaultArgs = true;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (hasDefaultArgs) {\n\t\t\t\t\t\tname.syntaxError(\"positional args must come before default args\");\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t/**\n\t\t\t\t * @type {null | Expr}\n\t\t\t\t */\n\t\t\t\tlet typeExpr = null;\n\n\t\t\t\tif (ts.length == 0) {\n\t\t\t\t\tcolon.syntaxError(\"expected type expression after ':'\");\n\t\t\t\t} else {\n\t\t\t\t\ttypeExpr = buildTypeExpr(colon.site, ts);\n\t\t\t\t}\n\n\t\t\t\targs.push(new FuncArg(name, typeExpr, defaultValueExpr));\n\t\t\t}\n\t\t}\n\t}\n\n\treturn args;\n}\n\n/**\n * @internal\n * @param {Site} site \n * @param {Token[]} ts \n * @returns {EnumStatement | null}\n */\nfunction buildEnumStatement(site, ts) {\n\tconst name = assertToken(ts.shift(), site, \"expected word after 'enum'\")?.assertWord()?.assertNotKeyword();\n\tif (!name) {\n\t\treturn null;\n\t}\n\n\tconst parameters = buildTypeParameters(ts, false);\n\n\tconst braces = assertToken(ts.shift(), name.site, `expected '{...}' after 'enum ${name.toString()}'`)?.assertGroup(\"{\", 1);\n\n\tif (!braces) {\n\t\treturn null;\n\t}\n\n\tconst [tsMembers, tsImpl] = splitDataImpl(braces.fields[0]);\n\n\tif (tsMembers.length == 0) {\n\t\tbraces.syntaxError(\"expected at least one enum member\");\n\t}\n\n\t/** @type {EnumMember[]} */\n\tconst members = [];\n\n\twhile (tsMembers.length > 0) {\n\t\tconst member = buildEnumMember(tsMembers);\n\n\t\tif (!member) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tmembers.push(member);\n\t}\n\n\t/**\n\t * @type {Expr}\n\t */\n\tlet selfTypeExpr = new RefExpr(name);\n\n\tif (parameters.hasParameters()) {\n\t\tselfTypeExpr = new ParametricExpr(\n\t\t\tselfTypeExpr.site, \n\t\t\tselfTypeExpr,\n\t\t\tparameters.parameterNames.map(n => new RefExpr(new Word(selfTypeExpr.site, n)))\n\t\t)\n\t}\n\n\tconst impl = buildImplDefinition(tsImpl, selfTypeExpr, members.map(m => m.name), braces.site.endSite);\n\n\tif (!impl) {\n\t\treturn null;\n\t}\n\n\treturn new EnumStatement(site.merge(braces.site), name, parameters, members, impl);\n}\n\n/**\n * @internal\n * @param {Site} site \n * @param {Token[]} ts \n * @returns {(ImportFromStatement | ImportModuleStatement | null)[] | null}\n */\nfunction buildImportStatements(site, ts) {\n\tconst t = assertToken(ts.shift(), site, \"expected '{...}' or Word after 'import'\");\n\tif (!t) {\n\t\treturn null;\n\t}\n\n\tif (t.isWord()) {\n\t\tconst statement = buildImportModuleStatement(site, t);\n\n\t\tif (!statement) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn [statement];\n\t} else {\n\t\treturn buildImportFromStatements(site, t, ts);\n\t}\n}\n\n/**\n * @param {Site} site \n * @param {Token} maybeName \n * @returns {ImportModuleStatement | null}\n */\nfunction buildImportModuleStatement(site, maybeName) {\n\t/**\n\t * @type {Word | null}\n\t */\n\tlet moduleName = null;\n\n\tif (maybeName instanceof StringLiteral && importPathTranslator) {\n\t\tconst translated = importPathTranslator(maybeName);\n\t\tif (!translated) {\n\t\t\treturn null;\n\t\t}\n\n\t\tmoduleName = new Word(maybeName.site, translated);\n\t} else {\n\t\tmoduleName = maybeName.assertWord()?.assertNotKeyword() ?? null;\n\t}\n\n\tif (!moduleName) {\n\t\treturn null;\n\t}\n\n\treturn new ImportModuleStatement(site, moduleName);\n}\n\n/**\n * \n * @param {Site} site \n * @param {Token} maybeBraces \n * @param {Token[]} ts \n * @returns {(ImportFromStatement | null)[] | null}\n */\nfunction buildImportFromStatements(site, maybeBraces, ts) {\n\tconst braces = maybeBraces.assertGroup(\"{\");\n\tif (!braces) {\n\t\treturn null;\n\t}\n\n\tconst maybeFrom = assertToken(ts.shift(), maybeBraces.site, \"expected 'from' after 'import {...}'\")?.assertWord(\"from\");\n\tif (!maybeFrom) {\n\t\treturn null;\n\t}\n\n\tconst maybeModuleName = assertToken(ts.shift(), maybeFrom.site, \"expected module name after 'import {...} from'\");\n\tif (!maybeModuleName) {\n\t\treturn null;\n\t}\n\n\t/**\n\t * @type {null | undefined | Word}\n\t */\n\tlet moduleName = null;\n\n\tif (maybeModuleName instanceof StringLiteral && importPathTranslator) {\n\t\tconst translated = importPathTranslator(maybeModuleName);\n\n\t\tif (!translated) {\n\t\t\treturn null;\n\t\t}\n\n\t\tmoduleName = new Word(maybeModuleName.site, translated);\n\t} else {\n\t\tmoduleName = maybeModuleName.assertWord()?.assertNotKeyword();\n\t}\n\n\tif (!moduleName) {\n\t\treturn null;\n\t}\n\n\tconst mName = moduleName;\n\n\tif (braces.fields.length === 0) {\n\t\tbraces.syntaxError(\"expected at least 1 import field\");\n\t}\n\n\treturn braces.fields.map(fts => {\n\t\tconst ts = fts.slice();\n\t\tconst maybeOrigName = ts.shift();\n\n\t\tif (maybeOrigName === undefined) {\n\t\t\tbraces.syntaxError(\"empty import field\");\n\t\t\treturn null;\n\t\t} else {\n\t\t\tconst origName = maybeOrigName.assertWord();\n\n\t\t\tif (!origName) {\n\t\t\t\treturn null;\n\t\t\t} else if (ts.length === 0) {\n\t\t\t\treturn new ImportFromStatement(site, origName, origName, mName);\n\t\t\t} else {\n\t\t\t\tconst maybeAs = ts.shift();\n\n\t\t\t\tif (maybeAs === undefined) {\n\t\t\t\t\tmaybeOrigName.syntaxError(`expected 'as' or nothing after '${origName.value}'`);\n\t\t\t\t\treturn null;\n\t\t\t\t} else {\n\t\t\t\t\tmaybeAs.assertWord(\"as\");\n\n\t\t\t\t\tconst maybeNewName = ts.shift();\n\n\t\t\t\t\tif (maybeNewName === undefined) {\n\t\t\t\t\t\tmaybeAs.syntaxError(\"expected word after 'as'\");\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconst newName = maybeNewName.assertWord();\n\n\t\t\t\t\t\tif (!newName) {\n\t\t\t\t\t\t\treturn null;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst rem = ts.shift();\n\t\t\t\t\t\tif (rem !== undefined) {\n\t\t\t\t\t\t\trem.syntaxError(\"unexpected token\");\n\t\t\t\t\t\t\treturn null;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn new ImportFromStatement(site, newName, origName, mName);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}).filter(f => f !== null)\n}\n\n/**\n * @internal\n * @param {Token[]} ts \n * @returns {EnumMember | null}\n */\nfunction buildEnumMember(ts) {\n\tconst name = assertDefined(ts.shift()).assertWord()?.assertNotKeyword();\n\n\tif (!name) {\n\t\treturn null;\n\t} else if (ts.length == 0 || ts[0].isWord()) {\n\t\treturn new EnumMember(name, []);\n\t} else {\n\t\tconst braces = assertToken(ts.shift(), name.site)?.assertGroup(\"{\", 1);\n\n\t\tif (!braces) {\n\t\t\treturn null;\n\t\t} else {\n\t\t\tconst fields = buildDataFields(braces.fields[0]);\n\n\t\t\treturn new EnumMember(name, fields);\n\t\t}\n\t}\n}\n\n/** \n * @internal\n * @param {Token[]} ts \n * @param {Expr} selfTypeExpr - reference to parent type\n * @param {Word[]} fieldNames - to check if impl statements have a unique name\n * @param {?Site} endSite\n * @returns {ImplDefinition | null}\n */\nfunction buildImplDefinition(ts, selfTypeExpr, fieldNames, endSite) {\n\t/**\n\t * @param {Word} name\n\t * @returns {boolean}\n\t */\n\tfunction isNonAuto(name) {\n\t\tif (AUTOMATIC_METHODS.findIndex(n => n == name.toString()) != -1) {\n\t\t\tname.syntaxError(`'${name.toString()}' is a reserved member`);\n\t\t\treturn false;\n\t\t} else {\n\t\t\treturn true;\n\t\t}\n\t}\n\n\tfor (let fieldName of fieldNames) {\n\t\tif (!isNonAuto(fieldName)) {\n\t\t\treturn null;\n\t\t}\n\t}\n\n\tconst statements = buildImplMembers(ts, selfTypeExpr);\n\n\t/** \n\t * @param {number} i\n\t * @returns {boolean} - ok\n\t */\n\tfunction isUnique(i) {\n\t\tlet s = statements[i];\n\n\t\tisNonAuto(s.name);\n\n\t\tfor (let fieldName of fieldNames) {\n\t\t\tif (fieldName.toString() == s.name.toString()) {\n\t\t\t\ts.name.syntaxError(`'${s.name.toString()}' is duplicate`);\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\tfor (let j = i+1; j < statements.length; j++) {\n\t\t\tif (statements[j].name.toString() == s.name.toString()) {\n\t\t\t\tstatements[j].name.syntaxError(`'${s.name.toString()}' is duplicate`);\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tconst n = statements.length;\n\n\tfor (let i = 0; i < n; i++) {\n\t\tif (!isUnique(i)) {\n\t\t\treturn null;\n\t\t}\n\t}\n\n\tif (n > 0 && endSite !== null) {\n\t\tstatements[n-1].site.setEndSite(endSite);\n\t}\n\n\treturn new ImplDefinition(selfTypeExpr, statements);\n}\n\n/**\n * @internal\n * @param {Token[]} ts \n * @param {Expr} methodOf\n * @returns {(ConstStatement | FuncStatement)[]}\n */\nfunction buildImplMembers(ts, methodOf) {\n\t/** @type {(ConstStatement | FuncStatement)[]} */\n\tconst statements = [];\n\n\twhile (ts.length != 0) {\n\t\tconst t = assertDefined(ts.shift()).assertWord();\n\n\t\tif (!t) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tconst kw = t.value;\n\n\t\t/**\n\t\t * @type {null | ConstStatement | FuncStatement}\n\t\t */\n\t\tlet s = null;\n\n\t\tif (kw == \"const\") {\n\t\t\ts = buildConstStatement(t.site, ts);\n\t\t} else if (kw == \"func\") {\n\t\t\ts = buildFuncStatement(t.site, ts, methodOf);\n\t\t} else {\n\t\t\tt.syntaxError(\"invalid impl syntax\");\n\t\t}\n\n\t\tif (s) {\n\t\t\tstatements.push(s);\n\t\t}\n\t}\n\n\treturn statements\n}\n\n/**\n * TODO: chain like value\n * @internal\n * @param {Site} site\n * @param {Token[]} ts \n * @returns {Expr | null}\n */\nfunction buildTypeExpr(site, ts) {\n\tif (ts.length == 0) {\n\t\tsite.syntaxError(\"expected token\");\n\t\treturn null;\n\t}\n\n\tif (ts[0].isGroup(\"[\")) {\n\t\treturn buildListTypeExpr(site, ts);\n\t} else if (ts[0].isWord(\"Map\")) {\n\t\treturn buildMapTypeExpr(site, ts);\n\t} else if (ts[0].isWord(\"Option\")) {\n\t\treturn buildOptionTypeExpr(site, ts);\n\t} else if (ts[0].isWord(\"Iterator\")) {\n\t\treturn buildIteratorTypeExpr(site, ts);\n\t} else if (ts.length > 1 && ts[0].isGroup(\"(\") && ts[1].isSymbol(\"->\")) {\n\t\treturn buildFuncTypeExpr(site, ts);\n\t} else if (ts.length > 2 && ts[0].isGroup(\"[\") && ts[1].isGroup(\"(\") && ts[2].isSymbol(\"->\")) {\n\t\treturn buildFuncTypeExpr(site, ts);\n\t} else if (SymbolToken.find(ts, \"::\") > Group.find(ts, \"[\")) {\n\t\treturn buildTypePathExpr(site, ts);\n\t} else if (Group.find(ts, \"[\") > SymbolToken.find(ts, \"::\")) {\n\t\treturn buildParametricTypeExpr(site, ts);\n\t} else if (ts.length == 1 && ts[0].isWord()) {\n\t\treturn buildTypeRefExpr(site, ts);\n\t} else if (ts.length == 1 && ts[0].isGroup(\"(\")) {\n\t\treturn buildTupleTypeExpr(ts[0]);\n\t} else {\n\t\tts[0].syntaxError(\"invalid type syntax\");\n\t\treturn null;\n\t}\n}\n\n/**\n * @param {Site} site\n * @param {Token[]} ts \n * @returns {ParametricExpr | null}\n */\nfunction buildParametricTypeExpr(site, ts) {\n\tconst brackets = assertToken(ts.pop(), site)?.assertGroup(\"[\");\n\tif (!brackets) {\n\t\treturn null;\n\t}\n\n\tconst baseExpr = buildTypeExpr(brackets.site, ts);\n\tif (!baseExpr) {\n\t\treturn null;\n\t}\n\n\tconst typeExprs = reduceNull(brackets.fields.map(fts => {\n\t\treturn buildTypeExpr(brackets.site, fts);\n\t}));\n\n\tif (!typeExprs) {\n\t\treturn null;\n\t}\n\n\treturn new ParametricExpr(brackets.site, baseExpr, typeExprs);\n}\n\n/**\n * @internal\n * @param {Site} site\n * @param {Token[]} ts \n * @returns {ListTypeExpr | null}\n */\nfunction buildListTypeExpr(site, ts) {\n\tconst brackets = assertToken(ts.shift(), site)?.assertGroup(\"[\", 0);\n\n\tif (!brackets) {\n\t\treturn null\n\t}\n\n\tconst itemTypeExpr = buildTypeExpr(brackets.site, ts);\n\n\tif (!itemTypeExpr) {\n\t\treturn null;\n\t}\n\n\treturn new ListTypeExpr(brackets.site, itemTypeExpr);\n}\n\n/**\n * @internal\n * @param {Site} site\n * @param {Token[]} ts \n * @returns {MapTypeExpr | null}\n */\nfunction buildMapTypeExpr(site, ts) {\n\tconst kw = assertToken(ts.shift(), site)?.assertWord(\"Map\");\n\n\tif (!kw) {\n\t\treturn null;\n\t}\n\n\tconst maybeKeyTypeExpr = assertToken(ts.shift(), kw.site, \"missing Map key-type\");\n\n\tif (!maybeKeyTypeExpr) {\n\t\treturn null;\n\t}\n\n\tconst keyTypeTs = maybeKeyTypeExpr.assertGroup(\"[\", 1)?.fields[0];\n\tif (keyTypeTs === null || keyTypeTs === undefined) {\n\t\treturn null;\n\t} else if (keyTypeTs.length == 0) {\n\t\tkw.syntaxError(\"missing Map key-type (brackets can't be empty)\");\n\t\treturn null;\n\t} \n\n\tconst keyTypeExpr = buildTypeExpr(kw.site, keyTypeTs);\n\tif (!keyTypeExpr) {\n\t\treturn null;\n\t}\n\n\tif (ts.length == 0) {\n\t\tkw.syntaxError(\"missing Map value-type\");\n\t\treturn null;\n\t} \n\n\tconst valueTypeExpr = buildTypeExpr(kw.site, ts);\n\n\tif (!valueTypeExpr) {\n\t\treturn null;\n\t}\n\n\treturn new MapTypeExpr(kw.site, keyTypeExpr, valueTypeExpr);\n}\n\n/**\n * @internal\n * @param {Site} site\n * @param {Token[]} ts \n * @returns {Expr | null}\n */\nfunction buildOptionTypeExpr(site, ts) {\n\tconst kw = assertToken(ts.shift(), site)?.assertWord(\"Option\");\n\n\tif (!kw) {\n\t\treturn null;\n\t}\n\n\tconst typeTs = assertToken(ts.shift(), kw.site)?.assertGroup(\"[\", 1)?.fields[0];\n\n\tif (!typeTs) {\n\t\treturn null;\n\t}\n\n\tconst someTypeExpr = buildTypeExpr(kw.site, typeTs);\n\tif (!someTypeExpr) {\n\t\treturn null;\n\t}\n\n\tconst typeExpr = new OptionTypeExpr(kw.site, someTypeExpr);\n\tif (ts.length > 0) {\n\t\tif (ts[0].isSymbol(\"::\") && ts[1].isWord([\"Some\", \"None\"])) {\n\t\t\tif (ts.length > 2) {\n\t\t\t\tts[2].syntaxError(\"unexpected token\");\n\t\t\t\treturn null;\n\t\t\t} else {\n\t\t\t\tconst memberName = ts[1].assertWord()\n\n\t\t\t\tif (!memberName) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\n\t\t\t\treturn new PathExpr(ts[0].site, typeExpr, memberName);\n\t\t\t}\n\t\t} else {\n\t\t\tts[0].syntaxError(\"invalid option type syntax\");\n\t\t\treturn null;\n\t\t}\n\t} else {\n\t\treturn typeExpr;\n\t}\n}\n\n/**\n * @internal\n * @param {Site} site\n * @param {Token[]} ts\n * @returns {IteratorTypeExpr | null}\n */\nfunction buildIteratorTypeExpr(site, ts) {\n\tconst kw = assertToken(ts.shift(), site)?.assertWord(\"Iterator\");\n\n\tif (!kw) {\n\t\treturn null;\n\t}\n\n\tconst maybeGroup = assertToken(ts.shift(), kw.site, \"missing Map key-type\");\n\n\tif (!maybeGroup) {\n\t\treturn null;\n\t}\n\n\tconst group = maybeGroup.assertGroup(\"[\");\n\tif (!group) {\n\t\treturn null;\n\t}\n\t\n\tconst typeArgs = reduceNull(group.fields.map(gts => {\n\t\treturn buildTypeExpr(group.site, gts);\n\t}));\n\n\tif (!typeArgs) {\n\t\treturn null;\n\t}\n\n\tif (typeArgs.length < 1) {\n\t\tthrow group.site.typeError(\"expected at least one type arg for Iterator[...]\");\n\t}\n\n\treturn new IteratorTypeExpr(kw.site, typeArgs);\n}\n\n/**\n * @internal\n * @param {Site} site\n * @param {Token[]} ts \n * @returns {FuncTypeExpr | null}\n */\nfunction buildFuncTypeExpr(site, ts) {\n\tconst parens = assertToken(ts.shift(), site)?.assertGroup(\"(\");\n\tif (!parens) {\n\t\treturn null;\n\t}\n\n\tlet hasOptArgs = false;\n\n\tconst argTypes = reduceNull(parens.fields.map(f => {\n\t\tconst fts = f.slice();\n\n\t\tif (fts.length == 0) {\n\t\t\tparens.syntaxError(\"expected func arg type\");\n\t\t\treturn null;\n\t\t}\n\n\t\tconst funcArgTypeExpr = buildFuncArgTypeExpr(fts[0].site, fts);\n\n\t\tif (!funcArgTypeExpr) {\n\t\t\treturn null;\n\t\t}\n\n\t\tif (hasOptArgs) {\n\t\t\tif (!funcArgTypeExpr.isOptional()) {\n\t\t\t\tfuncArgTypeExpr.syntaxError(\"optional arguments must come last\");\n\t\t\t\treturn null;\n\t\t\t}\n\t\t} else {\n\t\t\tif (funcArgTypeExpr.isOptional()) {\n\t\t\t\thasOptArgs = true;\n\t\t\t}\n\t\t}\n\n\t\treturn funcArgTypeExpr;\n\t}));\n\n\tif (!argTypes) {\n\t\treturn null;\n\t} \n\n\tif (argTypes.some(at => at.isNamed()) && argTypes.some(at => !at.isNamed())) {\n\t\targTypes[0].syntaxError(\"can't mix named and unnamed args in func type\");\n\t\treturn null;\n\t}\n\n\tconst arrow = assertToken(ts.shift(), parens.site)?.assertSymbol(\"->\");\n\n\tif (!arrow) {\n\t\treturn null;\n\t}\n\n\tconst retType = buildFuncRetTypeExpr(arrow.site, ts, false);\n\n\tif (!retType) {\n\t\treturn null;\n\t}\n\n\treturn new FuncTypeExpr(parens.site, argTypes, retType);\n}\n\n/**\n * @param {Site} site\n * @param {Token[]} ts \n * @returns {FuncArgTypeExpr | null}\n */\nfunction buildFuncArgTypeExpr(site, ts) {\n\tconst colonPos = SymbolToken.find(ts, \":\");\n\n\tif (colonPos != -1 && colonPos != 1) {\n\t\tts[0].syntaxError(\"invalid syntax\");\n\t\treturn null;\n\t}\n\n\t/**\n\t * @type {Word | null}\n\t */\n\tlet name = null;\n\n\tif (colonPos != -1) {\n\t\tname = assertToken(ts.shift(), site)?.assertWord()?.assertNotKeyword() ?? null;\n\n\t\tif (!name) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst colon = assertToken(ts.shift(), site)?.assertSymbol(\":\");\n\n\t\tif (!colon) {\n\t\t\treturn null;\n\t\t}\n\t\t\n\t\tif (ts.length == 0) {\n\t\t\tcolon.syntaxError(\"expected type expression after ':'\");\n\t\t\treturn null;\n\t\t}\n\t}\n\n\tconst next = assertToken(ts[0], site);\n\n\tif (!next) {\n\t\treturn null;\n\t}\n\n\tconst hasDefault = next.isSymbol(\"?\");\n\tif (hasDefault) {\n\t\tconst opt = assertToken(ts.shift(), site);\n\n\t\tif (!opt) {\n\t\t\treturn null;\n\t\t}\n\n\t\tif (ts.length == 0) {\n\t\t\topt.syntaxError(\"invalid type expression after '?'\");\n\t\t\treturn null;\n\t\t}\n\t}\n\n\tconst typeExpr = buildTypeExpr(next.site, ts);\n\tif (!typeExpr) {\n\t\treturn null;\n\t}\n\n\treturn new FuncArgTypeExpr(name !== null ? name.site : typeExpr.site, name, typeExpr, hasDefault);\n}\n\n/**\n * @internal\n * @param {Site} site \n * @param {Token[]} ts \n * @param {boolean} allowInferredRetType\n * @returns {null | Expr}\n */\nfunction buildFuncRetTypeExpr(site, ts, allowInferredRetType = false) {\n\tif (ts.length === 0) {\n\t\tif (allowInferredRetType) {\n\t\t\treturn null;\n\t\t} else {\n\t\t\tsite.syntaxError(\"expected type expression after '->'\");\n\t\t\treturn null;\n\t\t}\n\t} else {\n\t\tif (ts[0].isGroup(\"(\") && (ts.length == 1 || !ts[1].isSymbol(\"->\"))) {\n\t\t\tconst group = assertToken(ts.shift(), site)?.assertGroup(\"(\");\n\n\t\t\tif (!group) {\n\t\t\t\treturn null;\n\t\t\t} else if (group.fields.length == 0) {\n\t\t\t\treturn new VoidTypeExpr(group.site);\n\t\t\t} else if (group.fields.length == 1) {\n\t\t\t\tgroup.syntaxError(\"expected 0 or 2 or more types in multi return type\");\n\t\t\t\treturn null;\n\t\t\t} else {\n\t\t\t\tconst itemTypeExprs_ = group.fields.map(fts => {\n\t\t\t\t\tfts = fts.slice();\n\n\t\t\t\t\treturn buildTypeExpr(group.site, fts);\n\t\t\t\t});\n\n\t\t\t\tconst itemTypeExprs = reduceNull(itemTypeExprs_);\n\n\t\t\t\tif (!itemTypeExprs) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\n\t\t\t\treturn new TupleTypeExpr(group.site, itemTypeExprs);\n\t\t\t}\n\t\t} else {\n\t\t\treturn buildTypeExpr(site, ts);\n\t\t}\n\t}\n}\n\n/**\n * @internal\n * @param {Site} site\n * @param {Token[]} ts \n * @returns {null | PathExpr}\n */\nfunction buildTypePathExpr(site, ts) {\n\tconst i = SymbolToken.findLast(ts, \"::\");\n\n\tassert(i != -1);\n\n\tconst baseExpr = buildTypeExpr(ts[0].site, ts.splice(0, i));\n\tif (!baseExpr) {\n\t\treturn null;\n\t}\n\n\tconst dcolon = assertToken(ts.shift(), site)?.assertSymbol(\"::\");\n\tif (!dcolon) {\n\t\treturn null;\n\t}\n\n\tconst memberName = assertToken(ts.shift(), dcolon.site)?.assertWord()?.assertNotKeyword();\n\tif (!memberName) {\n\t\treturn null;\n\t}\n\t\n\treturn new PathExpr(dcolon.site, baseExpr, memberName);\n}\n\n/**\n * @internal\n * @param {Site} site\n * @param {Token[]} ts \n * @returns {RefExpr | null}\n */\nfunction buildTypeRefExpr(site, ts) {\n\tconst name = assertToken(ts.shift(), site)?.assertWord()?.assertNotKeyword();\n\n\tif (!name) {\n\t\treturn null;\n\t}\n\n\tif (ts.length > 0) {\n\t\tts[0].syntaxError(\"invalid type syntax\");\n\t\treturn null;\n\t}\n\n\treturn new RefExpr(name);\n}\n\n/**\n * @param {Token} t\n * @returns {TupleTypeExpr | null}\n */\nfunction buildTupleTypeExpr(t) {\n\tconst group = t.assertGroup(\"(\");\n\n\tif (!group) {\n\t\treturn null;\n\t}\n\n\tif (group.fields.length < 2) {\n\t\tgroup.syntaxError(\"expected at least two items for tuple type\");\n\t\treturn null;\n\t}\n\n\tconst itemTypeExprs = reduceNull(group.fields.map(fts => {\n\t\treturn buildTypeExpr(group.site, fts);\n\t}));\n\n\tif (!itemTypeExprs) {\n\t\treturn null;\n\t}\n\n\treturn new TupleTypeExpr(group.site, itemTypeExprs);\n}\n\n/**\n * @internal\n * @param {Token[]} ts \n * @param {number} prec \n * @returns {Expr | null}\n */\nfunction buildValueExpr(ts, prec = 0) {\n\tassert(ts.length > 0);\n\n\t// lower index in exprBuilders is lower precedence\n\t/** @type {((ts: Token[], prev: number) => (Expr | null))[]} */\n\tconst exprBuilders = [\n\t\t/**\n\t\t * 0: lowest precedence is assignment\n\t\t * @param {Token[]} ts_ \n\t\t * @param {number} prec_ \n\t\t * @returns \n\t\t */\n\t\tfunction (ts_, prec_) {\n\t\t\treturn buildMaybeAssignOrChainExpr(ts_, prec_);\n\t\t},\n\t\t/**\n\t\t * 1: piped expression\n\t\t * @param {Token[]} ts_ \n\t\t * @param {number} prec_ \n\t\t * @returns \n\t\t */\n\t\tfunction (ts_, prec_) {\n\t\t\treturn buildPipedExpr(ts_, prec_);\n\t\t},\n\t\tmakeBinaryExprBuilder('||'), // 2: logical or operator\n\t\tmakeBinaryExprBuilder('&&'), // 3: logical and operator\n\t\tmakeBinaryExprBuilder(['==', '!=']), // 4: eq or neq\n\t\tmakeBinaryExprBuilder(['<', '<=', '>', '>=']), // 5: comparison\n\t\tmakeBinaryExprBuilder(['+', '-']), // 6: addition subtraction\n\t\tmakeBinaryExprBuilder(['*', '/', '%']), // 7: multiplication division remainder\n\t\tmakeUnaryExprBuilder(['!', '+', '-']), // 8: logical not, negate\n\t\t/**\n\t\t * 9: variables or literal values chained with: (enum)member access, indexing and calling\n\t\t * @param {Token[]} ts_ \n\t\t * @param {number} prec_ \n\t\t * @returns \n\t\t */\n\t\tfunction (ts_, prec_) {\n\t\t\treturn buildChainedValueExpr(ts_, prec_);\n\t\t}\n\t];\n\n\treturn exprBuilders[prec](ts, prec);\n}\n\n/**\n * @internal\n * @param {Token[]} ts\n * @param {number} prec\n * @returns {Expr | null}\n */\nfunction buildMaybeAssignOrChainExpr(ts, prec) {\n\tlet semicolonPos = SymbolToken.find(ts, \";\");\n\tconst equalsPos = SymbolToken.find(ts, \"=\");\n\n\tif (semicolonPos == -1) {\n\t\tif (equalsPos != -1) {\n\t\t\tts[equalsPos].syntaxError(\"invalid assignment syntax, expected ';' after '...=...'\");\n\t\t\treturn null;\n\t\t} else {\n\t\t\treturn buildValueExpr(ts, prec + 1);\n\t\t}\n\t} else {\n\t\tif (equalsPos == -1 || equalsPos > semicolonPos) {\n\t\t\tconst upstreamExpr = buildValueExpr(ts.splice(0, semicolonPos), prec+1);\n\t\t\tconst site = assertDefined(ts.shift()).site;\n\n\t\t\tif (ts.length == 0) {\n\t\t\t\tsite.syntaxError(\"expected expression after ';'\");\n\t\t\t\treturn null;\n\t\t\t} else if (upstreamExpr === null) {\n\t\t\t\t// error will already have been created\n\t\t\t\treturn null;\n\t\t\t} else {\n\t\t\t\tconst downstreamExpr = buildValueExpr(ts, prec);\n\n\t\t\t\tif (downstreamExpr === null) {\n\t\t\t\t\t// error will already have been created\n\t\t\t\t\treturn null;\n\t\t\t\t} else {\n\t\t\t\t\treturn new ChainExpr(site, upstreamExpr, downstreamExpr);\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (equalsPos != -1 && equalsPos < semicolonPos) {\n\t\t\tconst equals = ts[equalsPos].assertSymbol(\"=\");\n\n\t\t\tif (!equals) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tconst equalsSite = equals.site;\n\n\t\t\tconst lts = ts.splice(0, equalsPos);\n\n\t\t\tconst lhs = buildAssignLhs(equalsSite, lts);\n\t\t\t\n\t\t\tassertDefined(ts.shift()).assertSymbol(\"=\");\n\n\t\t\tsemicolonPos = SymbolToken.find(ts, \";\");\n\t\t\tassert(semicolonPos != -1);\n\n\t\t\tlet upstreamTs = ts.splice(0, semicolonPos);\n\t\t\tif (upstreamTs.length == 0) {\n\t\t\t\tequalsSite.syntaxError(\"expected expression between '=' and ';'\");\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tconst upstreamExpr = buildValueExpr(upstreamTs, prec + 1);\n\n\t\t\tconst semicolon  = assertToken(ts.shift(), equalsSite)?.assertSymbol(\";\");\n\n\t\t\tif (!semicolon) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tconst semicolonSite = semicolon.site;\n\n\t\t\tif (ts.length == 0) {\n\t\t\t\tsemicolonSite.syntaxError(\"expected expression after ';'\");\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tconst downstreamExpr = buildValueExpr(ts, prec);\n\n\t\t\tif (downstreamExpr === null || upstreamExpr === null || lhs === null) {\n\t\t\t\t// error will already have been thrown internally\n\t\t\t\treturn null;\n\t\t\t} else {\n\t\t\t\treturn new AssignExpr(equalsSite, lhs, upstreamExpr, downstreamExpr);\n\t\t\t}\n\t\t} else {\n\t\t\tts[0].syntaxError(\"unhandled\");\n\t\t\treturn null;\n\t\t}\n\t}\n}\n\n/**\n * @internal\n * @param {Site} site\n * @param {Token[]} ts \n * @param {boolean} isSwitchCase\n * @returns {DestructExpr | null}\n */\nfunction buildDestructExpr(site, ts, isSwitchCase = false) {\n\tif (ts.length == 0) {\n\t\tsite.syntaxError(\"expected token inside destructuring braces\");\n\t\treturn null;\n\t}\n\n\tlet maybeName = assertToken(ts.shift(), site);\n\n\tif (!maybeName) {\n\t\treturn null;\n\t}\n\n\tif (maybeName.isWord(\"_\")) {\n\t\tif (ts.length != 0) {\n\t\t\tmaybeName.syntaxError(\"unexpected tokens after '_'\");\n\t\t\treturn null;\n\t\t} else {\n\t\t\treturn new DestructExpr(new Word(maybeName.site, \"_\"), null);\n\t\t}\n\t} else {\n\t\tlet name = new Word(maybeName.site, \"_\");\n\n\t\tif (ts.length >= 1 && ts[0].isSymbol(\":\")) {\n\t\t\t// name + ':' + type + optional braces\n\t\t\t// or name + ':' + tuple-type\n\t\t\t// or name + ':' + tuple-parens-destruct\n\n\t\t\tlet name_ = maybeName.assertWord()?.assertNotKeyword();\n\n\t\t\tif (!name_) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tname = name_;\n\n\t\t\tconst colon = assertToken(ts.shift(), name.site)?.assertSymbol(\":\");\n\n\t\t\tif (!colon) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tif (ts.length == 0) {\n\t\t\t\tcolon.syntaxError(\"expected type expression after ':'\");\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\t// the next group token might be a tuple type instead of a tuple destruct expression (if it doesn't contain a colon it is a type)\n\t\t\tif (ts[0].isGroup(\"(\") && !ts[0].assertGroup(\"(\")?.fields.some(fs => fs.some(t => t.isSymbol(\":\")))) {\n\t\t\t\tconst typeExpr = buildTypeExpr(colon.site, ts);\n\t\t\t\treturn new DestructExpr(name, typeExpr);\n\t\t\t}\n\n\t\t\tconst destructExprsIsTuple = buildDestructExprs(ts);\n\n\t\t\tif (!destructExprsIsTuple) {\n\t\t\t\treturn null\n\t\t\t}\n\n\t\t\tconst [destructExprs, isTuple] = destructExprsIsTuple;\n\n\t\t\t/**\n\t\t\t * @type {Expr | null}\n\t\t\t */\n\t\t\tlet typeExpr = null;\n\t\t\t\n\t\t\tif (!isTuple) {\n\t\t\t\ttypeExpr = buildTypeExpr(colon.site, ts);\n\n\t\t\t\tif (!typeExpr) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t} else if (ts.length > 0) {\n\t\t\t\tts[0].syntaxError(\"unexpected tokens\");\n\t\t\t}\n\n\t\t\treturn new DestructExpr(name, typeExpr, destructExprs, isTuple);\n\t\t} else if (ts.length == 0) {\n\t\t\t// only name in case of regular destruct (rhs of assign or nested in switch)\n\n\t\t\tif (isSwitchCase) {\n\t\t\t\tconst typeName = maybeName.assertWord()?.assertNotKeyword();\n\n\t\t\t\tif (!typeName) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\n\t\t\t\tconst typeExpr = new RefExpr(typeName);\n\n\t\t\t\tif (!typeExpr) {\n\t\t\t\t\treturn null;\n\t\t\t\t} \n\n\t\t\t\treturn new DestructExpr(name, typeExpr);\n\t\t\t} else if(maybeName.isGroup(\"(\")) {\n\t\t\t\tconst destructExprsIsTuple = buildDestructExprs([maybeName]);\n\n\t\t\t\tif (!destructExprsIsTuple) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\n\t\t\t\tconst [destructExprs, isTuple] = destructExprsIsTuple;\n\n\t\t\t\treturn new DestructExpr(new Word(maybeName.site, \"_\"), null, destructExprs, isTuple);\n\t\t\t} else {\n\t\t\t\tconst name = maybeName.assertWord()?.assertNotKeyword();\n\n\t\t\t\tif (!name) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\n\t\t\t\treturn new DestructExpr(name, null);\n\t\t\t}\n\t\t} else {\n\t\t\t// type + braces or parenthesis\n\n\t\t\tts.unshift(maybeName);\n\n\t\t\tconst destructExprsIsTuple = buildDestructExprs(ts);\n\n\t\t\tif (!destructExprsIsTuple) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tconst [destructExprs, isTuple] = destructExprsIsTuple;\n\t\n\t\t\t/**\n\t\t\t * @type {Expr | null}\n\t\t\t */\n\t\t\tlet typeExpr = null;\n\n\t\t\tif (!isTuple) {\n\t\t\t\ttypeExpr = buildTypeExpr(site, ts);\n\n\t\t\t\tif (!typeExpr) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t} else if (ts.length != 0) {\n\t\t\t\tts[0].syntaxError(\"unexpected tokens\");\n\t\t\t}\t\t\n\n\t\t\t// name is '_' (so ignored)\n\t\t\treturn new DestructExpr(name, typeExpr, destructExprs, isTuple);\n\t\t}\n\t}\n}\n\n/**\n * Pops the last element of ts if it is a braces group\n * @param {Token[]} ts\n * @returns {null | [DestructExpr[], boolean]}\n */\nfunction buildDestructExprs(ts) {\n\tif (ts.length == 0) {\n\t\treturn [[], false];\n\t} else if (ts[ts.length -1].isGroup(\"{\")) {\n\t\tconst group = assertDefined(ts.pop()).assertGroup(\"{\");\n\n\t\tif (!group) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst destructExprs = group.fields.map(fts => {\n\t\t\treturn buildDestructExpr(group.site, fts);\n\t\t});\n\t\n\t\tif (destructExprs.every(le => le !== null && le.isIgnored() && !le.hasDestructExprs())) {\n\t\t\tgroup.syntaxError(\"expected at least one used field while destructuring\")\n\t\t\treturn null;\n\t\t}\n\n\t\tconst destructExprs_ = reduceNull(destructExprs);\n\n\t\tif (!destructExprs_) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn [destructExprs_, false];\n\t} else if (ts[ts.length - 1].isGroup(\"(\")) {\n\t\tconst group = assertDefined(ts.pop()).assertGroup(\"(\");\n\n\t\tif (!group) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst destructExprs = group.fields.map(fts => {\n\t\t\treturn buildDestructExpr(group.site, fts);\n\t\t});\n\t\n\t\tif (destructExprs.every(le => le !== null && le.isIgnored() && !le.hasDestructExprs())) {\n\t\t\tgroup.syntaxError(\"expected at least one used field while destructuring a tuple\")\n\t\t\treturn null;\n\t\t}\n\n\t\tconst destructExprs_ = reduceNull(destructExprs);\n\n\t\tif (!destructExprs_) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn [destructExprs_, true];\n\t} else {\n\t\treturn [[], false];\n\t}\t\n}\n\n/**\n * @internal\n * @param {Site} site \n * @param {Token[]} ts \n * @returns {null | DestructExpr}\n */\nfunction buildAssignLhs(site, ts) {\n\tconst maybeName = ts.shift();\n\tif (maybeName === undefined) {\n\t\tsite.syntaxError(\"expected a name or destruct expression before '='\");\n\t\treturn null;\n\t} else {\n\t\tif (maybeName.isWord()) {\n\t\t\tts.unshift(maybeName);\n\n\t\t\tconst lhs = buildDestructExpr(maybeName.site, ts);\n\n\t\t\tif (lhs === null) {\n\t\t\t\treturn null;\n\t\t\t} else if (lhs.isIgnored() && !lhs.hasDestructExprs()) {\n\t\t\t\tmaybeName.syntaxError(`unused assignment ${maybeName.toString()}`);\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\treturn lhs;\n\t\t} else if (maybeName.isGroup(\"(\")) {\n\t\t\t/**\n\t\t\t * @type {DestructExpr[]}\n\t\t\t */\n\t\t\tconst inner = [];\n\t\t\t\n\t\t\tconst group = maybeName.assertGroup(\"(\");\n\n\t\t\tif (!group) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tif (group.fields.length < 2) {\n\t\t\t\tgroup.syntaxError(\"expected at least 2 lhs' for multi-assign\");\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tlet someNoneUnderscore = false;\n\t\t\tfor (let fts of group.fields) {\n\t\t\t\tif (fts.length == 0) {\n\t\t\t\t\tgroup.syntaxError(\"unexpected empty field for multi-assign\");\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\n\t\t\t\tfts = fts.slice();\n\n\t\t\t\tconst lhs = buildDestructExpr(group.site, fts);\n\n\t\t\t\tif (!lhs) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (!lhs.isIgnored() || lhs.hasDestructExprs()) {\n\t\t\t\t\tsomeNoneUnderscore = true;\n\t\t\t\t}\n\n\t\t\t\t// check that name is unique\n\t\t\t\tinner.forEach(p => {\n\t\t\t\t\tif (!lhs.isIgnored() && p.name.value === lhs.name.value) {\n\t\t\t\t\t\tlhs.name.syntaxError(`duplicate name '${lhs.name.value}' in tuple destruct expr`);\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\tinner.push(lhs);\n\t\t\t}\n\n\t\t\tif (!someNoneUnderscore) {\n\t\t\t\tgroup.syntaxError(\"expected at least one non-underscore in lhs of multi-assign\");\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\treturn new DestructExpr(new Word(group.site, \"_\"), null, inner, true);\n\t\t} else {\n\t\t\tmaybeName.syntaxError(\"unexpected syntax for lhs of =\");\n\t\t\treturn null;\n\t\t}\n\t}\n}\n\n/**\n * @param {Token[]} ts \n * @param {number} prec\n * @returns {Expr | null} \n */\nfunction buildPipedExpr(ts, prec) {\n\tconst iOp = SymbolToken.findLast(ts, [\"|\"]);\n\n\tif (iOp == ts.length - 1) {\n\t\tts[iOp].syntaxError(`invalid syntax, '${ts[iOp].toString()}' can't be used as a post-unary operator`);\n\t\treturn null;\n\t} else if (iOp == 0) {\n\t\tts[iOp].syntaxError(`invalid syntax, '${ts[iOp].toString()}' can't be used as a pre-unary operator`);\n\t\treturn null;\n\t} else if (iOp > 0) {\n\t\tif (ts[iOp+1].isSymbol()) {\n\t\t\tconst next = assertDefined(ts[iOp+1].assertSymbol());\n\n\t\t\tif (!(next.value == \".\" || next.value in BINARY_SYMBOLS_MAP)) {\n\t\t\t\tnext.syntaxError(\"invalid pipe syntax\");\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tconst innerTs= ts.splice(0, iOp);\n\t\t\t\n\t\t\tconst op = ts.shift()?.assertSymbol(\"|\");\n\n\t\t\tif (!op) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * @type {Token[]}\n\t\t\t */\n\t\t\tlet newTs = [\n\t\t\t\tnew Group(op.site, \"(\", [\n\t\t\t\t\tinnerTs\n\t\t\t\t])\n\t\t\t];\n\t\t\t\n\t\t\tnewTs = newTs.concat(ts);\n\n\t\t\treturn buildValueExpr(newTs, prec + 1);\n\t\t} else {\n\t\t\tconst op = ts[iOp].assertSymbol();\n\t\t\t\n\t\t\tconst a = buildValueExpr(ts.slice(0, iOp), prec);\n\t\t\t\n\t\t\tif (!a || !op) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tconst b = buildValueExpr(ts.slice(iOp + 1), prec + 1);\n\n\t\t\tif (!b) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\treturn new CallExpr(op.site, b, [new CallArgExpr(a.site, null, a)]);\n\t\t}\n\t} else {\n\t\treturn buildValueExpr(ts, prec + 1);\n\t}\n}\n\n/**\n * @internal\n * @param {string | string[]} symbol \n * @returns {(ts: Token[], prec: number) => (Expr | null)}\n */\nfunction makeBinaryExprBuilder(symbol) {\n\t// default behaviour is left-to-right associative\n\treturn function (ts, prec) {\n\t\tconst iOp = SymbolToken.findLast(ts, symbol);\n\n\t\tif (iOp == ts.length - 1) {\n\t\t\t// post-unary operator, which is invalid\n\t\t\tts[iOp].syntaxError(`invalid syntax, '${ts[iOp].toString()}' can't be used as a post-unary operator`);\n\t\t\treturn null;\n\t\t} else if (iOp > 0) { // iOp == 0 means maybe a (pre)unary op, which is handled by a higher precedence\n\t\t\tconst a = buildValueExpr(ts.slice(0, iOp), prec);\n\t\t\tconst b = buildValueExpr(ts.slice(iOp + 1), prec + 1);\n\t\t\tconst op = ts[iOp].assertSymbol();\n\n\t\t\tif (!a || !b || !op) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\treturn new BinaryExpr(op, a, b);\n\t\t} else {\n\t\t\treturn buildValueExpr(ts, prec + 1);\n\t\t}\n\t};\n}\n\n/**\n * @internal\n * @param {string | string[]} symbol \n * @returns {(ts: Token[], prec: number) => (Expr | null)}\n */\nfunction makeUnaryExprBuilder(symbol) {\n\t// default behaviour is right-to-left associative\n\treturn function (ts, prec) {\n\t\tif (ts[0].isSymbol(symbol)) {\n\t\t\tconst rhs = buildValueExpr(ts.slice(1), prec);\n\t\t\tconst op = ts[0].assertSymbol();\n\n\t\t\tif (!rhs || !op) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\treturn new UnaryExpr(op, rhs);\n\t\t} else {\n\t\t\treturn buildValueExpr(ts, prec + 1);\n\t\t}\n\t}\n}\n\n/**\n * @internal\n * @param {Token[]} ts \n * @param {number} prec \n * @returns {Expr | null}\n */\nfunction buildChainedValueExpr(ts, prec) {\n\t/** \n\t * @type {Expr | null} \n\t */\n\tconst expr = buildChainStartValueExpr(ts);\n\n\treturn buildRemainingChainedValueExpr(expr, ts, prec);\n}\n\n\n/**\n * @internal\n * @param {Expr | null} expr\n * @param {Token[]} ts\n * @param {number} prec\n * @returns {Expr | null}\n */\nfunction buildRemainingChainedValueExpr(expr, ts, prec) {\n\t// now we can parse the rest of the chaining\n\twhile (ts.length > 0) {\n\t\tif (expr === null) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst t = assertDefined(ts.shift());\n\n\t\tif (t.isGroup(\"(\")) {\n\t\t\texpr = buildCallExpr(t.site, expr, assertDefined(t.assertGroup()));\n\t\t} else if (t.isGroup(\"[\")) {\n\t\t\texpr = buildParametricValueExpr(expr, assertDefined(t.assertGroup(\"[\")));\n\t\t} else if (t.isSymbol(\".\") && ts.length > 0 && ts[0].isWord(\"switch\")) {\n\t\t\texpr = buildSwitchExpr(expr, ts);\n\t\t} else if (t.isSymbol(\".\")) {\n\t\t\tconst name = assertToken(ts.shift(), t.site)?.assertWord()?.assertNotKeyword();\n\n\t\t\tif (!name) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\texpr = new MemberExpr(t.site, expr, name);\n\t\t} else if (t.isGroup(\"{\")) {\n\t\t\tt.syntaxError(\"invalid syntax\");\n\t\t\treturn null;\n\t\t} else if (t.isSymbol(\"::\")) {\n\t\t\tt.syntaxError(\"invalid syntax\");\n\t\t\treturn null;\n\t\t} else {\n\t\t\tt.syntaxError(`invalid syntax '${t.toString()}'`);\n\t\t\treturn null;\n\t\t}\n\t}\n\n\treturn expr;\n}\n\n/**\n * @param {Expr} expr \n * @param {Group} brackets \n * @returns {ParametricExpr | null}\n */\nfunction buildParametricValueExpr(expr, brackets) {\n\tconst typeExprs = reduceNull(brackets.fields.map(fts => {\n\t\tif (fts.length == 0) {\n\t\t\tbrackets.site.syntaxError(\"unexpected empty field\");\n\t\t\treturn null;\n\t\t} else {\n\t\t\tconst typeExpr = buildTypeExpr(brackets.site, fts);\n\n\t\t\tif (fts.length != 0) {\n\t\t\t\tfts[0].syntaxError(\"unexpected token\");\n\t\t\t\treturn null;\n\t\t\t} else {\n\t\t\t\treturn typeExpr;\n\t\t\t}\n\t\t}\n\t}));\n\n\tif (!typeExprs) {\n\t\treturn null;\n\t}\n\n\treturn new ParametricExpr(brackets.site, expr, typeExprs);\n}\n\n/**\n * @param {Site} site \n * @param {Expr} fnExpr \n * @param {Group} parens\n * @returns {CallExpr | null}\n */\nfunction buildCallExpr(site, fnExpr, parens) {\n\tconst callArgs = buildCallArgs(parens);\n\n\tif (callArgs === null) {\n\t\treturn null;\n\t} else {\n\t\treturn new CallExpr(site, fnExpr, callArgs);\n\t}\n}\n\n/**\n * @internal\n * @param {Token[]} ts \n * @returns {Expr | null}\n */\nfunction buildChainStartValueExpr(ts) {\n\tif (ts.length > 1 && ts[0].isGroup(\"(\") && ts[1].isSymbol(\"->\")) {\n\t\treturn buildFuncLiteralExpr(ts, null, true);\n\t} else if (ts[0].isWord(\"if\")) {\n\t\treturn buildIfElseExpr(ts);\n\t} else if (ts[0].isWord(\"switch\")) {\n\t\tts[0].syntaxError(\"expected '... .switch' instead of 'switch'\");\n\t\treturn null;\n\t} else if (ts[0].isLiteral()) {\n\t\treturn new PrimitiveLiteralExpr(assertDefined(ts.shift())); // can simply be reused\n\t} else if (ts[0].isGroup(\"(\")) {\n\t\treturn buildParensExpr(ts);\n\t} else if (Group.find(ts, \"{\") != -1) {\n\t\tif (ts[0].isGroup(\"[\")) {\n\t\t\treturn buildListLiteralExpr(ts);\n\t\t} else if (ts[0].isWord(\"Map\") && ts[1].isGroup(\"[\")) {\n\t\t\treturn buildMapLiteralExpr(ts); \n\t\t} else if (ts[0].isWord(\"Option\") && ts[1].isGroup(\"[\") && ts[2].isSymbol(\"::\") && ts[3].isWord(\"Some\")) {\n\t\t\treturn buildOptionSomeLiteralExpr(ts);\n\t\t} else {\n\t\t\t// could be switch or literal struct construction\n\t\t\tconst iBraces = Group.find(ts, \"{\");\n\t\t\tconst iSwitch = Word.find(ts, \"switch\");\n\t\t\tconst iPeriod = SymbolToken.find(ts, \".\");\n\n\t\t\tif (iSwitch != -1 && iPeriod != -1 && iSwitch < iBraces && iPeriod < iBraces && iSwitch > iPeriod) {\n\t\t\t\treturn buildValueExpr(ts.splice(0, iPeriod));\n\t\t\t} else {\n\t\t\t\treturn buildStructLiteralExpr(ts);\n\t\t\t}\n\t\t}\n\t} else if (SymbolToken.find(ts, \"::\") != -1) {\n\t\treturn buildValuePathExpr(ts);\n\t} else if (ts[0].isWord()) {\n\t\tif (ts[0].isWord(\"const\") || ts[0].isWord(\"struct\") || ts[0].isWord(\"enum\") || ts[0].isWord(\"func\") || ts[0].isWord(\"import\")) {\n\t\t\tts[0].syntaxError(`invalid use of '${assertDefined(ts[0].assertWord()).value}', can only be used as top-level statement`);\n\t\t\treturn null;\n\t\t} else {\n\t\t\tconst name = assertDefined(ts.shift()?.assertWord());\n\n\t\t\tif (name.value == \"self\") {\n\t\t\t\treturn new RefExpr(name);\n\t\t\t} else {\n\t\t\t\tconst n = name.assertNotKeyword();\n\n\t\t\t\tif (!n) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\n\t\t\t\treturn new RefExpr(n);\n\t\t\t}\n\t\t}\n\t} else {\n\t\tts[0].syntaxError(\"invalid syntax\");\n\t\treturn null;\n\t}\n}\n\n/**\n * @internal\n * @param {Token[]} ts\n * @returns {Expr | null}\n */\nfunction buildParensExpr(ts) {\n\tconst group = assertDefined(ts.shift()).assertGroup(\"(\");\n\n\tif (!group) {\n\t\treturn null;\n\t}\n\n\tconst site = group.site;\n\n\tif (group.fields.length === 0) {\n\t\tgroup.syntaxError(\"expected at least one expr in parens\");\n\t\treturn null;\n\t} else {\n\t\tconst fields = group.fields.map(fts => buildValueExpr(fts));\n\n\t\t/**\n\t\t * @type {Expr[]}\n\t\t */\n\t\tconst nonNullFields = [];\n\n\t\tfields.forEach(f => {\n\t\t\tif (f !== null) {\n\t\t\t\tnonNullFields.push(f);\n\t\t\t}\n\t\t});\n\n\t\tif (nonNullFields.length == 0) {\n\t\t\t// error will already have been thrown internally\n\t\t\treturn null;\n\t\t} else {\n\t\t\treturn new ParensExpr(site, nonNullFields);\n\t\t}\n\t}\n}\n\n/**\n * @internal\n * @param {Group} parens \n * @returns {CallArgExpr[] | null}\n */\nfunction buildCallArgs(parens) {\n\t/**\n\t * @type {Set<string>}\n\t */\n\tconst names = new Set();\n\n\tconst callArgs = reduceNull(parens.fields.map(fts => {\n\t\tconst callArg = buildCallArgExpr(parens.site, fts);\n\n\t\tif (callArg !== null && callArg.isNamed()) {\n\t\t\tif (names.has(callArg.name)) {\n\t\t\t\tcallArg.syntaxError(`duplicate named call arg ${callArg.name}`);\n\t\t\t}\n\n\t\t\tnames.add(callArg.name);\n\t\t}\n\n\t\treturn callArg;\n\t}));\n\n\tif (callArgs === null) {\n\t\treturn null;\n\t} else {\n\t\tif (callArgs.some(ca => ca.isNamed()) && callArgs.some(ca => !ca.isNamed())) {\n\t\t\tcallArgs[0].syntaxError(\"can't mix positional and named args\");\n\t\t\treturn null;\n\t\t}\n\n\t\treturn callArgs;\n\t}\n}\n\n/**\n * @param {Site} site \n * @param {Token[]} ts \n * @returns {CallArgExpr | null}\n */\nfunction buildCallArgExpr(site, ts) {\n\tif (ts.length == 0) {\n\t\tsite.syntaxError(\"invalid syntax\");\n\t\treturn null;\n\t}\n\n\t/**\n\t * @type {null | undefined | Word}\n\t */\n\tlet name = null;\n\n\tif (ts.length >= 2 && ts[0].isWord() && ts[1].isSymbol(\":\")) {\n\t\tname = assertDefined(ts.shift()).assertWord()?.assertNotKeyword();\n\n\t\tif (!name) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst colon = assertDefined(ts.shift());\n\n\t\tif (ts.length == 0) {\n\t\t\tcolon.syntaxError(\"expected value expressions after ':'\");\n\t\t\treturn null;\n\t\t}\n\t}\n\n\tconst value = buildValueExpr(ts);\n\n\tif (!value) {\n\t\treturn null;\n\t}\n\n\treturn new CallArgExpr(name != null ? name.site : value.site, name, value);\n}\n\n/**\n * @internal\n * @param {Token[]} ts \n * @returns {IfElseExpr | null}\n */\nfunction buildIfElseExpr(ts) {\n\tconst ifWord = assertDefined(ts.shift()).assertWord(\"if\");\n\n\tif (!ifWord) {\n\t\treturn null;\n\t}\n\n\tconst site = ifWord.site;\n\n\t/** @type {Expr[]} */\n\tconst conditions = [];\n\n\t/** @type {Expr[]} */\n\tconst branches = [];\n\twhile (true) {\n\t\tconst parens = assertToken(ts.shift(), site)?.assertGroup(\"(\");\n\n\t\tif (!parens) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst braces = assertToken(ts.shift(), site)?.assertGroup(\"{\");\n\n\t\tif (!braces) {\n\t\t\treturn null;\n\t\t}\n\n\t\tif (parens.fields.length != 1) {\n\t\t\tparens.syntaxError(\"expected single if-else condition\");\n\t\t\treturn null;\n\t\t}\n\n\t\tif (braces.fields.length == 0) {\n\t\t\tbraces.syntaxError(\"branch body can't be empty\");\n\t\t\treturn null;\n\t\t} else if (braces.fields.length != 1) {\n\t\t\tbraces.syntaxError(\"expected single if-else branch expession\");\n\t\t\treturn null;\n\t\t}\n\n\t\tconst cond = buildValueExpr(parens.fields[0]);\n\t\tconst branch = buildValueExpr(braces.fields[0]);\n\n\t\tif (cond === null || branch === null) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tconditions.push(cond);\n\t\tbranches.push(branch);\n\n\t\tconst maybeElse = ts.shift();\n\n\t\tif (maybeElse === undefined ) {\n\t\t\t// add a void else branch\n\t\t\tbranches.push(new VoidExpr(braces.site));\n\t\t\tbreak;\n\t\t} else {\n\t\t\tconst elseWord = maybeElse.assertWord(\"else\");\n\n\t\t\tif (!elseWord) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tconst next = assertToken(ts.shift(), elseWord.site);\n\n\t\t\tif (!next) {\n\t\t\t\treturn null;\n\t\t\t} else if (next.isGroup(\"{\")) {\n\t\t\t\t// last group\n\t\t\t\tconst braces = next.assertGroup();\n\n\t\t\t\tif (!braces) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\n\t\t\t\tif (braces.fields.length != 1) {\n\t\t\t\t\tbraces.syntaxError(\"expected single expession for if-else branch\");\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\n\t\t\t\tconst elseBranch = buildValueExpr(braces.fields[0]);\n\n\t\t\t\tif (!elseBranch) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\n\t\t\t\tbranches.push(elseBranch);\n\t\t\t\tbreak;\n\t\t\t} else if (next.isWord(\"if\")) {\n\t\t\t\tcontinue;\n\t\t\t} else {\n\t\t\t\tnext.syntaxError(\"unexpected token\");\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn new IfElseExpr(site, conditions, branches);\n}\n\n/**\n * @internal\n * @param {Expr} controlExpr\n * @param {Token[]} ts \n * @returns {Expr | null} - EnumSwitchExpr or DataSwitchExpr\n */\nfunction buildSwitchExpr(controlExpr, ts) {\n\tconst switchWord = assertDefined(ts.shift()).assertWord(\"switch\");\n\n\tif (!switchWord) {\n\t\treturn null;\n\t}\n\n\tconst site = switchWord.site;\n\n\tconst braces = assertToken(ts.shift(), site)?.assertGroup(\"{\");\n\n\tif (!braces) {\n\t\treturn null;\n\t}\n\n\t/** @type {SwitchCase[]} */\n\tconst cases = [];\n\n\t/** @type {null | SwitchDefault} */\n\tlet def = null;\n\n\tfor (let tsInner of braces.fields) {\n\t\tif (tsInner[0].isWord(\"else\") || tsInner[0].isWord(\"_\")) {\n\t\t\tif (def !== null) {\n\t\t\t\tdef.syntaxError(\"duplicate default case in switch\");\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tdef = buildSwitchDefault(tsInner);\n\t\t} else {\n\t\t\tif (def !== null) {\n\t\t\t\tdef.syntaxError(\"switch default case must come last\");\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tconst c = buildSwitchCase(tsInner);\n\n\t\t\tif (c === null) {\n\t\t\t\treturn null;\n\t\t\t} else {\n\t\t\t\tcases.push(c);\n\t\t\t}\n\t\t}\n\t}\n\n\t// check the uniqueness of each case here\n\t/** @type {Set<string>} */\n\tconst set = new Set()\n\tfor (let c of cases) {\n\t\tlet t = c.memberName.toString();\n\t\tif (set.has(t)) {\n\t\t\tc.memberName.syntaxError(`duplicate switch case '${t}')`);\n\t\t\treturn null;\n\t\t}\n\n\t\tset.add(t);\n\t}\n\n\tif (cases.length < 1) {\n\t\tsite.syntaxError(\"expected at least one switch case\");\n\t\treturn null;\n\t}\n\n\tif (cases.some(c => c.isDataMember())) {\n\t\tif (cases.length + (def === null ? 0 : 1) > 5) {\n\t\t\tsite.syntaxError(`too many cases for data switch, expected 5 or less, got ${cases.length.toString()}`);\n\t\t\treturn null;\n\t\t} else {\n\t\t\tlet count = 0;\n\t\t\tcases.forEach(c => {if (!c.isDataMember()){count++}});\n\n\t\t\tif (count > 1) {\n\t\t\t\tsite.syntaxError(`expected at most 1 enum case in data switch, got ${count}`);\n\t\t\t\treturn null;\n\t\t\t} else {\n\t\t\t\tif (count === 1 && cases.some(c => c instanceof UnconstrDataSwitchCase)) {\n\t\t\t\t\tsite.syntaxError(`can't have both enum and (Int, []Data) in data switch`);\n\t\t\t\t\treturn null;\n\t\t\t\t} else {\n\t\t\t\t\treturn new DataSwitchExpr(site, controlExpr, cases, def);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t} else {\n\t\treturn new EnumSwitchExpr(site, controlExpr, cases, def);\n\t}\n}\n\n/**\n * @internal\n * @param {Site} site\n * @param {Token[]} ts\n * @param {boolean} isAfterColon\n * @returns {Word | null} \n */\nfunction buildSwitchCaseName(site, ts, isAfterColon) {\n\tconst first = ts.shift();\n\n\tif (first === undefined) {\n\t\tif (isAfterColon) {\n\t\t\tsite.syntaxError(\"invalid switch case syntax, expected member name after ':'\");\n\t\t\treturn null;\n\t\t} else {\n\t\t\tsite.syntaxError(\"invalid switch case syntax\");\n\t\t\treturn null;\n\t\t}\n\t}\n\t\t\n\tif (first.isWord(\"Map\")) {\n\t\tconst second = ts.shift();\n\n\t\tif (!second) {\n\t\t\tsite.syntaxError(\"expected token after 'Map'\");\n\t\t\treturn null;\n\t\t}\n\n\t\tconst keyTs = second.assertGroup(\"[]\", 1)?.fields[0];\n\n\t\tif (keyTs === undefined || keyTs === null) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst key = keyTs.shift();\n\n\t\tif (key === undefined) {\n\t\t\tsecond.syntaxError(\"expected 'Map[Data]Data'\");\n\t\t\treturn null;\n\t\t}\n\n\t\tkey.assertWord(\"Data\");\n\n\t\tif (keyTs.length > 0) {\n\t\t\tkeyTs[0].syntaxError(\"unexpected token after 'Data'\");\n\t\t\treturn null;\n\t\t}\n\n\t\tconst third = ts.shift();\n\n\t\tif (third === undefined) {\n\t\t\tsite.syntaxError(\"expected token after 'Map[Data]\");\n\t\t\treturn null;\n\t\t}\n\n\t\tthird.assertWord(\"Data\");\n\n\t\tif (ts.length > 0) {\n\t\t\tts[0].syntaxError(\"unexpected token after 'Map[Data]Data'\");\n\t\t\treturn null;\n\t\t}\n\n\t\treturn new Word(first.site, \"Map[Data]Data\");\n\t} else if (first.isWord()) {\n\t\tif (ts.length > 0) {\n\t\t\tts[0].syntaxError(\"unexpected token\");\n\t\t\treturn null;\n\t\t}\n\n\t\treturn first?.assertWord()?.assertNotKeyword() ?? null;\n\t} else if (first.isGroup(\"[\")) {\n\t\t// list \n\t\tfirst.assertGroup(\"[\", 0);\n\n\t\tconst second = ts.shift();\n\n\t\tif (second === undefined) {\n\t\t\tsite.syntaxError(\"expected token after '[]'\");\n\t\t\treturn null;\n\t\t} else if (ts.length > 0) {\n\t\t\tts[0].syntaxError(\"unexpected token\");\n\t\t\treturn null;\n\t\t}\n\n\t\tsecond.assertWord(\"Data\");\n\n\t\treturn new Word(first.site, \"[]Data\");\n\t} else {\n\t\tfirst.syntaxError(\"invalid switch case name syntax\");\n\t\treturn null;\n\t}\n}\n\n/**\n * @internal\n * @param {Token[]} ts \n * @returns {SwitchCase | null}\n */\nfunction buildSwitchCase(ts) {\n\tconst arrowPos = SymbolToken.find(ts, \"=>\");\n\n\tif (arrowPos == -1) {\n\t\tts[0].syntaxError(\"expected '=>' in switch case\");\n\t\treturn null;\n\t} else if (arrowPos == 0) {\n\t\tts[0].syntaxError(\"expected '<word>' or '<word>: <word>' to the left of '=>'\");\n\t\treturn null;\n\t}\n\n\tconst tsLeft = ts.splice(0, arrowPos);\n\n\tif (tsLeft.length === 1 && tsLeft[0].isGroup(\"(\")) {\n\t\treturn buildMultiArgSwitchCase(tsLeft, ts);\n\t} else {\n\t\treturn buildSingleArgSwitchCase(tsLeft, ts);\n\t}\n}\n\n/**\n * @internal\n * @param {Token[]} ts \n * @returns {null | [?Word, Word]} - varName is optional\n */\nfunction buildSwitchCaseNameType(ts) {\n\tconst colonPos = SymbolToken.find(ts, \":\");\n\n\t/** @type {null | Word} */\n\tlet varName = null;\n\n\t/** @type {null | Word} */\n\tlet memberName = null;\n\n\tif (colonPos != -1) {\n\t\tconst maybeVarName = assertDefined(ts.shift()).assertWord()?.assertNotKeyword();\n\n\t\tif (!maybeVarName) {\n\t\t\treturn null;\n\t\t}\n\n\t\tvarName = maybeVarName;\n\t\t\n\t\tconst maybeColon = ts.shift();\n\n\t\tif (maybeColon === undefined) {\n\t\t\tvarName.syntaxError(\"invalid switch case syntax, expected '(<name>: <enum-member>)', got '(<name>)'\");\n\t\t\treturn null;\n\t\t} else {\n\t\t\tvoid maybeColon.assertSymbol(\":\");\n\n\t\t\tmemberName = buildSwitchCaseName(maybeColon.site, ts, true);\n\t\t}\n\t} else {\n\t\tmemberName = buildSwitchCaseName(ts[0].site, ts, false);\n\t}\n\n\tif (ts.length !== 0) {\n\t\tts[0].syntaxError(\"unexpected token\");\n\t\treturn null;\n\t}\n\n\tif (memberName === null) {\n\t\t// error will already have been thrown internally\n\t\treturn null;\n\t} else {\n\t\treturn [varName, memberName];\n\t}\n}\n\n/**\n * @internal\n * @param {Token[]} tsLeft\n * @param {Token[]} ts\n * @returns {SwitchCase | null}\n */\nfunction buildMultiArgSwitchCase(tsLeft, ts) {\n\tconst parens = assertDefined(tsLeft.shift()).assertGroup(\"(\");\n\n\tif (!parens) {\n\t\treturn null;\n\t}\n\n\tconst pairs = reduceNull(parens.fields.map(fts => buildSwitchCaseNameType(fts)));\n\n\tif (pairs === null) {\n\t\treturn null;\n\t}\n\n\tassert(tsLeft.length === 0);\n\n\tif (pairs.length !== 2) {\n\t\tparens.syntaxError(`expected (Int, []Data) case, got (${pairs.map(p => p[1].value).join(\", \")}`);\n\t\treturn null;\n\t} else if (pairs[0][1].value != \"Int\" || pairs[1][1].value != \"[]Data\") {\n\t\tparens.syntaxError(`expected (Int, []Data) case, got (${pairs[0][1].value}, ${pairs[1][1].value})`);\n\t\treturn null;\n\t} else {\n\t\tconst maybeArrow = ts.shift();\n\n\t\tif (maybeArrow === undefined) {\n\t\t\tparens.syntaxError(\"expected '=>'\");\n\t\t\treturn null;\n\t\t} else {\n\t\t\tconst arrow = maybeArrow.assertSymbol(\"=>\");\n\n\t\t\tif (!arrow) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tconst bodyExpr = buildSwitchCaseBody(arrow.site, ts);\n\n\t\t\tif (bodyExpr === null) {\n\t\t\t\treturn null;\n\t\t\t} else {\n\t\t\t\treturn new UnconstrDataSwitchCase(arrow.site, pairs[0][0], pairs[1][0], bodyExpr);\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * @internal\n * @param {Token[]} tsLeft \n * @param {Token[]} ts \n * @returns {SwitchCase | null}\n */\nfunction buildSingleArgSwitchCase(tsLeft, ts) {\n\tconst site = tsLeft[tsLeft.length-1].site;\n\n\tconst destructExpr = buildDestructExpr(site, tsLeft, true);\n\n\tif (destructExpr === null) {\n\t\treturn null;\n\t} else if (!destructExpr.hasType()) {\n\t\tdestructExpr.site.syntaxError(\"invalid switch case syntax\");\n\t\treturn null;\n\t}\n\t\n\tconst maybeArrow = ts.shift();\n\n\tif (maybeArrow === undefined) {\n\t\tsite.syntaxError(\"expected '=>'\");\n\t\treturn null;\n\t} else {\n\t\tconst arrow = maybeArrow.assertSymbol(\"=>\");\n\n\t\tif (!arrow) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst bodyExpr = buildSwitchCaseBody(arrow.site, ts);\n\n\t\tif (bodyExpr === null) {\n\t\t\treturn null;\n\t\t} else {\n\t\t\treturn new SwitchCase(arrow.site, destructExpr, bodyExpr);\n\t\t}\n\t}\n}\n\n/**\n * @internal\n * @param {Site} site \n * @param {Token[]} ts \n * @returns {Expr | null}\n */\nfunction buildSwitchCaseBody(site, ts) {\n\t/** @type {null | Expr} */\n\tlet bodyExpr = null;\n\n\tif (ts.length == 0) {\n\t\tsite.syntaxError(\"expected expression after '=>'\");\n\t\treturn null;\n\t} else if (ts[0].isGroup(\"{\")) {\n\t\tif (ts.length > 1) {\n\t\t\tts[1].syntaxError(\"unexpected token\");\n\t\t\treturn null;\n\t\t}\n\n\t\tconst tsBody = ts[0].assertGroup(\"{\", 1)?.fields[0];\n\n\t\tif (tsBody === undefined || tsBody === null) {\n\t\t\treturn null;\n\t\t}\n\n\t\tbodyExpr = buildValueExpr(tsBody);\n\t} else {\n\t\tbodyExpr = buildValueExpr(ts);\n\t}\n\n\treturn bodyExpr;\n}\n\n/**\n * @internal\n * @param {Token[]} ts \n * @returns {SwitchDefault | null}\n */\nfunction buildSwitchDefault(ts) {\n\tconst elseWord = assertDefined(ts.shift()).assertWord();\n\n\tif (!elseWord) {\n\t\treturn null;\n\t} else if (!(elseWord.isWord(\"else\") || elseWord.isWord(\"_\"))) {\n\t\telseWord.syntaxError(\"expected 'else' or '_'\");\n\t\treturn null;\n\t}\n\n\tconst site = elseWord.site;\n\n\tconst maybeArrow = ts.shift();\n\tif (maybeArrow === undefined) {\n\t\tsite.syntaxError(`expected '=>' after '${elseWord.value}'`);\n\t\treturn null;\n\t} else {\n\t\tconst arrow = maybeArrow.assertSymbol(\"=>\");\n\n\t\tif (!arrow) {\n\t\t\treturn null;\n\t\t}\n\n\t\t/** @type {null | Expr} */\n\t\tlet bodyExpr = null;\n\n\t\tif (ts.length == 0) {\n\t\t\tarrow.syntaxError(\"expected expression after '=>'\");\n\t\t\treturn null;\n\t\t} else if (ts[0].isGroup(\"{\")) {\n\t\t\tif (ts.length > 1) {\n\t\t\t\tts[1].syntaxError(\"unexpected token\");\n\t\t\t\treturn null;\n\t\t\t} else {\n\t\t\t\tconst bodyTs = ts[0].assertGroup(\"{\", 1)?.fields[0];\n\n\t\t\t\tif (bodyTs === undefined || bodyTs === null) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\n\t\t\t\tbodyExpr = buildValueExpr(bodyTs);\n\t\t\t}\n\t\t} else {\n\t\t\tbodyExpr = buildValueExpr(ts);\n\t\t}\n\n\t\tif (!bodyExpr) {\n\t\t\tarrow.syntaxError(\"empty switch default case body\");\n\t\t\treturn null;\n\t\t}\n\n\t\treturn new SwitchDefault(arrow.site, bodyExpr);\n\t}\n}\n\n/**\n * @internal\n * @param {Token[]} ts \n * @returns {ListLiteralExpr | null}\n */\nfunction buildListLiteralExpr(ts) {\n\tconst group = assertDefined(ts.shift()).assertGroup(\"[\", 0);\n\n\tif (!group) {\n\t\treturn null;\n\t}\n\n\tconst site = group.site;\n\n\tconst bracesPos = Group.find(ts, \"{\");\n\n\tif (bracesPos == -1) {\n\t\tsite.syntaxError(\"invalid list literal expression syntax\");\n\t\treturn null;\n\t}\n\n\tconst itemTypeTs = ts.splice(0, bracesPos);\n\n\tconst itemTypeExpr = buildTypeExpr(site, itemTypeTs.slice());\n\n\tif (!itemTypeExpr) {\n\t\treturn null;\n\t}\n\n\tconst braces = assertToken(ts.shift(), site)?.assertGroup(\"{\");\n\n\tif (!braces) {\n\t\treturn null;\n\t}\n\n\tconst itemExprs = reduceNull(braces.fields.map(fts => buildValueExpr(fts[0]?.isGroup(\"{\") ? itemTypeTs.concat(fts) : fts)));\n\n\tif (itemExprs === null) {\n\t\t// error will have already been thrown internally\n\t\treturn null;\n\t}\n\n\treturn new ListLiteralExpr(site, itemTypeExpr, itemExprs);\n}\n\n/**\n * @internal\n * @param {Token[]} ts \n * @returns {StructLiteralExpr | null}\n */\nfunction buildOptionSomeLiteralExpr(ts) {\n\tconst site = ts[0].site;\n\n\tconst bracesPos = Group.find(ts, \"{\");\n\n\tif (bracesPos == -1) {\n\t\tsite.syntaxError(\"invalid Option[]::Some literal expression syntax\");\n\t\treturn null;\n\t}\n\n\tconst mainTypeTs = ts.splice(0, bracesPos);\n\n\tconst brackets = assertToken(mainTypeTs[1], site)?.assertGroup(\"[\", 1);\n\n\tif (!brackets) {\n\t\treturn null;\n\t}\n\n\tconst someTypeTs = brackets.fields[0].slice();\n\n\tconst braces = assertToken(ts.shift(), site)?.assertGroup(\"{\", 1);\n\n\tif (!braces) {\n\t\treturn null;\n\t}\n\n\tif (braces.fields[0][0]?.isGroup(\"{\")) {\n\t\tconst inner = new Group(\n\t\t\tbraces.site,\n\t\t\t\"{\",\n\t\t\t[\n\t\t\t\tsomeTypeTs.concat(braces.fields[0])\n\t\t\t]\n\t\t);\n\n\t\treturn buildStructLiteralExpr(mainTypeTs.concat(inner).concat(ts));\n\t} else {\n\t\treturn buildStructLiteralExpr(mainTypeTs.concat([braces]).concat(ts));\n\t}\n\n}\n\n/**\n * @internal\n * @param {Token[]} ts\n * @returns {MapLiteralExpr | null}\n */\nfunction buildMapLiteralExpr(ts) {\n\tconst mapWord = assertDefined(ts.shift()).assertWord(\"Map\");\n\n\tif (!mapWord) {\n\t\treturn null;\n\t}\n\n\tconst site = mapWord.site;\n\n\tconst bracket = assertDefined(ts.shift()).assertGroup(\"[\", 1);\n\n\tif (!bracket) {\n\t\treturn null;\n\t}\n\n\tconst keyTypeTs = bracket.fields[0];\n\n\tconst keyTypeExpr = buildTypeExpr(site, keyTypeTs.slice());\n\n\tif (!keyTypeExpr) {\n\t\treturn null;\n\t}\n\n\tconst bracesPos = Group.find(ts, \"{\");\n\n\tif (bracesPos == -1) {\n\t\tsite.syntaxError(\"invalid map literal expression syntax\");\n\t\treturn null;\n\t}\n\n\tconst valueTypeTs = ts.splice(0, bracesPos);\n\n\tconst valueTypeExpr = buildTypeExpr(site, valueTypeTs.slice());\n\n\tif (!valueTypeExpr) {\n\t\treturn null;\n\t}\n\n\tconst braces = assertDefined(ts.shift()).assertGroup(\"{\");\n\n\tif (!braces) {\n\t\treturn null;\n\t}\n\n\t/**\n\t * @type {null | [Expr, Expr][]}\n\t */\n\tconst pairs = reduceNullPairs(braces.fields.map(fts => {\n\t\tconst colonPos = SymbolToken.find(fts, \":\");\n\n\t\tif (colonPos == -1) {\n\t\t\tif (fts.length == 0) {\n\t\t\t\tbraces.syntaxError(\"unexpected empty field\");\n\t\t\t} else {\n\t\t\t\tfts[0].syntaxError(\"expected ':' in map literal field\");\n\t\t\t}\n\t\t} else if (colonPos == 0) {\n\t\t\tfts[colonPos].syntaxError(\"expected expression before ':' in map literal field\");\n\t\t} else if (colonPos == fts.length - 1) {\n\t\t\tfts[colonPos].syntaxError(\"expected expression after ':' in map literal field\");\n\t\t} else {\n\t\t\tconst keyTs = fts.slice(0, colonPos);\n\t\t\tconst keyExpr = buildValueExpr(keyTs[0]?.isGroup(\"{\") ? keyTypeTs.concat(keyTs) : keyTs);\n\n\t\t\tconst valueTs = fts.slice(colonPos+1)\n\t\t\tconst valueExpr = buildValueExpr(valueTs[0]?.isGroup(\"{\") ? valueTypeTs.concat(valueTs) : valueTs);\n\n\t\t\t/**\n\t\t\t * @type {[Expr | null, Expr | null]}\n\t\t\t */\n\t\t\treturn [keyExpr, valueExpr];\n\t\t}\n\n\t\treturn [null, null];\n\t}));\n\n\tif (pairs === null) {\n\t\treturn null;\n\t}\n\n\treturn new MapLiteralExpr(site, keyTypeExpr, valueTypeExpr, pairs);\n}\n\n/**\n * @internal\n * @param {Token[]} ts \n * @returns {StructLiteralExpr | null}\n */\nfunction buildStructLiteralExpr(ts) {\n\tconst bracesPos = Group.find(ts, \"{\");\n\n\tassert(bracesPos != -1);\n\n\tconst site = ts[bracesPos].site;\n\n\tif (bracesPos == 0) {\n\t\tsite.syntaxError(\"expected struct type before braces\");\n\t\treturn null;\n\t}\n\t\n\tconst typeExpr = buildTypeExpr(site, ts.splice(0, bracesPos));\n\n\tif (!typeExpr) {\n\t\treturn null;\n\t}\n\n\tconst braces = assertDefined(ts.shift()).assertGroup(\"{\");\n\n\tif (!braces) {\n\t\treturn null;\n\t}\n\n\tconst fields = reduceNull(braces.fields.map(fts => buildStructLiteralField(braces.site, fts)));\n\n\tif (fields === null) {\n\t\treturn null;\n\t} \n\t\n\tif (fields.every(f => f.isNamed()) || fields.every(f => !f.isNamed())) {\n\t\treturn new StructLiteralExpr(typeExpr, fields);\n\t} else {\n\t\tbraces.site.syntaxError(\"mangled literal struct (hint: specify all fields positionally or all with keys)\");\n\t\treturn null;\n\t}\n}\n\n/**\n * @internal\n * @param {Site} site - site of the braces\n * @param {Token[]} ts\n * @returns {StructLiteralField | null}\n */\nfunction buildStructLiteralField(site, ts) {\n\tif (ts.length > 2 && ts[0].isWord() && ts[1].isSymbol(\":\")) {\n\t\treturn buildStructLiteralNamedField(site, ts);\n\t} else {\n\t\treturn buildStructLiteralUnnamedField(site, ts);\n\t}\n}\n\n/**\n * @internal\n * @param {Site} site\n * @param {Token[]} ts\n * @returns {StructLiteralField | null}\n */\nfunction buildStructLiteralNamedField(site, ts) {\n\tconst name = assertToken(ts.shift(), site, \"empty struct literal field\")?.assertWord()?.assertNotKeyword();\n\n\tif (!name) {\n\t\treturn null;\n\t}\n\n\tconst colon = assertToken(ts.shift(), name.site, \"expected ':' after struct field name\")?.assertSymbol(\":\");\n\n\tif (!colon) {\n\t\treturn null;\n\t}\n\n\tif (ts.length == 0) {\n\t\tcolon.syntaxError(\"expected expression after ':'\");\n\t\treturn null;\n\t}\n\tconst valueExpr = buildValueExpr(ts);\n\n\tif (!valueExpr) {\n\t\treturn null;\n\t}\n\n\treturn new StructLiteralField(name, valueExpr);\n}\n\n/**\n * @internal\n * @param {Site} site\n * @param {Token[]} ts\n * @returns {StructLiteralField | null}\n */\nfunction buildStructLiteralUnnamedField(site, ts) {\n\tconst valueExpr = buildValueExpr(ts);\n\n\tif (!valueExpr) {\n\t\treturn null;\n\t}\n\n\treturn new StructLiteralField(null, valueExpr);\n}\n\n/**\n * @internal\n * @param {Token[]} ts \n * @returns {Expr | null}\n */\nfunction buildValuePathExpr(ts) {\n\tconst dcolonPos = SymbolToken.findLast(ts, \"::\");\n\n\tassert(dcolonPos != -1);\n\n\tconst typeExpr = buildTypeExpr(ts[dcolonPos].site, ts.splice(0, dcolonPos));\n\n\tif (!typeExpr) {\n\t\treturn null;\n\t}\n\n\tconst dcolon = assertDefined(ts.shift()?.assertSymbol(\"::\"));\n\n\tconst memberName = assertToken(ts.shift(), dcolon.site)?.assertWord()?.assertNotKeyword();\n\n\tif (!memberName) {\n\t\treturn null;\n\t}\n\t\n\treturn new ValuePathExpr(typeExpr.site, typeExpr, memberName);\n}\n\n\n/////////////////////////////////\n// Section 27: IR Context objects\n/////////////////////////////////\n\n/**\n * Scope for IR names.\n * Works like a stack of named values from which a Debruijn index can be derived\n * @internal\n */\nexport class IRScope {\n\t#parent;\n\t/** variable name (can be empty if no usable variable defined at this level) */\n\t#variable;\n\n\t/**\n\t * @param {null | IRScope} parent \n\t * @param {null | IRVariable} variable\n\t */\n\tconstructor(parent, variable) {\n\t\tthis.#parent = parent;\n\t\tthis.#variable = variable;\n\t}\n\n\t/**\n\t * Calculates the Debruijn index of a named value. Internal method\n\t * @param {Word | IRVariable} name \n\t * @param {number} index \n\t * @returns {[number, IRVariable]}\n\t */\n\tgetInternal(name, index) {\n\t\tif (this.#variable !== null && (name instanceof Word && this.#variable.toString() == name.toString()) || (name instanceof IRVariable && this.#variable == name)) {\n\t\t\treturn [index, this.#variable];\n\t\t} else if (this.#parent === null) {\n\t\t\tthrow name.referenceError(`variable ${name.toString()} not found`);\n\t\t} else {\n\t\t\treturn this.#parent.getInternal(name, index + 1);\n\t\t}\n\t}\n\n\t/**\n\t * Calculates the Debruijn index.\n\t * @param {Word | IRVariable} name \n\t * @returns {[number, IRVariable]}\n\t */\n\tget(name) {\n\t\t// one-based\n\t\treturn this.getInternal(name, 1);\n\t}\n\n\t/**\n\t * Checks if a named builtin exists\n\t * @param {string} name \n\t * @param {boolean} strict - if true then throws an error if builtin doesn't exist\n\t * @returns {boolean}\n\t */\n\tstatic isBuiltin(name, strict = false) {\n\t\tif (name.startsWith(BUILTIN_PREFIX)) {\n\t\t\tif (strict) {\n\t\t\t\tvoid this.findBuiltin(name); // assert that builtin exists\n\t\t\t}\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\t/**\n\t * Returns index of a named builtin\n\t * Throws an error if builtin doesn't exist\n\t * @param {string} name \n\t * @returns {number}\n\t */\n\tstatic findBuiltin(name) {\n\t\tlet i = UPLC_BUILTINS.findIndex(info => { return BUILTIN_PREFIX + info.name == name });\n\t\tassert(i != -1, `${name} is not a real builtin`);\n\t\treturn i;\n\t}\n}\n\n/**\n * IR class that represents function arguments\n * @internal\n */\nexport class IRVariable extends Token {\n\t#name;\n\n\t/**\n\t * @param {Word} name\n\t */\n\tconstructor(name) {\n\t\tsuper(name.site);\n\t\tthis.#name = name;\n\t}\n\n\t/**\n\t * @type {string}\n\t */\n\tget name() {\n\t\treturn this.#name.toString();\n\t}\n\n\t/**\n\t * @returns {string}\n\t */\n\ttoString() {\n\t\treturn this.name;\n\t}\n\n\t/**\n\t * @param {Map<IRVariable, IRVariable>} newVars \n\t * @returns {IRVariable}\n\t */\n\tcopy(newVars) {\n\t\tconst newVar = new IRVariable(this.#name);\n\n\t\tnewVars.set(this, newVar);\n\n\t\treturn newVar;\n\t}\n}\n\n\n/////////////////////////////\n// Section 28: IR AST objects\n/////////////////////////////\n\n\n/**\n * The optimizer maps expressions to expected values, calling notifyCopy assures that that mapping isn't lost for copies (copying is necessary when inlining)\n * @internal\n * @typedef {(oldExpr: IRExpr, newExpr: IRExpr) => void} NotifyCopy\n */\n\n/**\n * Interface for:\n *   * `IRErrorExpr`\n *   * `IRCallExpr`\n *   * `IRFuncExpr`\n *   * `IRNameExpr`\n *   * `IRLiteralExpr`\n * \n * The `copy()` method is needed because inlining can't use the same IRNameExpr twice, \n *   so any inlineable expression is copied upon inlining to assure each nested IRNameExpr is unique.\n *   This is important to do even the the inlined expression is only called once, because it might still be inlined into multiple other locations that are eliminated in the next iteration.\n * \n * `flatSize` returns the number of bits occupied by the equivalent UplcTerm in the final serialized UPLC program\n *   This is used to detect small IRFuncExprs and inline them\n * @internal\n * @typedef {{\n *   site: Site,\n *   flatSize: number\n *   resolveNames(scope: IRScope): void,\n *   toString(indent?: string): string,\n *   copy(notifyCopy: NotifyCopy, varMap: Map<IRVariable, IRVariable>): IRExpr,\n *   toUplc(): UplcTerm\n * }} IRExpr\n */\n\n/**\n * Intermediate Representation variable reference expression\n * @internal\n * @implements {IRExpr}\n */\nexport class IRNameExpr {\n\t/**\n\t * @readonly\n\t * @type {Site}\n\t */\n\tsite;\n\n\t#name;\n\n\t/**\n\t * @type {null | number} - cached debruijn index \n\t */\n\t#index;\n\n\t/**\n\t * @type {null | IRVariable} - cached variable\n\t */\n\t#variable;\n\n\t/**\n\t * @param {Word} name \n\t * @param {null | IRVariable} variable\n\t */\n\tconstructor(name, variable = null) {\n\t\tthis.site = name.site;\n\t\tassert(name.toString() != \"_\");\n\t\tassert(!name.toString().startsWith(\"undefined\"));\n\t\tthis.#name = name;\n\t\tthis.#index = null;\n\t\tthis.#variable = variable;\n\t}\n\n\t/**\n\t * @type {string}\n\t */\n\tget name() {\n\t\treturn this.#name.toString();\n\t}\n\n\t/**\n\t * isVariable() should be used to check if a IRNameExpr.variable is equal to a IRVariable (includes special handling of \"__core*\")\n\t * @type {IRVariable}\n\t */\n\tget variable() {\n\t\tif (this.#variable === null) {\n\t\t\tthrow new Error(`variable should be set (name: ${this.name})`);\n\t\t} else {\n\t\t\treturn this.#variable;\n\t\t}\n\t}\n\n\t/**\n\t * @type {number}\n\t */\n\tget flatSize() {\n\t\tif (this.isCore()) {\n\t\t\tlet nForce = 0;\n\n\t\t\tlet name = this.name;\n\t\t\tif (!name.startsWith(MACRO_BUILTIN_PREFIX) && name.startsWith(BUILTIN_PREFIX)) {\n\t\t\t\tif (name.endsWith(SAFE_BUILTIN_SUFFIX)) {\n\t\t\t\t\tname = name.slice(0, name.length - SAFE_BUILTIN_SUFFIX.length);\n\t\t\t\t}\n\n\t\t\t\tnForce = UPLC_BUILTINS[IRScope.findBuiltin(name)].forceCount;\n\t\t\t}\n\n\t\t\treturn 13 + 4*nForce; // 4 for header, 7 for builtin index, 4 per force\n\t\t} else {\n\t\t\treturn 13; // 4 for term header, and assume DeBruijn index fits in 7 bits\n\t\t}\n\t}\n\n\t/**\n\t * Used when inlining\n\t * @param {(oldExpr: IRExpr, newExpr: IRExpr) => void} notifyCopy\n\t * @param {Map<IRVariable, IRVariable>} varMap\n\t * @returns {IRNameExpr}\n\t */\n\tcopy(notifyCopy, varMap) {\n\t\tconst variable = (this.#variable ? (varMap.get(this.#variable) ?? this.#variable) : this.#variable);\n\n\t\tconst newExpr = new IRNameExpr(this.#name, variable);\n\n\t\tnotifyCopy(this, newExpr);\n\n\t\treturn newExpr;\n\t}\n\n\t/**\n\t * @internal\n\t * @returns {boolean}\n\t */\n\tisCore() {\n\t\tconst name = this.name;\n\n\t\treturn name.startsWith(BUILTIN_PREFIX);\n\t}\n\n\t/**\n\t * @internal\n\t * @returns {boolean}\n\t */\n\tisParam() {\n\t\treturn this.name.startsWith(\"__PARAM\")\n\t}\n\n\t/**\n\t * @param {IRVariable} ref \n\t * @returns {boolean}\n\t */\n\tisVariable(ref) {\n\t\tif (this.isCore()) {\n\t\t\treturn false;\n\t\t} else {\n\t\t\treturn this.variable === ref;\n\t\t}\n\t}\n\n\t/**\n\t * @param {string} indent \n\t * @returns {string}\n\t */\n\ttoString(indent = \"\") {\n\t\treturn this.#name.toString();\n\t}\n\n\t/**\n\t * @param {IRScope} scope\n\t */\n\tresolveNames(scope) {\n\t\tif (!this.isCore()) {\n\t\t\tif (this.#variable == null || this.isParam()) {\n\t\t\t\t[this.#index, this.#variable] = scope.get(this.#name);\n\t\t\t} else {\n\t\t\t\t[this.#index, this.#variable] = scope.get(this.#variable);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @returns {UplcTerm}\n\t */\n\ttoUplc() {\n\t\tif (this.isCore()) {\n\t\t\treturn IRCallExpr.newUplcBuiltin(this.site, this.name);\n\t\t} else if (this.#index === null) {\n\t\t\t// use a dummy index (for size calculation)\n\t\t\treturn new UplcVariable(\n\t\t\t\tthis.site,\n\t\t\t\tnew UplcInt(this.site, BigInt(0), false),\n\t\t\t);\n\t\t} else {\n\t\t\treturn new UplcVariable(\n\t\t\t\tthis.site,\n\t\t\t\tnew UplcInt(this.site, BigInt(this.#index), false),\n\t\t\t);\n\t\t}\n\t}\n}\n\n/**\n * IR wrapper for UplcValues, representing literals\n * @internal\n * @implements {IRExpr}\n */\nexport class IRLiteralExpr {\n\t/**\n\t * @readonly\n\t * @type {Site}\n\t */\n\tsite;\n\n\t/**\n\t * @type {UplcValue}\n\t */\n\t#value;\n\n\t/**\n\t * @param {UplcValue} value \n\t */\n\tconstructor(value) {\n\t\tthis.site = value.site;\n\n\t\tthis.#value = value;\n\t}\n\n\t/**\n\t * @type {UplcValue}\n\t */\n\tget value() {\n\t\treturn this.#value;\n\t}\n\n\t/**\n\t * @type {number}\n\t */\n\tget flatSize() {\n\t\treturn (new UplcConst(this.#value)).flatSize;\n\t}\n\n\t/**\n\t * @param {string} indent \n\t * @returns {string}\n\t */\n\ttoString(indent = \"\") {\n\t\treturn this.#value.toString();\n\t}\n\n\t/**\n\t * @param {NotifyCopy} notifyCopy\n\t * @param {Map<IRVariable, IRVariable>} varMap\n\t * @returns {IRExpr}\n\t */\n\tcopy(notifyCopy, varMap) {\n\t\treturn this;\n\t}\n\n\t/**\n\t * Linking doesn't do anything for literals\n\t * @param {IRScope} scope \n\t */\n\tresolveNames(scope) {\n\t}\n\n\t/**\n\t * @returns {UplcConst}\n\t */\n\ttoUplc() {\n\t\treturn new UplcConst(this.#value);\n\t}\n}\n\n/**\n * IR function expression with some args, that act as the header, and a body expression\n * @internal\n * @implements {IRExpr}\n */\nexport class IRFuncExpr {\n\t/**\n\t * @readonly\n\t * @type {Site}\n\t */\n\tsite;\n\n\t/**\n\t * Mutation is more convenient and much faster when applying some optimizations.\n\t * @readwrite\n\t * @type {IRVariable[]}\n\t */\n\targs;\n\n\t/**\n\t * Mutation is more convenient and much faster when applying some optimizations.\n\t * @readwrite\n\t * @type {IRExpr}\n\t */\n\tbody;\n\n\t/**\n\t * A unique tag, that distinguishes each IRFuncExpr from each other IRFuncExpr (used for hashing)\n\t * @readonly\n\t * @type {number}\n\t */\n\ttag;\n\n\t/**\n\t * @param {Site} site \n\t * @param {IRVariable[]} args \n\t * @param {IRExpr} body \n\t * @param {number} tag\n\t */\n\tconstructor(site, args, body, tag) {\n\t\tthis.site = site;\n\t\tthis.args = args;\n\t\tthis.body = assertDefined(body);\n\t\tthis.tag = tag;\n\t}\n\n\t/**\n\t * @type {number}\n\t */\n\tget flatSize() {\n\t\tconst nArgs = this.args.length;\n\t\treturn 4 + (nArgs > 0 ? (nArgs - 1)*4 : 0) + this.body.flatSize;\n\t}\n\n\t/**\n\t * @returns {boolean}\n\t */\n\thasOptArgs() {\n\t\tconst b = this.args.some(a => a.name.startsWith(\"__useopt__\"));\n\n\t\tif (b) {\n\t\t\treturn b;\n\t\t}\n\n\t\tif (this.body instanceof IRFuncExpr) {\n\t\t\treturn this.body.hasOptArgs();\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\t/**\n\t * @param {string} indent \n\t * @returns {string}\n\t */\n\ttoString(indent = \"\") {\n\t\tlet innerIndent = (this.body instanceof IRCallExpr && this.body.func instanceof IRFuncExpr && this.body.args.length == 1 && this.body.func instanceof IRFuncExpr && this.body.func.args[0].name.startsWith(\"__\")) ? indent : indent + TAB;\n\n\t\tlet s = \"(\" + this.args.map(n => n.toString()).join(\", \") + \") -> {\\n\" + innerIndent;\n\t\ts += this.body.toString(innerIndent);\n\t\ts += \"\\n\" + indent + \"}\";\n\n\t\treturn s;\n\t}\n\n\t/**\n\t * @param {IRScope} scope \n\t */\n\tresolveNames(scope) {\n\t\t// in the zero-arg case no Debruijn indices need to be added because we use Delay/Force\n\n\t\tfor (let arg of this.args) {\n\t\t\tscope = new IRScope(scope, arg);\n\t\t}\n\n\t\tthis.body.resolveNames(scope);\n\t}\n\n\t/**\n\t * @param {NotifyCopy} notifyCopy\n\t * @param {Map<IRVariable, IRVariable>} varMap\n\t * @returns {IRExpr}\n\t */\n\tcopy(notifyCopy, varMap) {\n\t\tconst args = this.args.map(a => a.copy(varMap));\n\t\tconst newExpr = new IRFuncExpr(this.site, args, this.body.copy(notifyCopy, varMap), this.tag);\n\n\t\tnotifyCopy(this, newExpr);\n\n\t\treturn newExpr;\n\t}\n\n\t/** \n\t * @returns {UplcTerm}\n\t */\n\ttoUplc() {\n\t\tlet term = this.body.toUplc();\n\n\t\tif (this.args.length == 0) {\n\t\t\t// a zero-arg func is turned into a UplcDelay term\n\t\t\tterm = new UplcDelay(this.site, term);\n\t\t} else {\n\t\t\tfor (let i = this.args.length - 1; i >= 0; i--) {\n\t\t\t\tterm = new UplcLambda(this.site, term, this.args[i].toString());\n\t\t\t}\n\t\t}\n\n\t\treturn term;\n\t}\n}\n\n/**\n * Base class of IRUserCallExpr and IRCoreCallExpr\n * @internal\n * @implements {IRExpr}\n */\nexport class IRCallExpr {\n\t/**\n\t * @readonly\n\t * @type {Site}\n\t */\n\tsite;\n\n\t/**\n\t * Mutation is more convenient and much faster when applying some optimizations.\n\t * @readwrite\n\t * @type {IRExpr}\n\t */\n\tfunc;\n\n\t/**\n\t * Mutation is more convenient and much faster when applying some optimizations.\n\t * @readwrite\n\t * @type {IRExpr[]}\n\t */\n\targs;\n\n\t/**\n\t * @param {Site} site\n\t * @param {IRExpr} func\n\t * @param {IRExpr[]} args\n\t */\n\tconstructor(site, func, args) {\n\t\tthis.site = site;\n\t\tthis.func = func;\n\t\tthis.args = args;\n\t}\n\n\t/**\n\t * @returns {boolean}\n\t */\n\tisSafeBuiltin() {\n\t\tif (this.func instanceof IRNameExpr && this.func.isCore()) {\n\t\t\treturn this.func.name.endsWith(SAFE_BUILTIN_SUFFIX);\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\t/**\n\t * Returns an empty string this isn't a builtin\n\t * @type {string}\n\t */\n\tget builtinName() {\n\t\tif (this.func instanceof IRNameExpr && this.func.isCore()) {\n\t\t\tlet name = this.func.name.toString().slice(BUILTIN_PREFIX.length);\n\n\t\t\tif (name.endsWith(SAFE_BUILTIN_SUFFIX)) {\n\t\t\t\tname = name.slice(0, name.length - SAFE_BUILTIN_SUFFIX.length);\n\t\t\t}\n\n\t\t\treturn name;\n\t\t} else {\n\t\t\treturn \"\";\n\t\t}\n\t}\n\n\tget flatSize() {\n\t\treturn 4 + this.args.reduce((prev, arg) => arg.flatSize + prev, 0) + this.func.flatSize;\n\t}\n\n\t/**\n\t * @param {string} indent \n\t * @returns {string}\n\t */\n\targsToString(indent = \"\") {\n\t\treturn this.args.map(argExpr => argExpr.toString(indent)).join(\", \")\n\t}\n\n\t/**\n\t * @param {string} indent\n\t * @returns {string}\n\t */\n\ttoString(indent = \"\") {\n\t\tif (this.builtinName == \"ifThenElse\") {\n\t\t\treturn `${BUILTIN_PREFIX}${this.builtinName}(\\n${indent}${TAB}${this.args[0].toString(indent + TAB)},\\n${indent}${TAB}${this.args[1].toString(indent + TAB)},\\n${indent}${TAB}${this.args[2].toString(indent+TAB)}\\n${indent})`;\n\t\t} else if (this.builtinName != \"\") {\n\t\t\treturn `${BUILTIN_PREFIX}${this.builtinName}(${this.argsToString(indent)})`;\n\t\t} else {\n\t\t\tlet comment = (this.func instanceof IRFuncExpr && this.func.args.length == 1 && this.func.args[0].name.startsWith(\"__\")) ? `/*${this.func.args[0].name}*/` : \"\";\n\n\t\t\treturn `${this.func.toString(indent)}(${comment}${this.argsToString(indent)})`;\n\t\t}\n\t}\n\n\t/**\n\t * @param {IRScope} scope \n\t */\n\tresolveNamesInArgs(scope) {\n\t\tfor (let argExpr of this.args) {\n\t\t\targExpr.resolveNames(scope);\n\t\t}\n\t}\n\n\t/**\n\t * @param {IRScope} scope \n\t */\n\tresolveNames(scope) {\n\t\tif (this.func instanceof IRNameExpr && this.func.isCore()) {\n\t\t\tthis.resolveNamesInArgs(scope);\n\t\t} else {\n\t\t\tthis.func.resolveNames(scope);\n\t\t\tthis.resolveNamesInArgs(scope);\n\t\t}\n\t}\n\n\t/**\n\t * @param {NotifyCopy} notifyCopy\n\t * @param {Map<IRVariable, IRVariable>} varMap\n\t * @returns {IRExpr}\n\t */\n\tcopy(notifyCopy, varMap) {\n\t\tconst newExpr = new IRCallExpr(this.site, this.func.copy(notifyCopy, varMap), this.args.map(a => a.copy(notifyCopy, varMap)));\n\n\t\tnotifyCopy(this, newExpr);\n\n\t\treturn newExpr;\n\t}\n\n\t/**\n\t * @param {UplcTerm} term\n\t * @returns {UplcTerm}\n\t */\n\ttoUplcCall(term) {\n\t\tif (this.args.length == 0) {\n\t\t\t// assuming underlying zero-arg function has been converted into a UplcDelay term\n\t\t\tterm = new UplcForce(this.site, term);\n\t\t} else {\n\t\t\tfor (let argExpr of this.args) {\n\t\t\t\t\n\t\t\t\tterm = new UplcCall(this.site, term, argExpr.toUplc());\n\t\t\t}\n\t\t}\n\n\t\treturn term;\n\t}\n\n\t/**\n\t * @param {Site} site\n\t * @param {string} name - full name of builtin, including prefix\n\t * @returns {UplcTerm}\n\t */\n\tstatic newUplcBuiltin(site, name) {\n\t\tassert(name.startsWith(BUILTIN_PREFIX));\n\n\t\tif (name.endsWith(SAFE_BUILTIN_SUFFIX)) {\n\t\t\tname = name.slice(0, name.length - SAFE_BUILTIN_SUFFIX.length);\n\t\t}\n\n\t\tconst builtinName = name.slice(BUILTIN_PREFIX.length);\n\n\t\t/**\n\t\t * @type {UplcTerm}\n\t\t */\n\t\tlet term = new UplcBuiltin(site, builtinName);\n\n\t\tif (!builtinName.startsWith(\"macro__\")) {\n\t\t\tconst nForce = UPLC_BUILTINS[IRScope.findBuiltin(name)].forceCount;\n\t\n\t\t\tfor (let i = 0; i < nForce; i++) {\n\t\t\t\tterm = new UplcForce(site, term);\n\t\t\t}\n\t\t}\n \n\t\treturn term;\n\t}\n\n\t/**\n\t * @returns {UplcTerm}\n\t */\n\ttoUplc() {\n\t\tif (this.func instanceof IRNameExpr && this.func.name.startsWith(BUILTIN_PREFIX)) {\n\t\t\tlet term = IRCallExpr.newUplcBuiltin(this.site, this.func.name);\n\n\t\t\treturn this.toUplcCall(term);\n\t\t} else {\n\t\t\treturn this.toUplcCall(this.func.toUplc());\n\t\t}\n\t}\n}\n\n/**\n * Intermediate Representation error call (with optional literal error message)\n * @internal\n * @implements {IRExpr}\n */\nexport class IRErrorExpr {\n\t/**\n\t * @readonly\n\t * @type {Site}\n\t */\n\tsite;\n\n\t#msg;\n\n\t/**\n\t * @param {Site} site \n\t * @param {string} msg \n\t */\n\tconstructor(site, msg = \"\") {\n\t\tthis.site = site;\n\t\tthis.#msg = msg;\n\t}\n\n\t/**\n\t * @type {number}\n\t */\n\tget flatSize() {\n\t\treturn 4;\n\t}\n\n\t/**\n\t * @param {string} indent \n\t * @returns {string}\n\t */\n\ttoString(indent = \"\") {\n\t\treturn \"error()\";\n\t}\n\n\t/**\n\t * @param {IRScope} scope \n\t */\n\tresolveNames(scope) {\n\t}\n\n\t/**\n\t * @param {NotifyCopy} notifyCopy\n\t * @returns {IRExpr}\n\t */\n\tcopy(notifyCopy) {\n\t\tconst newExpr = new IRErrorExpr(this.site, this.#msg);\n\n\t\tnotifyCopy(this, newExpr);\n\n\t\treturn newExpr;\n\t}\n\n\t/**\n\t * @returns {UplcTerm}\n\t */\n\ttoUplc() {\n\t\treturn new UplcError(this.site, this.#msg);\n\t}\n}\n\n/**\n * @internal\n * @param {IRExpr} root \n * @param {{\n *   nameExpr?: (expr: IRNameExpr) => void\n *   errorExpr?: (expr: IRErrorExpr) => void\n *   literalExpr?: (expr: IRLiteralExpr) => void\n *   callExpr?: (expr: IRCallExpr) => void\n *   funcExpr?: (expr: IRFuncExpr) => void\n *   exit?: () => boolean\n * }} callbacks \n * @returns \n */\nexport function loopIRExprs(root, callbacks) {\n\tconst stack = [root];\n\n\tlet head = stack.pop();\n\n\twhile (head) {\n\t\tif (head instanceof IRNameExpr) {\n\t\t\tif (callbacks.nameExpr) {\n\t\t\t\tcallbacks.nameExpr(head);\n\t\t\t}\n\t\t} else if (head instanceof IRErrorExpr) {\n\t\t\tif (callbacks.errorExpr) {\n\t\t\t\tcallbacks.errorExpr(head);\n\t\t\t}\n\t\t} else if (head instanceof IRLiteralExpr) {\n\t\t\tif (callbacks.literalExpr) {\n\t\t\t\tcallbacks.literalExpr(head);\n\t\t\t}\n\t\t} else if (head instanceof IRCallExpr) {\n\t\t\tstack.push(head.func);\n\n\t\t\tfor (let a of head.args) {\n\t\t\t\tstack.push(a);\n\t\t\t}\n\n\t\t\tif (callbacks.callExpr) {\n\t\t\t\tcallbacks.callExpr(head);\n\t\t\t}\n\t\t} else if (head instanceof IRFuncExpr) {\n\t\t\tif (callbacks.funcExpr) {\n\t\t\t\tcallbacks.funcExpr(head);\n\t\t\t}\n\n\t\t\tstack.push(head.body);\n\t\t}\n\n\t\tif (callbacks.exit && callbacks.exit()) {\n\t\t\treturn;\n\t\t}\n\n\t\thead = stack.pop();\n\t}\n}\n\n\n/////////////////////////////////////\n// Section 29: IR AST build functions\n/////////////////////////////////////\n\n/**\n * @internal\n */\nclass IRExprTagger {\n\t#tag;\n\n\tconstructor() {\n\t\tthis.#tag = 0;\n\t}\n\n\tgenTag() {\n\t\tthis.#tag += 1;\n\n\t\treturn this.#tag;\n\t}\n}\n\n/**\n * Build an Intermediate Representation expression\n * @param {Token[]} ts \n * @param {IRExprTagger | null} funcTagger // each IRFuncExpr needs a unique tag, so that hashing different IRFuncExprs with the same args and bodies leads to a different hash\n * @returns {IRExpr}\n * @internal\n */\nexport function buildIRExpr(ts, funcTagger = null) {\n\t/** @type {null | IRExpr} */\n\tlet expr = null;\n\n\tif (funcTagger === null) {\n\t\tfuncTagger = new IRExprTagger();\n\t}\n\n\twhile (ts.length > 0) {\n\t\tlet t = ts.shift();\n\n\t\tif (t === undefined) {\n\t\t\tthrow new Error(\"unexpected: no tokens\");\n\t\t} else {\n\t\t\tif (t.isGroup(\"(\") && ts.length > 0 && ts[0].isSymbol(\"->\")) {\n\t\t\t\tassert(expr === null, \"shouldn't be preceded by an expr\");\n\n\t\t\t\tts.unshift(t);\n\n\t\t\t\texpr = buildIRFuncExpr(ts, funcTagger);\n\t\t\t} else if (t.isGroup(\"(\")) {\n\t\t\t\tlet group = assertDefined(t.assertGroup(), \"should be a group\");\n\n\t\t\t\tif (expr === null) {\n\t\t\t\t\tif (group.fields.length == 1) {\n\t\t\t\t\t\texpr = buildIRExpr(group.fields[0], funcTagger)\n\t\t\t\t\t} else if (group.fields.length == 0) {\n\t\t\t\t\t\texpr = new IRLiteralExpr(new UplcUnit(t.site));\n\t\t\t\t\t} else {\n\t\t\t\t\t\tgroup.syntaxError(\"unexpected parentheses with multiple fields\");\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tlet args = [];\n\t\t\t\t\tfor (let f of group.fields) {\n\t\t\t\t\t\targs.push(buildIRExpr(f, funcTagger));\n\t\t\t\t\t}\n\n\t\t\t\t\texpr = new IRCallExpr(t.site, expr, args);\n\t\t\t\t}\n\t\t\t} else if (t.isSymbol(\"-\")) {\n\t\t\t\t// only makes sense next to IntegerLiterals\n\t\t\t\tlet int = assertDefined(ts.shift(), \"expected digit after '-'\");\n\t\t\t\tif (int instanceof IntLiteral) {\n\t\t\t\t\texpr = new IRLiteralExpr(new UplcInt(int.site, int.value * (-1n)));\n\t\t\t\t} else {\n\t\t\t\t\tthrow int.site.typeError(`expected literal int, got ${int}`);\n\t\t\t\t}\n\t\t\t} else if (t instanceof BoolLiteral) {\n\t\t\t\tassert(expr === null);\n\t\t\t\texpr = new IRLiteralExpr(new UplcBool(t.site, t.value));\n\t\t\t} else if (t instanceof IntLiteral) {\n\t\t\t\tassert(expr === null);\n\t\t\t\texpr = new IRLiteralExpr(new UplcInt(t.site, t.value));\n\t\t\t} else if (t instanceof ByteArrayLiteral) {\n\t\t\t\tassert(expr === null);\n\t\t\t\tif (t.bytes.length == 0 && ts[0] != undefined && ts[0] instanceof ByteArrayLiteral) {\n\t\t\t\t\t// literal data is ##<...>\n\t\t\t\t\tconst next = assertDefined(ts.shift(), \"expected hexadecimal bytestring after '##'\");\n\n\t\t\t\t\tif (next instanceof ByteArrayLiteral) {\n\t\t\t\t\t\texpr = new IRLiteralExpr(new UplcDataValue(next.site, UplcData.fromCbor(next.bytes)));\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthrow new Error(\"unexpected token after '##'\");\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\texpr = new IRLiteralExpr(new UplcByteArray(t.site, t.bytes));\n\t\t\t\t}\n\t\t\t} else if (t instanceof StringLiteral) {\n\t\t\t\tassert(expr === null);\n\t\t\t\texpr = new IRLiteralExpr(new UplcString(t.site, t.value));\n\t\t\t} else if (t.isWord(\"error\")) {\n\t\t\t\tassert(expr === null, \"unexpected expr before 'error'\");\n\n\t\t\t\tlet maybeGroup = ts.shift();\n\t\t\t\tif (maybeGroup === undefined) {\n\t\t\t\t\tthrow t.site.syntaxError(\"expected parens after error\");\n\t\t\t\t} else {\n\t\t\t\t\tassertDefined(maybeGroup.assertGroup(\"(\", 0), \"expected empty parens after 'error'\");\n\t\t\t\t\t\n\t\t\t\t\texpr = new IRErrorExpr(t.site, \"\");\n\t\t\t\t}\n\t\t\t} else if (t.isWord()) {\n\t\t\t\tconst w = assertDefined(t.assertWord(), \"expected word\");\n\n\t\t\t\tif (expr !== null) {\n\t\t\t\t\tthrow new Error(`unexpected expr '${expr.toString()}' before word '${w.value}'`);\n\t\t\t\t}\n\n\t\t\t\texpr = new IRNameExpr(w);\n\t\t\t} else {\n\t\t\t\tthrow new Error(\"unhandled untyped token \" + t.toString());\n\t\t\t}\n\t\t}\n\t}\n\n\tif (expr === null) {\n\t\tthrow new Error(\"expr is null\");\n\t} else {\n\t\treturn expr;\n\t}\n}\n\n/**\n * Build an IR function expression\n * @param {Token[]} ts \n * @param {IRExprTagger} funcTagger\n * @returns {IRFuncExpr}\n */\nfunction buildIRFuncExpr(ts, funcTagger) {\n\tlet maybeParens = ts.shift();\n\tif (maybeParens === undefined) {\n\t\tthrow new Error(\"empty func expr\");\n\t} else {\n\t\tlet parens = assertDefined(maybeParens.assertGroup(\"(\"));\n\n\t\tassertDefined(ts.shift()).assertSymbol(\"->\");\n\t\tlet braces = assertDefined(assertDefined(ts.shift()).assertGroup(\"{\"));\n\n\t\t/**\n\t\t * @type {Word[]}\n\t\t */\n\t\tlet argNames = [];\n\n\t\tfor (let f of parens.fields) {\n\t\t\tassert(f.length == 1, \"expected single word per arg\");\n\t\t\targNames.push(assertDefined(f[0].assertWord()));\n\t\t}\n\n\t\tif (braces.fields.length > 1) {\n\t\t\tthrow braces.syntaxError(\"unexpected comma in function body\")\n\t\t} else if (braces.fields.length == 0) {\n\t\t\tthrow braces.syntaxError(\"empty function body\")\n\t\t}\n\n\t\tlet bodyExpr = buildIRExpr(braces.fields[0], funcTagger);\n\n\t\treturn new IRFuncExpr(parens.site, argNames.map(a => new IRVariable(a)), bodyExpr, funcTagger.genTag());\n\t}\n}\n\n\n///////////////////////////////////\n// Section 30: IR pseudo evaluation\n///////////////////////////////////\n\n\n/**\n * @internal\n * @typedef {{\n *   toString(): string\n *   isLiteral(): boolean\n *   hasError(maybe: boolean): boolean\n *   withoutLiterals(): IRValue\n *   withoutErrors(): IRValue\n *   dump(codeMapper: IRValueCodeMapper, depth?: number): any\n * }} IRValue\n */\n\n\n/**\n * @internal\n */\nclass IRStack {\n    /**\n     * @readonly\n     * @type {[IRVariable, IRValue][]}\n     */\n    values;\n\n    #isLiteral;\n\n    /**\n     * @param {[IRVariable, IRValue][]} values \n     * @param {boolean} isLiteral\n     */\n    constructor(values, isLiteral) {\n        this.values = values;\n        this.#isLiteral = isLiteral || values.length == 0;\n    }\n\n    /**\n     * @param {IRVariable} variable \n     * @returns {boolean}\n     */\n    static isGlobal(variable) {\n        return variable.name.match(/^__(helios|const|module)__/) !== null;\n    }\n\n    /**\n     * @param {IRValueCodeMapper} codeMapper \n     * @param {number} depth \n     * @returns {any}\n     */\n    dump(codeMapper, depth = 0) {\n        return {\n            isLiteral: this.#isLiteral,\n            codes: codeMapper.getCodes(this),\n            ...(depth > 0 ? {values: this.values.map(([_, arg]) => {\n                return arg.dump(codeMapper, depth - 1)\n            })} : {})\n        }\n    }\n\n    /**\n     * @returns {boolean}\n     */\n    isLiteral() {\n        return this.#isLiteral;\n    }\n\n    /**\n     * @return {IRStack}\n     */\n    withoutLiterals() {\n        /**\n         * @type {[IRVariable, IRValue][]}\n         */\n        const varVals = this.values.map(([vr, vl]) => {\n            if (IRStack.isGlobal(vr)) {\n                return [vr, vl];\n            } else {\n                return [vr, vl.withoutLiterals()]\n            }\n        });\n\n        return new IRStack(\n            varVals, \n            varVals.every(([_, v]) => v.isLiteral())\n        );\n    }\n\n    /**\n     * @param {IRVariable} v \n     * @returns {IRValue}\n     */\n    getValue(v) {\n        const j = this.values.findIndex(([va]) => va == v)\n\n        if (j != -1) {\n            return this.values[j][1];\n        }\n\n        throw new Error(`${v.name} not found in IRStack`);\n    }\n\n    /**\n     * @param {[IRVariable, IRValue][]} args \n     * @returns {IRStack}\n     */\n    extend(args) {\n        assert(args.every(([_, v]) => !(v instanceof IRErrorValue)));\n\n        return new IRStack(\n            this.values.concat(args),\n            this.#isLiteral && args.every(([_, v]) => v.isLiteral())\n        );\n    }\n\n    /**\n     * @param {Set<IRVariable>} irVars \n     * @returns {IRStack}\n     */\n    filter(irVars) {\n        const varVals = this.values.filter(([v]) => irVars.has(v));\n        return new IRStack(varVals, varVals.every(([_, v]) => v.isLiteral()));\n    }\n\n    /**\n     * @returns {IRStack}\n     */\n    static empty() {\n        return new IRStack([], true);\n    }\n\n    /**\n     * Both stack are expected to have the same shape\n     * TODO: get rid of this\n     * @param {IRStack} other\n     * @returns {IRStack}\n     */\n    merge(other) {\n        const n = this.values.length;\n\n        assert(n == other.values.length);\n\n        let stack = IRStack.empty();\n\n        for (let i = 0; i < n; i++) {\n            const a = this.values[i];\n            const b = other.values[i];\n\n            if (a == b) {\n                stack = stack.extend([a]);\n            } else {\n                stack = stack.extend([[a[0], IRMultiValue.flatten([a[1], b[1]])]]);\n            }\n        }\n\n        return stack;\n    }\n}\n\n/**\n * @internal\n * @implements {IRValue}\n */\nexport class IRLiteralValue {\n\t/**\n\t * @readonly\n\t */\n\tvalue;\n\n\t/**\n\t * @param {UplcValue} value \n\t */\n\tconstructor(value) {\n\t\tthis.value = value;\n\t}\n\n    /**\n     * @returns {string}\n     */\n    toString() {\n        return this.value.toString();\n    }\n\n    /**\n     * @returns {boolean}\n     */\n    isLiteral() {\n        return true;\n    }\n\n    /**\n     * @param {boolean} maybe\n     * @returns {boolean}\n     */\n    hasError(maybe = true) {\n        return false;\n    }\n\n    /**\n     * @returns {IRValue}\n     */\n    withoutLiterals() {\n        if (this.value instanceof UplcUnit) {\n            return new IRAnyValue();\n        } else {\n            return new IRDataValue();\n        }\n    }\n\n    /**\n     * @returns {IRValue}\n     */\n    withoutErrors() {\n        return this;\n    }\n\n    /**\n     * @param {IRValueCodeMapper} codeMapper \n     * @param {number} depth \n     * @returns {any}\n     */\n    dump(codeMapper, depth = 0) {\n        return {\n            type: \"Literal\",\n            code: codeMapper.getCode(this),\n            value: this.toString()\n        }\n    }\n}\n\n/**\n * @internal\n * @implements {IRValue}\n */\nexport class IRDataValue {\n    /**\n     * @returns {boolean}\n     */\n    isLiteral() {\n        return false;\n    }\n\n    /**\n     * @returns {IRValue}\n     */\n    withoutLiterals() {\n        return this;\n    }\n\n    /**\n     * @param {boolean} maybe\n     * @returns {boolean}\n     */\n    hasError(maybe = true) {\n        return false;\n    }\n\n    /**\n     * @returns {IRValue}\n     */\n    withoutErrors() {\n        return this;\n    }\n\n    /**\n     * @returns {string}\n     */\n    toString() {\n        return `Data`;\n    }\n\n    /**\n     * @param {IRValueCodeMapper} codeMapper \n     * @param {number} depth \n     * @returns \n     */\n    dump(codeMapper, depth = 0) {\n        return {\n            code: codeMapper.getCode(this),\n            type: \"Data\"\n        }\n    }\n}\n\n/**\n * @param {IRExpr} expr \n * @returns {Set<IRVariable>}\n */\nfunction collectIRVariables(expr) {\n    /**\n     * @type {Set<IRVariable>}\n     */\n    const s = new Set();\n\n    loopIRExprs(expr, {\n        nameExpr: (nameExpr) => {\n            if (!nameExpr.isCore()) {\n                s.add(nameExpr.variable);\n            }\n        }\n    });\n\n    return s;\n}\n\n/**\n * @internal\n * @implements {IRValue}\n */\nexport class IRBuiltinValue {\n    /**\n     * @readonly\n     * @type {IRNameExpr}\n     */\n    builtin;\n\n    /**\n     * @param {IRNameExpr} builtin \n     */\n    constructor(builtin) {\n\t\tassert(builtin.isCore());\n\n        this.builtin = builtin;\n    }\n\n    /**\n     * @type {string}\n     */\n    get builtinName() {\n        let name = this.builtin.name.slice(BUILTIN_PREFIX.length);\n\n        if (name.endsWith(SAFE_BUILTIN_SUFFIX)) {\n            name = name.slice(0, name.length - SAFE_BUILTIN_SUFFIX.length);\n        }\n\n        return name;\n    }\n\n    /**\n     * @returns {string}\n     */\n    toString() {\n        return `Builtin__${this.builtinName}`;\n    }\n\n    /**\n     * @returns {boolean}\n     */\n    isLiteral() {\n        return true;\n    }\n\n    /**\n     * @returns {IRValue}\n     */\n    withoutLiterals() {\n        return this;\n    }\n\n    /**\n     * @param {boolean} maybe\n     * @returns {boolean}\n     */\n    hasError(maybe = true) {\n        return false;\n    }\n\n    /**\n     * @returns {IRValue}\n     */\n    withoutErrors() {\n        return this;\n    }\n\n    /**\n     * @param {IRValueCodeMapper} codeMapper \n     * @param {number} depth \n     * @returns {any}\n     */\n    dump(codeMapper, depth = 0) {\n        return {\n            type: \"Builtin\",\n            code: codeMapper.getCode(this),\n            name: this.builtin.name\n        }\n    }\n}\n\n/**\n * @internal\n * @implements {IRValue}\n */\nexport class IRFuncValue {\n    /**\n     * @readonly\n     * @type {IRStack}\n     */\n    stack;\n\n\t/**\n\t * @readonly\n\t * @type {IRFuncExpr}\n\t */\n\tdefinition;\n\n\t/**\n     * @param {IRFuncExpr} definition\n     * @param {IRStack} stack\n\t */\n\tconstructor(definition, stack) {\n        this.definition = definition;\n        const irVars = collectIRVariables(definition);\n        this.stack = stack.filter(irVars);\n\t}\n\n    /**\n     * @param {IRFuncExpr} definition \n     * @param {IRStack} stack \n     * @returns {IRFuncValue}\n     */\n    static new(definition, stack) {\n        return new IRFuncValue(definition, stack);\n    }\n\n    /**\n     * @returns {boolean}\n     */\n    isLiteral() {\n        return this.stack.isLiteral();\n    }\n\n    /**\n     * @returns {IRValue}\n     */\n    withoutLiterals() {\n        return new IRFuncValue(this.definition, this.stack.withoutLiterals());\n    }\n\n    /**\n     * @param {boolean} maybe\n     * @returns {boolean}\n     */\n    hasError(maybe = true) {\n        return false;\n    }\n\n    /**\n     * @returns {IRValue}\n     */\n    withoutErrors() {\n        return this;\n    }\n\n    /**\n     * @param {IRValueCodeMapper} codeMapper \n     * @param {number} depth \n     * @returns {any}\n     */\n    dump(codeMapper, depth = 0) {\n        return {\n            type: \"Fn\",\n            tag: this.definition.tag,\n            codes: codeMapper.getCodes(this),\n            definition: this.definition.toString(),\n            stack: this.stack.dump(codeMapper, depth)\n        }\n    }\n\n    /**\n     * @returns {string}\n     */\n    toString() {\n        return `Fn${this.definition.tag}`;\n    }\n}\n\n/**\n * @internal\n * @implements {IRValue}\n */\nexport class IRErrorValue {\n    /**\n     * @returns {boolean}\n     */\n    isLiteral() {\n        return false;\n    }\n\n    /**\n     * @returns {IRValue}\n     */\n    withoutLiterals() {\n        return this;\n    }\n\n    /**\n     * @param {boolean} maybe\n     * @returns {boolean}\n     */\n    hasError(maybe = true) {\n        return true;\n    }\n\n    /**\n     * @returns {IRValue}\n     */\n    withoutErrors() {\n        throw new Error(\"can't remove IRErrorValue from IRErrorValue\");\n    }\n\n    /**\n     * @returns {string}\n     */\n    toString() {\n        return `Error`;\n    }\n\n    /**\n     * @param {IRValueCodeMapper} codeMapper \n     * @param {number} depth \n     * @returns {any}\n     */\n    dump(codeMapper, depth = 0) {\n        return {\n            type: \"Error\",\n            code: codeMapper.getCode(this)\n        }\n    }\n}\n\n/**\n * Can be Data of any function\n * Simply eliminated when encountered in an IRMultiValue\n * @internal\n * @implements {IRValue}\n */\nexport class IRAnyValue {\n    /**\n     * @returns {boolean}\n     */\n    isLiteral() {\n        return false;\n    }\n\n    /**\n     * @returns {IRValue}\n     */\n    withoutLiterals() {\n        return this;\n    }\n\n    /**\n     * Maybe this IRAnyValue instance represents an Error, we can't know for sure.\n     * @param {boolean} maybe\n     * @returns {boolean}\n     */\n    hasError(maybe = true) {\n        return maybe;\n    }\n\n    /**\n     * @returns {IRValue}\n     */\n    withoutErrors() {\n        return this;\n    }\n\n    /**\n     * @returns {string}\n     */\n    toString() {\n        return `Any`;\n    }\n\n    /**\n     * @param {IRValueCodeMapper} codeMapper \n     * @param {number} depth \n     * @returns {any}\n     */\n    dump(codeMapper, depth = 0) {\n        return {\n            type: \"Any\",\n            code: codeMapper.getCode(this)\n        }\n    }\n}\n\n/**\n * @internal\n * @implements {IRValue}\n */\nexport class IRMultiValue {\n\t/**\n\t * @readonly\n\t */\n\tvalues;\n\n\t/**\n\t * @param {IRValue[]} values \n\t */\n\tconstructor(values) {\n        assert(values.every(v => !(v instanceof IRLiteralValue)));\n\t\tthis.values = values;\n\t}\n\n    /**\n     * @param {boolean} maybe\n     * @returns {boolean}\n     */\n    hasError(maybe = true) {\n        return this.values.some(v => v.hasError(maybe));\n    }\n\n    /**\n     * @returns {boolean}\n     */\n    isLiteral() {\n        return false;\n    }\n\n    /**\n     * @returns {IRValue}\n     */\n    withoutLiterals() {\n        return IRMultiValue.flatten(this.values.map(v => v.withoutLiterals()));\n    }\n\n    /**\n     * @returns {boolean}\n     */\n    hasData() {\n        return this.values.some(v => v instanceof IRDataValue);\n    }\n\n    /**\n     * @returns {boolean}\n     */\n    hasLiteral() {\n        return this.values.some(v => v instanceof IRLiteralValue);\n    }\n\n    /**\n     * @param {IRValueCodeMapper} codeMapper \n     * @param {number} depth \n     * @returns {any}\n     */\n    dump(codeMapper, depth = 0) {\n        return {\n            type: \"Multi\",\n            code: codeMapper.getCode(this),\n            values: this.values.slice().map(v => v.dump(codeMapper, depth))\n        }\n    }\n\n    toString() {\n        /**\n         * @type {string[]}\n         */\n        const parts = [];\n\n        if (this.hasError()) {\n            parts.push(`Error`);\n        }\n\n        if (this.hasData()) {\n            parts.push(`Data`);\n        }\n\n        this.values.forEach(v => {\n            if (v instanceof IRFuncValue) {\n                parts.push(`Fn${v.definition.tag}`);\n            } else if (v instanceof IRBuiltinValue) {\n                parts.push(`Builtin_${v.builtin.name.slice((\"__core__\").length)}`);\n            }\n        });\n\n        this.values.forEach(v => {\n            if (v instanceof IRLiteralValue) {\n                parts.push(v.toString());\n            }\n        });\n\n        if (parts.length == 1 && parts[0] == `Error` && this.values.some(v => v instanceof IRAnyValue)) {\n            parts.push(\"Any\");\n        }\n\n        return `(${parts.join(\" | \")})`;\n    }\n\n\t/**\n\t * @param {IRValue[]} values \n\t * @returns {IRValue}\n\t */\n\tstatic flatten(values) {\n        if (values.length == 1) {\n            return values[0];\n        }\n\n\t\t// flatten nested IRMultiValues\n\t\tvalues = values.map(v => {\n\t\t\tif (v instanceof IRMultiValue) {\n\t\t\t\treturn v.values\n\t\t\t} else {\n\t\t\t\treturn [v]\n\t\t\t}\n\t\t}).flat();\n\n        if (values.length == 1) {\n            return values[0];\n        } else if (values.every((v, i) => v instanceof IRLiteralValue && ((i == 0) || (v.toString() == values[0].toString())))) {\n            return values[0];\n        }\n        \n        const hasError = values.some(v => v instanceof IRErrorValue);\n\t\tconst hasData = values.some(v => v instanceof IRDataValue || (v instanceof IRLiteralValue && !(v.value instanceof UplcUnit)));\n        const hasAny = values.some(v => v instanceof IRAnyValue || (v instanceof IRLiteralValue && v.value instanceof UplcUnit));\n\n\t\t/**\n\t\t * @type {IRValue[]}\n\t\t */\n\t\tlet flattened = [];\n\n\t\tif (values.some(v => v instanceof IRFuncValue || v instanceof IRBuiltinValue)) {\n\t\t\t/**\n\t\t\t * @type {Map<IRExpr, IRFuncValue | IRBuiltinValue>}\n\t\t\t */\n\t\t\tconst s = new Map();\n\n\t\t\tvalues.forEach(v => {\n\t\t\t\tif (v instanceof IRFuncValue) {\n                    const prev = s.get(v.definition);\n\n                    if (prev instanceof IRFuncValue) {\n                        s.set(v.definition, IRFuncValue.new(v.definition, prev.stack.merge(v.stack)));\n                    } else {\n                        s.set(v.definition, v);\n                    }\n                } else if (v instanceof IRBuiltinValue) {\n                    s.set(v.builtin, v)\n                }\n\t\t\t});\n\n            flattened = flattened.concat(Array.from(s.values()));\n\t\t} else if (hasData) {\n            flattened.push(new IRDataValue());\n        } else if (hasAny) {\n            flattened.push(new IRAnyValue());\n        }\n\n        if (hasError) {\n            flattened.push(new IRErrorValue());\n        }\n\n        if (flattened.length == 1) {\n\t\t\treturn flattened[0];\n\t\t} else {\n\t\t\treturn new IRMultiValue(flattened);\n\t\t}\n\t}\n\n\t/**\n\t * @param {IRValue[]} values \n\t * @returns {IRValue[][]}\n\t */\n\tstatic allPermutations(values) {\n\t\tif (!values.some(v => v instanceof IRMultiValue)) {\n\t\t\treturn [values];\n\t\t} else {\n\t\t\t/**\n\t\t\t * @type {IRValue[][]}\n\t\t\t */\n\t\t\tconst permutations = [];\n\n\t\t\tlet ns = values.map(v => {\n\t\t\t\tif (v instanceof IRMultiValue) {\n\t\t\t\t\treturn v.values.length;\n\t\t\t\t} else {\n\t\t\t\t\treturn 1;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tlet N = ns.reduce((prev, n) => {\n\t\t\t\treturn prev * n\n\t\t\t}, 1);\n\n\t\t\tfor (let i = 0; i < N; i++) {\n\t\t\t\tlet j = i;\n\n\t\t\t\t/**\n\t\t\t\t * @type {number[]}\n\t\t\t\t */\n\t\t\t\tconst is = [];\n\n\t\t\t\tns.forEach(n => {\n\t\t\t\t\tis.push(j % n);\n\n\t\t\t\t\tj = Math.floor(j / n);\n\t\t\t\t});\n\n\t\t\t\tpermutations.push(is.map((j, i) => {\n\t\t\t\t\tconst v = assertDefined(values[i]);\n\n\t\t\t\t\tif (v instanceof IRMultiValue) {\n\t\t\t\t\t\treturn v.values[j];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tassert(j == 0);\n\t\t\t\t\t\treturn v;\n\t\t\t\t\t}\n\t\t\t\t}));\n\t\t\t}\n\n\t\t\treturn permutations;\n\t\t}\n\t}\n\n    /**\n     * @returns {IRValue}\n     */\n    withoutErrors() {\n        return IRMultiValue.flatten(this.values.filter(v => !(v instanceof IRErrorValue)));\n    }\n}\n\n/**\n * Codes are used to combine multiple IRValues (including nested IRStacks that are part of IRFuncValues) into a single number.\n * \n * We can't have however use the full depth of IRStack values because there could be callback-recursion.\n * @internal\n */\nclass IRValueCodeMapper {\n    /**\n     * @type {number}\n     */\n    #nextUnused;\n\n    /**\n     * @type {Map<string, number>}\n     */\n    #usedCodes;\n\n    /**\n     * @type {Map<IRValue | IRStack, number[]>}\n     */\n    #valueCodes;\n\n    constructor() {\n        this.#usedCodes = new Map([\n            [\"Any\", 0],\n            [\"Data\", 1],\n            [\"Error\", 2]\n        ]);\n        this.#nextUnused = 3;\n        this.#valueCodes = new Map();\n    }\n\n    static get maxDepth() {\n        return 10;\n    }\n\n    /**\n     * @private\n     * @param {string} key \n     * @returns {number}\n     */\n    genCode(key) {\n        let code = this.#usedCodes.get(key);\n\n        if (code !== undefined) {\n            return code;\n        }\n\n        code = this.#nextUnused;\n        this.#nextUnused += 1;\n\n        this.#usedCodes.set(key, code);\n\n        return code;\n    }\n\n    /**\n     * @private\n     * @param {IRValue | IRStack} v \n     * @returns {number[]}\n     */\n    genCodes(v) {\n        if (v instanceof IRBuiltinValue) {\n            return (new Array(IRValueCodeMapper.maxDepth)).fill(this.genCode(v.builtinName));\n        } else if (v instanceof IRDataValue) {\n            return (new Array(IRValueCodeMapper.maxDepth)).fill(this.genCode(\"Data\"));\n        } else if (v instanceof IRErrorValue) {\n            return (new Array(IRValueCodeMapper.maxDepth)).fill(this.genCode(\"Error\"));\n        } else if (v instanceof IRAnyValue) {\n            return (new Array(IRValueCodeMapper.maxDepth)).fill(this.genCode(\"Any\"));\n        } else if (v instanceof IRLiteralValue) {\n            return (new Array(IRValueCodeMapper.maxDepth)).fill(this.genCode(v.value.toString()));\n        } else if (v instanceof IRFuncValue) {\n            const tag = `Fn${assertDefined(v.definition.tag)}`;\n            const stackCodes = this.getCodes(v.stack);\n\n            /**\n             * @type {number[]}\n             */\n            const codes = [];\n\n            for (let i = 0; i < IRValueCodeMapper.maxDepth; i++) {\n                const key = i == 0 ? tag : `${tag}(${stackCodes[i-1]})`;\n\n                codes.push(this.genCode(key));\n            }\n\n            return codes;\n        } else if (v instanceof IRStack) {\n            const valueCodes = v.values.map(([_, v]) => this.getCodes(v));\n\n            /**\n             * @type {number[]}\n             */\n            const codes = [];\n\n            for (let i = 0; i < IRValueCodeMapper.maxDepth - 1; i++) {\n                const key = `[${valueCodes.map(vc => vc[i]).join(\",\")}]`;\n                codes.push(this.genCode(key));\n            }\n\n            return codes;\n        } else if (v instanceof IRMultiValue) {\n            const valueCodes = v.values.map(v => this.getCodes(v));\n\n            /**\n             * @type {number[]}\n             */\n            const codes = [];\n\n            for (let i = 0; i < IRValueCodeMapper.maxDepth; i++) {\n                const key = `{${valueCodes.map(vc => vc[i]).sort().join(\",\")}}`;\n                codes.push(this.genCode(key));\n            }\n\n            return codes;\n        } else {\n            throw new Error(\"unhandled\");\n        }\n    }\n\n    /**\n     * @param {IRValue | IRStack} v \n     * @returns {number[]}\n     */\n    getCodes(v) {\n        const cached = this.#valueCodes.get(v);\n\n        if (cached) {\n            return cached;\n        }\n\n        const codes = this.genCodes(v);\n\n        this.#valueCodes.set(v, codes);\n\n        return codes;\n    }\n\n    /**\n     * @param {IRValue} v\n     * @returns {number}\n     */\n    getCode(v) {\n        const codes = this.getCodes(v);\n\n        return codes[IRValueCodeMapper.maxDepth-1];\n    }\n\n    /**\n     * @param {IRValue} fn \n     * @param {IRValue[]} args \n     */\n    getCallCode(fn, args) {\n        const key = `${assertDefined(this.getCode(fn))}(${args.map(a => this.getCode(a)).join(\",\")})`;\n        return this.genCode(key);\n    }\n\n    /**\n     * @param {IRValue} a \n     * @param {IRValue} b \n     * @returns {boolean}\n     */\n    eq(a, b) {\n        const ca = this.getCode(a);\n        const cb = this.getCode(b);\n\n        return ca == cb;\n    }\n}\n\n/**\n * @internal\n * @type {{[name: string]: (args: IRValue[]) => IRValue}}\n */\nconst IR_BUILTIN_CALLBACKS = {\n    addInteger: ([a, b]) => {\n        return new IRDataValue();\n    },\n    subtractInteger: ([a, b]) => {\n        return new IRDataValue();\n    },\n    multiplyInteger: ([a, b]) => {\n        if (a instanceof IRLiteralValue && a.value.int == 0n) {\n            return a;\n        } else if (b instanceof IRLiteralValue && b.value.int == 0n) {\n            return b;\n        } else {\n            return new IRDataValue();\n        }\n    },\n    divideInteger: ([a, b]) => {\n        if (a instanceof IRLiteralValue && a.value.int == 0n) {\n            return IRMultiValue.flatten([a, new IRErrorValue()]);\n        } else if (b instanceof IRLiteralValue) {\n            if (b.value.int == 0n) {\n                return new IRErrorValue();\n            } else if (b.value.int == 1n) {\n                return a;\n            } else {\n                return new IRDataValue();\n            }\n        } else {\n            return IRMultiValue.flatten([new IRDataValue(), new IRErrorValue()]);\n        }\n    },\n    modInteger: ([a, b]) => {\n        if (b instanceof IRLiteralValue) {\n            if (b.value.int == 1n) {\n                return new IRLiteralValue(new UplcInt(b.value.site, 0n, true));\n            } else if (b.value.int == 0n) {\n                return new IRErrorValue();\n            } else {\n                return new IRDataValue();\n            }\n        } else {\n            return IRMultiValue.flatten([\n                new IRDataValue(),\n                new IRErrorValue()\n            ]);\n        }\n    },\n    quotientInteger: ([a, b]) => {\n        if (a instanceof IRLiteralValue && a.value.int == 0n) {\n            return IRMultiValue.flatten([a, new IRErrorValue()]);\n        } else if (b instanceof IRLiteralValue) {\n            if (b.value.int == 0n) {\n                return new IRErrorValue();\n            } else if (b.value.int == 1n) {\n                return a;\n            } else {\n                return new IRDataValue();\n            }\n        } else {\n            return IRMultiValue.flatten([new IRDataValue(), new IRErrorValue()]);\n        }\n    },\n    remainderInteger: ([a, b]) => {\n        if (b instanceof IRLiteralValue) {\n            if (b.value.int == 1n) {\n                return new IRLiteralValue(new UplcInt(b.value.site, 0n, true));\n            } else if (b.value.int == 0n) {\n                return new IRErrorValue();\n            } else {\n                return new IRDataValue();\n            }\n        } else {\n            return IRMultiValue.flatten([\n                new IRDataValue(),\n                new IRErrorValue()\n            ]);\n        }\n    },\n    equalsInteger: ([a, b]) => {\n        return new IRDataValue();\n    },\n    lessThanInteger: ([a, b]) => {\n        return new IRDataValue();\n    },\n    lessThanEqualsInteger: ([a, b]) => {\n        return new IRDataValue();\n    },\n    appendByteString: ([a, b]) => {\n        return new IRDataValue();\n    },\n    consByteString: ([a, b]) => {\n        return new IRDataValue();\n    },\n    sliceByteString: ([a, b, c]) => {\n        if (b instanceof IRLiteralValue && b.value.int <= 0n) {\n            return new IRLiteralValue(new UplcByteArray(b.value.site, []));\n        } else {\n            return new IRDataValue();\n        }\n    },\n    lengthOfByteString: ([a]) => {\n        return new IRDataValue();\n    },\n    indexByteString: ([a, b]) => {\n        if (b instanceof IRLiteralValue && b.value.int < 0n) {\n            return new IRErrorValue();\n        } else if (a instanceof IRLiteralValue && a.value.bytes.length == 0) {\n            return new IRErrorValue();\n        } else {\n            return IRMultiValue.flatten([\n                new IRDataValue(),\n                new IRErrorValue()\n            ]);\n        }\n    },\n    equalsByteString: ([a, b]) => {\n        return new IRDataValue();\n    },\n    lessThanByteString: ([a, b]) => {\n        return new IRDataValue();\n    },\n    lessThanEqualsByteString: ([a, b]) => {\n        return new IRDataValue();\n    },\n    appendString: ([a, b]) => {\n        return new IRDataValue();\n    },\n    equalsString: ([a, b]) => {\n        return new IRDataValue();\n    },\n    encodeUtf8: ([a]) => {\n        return new IRDataValue();\n    },\n    decodeUtf8: ([a]) => {\n        return IRMultiValue.flatten([\n            new IRDataValue(),\n            new IRErrorValue()\n        ]);\n    },\n    sha2_256: ([a]) => {\n        return new IRDataValue();\n    },\n    sha3_256: ([a]) => {\n        return new IRDataValue();\n    },\n    blake2b_256: ([a]) => {\n        return new IRDataValue();\n    },\n    verifyEd25519Signature: ([a, b, c]) => {\n        if (a instanceof IRLiteralValue && a.value.bytes.length != 32) {\n            return new IRErrorValue();\n        } else if (c instanceof IRLiteralValue && c.value.bytes.length != 64) {\n            return new IRErrorValue();\n        } else {\n            return IRMultiValue.flatten([\n                new IRDataValue(),\n                new IRErrorValue()\n            ]);\n        }\n    },\n    ifThenElse: ([a, b, c]) => {\n        if (a instanceof IRLiteralValue) {\n            if (a.value.bool) {\n                return b;\n            } else {\n                return c;\n            }\n        } else {\n            return IRMultiValue.flatten([b, c]);\n        }\n    },\n    chooseUnit: ([a, b]) => {\n        return b;\n    },\n    trace: ([a, b]) => {\n        return b;\n    },\n    fstPair: ([a]) => {\n        return new IRDataValue();\n    },\n    sndPair: ([a]) => {\n        return new IRDataValue();\n    },\n    chooseList: ([a, b, c]) => {\n        if (a instanceof IRLiteralValue) {\n            if (a.value.list.length == 0) {\n                return b;\n            } else {\n                return c;\n            }\n        } else {\n            return IRMultiValue.flatten([b, c]);\n        }\n    },\n    mkCons: ([a, b]) => {\n        return new IRDataValue();\n    },\n    headList: ([a]) => {\n        return IRMultiValue.flatten([\n            new IRDataValue(),\n            new IRErrorValue()\n        ]);\n    },\n    tailList: ([a]) => {\n        return IRMultiValue.flatten([\n            new IRDataValue(),\n            new IRErrorValue()\n        ]);\n    },\n    nullList: ([a]) => {\n        return new IRDataValue();\n    },\n    chooseData: ([a, b, c, d, e, f]) => {\n        if (a instanceof IRLiteralValue) {\n            const data = a.value.data;\n\n            if (data instanceof ConstrData) {\n                return b;\n            } else if (data instanceof MapData) {\n                return c;\n            } else if (data instanceof ListData) {\n                return d;\n            } else if (data instanceof IntData) {\n                return e;\n            } else if (data instanceof ByteArrayData) {\n                return f;\n            } else {\n                throw new Error(\"unhandled UplcData type\");\n            }\n        } else {\n            return IRMultiValue.flatten([b, c, d, e, f]);\n        }\n    },\n    constrData: ([a, b]) => {\n        return new IRDataValue();\n    },\n    mapData: ([a])  => {\n        return new IRDataValue();\n    },\n    listData: ([a]) => {\n        return new IRDataValue();\n    },\n    iData: ([a]) => {\n        return new IRDataValue();\n    },\n    bData: ([a]) => {\n        return new IRDataValue();\n    },\n    unConstrData: ([a]) => {\n        return IRMultiValue.flatten([\n            new IRDataValue(),\n            new IRErrorValue()\n        ]);\n    },\n    unMapData: ([a]) => {\n        return IRMultiValue.flatten([\n            new IRDataValue(),\n            new IRErrorValue()\n        ]);\n    },\n    unListData: ([a]) => {\n        return IRMultiValue.flatten([\n            new IRDataValue(),\n            new IRErrorValue()\n        ]);\n    },\n    unIData: ([a]) => {\n        return IRMultiValue.flatten([\n            new IRDataValue(),\n            new IRErrorValue()\n        ]);\n    },\n    unBData: ([a]) => {\n        return IRMultiValue.flatten([\n            new IRDataValue(),\n            new IRErrorValue()\n        ]);\n    },\n    equalsData: ([a, b]) => {\n        return new IRDataValue();\n    },\n    mkPairData: ([a, b]) => {\n        return new IRDataValue();\n    },\n    mkNilData: ([a]) => {\n        return new IRDataValue();\n    },\n    mkNilPairData: ([a]) => {\n        return new IRDataValue();\n    },\n    serialiseData: ([a]) => {\n        return new IRDataValue();\n    }\n};\n\n/**\n * @internal\n */\nexport class IREvaluator {\n    /**\n     * Unwraps an IR AST\n     * @type {(\n     *   {\n     *     stack: IRStack,\n     *     expr: IRErrorExpr | IRLiteralExpr | IRNameExpr | IRFuncExpr | IRCallExpr\n     *   } |\n     *   {calling: IRCallExpr, code: number, args: IRValue[]} |\n     *   {fn: IRFuncExpr, owner: null | IRExpr, stack: IRStack} | \n     *   {multi: number, owner: null | IRExpr} | \n     *   {value: IRValue, owner: null | IRExpr} |\n     *   {ignore: number, owner: null | IRExpr} | \n     *   {cacheExpr: IRCallExpr, code: number, value: IRValue}\n     * )[]}\n     */\n    #compute;\n\n    /**\n     * @type {IRValue[]}\n     */\n    #reduce;\n\n    /**\n\t * Keep track of the eval result of each expression\n\t * @type {Map<IRExpr, IRValue>}\n\t */\n\t#exprValues;\n\n    /**\n     * Keep track of all values passed through IRVariables\n     * @type {Map<IRVariable, IRValue>}\n     */\n    #variableValues;\n\n    /**\n     * IRFuncExpr tag as key\n     * @type {Map<number, number>}\n     */\n    #callCount;\n\n    /**\n     * @type {Map<IRFuncExpr, Set<IRCallExpr>>}\n     */\n    #funcCallExprs;\n\n    /**\n     * @type {Map<IRVariable, Set<IRNameExpr>>}\n     */\n    #variableReferences;\n\n    /**\n     * @type {Map<IRCallExpr, Map<number, IRValue>>}\n     */\n    #cachedCalls;\n\n    #evalLiterals;\n\n    /**\n     * @param {boolean} evalLiterals \n     */\n\tconstructor(evalLiterals = true) {\n        this.#compute = [];\n        this.#reduce = [];\n\n        // data structures used by optimization\n        this.#exprValues = new Map();\n        this.#variableValues = new Map();\n        this.#callCount = new Map();\n        this.#funcCallExprs = new Map();\n        this.#variableReferences = new Map();\n        this.#cachedCalls = new Map();\n        this.#evalLiterals = evalLiterals;\n\t}\n\n    /**\n     * @type {IRFuncExpr[]}\n     */\n    get funcExprs() {\n        return Array.from(this.#funcCallExprs.keys());\n    }\n\n    /**\n     * @param {IRExpr} expr \n     * @returns {undefined | IRValue}\n     */\n    getExprValue(expr) {\n        return this.#exprValues.get(expr);\n    }\n\n    /**\n     * @param {IRVariable} v\n     * @returns {undefined | IRValue}\n     */\n    getVariableValue(v) {\n        return this.#variableValues.get(v);\n    }\n\n    /**\n     * @param {IRVariable} v \n     * @returns {number}\n     */\n    countVariableReferences(v) {\n        return this.#variableReferences.get(v)?.size ?? 0;\n    }\n\n    /**\n     * @param {IRVariable} v \n     * @returns {IRNameExpr[]}\n     */\n    getVariableReferences(v) {\n        return Array.from(this.#variableReferences.get(v) ?? [])\n    }\n\n    /**\n     * @param {IRFuncExpr} fn\n     * @returns {number}\n     */\n    countFuncCalls(fn) {\n        return this.#callCount.get(fn.tag) ?? 0;\n    }\n\n    /**\n     * @param {IRExpr} expr \n     * @returns {boolean}\n     */\n    expectsError(expr) {\n        const v = this.getExprValue(expr);\n\n        if (v) {\n            if (v instanceof IRErrorValue) {\n                return true;\n            } else if (v instanceof IRMultiValue && v.hasError()) {\n                return true;\n            } else if (v instanceof IRAnyValue) {\n                return true;\n            } else {\n                return false;\n            }\n        } else {\n            // the expression might be recently formed, so if not found, better be on the safe side\n            return true;\n        }\n    }\n\n    /**\n     * @param {IRFuncExpr} fn\n     * @returns {number[]} indices\n     */\n    getUnusedFuncVariables(fn) {\n        /**\n         * @type {number[]}\n         */\n        const indices = [];\n\n        fn.args.forEach((a, i) => {\n            const s = this.#variableReferences.get(a);\n            if (!s || s.size == 0) {\n                indices.push(i);\n            }\n        })\n\n        return indices;\n    }\n\n    /**\n     * @param {IRFuncExpr} fn \n     * @returns {IRCallExpr[]}\n     */\n    getFuncCallExprs(fn) {\n        return Array.from(this.#funcCallExprs.get(fn) ?? []);\n    }\n\n    /**\n     * @param {IRFuncExpr} fn \n     * @returns {boolean}\n     */\n    onlyDedicatedCallExprs(fn) {\n        const callExprs = this.getFuncCallExprs(fn);\n\n        // if there are no callExprs then we don't know exactly how the function is called (eg. main), and we can't flatten\n        if (callExprs.length == 0) {\n            return false;\n        }\n\n        return callExprs.every(ce => {\n            if (ce.func == fn) {\n                // literally calling fn directly\n                return true;\n            }\n\n            const v = this.getExprValue(ce.func);\n\n            if (!v) {\n                return false;\n            } else if (v instanceof IRMultiValue) {\n                return v.values.every(vv => !(vv instanceof IRFuncValue) || (vv.definition == fn))\n            } else if (v instanceof IRFuncValue) {\n                //assert(v.definition == fn, `expected ${fn.toString()}, not ${v.definition.toString()}`);\n                return true;\n            } else {\n                throw new Error(`unexpected ${v.toString()}`);\n            }\n        });\n    }\n\n    /**\n     * @param {IRFuncExpr} fn\n     * @param {number[]} unused\n     * @returns {boolean}\n     */\n    noUnusedArgErrors(fn, unused) {\n        const callExprs = this.getFuncCallExprs(fn);\n\n        return callExprs.every(ce => {\n            return unused.every(i => {\n                return !this.expectsError(ce.args[i]);\n            });\n        });\n    }\n\n    /**\n     * @param {IRFuncExpr} first \n     * @param {IRFuncExpr} second\n     */\n    onlyNestedCalls(first, second) {\n        const callExprs = this.getFuncCallExprs(second);\n\n        // if there are no callExprs then we don't know exactly how the function is called (eg. main), and we can't flatten\n        if (callExprs.length == 0) {\n            return false;\n        }\n\n        return callExprs.every(ce => {\n            if (ce.func instanceof IRCallExpr) {\n                const v = this.getExprValue(ce.func.func);\n\n                if (!v) {\n                    return false;\n                } else if (v instanceof IRMultiValue) {\n                    return v.values.every(vv => !(vv instanceof IRFuncValue) || (vv.definition == first))\n                } else if (v instanceof IRFuncValue) {\n                    return v.definition == first;\n                } else {\n                    throw new Error(`unexpected ${v.toString()}`);\n                }\n            } else {\n                return false;\n            }\n        });\n    }\n\n    /**\n     * The newExpr should evaluate to exactly the same values etc. as the oldExpr\n     * @param {IRExpr} oldExpr \n     * @param {IRExpr} newExpr \n     */\n    notifyCopyExpr(oldExpr, newExpr) {\n        const oldValue = this.#exprValues.get(oldExpr);\n        if (oldValue) {\n            this.#exprValues.set(newExpr, oldValue);\n        }\n    }\n\n    /**\n     * Push onto the computeStack, unwrapping IRCallExprs\n     * @private\n     * @param {IRStack} stack\n     * @param {IRExpr} expr\n     */\n    pushExpr(stack, expr) {\n        if (expr instanceof IRErrorExpr) {\n            this.#compute.push({stack: stack, expr: expr});\n        } else if (expr instanceof IRLiteralExpr) {\n            this.#compute.push({stack: stack, expr: expr});\n        } else if (expr instanceof IRNameExpr) {\n            this.#compute.push({stack: stack, expr: expr});\n        } else if (expr instanceof IRFuncExpr) {\n            this.#compute.push({stack: stack, expr: expr});\n        } else if (expr instanceof IRCallExpr) {\n            this.#compute.push({stack: stack, expr: expr});\n\n            this.pushExpr(stack, expr.func);\n\n            expr.args.forEach(a => this.pushExpr(stack, a));\n        } else {\n            throw new Error(\"unexpected expression type\");\n        }\n    }\n\n    /**\n     * @private\n     * @param {IRExpr} expr \n     * @param {IRValue} value \n     * @returns {IRValue} combined value\n     */\n    setExprValue(expr, value) {\n        const outputs = this.#exprValues.get(expr);\n\n        if (outputs) {\n            const combined = IRMultiValue.flatten([outputs, value]);\n            this.#exprValues.set(expr, combined);\n            return combined;\n        } else {\n            this.#exprValues.set(expr, value);\n            return value;\n        }\n    }\n\n    /**\n     * @private\n     * @param {null | IRExpr} owner \n     * @param {IRValue} value \n     */\n    pushReductionValue(owner, value) {\n        if (owner) {\n            const combined = this.setExprValue(owner, value);\n\n            if (value instanceof IRAnyValue || (value instanceof IRMultiValue && value.values.some(v => v instanceof IRAnyValue))) {\n                value = combined;\n            }\n        }\n\n        this.#reduce.push(value);\n    }\n\n    /**\n     * @private\n     * @param {IRStack} stack\n     * @param {IRNameExpr} nameExpr\n     * @returns {IRValue}\n     */\n    getValue(stack, nameExpr) {\n        const variable = nameExpr.variable;\n\n        const s = this.#variableReferences.get(variable);\n\n        if (s) {\n            s.add(nameExpr);\n        } else {\n            this.#variableReferences.set(variable, new Set([nameExpr]));\n        }\n\n        return stack.getValue(variable);\n    }\n\n    /**\n     * @private\n     * @param {IRExpr} owner\n     * @param {IRNameExpr} nameExpr \n     * @param {IRValue[]} args\n     */\n    callBuiltin(owner, nameExpr, args) {\n        let builtin = nameExpr.name.slice(BUILTIN_PREFIX.length);\n        const isSafe = builtin.endsWith(SAFE_BUILTIN_SUFFIX);\n        if (isSafe) {\n            builtin = builtin.slice(0, builtin.length - SAFE_BUILTIN_SUFFIX.length);\n        }\n\n        // collect results for each permutation of multivalued args\n\n        /**\n         * @type {IRValue[][]}\n         */\n        const permutations = IRMultiValue.allPermutations(args);\n\n        const resValues = permutations.map(args => {\n            if (args.every(a => a instanceof IRLiteralValue)) {\n                try {\n                    const res = UplcBuiltin.evalStatic(new Word(Site.dummy(), builtin), args.map(a => assertClass(a, IRLiteralValue).value));\n                    return new IRLiteralValue(res);\n                } catch (e) {\n                    if (e instanceof RuntimeError) {\n                        return new IRErrorValue();\n                    } else {\n                        throw e;\n                    }\n                }\n            } else if (args.some(a => a instanceof IRErrorValue)) {\n                return new IRErrorValue();\n            } else {\n                const res = assertDefined(IR_BUILTIN_CALLBACKS[builtin], `builtin ${builtin} not defined in IR_BUILTIN_CALLBACKS`)(args);\n                \n                if (isSafe && res instanceof IRMultiValue && res.hasError()) {\n                    return res.withoutErrors();\n                } else {\n                    return res;\n                }\n            }\n        });\n\n        this.pushReductionValue(owner, IRMultiValue.flatten(resValues));\n    }\n\n    /**\n     * @private\n     * @param {IRFuncExpr} fn \n     */\n    incrCallCount(fn) {\n        const prev = this.#callCount.get(fn.tag);\n\n        if (prev) {\n            this.#callCount.set(fn.tag, Math.min(prev + 1, Number.MAX_SAFE_INTEGER));\n        } else {\n            this.#callCount.set(fn.tag, 1);\n        }\n    }\n\n    /**\n     * @private\n     * @param {IRVariable[]} variables \n     * @param {IRValue[]} values \n     * @returns {[IRVariable, IRValue][]}\n     */\n    mapVarsToValues(variables, values) {\n        assert(variables.length == values.length, \"variables and values don't have the same length([\" + variables.map(v => v.name).join(\",\") + \"] vs [\" + values.map(v => v.toString()).join(\",\") + \"]\");\n\n        /**\n         * @type {[IRVariable, IRValue][]}\n         */\n        const m = [];\n\n        variables.forEach((variable, i) => {\n            const value = values[i];\n\n            const allValues = this.#variableValues.get(variable);\n\n            if (allValues) {\n                this.#variableValues.set(variable, IRMultiValue.flatten([allValues, value]));\n            } else {\n                this.#variableValues.set(variable, value);\n            }\n\n            m.push([variable, value]);\n        });\n\n        return m;\n    }\n\n    /**\n     * @private\n     * @param {IRStack} stack\n     * @param {null | IRExpr} owner\n     * @param {IRFuncExpr} fn\n     * @param {IRValue[]} args\n     */\n    pushFuncCall(stack, owner, fn, args) {\n        if (args.some(a => a instanceof IRErrorValue)) {\n            this.pushReductionValue(owner, new IRErrorValue());\n        } else {\n            if (args.some(a => a.hasError(true))) {\n                this.#compute.push({multi: 2, owner: owner});\n                this.#compute.push({value: new IRErrorValue(), owner: owner});\n                args = args.map(a => a.withoutErrors())\n            }\n            \n            const varsToValues = this.mapVarsToValues(fn.args, args);\n            stack = stack.extend(varsToValues);\n    \n            this.incrCallCount(fn);\n            this.#compute.push({fn: fn, owner: owner, stack: stack});\n            this.pushExpr(stack, fn.body); \n        }\n    }\n\n    /**\n     * @private\n     * @param {IRExpr} owner for entry point ths is the entry point IRFuncExpr, for all other calls this is the IRCallExpr\n     * @param {IRFuncValue} v\n     * @param {IRValue[]} args \n     */\n    callFunc(owner, v, args) {\n        const fn = v.definition;\n        const stack = v.stack;\n\n        if (owner instanceof IRCallExpr) {\n            const s = this.#funcCallExprs.get(fn);\n\n            if (!s) {\n                this.#funcCallExprs.set(fn, new Set([owner]));\n            } else {\n                s.add(owner);\n            }\n        }\n\n        this.pushFuncCall(stack, owner, fn, args);\n    }\n\n    /**\n     * Call an unknown function (eg. returned at the deepest point of recursion)\n     * Make sure any arguments that are functions are also called so that all possible execution paths are touched (TODO: should we also called function values returned by those calls etc.?)\n     * Absorb the return values of these functions\n     * @private\n     * @param {IRExpr} owner\n     * @param {IRAnyValue} fn\n     * @param {IRValue[]} args\n     */\n    callAnyFunc(owner, fn, args) {\n        if (args.some(a => a instanceof IRErrorValue)) {\n            this.pushReductionValue(owner, new IRErrorValue());\n        } else {\n            if (args.some(a => a.hasError(false))) {\n                this.#compute.push({multi: 2, owner: owner});\n                this.#compute.push({value: new IRErrorValue(), owner: owner});\n                args = args.map(a => a.withoutErrors())\n            }\n\n            /**\n             * Only user-defined functions!\n             * @type {IRFuncValue[]}\n             */\n            const fnsInArgs = [];\n\n            args.forEach(a => {\n                if (a instanceof IRMultiValue) {\n                    a.values.forEach(aa => {\n                        if (aa instanceof IRFuncValue) {\n                            fnsInArgs.push(aa);\n                        }\n                    });\n                } else if (a instanceof IRFuncValue) {\n                    fnsInArgs.push(a);\n                }\n            });\n\n            this.#compute.push({ignore: fnsInArgs.length, owner: owner});\n\n            fnsInArgs.forEach(fn => {\n                const def = assertClass(fn.definition, IRFuncExpr);\n\n                this.pushFuncCall(fn.stack, null, def, def.args.map(a => new IRAnyValue()));\n            });\n        }\n    }\n\n    /**\n     * @private\n     * @param {IRCallExpr} expr\n     * @param {number} code\n     * @param {IRValue} value\n     */\n    cacheValue(expr, code, value) {\n        const prev = this.#cachedCalls.get(expr);\n\n        if (prev) {\n            const prevPrev = prev.get(code);\n\n            if (prevPrev && !(prevPrev instanceof IRAnyValue)) {\n                const newValue = IRMultiValue.flatten([prevPrev, value]);\n                prev.set(code, newValue);\n            } else {\n                prev.set(code, value);\n            }\n        } else {\n            this.#cachedCalls.set(expr, new Map([[code, value]]));\n        }\n    }\n\n    /**\n     * @private\n     * @param {IRCallExpr} expr \n     * @param {number} code \n     */\n    prepareCacheValue(expr, code) {\n        this.#compute.push({value: new IRAnyValue(), cacheExpr: expr, code: code});\n    }\n\n    /**\n     * @private\n     */\n    evalInternal() {\n        const codeMapper = new IRValueCodeMapper();\n\n        let head = this.#compute.pop();\n\n\t\twhile (head) {\n            if (\"cacheExpr\" in head) {\n                this.cacheValue(head.cacheExpr, head.code, head.value);\n            } else if (\"expr\" in head) {\n                const expr = head.expr;\n\n                if (expr instanceof IRCallExpr) {\n                    let fn = assertDefined(this.#reduce.pop());\n\n                    /**\n                     * @type {IRValue[]}\n                     */\n                    let args = [];\n\n                    for (let i = 0; i < expr.args.length; i++) {\n                        args.push(assertDefined(this.#reduce.pop()))\n                    }\n\n                    // don't allow partial literal args (could lead to infinite recursion where the partial literal keeps updating)\n                    //  except when calling builtins (partial literals are important: eg. in divideInteger(<data>, 10) we know that the callExpr doesn't return an error)\n                    const allLiteral = fn.isLiteral() && args.every(a => a.isLiteral());\n\n                    if (!allLiteral && !(fn instanceof IRBuiltinValue) && !(fn instanceof IRFuncValue && fn.definition.args.length == 1 && IRStack.isGlobal(fn.definition.args[0]))) {\n                        fn = fn.withoutLiterals();\n                        args = args.map(a => a.withoutLiterals());\n                    }\n\n                    const fns = fn instanceof IRMultiValue ? fn.values : [fn];\n\n                    if (fns.length > 1) {\n                        this.#compute.push({multi: fns.length, owner: expr});\n                    }\n\n                    for (let fn of fns) {\n                        const code = codeMapper.getCallCode(fn, args);\n                        const cached = this.#cachedCalls.get(expr)?.get(code);\n\n                        if (cached) {\n                            this.pushReductionValue(expr, cached);\n                            \n                            // increment the call count even though we are using a cached value\n                            for (let fn of fns) {\n                                if (fn instanceof IRFuncValue) {\n                                    this.incrCallCount(fn.definition);\n                                }\n                            }\n                        } else {\n                            this.#compute.push({calling: expr, code: code, args: args});\n                            //this.cacheValue(expr, code, new IRAnyValue());\n\n                            if (fn instanceof IRAnyValue) {///} || fn instanceof IRDataValue) {\n                                this.callAnyFunc(expr, fn, args);\n                            } else if (fn instanceof IRErrorValue) {\n                                this.pushReductionValue(expr, new IRErrorValue());\n                            } else if (fn instanceof IRFuncValue) {\n                                this.callFunc(expr, fn, args);\n                                this.prepareCacheValue(expr, code);\n                            } else if (fn instanceof IRBuiltinValue) {\n                                this.callBuiltin(expr, fn.builtin, args);\n                                this.prepareCacheValue(expr, code);\n                            } else {\n                                console.log(expr.toString());\n                                throw expr.site.typeError(\"unable to call \" + fn.toString());\n                            }\n                        }\n                    }\n                } else if (expr instanceof IRErrorExpr) {\n                    this.pushReductionValue(expr, new IRErrorValue());\n                } else if (expr instanceof IRNameExpr) {\n                    if (expr.isParam()) {\n                        this.pushReductionValue(expr, new IRDataValue());\n                    } else if (expr.isCore()) {\n                        this.pushReductionValue(expr, new IRBuiltinValue(expr));\n                    } else {\n                        this.pushReductionValue(expr, this.getValue(head.stack, expr));\n                    }\n                } else if (expr instanceof IRLiteralExpr) {\n                    if (this.#evalLiterals ) {\n                        this.pushReductionValue(expr, new IRLiteralValue(expr.value));\n                    } else {\n                        if (expr.value instanceof UplcUnit) {\n                            this.pushReductionValue(expr, new IRAnyValue());\n                        } else {\n                            this.pushReductionValue(expr, new IRDataValue());\n                        }\n                    }\n                } else if (expr instanceof IRFuncExpr) {\n                    // don't set owner because it is confusing wrt. return value type\n                    this.#reduce.push(IRFuncValue.new(expr, head.stack));\n                } else {\n                    throw new Error(\"unexpected expr type\");\n                }\n            } else if (\"calling\" in head) {\n                // keep track of recursive calls\n                \n                const last = assertDefined(this.#reduce.pop());\n                this.cacheValue(head.calling, head.code, last);\n                this.pushReductionValue(head.calling, last);\n\t\t\t} else if (\"fn\" in head && head.fn instanceof IRFuncExpr) {\n                // track the owner\n                const owner = head.owner;\n                const last = assertDefined(this.#reduce.pop());\n                \n                this.setExprValue(head.fn, last);\n                this.pushReductionValue(owner, last);\n\t\t\t} else if (\"multi\" in head) {\n                // collect multiple IRValues from the reductionStack and put it back as a single IRMultiValue\n\n\t\t\t\t/**\n\t\t\t\t * @type {IRValue[]}\n\t\t\t\t */\n\t\t\t\tconst values = [];\n\n\t\t\t\tfor (let i = 0; i < head.multi; i++) {\n\t\t\t\t\tvalues.push(assertDefined(this.#reduce.pop()));\n\t\t\t\t}\n\n                this.pushReductionValue(head.owner, IRMultiValue.flatten(values));\n            } else if (\"value\" in head) {\n                this.pushReductionValue(head.owner, head.value);\n            } else if (\"ignore\" in head) {\n                const vs = [new IRAnyValue()];\n                for (let i = 0; i < head.ignore; i++) {\n                    if (assertDefined(this.#reduce.pop()) instanceof IRErrorValue) {\n                        vs.push(new IRErrorValue());\n                    }\n                }\n\n                this.pushReductionValue(head.owner, IRMultiValue.flatten(vs));\n\t\t\t} else {\n\t\t\t\tthrow new Error(\"unexpected term\");\n\t\t\t}\n\n            head = this.#compute.pop();\n\t\t}\n    }\n\n    /**\n     * @private\n     * @param {IRExpr} expr entry point\n     * @returns {IRValue}\n     */\n    evalFirstPass(expr) {\n        this.pushExpr(IRStack.empty(), expr);\n\n        this.evalInternal();\n\n        const res = assertDefined(this.#reduce.pop());\n\n        assert(this.#reduce.length == 0, \"expected a single reduction value in first phase [\" + this.#reduce.map(v => v.toString()).join(\", \") + \"]\");\n\n        if (res instanceof IRFuncValue) {\n            return res;\n        } else if (res instanceof IRLiteralValue) {\n            return res; // used by const\n        } else if (res instanceof IRMultiValue && res.values.some(v => v instanceof IRAnyValue)) {\n            return res;\n        } else {\n            console.log(annotateIR(this, expr));\n            throw new Error(`expected entry point function, got ${res.toString()}`);\n        }\n    }\n\n    /**\n     * @private\n     * @param {IRFuncValue} main\n     * @returns {IRValue}\n     */\n    evalSecondPass(main) {\n        const definition = assertClass(main.definition, IRFuncExpr);\n        const args = definition.args.map(a => new IRDataValue());\n        this.callFunc(definition, main, args);\n\n        this.evalInternal();\n\n        const res = assertDefined(this.#reduce.pop());\n\n        assert(this.#reduce.length == 0, \"expected a single reduction value in second phase [\" + res.toString() + \", \" + this.#reduce.map(v => v.toString()).join(\", \") + \"]\");\n\n        const finalValues = (res instanceof IRMultiValue) ? res.values : [res];\n\n        for (let v of finalValues) {\n            if (v instanceof IRErrorValue) {\n\n                // ok\n                /*if (finalValues.length == 1) {\n                    console.error(\"Warning: script always fails\");\n                }*/\n            } else if (v instanceof IRLiteralValue) {\n                // ok\n            } else if (v instanceof IRDataValue) {\n                // ok\n            } else {\n                // ok, (could be a literal UplcUnit, which is treated as Any because in other contexts it could be a function)\n            }\n        }\n\n        return IRMultiValue.flatten(finalValues);\n    }\n\n\t/**\n\t * @param {IRExpr} expr entry point\n     * @returns {IRValue}\n\t */\n\teval(expr) {\n        const res = this.evalFirstPass(expr);\n\n        if (res instanceof IRFuncValue) {\n            return this.evalSecondPass(res);\n        } else {\n            return res;\n        }\n\t}\n\n    /**\n     * @param {IRExpr} expr \n     * @returns {UplcData}\n     */\n    evalConst(expr) {\n        const res = this.evalFirstPass(expr);\n\n        if (res instanceof IRLiteralValue) {\n            let v = res.value;\n\n            if (v instanceof UplcDataValue) {\n                return v.data;\n            } else if (v instanceof UplcInt) {\n                return new IntData(v.int);\n            } else if (v instanceof UplcBool) {\n                return new ConstrData(v.bool ? 1 : 0, []);\n            } else if (v instanceof UplcList) {\n                if (v.isDataList()) {\n                    return new ListData(v.list.map(item => item.data));\n                } else if (v.isDataMap()) {\n                    return new MapData(v.list.map(item => {\n                        const pair = assertClass(item, UplcPair);\n\n                        return [pair.key, pair.value];\n                    }));\n                }\n            } else if (v instanceof UplcString) {\n                return new ByteArrayData(textToBytes(v.string));\n            } else if (v instanceof UplcByteArray) {\n                return new ByteArrayData(v.bytes);\n            }\n\n            throw new Error(`unable to turn '${v.toString()}' into data`);\n        } else {\n            throw new Error(\"expected IRLiteralValue\");\n        }\n    }\n}\n\n\n/**\n * Used to debug the result of IREvalation\n * @internal\n * @param {IREvaluator} evaluation \n * @param {IRExpr} expr \n * @returns {string}\n */\nexport function annotateIR(evaluation, expr) {\n    /**\n     * @param {IRExpr} expr \n     * @param {string} indent\n     * @returns {string}\n     */\n    const annotate = (expr, indent) => {\n        if (expr instanceof IRLiteralExpr) {\n            return expr.value.toString();\n        } else if (expr instanceof IRErrorExpr) {\n            return `error()`;\n        } else if (expr instanceof IRNameExpr) {\n            const output = evaluation.getExprValue(expr);\n\n            if (output) {\n                return `${expr.name}: ${output.toString()}`\n            } else {\n                return expr.name;\n            }\n        } else if (expr instanceof IRFuncExpr) {\n            const output = evaluation.getExprValue(expr);\n\n            const isGlobalDef = expr.args.length == 1 && expr.args[0].name.startsWith(\"__\");\n            const innerIndent = indent + (isGlobalDef ? \"\" : TAB);\n\n            let countStr = \"\";\n            const count = evaluation.countFuncCalls(expr);\n            if (count == Number.MAX_SAFE_INTEGER) {\n                countStr = \"\\u221e\";\n            } else {\n                countStr = count.toString();\n            }\n\n            return `Fn${expr.tag}(${expr.args.map(a => {\n                const v = evaluation.getVariableValue(a);\n\n                if (v) {\n                    return `${a.name}: ${v.toString()}`;\n                } else {\n                    return a.name;\n                }\n            }).join(\", \")})${countStr} -> ${output ? output.toString() + \" \" : \"\"}{\\n${innerIndent}${annotate(expr.body, innerIndent)}\\n${indent}}`;\n        } else if (expr instanceof IRCallExpr) {\n            const output = evaluation.getExprValue(expr);\n\n            const isGlobalDef = expr.func instanceof IRFuncExpr && expr.func.args.length == 1 && expr.func.args[0].name.startsWith(\"__\");\n            const globalDef = expr.func instanceof IRFuncExpr && expr.func.args.length == 1 ? expr.func.args[0].name : \"\";\n\n            const parens = `(${isGlobalDef ? `\\n${indent}${TAB}/* ${globalDef} */` : \"\"}${expr.args.map(a => `\\n${indent}${TAB}${annotate(a, indent + TAB)}`).join(\",\")}${(expr.args.length > 0) || isGlobalDef ? `\\n${indent}` : \"\"})${output ? `: ${output.toString()}` : \"\"}`;\n\n            if (expr.func instanceof IRNameExpr) {\n                return `${expr.func.toString()}${parens}`;\n            } else {\n                return `${annotate(expr.func, indent)}${parens}`;\n            }\n        } else {\n            throw new Error(\"unhandled IRExpr\");\n        }\n    }\n\n    return annotate(expr, \"\");\n}\n\n\n//////////////////////////////\n// Section 31: IR optimization\n//////////////////////////////\n\n/**\n * Any IRFuncExpr that is smaller or equal to this number will be inlined.\n * \n * Examples of helios builtin functions that should be inlined:\n *   * __helios__bool__and \n *   * __helios__common__enum_field_0\n * \n * This is a number of bits/\n */\nconst INLINE_MAX_SIZE = 128;\n\n/**\n * @param {IRExpr} func \n * @returns {boolean}\n */\nfunction isIdentityFunc(func) {\n    if (func instanceof IRFuncExpr && func.args.length == 1 && func.body instanceof IRNameExpr && func.body.isVariable(func.args[0])) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n/**\n * Recursive algorithm that performs the following optimizations.\n * \n * Optimizations performed in both `aggressive == false` and `aggressive == true` cases:\n *   * replace `IRNameExpr` by `IRLiteralExpr` if the expected value is IRLiteralValue\n *   * replace `IRCallExpr` by `IRLiteralExpr` if the expected value is IRLiteralValue\n * \n * Optimizations only performed in the `aggressive == true` case:\n *   * replace `IRNameExpr` by `IRErrorExpr` if the expected value is IRErrorValue\n *   * replace `IRCallExpr` by `IRErrorExpr` if the expected value is IRErrorValue\n *   * replace `__core__addInteger(<expr>, 0)` or `__core__addInteger(0, <expr>)` by `<expr>`\n *   * replace `__core__subtractInteger(<expr>, 0)` by `<expr>`\n *   * replace `__core__multiplyInteger(<expr>, 1)` or `__core__multiplyInteger(1, <expr>)` by `<expr>`\n *   * replace `__core__divideInteger(<expr>, 1)` by `<expr>`\n *   * replace `__core__quotientInteger(<expr>, 1)` by `<expr>`\n *   * replace `__core__appendByteString(<expr>, #)` or `__core__appendByteString(#, <expr>)` by `<expr>`\n *   * replace `__core__appendString(<expr>, \"\")` or `__core__appendString(\"\", <expr>)` by `<expr>`\n *   * replace `__core__decodeUtf8(__core__encodeUtf8(<expr>))` by `<expr>`\n *   * replace `__core__ifThenElse(true, <expr-a>, <expr-b>)` by `<expr-a>` if `<expr-b>` doesn't expect IRErrorValue\n *   * replace `__core__ifThenElse(false, <expr-a>, <expr-b>)` by `<expr-b>` if `<expr-a>` doesn't expect IRErrorValue\n *   * replace `__core__ifThenElse(__core__nullList(<lst-expr>), <expr-a>, <expr-b>)` by `__core__chooseList(<lst-expr>, <expr-a>, <expr-b>)`\n *   * replace `__core__ifThenElse(<cond-expr>, <expr-a>, <expr_a>)` by `<expr-a>` if `<cond-expr>` doesn't expect IRErrorValue\n *   * replace `__core__chooseUnit(<expr>, ())` by `<expr>` (because `<expr>` is expected to return unit as well)\n *   * replace `__core__chooseUnit((), <expr>)` by `<expr>`\n *   * replace `__core__trace(<msg-expr>, <ret-expr>)` by `<ret_expr>` if `<msg-expr>` doesn't expect IRErrorValue\n *   * replace `__core__chooseList([], <expr-a>, <expr-b>)` by `<expr-a>` if `<expr-b>` doesn't expect IRErrorValue\n *   * replace `__core__chooseList([...], <expr-a>, <expr-b>)` by `<expr-b>` if `<expr-a>` doesn't expect IRErrorValue\n *   * replace `__core__chooseData(ConstrData, <C-expr>, <M-expr>, <L-expr>, <I-expr>, <B-expr>)` by `<C-expr>` if none of the other expressions expect IRErrorValue\n *   * replace `__core__chooseData(__core__constrData(<index-expr>, <fields-expr>), <C-expr>, <M-expr>, <L-expr>, <I-expr>, <B-expr>)` by `<C-expr>` if none of the other expressions expect IRErrorValue\n *   * replace `__core__chooseData(MapData, <C-expr>, <M-expr>, <L-expr>, <I-expr>, <B-expr>)` by `<M-expr>` if none of the other expression expect IRErrorValue\n *   * replace `__core__chooseData(__core__mapData(<data-expr>), <C-expr>, <M-expr>, <L-expr>, <I-expr>, <B-expr>)` by `<M-expr>` if none of the other expression expect IRErrorValue\n *   * replace `__core__chooseData(ListData, <C-expr>, <M-expr>, <L-expr>, <I-expr>, <B-expr>)` by `<L-expr>` if none of the other expression expect IRErrorValue\n *   * replace `__core__chooseData(__core__listData(<data-expr>), <C-expr>, <M-expr>, <L-expr>, <I-expr>, <B-expr>)` by `<L-expr>` if none of the other expression expect IRErrorValue\n *   * replace `__core__chooseData(IntData, <C-expr>, <M-expr>, <L-expr>, <I-expr>, <B-expr>)` by `<I-expr>` if none of the other expression expect IRErrorValue\n *   * replace `__core__chooseData(__core__iData(<data-expr>), <C-expr>, <M-expr>, <L-expr>, <I-expr>, <B-expr>)` by `<I-expr>` if none of the other expression expect IRErrorValue\n *   * replace `__core__chooseData(ByteArrayData, <C-expr>, <M-expr>, <L-expr>, <I-expr>, <B-expr>)` by `<B-expr>` if none of the other expression expect IRErrorValue\n *   * replace `__core__chooseData(__core__bData(<data-expr>), <C-expr>, <M-expr>, <L-expr>, <I-expr>, <B-expr>)` by `<B-expr>` if none of the other expression expect IRErrorValue\n *   * replace `__core__unMapData(__core__mapData(<expr>))` by `<expr>`\n *   * replace `__core__unListData(__core__listData(<expr>))` by `<expr>`\n *   * replace `__core__unIData(__core__iData(<expr>))` by `<expr>`\n *   * replace `__core__unBData(__core__bData(<expr>))` by `<expr>`\n *   * replace `__core__equalsData(__core__iData(<expr-a>), __core__iData(<expr-b>))` by `__core__equalsInteger(<expr-a>, <expr-b>)`\n *   * replace `__core__equalsData(__core__bData(<expr-a>), __core__bData(<expr-b>))` by `__core__equalsByteString(<expr-a>, <expr-b>)`\n *   * remove unused IRFuncExpr arg variables if none if the corresponding IRCallExpr args expect errors and if all the the IRCallExprs expect only this IRFuncExpr\n *   * replace IRCallExpr args that are uncalled IRFuncExprs with `()`\n *   * flatten nested IRFuncExprs if the correspondng IRCallExprs always call them in succession\n *   * replace `(<vars>) -> {<name-expr>(<vars>)}` by `<name-expr>` if each var is only referenced once (i.e. only referenced in the call)\n *   * replace `(<var>) -> {<var>}(<arg-expr>)` by `<arg-expr>`\n *   * replace `<name-expr>(<arg-expr>)` by `<arg-expr>` if the expected value of `<name-expr>` is the identity function\n *   * replace `(<vars>) -> {<func-expr>(<vars>)}` by `<func-expr>` if each var is only referenced once (i.e. only referenced in the call)\n *   * inline (copies) of `<name-expr>` in `(<vars>) -> {...}(<name-expr>, ...)`\n *   * inline `<fn-expr>` in `(<vars>) -> {...}(<fn-expr>, ...)` if the corresponding var is only referenced once\n *   * inline `<fn-expr>` in `(<vars>) -> {...}(<fn-expr>, ...)` if `<fn-expr>` has a Uplc flat size smaller than INLINE_MAX_SIZE\n *   * inline `<call-expr>` in `(<vars>) -> {...}(<call-expr>, ...)` if the corresponding var is only referenced once and if all the nested IRFuncExprs are only evaluated once and if the IRCallExpr doesn't expect an error\n *   * replace `() -> {<expr>}()` by `<expr>`\n * \n * Optimizations that we have considered, but are NOT performed:\n *   * replace `__core__subtractInteger(0, <expr>)` by `__core__multiplyInteger(<expr>, -1)`\n *       reason: it is unclear if either method is cheaper for the majority of cases\n *   * replace `__core__multiplyInteger(<expr>, -1)` by `__core__subtractInteger(0, <expr>)`\n *       reason: it is unclear if either method is cheaper for the majority of cases\n * \n * @internal\n * @param {IREvaluator} evaluation \n * @param {IRExpr} expr\n * @param {boolean} aggressive\n * @returns {IRExpr}\n */\nexport class IROptimizer {\n    #evaluator;\n    #root;\n    #aggressive;\n\n    /**\n     * @type {Map<IRVariable, IRExpr>}\n     */\n    #inlining;\n\n    /**\n     * @type {Map<IRFuncExpr, number>}\n     */\n    #callCount;\n\n    /**\n     * @param {IRExpr} root\n     * @param {boolean} aggressive \n     */\n    constructor(root, aggressive = false) {\n        this.#evaluator = new IREvaluator();\n        this.#root = root;\n        IROptimizer.assertNoDuplicateExprs(root);\n        this.#aggressive = aggressive;\n\n        this.#inlining = new Map();\n        this.#callCount = new Map();\n\n        this.init();\n    }\n\n    /**\n     * @param {IRExpr} expr \n     * @returns {boolean}\n     */\n    expectsError(expr) {\n        return this.#evaluator.expectsError(expr);\n    }\n\n    /**\n     * @private\n     * @param {IRFuncExpr} fn \n     */\n    countFuncCalls(fn) {\n        return this.#evaluator.countFuncCalls(fn);\n    }\n\n    /**\n     * Makes sure the callCount is copied from IREvaluator\n     * @private\n     * @param {IRFuncExpr} old \n     * @param {IRVariable[]} args\n     * @param {IRExpr} body\n     * @returns {IRFuncExpr}\n     */\n    newFuncExpr(old, args, body) {\n        const funcExpr = new IRFuncExpr(\n            old.site,\n            args,\n            body,\n            old.tag\n        );\n\n        this.#evaluator.notifyCopyExpr(old, funcExpr);\n\n        return funcExpr;\n    }\n\n    /**\n     * Apply optimizations that require access to the root:\n     *   * flatten nested IRFuncExpr where possible\n     *   * remove unused IRFuncExpr variables\n     * @private\n     */\n    init() {\n        this.#evaluator.eval(this.#root);\n\n        if (config.DEBUG) {\n            console.log(annotateIR(this.#evaluator, this.#root));\n        }\n\n        if (!this.#aggressive) {\n            return;\n        }\n\n        this.removeUnusedArgs();\n\n        this.replaceUncalledArgsWithUnit();\n\n        // rerun evaluation\n        this.#evaluator = new IREvaluator();\n\n        this.#evaluator.eval(this.#root);\n\n        if (config.DEBUG) {\n            console.log(annotateIR(this.#evaluator, this.#root));\n        }\n\n        this.flattenNestedFuncExprs();\n    }\n\n    /**\n     * Mutates\n     * @private\n     */\n    removeUnusedArgs() {\n        const funcExprs = this.#evaluator.funcExprs.filter(expr => {\n            const unusedIndices = this.#evaluator.getUnusedFuncVariables(expr);\n\n            return unusedIndices.length > 0 && this.#evaluator.onlyDedicatedCallExprs(expr) && this.#evaluator.noUnusedArgErrors(expr, unusedIndices);\n        });\n\n        funcExprs.forEach(expr => {\n            const unusedIndices = this.#evaluator.getUnusedFuncVariables(expr);\n            const unused = new Set(unusedIndices);\n\n            const callExprs = this.#evaluator.getFuncCallExprs(expr);\n\n            callExprs.forEach(callExpr => {\n                callExpr.args = callExpr.args.filter((a, i) => !unused.has(i));\n            });\n            \n            expr.args = expr.args.filter((a, i) => !unused.has(i));\n        });\n    }\n\n    /**\n     * TODO: improve IREvaluator to make sure all possible IRFuncExpr calls are evaluated\n     * @private\n     */\n    replaceUncalledArgsWithUnit() {\n        loopIRExprs(this.#root, {\n            callExpr: (callExpr) => {\n                callExpr.args = callExpr.args.map(a => {\n                    if (a instanceof IRFuncExpr && this.#evaluator.countFuncCalls(a) == 0) {\n                        return new IRLiteralExpr(new UplcUnit(a.site));\n                    } else {\n                        return a;\n                    }\n                });\n            }\n        });\n    }\n\n    /**\n     * In scope order, call func before call args\n     * @private\n     */\n    collectFuncExprs() {\n        /**\n         * @type {IRFuncExpr[]}\n         */\n        const funcExprs = [];\n\n        loopIRExprs(this.#root, {\n            funcExpr: (funcExpr) => {\n                funcExprs.push(funcExpr);\n            }\n        });\n\n        return funcExprs;\n    }\n\n    /**\n     * @private\n     */\n    flattenNestedFuncExprs() {\n        const funcExprs = this.collectFuncExprs();\n\n        /**\n         * @type {Set<IRFuncExpr>}\n         */\n        const done = new Set();\n\n        funcExprs.forEach(expr => {\n            if (done.has(expr)) {\n                return;\n            }\n\n            let last = expr;\n            let args = expr.args.slice();\n            let depth = 1;\n\n            while (last.body instanceof IRFuncExpr && this.#evaluator.onlyDedicatedCallExprs(last.body) && this.#evaluator.onlyNestedCalls(last, last.body)) {\n                depth += 1;\n                last = last.body;\n                args = args.concat(last.args.slice());\n                done.add(last);\n            }\n\n            if (depth == 1) {\n                // don't do anything\n                return;\n            }\n\n            const callExprs = this.#evaluator.getFuncCallExprs(last);\n\n            assert(callExprs.length > 0);\n\n            callExprs.forEach(callExpr => {\n                let inner = callExpr;\n\n                /**\n                 * @type {IRExpr[][]}\n                 */\n                let allArgs = [];\n\n                for (let i = 0; i < depth; i++) {\n                    allArgs.push(inner.args.slice());\n\n                    if (i < depth - 1) {\n                        inner = assertClass(inner.func, IRCallExpr);\n                    }\n                }\n\n                callExpr.func = inner.func;\n                callExpr.args = allArgs.reverse().flat();\n            });\n                \n            expr.args = args;\n            expr.body = last.body;\n        })\n    }\n\n    /**\n     * @param {IRFuncExpr} start\n     * @param {IRNameExpr} nameExpr\n     * @returns {boolean}\n     */\n    isEvaluatedMoreThanOnce(start, nameExpr) {\n        /**\n         * @type {Map<IRExpr, IRCallExpr | IRFuncExpr>}\n         */\n        const parents = new Map();\n\n        let foundNameExpr = false;\n\n        loopIRExprs(start, {\n            funcExpr: (funcExpr) => {\n                parents.set(funcExpr.body, funcExpr);\n            },\n            callExpr: (callExpr) => {\n                parents.set(callExpr.func, callExpr);\n                callExpr.args.forEach(a => {parents.set(a, callExpr)});\n            },\n            nameExpr: (ne) => {\n                foundNameExpr = ne == nameExpr;\n            },\n            exit: () => {\n                return foundNameExpr;\n            }\n        });\n\n        let parent = parents.get(nameExpr);\n\n        while (parent && parent != start) {\n            if (parent instanceof IRFuncExpr && this.countFuncCalls(parent) > 1) {\n                return true;\n            }\n            \n            parent = parents.get(parent);\n        }\n\n        return false;\n    }\n\n    /**\n     * @param {IRVariable} v \n     * @param {IRExpr} expr \n     */\n    inline(v, expr) {\n        this.#inlining.set(v, expr);\n    }\n    \n    /**\n     * @private\n     * @param {IRNameExpr} expr \n     * @returns {IRExpr}\n     */\n    optimizeNameExpr(expr) {\n        const v = this.#evaluator.getExprValue(expr);\n    \n        if (v) {\n            if (v instanceof IRLiteralValue) {\n                return new IRLiteralExpr(v.value);\n            } else if (v instanceof IRErrorValue && this.#aggressive) {\n                return new IRErrorExpr(expr.site);\n            }\n        }\n\n        if (!expr.isCore()) {\n            const newExpr = this.#inlining.get(expr.variable);\n\n            if (newExpr) {\n                // always copy to make sure any (nested) IRNameExpr is unique (=> unique DeBruijn index)\n                //  also so that functions that are inlined multiple times each get unique variables\n                return newExpr.copy((oldExpr, newExpr) => {\n                    this.#evaluator.notifyCopyExpr(oldExpr, newExpr);\n                }, new Map());\n            }\n        }\n\n        return expr;\n    }\n\n    /**\n     * The optimizations are only performed in aggressive mode\n     * @private\n     * @param {IRCallExpr} expr\n     * @returns {IRExpr}\n     */\n    optimizeBuiltinCallExpr(expr) {\n        const builtinName = expr.builtinName;\n\n        const args = expr.args;\n\n        switch (builtinName) {\n            case \"addInteger\": {\n                const [a, b] = args;\n\n                if (a instanceof IRLiteralExpr && a.value.int == 0n) {\n                    return b;\n                } else if (b instanceof IRLiteralExpr && b.value.int == 0n) {\n                    return a;\n                }\n\n                break;\n            };\n            case \"subtractInteger\": {\n                const [a, b] = args;\n\n                if (b instanceof IRLiteralExpr && b.value.int == 0n) {\n                    return a;\n                }\n\n                break;\n            };\n            case \"multiplyInteger\": {\n                const [a, b] = args;\n\n                if (a instanceof IRLiteralExpr && a.value.int == 1n) {\n                    return b;\n                } else if (b instanceof IRLiteralExpr && b.value.int == 1n) {\n                    return a;\n                }\n\n                break;\n            };\n            case \"divideInteger\": {\n                const [a, b] = args;\n\n                if (b instanceof IRLiteralExpr && b.value.int == 1n) {\n                    return a;\n                }\n\n                break;\n            };\n            case \"quotientInteger\": {\n                const [a, b] = args;\n\n                if (b instanceof IRLiteralExpr && b.value.int == 1n) {\n                    return a;\n                }\n\n                break;\n            };\n            case \"appendByteString\": {\n                const [a, b] = args;\n\n                if (a instanceof IRLiteralExpr && a.value.bytes.length == 0) {\n                    return b;\n                } else if (b instanceof IRLiteralExpr && b.value.bytes.length == 0) {\n                    return a;\n                }\n\n                break;\n            };\n            case \"appendString\": {\n                const [a, b] = args;\n\n                if (a instanceof IRLiteralExpr && a.value.string == \"\") {\n                    return b;\n                } else if (b instanceof IRLiteralExpr && b.value.string == \"\") {\n                    return a;\n                }\n\n                break;\n            };\n            case \"decodeUtf8\": {\n                const [arg] = args;\n\n                if (arg instanceof IRCallExpr && arg.func instanceof IRNameExpr && arg.builtinName == \"encodeUtf8\") {\n                    return arg.args[0];\n                }\n\n                break;\n            };\n            case \"ifThenElse\": {\n                const [cond, a, b] = args;\n\n                if (cond instanceof IRLiteralExpr) {\n                    if (cond.value.bool && !this.expectsError(b)) {\n                        return a;\n                    } else if (!cond.value.bool && !this.expectsError(a)) {\n                        return b;\n                    }\n                } else if (!this.expectsError(cond) && a.toString() == b.toString()) {\n                    return a;\n                } else if (cond instanceof IRCallExpr && cond.func instanceof IRNameExpr && cond.builtinName == \"nullList\") {\n                    const newExpr = new IRCallExpr(\n                        expr.site,\n                        new IRNameExpr(new Word(expr.site, `${BUILTIN_PREFIX}chooseList`)),\n                        [cond.args[0], a, b]\n                    );\n\n                    this.#evaluator.notifyCopyExpr(expr, newExpr);\n\n                    return newExpr;\n                }\n\n                break;\n            };\n            case \"chooseUnit\": {\n                const [a, b] = args;\n\n                if (a instanceof IRLiteralExpr && a.value instanceof UplcUnit) {\n                    return b;\n                } else if (b instanceof IRLiteralExpr && b.value instanceof UplcUnit) {\n                    return a;\n                }\n\n                break;\n            };\n            case \"trace\": {\n                const [a, b] = args;\n                    \n                if (!this.expectsError(a)) {\n                    return b;\n                }\n\n                break;\n            };\n            case \"chooseList\": {\n                const [lst, a, b] = args;\n\n                if (lst instanceof IRLiteralExpr) {\n                    if (lst.value.list.length == 0 && !this.expectsError(b)) {\n                        return a;\n                    } else if (lst.value.list.length > 0 && !this.expectsError(a)) {\n                        return b;\n                    }\n                }\n\n                break;\n            };\n            case \"chooseData\": {\n                const [cond, C, M, L, I, B] = args;\n\n                if (cond instanceof IRLiteralExpr) {\n                    if (cond.value.data instanceof ConstrData && !this.expectsError(M) && !this.expectsError(L) && !this.expectsError(I) && !this.expectsError(B)) {\n                        return C;\n                    } else if (cond.value.data instanceof MapData && !this.expectsError(C) && !this.expectsError(L) && !this.expectsError(I) && !this.expectsError(B)) {\n                        return M;\n                    } else if (cond.value.data instanceof ListData && !this.expectsError(C) && !this.expectsError(M) && !this.expectsError(I) && !this.expectsError(B)) {\n                        return L;\n                    } else if (cond.value.data instanceof IntData && !this.expectsError(C) && !this.expectsError(M) && !this.expectsError(L) && !this.expectsError(B)) {\n                        return I;\n                    } else if (cond.value.data instanceof ByteArrayData && !this.expectsError(C) && !this.expectsError(M) && !this.expectsError(L) && !this.expectsError(I)) {\n                        return B;\n                    }\n                } else if (cond instanceof IRCallExpr && cond.func instanceof IRNameExpr && !this.expectsError(cond)) {\n                    if (cond.builtinName == \"constrData\" && !this.expectsError(M) && !this.expectsError(L) && !this.expectsError(I) && !this.expectsError(B)) {\n                        return C;\n                    } else if (cond.builtinName == \"mapData\" && !this.expectsError(C) && !this.expectsError(L) && !this.expectsError(I) && !this.expectsError(B)) {\n                        return M;\n                    } else if (cond.builtinName == \"listData\" && !this.expectsError(C) && !this.expectsError(M) && !this.expectsError(I) && !this.expectsError(B)) {\n                        return L;\n                    } else if (cond.builtinName == \"iData\" && !this.expectsError(C) && !this.expectsError(M) && !this.expectsError(L) && !this.expectsError(B)) {\n                        return I;\n                    } else if (cond.builtinName == \"bData\" && !this.expectsError(C) && !this.expectsError(M) && !this.expectsError(L) && !this.expectsError(I)) {\n                        return B;\n                    }\n                }\n\n                break;\n            };\n            case \"unMapData\": {\n                const [arg] = args;\n\n                if (arg instanceof IRCallExpr && arg.func instanceof IRNameExpr && arg.builtinName == \"mapData\") {\n                    return arg.args[0];\n                }\n\n                break;\n            };\n            case \"unListData\": {\n                const [arg] = args;\n\n                if (arg instanceof IRCallExpr && arg.func instanceof IRNameExpr && arg.builtinName == \"listData\") {\n                    return arg.args[0];\n                }\n\n                break;\n            };\n            case \"unIData\": {\n                const [arg] = args;\n\n                if (arg instanceof IRCallExpr && arg.func instanceof IRNameExpr && arg.builtinName == \"iData\") {\n                    return arg.args[0];\n                }\n\n                break;\n            };\n            case \"unBData\": {\n                const [arg] = args;\n\n                if (arg instanceof IRCallExpr && arg.func instanceof IRNameExpr && arg.builtinName == \"bData\") {\n                    return arg.args[0];\n                }\n\n                break;\n            };\n            case \"equalsData\": {\n                const [a, b] = args;\n\n                if (\n                    a instanceof IRCallExpr && a.func instanceof IRNameExpr && a.builtinName == \"iData\" &&\n                    b instanceof IRCallExpr && b.func instanceof IRNameExpr && b.builtinName == \"iData\"\n                ) {\n                    const newExpr = new IRCallExpr(expr.site, new IRNameExpr(new Word(expr.site, `${BUILTIN_PREFIX}equalsInteger`)), [a.args[0], b.args[0]]);\n\n                    this.#evaluator.notifyCopyExpr(expr, newExpr);\n\n                    return newExpr;\n                } else if (\n                    a instanceof IRCallExpr && a.func instanceof IRNameExpr && a.builtinName == \"bData\" &&\n                    b instanceof IRCallExpr && b.func instanceof IRNameExpr && b.builtinName == \"bData\"\n                ) {\n                    const newExpr = new IRCallExpr(expr.site, new IRNameExpr(new Word(expr.site, `${BUILTIN_PREFIX}equalsByteString`)), [a.args[0], b.args[0]]);\n\n                    this.#evaluator.notifyCopyExpr(expr, newExpr);\n\n                    return newExpr;\n                }\n\n                break;\n            };\n        }\n\n        return expr;\n    }\n\n    /**\n     * @private\n     * @param {IRCallExpr} expr \n     * @returns {IRExpr}\n     */\n    optimizeCallExpr(expr) {\n        const v = this.#evaluator.getExprValue(expr);\n    \n        if (v) {\n            if (v instanceof IRLiteralValue) {\n                return new IRLiteralExpr(v.value);\n            } else if (v instanceof IRErrorValue && this.#aggressive) {\n                return new IRErrorExpr(expr.site);\n            }\n        }\n\n        let func = expr.func;\n        \n        let args = expr.args.map(a => this.optimizeInternal(a));\n\n        if (isIdentityFunc(func)) {\n            assert(args.length == 1);\n\n            return args[0];\n        } else if (func instanceof IRNameExpr) {\n            const v = this.#evaluator.getExprValue(func);\n\n            if (v instanceof IRFuncValue && isIdentityFunc(v.definition)) {\n                assert(args.length == 1);\n\n                return args[0];\n            }\n        }\n\n        // see if any arguments can be inlined\n        if (func instanceof IRFuncExpr) {\n            let unused = new Set();\n\n            const funcExpr = func;\n            const variables = func.args;\n\n            args.forEach((a, i) => {\n                const v = variables[i];\n\n                if (a instanceof IRNameExpr) {\n                    // inline all IRNameExprs\n                    unused.add(i);\n                    this.inline(v, a);\n                } else if (a instanceof IRFuncExpr && (this.#evaluator.countVariableReferences(v) == 1 || a.flatSize <= INLINE_MAX_SIZE)) {\n                    // inline IRFuncExpr if it is only reference once\n                    unused.add(i);\n                    this.inline(v, a);\n                } else if (a instanceof IRCallExpr && this.#evaluator.countVariableReferences(v) == 1 && !this.expectsError(a)) {\n                    const nameExpr = this.#evaluator.getVariableReferences(v)[0];\n\n                    if (!this.isEvaluatedMoreThanOnce(funcExpr, nameExpr)) {\n                        unused.add(i);\n                        this.inline(v, a);\n                    }\n                }\n            });\n\n            if (unused.size > 0) {\n                args = args.filter((a, i) => !unused.has(i));\n\n                const newFuncExpr = this.newFuncExpr(\n                    func,\n                    func.args.filter((a, i) => !unused.has(i)),\n                    func.body\n                );\n\n                func = newFuncExpr;\n            }\n        }\n\n        if (args.length == 0 && func instanceof IRFuncExpr && func.args.length == 0) {\n            return this.optimizeInternal(func.body);\n        }\n\n        const newExpr = new IRCallExpr(\n            expr.site, \n            this.optimizeInternal(func),\n            args\n        );\n\n        this.#evaluator.notifyCopyExpr(expr, newExpr);\n\n        const builtinName = newExpr.builtinName;\n\n        if (builtinName != \"\" && this.#aggressive) {\n            return this.optimizeBuiltinCallExpr(newExpr);\n        }\n\n        return newExpr;\n    }\n\n    /**\n     * @private\n     * @param {IRFuncExpr} expr \n     * @returns {IRExpr}\n     */\n    optimizeFuncExpr(expr) {\n        expr = this.newFuncExpr(\n            expr, \n            expr.args,\n            this.optimizeInternal(expr.body)\n        );\n\n        if (\n            expr.body instanceof IRCallExpr && \n            (expr.body.func instanceof IRNameExpr || expr.body.func instanceof IRFuncExpr) && \n            expr.body.args.length == expr.args.length && \n            expr.body.args.every((a, i) => {\n                return a instanceof IRNameExpr && a.isVariable(expr.args[i]) && this.#evaluator.countVariableReferences(expr.args[i]) == 1;\n            })\n        ) {\n            return expr.body.func;\n        }\n\n        return expr;\n    }\n\n    /**\n     * @private\n     * @param {IRExpr} expr \n     */\n    optimizeInternal(expr) {\n        const newExpr = (() => {\n            if (expr instanceof IRLiteralExpr) {\n                // already optimal\n                return expr;\n            } else if (expr instanceof IRErrorExpr) {\n                // already optimal\n                return expr;\n            } else if (expr instanceof IRNameExpr) {\n                return this.optimizeNameExpr(expr);\n            } else if (expr instanceof IRCallExpr) {\n                return this.optimizeCallExpr(expr);\n            } else if (expr instanceof IRFuncExpr) {\n                return this.optimizeFuncExpr(expr);\n            } else {\n                throw new Error(\"unhandled IRExpr\");\n            }\n        })();\n\n        return newExpr;\n    }\n\n    /**\n     * @param {IRExpr} expr \n     */\n    static assertNoDuplicateExprs(expr) {\n        /**\n         * @type {Set<IRExpr>}\n         */\n        const s = new Set();\n\n        loopIRExprs(expr, {\n            nameExpr: (nameExpr) => {\n                if (s.has(nameExpr)) {\n                    console.log(expr.toString());\n                    throw new Error(\"duplicate IRNameExpr \" + nameExpr.name);\n                }\n\n                s.add(nameExpr);\n            }\n        });\n    }\n\n    /**\n     * @returns {IRExpr}\n     */\n    optimize() {\n        const expr = this.optimizeInternal(this.#root);\n\n        IROptimizer.assertNoDuplicateExprs(expr);\n\n        return expr;\n    }\n}\n\n\n/////////////////////////\n// Section 32: IR Program\n/////////////////////////\n\n\n/**\n * Wrapper for IRFuncExpr, IRCallExpr or IRLiteralExpr\n * @internal\n */\nexport class IRProgram {\n\t#expr;\n\t#properties;\n\n\t/**\n\t * @param {IRFuncExpr | IRCallExpr | IRLiteralExpr} expr\n\t * @param {ProgramProperties} properties\n\t */\n\tconstructor(expr, properties) {\n\t\tthis.#expr = expr;\n\t\tthis.#properties = properties;\n\t}\n\n\t/**\n\t * @param {IRExpr} expr \n\t * @returns {IRFuncExpr | IRCallExpr | IRLiteralExpr}\n\t */\n\tstatic assertValidRoot(expr) {\n\t\tif (expr instanceof IRFuncExpr || expr instanceof IRCallExpr || expr instanceof IRLiteralExpr) {\n\t\t\treturn expr;\n\t\t} else {\n\t\t\tthrow new Error(\"invalid IRExpr type for IRProgram\");\n\t\t}\n\t}\n\n\t/**\n\t * @internal\n\t * @param {IR} ir \n\t * @param {null | ScriptPurpose} purpose\n\t * @param {boolean} simplify\n\t * @param {IRScope} scope\n\t * @returns {IRProgram}\n\t */\n\tstatic new(ir, purpose, simplify = false, scope = new IRScope(null, null)) {\n\t\tlet [irSrc, codeMap] = ir.generateSource();\n\t\t\n\t\tconst callsTxTimeRange = irSrc.match(/\\b__helios__tx__time_range\\b/) !== null;\n\n\t\tlet irTokens = tokenizeIR(irSrc, codeMap);\n\n\t\tlet expr = buildIRExpr(irTokens);\n\t\t\n\t\ttry {\n\t\t\texpr.resolveNames(scope);\n\t\t\n\t\t\tif (simplify) {\n\t\t\t\t// inline literals and evaluate core expressions with only literal args (some can be evaluated with only partial literal args)\n\t\t\t\texpr = IRProgram.simplify(expr);\n\t\t\t}\n\n\t\t\t// make sure the debruijn indices are correct (doesn't matter for simplication because names are converted into unique IRVariables, but is very important before converting to UPLC)\n\t\t\texpr.resolveNames(scope);\n\n\t\t\tconst program = new IRProgram(IRProgram.assertValidRoot(expr), {\n\t\t\t\tpurpose: purpose,\n\t\t\t\tcallsTxTimeRange: callsTxTimeRange\n\t\t\t});\n\n\t\t\treturn program;\n\t\t} catch (e) {\n\t\t\tconsole.log((new Source(irSrc, \"\")).pretty());\n\n\t\t\tthrow e;\n\t\t}\n\t}\n\n\t/**\n\t * @returns {string}\n\t */\n\tannotate() {\n\t\tconst evaluator = new IREvaluator();\n\n\t\tevaluator.eval(this.#expr);\n\n\t\treturn annotateIR(evaluator, this.#expr);\n\t}\n\n\t/**\n\t * @param {IRExpr} expr\n\t * @returns {IRExpr}\n\t */\n\tstatic simplify(expr) {\n\t\tlet dirty = true;\n\t\tlet oldState = expr.toString();\n\n\t\twhile (dirty) {\n\t\t\tdirty = false;\n\n\t\t\tconst optimizer = new IROptimizer(expr, true);\n\n\t\t\texpr = optimizer.optimize();\n\n\t\t\tconst newState = expr.toString();\n\n\t\t\tif (newState != oldState) {\n\t\t\t\tdirty = true;\n\t\t\t\toldState = newState;\n\t\t\t}\n\t\t}\n\n\t\treturn expr;\n\t}\n\n\t/**\n\t * @internal\n\t * @type {IRFuncExpr | IRCallExpr | IRLiteralExpr}\n\t */\n\tget expr() {\n\t\treturn this.#expr;\n\t}\n\n\t/**\n\t * @internal\n\t * @type {ProgramProperties}\n\t */\n\tget properties() {\n\t\treturn this.#properties;\n\t}\n\n\t/**\n\t * @internal\n\t * @type {Site}\n\t */\n\tget site() {\n\t\treturn this.#expr.site;\n\t}\n\n\t/**\n\t * @type {UplcData}\n\t */\n\tget data() {\n\t\tif (this.#expr instanceof IRLiteralExpr) {\n\t\t\tlet v = this.#expr.value;\n\n\t\t\tif (v instanceof UplcDataValue) {\n\t\t\t\treturn v.data;\n\t\t\t} else if (v instanceof UplcInt) {\n\t\t\t\treturn new IntData(v.int);\n\t\t\t} else if (v instanceof UplcBool) {\n\t\t\t\treturn new ConstrData(v.bool ? 1 : 0, []);\n\t\t\t} else if (v instanceof UplcList) {\n\t\t\t\tif (v.isDataList()) {\n\t\t\t\t\treturn new ListData(v.list.map(item => item.data));\n\t\t\t\t} else if (v.isDataMap()) {\n\t\t\t\t\treturn new MapData(v.list.map(item => {\n\t\t\t\t\t\tconst pair = assertClass(item, UplcPair);\n\n\t\t\t\t\t\treturn [pair.key, pair.value];\n\t\t\t\t\t}));\n\t\t\t\t}\n\t\t\t} else if (v instanceof UplcString) {\n\t\t\t\treturn new ByteArrayData(textToBytes(v.string));\n\t\t\t} else if (v instanceof UplcByteArray) {\n\t\t\t\treturn new ByteArrayData(v.bytes);\n\t\t\t}\n\t\t} \n\n\t\tthrow new Error(`unable to turn '${this.toString()}' into data`);\n\t}\n\n\t/**\n\t * @returns {string}\n\t */\n\ttoString() {\n\t\treturn this.#expr.toString();\n\t}\n\n\t/**\n\t * @returns {UplcProgram}\n\t */\n\ttoUplc() {\n\t\treturn new UplcProgram(this.#expr.toUplc(), this.#properties);\n\t}\n\n\t/**\n\t * @returns {number}\n\t */\n\tcalcSize() {\n\t\treturn this.toUplc().calcSize();\n\t}\n}\n\n/**\n * @internal\n */\nexport class IRParametricProgram {\n\t/**\n\t * @type {IRProgram}\n\t */\n\t#irProgram;\n\n\t/**\n\t * @type {number}\n\t */\n\t#nParams;\n\n\t/**\n\t * @param {IRProgram} irProgram\n\t * @param {number} nParams\n\t */\n\tconstructor(irProgram, nParams) {\n\t\tthis.#irProgram = irProgram;\n\t\tthis.#nParams = nParams;\n\t}\n\n\t/**\n\t * @internal\n\t * @param {IR} ir \n\t * @param {null | ScriptPurpose} purpose\n\t * @param {number} nParams\n\t * @param {boolean} simplify\n\t * @returns {IRParametricProgram}\n\t */\n\tstatic new(ir, purpose, nParams, simplify = false) {\n\t\tlet scope = new IRScope(null, null);\n\n\t\tfor (let i = 0; i < nParams; i++) {\n\t\t\tconst internalName = `__PARAM_${i}`;\n\n\t\t\tscope = new IRScope(scope, new IRVariable(new Word(Site.dummy(), internalName)));\n\t\t}\n\n\t\tconst irProgram = IRProgram.new(ir, purpose, simplify, scope);\n\n\t\treturn new IRParametricProgram(irProgram, nParams);\n\t}\n\n\t/**\n\t * @type {IRProgram}\n\t */\n\tget program() {\n\t\treturn this.#irProgram;\n\t}\n\n\t/**\n\t * @returns {UplcProgram}\n\t */\n\ttoUplc() {\n\t\tlet exprUplc = this.#irProgram.expr.toUplc();\n\n\t\tfor (let i = 0; i < this.#nParams; i++) {\n\t\t\texprUplc = new UplcLambda(Site.dummy(), exprUplc);\n\t\t}\n\n\t\treturn new UplcProgram(exprUplc, this.#irProgram.properties);\n\t}\n}\n\n\n\n/////////////////////////////\n// Section 33: Helios program\n/////////////////////////////\n\n\n/**\n * A Module is a collection of statements\n */\nclass Module {\n\t#name;\n\t#statements;\n\n\t/**\n\t * @param {Word} name \n\t * @param {Statement[]} statements\n\t */\n\tconstructor(name, statements) {\n\t\tthis.#name = name;\n\t\tthis.#statements = statements;\n\n\t\tthis.#statements.forEach(s => s.setBasePath(`__module__${this.#name.toString()}`));\n\t}\n\n\t/**\n\t * @param {string} rawSrc\n\t * @returns {Module}\n\t */\n\tstatic new(rawSrc) {\n\t\tlet rawName = \"\";\n\t\tconst purposeName = extractScriptPurposeAndName(rawSrc);\n\t\tif (purposeName) {\n\t\t\trawName = purposeName[1];\n\t\t}\n\n\t\tconst src = new Source(rawSrc, rawName);\n\n\t\tconst ts = tokenize(src);\n\n\t\tsrc.throwErrors();\n\n\t\tif (ts === null) {\n\t\t\tthrow new Error(\"should've been thrown above\");\n\t\t}\n\n\t\tif (ts.length == 0) {\n\t\t\tthrow UserError.syntaxError(src, 0, 1, \"empty script\");\n\t\t}\n\n\t\tconst [purpose, name, statements, mainIdx] = buildScript(ts, \"module\");\n\n\t\tsrc.throwErrors();\n\n\t\tif (name !== null) {\n\t\t\treturn new Module(name, statements);\n\t\t} else {\n\t\t\tthrow new Error(\"unexpected\"); // should've been caught by calling src.throwErrors() above\n\t\t}\n\t}\n\n\tthrowErrors() {\n\t\tthis.#name.site.src.throwErrors();\n\t}\n\n\t/**\n\t * @type {Word}\n\t */\n\tget name() {\n\t\treturn this.#name;\n\t}\n\n\t/**\n\t * @type {Statement[]}\n\t */\n\tget statements() {\n\t\treturn this.#statements.slice();\n\t}\n\n\t/**\n\t * @param {string} namespace \n\t * @param {(name: string, cs: ConstStatement) => void} callback \n\t */\n\tloopConstStatements(namespace, callback) {\n\t\tfor (let s of this.#statements) {\n\t\t\ts.loopConstStatements(namespace, callback);\n\t\t}\n\t}\n\n\t/**\n\t * @returns {string}\n\t */\n\ttoString() {\n\t\treturn this.#statements.map(s => s.toString()).join(\"\\n\");\n\t}\n\n\t/**\n\t * @param {ModuleScope} scope \n\t */\n\tevalTypes(scope) {\n\t\tfor (let s of this.statements) {\n\t\t\ts.eval(scope);\n\t\t}\n\t}\n\n\t/**\n\t * This module can depend on other modules\n\t * TODO: detect circular dependencies\n\t * @param {Module[]} modules \n\t * @param {Module[]} stack\n\t * @returns {Module[]}\n\t */\n\tfilterDependencies(modules, stack = []) {\n\t\t/**\n\t\t * @type {Module[]}\n\t\t */\n\t\tlet deps = [];\n\n\t\t/** @type {Module[]} */\n\t\tlet newStack = [this];\n\t\tnewStack = newStack.concat(stack);\n\n\t\tfor (let s of this.#statements) {\n\t\t\tif (s instanceof ImportFromStatement || s instanceof ImportModuleStatement) {\n\t\t\t\tlet mn = s.moduleName.value;\n\n\t\t\t\tif (mn == this.name.value) {\n\t\t\t\t\tthrow s.syntaxError(\"can't import self\");\n\t\t\t\t} else if (stack.some(d => d.name.value == mn)) {\n\t\t\t\t\tthrow s.syntaxError(\"circular import detected\");\n\t\t\t\t}\n\n\t\t\t\t// if already in deps, then don't add (because it will have been added before along with all its dependencies)\n\t\t\t\tif (!deps.some(d => d.name.value == mn)) {\n\t\t\t\t\tlet m = modules.find(m => m.name.value == mn);\n\n\t\t\t\t\tif (m === undefined) {\n\t\t\t\t\t\tthrow s.referenceError(`module '${mn}' not found`);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// only add deps that weren't added before\n\t\t\t\t\t\tlet newDeps = m.filterDependencies(modules, newStack).concat([m]).filter(d => !deps.some(d_ => d_.name.value == d.name.value));\n\n\t\t\t\t\t\tdeps = deps.concat(newDeps);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn deps;\n\t}\n}\n\n/**\n * The entrypoint module\n */\nclass MainModule extends Module {\n\t/**\n\t * @param {Word} name \n\t * @param {Statement[]} statements \n\t */\n\tconstructor(name, statements) {\n\t\tsuper(name, statements);\n\t}\n\n\t/**\n\t * @type {FuncStatement}\n\t */\n\tget mainFunc() {\n\t\tfor (let s of this.statements) {\n\t\t\tif (s.name.value == \"main\") {\n\t\t\t\tif (!(s instanceof FuncStatement)) {\t\n\t\t\t\t\tthrow s.typeError(\"'main' isn't a function statement\");\n\t\t\t\t} else {\n\t\t\t\t\treturn s;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthrow new Error(\"'main' not found (is a module being used as an entrypoint?)\");\n\t}\n}\n\n/**\n * @typedef {{[name: string]: any}} UserTypes\n */\n\n/**\n * @typedef {{\n *   allowPosParams: boolean\n *   invertEntryPoint: boolean\n * }} ProgramConfig\n */\n\n/**\n * @type {ProgramConfig}\n */\nconst DEFAULT_PROGRAM_CONFIG = {\n\tallowPosParams: false,\n\tinvertEntryPoint: false\n}\n\n/**\n * Helios root object\n */\n export class Program {\n\t/**\n\t * @type {ScriptPurpose}\n\t */\n\t#purpose;\n\n\t/**\n\t * @type {Module[]}\n\t */\n\t#modules;\n\n\t/**\n\t * @type {ProgramConfig}\n\t */\n\t#config;\n\n\t/** \n\t * @type {UserTypes} \n\t */\n\t#types;\n\n\t/**\n\t * Cache of const values\n\t * @type {Object.<string, HeliosData>}\n\t */\n\t#parameters;\n\t\n\t/**\n\t * @internal\n\t * @param {ScriptPurpose} purpose\n\t * @param {Module[]} modules\n\t * @param {ProgramConfig} config\n\t */\n\tconstructor(purpose, modules, config) {\n\t\tthis.#purpose = purpose;\n\t\tthis.#modules = modules;\n\t\tthis.#config = config;\n\t\tthis.#types = {};\n\t\tthis.#parameters = {};\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tthrowErrors() {\n\t\tthis.#modules.forEach(m => m.throwErrors());\n\t}\n\n\t/**\n\t * @internal\n\t * @param {string} rawSrc \n\t * @returns {[purpose, Module[]]}\n\t */\n\tstatic parseMainInternal(rawSrc) {\n\t\tlet rawName = \"\";\n\t\tconst purposeName = extractScriptPurposeAndName(rawSrc);\n\t\tif (purposeName) {\n\t\t\trawName = purposeName[1];\n\t\t}\n\n\t\tconst src = new Source(rawSrc, rawName);\n\n\t\tconst ts = tokenize(src);\n\n\t\tsrc.throwErrors();\n\n\t\tif (ts === null) {\n\t\t\tthrow new Error(\"should've been thrown above\");\n\t\t}\n\n\t\tif (ts.length == 0) {\n\t\t\tthrow UserError.syntaxError(src, 0, 1, \"empty script\");\n\t\t}\n\n\t\tconst [purpose, name, statements, mainIdx] = buildScript(ts);\n\n\t\tsrc.throwErrors();\n\n\t\tif (purpose !== null && name !== null) {\n\t\t\t/**\n\t\t\t * @type {Module[]}\n\t\t\t */\n\t\t\tconst modules = [new MainModule(name, statements.slice(0, mainIdx+1))];\n\n\t\t\tif (mainIdx < statements.length - 1) {\n\t\t\t\tmodules.push(new Module(name, statements.slice(mainIdx+1)));\n\t\t\t}\n\n\t\t\treturn [purpose, modules];\n\t\t} else {\n\t\t\tthrow new Error(\"unexpected\"); // should've been caught by calling src.throwErrors() above\n\t\t}\n\t}\n\n\t/**\n\t * @internal\n\t * @param {string} mainName \n\t * @param {string[]} moduleSrcs\n\t * @returns {Module[]}\n\t */\n\tstatic parseImports(mainName, moduleSrcs = []) {\n\t\tlet imports = moduleSrcs.map(src => {\n\t\t\treturn Module.new(src);\n\t\t});\n\n\t\t/**\n\t\t * @type {Set<string>}\n\t\t */\n\t\tlet names = new Set();\n\n\t\tnames.add(mainName);\n\n\t\tfor (let m of imports) {\n\t\t\tif (names.has(m.name.value)) {\n\t\t\t\tthrow m.name.syntaxError(`non-unique module name '${m.name.value}'`);\n\t\t\t}\n\n\t\t\tnames.add(m.name.value);\n\t\t}\n\n\t\treturn imports;\n\t}\n\n\t/**\n\t * @internal\n\t * @param {string} mainSrc \n\t * @param {string[]} moduleSrcs\n\t * @returns {[null | ScriptPurpose, Module[]]}\n\t */\n\tstatic parseMain(mainSrc, moduleSrcs) {\n\t\tlet [purpose, modules] = Program.parseMainInternal(mainSrc);\n\n\t\tconst site = modules[0].name.site;\n\n\t\tconst imports = Program.parseImports(modules[0].name.value, moduleSrcs);\n\t\t\n\t\tconst mainImports = modules[0].filterDependencies(imports);\n\n\t\t/** @type {Module[]} */\n\t\tlet postImports = [];\n\n\t\tif (modules.length > 1) {\n\t\t\tpostImports = modules[modules.length - 1].filterDependencies(imports).filter(m => !mainImports.some(d => d.name.value == m.name.value));\n\t\t}\n\n\t\t// create the final order of all the modules (this is the order in which statements will be added to the IR)\n\t\tmodules = mainImports.concat([modules[0]]).concat(postImports).concat(modules.slice(1));\n\n\t\tif (purpose == \"module\") {\n\t\t\tthrow site.syntaxError(\"can't use module for main\");\n\t\t}\n\n\t\treturn [purpose, modules];\n\t}\n\n\t/**\n\t * Creates  a new program.\n\t * @param {string} mainSrc \n\t * @param {string[]} moduleSrcs - optional sources of modules, which can be used for imports\n\t * @param {ProgramConfig} config\n\t * @returns {Program}\n\t */\n\tstatic new(mainSrc, moduleSrcs = [], validatorTypes = {}, config = DEFAULT_PROGRAM_CONFIG) {\n\t\treturn Program.newInternal(mainSrc, moduleSrcs, {}, config);\n\t}\n\n\t/**\n\t * Creates  a new program.\n\t * @internal\n\t * @param {string} mainSrc \n\t * @param {string[]} moduleSrcs - optional sources of modules, which can be used for imports\n\t * @param {{[name: string]: Type}} validatorTypes\n\t * @param {ProgramConfig} config\n\t * @returns {Program}\n\t */\n\tstatic newInternal(mainSrc, moduleSrcs = [], validatorTypes = {}, config = DEFAULT_PROGRAM_CONFIG) {\n\t\tconst [purpose, modules] = Program.parseMain(mainSrc, moduleSrcs);\n\t\n\t\t/**\n\t\t * @type {Program}\n\t\t */\n\t\tlet program;\n\n\t\tswitch (purpose) {\n\t\t\tcase \"testing\":\n\t\t\t\tprogram = new TestingProgram(modules);\n\t\t\t\tbreak;\n\t\t\tcase \"spending\":\n\t\t\t\tprogram = new SpendingProgram(modules, config);\n\t\t\t\tbreak;\n\t\t\tcase \"minting\":\n\t\t\t\tprogram = new MintingProgram(modules, config);\n\t\t\t\tbreak;\n\t\t\tcase \"staking\":\n\t\t\t\tprogram = new StakingProgram(modules, config);\n\t\t\t\tbreak;\n\t\t\tcase \"endpoint\":\n\t\t\t\tprogram = new EndpointProgram(modules);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tthrow new Error(\"unhandled script purpose\");\n\t\t}\n\n\t\tconst topScope = program.evalTypes(validatorTypes);\n\n\t\tprogram.throwErrors();\n\n\t\tif (purpose != \"endpoint\") {\n\t\t\tprogram.fillTypes(topScope);\n\t\t}\n\n\t\treturn program;\n\t}\n\n\t/**\n\t * @type {ProgramConfig}\n\t */\n\tget config() {\n\t\treturn this.#config;\n\t}\n\n\t/**\n\t * @internal\n\t * @type {number}\n\t */\n\tget nPosParams() {\n\t\treturn 0;\n\t}\n\n\t/**\n\t * @internal\n\t * @type {Type[]}\n\t */\n\tget posParams() {\n\t\treturn this.mainArgTypes.slice(0, this.nPosParams);\n\t}\n\n\t/** \n\t * @internal\n\t * @type {Module[]} \n\t */\n\tget mainImportedModules() {\n\t\t/** @type {Module[]} */\n\t\tlet ms = [];\n\n\t\tfor (let m of this.#modules) {\n\t\t\tif (m instanceof MainModule) {\n\t\t\t\tbreak;\n\t\t\t} else {\n\t\t\t\tms.push(m);\n\t\t\t}\n\t\t}\n\n\t\treturn ms;\n\t}\n\n\t/**\n\t * @internal\n\t * @type {MainModule}\n\t */\n\tget mainModule() {\n\t\tfor (let m of this.#modules) {\n\t\t\tif (m instanceof MainModule) {\n\t\t\t\treturn m;\n\t\t\t}\n\t\t}\n\n\t\tthrow new Error(\"MainModule not found\");\n\t}\n\n\t/**\n\t * @internal\n\t * @type {null | Module}\n\t */\n\tget postModule() {\n\t\tlet m = this.#modules[this.#modules.length - 1];\n\n\t\tif (m instanceof MainModule) {\n\t\t\treturn null;\n\t\t} else {\n\t\t\treturn m;\n\t\t}\n\t}\n\n\t/**\n\t * @type {ScriptPurpose}\n\t */\n\tget purpose() {\n\t\treturn this.#purpose;\n\t}\n\n\t/**\n\t * @type {string}\n\t */\n\tget name() {\n\t\treturn this.mainModule.name.value;\n\t}\n\n\t/**\n\t * @internal\n\t * @type {FuncStatement}\n\t */\n\tget mainFunc() {\n\t\treturn this.mainModule.mainFunc;\n\t}\n\n\t/**\n\t * @internal\n\t * @type {Site}\n\t */\n\tget mainRetExprSite() {\n\t\treturn this.mainFunc.retSite;\n\t}\n\n\t/**\n\t * @internal\n\t * @type {string[]}\n\t */\n\tget mainArgNames() {\n\t\treturn this.mainFunc.argNames;\n\t}\n\n\t/**\n\t * @internal\n\t * @type {DataType[]}\n\t */\n\tget mainArgTypes() {\n\t\treturn this.mainFunc.argTypes.map(at => assertDefined(at.asDataType));\n\t}\n\n\t/**\n\t * @internal\n\t * @type {string}\n\t */\n\tget mainPath() {\n\t\treturn this.mainFunc.path;\n\t}\n\n\t/**\n\t * @internal\n\t * @type {Statement[]}\n\t */\n\tget mainStatements() {\n\t\treturn this.mainModule.statements;\n\t}\n\n\t/**\n\t * Needed to list the paramTypes, and to call changeParam\n\t * @internal\n\t * @type {Statement[]}\n\t */\n\tget mainAndPostStatements() {\n\t\tlet statements = this.mainModule.statements;\n\n\t\tif (this.postModule != null) {\n\t\t\tstatements = statements.concat(this.postModule.statements);\n\t\t}\n\n\t\treturn statements;\n\t}\n\n\t/**\n\t * @internal\n\t * @type {[Statement, boolean][]} - boolean value marks if statement is import or not\n\t */\n\tget allStatements() {\n\t\t/**\n\t\t * @type {[Statement, boolean][]}\n\t\t */\n\t\tlet statements = [];\n\n\t\tfor (let i = 0; i < this.#modules.length; i++) {\n\t\t\tlet m = this.#modules[i];\n\n\t\t\t// MainModule or PostModule => isImport == false\n\t\t\tlet isImport = !(m instanceof MainModule || (i == this.#modules.length - 1));\n\n\t\t\tstatements = statements.concat(m.statements.map(s => [s, isImport]));\n\t\t}\n\n\t\treturn statements;\n\t}\n\n\t/**\n\t * @returns {string}\n\t */\n\ttoString() {\n\t\treturn this.#modules.map(m => m.toString()).join(\"\\n\");\n\t}\n\n\t/**\n\t * @internal\n\t * @param {GlobalScope} globalScope\n\t * @returns {TopScope}\n\t */\n\tevalTypesInternal(globalScope) {\n\t\tconst topScope = new TopScope(globalScope);\n\n\t\t// loop through the modules\n\n\t\tfor (let i = 0; i < this.#modules.length; i++) {\n\t\t\tconst m = this.#modules[i];\n\n\t\t\t// reuse main ModuleScope for post module\n\t\t\tconst moduleScope = (m ===  this.postModule) ? topScope.getModuleScope(this.mainModule.name) : new ModuleScope(topScope);\n\n\t\t\tm.evalTypes(moduleScope);\n\n\t\t\tif (m instanceof MainModule) {\n\t\t\t\ttopScope.setStrict(false);\n\t\t\t}\n\n\t\t\tif (m !== this.postModule) {\n\t\t\t\ttopScope.setScope(m.name, moduleScope);\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn topScope;\n\t}\n\n\t/**\n\t * @internal\n\t * @param {{[name: string]: Type}} validatorTypes\n\t * @returns {TopScope}\n\t */\n\tevalTypes(validatorTypes = {}) {\n\t\tthrow new Error(\"not yet implemented\");\n\t}\n\n\t/**\n\t * @type {UserTypes}\n\t */\n\tget types() {\n\t\treturn this.#types;\n\t}\n\n\t/**\n\t * Fill #types with convenient javascript equivalents of Int, ByteArray etc.\n\t * @internal\n\t * @param {TopScope} topScope\n\t */\n\tfillTypes(topScope) {\n\t\tconst mainModuleScope = topScope.getModuleScope(this.mainModule.name);\n\n\t\tmainModuleScope.loopTypes((name, type) => {\n\t\t\tif (type?.asDataType?.offChainType) {\n\t\t\t\tthis.#types[name] = type.asDataType.offChainType;\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * @internal\n\t * @param {(name: string, cs: ConstStatement) => void} callback \n\t */\n\tloopConstStatements(callback) {\n\t\tconst postModule = this.postModule;\n\n\t\tfor (let m of this.#modules) {\n\t\t\tconst namespace = (m instanceof MainModule || m === postModule) ? \"\" : `${m.name.value}::`;\n\n\t\t\tm.loopConstStatements(namespace, callback);\n\t\t}\n\t}\n\n\t/**\n\t * @internal\n\t * @type {{[name: string]: DataType}}\n\t */\n\tget paramTypes() {\n\t\t/**\n\t\t * @type {{[name: string]: DataType}}\n\t\t */\n\t\tlet res = {};\n\n\t\tthis.loopConstStatements((name, constStatement) => {\n\t\t\tres[name] = constStatement.type\n\t\t});\n\n\t\treturn res;\n\t}\n\n\t/**\n\t * Change the literal value of a const statements  \n\t * @internal\n\t * @param {string} name\n\t * @param {UplcData} data\n\t */\n\tchangeParamSafe(name, data) {\n\t\tlet found = false;\n\n\t\tthis.loopConstStatements((constName, constStatement) => {\n\t\t\tif (!found) {\n\t\t\t\tif (constName == name) {\n\t\t\t\t\tconstStatement.changeValueSafe(data);\n\t\t\t\t\tfound = true;\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\n\t\tif (!found) {\n\t\t\tthrow this.mainFunc.referenceError(`param '${name}' not found`);\n\t\t}\n\t}\n\n\t/**\n\t * @internal\n\t * @param {string} name \n\t * @returns {ConstStatement | null}\n\t */\n\tfindConstStatement(name) {\n\t\t/**\n\t\t * @type {ConstStatement | null}\n\t\t */\n\t\tlet cs = null;\n\n\t\tthis.loopConstStatements((constName, constStatement) => {\n\t\t\tif (cs === null) {\n\t\t\t\tif (name == constName)  {\n\t\t\t\t\tcs = constStatement;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\treturn cs;\n\t}\n\n\t/**\n\t * @internal\n\t * @param {ConstStatement} constStatement\n\t * @returns {UplcValue}\n\t */\n\tevalConst(constStatement) {\n\t\tconst ctx = new ToIRContext(false)\n\n\t\tconst map = this.fetchDefinitions(ctx, new IR(\"\"), (s, isImport) => {\n\t\t\tlet found = false;\n\t\t\ts.loopConstStatements(\"\", (_, cs) => {\n\t\t\t\tif (!found) {\n\t\t\t\t\tif (cs === constStatement) {\n\t\t\t\t\t\tfound = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\n\t\t\treturn found;\n\t\t});\n\n\t\tconst path = constStatement.path;\n\n\t\tconst inner = new IR(path);\n\n\t\tconst ir = this.wrapInner(ctx, inner, map);\n\n\t\tconst [irSrc, codeMap] = ir.generateSource();\n\n\t\tconst irTokens = tokenizeIR(irSrc, codeMap);\n\n\t\tconst expr = buildIRExpr(irTokens);\n\n\t\tconst scope = new IRScope(null, null);\n\n\t\texpr.resolveNames(scope);\n\n\t\tconst evaluation = new IREvaluator();\n\t\t\n\t\ttry {\n\t\t\tconst data = evaluation.evalConst(expr);\n\n\t\t\treturn new UplcDataValue(expr.site, data);\n\t\t} catch (e) {\n\t\t\tconsole.log(irSrc);\n\n\t\t\tthrow e;\n\t\t}\n\t}\n\n\t/**\n\t * Doesn't use wrapEntryPoint\n\t * @param {string} name - can be namespace: \"Type::ConstName\" or \"Module::ConstName\" or \"Module::Type::ConstName\"\n\t * @returns {UplcValue}\n\t */\n\tevalParam(name) {\n\t\t/** \n\t\t * @type {ConstStatement | null} \n\t\t */\n\t\tlet constStatement = this.findConstStatement(name);\n\n\t\tif (!constStatement) {\n\t\t\tthrow new Error(`param '${name}' not found`);\n\t\t}\n\n\t\treturn this.evalConst(constStatement);\n\t}\n\t\n\t/**\n\t * Alternative way to get the parameters as HeliosData instances\n\t * @returns {{[name: string]: HeliosData | any}}\n\t */\n\tget parameters() {\n\t\tconst that = this;\n\n\t\t// not expensive, so doesn't need to be evaluated on-demand\n\t\tconst types = this.paramTypes;\n\n\t\tconst handler = {\n\t\t\t/**\n\t\t\t * Return from this.#parameters if available, or calculate\n\t\t\t * @param {{[name: string]: HeliosData}} target \n\t\t\t * @param {string} name\n\t\t\t * @returns {HeliosData}\n\t\t\t */\n\t\t\tget(target, name) {\n\t\t\t\tif (name in target) {\n\t\t\t\t\treturn target[name];\n\t\t\t\t} else {\n\t\t\t\t\tconst type = assertDefined(types[name], `invalid param name '${name}'`);\n\t\t\t\t\t\n\t\t\t\t\tconst uplcValue = that.evalParam(name);\n\n\t\t\t\t\tconst value = assertDefined(type.offChainType).fromUplcData(uplcValue.data);\n\t\t\t\t\t\t\n\t\t\t\t\ttarget[name] = value;\n\n\t\t\t\t\treturn value;\n\t\t\t\t}\n\t\t\t},\n\t\t\t\n\t\t\t/**\n\t\t\t * @param {{[name: string]: HeliosData}} target\n\t\t\t * @param {string} name\n\t\t\t * @param {HeliosData | any} rawValue\n\t\t\t * @returns {boolean}\n\t\t\t */\n\t\t\tset(target, name, rawValue) {\n\t\t\t\tlet permissive = false;\n\t\t\t\tif (name.startsWith(\"?\")) {\n\t\t\t\t\tname = name.slice(1);\n\t\t\t\t\tpermissive = true;\n\t\t\t\t}\n\n\t\t\t\tif (!types[name]) {\n\t\t\t\t\tif (!permissive) {\n\t\t\t\t\t\tthrow new Error(`invalid parameter name '${name}'`);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tconst UserType = assertDefined(types[name].offChainType, `invalid param name '${name}'`);\n\n\t\t\t\t\tconst value = rawValue instanceof UserType ? rawValue : new UserType(rawValue);\n\n\t\t\t\t\ttarget[name] = value;\n\n\t\t\t\t\tthat.changeParamSafe(name, value._toUplcData());\n\t\t\t\t}\n\n\t\t\t\treturn true;\n\t\t\t}\n\t\t};\n\n\t\treturn new Proxy(this.#parameters, handler);\n\t}\n\n\t/**\n\t * Use proxy for setting\n\t * @param {{[name: string]: HeliosData | any}} values\n\t */\n\tset parameters(values) {\n\t\tconst proxy = this.parameters;\n\n\t\tfor (let name in values) {\n\t\t\tproxy[name] = values[name];\n\t\t}\n\t}\n\n\t/**\n\t * @internal\n\t * @param {ToIRContext} ctx\n\t * @param {(s: Statement, isImport: boolean) => boolean} endCond\n\t * @returns {IRDefinitions} \n\t */\n\tstatementsToIR(ctx, endCond) {\t\t\n\t\t/**\n\t\t * @type {IRDefinitions}\n\t\t */\n\t\tconst map = new Map();\n\n\t\tfor (let [statement, isImport] of this.allStatements) {\n\t\t\tstatement.toIR(ctx, map);\n\n\t\t\tif (endCond(statement, isImport)) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn map;\n\t}\n\n\t/**\n\t * For top-level statements\n\t * @internal\n\t * @param {IR} mainIR\n\t * @param {IRDefinitions} map\n\t * @returns {IR}\n\t */\n\tstatic injectMutualRecursions(mainIR, map) {\n\t\tconst keys = Array.from(map.keys());\n\n\t\t/**\n\t\t * @param {string} name\n\t\t * @param {string[]} potentialDependencies \n\t\t * @returns {string[]}\n\t\t */\n\t\tconst filterMutualDependencies = (name, potentialDependencies) => {\n\t\t\t// names to be treated\n\t\t\tconst stack = [name];\n\n\t\t\t/**\n\t\t\t * @type {Set<string>}\n\t\t\t */\n\t\t\tlet set = new Set();\n\n\t\t\twhile (stack.length > 0) {\n\t\t\t\tconst name = assertDefined(stack.shift());\n\n\t\t\t\tconst ir = assertDefined(map.get(name));\n\n\t\t\t\tconst localDependencies = keys.slice(keys.findIndex(name.includes(\"[\") ? ((prefix) => {return (n => n.startsWith(prefix))})(name.split(\"[\")[0]): (n => n == name))).filter(dep => !set.has(dep));\n\n\t\t\t\tfor (let i = 0; i < localDependencies.length; i++) {\n\t\t\t\t\tconst dep = localDependencies[i];\n\t\t\t\t\tif (ir.includes(dep)) {\n\t\t\t\t\t\tset.add(dep)\n\n\t\t\t\t\t\tif (dep != name) {\n\t\t\t\t\t\t\tstack.push(dep);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn potentialDependencies.filter(d => set.has(d));\n\t\t}\n\n\t\tfor (let i = keys.length - 1; i >= 0; i--) {\n\t\t\tconst k = keys[i];\n\n\t\t\t// don't make a final const statement self-recursive (makes evalParam easier)\n\t\t\t// don't make __helios builtins mutually recursive\n\t\t\t// don't make __from_data and ____<op> methods mutually recursive (used frequently inside the entrypoint)\n\t\t\tif ((k.startsWith(\"__const\") && i == keys.length - 1) || k.startsWith(\"__helios\") || (k.endsWith(\"__from_data\") && !config.CHECK_CASTS) || k.includes(\"____\")) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tlet prefix = assertDefined(k.match(/(__const)?([^[]+)(\\[|$)/))[0];\n\n\t\t\t// get all following definitions including self, excluding constants\n\t\t\t// also don't mutual recurse helios functions\n\t\t\tconst potentialDependencies = keys.slice(i).filter(k => (k.startsWith(prefix) || k.startsWith(`__const${prefix}`)) && !(k.endsWith(\"__from_data\") && !config.CHECK_CASTS) && !k.includes(\"____\"));\n\n\t\t\tconst dependencies = filterMutualDependencies(k, potentialDependencies);\n\n\t\t\tif (dependencies.length > 0) {\n\t\t\t\tconst escaped = k.replace(/\\[/g, \"\\\\[\").replace(/]/g, \"\\\\]\");\n\n\t\t\t\tconst re = new RegExp(`\\\\b${escaped}(\\\\b|$)`, \"gm\");\n\t\t\t\tconst newStr = `${k}(${dependencies.join(\", \")})`;\n\t\t\t\t// do the actual replacing\n\t\t\t\tfor (let k_ of keys) {\n\t\t\t\t\tmap.set(k_, assertDefined(map.get(k_)).replace(re, newStr));\n\t\t\t\t}\n\n\t\t\t\tmainIR = mainIR.replace(re, newStr);\n\n\t\t\t\tconst wrapped = new IR([\n\t\t\t\t\tnew IR(`(${dependencies.join(\", \")}) -> {`),\n\t\t\t\t\tassertDefined(map.get(k)),\n\t\t\t\t\tnew IR(\"}\")\n\t\t\t\t]);\n\n\t\t\t\t// wrap own definition\n\t\t\t\tmap.set(k, wrapped);\n\t\t\t}\n\t\t}\n\n\t\treturn mainIR;\n\t}\n\n\t/**\n\t * Also merges builtins and map\n\t * @internal\n\t * @param {ToIRContext} ctx\n\t * @param {IR} mainIR\n\t * @param {IRDefinitions} map \n\t * @returns {IRDefinitions}\n\t */\n\tstatic applyTypeParameters(ctx, mainIR, map) {\n\t\tconst builtinGenerics = fetchRawGenerics(ctx);\n\n\t\t/**\n\t\t * @type {Map<string, [string, IR]>}\n\t\t */\n\t\tconst added = new Map();\n\n\t\t/**\n\t\t * @param {string} name \n\t\t * @param {string} location\n\t\t */\n\t\tconst add = (name, location) => {\n\t\t\tif (map.has(name) || added.has(name)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst pName = IRParametricName.parse(name);\n\n\t\t\tconst genericName = pName.toTemplate();\n\t\t\tconst genericFuncName = pName.toTemplate(true);\n\n\t\t\tlet ir = builtinGenerics.get(name) ?? builtinGenerics.get(genericName) ?? builtinGenerics.get(genericFuncName) ?? map.get(genericName);\n\n\t\t\tif (!ir) {\n\t\t\t\tthrow new Error(`${genericName} undefined in ir`);\n\t\t\t} else if (ir instanceof IR) {\n\t\t\t\tir = pName.replaceTemplateNames(ir);\n\n\t\t\t\tadded.set(name, [location, ir]);\n\n\t\t\t\tir.search(RE_IR_PARAMETRIC_NAME, (name_) => add(name_, name));\n\t\t\t} else {\n\t\t\t\tconst ir_ = ir(pName.ttp, pName.ftp);\n\n\t\t\t\tadded.set(name, [location, ir_]);\n\n\t\t\t\tir_.search(RE_IR_PARAMETRIC_NAME, (name_) => add(name_, name));\n\t\t\t}\n\t\t};\n\n\t\tfor (let [k, v] of map) {\n\t\t\tv.search(RE_IR_PARAMETRIC_NAME, (name) => add(name, k));\n\t\t}\n\n\t\tmainIR.search(RE_IR_PARAMETRIC_NAME, (name) => add(name, \"main\"))\n\n\t\t// we need to keep templates, otherwise find() might fail to inject the applied definitions in the right location\n\t\tlet entries = Array.from(map.entries());\n\n\t\t/**\n\t\t * @param {string} name\n\t\t * @returns {number}\n\t\t */\n\t\tconst find = (name) => {\n\t\t\tfor (let i = entries.length - 1; i >= 0; i--) {\n\t\t\t\tif (entries[i][0] == name) {\n\t\t\t\t\treturn i;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (name == \"main\") {\n\t\t\t\treturn entries.length;\n\t\t\t} else {\n\t\t\t\tthrow new Error(`${name} not found`);\n\t\t\t}\n\t\t};\n\n\t\tconst addedEntries = Array.from(added.entries());\n\n\t\tfor (let i = 0; i < addedEntries.length; i++) {\n\t\t\tconst [name, [location, ir]] = addedEntries[i];\n\n\t\t\tconst j = find(location);\n\n\t\t\t// inject right before location\n\n\t\t\tentries = entries.slice(0, j).concat([[name, ir]]).concat(entries.slice(j));\n\t\t}\n\n\t\t/**\n\t\t * Remove template because they don't make any sense in the final output\n\t\t */\n\t\tentries = entries.filter(([key, _]) => !IRParametricName.isTemplate(key));\n\n\t\treturn new Map(entries);\n\t}\n\n\t/**\n\t * @internal\n\t * @param {IR} ir \n\t * @param {IRDefinitions} definitions \n\t * @returns {Set<string>}\n\t */\n\tcollectAllUsed(ir, definitions) {\n\t\t/**\n\t\t * Set of global paths\n\t\t * @type {Set<string>}\n\t\t */\n\t\tconst used = new Set();\n\n\t\t/**\n\t\t * @type {IR[]}\n\t\t */\n\t\tconst stack = [ir];\n\n\t\tconst RE = /__[a-zA-Z0-9_[\\]@]+/g;\n\n\t\twhile (stack.length > 0) {\n\t\t\tconst ir = assertDefined(stack.pop());\n\n\t\t\tir.search(RE, (match) => {\n\t\t\t\tif (!used.has(match)) {\n\t\t\t\t\tused.add(match);\n\n\t\t\t\t\tconst def = definitions.get(match);\n\n\t\t\t\t\tif (def) {\n\t\t\t\t\t\tstack.push(def);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\treturn used;\n\t}\n\n\t/**\n\t * @internal\n\t * @param {IR} ir \n\t * @param {IRDefinitions} definitions \n\t * @returns {IRDefinitions}\n\t */\n\teliminateUnused(ir, definitions) {\n\t\tconst used = this.collectAllUsed(ir, definitions);\n\n\t\t// eliminate all definitions that are not in set\n\n\t\t/**\n\t\t * @type {IRDefinitions}\n\t\t */\n\t\tconst result = new Map();\n\n\t\tfor (let [k, ir] of definitions) {\n\t\t\tif (used.has(k)) {\n\t\t\t\tresult.set(k, ir);\n\t\t\t}\n\t\t}\n\n\t\t// Loop internal const statemtsn\n\t\tthis.loopConstStatements((name, cs) => {\n\t\t\tconst path = cs.path;\n\n\t\t\tif (used.has(path) && !definitions.has(cs.path)) {\n\t\t\t\tthrow cs.site.referenceError(`used unset const '${name}' (hint: use program.parameters['${name}'] = ...)`);\n\t\t\t}\n\t\t});\n\n\t\treturn result;\n\t}\n\n\t/**\n\t * Loops over all statements, until endCond == true (includes the matches statement)\n\t * Then applies type parameters\n\t * @internal\n\t * @param {ToIRContext} ctx\n\t * @param {IR} ir\n\t * @param {(s: Statement) => boolean} endCond\n\t * @returns {IRDefinitions}\n\t */\n\tfetchDefinitions(ctx, ir, endCond) {\n\t\tlet map = this.statementsToIR(ctx, endCond);\n\n\t\treturn Program.applyTypeParameters(ctx, ir, map);\n\t}\n\n\t/**\n\t * @internal\n\t * @param {ToIRContext} ctx\n\t * @param {IR} ir\n\t * @param {IRDefinitions} definitions\n\t * @returns {IR}\n\t */\n\twrapInner(ctx, ir, definitions) {\n\t\tir = Program.injectMutualRecursions(ir, definitions);\n\n\t\tdefinitions = this.eliminateUnused(ir, definitions);\n\n\t\tir = IR.wrapWithDefinitions(ir, definitions);\n\n\t\t// add builtins as late as possible, to make sure we catch as many dependencies as possible\n\t\tconst builtins = fetchRawFunctions(ctx, assertClass(ir, IR), definitions);\n\n\t\tir = IR.wrapWithDefinitions(ir, builtins);\n\n\t\treturn ir;\n\t}\n\n\t/**\n\t * @internal\n\t * @param {ToIRContext} ctx\n\t * @param {IR} ir\n\t * @param {null | IRDefinitions} extra\n\t * @returns {IR}\n\t */\n\twrapEntryPoint(ctx, ir, extra = null) {\n\t\tlet map = this.fetchDefinitions(ctx, ir, (s) => s.name.value == \"main\");\n\n\t\tif (extra) {\n\t\t\tmap = new Map(Array.from(extra.entries()).concat(Array.from(map.entries())));\n\t\t}\n\n\t\treturn this.wrapInner(ctx, ir, map);\n\t}\n\n\t/**\n\t * @internal\n\t * @param {ToIRContext} ctx\n\t * @returns {IR}\n\t */\n\ttoIRInternal(ctx) {\n\t\tthrow new Error(\"not yet implemented\");\n\t}\n\n\t/**\n\t * @internal\n\t * @param {ToIRContext} ctx\n\t * @param {null | IRDefinitions} extra\n\t * @returns {IR}\n\t */\n\ttoIR(ctx, extra = null) {\n\t\tconst ir = this.toIRInternal(ctx)\n\n\t\treturn this.wrapEntryPoint(ctx, ir, extra);\n\t}\n\n\t/**\n\t * Non-positional named parameters\n\t * @internal\n\t * @type {[string, Type][]}\n\t */\n\tget requiredParameters() {\n\t\tconst ir = this.toIRInternal(new ToIRContext(false));\n\t\tconst definitions = this.fetchDefinitions(new ToIRContext(false), ir, (s) => s.name.value == \"main\");\n\t\tconst used = this.collectAllUsed(ir, definitions);\n\t\t\n\t\t/**\n\t\t * @type {[string, Type][]}\n\t\t */\n\t\tconst lst = [];\n\n\t\tthis.loopConstStatements((name, cs) => {\n\t\t\tif (!cs.isSet() && used.has(cs.path)) {\n\t\t\t\tlst.push([name, cs.type]);\n\t\t\t}\n\t\t});\n\n\t\treturn lst;\n\t}\n\n\t/**\n\t * Returns the Intermediate Representation AST of the program.\n\t * @param {boolean} optimized if `true`, returns the IR of the optimized program\n\t * @param {boolean} annotate add internal type information annotations to the returned AST \n\t * @returns {string}\n\t */\n\tdumpIR(optimized = false, annotate = false) {\n\t\tconst ir = this.toIR(new ToIRContext(optimized));\n\n\t\tconst irProgram = IRProgram.new(ir, this.#purpose, optimized);\n\n\t\tif (!annotate) {\n\t\t\treturn new Source(irProgram.toString(), this.name).pretty();\n\t\t} else {\n\t\t\treturn new Source(irProgram.annotate(), this.name).pretty();\n\t\t}\n\t}\n\n\t/**\n\t * @param {boolean} simplify \n\t * @returns {UplcProgram}\n\t */\n\tcompile(simplify = false) {\n\t\tconst ir = this.toIR(new ToIRContext(simplify));\n\n\t\tif (this.nPosParams > 0) {\n\t\t\tconst irProgram = IRParametricProgram.new(ir, this.#purpose, this.nPosParams, simplify);\n\n\t\t\t// TODO: UplcParametricProgram\n\t\t\treturn irProgram.toUplc();\n\t\t} else {\n\t\t\tconst irProgram = IRProgram.new(ir, this.#purpose, simplify);\n\t\t\t\n\t\t\t//console.log(new Source(ir.generateSource()[0], \"main\").pretty());\n\t\t\t\n\t\t\treturn irProgram.toUplc();\n\t\t}\n\t}\n}\n\nclass RedeemerProgram extends Program {\n\t/**\n\t * @param {ScriptPurpose} purpose\n\t * @param {Module[]} modules \n\t * @param {ProgramConfig} config\n\t */\n\tconstructor(purpose, modules, config = DEFAULT_PROGRAM_CONFIG) {\n\t\tsuper(purpose, modules, config);\n\t}\n\n\t/**\n\t * @type {number}\n\t */\n\tget nPosParams() {\n\t\treturn this.mainFunc.nArgs - (this.config.invertEntryPoint ? 0 : 2);\n\t}\n\n\t/**\n\t * @internal\n\t * @param {GlobalScope} scope\n\t * @returns {TopScope}\n\t */\n\tevalTypesInternal(scope) {\n\t\tconst topScope = super.evalTypesInternal(scope);\n\n\t\t// check the 'main' function\n\n\t\tconst main = this.mainFunc;\n\t\tconst argTypeNames = main.argTypeNames;\n\t\tconst argTypes = main.argTypes;\n\t\tconst retType = main.retType;\n\t\tconst nArgs = argTypes.length;\n\n\t\tif (this.config.allowPosParams) {\n\t\t\tif (nArgs < 2) {\n\t\t\t\tmain.typeError(\"expected at least 2 args for main\");\n\t\t\t\treturn topScope;\n\t\t\t}\n\t\t} else {\n\t\t\tif (nArgs != 2) {\n\t\t\t\tmain.typeError(\"expected 2 args for main\");\n\t\t\t\treturn topScope;\n\t\t\t}\n\t\t}\n\t\t\n\t\tfor (let i = 0; i < nArgs; i++) {\n\t\t\tif (i == nArgs - 1) {\n\t\t\t\tif (argTypeNames[i] != \"\" && !(new ScriptContextType()).isBaseOf(argTypes[i])) {\n\t\t\t\t\tmain.typeError(`illegal type for arg ${nArgs} in main, expected 'ScriptContext', got ${argTypes[i].toString()}`);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (argTypeNames[i] != \"\" && !(new DefaultTypeClass()).isImplementedBy(argTypes[i])) {\n\t\t\t\t\tmain.typeError(`illegal ${i == nArgs - 2 ? \"redeemer \" : \"\"}argument type in main: '${argTypes[i].toString()}`);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (!(BoolType.isBaseOf(retType))) {\n\t\t\tmain.typeError(`illegal return type for main, expected 'Bool', got '${retType.toString()}'`);\n\t\t}\n\n\t\treturn topScope;\n\t}\n\n\t/**\n\t * @internal\n\t * @param {ScriptTypes} validatorTypes\n\t * @returns {TopScope}\n\t */\n\tevalTypes(validatorTypes = {}) {\n\t\tconst scope = GlobalScope.new(validatorTypes);\n\n\t\treturn this.evalTypesInternal(scope);\t\n\t}\n\n\t/**\n\t * @internal\n\t * @param {ToIRContext} ctx\n\t * @returns {IR} \n\t */\n\ttoIRInternal(ctx) {\n\t\tconst outerArgNames = this.config.invertEntryPoint ? [] : [\"redeemer\", \"ctx\"];\n\t\tconst nOuterArgs = outerArgNames.length;\n\n\t\tconst nArgs = this.mainFunc.nArgs;\n\t\tconst argTypeNames = this.mainFunc.argTypeNames;\n\t\tconst argTypes = this.mainArgTypes;\n\n\t\tconst innerArgs = argTypes.map((t, i) => {\n\t\t\tconst name = (i >= (nArgs-nOuterArgs)) ? outerArgNames[i-(nArgs-nOuterArgs)] : `__PARAM_${i.toString()}`;\n\n\t\t\t// empty path\n\t\t\tif (argTypeNames[i] != \"\") {\n\t\t\t\treturn new IR([\n\t\t\t\t\tnew IR(`${assertNonEmpty(t.path)}__from_data`),\n\t\t\t\t\tnew IR(\"(\"),\n\t\t\t\t\tnew IR(name),\n\t\t\t\t\tnew IR(\")\")\n\t\t\t\t]);\n\t\t\t} else {\n\t\t\t\t// unused arg, 0 is easier to optimize\n\t\t\t\treturn new IR(\"0\");\n\t\t\t}\n\t\t});\n\n\t\tlet ir = new IR([\n\t\t\tnew IR(`${TAB}${TAB}__core__ifThenElse`),\n\t\t\tnew IR(\"(\", this.mainRetExprSite),\n\t\t\tnew IR(`\\n${TAB}${TAB}${TAB}${this.mainPath}(`),\n\t\t\tnew IR(innerArgs).join(\", \"),\n\t\t\tnew IR(`),\\n${TAB}${TAB}${TAB}() -> {()},\\n${TAB}${TAB}${TAB}() -> {__helios__error(\"validation returned false\")}\\n${TAB}${TAB})`),\n\t\t\tnew IR(\"(\", this.mainRetExprSite),\n\t\t\tnew IR(\")\")\n\t\t]);\n\n\t\tif (nOuterArgs > 0) {\n\t\t\tconst outerArgs = outerArgNames.map((n) => new IR(n));\n\n\t\t\tir = new IR([\n\t\t\t\tnew IR(`${TAB}/*entry point*/\\n${TAB}(`),\n\t\t\t\tnew IR(outerArgs).join(\", \"),\n\t\t\t\tnew IR(`) -> {\\n`),\n\t\t\t\tir,\n\t\t\t\tnew IR(`\\n${TAB}}`)\n\t\t\t])\n\t\t}\n\n\t\treturn ir;\n\t}\n\n\t/**\n\t * @returns {string}\n\t */\n\ttoString() {\n\t\treturn `${this.purpose} ${this.name}\\n${super.toString()}`;\n\t}\n}\n\n/**\n * Used by CLI\n * @internal\n */\nexport class DatumRedeemerProgram extends Program {\n\t/**\n\t * @param {ScriptPurpose} purpose\n\t * @param {Module[]} modules\n\t * @param {ProgramConfig} config\n\t */\n\tconstructor(purpose, modules, config) {\n\t\tsuper(purpose, modules, config);\n\t}\n\n\t/**\n\t * @type {number}\n\t */\n\tget nPosParams() {\n\t\treturn this.mainFunc.nArgs - (this.config.invertEntryPoint ? 0 : 3);\n\t}\n\n\t/**\n\t * @type {DataType}\n\t */\n\tget datumType() {\n\t\treturn this.mainArgTypes[0]\n\t}\n\n\t/**\n\t * @type {string}\n\t */\n\tget datumTypeName() {\n\t\treturn this.mainFunc.argTypeNames[0];\n\t}\n\n\t/**\n\t * @internal\n\t * @param {GlobalScope} scope \n\t * @returns {TopScope}\n\t */\n\tevalTypesInternal(scope) {\n\t\tconst topScope = super.evalTypesInternal(scope);\n\n\t\t// check the 'main' function\n\n\t\tconst main = this.mainFunc;\n\t\tconst argTypeNames = main.argTypeNames;\n\t\tconst argTypes = main.argTypes;\n\t\tconst retType = main.retType;\n\t\tconst nArgs = main.nArgs;\n\n\t\tif (this.config.allowPosParams) {\n\t\t\tif (argTypes.length < 3) {\n\t\t\t\tmain.typeError(\"expected at least 3 args for main\");\t\n\t\t\t\treturn topScope;\n\t\t\t}\n\t\t} else {\n\t\t\tif (argTypes.length != 3) {\n\t\t\t\tmain.typeError(\"expected 3 args for main\");\t\n\t\t\t\treturn topScope;\n\t\t\t}\n\t\t}\n\n\t\tfor (let i = 0; i < nArgs; i++) {\n\t\t\tif (i == nArgs - 1) {\n\t\t\t\tif (argTypeNames[i] != \"\" && !(new ScriptContextType()).isBaseOf(argTypes[i])) {\n\t\t\t\t\tmain.typeError(`illegal type for arg ${nArgs} in main: expected 'ScriptContext', got '${argTypes[i].toString()}'`);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (argTypeNames[i] != \"\" && !(new DefaultTypeClass()).isImplementedBy(argTypes[i])) {\n\t\t\t\t\tmain.typeError(`illegal type for arg ${i+1} in main ${i == nArgs - 2 ? \"(datum) \" : (i == nArgs - 3 ? \"(redeemer) \" : \"\")}: '${argTypes[i].toString()}`);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (!(BoolType.isBaseOf(retType))) {\n\t\t\tmain.typeError(`illegal return type for main, expected 'Bool', got '${retType.toString()}'`);\n\t\t}\n\n\t\treturn topScope;\n\t}\n\n\t/**\n\t * @internal\n\t * @param {ScriptTypes} scriptTypes\n\t * @returns {TopScope}\n\t */\n\tevalTypes(scriptTypes) {\n\t\tconst scope = GlobalScope.new(scriptTypes);\n\n\t\treturn this.evalTypesInternal(scope);\t\n\t}\n\n\t/**\n\t * @internal\n\t * @param {ToIRContext} ctx\n\t * @returns {IR}\n\t */\n\ttoIRInternal(ctx) {\n\t\tconst outerArgNames = this.config.invertEntryPoint ? [] : [\"datum\", \"redeemer\", \"ctx\"];\n\t\tconst nOuterArgs = outerArgNames.length;\n\n\t\tconst nArgs = this.mainFunc.nArgs;\n\t\tconst argTypeNames = this.mainFunc.argTypeNames;\n\n\t\tconst innerArgs = this.mainArgTypes.map((t, i) => {\n\t\t\tconst name = (i >= (nArgs-nOuterArgs)) ? outerArgNames[i-(nArgs-nOuterArgs)] : `__PARAM_${i.toString()}`;\n\n\t\t\t// empty path\n\t\t\tif (argTypeNames[i] != \"\") {\n\t\t\t\treturn new IR([\n\t\t\t\t\tnew IR(`${assertNonEmpty(t.path)}__from_data`),\n\t\t\t\t\tnew IR(\"(\"),\n\t\t\t\t\tnew IR(name),\n\t\t\t\t\tnew IR(\")\")\n\t\t\t\t]);\n\t\t\t} else {\n\t\t\t\t// unused arg, 0 is easier to optimize\n\t\t\t\treturn new IR(\"0\");\n\t\t\t}\n\t\t});\n\n\t\tlet ir = new IR([\n\t\t\tnew IR(`${TAB}${TAB}__core__ifThenElse`),\n\t\t\tnew IR(\"(\", this.mainRetExprSite),\n\t\t\tnew IR(`\\n${TAB}${TAB}${TAB}${this.mainPath}(`),\n\t\t\tnew IR(innerArgs).join(\", \"),\n\t\t\tnew IR(`),\\n${TAB}${TAB}${TAB}() -> {()},\\n${TAB}${TAB}${TAB}() -> {__helios__error(\"validation returned false\")}\\n${TAB}${TAB})`),\n\t\t\tnew IR(\"(\", this.mainRetExprSite),\n\t\t\tnew IR(\")\")\n\t\t]);\n\n\t\tif (nOuterArgs > 0) {\n\t\t\tconst outerArgs = outerArgNames.map((n) => new IR(n));\n\n\t\t\tir = new IR([\n\t\t\t\tnew IR(`${TAB}/*entry point*/\\n${TAB}(`),\n\t\t\t\tnew IR(outerArgs).join(\", \"),\n\t\t\t\tnew IR(`) -> {\\n`),\n\t\t\t\tir,\n\t\t\t\tnew IR(`\\n${TAB}}`)\n\t\t\t]);\n\t\t}\n\n\t\treturn ir;\n\t}\n\n\t/**\n\t * @internal\n\t * @param {ToIRContext} ctx\n\t * @returns {IR}\n\t */\n\tdatumCheckToIR(ctx) {\n\t\tif (this.datumTypeName == \"\") {\n\t\t\treturn new IR(`(data) -> {data}`);\n\t\t} else {\n\t\t\tconst datumPath = this.datumType.path;\n\n\t\t\tconst ir = new IR(`(data) -> {${datumPath}____to_data(${datumPath}__from_data(data))}`);\n\n\t\t\treturn this.wrapEntryPoint(ctx, ir);\n\t\t}\n\t}\n\n\t/**\n\t * Used by cli\n\t * @internal\n\t * @returns {UplcProgram}\n\t */\n\tcompileDatumCheck() {\n\t\tconst ir = this.datumCheckToIR(new ToIRContext(false));\n\n\t\tconst irProgram = IRProgram.new(ir, null, false);\n\t\t\t\n\t\treturn irProgram.toUplc();\n\t}\n\n\t/**\n\t * @returns {string}\n\t */\n\ttoString() {\n\t\treturn `${this.purpose} ${this.name}\\n${super.toString()}`;\n\t}\n}\n\nclass GenericProgram extends Program {\n\t/**\n\t * @param {ScriptPurpose} purpose \n\t * @param {Module[]} modules \n\t * @param {ProgramConfig} config\n\t */\n\tconstructor(purpose, modules, config) {\n\t\tsuper(purpose, modules, config);\n\t}\n\n\t/**\n\t * @returns {string}\n\t */\n\ttoString() {\n\t\treturn `${this.purpose} ${this.name}\\n${super.toString()}`;\n\t}\n\n\t/**\n\t * @internal\n\t * @param {ScriptTypes} scriptTypes\n\t * @returns {TopScope}\n\t */\n\tevalTypes(scriptTypes) {\n\t\tconst scope = GlobalScope.new(scriptTypes);\n\n\t\tconst topScope = super.evalTypesInternal(scope);\n\n\t\t// check the 'main' function\n\n\t\tconst main = this.mainFunc;\n\t\tconst argTypeNames = main.argTypeNames;\n\t\tconst argTypes = main.argTypes;\n\t\tconst retType = main.retType;\n\n\n\t\targTypeNames.forEach((argTypeName, i) => {\n\t\t\tif (argTypeName != \"\" && !(new DefaultTypeClass()).isImplementedBy(argTypes[i])) {\n\t\t\t\tmain.typeError(`illegal argument type in main: '${argTypes[i].toString()}`);\n\t\t\t}\n\t\t});\n\n\t\t// TODO: support tuple return values ?\n\t\tif (!((new DefaultTypeClass()).isImplementedBy(retType))) {\n\t\t\tmain.typeError(`illegal return type for main: '${retType.toString()}'`);\n\t\t}\n\n\t\treturn topScope;\n\t}\n\n\t/**\n\t * @internal\n\t * @param {ToIRContext} ctx\n\t * @returns {IR}\n\t */\n\ttoIRInternal(ctx) {\n\t\tconst argTypeNames = this.mainFunc.argTypeNames;\n\n\t\tconst innerArgs = this.mainArgTypes.map((t, i) => {\n\t\t\t// empty path\n\t\t\tif (argTypeNames[i] != \"\") {\n\t\t\t\treturn new IR([\n\t\t\t\t\tnew IR(`${assertNonEmpty(t.path)}__from_data`),\n\t\t\t\t\tnew IR(\"(\"),\n\t\t\t\t\tnew IR(`arg${i}`),\n\t\t\t\t\tnew IR(\")\")\n\t\t\t\t]);\n\t\t\t} else {\n\t\t\t\t// unused arg, 0 is easier to optimize\n\t\t\t\treturn new IR(\"0\")\n\t\t\t}\n\t\t});\n\n\t\tlet ir = new IR([\n\t\t\tnew IR(`${this.mainPath}(`),\n\t\t\tnew IR(innerArgs).join(\", \"),\n\t\t\tnew IR(\")\"),\n\t\t]);\n\n\t\tconst retType = assertDefined(this.mainFunc.retType.asDataType);\n\n\t\tir = new IR([\n\t\t\tnew IR(`${retType.path}____to_data`),\n\t\t\tnew IR(\"(\"),\n\t\t\tir,\n\t\t\tnew IR(\")\")\n\t\t]);\n\n\t\tconst outerArgs = this.mainFunc.argTypes.map((_, i) => new IR(`arg${i}`));\n\n\t\tir = new IR([\n\t\t\tnew IR(`${TAB}/*entry point*/\\n${TAB}(`),\n\t\t\tnew IR(outerArgs).join(\", \"),\n\t\t\tnew IR(`) -> {\\n${TAB}${TAB}`),\n\t\t\tir,\n\t\t\tnew IR(`\\n${TAB}}`),\n\t\t]);\n\n\t\treturn ir;\n\t}\n}\n\nclass TestingProgram extends GenericProgram {\n\t/**\n\t * @param {Module[]} modules \n\t */\n\tconstructor(modules) {\n\t\tsuper(\"testing\", modules, DEFAULT_PROGRAM_CONFIG);\n\t}\n}\n\nclass SpendingProgram extends DatumRedeemerProgram {\n\t/**\n\t * @param {Module[]} modules\n\t * @param {ProgramConfig} config\n\t */\n\tconstructor(modules, config) {\n\t\tsuper(\"spending\", modules, config);\n\t}\n}\n\nclass MintingProgram extends RedeemerProgram {\n\t/**\n\t * @param {Module[]} modules \n\t * @param {ProgramConfig} config\n\t */\n\tconstructor(modules, config = DEFAULT_PROGRAM_CONFIG) {\n\t\tsuper(\"minting\", modules, config);\n\t}\n}\n\nclass StakingProgram extends RedeemerProgram {\n\t/**\n\t * @param {Module[]} modules \n\t * @param {ProgramConfig} config\n\t */\n\tconstructor(modules, config = DEFAULT_PROGRAM_CONFIG) {\n\t\tsuper(\"staking\", modules, config);\n\t}\n}\n\n/**\n * @internal\n */\nclass EndpointProgram extends GenericProgram {\n\t/**\n\t * @param {Module[]} modules \n\t */\n\tconstructor(modules) {\n\t\tsuper(\"endpoint\", modules, DEFAULT_PROGRAM_CONFIG);\n\t}\n\n\t/**\n\t * @internal\n\t * @param {ScriptTypes} scriptTypes\n\t * @returns {TopScope}\n\t */\n\tevalTypes(scriptTypes = {}) {\n\t\tconst scope = GlobalScope.new(scriptTypes);\n\n\t\tconst topScope = super.evalTypesInternal(scope);\n\t\t\n\t\tconst main = this.mainFunc;\n\t\tconst argTypes = main.argTypes;\n\t\tconst argTypeNames = main.argTypeNames;\n\t\tconst retType = main.retType;\n\n\t\tif (argTypeNames.length == 0) {\n\t\t\tmain.typeError(\"expected at least argument 'ContractContext'\");\n\t\t\treturn topScope;\n\t\t}\n\n\t\targTypeNames.forEach((argTypeName, i) => {\n\t\t\tif (i != argTypeNames.length -1 && argTypeName != \"\" && !(new DefaultTypeClass()).isImplementedBy(argTypes[i])) {\n\t\t\t\tmain.typeError(`illegal argument type in main: '${argTypes[i].toString()}`);\n\t\t\t}\n\t\t});\n\n\t\tif (argTypeNames[argTypeNames.length-1] != \"\") {\n\t\t\tconst lastArgType = argTypes[argTypes.length-1];\n\t\t\tif (!(lastArgType instanceof ContractContextType)) {\n\t\t\t\tmain.typeError(`expected 'ContractContext' for arg ${argTypes.length}, got '${lastArgType.toString()}'`);\n\t\t\t}\n\t\t}\n\t\t\n\t\t// TODO: support tuple return values ?\n\t\tif (!((new DefaultTypeClass()).isImplementedBy(retType))) {\n\t\t\tmain.typeError(`illegal return type for main: '${retType.toString()}'`);\n\t\t}\n\t\t\n\t\treturn topScope;\n\t}\n}\n\n\n/////////////////////////////\n// Section 34: Native scripts\n/////////////////////////////\n\n/**\n * @internal\n */\nexport class NativeContext {\n    #firstValidSlot;\n    #lastValidSlot;\n    #keys;\n\n    /**\n     * \n     * @param {bigint | null} firstValidSlot \n     * @param {bigint | null} lastValidSlot \n     * @param {PubKeyHash[]} keys\n     */\n    constructor(firstValidSlot, lastValidSlot, keys) {\n        this.#firstValidSlot = firstValidSlot;\n        this.#lastValidSlot = lastValidSlot;\n        this.#keys = keys;\n    }\n\n    /**\n     * Used by NativeAfter\n     * @param {bigint} slot \n     * @returns {boolean}\n     */\n    isAfter(slot) {\n        if (this.#firstValidSlot !== null) {\n            return this.#firstValidSlot >= slot;\n        } else {\n            console.error(\"Warning: tx validity time range start not set but checked in native script\");\n            return false;\n        }\n    }\n\n    /**\n     * \n     * @param {bigint} slot \n     * @returns {boolean}\n     */\n    isBefore(slot) {\n        if (this.#lastValidSlot !== null) {\n            return this.#lastValidSlot < slot;\n        } else {\n            console.error(\"Warning: tx validity time range end not set but checked in native script\");\n            return false;\n        }\n    }\n\n    /**\n     * \n     * @param {PubKeyHash} key\n     * @returns {boolean}\n     */\n    isSignedBy(key) {\n        return this.#keys.some((k => k.eq(key)));\n    }\n}\n\n/**\n * Helios supports Cardano [native scripts](https://cips.cardano.org/cips/cip29/). \n * See `Tx.attachScript()` for how `NativeScript` can be used when building a transaction.\n * \n * NativeScript allows creating basic multi-signature and time-based validators.\n * This is a legacy technology, but can be cheaper than using Plutus.\n */\nexport class NativeScript extends CborData {\n    #type;\n\n    /**\n     * @param {number} type \n     */\n    constructor(type) {\n        super();\n        this.#type = type;\n    }\n\n    /**\n     * @returns {number[]}\n     */\n    typeToCbor() {\n        return Cbor.encodeInteger(BigInt(this.#type));\n    }\n\n    /**\n     * @param {string | number[]} raw \n     * @returns {NativeScript}\n     */\n    static fromCbor(raw) {\n        const bytes = (typeof raw == \"string\") ? hexToBytes(raw) : raw;\n\n        if (bytes[0] == 0) {\n            bytes.shift();\n        }\n\n        let type = -1;\n\n        /**\n         * @type {bigint}\n         */\n        let nOrSlot = -1n;\n\n        /**\n         * @type {NativeScript | null}\n         */\n        let script = null;\n\n        Cbor.decodeTuple(bytes, (i, fieldBytes) => {\n            if (i == 0) {\n                type = Number(Cbor.decodeInteger(fieldBytes))\n            } else {\n                switch(type) {\n                    case 0:\n                        assert(i == 1);\n\n                        script = new NativeSig(PubKeyHash.fromCbor(fieldBytes));\n                        \n                        break;\n                    case 1:\n                    case 2: {\n                            assert(i == 1);\n\n                            /**\n                             * @type {NativeScript[]}\n                             */\n                            const children = [];\n\n                            Cbor.decodeList(fieldBytes, (_, listBytes) => {\n                                children.push(NativeScript.fromCbor(listBytes))\n                            });\n\n                            switch (type) {\n                                case 1:\n                                    script = new NativeAll(children);\n                                    break;\n                                case 2:\n                                    script = new NativeAny(children);\n                                    break;\n                                default:\n                                    throw new Error(\"unexpected\");\n                            }\n                        }\n\n                        break;\n                    case 3:\n                        if (i == 1) {\n                            nOrSlot = Cbor.decodeInteger(fieldBytes);\n                        } else {\n                            assert(i == 2);\n\n                            /**\n                             * @type {NativeScript[]}\n                             */\n                            const children = [];\n\n                            Cbor.decodeList(fieldBytes, (_, listBytes) => {\n                                children.push(NativeScript.fromCbor(listBytes))\n                            });\n\n                            script = new NativeAtLeast(Number(nOrSlot), children);\n                        }\n\n                        break;\n                    case 4:\n                    case 5:\n                        assert(i == 1);\n\n                        nOrSlot = Cbor.decodeInteger(fieldBytes);\n\n                        switch(type) {\n                            case 4:\n                                script = new NativeAfter(nOrSlot);\n                                break;\n                            case 5:\n                                script = new NativeBefore(nOrSlot);\n                                break;\n                            default:\n                                throw new Error(\"unexpected\");\n                        }\n\n                        break;\n                    default:\n                        throw new Error(\"unexpected\");\n                }\n            }\n        });\n\n        if (!script) {\n            throw new Error(\"unable to deserialize native script\");\n        } else {\n            return script;\n        }\n    }\n\n    /**\n     * @param {string | Object} json \n     * @returns {NativeScript}\n     */\n    static fromJson(json) {\n        const obj = (typeof json == \"string\") ? JSON.parse(json) : json;\n\n        const type = obj.type;\n\n        if (!type) {\n            throw new Error(\"invalid Native script\");\n        }\n\n        switch (type) {\n            case \"sig\": {\n                const keyHash = obj.keyHash;\n\n                if (!keyHash) {\n                    throw new Error(\"invalid NativeKey script\");\n                }\n\n                return new NativeSig(PubKeyHash.fromHex(keyHash));\n            }\n            case \"all\": {\n                /**\n                 * @type {Object[]}\n                 */\n                const scripts = obj.scripts;\n\n                if (!scripts) {\n                    throw new Error(\"invalid NativeAll script\");\n                }\n\n                return new NativeAll(scripts.map(s => NativeScript.fromJson(s)));\n            }\n            case \"any\": {\n                /**\n                 * @type {Object[]}\n                 */\n                const scripts = obj.scripts;\n\n                if (!scripts) {\n                    throw new Error(\"invalid NativeAny script\");\n                }\n\n                return new NativeAny(scripts.map(s => NativeScript.fromJson(s)));\n            }\n            case \"atLeast\": {\n                const n = obj.required;\n\n                if (typeof n != \"number\") {\n                    throw new Error(\"invalid NativeAtLeast script\");\n                }\n\n                /**\n                 * @type {Object[]}\n                 */\n                const scripts = obj.scripts;\n\n                if (!scripts) {\n                    throw new Error(\"invalid NativeAtLeast script\");\n                }\n    \n\n                return new NativeAtLeast(n, scripts.map(s => NativeScript.fromJson(s)));\n            }\n            case \"after\": {\n                const slot = obj.slot;\n\n                if (typeof slot != \"number\") {\n                    throw new Error(\"invalid NativeAfter script\");\n                }\n\n                return new NativeAfter(BigInt(slot));\n            }\n            case \"before\": {\n                const slot = obj.slot;\n\n                if (typeof slot != \"number\") {\n                    throw new Error(\"invalid NativeAfter script\");\n                }\n\n                return new NativeBefore(BigInt(slot));\n            }\n            default:\n                throw new Error(`unrecognized NativeScript type '${type}'`);\n        }\n    }\n\n    /**\n     * @returns {Object}\n     */\n    toJson() {\n        throw new Error(\"not implemented\");\n    }\n\n    /**\n     * @internal\n     * @param {NativeContext} context \n     * @returns {boolean}\n     */\n    eval(context) {\n       throw new Error(\"not implemented\");\n    }\n\n    /**\n     * Calculates the blake2b-224 (28 bytes) hash of the NativeScript.\n     * \n     * **Note**: a 0 byte is prepended before to the serialized CBOR representation, before calculating the hash.\n     * @returns {number[]}\n     */\n    hash() {\n        let innerBytes = this.toCbor();\n\n\t\tinnerBytes.unshift(0);\n\n\t\t// used for both script addresses and minting policy hashes\n\t\treturn Crypto.blake2b(innerBytes, 28);\n    }\n\n    /**\n     * A `NativeScript` can be used both as a Validator and as a MintingPolicy\n     * @type {ValidatorHash}\n     */\n    get validatorHash() {\n        return new ValidatorHash(this.hash());\n    }\n\n    /**\n     * A `NativeScript` can be used both as a Validator and as a MintingPolicy\n     * @type {MintingPolicyHash}\n     */\n    get mintingPolicyHash() {\n        return new MintingPolicyHash(this.hash());\n    }\n}\n\nclass NativeSig extends NativeScript {\n    #pkh;\n\n    /**\n     * @param {PubKeyHash} pkh \n     */\n    constructor(pkh) {\n        super(0);\n        this.#pkh = pkh;\n    }\n\n    /**\n     * @returns {number[]}\n     */\n    toCbor() {\n        return Cbor.encodeTuple([\n            this.typeToCbor(),\n            this.#pkh.toCbor()\n        ]);\n    }\n\n    /**\n     * @returns {Object}\n     */\n    toJson() {\n        return {\n            type: \"sig\",\n            keyHash: this.#pkh.hex\n        }\n    }\n\n    /**\n     * @internal\n     * @param {NativeContext} context \n     * @returns {boolean}\n     */\n    eval(context) {\n        return context.isSignedBy(this.#pkh);\n    }\n}\n\nclass NativeAll extends NativeScript {\n    #scripts;\n\n    /**\n     * @param {NativeScript[]} scripts \n     */\n    constructor(scripts) {\n        super(1);\n        assert(scripts.length > 0);\n        this.#scripts = scripts;\n    }\n\n    /**\n     * @returns {number[]}\n     */\n    toCbor() {\n        return Cbor.encodeTuple([\n            this.typeToCbor(),\n            Cbor.encodeDefList(this.#scripts)\n        ]);\n    }\n\n    /**\n     * @returns {Object}\n     */\n    toJson() {\n        return {\n            type: \"all\",\n            scripts: this.#scripts.map(s => s.toJson())\n        }\n    }\n\n    /**\n     * @internal\n     * @param {NativeContext} context \n     * @returns {boolean}\n     */\n    eval(context) {\n        return this.#scripts.every(s => s.eval(context));\n    }\n}\n\nclass NativeAny extends NativeScript {\n    #scripts;\n\n    /**\n     * @param {NativeScript[]} scripts\n     */\n    constructor(scripts) {\n        super(2);\n        assert(scripts.length > 0);\n        this.#scripts = scripts;\n    }\n\n    /**\n     * @returns {number[]}\n     */\n    toCbor() {\n        return Cbor.encodeTuple([\n            this.typeToCbor(),\n            Cbor.encodeDefList(this.#scripts)\n        ]);\n    }\n\n    /**\n     * @returns {Object}\n     */\n    toJson() {\n        return {\n            type: \"any\",\n            scripts: this.#scripts.map(s => s.toJson())\n        }\n    }\n\n    /**\n     * @internal\n     * @param {NativeContext} context\n     * @returns {boolean}\n     */\n    eval(context) {\n        return this.#scripts.some(s => s.eval(context));\n    }\n}\n\nclass NativeAtLeast extends NativeScript {\n    #required;\n    #scripts;\n\n    /**\n     * @param {number} required\n     * @param {NativeScript[]} scripts\n     */\n    constructor(required, scripts) {\n        super(3);\n        assert(scripts.length >= required);\n        this.#required = required;\n        this.#scripts = scripts;\n    }\n\n    /**\n     * @returns {number[]}\n     */\n    toCbor() {\n        return Cbor.encodeTuple([\n            this.typeToCbor(),\n            Cbor.encodeInteger(BigInt(this.#required)),\n            Cbor.encodeDefList(this.#scripts)\n        ]);\n    }\n\n    /**\n     * @returns {Object}\n     */\n    toJson() {\n        return {\n            type: \"atLeast\",\n            required: this.#required,\n            scripts: this.#scripts.map(s => s.toJson())\n        };\n    }\n\n    /**\n     * @internal\n     * @param {NativeContext} context\n     * @returns {boolean}\n     */\n    eval(context) {\n        const count = this.#scripts.reduce((prev, s) => prev + (s.eval(context) ? 1 : 0), 0);\n\n        return count >= this.#required;\n    }\n}\n\nclass NativeAfter extends NativeScript {\n    #slot;\n\n    /**\n     * @param {bigint} slot\n     */\n    constructor(slot) {\n        super(4);\n        this.#slot = slot;\n    }\n\n    /**\n     * @returns {number[]}\n     */\n    toCbor() {\n        return Cbor.encodeTuple([\n            this.typeToCbor(),\n            Cbor.encodeInteger(this.#slot)\n        ])\n    }\n\n    /**\n     * @returns {Object}\n     */\n    toJson() {\n        const slot = Number(this.#slot);\n\n        if (BigInt(slot) != this.#slot) {\n            console.error(\"Warning: slot overflow (not representable by Number in Native script Json)\");\n        }\n\n        return {\n            type: \"after\",\n            slot: slot\n        };\n    }\n\n    /**\n     * @internal\n     * @param {NativeContext} context\n     * @returns {boolean}\n     */\n    eval(context) {\n        return context.isAfter(this.#slot);\n    }\n}\n\nclass NativeBefore extends NativeScript {\n    #slot;\n\n    /**\n     * @param {bigint} slot\n     */\n    constructor(slot) {\n        super(5);\n        this.#slot = slot;\n    }\n\n    /**\n     * @returns {number[]}\n     */\n    toCbor() {\n        return Cbor.encodeTuple([\n            this.typeToCbor(),\n            Cbor.encodeInteger(this.#slot)\n        ])\n    }\n\n    /**\n     * @returns {Object}\n     */\n    toJson() {\n        const slot = Number(this.#slot);\n\n        if (BigInt(slot) != this.#slot) {\n            console.error(\"Warning: slot overflow (not representable by Number in Native script Json)\");\n        }\n\n        return {\n            type: \"before\",\n            slot: slot\n        };\n    }\n\n    /**\n     * @internal\n     * @param {NativeContext} context\n     * @returns {boolean}\n     */\n    eval(context) {\n        return context.isBefore(this.#slot);\n    }\n}\n\n\n///////////////////////\n// Section 35: Tx types\n///////////////////////\n\n/**\n * Represents a Cardano transaction. Can also be used as a transaction builder.\n */\nexport class Tx extends CborData {\n\t/**\n\t * @type {TxBody}\n\t */\n\t#body;\n\n\t/**\n\t * @type {TxWitnesses}\n\t */\n\t#witnesses;\n\n\t/**\n\t * @type {boolean}\n\t */\n\t#valid;\n\n\t/** \n\t * @type {null | TxMetadata} \n\t */\n\t#metadata;\n\n\t// the following field(s) aren't used by the serialization (only for building)\n\t/**\n\t * Upon finalization the slot is calculated and stored in the body\n\t * @type {null | bigint | Date} \n\t */\n\t#validTo;\n\n\t/**\n\t * Upon finalization the slot is calculated and stored in the body \n\t *  @type {null | bigint | Date} \n\t */\n\t#validFrom;\n\n\t/**\n\t * Use `Tx.new()` instead of this constructor for creating a new Tx builder.\n\t * @param {TxBody} body\n\t * @param {TxWitnesses} witnesses\n\t * @param {boolean} valid\n\t * @param {null | TxMetadata} metadata\n\t * @param {null | bigint | Date} validTo\n\t * @param {null | bigint | Date} validFrom\n\t */\n\tconstructor(\n\t\tbody = new TxBody(), \n\t\twitnesses = new TxWitnesses(), \n\t\tvalid = false, \n\t\tmetadata = null, \n\t\tvalidTo = null,\n\t\tvalidFrom = null\n\t) {\n\t\tsuper();\n\t\tthis.#body = body;\n\t\tthis.#witnesses = witnesses;\n\t\tthis.#valid = valid; // building is only possible if valid==false\n\t\tthis.#metadata = metadata;\n\t\tthis.#validTo = validTo;\n\t\tthis.#validFrom = validFrom;\n\t}\n\n\t/**\n\t * Create a new Tx builder.\n\t * @returns {Tx}\n\t */\n\tstatic new() {\n\t\treturn new Tx();\n\t}\n\n\t/**\n\t * @type {TxBody}\n\t */\n\tget body() {\n\t\treturn this.#body;\n\t}\n\n\t/**\n\t * @type {number[]}\n\t */\n\tget bodyHash() {\n\t\treturn this.#body.hash();\n\t}\n\n\t/**\n\t * @type {TxWitnesses}\n\t */\n\tget witnesses() {\n\t\treturn this.#witnesses;\n\t}\n\n\t/**\n\t * Used by emulator to check if tx is valid.\n\t * @param {bigint} slot\n\t * @returns {boolean}\n\t */\n\tisValid(slot) {\n\t\tif (!this.#valid) {\n\t\t\treturn false;\n\t\t} else {\n\t\t\treturn this.#body.isValid(slot);\n\t\t}\n\t}\n\n\t/** \n\t * Serialize a transaction.\n\t * @returns {number[]}\n\t */\n\ttoCbor() {\n\t\treturn Cbor.encodeTuple([\n\t\t\tthis.#body.toCbor(),\n\t\t\tthis.#witnesses.toCbor(),\n\t\t\tCbor.encodeBool(this.#valid),\n\t\t\tthis.#metadata === null ? Cbor.encodeNull() : this.#metadata.toCbor(),\n\t\t]);\n\t}\n\n\t/**\n\t * Creates a new Tx without the metadata for client-side signing where the client can't know the metadata before tx-submission.\n\t * @returns {Tx}\n\t */\n\twithoutMetadata() {\n\t\treturn new Tx(\n\t\t\tthis.#body,\n\t\t\tthis.#witnesses,\n\t\t\tthis.#valid,\n\t\t\tnull, // TODO: try null first, other wise try an empty TxMetadata instance\n\t\t\tthis.#validTo,\n\t\t\tthis.#validFrom\n\t\t)\n\t}\n\n\t/**\n\t * Deserialize a CBOR encoded Cardano transaction (input is either an array of bytes, or a hex string).\n\t * @param {number[] | string} raw\n\t * @returns {Tx}\n\t */\n\tstatic fromCbor(raw) {\n\t\tlet bytes = (typeof raw == \"string\") ? hexToBytes(raw) : raw;\n\n\t\tbytes = bytes.slice();\n\n\t\tlet tx = new Tx();\n\n\t\tlet n = Cbor.decodeTuple(bytes, (i, fieldBytes) => {\n\t\t\tswitch(i) {\n\t\t\t\tcase 0:\n\t\t\t\t\ttx.#body = TxBody.fromCbor(fieldBytes);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 1:\n\t\t\t\t\ttx.#witnesses = TxWitnesses.fromCbor(fieldBytes);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 2:\n\t\t\t\t\ttx.#valid = Cbor.decodeBool(fieldBytes);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 3:\n\t\t\t\t\tif (Cbor.isNull(fieldBytes)) {\n\t\t\t\t\t\tCbor.decodeNull(fieldBytes);\n\n\t\t\t\t\t\ttx.#metadata = null;\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttx.#metadata = TxMetadata.fromCbor(fieldBytes);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new Error(\"bad tuple size\");\n\t\t\t}\n\t\t});\n\n\t\tassert(n == 4);\n\t\tassert(bytes.length == 0);\n\n\t\treturn tx;\n\t}\n\n\t/**\n\t * Used by bundler for macro finalization\n\t * @param {UplcData} data\n\t * @param {NetworkParams} networkParams\n\t * @param {Address} changeAddress\n\t * @param {TxInput[]} spareUtxos\n\t * @param {{[name: string]: (UplcProgram | (() => UplcProgram))}} scripts UplcPrograms can be lazy\n\t * @returns {Promise<Tx>}\n\t */\n\tstatic async finalizeUplcData(data, networkParams, changeAddress, spareUtxos, scripts) {\n\t\tconst fields = data.fields;\n\n\t\tassert(fields.length == 12);\n\n\t\tconst inputs = fields[0].list.map(d => TxInput.fromUplcData(d));\n\t\tconst refInputs = fields[1].list.map(d => TxInput.fromUplcData(d));\n\t\tconst outputs = fields[2].list.map(d => TxOutput.fromUplcData(d));\n\t\t//txBody.#fee = Value.fromUplcData(fields[3]).lovelace.value;\n\t\tconst minted = Value.fromUplcData(fields[4]).assets;\n\t\t//txBody.#dcerts = fields[5].list.map(d => DCert.fromUplcData(d));\n\t\t//txBody.#withdrawals = new Map(fields[6].map.map(([key, value]) => {\n\t\t//\treturn [Address.fromUplcData(key), value.int];\n\t\t//}));\n\t\t// validity\n\t\tconst signers = fields[8].list.map(d => PubKeyHash.fromUplcData(d));\n\t\tconst redeemers = fields[9].map.map(([key, value]) => {\n\t\t\tif (key.index == 1) {\n\t\t\t\tassert(key.fields.length == 1);\n\t\t\t\tconst outputId = TxOutputId.fromUplcData(key.fields[0]);\n\t\t\t\tconst i = inputs.findIndex(input => input.txId.eq(outputId.txId) && input.utxoIdx == outputId.utxoIdx);\n\t\t\t\tassert(i != -1);\n\t\t\t\treturn new SpendingRedeemer(inputs[i], i, value);\n\t\t\t} else if (key.index == 0) {\n\t\t\t\tassert(key.fields.length == 1);\n\t\t\t\tconst mph = MintingPolicyHash.fromUplcData(key.fields[0]);\n\t\t\t\tconst i = minted.mintingPolicies.findIndex(m => m.eq(mph));\n\t\t\t\tassert(i != -1);\n\t\t\t\treturn new MintingRedeemer(mph, i, value);\n\t\t\t} else {\n\t\t\t\tthrow new Error(\"unhandled redeemer constr index\");\n\t\t\t}\n\t\t});\n\n\t\t// build the tx from scratch\n\t\tconst tx = new Tx();\n\n\t\t// TODO: automatically added any available scripts\n\t\tinputs.forEach((input, i) => {\n\t\t\tconst redeemer = redeemers.find(r => (r instanceof SpendingRedeemer) && r.inputIndex == i) ?? null;\n\n\t\t\tif (redeemer instanceof SpendingRedeemer) {\n\t\t\t\ttx.addInput(input, redeemer.data);\n\n\t\t\t\tif (input.address.validatorHash) {\n\t\t\t\t\tif  (input.address.validatorHash.hex in scripts) {\n\t\t\t\t\t\tconst uplcProgram = scripts[input.address.validatorHash.hex];\n\n\t\t\t\t\t\tif (uplcProgram instanceof UplcProgram) {\n\t\t\t\t\t\t\ttx.attachScript(uplcProgram);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\ttx.attachScript(uplcProgram());\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthrow new Error(`script for SpendingRedeemer (vh:${input.address.validatorHash.hex}) not found in [${Object.keys(scripts).join(\", \")}]`);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tthrow new Error(\"unexpected (expected a validator address\");\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tassert(redeemer === null);\n\t\t\t\ttx.addInput(input);\n\t\t\t}\n\t\t});\n\n\t\trefInputs.forEach(refInput => {\n\t\t\ttx.addRefInput(refInput);\n\t\t});\n\n\t\t// filter out spareUtxos that are already used as inputs\n\t\tspareUtxos = spareUtxos.filter(utxo => {\n\t\t\treturn inputs.every(input => !input.eq(utxo)) && \n\t\t\t\trefInputs.every(input => !input.eq(utxo));\n\t\t});\n\n\t\toutputs.forEach(output => {\n\t\t\ttx.addOutput(output);\n\t\t});\n\n\t\tminted.mintingPolicies.forEach((mph, i) => {\n\t\t\tconst redeemer = redeemers.find(r => (r instanceof MintingRedeemer) && r.mphIndex == i) ?? null;\n\n\t\t\tif (redeemer instanceof MintingRedeemer) {\n\t\t\t\ttx.mintTokens(mph, minted.getTokens(mph), redeemer.data);\n\n\t\t\t\tif (mph.hex in scripts) {\n\t\t\t\t\tconst uplcProgram = scripts[mph.hex];\n\n\t\t\t\t\tif (uplcProgram instanceof UplcProgram) {\n\t\t\t\t\t\ttx.attachScript(uplcProgram);\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttx.attachScript(uplcProgram());\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tthrow new Error(`policy for mph ${mph.hex} not found in ${Object.keys(scripts)}`);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthrow new Error(\"missing MintingRedeemer\");\n\t\t\t}\n\t\t});\n\n\t\tsigners.forEach(pk => {\n\t\t\ttx.addSigner(pk);\n\t\t});\n\n\t\treturn await tx.finalize(networkParams, changeAddress, spareUtxos);\n\t}\n\n\t/**\n\t * @param {NetworkParams} networkParams\n\t * @returns {UplcData}\n\t */\n\ttoTxData(networkParams) {\n\t\treturn this.#body.toTxData(networkParams, this.witnesses.redeemers, this.witnesses.datums, this.id());\n\t}\n\n\t/**\n\t * A serialized tx throws away input information\n\t * This must be refetched from the network if the tx needs to be analyzed\n\t * @param {(id: TxOutputId) => Promise<TxOutput>} fn\n\t */\n\tasync completeInputData(fn) {\n\t\tawait this.#body.completeInputData(fn, this.#witnesses);\n\t}\n\n\t/**\n\t * @param {null | NetworkParams} params If specified: dump all the runtime details of each redeemer (datum, redeemer, scriptContext)\n\t * @returns {Object}\n\t */\n\tdump(params = null) {\n\t\treturn {\n\t\t\tbody: this.#body.dump(),\n\t\t\twitnesses: this.#witnesses.dump(params, this.#body),\n\t\t\tmetadata: this.#metadata !== null ? this.#metadata.dump() : null,\n\t\t\tvalid: this.#valid,\n\t\t\tid: this.#valid ? this.id().toString() : \"invalid\"\n\t\t};\n\t}\n\n\t/**\n\t * Set the start of the valid time range by specifying either a Date or a slot.\n\t * \n\t * Mutates the transaction.\n\t * Only available during building the transaction. \n\t * Returns the transaction instance so build methods can be chained.\n\t * \n\t * > **Note**: since Helios v0.13.29 this is set automatically if any of the Helios validator scripts call `tx.time_range`.\n\t * @param {bigint | Date } slotOrTime\n\t * @returns {Tx}\n\t */\n\tvalidFrom(slotOrTime) {\n\t\tassert(!this.#valid);\n\n\t\tthis.#validFrom = slotOrTime;\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * Set the end of the valid time range by specifying either a Date or a slot. \n\t * \n\t * Mutates the transaction.\n\t * Only available during transaction building. \n\t * Returns the transaction instance so build methods can be chained.\n\t * \n\t * > **Note**: since Helios v0.13.29 this is set automatically if any of the Helios validator scripts call `tx.time_range`.\n\t * @param {bigint | Date } slotOrTime\n\t * @returns {Tx}\n\t */\n\tvalidTo(slotOrTime) {\n\t\tassert(!this.#valid);\n\n\t\tthis.#validTo = slotOrTime;\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * Mint a list of tokens associated with a given `MintingPolicyHash`.\n\t * Throws an error if the given `MintingPolicyHash` was already used in a previous call to `mintTokens()`.\n\t * The token names can either by a list of bytes or a hexadecimal string.\n\t * \n\t * Mutates the transaction. \n\t * Only available during transaction building the transaction.\n\t * Returns the transaction instance so build methods can be chained.\n\t * \n\t * Also throws an error if the redeemer is `null`, and the minting policy isn't a known `NativeScript`.\n\t * @param {MintingPolicyHash | MintingPolicyHashProps} mph \n\t * @param {[ByteArray | ByteArrayProps, HInt | HIntProps][]} tokens - list of pairs of [tokenName, quantity], tokenName can be list of bytes or hex-string\n\t * @param {UplcDataValue | UplcData | null} redeemer\n\t * @returns {Tx}\n\t */\n\tmintTokens(mph, tokens, redeemer) {\n\t\tconst mph_ = MintingPolicyHash.fromProps(mph);\n\n\t\tassert(!this.#valid);\n\n\t\tthis.#body.addMint(mph_, tokens);\n\n\t\tif (!redeemer) {\n\t\t\tif (!this.#witnesses.isNativeScript(mph_)) {\n\t\t\t\tthrow new Error(\"no redeemer specified for minted tokens (hint: if this policy is a NativeScript, attach that script before calling tx.mintTokens())\");\n\t\t\t}\n\t\t} else {\n\t\t\tthis.#witnesses.addMintingRedeemer(mph_, UplcDataValue.unwrap(redeemer));\n\t\t}\n\t\t\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * Add a UTxO instance as an input to the transaction being built.\n\t * Throws an error if the UTxO is locked at a script address but a redeemer isn't specified (unless the script is a known `NativeScript`).\n\t * \n\t * Mutates the transaction. \n\t * Only available during transaction building.\n\t * Returns the transaction instance so build methods can be chained.\n\t * @param {TxInput} input\n\t * @param {null | UplcDataValue | UplcData | HeliosData} rawRedeemer\n\t * @returns {Tx}\n\t */\n\taddInput(input, rawRedeemer = null) {\n\t\tassert(!this.#valid);\n\n\t\tif (input.origOutput === null) {\n\t\t\tthrow new Error(\"TxInput.origOutput must be set when building transaction\");\n\t\t} else {\n\t\t\tvoid this.#body.addInput(input);\n\n\t\t\tif (rawRedeemer !== null) {\n\t\t\t\tassert(input.origOutput.address.validatorHash !== null, \"input isn't locked by a script\");\n\n\t\t\t\tconst redeemer = rawRedeemer instanceof HeliosData ? rawRedeemer._toUplcData() : UplcDataValue.unwrap(rawRedeemer);\n\n\t\t\t\tthis.#witnesses.addSpendingRedeemer(input, redeemer);\n\n\t\t\t\tif (input.origOutput.datum === null) {\n\t\t\t\t\tthrow new Error(\"expected non-null datum\");\n\t\t\t\t} else {\n\t\t\t\t\tlet datum = input.origOutput.datum;\n\n\t\t\t\t\tif (datum instanceof HashedDatum) {\n\t\t\t\t\t\tlet datumData = datum.data;\n\t\t\t\t\t\tif (datumData === null) {\n\t\t\t\t\t\t\tthrow new Error(\"expected non-null datum data\");\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthis.#witnesses.addDatumData(datumData);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (input.origOutput.address.pubKeyHash === null) {\n\t\t\t\t\tif (!this.#witnesses.isNativeScript(assertDefined(input.origOutput.address.validatorHash))) {\n\t\t\t\t\t\tthrow new Error(\"input is locked by a script, but redeemer isn't specified (hint: if this is a NativeScript, attach that script before calling tx.addInput())\");\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * Add multiple UTxO instances as inputs to the transaction being built. \n\t * Throws an error if the UTxOs are locked at a script address but a redeemer isn't specified (unless the script is a known `NativeScript`).\n\t * \n\t * Mutates the transaction.\n\t * Only available during transaction building. Returns the transaction instance so build methods can be chained.\n\t * @param {TxInput[]} inputs\n\t * @param {?(UplcDataValue | UplcData | HeliosData)} redeemer\n\t * @returns {Tx}\n\t */\n\taddInputs(inputs, redeemer = null) {\n\t\tfor (let input of inputs) {\n\t\t\tthis.addInput(input, redeemer);\n\t\t}\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * Add a `TxInput` instance as a reference input to the transaction being built.\n\t * Any associated reference script, as a `UplcProgram` instance, must also be included in the transaction at this point (so the that the execution budget can be calculated correctly).\n\t * \n\t * Mutates the transaction.\n\t * Only available during transaction building.\n\t * Returns the transaction instance so build methods can be chained.\n\t * @param {TxInput} input\n\t * @param {null | UplcProgram} refScript\n\t * @returns {Tx}\n\t */\n\taddRefInput(input, refScript = null) {\n\t\tassert(!this.#valid);\n\n\t\tthis.#body.addRefInput(input);\n\n\t\tif (refScript !== null) {\n\t\t\tthis.#witnesses.attachPlutusScript(refScript, true);\n\t\t}\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * Add multiple `TxInput` instances as reference inputs to the transaction being built.\n\t * \n\t * Mutates the transaction.\n\t * Only available during transaction building.\n\t * Returns the transaction instance so build methods can be chained.\n\t * @param {TxInput[]} inputs\n\t * @returns {Tx}\n\t */\n\taddRefInputs(inputs) {\n\t\tfor (let input of inputs) {\n\t\t\tconst refScript = input.origOutput.refScript;\n\t\t\tthis.addRefInput(input, refScript);\n\t\t}\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * Add a `TxOutput` instance to the transaction being built.\n\t * \n\t * Mutates the transaction.\n\t * Only available during transaction building.\n\t * Returns the transaction instance so build methods can be chained.\n\t * @param {TxOutput} output \n\t * @returns {Tx}\n\t */\n\taddOutput(output) {\n\t\tassert(!this.#valid);\n\t\t\n\t\t// min lovelace isn't checked here but during finalize()\n\t\tthis.#body.addOutput(output);\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * Add multiple `TxOutput` instances at once.\n\t * \n\t * Mutates the transaction.\n\t * Only available during transaction building.\n\t * Returns the transaction instance so build methods can be chained.\n\t * @param {TxOutput[]} outputs \n\t * @returns {Tx}\n\t */\n\taddOutputs(outputs) {\n\t\tfor (let output of outputs) {\n\t\t\tthis.addOutput(output);\n\t\t}\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * Add a signatory `PubKeyHash` to the transaction being built.\n\t * The added entry becomes available in the `tx.signatories` field in the Helios script.\n\t * \n\t * Mutates the transaction.\n\t * Only available during transaction building.\n\t * Returns the transaction instance so build methods can be chained.\n\t * @param {PubKeyHash} hash\n\t * @returns {Tx}\n\t */\n\taddSigner(hash) {\n\t\tassert(!this.#valid);\n\n\t\tthis.#body.addSigner(hash);\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * Add a `DCert` to the transactions being built. `DCert` contains information about a staking-related action.\n\t * \n\t * TODO: implement all DCert (de)serialization methods.\n\t * \n\t * Returns the transaction instance so build methods can be chained.\n\t * @param {DCert} dcert\n\t * @returns {Tx}\n\t */\n\taddDCert(dcert) {\n\t\tthis.#body.addDCert(dcert);\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * Attaches a script witness to the transaction being built.\n\t * The script witness can be either a `UplcProgram` or a legacy `NativeScript`.\n\t * A `UplcProgram` instance can be created by compiling a Helios `Program`.\n\t * A legacy `NativeScript` instance can be created by deserializing its original CBOR representation.\n\t * \n\t * Throws an error if script has already been added.\n\t * Throws an error if the script isn't used upon finalization.\n\t * \n\t * Mutates the transaction. \n\t * Only available during transaction building.\n\t * Returns the transaction instance so build methods can be chained.\n\t * \n\t * > **Note**: a `NativeScript` must be attached before associated inputs are added or tokens are minted.\n\t * @param {UplcProgram | NativeScript} program\n\t * @returns {Tx}\n\t */\n\tattachScript(program) {\n\t\tassert(!this.#valid);\n\n\t\tif (program instanceof NativeScript) { \n\t\t\tthis.#witnesses.attachNativeScript(program);\n\t\t} else {\n\t\t\tthis.#witnesses.attachPlutusScript(program);\n\t\t}\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * Add a UTxO instance as collateral to the transaction being built.\n\t * Usually adding only one collateral input is enough.\n\t * The number of collateral inputs must be greater than 0 if script witnesses are used in the transaction,\n\t * and must be less than the limit defined in the `NetworkParams`.\n\t * \n\t * Mutates the transaction. \n\t * Only available during transaction building. \n\t * Returns the transaction instance so build methods can be chained.\n\t * @param {TxInput} input \n\t * @returns {Tx}\n\t */\n\taddCollateral(input) {\n\t\tassert(!this.#valid);\n\n\t\tthis.#body.addCollateral(input);\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * Calculates tx fee (including script execution)\n\t * Shouldn't be used directly\n\t * @internal\n\t * @param {NetworkParams} networkParams\n\t * @returns {bigint}\n\t */\n\testimateFee(networkParams) {\n\t\tlet [a, b] = networkParams.txFeeParams;\n\n\t\tif (!this.#valid) {\n\t\t\t// add dummy signatures\n\t\t\tlet nUniquePubKeyHashes = this.#body.countUniqueSigners();\n\t\t\t\n\t\t\tthis.#witnesses.addDummySignatures(nUniquePubKeyHashes);\n\t\t}\n\n\t\tlet size = this.toCbor().length;\n\n\t\tif (!this.#valid) {\n\t\t\t// clean up the dummy signatures\n\t\t\tthis.#witnesses.removeDummySignatures();\n\t\t}\n\n\t\tlet sizeFee = BigInt(a) + BigInt(size)*BigInt(b);\n\n\t\tlet exFee = this.#witnesses.estimateFee(networkParams);\n\n\t\treturn sizeFee + exFee;\n\t}\n\n\t/**\n\t * Iterates until fee is exact\n\t * Shouldn't be used directly\n\t * @internal\n\t * @param {NetworkParams} networkParams\n\t * @param {bigint} fee\n\t * @returns {bigint}\n\t */\n\tsetFee(networkParams, fee) {\n\t\tlet oldFee = this.#body.fee;\n\n\t\twhile (oldFee != fee) {\n\t\t\tthis.#body.setFee(fee);\n\n\t\t\toldFee = fee;\n\n\t\t\tfee = this.estimateFee(networkParams);\n\t\t}\n\n\t\treturn fee;\n\t}\n\n\t/**\n\t * Checks that all necessary scripts are included, and that all included scripts are used\n\t * Shouldn't be used directly\n\t * @internal\n\t */\n\tcheckScripts() {\n\t\tlet scripts = this.#witnesses.scripts;\n\n\t\t/**\n\t\t * @type {Set<string>}\n\t\t */\n\t\tconst currentScripts = new Set();\n\n\t\tscripts.forEach(script => {\n\t\t\tcurrentScripts.add(bytesToHex(script.hash()))\n\t\t});\n\n\t\t/** \n\t\t * @type {Map<string, number>} \n\t\t */\n\t\tlet wantedScripts = new Map();\n\n\t\tthis.#body.collectScriptHashes(wantedScripts);\n\n\t\tif (wantedScripts.size < scripts.length) {\n\t\t\tthrow new Error(\"too many scripts included, not all are needed\");\n\t\t} else if (wantedScripts.size > scripts.length) {\n\t\t\twantedScripts.forEach((value, key) => {\n\t\t\t\tif (!currentScripts.has(key)) {\n\t\t\t\t\tif (value >= 0) {\n\t\t\t\t\t\tconsole.error(JSON.stringify(this.dump(), null, \"  \"));\n\t\t\t\t\t\tthrow new Error(`missing script for input ${value}`);\n\t\t\t\t\t} else if (value < 0) {\n\t\t\t\t\t\tconsole.error(JSON.stringify(this.dump(), null, \"  \"));\n\t\t\t\t\t\tthrow new Error(`missing script for minting policy ${-value-1}`);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tcurrentScripts.forEach((key) => {\n\t\t\tif (!wantedScripts.has(key)) {\n\t\t\t\tconsole.log(wantedScripts, currentScripts)\n\t\t\t\tthrow new Error(\"detected unused script\");\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * @internal\n\t * @param {NetworkParams} networkParams \n\t * @param {Address} changeAddress\n\t * @returns {Promise<void>}\n\t */\n\tasync executeRedeemers(networkParams, changeAddress) {\n\t\tawait this.#witnesses.executeScripts(networkParams, this.#body, changeAddress);\n\t}\n\n\t/**\n\t * @internal\n\t * @param {NetworkParams} networkParams \n\t * @returns {Promise<void>}\n\t */\n\tasync checkExecutionBudgets(networkParams) {\n\t\tawait this.#witnesses.checkExecutionBudgets(networkParams, this.#body);\n\t}\n\n\t/**\n\t * @internal\n\t * @param {Address} changeAddress \n\t */\n\tbalanceAssets(changeAddress) {\n\t\tconst inputAssets = this.#body.sumInputAndMintedAssets();\n\n\t\tconst outputAssets = this.#body.sumOutputAssets();\n\n\t\tif (inputAssets.eq(outputAssets)) {\n\t\t\treturn;\n\t\t} else if (outputAssets.ge(inputAssets)) {\n\t\t\tthrow new Error(\"not enough input assets\");\n\t\t} else {\n\t\t\tconst diff = inputAssets.sub(outputAssets);\n\n\t\t\tif (config.MAX_ASSETS_PER_CHANGE_OUTPUT) {\n\t\t\t\tconst maxAssetsPerOutput = config.MAX_ASSETS_PER_CHANGE_OUTPUT;\n\n\t\t\t\tlet changeAssets = new Assets();\n\t\t\t\tlet tokensAdded = 0;\n\n\t\t\t\tdiff.mintingPolicies.forEach((mph) => {\n\t\t\t\t\tconst tokens = diff.getTokens(mph);\n\t\t\t\t\ttokens.forEach(([token, quantity], i) => {\n\t\t\t\t\t\tchangeAssets.addComponent(mph, token, quantity);\n\t\t\t\t\t\ttokensAdded += 1;\n\t\t\t\t\t\tif (tokensAdded == maxAssetsPerOutput) {\n\t\t\t\t\t\t\tthis.#body.addOutput(new TxOutput(changeAddress, new Value(0n, changeAssets)));\n\t\t\t\t\t\t\tchangeAssets = new Assets();\n\t\t\t\t\t\t\ttokensAdded = 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t});\n\n\t\t\t\t// If we are here and have No assets, they we're done\n\t\t\t\tif (!changeAssets.isZero()) {\n\t\t\t\t\tthis.#body.addOutput(new TxOutput(changeAddress, new Value(0n, changeAssets)));\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tconst changeOutput = new TxOutput(changeAddress, new Value(0n, diff));\n\t\n\t\t\t\tthis.#body.addOutput(changeOutput);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Calculate the base fee which will be multiplied by the required min collateral percentage \n\t * @internal\n\t * @param {NetworkParams} networkParams \n\t * @param {Address} changeAddress \n\t * @param {TxInput[]} spareUtxos \n\t */\n\testimateCollateralBaseFee(networkParams, changeAddress, spareUtxos) {\n\t\tassert(config.N_DUMMY_INPUTS == 1 || config.N_DUMMY_INPUTS == 2, \"expected N_DUMMY_INPUTs == 1 or N_DUMMY_INPUTS == 2\");\n\n\t\t// create the collateral return output (might not actually be added if there isn't enough lovelace)\n\t\tconst dummyOutput = new TxOutput(changeAddress, new Value(0n));\n\t\tdummyOutput.correctLovelace(networkParams);\n\n\t\t// some dummy UTxOs on to be able to correctly calculate the collateral (assuming it uses full body fee)\n\t\tconst dummyCollateral = spareUtxos.map(spare => spare).concat(this.#body.inputs).slice(0, 3);\n\t\tdummyCollateral.forEach(input => {\n\t\t\tthis.#body.collateral.push(input);\n\t\t});\n\n\t\tconst dummyInputs = dummyCollateral.slice(0, config.N_DUMMY_INPUTS);\n\n\t\tthis.#body.setCollateralReturn(dummyOutput);\n\t\tdummyInputs.forEach(dummyInput => this.#body.addInput(dummyInput, false));\n\t\tthis.#body.addOutput(dummyOutput);\n\n\t\tconst baseFee = this.estimateFee(networkParams);\n\n\t\t// remove the dummy inputs and outputs\n\t\twhile(this.#body.collateral.length) {\n\t\t\tthis.#body.collateral.pop();\n\t\t}\n\t\tthis.#body.setCollateralReturn(null);\n\t\tdummyInputs.forEach(dummyInput => this.#body.removeInput(dummyInput));\n\t\tthis.#body.removeOutput(dummyOutput);\n\n\t\treturn baseFee;\n\t}\n\t\n\t/**\n\t * @internal\n\t * @param {NetworkParams} networkParams\n\t * @param {Address} changeAddress\n\t * @param {TxInput[]} spareUtxos\n\t */\n\tbalanceCollateral(networkParams, changeAddress, spareUtxos) {\n\t\t// don't do this step if collateral was already added explicitly\n\t\tif (this.#body.collateral.length > 0 || !this.isSmart()) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst baseFee = this.estimateCollateralBaseFee(networkParams, changeAddress, spareUtxos);\n\n\t\tconst minCollateral = ((baseFee*BigInt(networkParams.minCollateralPct)) + 100n)/100n; // integer division that rounds up\n\n\t\tlet collateral = 0n;\n\t\t/**\n\t\t * @type {TxInput[]}\n\t\t */\n\t\tconst collateralInputs = [];\n\n\t\t/**\n\t\t * @param {TxInput[]} inputs \n\t\t */\n\t\tfunction addCollateralInputs(inputs) {\n\t\t\t// first try using the UTxOs that already form the inputs, but are locked at script\n\t\t\tconst cleanInputs = inputs.filter(utxo => (!utxo.address.validatorHash) && utxo.value.assets.isZero()).sort((a, b) => Number(a.value.lovelace - b.value.lovelace));\n\n\t\t\tfor (let input of cleanInputs) {\n\t\t\t\tif (collateral > minCollateral) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\twhile (collateralInputs.length >= networkParams.maxCollateralInputs) {\n\t\t\t\t\tcollateralInputs.shift();\n\t\t\t\t}\n\t\n\t\t\t\tcollateralInputs.push(input);\n\t\t\t\tcollateral += input.value.lovelace;\n\t\t\t}\n\t\t}\n\t\t\n\t\taddCollateralInputs(this.#body.inputs.slice());\n\n\t\taddCollateralInputs(spareUtxos.map(utxo => utxo));\n\n\t\t// create the collateral return output if there is enough lovelace\n\t\tconst changeOutput = new TxOutput(changeAddress, new Value(0n));\n\t\tchangeOutput.correctLovelace(networkParams);\n\n\t\tif (collateral < minCollateral) {\n\t\t\tthrow new Error(\"unable to find enough collateral input\");\n\t\t} else {\n\t\t\tif (collateral > minCollateral + changeOutput.value.lovelace) {\n\t\t\t\tchangeOutput.setValue(new Value(0n));\n\n\t\t\t\tchangeOutput.correctLovelace(networkParams);\n\n\t\t\t\tif (collateral > minCollateral + changeOutput.value.lovelace) {\n\t\t\t\t\tchangeOutput.setValue(new Value(collateral - minCollateral));\n\t\t\t\t\tthis.#body.setCollateralReturn(changeOutput);\n\t\t\t\t} else {\n\t\t\t\t\tconsole.log(`not setting collateral return: collateral input too low (${collateral})`);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tcollateralInputs.forEach(utxo => {\n\t\t\tthis.#body.addCollateral(utxo);\n\t\t});\n\t}\n\n\t/**\n\t * Calculates fee and balances transaction by sending an output back to changeAddress\n\t * First assumes that change output isn't needed, and if that assumption doesn't result in a balanced transaction the change output is created.\n\t * Iteratively increments the fee because the fee increase the tx size which in turn increases the fee (always converges within two steps though).\n\t * Throws error if transaction can't be balanced.\n\t * Shouldn't be used directly\n\t * @internal\n\t * @param {NetworkParams} networkParams \n\t * @param {Address} changeAddress\n\t * @param {TxInput[]} spareUtxos - used when there are yet enough inputs to cover everything (eg. due to min output lovelace requirements, or fees)\n\t * @returns {TxOutput} - changeOutput so the fee can be mutated furthers\n\t */\n\tbalanceLovelace(networkParams, changeAddress, spareUtxos) {\n\t\t// don't include the changeOutput in this value\n\t\tlet nonChangeOutputValue = this.#body.sumOutputValue();\n\n\t\t// assume a change output is always needed\n\t\tconst changeOutput = new TxOutput(changeAddress, new Value(0n));\n\t\t\n\t\tchangeOutput.correctLovelace(networkParams);\n\n\t\tthis.#body.addOutput(changeOutput);\n\t\t\n\t\tconst minLovelace = changeOutput.value.lovelace;\n\n\t\tlet fee = networkParams.maxTxFee;\n\n\t\tthis.#body.setFee(fee);\n\t\t\n\t\tlet inputValue = this.#body.sumInputAndMintedValue();\n\n\t\tlet feeValue = new Value(fee);\n\n\t\tnonChangeOutputValue = feeValue.add(nonChangeOutputValue);\n\n\t\t// stake certificates\n\t\tconst stakeAddrDeposit = new Value(networkParams.stakeAddressDeposit);\n\t\tthis.#body.dcerts.forEach(dcert => {\n\t\t\t// in case of stake registrations, count stake key deposits as additional output ADA\n\t\t\tif (dcert.certType == 0) nonChangeOutputValue = nonChangeOutputValue.add(stakeAddrDeposit);\n\t\t\t// in case of stake de-registrations, count stake key deposits as additional input ADA\n\t\t\tif (dcert.certType == 1) inputValue = inputValue.add(stakeAddrDeposit);\n\t\t});\n\n\t\t// this is quite restrictive, but we really don't want to touch UTxOs containing assets just for balancing purposes\n\t\tconst spareAssetUTxOs = spareUtxos.some(utxo => !utxo.value.assets.isZero());\n\t\tspareUtxos = spareUtxos.filter(utxo => utxo.value.assets.isZero());\n\t\t\n\t\t// use some spareUtxos if the inputValue doesn't cover the outputs and fees\n\t\tconst totalOutputValue = nonChangeOutputValue.add(changeOutput.value);\n\t\twhile (!inputValue.ge(totalOutputValue)) {\n\t\t\tlet spare = spareUtxos.pop();\n\n\t\t\tif (spare === undefined) {\n\t\t\t\tif (spareAssetUTxOs) {\n\t\t\t\t\tthrow new Error(`UTxOs too fragmented`);\n\t\t\t\t} else {\n\t\t\t\t\tthrow new Error(`need ${totalOutputValue.lovelace} lovelace, but only have ${inputValue.lovelace}`);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis.#body.addInput(spare);\n\n\t\t\t\tinputValue = inputValue.add(spare.value);\n\t\t\t}\n\t\t}\n\n\t\t// use to the exact diff, which is >= minLovelace\n\t\tlet diff = inputValue.sub(nonChangeOutputValue);\n\n\t\tassert(diff.assets.isZero(), \"unexpected unbalanced assets\");\n\t\tassert(diff.lovelace >= minLovelace, `diff.lovelace=${diff.lovelace} ${typeof diff.lovelace} vs minLovelace=${minLovelace} ${typeof minLovelace}`);\n\n\t\tchangeOutput.setValue(diff);\n\n\t\t// we can mutate the lovelace value of 'changeOutput' until we have a balanced transaction with precisely the right fee\n\n\t\treturn changeOutput;\n\t}\n\n\t/**\n\t * @internal\n\t * @param {NetworkParams} networkParams\n\t * @param {TxOutput} changeOutput \n\t */\n\tcorrectChangeOutput(networkParams, changeOutput) {\n\t\tconst origFee = this.#body.fee;\n\n\t\tconst fee = this.setFee(networkParams, this.estimateFee(networkParams));\n\t\t\n\t\tconst diff = origFee - fee;\n\n\t\tconst changeLovelace = changeOutput.value.lovelace + diff;\n\n\t\tchangeOutput.value.setLovelace(changeLovelace);\n\t}\n\n\t/**\n\t * @internal\n\t * @param {NetworkParams} networkParams\n\t */\n\tcheckBalanced(networkParams) {\n\t\tconst stakeAddrDeposit = new Value(networkParams.stakeAddressDeposit);\n\t\tlet v = new Value(0n);\n\n\t\tv = this.#body.inputs.reduce((prev, inp) => inp.value.add(prev), v);\n\t\tv = this.#body.dcerts.reduce((prev, dcert) => { // add released stakeAddrDeposit\n            return dcert.certType === 1 ? prev.add(stakeAddrDeposit) : prev\n        }, v);\n\t\tv = v.sub(new Value(this.#body.fee));\n\t\tv = v.add(new Value(0, this.#body.minted));\n\t\tv = this.#body.outputs.reduce((prev, out) => {\n\t\t\treturn prev.sub(out.value)\n\t\t}, v);\n\t\tv = this.#body.dcerts.reduce((prev, dcert) => { // deduct locked stakeAddrDeposit\n            return dcert.certType === 0 ? prev.sub(stakeAddrDeposit) : prev\n        }, v);\n\n\t\tassert(v.lovelace == 0n, `tx not balanced, net lovelace not zero (${v.lovelace})`);\n\t\tassert(v.assets.isZero(), \"tx not balanced, net assets not zero\");\n\t}\n\n\t/**\n\t * Shouldn't be used directly\n\t * @internal\n\t * @param {NetworkParams} networkParams\n\t */\n\tsyncScriptDataHash(networkParams) {\n\t\tconst hash = this.#witnesses.calcScriptDataHash(networkParams);\n\n\t\tthis.#body.setScriptDataHash(hash);\n\t}\n\n\t/**\n\t * @internal\n\t * @returns {boolean}\n\t */\n\tisSmart() {\n\t\treturn this.#witnesses.scripts.length > 0;\n\t}\n\n\t/**\n\t * Throws an error if there isn't enough collateral\n\t * Also throws an error if the script doesn't require collateral, but collateral was actually included\n\t * Shouldn't be used directly\n\t * @internal\n\t * @param {NetworkParams} networkParams \n\t */\n\tcheckCollateral(networkParams) {\n\t\tif (this.isSmart()) {\n\t\t\tlet minCollateralPct = networkParams.minCollateralPct;\n\n\t\t\t// only use the exBudget \n\n\t\t\tconst fee = this.#body.fee;\n\n\t\t\tthis.#body.checkCollateral(networkParams, BigInt(Math.ceil(minCollateralPct*Number(fee)/100.0)));\n\t\t} else {\n\t\t\tthis.#body.checkCollateral(networkParams, null);\n\t\t}\n\t}\n\n\t/**\n\t * Throws error if tx is too big\n\t * Shouldn't be used directly\n\t * @internal\n\t * @param {NetworkParams} networkParams \n\t */\n\tcheckSize(networkParams) {\n\t\tlet size = this.toCbor().length;\n\n\t\tif (size > networkParams.maxTxSize) {\n\t\t\tthrow new Error(\"tx too big\");\n\t\t}\n\t}\n\n\t/**\n\t * Final check that fee is big enough\n\t * @internal\n\t * @param {NetworkParams} networkParams \n\t */\n\tcheckFee(networkParams) {\n\t\tassert(this.estimateFee(networkParams) <= this.#body.fee, `fee too small (${this.#body.fee} < ${this.estimateFee(networkParams)})`);\n\t}\n\n\t/**\n\t * @internal\n\t * @param {NetworkParams} networkParams \n\t */\n\tfinalizeValidityTimeRange(networkParams) {\n\t\tif (this.#witnesses.anyScriptCallsTxTimeRange() && this.#validFrom === null && this.#validTo === null) {\n\t\t\tconst currentSlot = networkParams.liveSlot;\n\t\t\tconst now = currentSlot !== null ? new Date(Number(networkParams.slotToTime(currentSlot))) : new Date();\n\n\t\t\tif (config.VALIDITY_RANGE_START_OFFSET !== null) {\n\t\t\t\tthis.#validFrom = new Date(now.getTime() - 1000*config.VALIDITY_RANGE_START_OFFSET);\n\t\t\t}\n\n\t\t\tif (config.VALIDITY_RANGE_END_OFFSET !== null) {\n\t\t\t\tthis.#validTo = new Date(now.getTime() + 1000*config.VALIDITY_RANGE_END_OFFSET);\n\t\t\t}\n\n\t\t\tif (!config.AUTO_SET_VALIDITY_RANGE) {\n\t\t\t\tconsole.error(\"Warning: validity interval is unset but detected usage of tx.time_range in one of the scripts.\\nSetting the tx validity interval to a sane default\\m(hint: set helios.config.AUTO_SET_VALIDITY_RANGE to true to avoid this warning)\");\n\t\t\t}\n\t\t}\n\n\t\tif (this.#validTo !== null) {\n\t\t\tthis.#body.validTo(\n\t\t\t\t(typeof this.#validTo === \"bigint\") ? \n\t\t\t\t\tthis.#validTo : \n\t\t\t\t\tnetworkParams.timeToSlot(BigInt(this.#validTo.getTime()))\n\t\t\t);\n\t\t}\n\n\t\tif (this.#validFrom !== null) {\n\t\t\tthis.#body.validFrom(\n\t\t\t\t(typeof this.#validFrom === \"bigint\") ?\n\t\t\t\t\tthis.#validFrom :\n\t\t\t\t\tnetworkParams.timeToSlot(BigInt(this.#validFrom.getTime()))\n\t\t\t);\n\t\t}\n\t}\n\n\t/**\n\t * Executes all the attached scripts with appropriate redeemers and calculates execution budgets.\n\t * Balances the transaction, and optionally uses some spare UTxOs if the current inputs don't contain enough lovelace to cover the fees and min output deposits.\n\t * \n\t * Inputs, minted assets, and withdrawals are sorted.\n\t * \n\t * Sets the validatity range automatically if a call to `tx.time_range` is detected in any of the attached Helios scripts.\n\t * @param {NetworkParams} networkParams\n\t * @param {Address}       changeAddress\n\t * @param {TxInput[]}        spareUtxos - might be used during balancing if there currently aren't enough inputs\n\t * @returns {Promise<Tx>}\n\t */\n\tasync finalize(networkParams, changeAddress, spareUtxos = []) {\n\t\tassert(!this.#valid);\n\n\t\tif (this.#metadata !== null) {\n\t\t\t// Calculate the Metadata hash and add to the TxBody\n\t\t\tthis.#body.setMetadataHash(\n\t\t\t\tnew Hash(Crypto.blake2b(this.#metadata.toCbor()))\n\t\t\t);\n\t\t}\n\n\t\t// initially dummy for more correct body size, recalculated later\n\t\tif (this.#witnesses.redeemers.length > 0) {\n\t\t\tthis.#body.setScriptDataHash(new Hash((new Array(32)).fill(0)));\n\t\t}\n\n\t\t// auto set the validity time range if the script call tx.time_range\n\t\t//  and translate the time range dates to slots\n\t\tthis.finalizeValidityTimeRange(networkParams);\n\n\t\t// inputs, minted assets, and withdrawals must all be in a particular order\n\t\tthis.#body.sortInputs();\n\n\t\t// after inputs etc. have been sorted we can calculate the indices of the redeemers referring to those inputs\n\t\tthis.#witnesses.updateRedeemerIndices(this.#body);\n\n\t\tthis.checkScripts();\n\n\t\t// balance the non-ada assets\n\t\tthis.balanceAssets(changeAddress);\n\n\t\t// sort the assets in the outputs, including the asset change output\n\t\tthis.#body.sortOutputs();\n\n\t\t// make sure that each output contains the necessary minimum amount of lovelace\t\n\t\tthis.#body.correctOutputs(networkParams);\n\n\t\t// balance the lovelace using maxTxFee as the fee\n\t\tconst changeOutput = this.balanceLovelace(networkParams, changeAddress, spareUtxos.slice());\n\n\t\t// the scripts executed at this point will not see the correct txHash nor the correct fee\n\t\tawait this.executeRedeemers(networkParams, changeAddress);\n\n\t\t// balance collateral (if collateral wasn't already set manually)\n\t\tthis.balanceCollateral(networkParams, changeAddress, spareUtxos.slice());\n\n\t\t// correct the changeOutput now the exact fee is known\n\t\tthis.correctChangeOutput(networkParams, changeOutput);\n\n\t\t// run updateRedeemerIndices again because new inputs may have been added and sorted\n\t\tthis.#witnesses.updateRedeemerIndices(this.#body);\n\n\t\t// we can only sync scriptDataHash after the redeemer execution costs have been estimated, and final redeemer indices have been determined\n\t\tthis.syncScriptDataHash(networkParams);\n\n\t\t// a bunch of checks\n\t\tthis.#body.checkOutputs(networkParams);\n\n\t\tthis.checkCollateral(networkParams);\n\n\t\tawait this.checkExecutionBudgets(networkParams);\n\n\t\tthis.#witnesses.checkExecutionBudgetLimits(networkParams);\n\n\t\tthis.checkSize(networkParams);\n\n\t\tthis.checkFee(networkParams);\n\n\t\tthis.checkBalanced(networkParams);\n\n\t\tthis.#valid = true;\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * @type {string}\n\t */\n\tget profileReport() {\n\t\treturn this.#witnesses.profileReport;\n\t}\n\n\t/**\n\t * Adds a signature created by a wallet. Only available after the transaction has been finalized.\n\t * Optionally verifies that the signature is correct.\n\t * @param {Signature} signature \n\t * @param {boolean} verify Defaults to `true`\n\t * @returns {Tx}\n\t */\n\taddSignature(signature, verify = true) {\n\t\tassert(this.#valid);\n\n\t\tif (verify) {\n\t\t\tsignature.verify(this.bodyHash);\n\t\t}\n\n\t\tthis.#witnesses.addSignature(signature);\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * Adds multiple signatures at once. Only available after the transaction has been finalized.\n\t * Optionally verifies each signature is correct.\n\t * @param {Signature[]} signatures \n\t * @param {boolean} verify \n\t * @returns {Tx}\n\t */\n\taddSignatures(signatures, verify = true) {\n\t\tfor (let s of signatures) {\n\t\t\tthis.addSignature(s, verify);\n\t\t}\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * Add metadata to a transaction.\n\t * Metadata can be used to store data on-chain,\n\t * but can't be consumed by validator scripts.\n\t * Metadata can for example be used for [CIP 25](https://cips.cardano.org/cips/cip25/). \n\t * @param {number} tag\n\t * @param {Metadata} data\n\t * @returns {Tx}\n\t */\n\taddMetadata(tag, data) {\n\t\tif (this.#metadata === null) {\n\t\t\tthis.#metadata = new TxMetadata();\n\t\t}\n\n\t\tthis.#metadata.add(tag, data);\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * @returns {TxId}\n\t */\n\tid() {\n\t\tassert(this.#valid, \"can't get TxId of unfinalized Tx\");\n\t\treturn new TxId(this.bodyHash);\n\t}\n}\n\n/**\n * inputs, minted assets, and withdrawals need to be sorted in order to form a valid transaction\n */\nexport class TxBody extends CborData {\n\t/**\n\t * Inputs must be sorted before submitting (first by TxId, then by utxoIndex)\n\t * Spending redeemers must point to the sorted inputs\n\t * @type {TxInput[]} \n\t */\n\t#inputs;\n\n\t/** @type {TxOutput[]} */\n\t#outputs;\n\n\t/** @type {bigint} in lovelace */\n\t#fee;\n\n\t/** @type {null | bigint} */\n\t#lastValidSlot;\n\n\t/** @type {DCert[]} */\n\t#dcerts;\n\n\t/**\n\t * Withdrawals must be sorted by address\n\t * Stake rewarding redeemers must point to the sorted withdrawals\n\t * @type {Map<Address, bigint>} \n\t */\n\t#withdrawals;\n\n\t/** @type {null | bigint} */\n\t#firstValidSlot;\n\n\t/**\n\t * Internally the assets must be sorted by mintingpolicyhash\n\t * Minting redeemers must point to the sorted minted assets\n\t * @type {Assets} \n\t */\n\t#minted;\n\n\t/** @type {null | Hash} */\n\t#scriptDataHash;\n\n\t/** @type {TxInput[]} */\n\t#collateral;\n\n\t/** @type {PubKeyHash[]} */\n\t#signers;\n\n\t/** @type {null | TxOutput} */\n\t#collateralReturn;\n\n\t/** @type {bigint} */\n\t#totalCollateral;\n\n\t/** @type {TxInput[]} */\n\t#refInputs;\n\n\t/** @type {?Hash} */\n\t#metadataHash;\n\n\tconstructor() {\n\t\tsuper();\n\n\t\tthis.#inputs = [];\n\t\tthis.#outputs = [];\n\t\tthis.#fee = 0n;\n\t\tthis.#lastValidSlot = null;\n\t\tthis.#dcerts = [];\n\t\tthis.#withdrawals = new Map();\n\t\tthis.#firstValidSlot = null;\n\t\tthis.#minted = new Assets(); // starts as zero value (i.e. empty map)\n\t\tthis.#scriptDataHash = null; \n\t\tthis.#collateral = [];\n\t\tthis.#signers = [];\n\t\tthis.#collateralReturn = null;\n\t\tthis.#totalCollateral = 0n; // doesn't seem to be used anymore\n\t\tthis.#refInputs = [];\n\t\tthis.#metadataHash = null;\n\t}\n\n\t/**\n\t * @type {TxInput[]}\n\t */\n\tget inputs() {\n\t\treturn this.#inputs;\n\t}\n\n\t/**\n\t * @type {TxInput[]}\n\t */\n\tget refInputs() {\n\t\treturn this.#refInputs;\n\t}\n\n\t/**\n\t * @type {TxOutput[]}\n\t */\n\tget outputs() {\n\t\treturn this.#outputs;\n\t}\n\n\t/**\n\t * @type {bigint}\n\t */\n\tget fee() {\n\t\treturn this.#fee;\n\t}\n\n\t/**\n\t * @internal\n\t * @param {bigint} fee\n\t */\n\tsetFee(fee) {\n\t\tthis.#fee = fee;\n\t}\n\n\t/**\n\t * @type {Assets}\n\t */\n\tget minted() {\n\t\treturn this.#minted;\n\t}\n\n\t/**\n\t * @type {TxInput[]}\n\t */\n\tget collateral() {\n\t\treturn this.#collateral;\n\t}\n\n\t/**\n\t * @type {bigint | null}\n\t */\n\tget firstValidSlot() {\n\t\treturn this.#firstValidSlot;\n\t}\n\n\t/**\n\t * @type {bigint | null}\n\t */\n\tget lastValidSlot() {\n\t\treturn this.#lastValidSlot;\n\t}\n\n\t/**\n\t * @type {PubKeyHash[]}\n\t */\n\tget signers() {\n\t\treturn this.#signers.slice();\n\t}\n\n\t/**\n\t * @type {DCert[]}\n\t */\n\tget dcerts() {\n\t\treturn this.#dcerts.slice();\n\t}\n\n\t/**\n\t * @returns {number[]}\n\t */\n\ttoCbor() {\n\t\t/**\n\t\t * @type {Map<number, number[]>}\n\t\t */\n\t\tlet object = new Map();\n\n\t\tobject.set(0, Cbor.encodeDefList(this.#inputs));\n\t\tobject.set(1, Cbor.encodeDefList(this.#outputs));\n\t\tobject.set(2, Cbor.encodeInteger(this.#fee));\n\t\t\n\t\tif (this.#lastValidSlot !== null) {\n\t\t\tobject.set(3, Cbor.encodeInteger(this.#lastValidSlot));\n\t\t}\n\n\t\tif (this.#dcerts.length != 0) {\n\t\t\tobject.set(4, Cbor.encodeDefList(this.#dcerts));\n\t\t}\n\n\t\tif (this.#withdrawals.size != 0) {\n\t\t\tthrow new Error(\"not yet implemented\");\n\t\t}\n\n\t\tif (this.#metadataHash !== null) {\n\t\t\tobject.set(7, this.#metadataHash.toCbor());\n\t\t}\n\n\t\tif (this.#firstValidSlot !== null) {\n\t\t\tobject.set(8, Cbor.encodeInteger(this.#firstValidSlot));\n\t\t}\n\n\t\tif (!this.#minted.isZero()) {\n\t\t\tobject.set(9, this.#minted.toCbor());\n\t\t}\n\n\t\tif (this.#scriptDataHash !== null) {\n\t\t\tobject.set(11, this.#scriptDataHash.toCbor());\n\t\t}\n\n\t\tif (this.#collateral.length != 0) {\n\t\t\tobject.set(13, Cbor.encodeDefList(this.#collateral));\n\t\t}\n\n\t\tif (this.#signers.length != 0) {\n\t\t\tobject.set(14, Cbor.encodeDefList(this.#signers));\n\t\t}\n\n\t\t// what is NetworkId used for, seems a bit useless?\n\t\t// object.set(15, Cbor.encodeInteger(2n));\n\n\t\tif (this.#collateralReturn !== null) {\n\t\t\tobject.set(16, this.#collateralReturn.toCbor());\n\t\t}\n\n\t\tif (this.#totalCollateral > 0n) {\n\t\t\tobject.set(17, Cbor.encodeInteger(this.#totalCollateral));\n\t\t}\n\n\t\tif (this.#refInputs.length != 0) {\n\t\t\tobject.set(18, Cbor.encodeDefList(this.#refInputs));\n\t\t}\n\n\t\treturn Cbor.encodeObject(object);\n\t}\n\n\t/**\n\t * @param {number[]} bytes\n\t * @returns {TxBody}\n\t */\n\tstatic fromCbor(bytes) {\n\t\tconst txBody = new TxBody();\n\n\t\tconst done = Cbor.decodeObject(bytes, (i, fieldBytes) => {\n\t\t\tswitch(i) {\n\t\t\t\tcase 0:\n\t\t\t\t\tCbor.decodeList(fieldBytes, (_, itemBytes) => {\n\t\t\t\t\t\ttxBody.#inputs.push(TxInput.fromCbor(itemBytes));\n\t\t\t\t\t});\n\t\t\t\t\tbreak;\n\t\t\t\tcase 1:\n\t\t\t\t\tCbor.decodeList(fieldBytes, (_, itemBytes) => {\n\t\t\t\t\t\ttxBody.#outputs.push(TxOutput.fromCbor(itemBytes));\n\t\t\t\t\t})\n\t\t\t\t\tbreak;\n\t\t\t\tcase 2:\n\t\t\t\t\ttxBody.#fee = Cbor.decodeInteger(fieldBytes);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 3:\n\t\t\t\t\ttxBody.#lastValidSlot = Cbor.decodeInteger(fieldBytes);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 4:\n\t\t\t\t\tCbor.decodeList(fieldBytes, (_, itemBytes) => {\n\t\t\t\t\t\ttxBody.#dcerts.push(DCert.fromCbor(itemBytes));\n\t\t\t\t\t});\n\t\t\t\t\tbreak;\n\t\t\t\tcase 5:\n\t\t\t\t\tthrow new Error(\"not yet implemented\");\n\t\t\t\tcase 6:\n\t\t\t\t\tthrow new Error(\"not yet implemented\");\n\t\t\t\tcase 7:\n\t\t\t\t\ttxBody.#metadataHash = Hash.fromCbor(fieldBytes);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 8:\n\t\t\t\t\ttxBody.#firstValidSlot = Cbor.decodeInteger(fieldBytes);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 9:\n\t\t\t\t\ttxBody.#minted = Assets.fromCbor(fieldBytes);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 10:\n\t\t\t\t\tthrow new Error(\"unhandled field\");\n\t\t\t\tcase 11:\n\t\t\t\t\ttxBody.#scriptDataHash = Hash.fromCbor(fieldBytes);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 12:\n\t\t\t\t\tthrow new Error(\"unhandled field\");\n\t\t\t\tcase 13:\n\t\t\t\t\tCbor.decodeList(fieldBytes, (_, itemBytes) => {\n\t\t\t\t\t\ttxBody.#collateral.push(TxInput.fromCbor(itemBytes));\n\t\t\t\t\t});\n\t\t\t\t\tbreak;\n\t\t\t\tcase 14:\n\t\t\t\t\tCbor.decodeList(fieldBytes, (_, itemBytes) => {\n\t\t\t\t\t\ttxBody.#signers.push(PubKeyHash.fromCbor(itemBytes));\n\t\t\t\t\t});\n\t\t\t\t\tbreak;\n\t\t\t\tcase 15:\n\t\t\t\t\t// ignore the network Id\n\t\t\t\t\tvoid Cbor.decodeInteger(fieldBytes);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 16:\n\t\t\t\t\ttxBody.#collateralReturn = TxOutput.fromCbor(fieldBytes);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 17:\n\t\t\t\t\ttxBody.#totalCollateral = Cbor.decodeInteger(fieldBytes);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 18:\n\t\t\t\t\tCbor.decodeList(fieldBytes, itemBytes => {\n\t\t\t\t\t\ttxBody.#refInputs.push(TxInput.fromCbor(fieldBytes));\n\t\t\t\t\t});\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new Error(\"unrecognized field\");\n\t\t\t}\n\t\t});\n\n\t\tassert(done.has(0) && done.has(1) && done.has(2));\n\n\t\treturn txBody;\n\t}\n\n\t/**\n\t * @returns {Object}\n\t */\n\tdump() {\n\t\treturn {\n\t\t\tinputs: this.#inputs.map(input => input.dump()),\n\t\t\toutputs: this.#outputs.map(output => output.dump()),\n\t\t\tfee: this.#fee.toString(),\n\t\t\tlastValidSlot: this.#lastValidSlot === null ? null : this.#lastValidSlot.toString(),\n\t\t\tfirstValidSlot: this.#firstValidSlot === null ? null : this.#firstValidSlot.toString(),\n\t\t\tminted: this.#minted.isZero() ? null : this.#minted.dump(),\n\t\t\tmetadataHash: this.#metadataHash === null ? null : this.#metadataHash.dump(),\n\t\t\tscriptDataHash: this.#scriptDataHash === null ? null : this.#scriptDataHash.dump(),\n\t\t\tcertificates: this.#dcerts.length == 0 ? null : this.#dcerts.map(dc => dc.dump()),\n\t\t\tcollateral: this.#collateral.length == 0 ? null : this.#collateral.map(c => c.dump()),\n\t\t\tsigners: this.#signers.length == 0 ? null : this.#signers.map(rs => rs.dump()),\n\t\t\tcollateralReturn: this.#collateralReturn === null ? null : this.#collateralReturn.dump(),\n\t\t\t//totalCollateral: this.#totalCollateral.toString(), // doesn't seem to be used anymore\n\t\t\trefInputs: this.#refInputs.map(ri => ri.dump()),\n\t\t};\n\t}\n\n\t/**\n\t * For now simply returns minus infinity to plus infinity (WiP)\n\t * @internal\n\t * @param {NetworkParams} networkParams\n\t * @returns {ConstrData}\n\t */\n\ttoValidTimeRangeData(networkParams) {\n\t\treturn new ConstrData(0, [\n\t\t\tnew ConstrData(0, [ // LowerBound\n\t\t\t\tthis.#firstValidSlot === null ? new ConstrData(0, []) : new ConstrData(1, [new IntData(networkParams.slotToTime(this.#firstValidSlot))]), // NegInf\n\t\t\t\tnew ConstrData(1, []), // true\n\t\t\t]),\n\t\t\tnew ConstrData(0, [ // UpperBound\n\t\t\t\tthis.#lastValidSlot === null ? new ConstrData(2, []) : new ConstrData(1, [new IntData(networkParams.slotToTime(this.#lastValidSlot))]), // PosInf\n\t\t\t\tnew ConstrData(this.#lastValidSlot === null ? 1 : 0, []), // false if slot is set, true if slot isn't set\n\t\t\t]),\n\t\t]);\n\t}\n\n\t/**\n\t * A serialized tx throws away input information\n\t * This must be refetched from the network if the tx needs to be analyzed\n\t * @internal\n\t * @param {(id: TxOutputId) => Promise<TxOutput>} fn\n\t * @param {TxWitnesses} witnesses\n\t */\n\tasync completeInputData(fn, witnesses) {\n\t\tconst indices = [];\n\t\tconst ids = [];\n\n\t\tfor (let i = 0; i < this.#inputs.length; i++) {\n\t\t\tconst input = this.#inputs[i];\n\n\t\t\tif (!input.hasOrigOutput()) {\n\t\t\t\tindices.push(i);\n\t\t\t\tids.push(input.outputId);\n\t\t\t}\n\t\t}\n\n\t\tconst offset = this.#inputs.length;\n\n\t\tfor (let i = 0; i < this.#refInputs.length; i++) {\n\t\t\tconst refInput = this.#refInputs[i];\n\n\t\t\tif (!refInput.hasOrigOutput()) {\n\t\t\t\tindices.push(offset + i);\n\t\t\t\tids.push(refInput.outputId);\n\t\t\t}\n\t\t}\n\n\t\tconst outputs = await Promise.all(ids.map(id => fn(id)));\n\n\t\toutputs.forEach((output, j) => {\n\t\t\tconst i = indices[j];\n\n\t\t\tif (output.refScript) {\n\t\t\t\twitnesses.attachRefScript(output.refScript)\n\t\t\t}\n\t\t\t\n\t\t\tif (i < offset) {\n\t\t\t\tthis.#inputs[i].setOrigOutput(output)\n\t\t\t} else {\n\t\t\t\tthis.#refInputs[i-offset].setOrigOutput(output)\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * @internal\n\t * @param {NetworkParams} networkParams\n\t * @param {Redeemer[]} redeemers\n\t * @param {ListData} datums \n\t * @param {TxId} txId\n\t * @returns {ConstrData}\n\t */\n\ttoTxData(networkParams, redeemers, datums, txId) {\n\t\treturn new ConstrData(0, [\n\t\t\tnew ListData(this.#inputs.map(input => input.toData())),\n\t\t\tnew ListData(this.#refInputs.map(input => input.toData())),\n\t\t\tnew ListData(this.#outputs.map(output => output.toData())),\n\t\t\t(new Value(this.#fee))._toUplcData(),\n\t\t\t// NOTE: all other Value instances in ScriptContext contain some lovelace, but #minted can never contain any lovelace, yet cardano-node always prepends 0 lovelace to the #minted MapData\n\t\t\t(new Value(0n, this.#minted))._toUplcData(true), \n\t\t\tnew ListData(this.#dcerts.map(cert => cert.toData())),\n\t\t\tnew MapData(Array.from(this.#withdrawals.entries()).map(w => [w[0].toStakingData(), new IntData(w[1])])),\n\t\t\tthis.toValidTimeRangeData(networkParams),\n\t\t\tnew ListData(this.#signers.map(rs => new ByteArrayData(rs.bytes))),\n\t\t\tnew MapData(redeemers.map(r => [r.toScriptPurposeData(this), r.data])),\n\t\t\tnew MapData(datums.list.map(d => [\n\t\t\t\tnew ByteArrayData(Crypto.blake2b(d.toCbor())), \n\t\t\t\td\n\t\t\t])),\n\t\t\tnew ConstrData(0, [new ByteArrayData(txId.bytes)])\n\t\t]);\n\t}\n\n\t/**\n\t * @internal\n\t * @param {NetworkParams} networkParams \n\t * @param {Redeemer[]} redeemers\n\t * @param {ListData} datums\n\t * @param {number} redeemerIdx\n\t * @param {TxId} txId\n\t * @returns {UplcData}\n\t */\n\ttoScriptContextData(networkParams, redeemers, datums, redeemerIdx, txId = TxId.dummy()) {\t\t\n\t\treturn new ConstrData(0, [\n\t\t\t// tx (we can't know the txId right now, because we don't know the execution costs yet, but a dummy txId should be fine)\n\t\t\tthis.toTxData(networkParams, redeemers, datums, txId),\n\t\t\tredeemers[redeemerIdx].toScriptPurposeData(this),\n\t\t]);\n\t}\n\n\t/**\n\t * @returns {Value}\n\t */\n\tsumInputValue() {\n\t\tlet sum = new Value();\n\n\t\tfor (let input of this.#inputs) {\n\t\t\tif (input.origOutput !== null) {\n\t\t\t\tsum = sum.add(input.origOutput.value);\n\t\t\t}\n\t\t}\n\n\t\treturn sum;\n\t}\n\n\t/**\n\t * Throws error if any part of the sum is negative (i.e. more is burned than input)\n\t * @returns {Value}\n\t */\n\tsumInputAndMintedValue() {\n\t\treturn this.sumInputValue().add(new Value(0n, this.#minted)).assertAllPositive();\n\t}\n\n\t/**\n\t * @returns {Assets}\n\t */\n\tsumInputAndMintedAssets() {\n\t\treturn this.sumInputAndMintedValue().assets;\n\t}\n\n\t/**\n\t * @returns {Value}\n\t */\n\tsumOutputValue() {\n\t\tlet sum = new Value();\n\n\t\tfor (let output of this.#outputs) {\n\t\t\tsum = sum.add(output.value);\n\t\t}\n\n\t\treturn sum;\n\t}\n\n\t/**\n\t * @returns {Assets}\n\t */\n\tsumOutputAssets() {\n\t\treturn this.sumOutputValue().assets;\n\t}\n\n\t/**\n\t * @internal\n\t * @param {bigint} slot\n\t */\n\tvalidFrom(slot) {\n\t\tthis.#firstValidSlot = slot;\n\t}\n\n\t/**\n\t * @internal\n\t * @param {bigint} slot\n\t */\n\tvalidTo(slot) {\n\t\tthis.#lastValidSlot = slot;\n\t}\n\n\t/**\n\t * Throws error if this.#minted already contains mph\n\t * @internal\n\t * @param {MintingPolicyHash | MintingPolicyHashProps} mph - minting policy hash\n\t * @param {[ByteArray | ByteArrayProps, HInt | HIntProps][]} tokens\n\t */\n\taddMint(mph, tokens) {\n\t\tthis.#minted.addTokens(mph, tokens);\n\t}\n\n\t/**\n\t * @internal\n\t * @param {TxInput} input \n\t * @param {boolean} checkUniqueness\n\t */\n\taddInput(input, checkUniqueness = true) {\n\t\tif (input.origOutput === null) {\n\t\t\tthrow new Error(\"TxInput.origOutput must be set when building transaction\");\n\t\t}\n\n\t\tinput.origOutput.value.assertAllPositive();\n\n\t\tif (checkUniqueness) {\n\t\t\tassert(this.#inputs.every(prevInput => {\n\t\t\t\treturn  !prevInput.txId.eq(input.txId) || prevInput.utxoIdx != input.utxoIdx\n\t\t\t}), \"input already added before\");\n\t\t}\n\n\t\t// push, then sort immediately\n\t\tthis.#inputs.push(input);\n\t\tthis.#inputs.sort(TxInput.comp);\n\t}\n\n\t/**\n\t * Used to remove dummy inputs\n\t * Dummy inputs are needed to be able to correctly estimate fees\n\t * Throws an error if input doesn't exist in list of inputs\n\t * @internal\n\t * @param {TxInput} input\n\t */\n\tremoveInput(input) {\n\t\tlet idx = -1;\n\n\t\t// search from end, so removal is exact inverse of addition\n\t\tfor (let i = this.#inputs.length - 1; i >= 0; i--) {\n\t\t\tif (this.#inputs[i] == input) {\n\t\t\t\tidx = i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tconst n = this.#inputs.length;\n\n\t\tassert(idx != -1, \"input not found\");\n\n\t\tthis.#inputs = this.#inputs.filter((_, i) => i != idx);\n\n\t\tassert(this.#inputs.length == n - 1, \"input not removed\");\n\t}\n\n\t/**\n\t * @internal\n\t * @param {TxInput} input \n\t * @param {boolean} checkUniqueness\n\t */\n\taddRefInput(input, checkUniqueness = true) {\n\t\tif (input.origOutput === null) {\n\t\t\tthrow new Error(\"TxInput.origOutput must be set when building transaction\");\n\t\t}\n\n\t\tinput.origOutput.value.assertAllPositive();\n\n\t\tif (checkUniqueness) {\n\t\t\tassert(this.#refInputs.every(prevInput => {\n\t\t\t\treturn  !prevInput.txId.eq(input.txId) || prevInput.utxoIdx != input.utxoIdx\n\t\t\t}), \"refInput already added before\");\n\t\t}\n\n\t\t// push, then sort immediately\n\t\tthis.#refInputs.push(input);\n\t\tthis.#refInputs.sort(TxInput.comp);\n\t}\n\n\t/**\n\t * @internal\n\t * @param {TxOutput} output\n\t */\n\taddOutput(output) {\n\t\toutput.value.assertAllPositive();\n\n\t\tthis.#outputs.push(output);\n\t}\n\n\t/**\n\t * Used to remove dummy outputs\n\t * Dummy outputs are needed to be able to correctly estimate fees\n\t * Throws an error if the output doesn't exist in list of outputs\n\t * @internal\n\t * @param {TxOutput} output \n\t */\n\tremoveOutput(output) {\n\t\tlet idx = -1;\n\n\t\t// search from end, so removal is exact inverse of addition\n\t\tfor (let i = this.#outputs.length - 1; i >= 0; i--) {\n\t\t\tif (this.#outputs[i] == output) {\n\t\t\t\tidx = i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tconst n = this.#outputs.length;\n\n\t\tassert(idx != -1, \"output not found\");\n\n\t\tthis.#outputs = this.#outputs.filter((_, i) => i != idx);\n\n\t\tassert(this.#outputs.length == n - 1, \"output not removed\");\n\t}\n\n\t/**\n\t * @internal\n\t * @param {PubKeyHash} hash \n\t * @param {boolean} checkUniqueness\n\t */\n\taddSigner(hash, checkUniqueness = true) {\n\t\tif (checkUniqueness) {\n\t\t\tassert(this.#signers.every(prevSigner => {\n\t\t\t\treturn  !prevSigner.eq(hash);\n\t\t\t}), \"signer already added before\");\n\t\t}\n\n\n\t\tthis.#signers.push(hash);\n\t\tthis.#signers.sort(Hash.compare);\n\t}\n\n\t/**\n\t * @internal\n\t * @param {DCert} dcert \n\t */\n\taddDCert(dcert) {\n\t\tthis.#dcerts.push(dcert);\n\n\t\tconst reqSigTypes = [1,2]; // stake de-reg, stake deleg\n\t\tif (reqSigTypes.includes(dcert.certType)){\n\t\t\tif (dcert.credentialType === 0) { // for address key hash only\n\t\t\t\tthis.addSigner(dcert.stakeHash);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @internal\n\t * @param {TxInput} input \n\t */\n\taddCollateral(input) {\n\t\tthis.#collateral.push(input);\n\t}\n\t\n\t/**\n\t * @internal\n\t * @param {Hash | null} scriptDataHash\n\t */\n\tsetScriptDataHash(scriptDataHash) {\n\t\tthis.#scriptDataHash = scriptDataHash;\n\t}\n\n\t/**\n\t * @internal\n\t * @param {Hash} metadataHash\n\t */\n\tsetMetadataHash(metadataHash) {\n\t\tthis.#metadataHash = metadataHash;\n\t}\n\n\t/**\n\t * @internal\n\t * @param {TxOutput | null} output \n\t */\n\tsetCollateralReturn(output) {\n\t\tthis.#collateralReturn = output;\n\t}\n\n\t/**\n\t * Calculates the number of dummy signatures needed to get precisely the right tx size.\n\t * @internal\n\t * @returns {number}\n\t */\n\tcountUniqueSigners() {\n\t\t/** @type {Set<PubKeyHash>} */\n\t\tlet set = new Set();\n\n\t\tconst inputs = this.#inputs.concat(this.#collateral);\n\n\t\tfor (let input of inputs) {\n\t\t\tlet origOutput = input.origOutput;\n\n\t\t\tif (origOutput !== null) {\n\t\t\t\tlet pubKeyHash = origOutput.address.pubKeyHash;\n\n\t\t\t\tif (pubKeyHash !== null) {\n\t\t\t\t\tset.add(pubKeyHash);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfor (let rs of this.#signers) {\n\t\t\tset.add(rs);\n\t\t}\n\n\t\treturn set.size;\n\t}\n\n\t/**\n\t * Script hashes are found in addresses of TxInputs and hashes of the minted MultiAsset.\n\t * @internal\n\t * @param {Map<string, number>} set - hashes in hex format\n\t */\n\tcollectScriptHashes(set) {\n\t\tfor (let i = 0; i < this.#inputs.length; i++) {\n\t\t\tconst input = this.#inputs[i];\n\n\t\t\tif (input.origOutput !== null) {\n\t\t\t\tlet scriptHash = input.origOutput.address.validatorHash;\n\n\t\t\t\tif (scriptHash !== null) {\n\t\t\t\t\tconst hash = bytesToHex(scriptHash.bytes);\n\n\t\t\t\t\tif (!set.has(hash)) { \n\t\t\t\t\t\tset.set(hash, i);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tlet mphs = this.#minted.mintingPolicies;\n\n\t\tfor (let i = 0; i < mphs.length; i++) {\n\t\t\tconst mph = mphs[i];\n\n\t\t\tconst hash = bytesToHex(mph.bytes);\n\n\t\t\tif (!set.has(hash)) {\n\t\t\t\tset.set(hash, -i-1);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Makes sure each output contains the necessary min lovelace.\n\t * @internal\n\t * @param {NetworkParams} networkParams\n\t */\n\tcorrectOutputs(networkParams) {\n\t\tfor (let output of this.#outputs) {\n\t\t\toutput.correctLovelace(networkParams);\n\t\t}\n\t}\n\n\t/**\n\t * Checks that each output contains enough lovelace\n\t * @internal\n\t * @param {NetworkParams} networkParams\n\t */\n\tcheckOutputs(networkParams) {\n\t\tfor (let output of this.#outputs) {\n\t\t\tlet minLovelace = output.calcMinLovelace(networkParams);\n\n\t\t\tassert(minLovelace <= output.value.lovelace, `not enough lovelace in output (expected at least ${minLovelace.toString()}, got ${output.value.lovelace})`);\n\n\t\t\toutput.value.assets.assertSorted();\n\t\t}\n\t}\n\t\n\t/**\n\t * @internal\n\t * @param {NetworkParams} networkParams\n\t * @param {null | bigint} minCollateral \n\t */\n\tcheckCollateral(networkParams, minCollateral) {\n\t\tassert(this.#collateral.length <= networkParams.maxCollateralInputs);\n\n\t\tif (minCollateral === null) {\n\t\t\tassert(this.#collateral.length == 0, \"unnecessary collateral included\");\n\t\t} else {\n\t\t\tlet sum = new Value();\n\n\t\t\tfor (let col of this.#collateral) {\n\t\t\t\tif (col.origOutput === null) {\n\t\t\t\t\tthrow new Error(\"expected collateral TxInput.origOutput to be set\");\n\t\t\t\t} else if (!col.origOutput.value.assets.isZero()) {\n\t\t\t\t\tthrow new Error(\"collateral can only contain lovelace\");\n\t\t\t\t} else {\n\t\t\t\t\tsum = sum.add(col.origOutput.value);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this.#collateralReturn != null) {\n\t\t\t\tsum = sum.sub(this.#collateralReturn.value);\n\t\t\t}\n\n\t\t\tassert(sum.lovelace >= minCollateral, \"not enough collateral\");\n\n\t\t\tif (sum.lovelace > minCollateral*5n){\n\t\t\t\tconsole.error(\"Warning: way too much collateral\");\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Makes sore inputs, withdrawals, and minted assets are in correct order, this is needed for the redeemer indices\n\t * Mutates\n\t * @internal\n\t */\n\tsortInputs() {\n\t\t// inputs should've been added in sorted manner, so this is just a check\n\t\tthis.#inputs.forEach((input, i) => {\n\t\t\tif (i > 0) {\n\t\t\t\tconst prev = this.#inputs[i-1];\n\n\t\t\t\t// can be less than -1 if utxoIds aren't consecutive\n\t\t\t\tassert(TxInput.comp(prev, input) <= -1, \"inputs not sorted\");\n\t\t\t}\n\t\t});\n\n\t\t// same for ref inputs\n\t\tthis.#refInputs.forEach((input, i) => {\n\t\t\tif (i > 0) {\n\t\t\t\tconst prev = this.#refInputs[i-1];\n\n\t\t\t\t// can be less than -1 if utxoIds aren't consecutive\n\t\t\t\tassert(TxInput.comp(prev, input) <= -1, \"refInputs not sorted\");\n\t\t\t}\n\t\t});\n\n\t\t// TODO: also add withdrawals in sorted manner\n\t\tthis.#withdrawals = new Map(Array.from(this.#withdrawals.entries()).sort((a, b) => {\n\t\t\treturn Address.compStakingHashes(a[0], b[0]);\n\t\t}));\n\n\t\t// minted assets should've been added in sorted manner, so this is just a check\n\t\tthis.#minted.assertSorted();\n\t}\n\n\n\t/**\n\t * Not done in the same routine as sortInputs(), because balancing of assets happens after redeemer indices are set\n\t * @internal\n\t */\n\tsortOutputs() {\n\t\t// sort the tokens in the outputs, needed by the flint wallet\n\t\tthis.#outputs.forEach(output => {\n\t\t\toutput.value.assets.sort();\n\t\t});\n\t}\n\n\t/**\n\t * Used by (indirectly) by emulator to check if slot range is valid.\n\t * Note: firstValidSlot == lastValidSlot is allowed\n\t * @internal\n\t * @param {bigint} slot\n\t */\n\tisValid(slot) {\n\t\tif (this.#lastValidSlot != null) {\n\t\t\tif (slot > this.#lastValidSlot) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\tif (this.#firstValidSlot != null) {\n\t\t\tif (slot < this.#firstValidSlot) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * @internal\n\t * @returns {number[]}\n\t */\n\thash() {\n\t\treturn Crypto.blake2b(this.toCbor());\n\t}\n}\n\n/**\n * Represents the pubkey signatures, and datums/redeemers/scripts that are witnessing a transaction.\n */\nexport class TxWitnesses extends CborData {\n\t/** @type {Signature[]} */\n\t#signatures;\n\n\t/** @type {ListData} */\n\t#datums;\n\n\t/** @type {Redeemer[]} */\n\t#redeemers;\n\n\t/**\n\t * @type {number[][]}\n\t */\n\t#v1Scripts;\n\n\t/** @type {UplcProgram[]} */\n\t#scripts;\n\n\t/** @type {UplcProgram[]} */\n\t#refScripts;\n\n\t/** @type {NativeScript[]} */\n\t#nativeScripts;\n\n\tconstructor() {\n\t\tsuper();\n\t\tthis.#signatures = [];\n\t\tthis.#datums = new ListData([]);\n\t\tthis.#redeemers = [];\n\t\tthis.#v1Scripts = []; // for backward compatibility with some wallets\n\t\tthis.#scripts = []; // always plutus v2\n\t\tthis.#refScripts = [];\n\t\tthis.#nativeScripts = [];\n\t}\n\n\t/**\n\t * Gets the list of `Signature` instances contained in this witness set.\n\t * @type {Signature[]}\n\t */\n\tget signatures() {\n\t\treturn this.#signatures;\n\t}\n\n\t/**\n\t * Returns all the scripts, including the reference scripts\n\t * @type {(UplcProgram | NativeScript)[]}\n\t */\n\tget scripts() {\n\t\t/**\n\t\t * @type {(UplcProgram | NativeScript)[]}\n\t\t */\n\t\tlet allScripts = this.#scripts.slice().concat(this.#refScripts.slice())\n\t\t\n\t\tallScripts = allScripts.concat(this.#nativeScripts.slice());\n\n\t\treturn allScripts;\n\t}\n\n\t/**\n\t * @type {Redeemer[]}\n\t */\n\tget redeemers() {\n\t\treturn this.#redeemers;\n\t}\n\n\t/**\n\t * @type {ListData}\n\t */\n\tget datums() {\n\t\treturn this.#datums;\n\t}\n\n\t/**\n\t * @param {ValidatorHash | MintingPolicyHash} h \n\t * @returns {boolean}\n\t */\n\tisNativeScript(h) {\n\t\treturn this.#nativeScripts.some(s => eq(s.hash(), h.bytes));\n\t}\n\n\t/**\n\t * @internal\n\t * @returns {boolean}\n\t */\n\tanyScriptCallsTxTimeRange() {\n\t\treturn this.scripts.some(s => (s instanceof UplcProgram) && s.properties.callsTxTimeRange);\n\t}\n\n\t/**\n\t * @returns {number[]}\n\t */\n\ttoCbor() {\n\t\t/**\n\t\t * @type {Map<number, number[]>}\n\t\t */\n\t\tlet object = new Map();\n\n\t\tif (this.#signatures.length > 0) {\n\t\t\tobject.set(0, Cbor.encodeDefList(this.#signatures));\n\t\t}\n\t\t\n\t\tif (this.#nativeScripts.length > 0) {\n\t\t\tobject.set(1, Cbor.encodeDefList(this.#nativeScripts));\n\t\t}\n\n\t\tif (this.#v1Scripts.length > 0) {\n\t\t\tobject.set(3, Cbor.encodeDefList(this.#v1Scripts));\n\t\t}\n\n\t\tif (this.#datums.list.length > 0) {\n\t\t\tobject.set(4, this.#datums.toCbor());\n\t\t}\n\n\t\tif (this.#redeemers.length > 0) {\n\t\t\tobject.set(5, Cbor.encodeDefList(this.#redeemers));\n\t\t}\n\n\t\tif (this.#scripts.length > 0) {\n\t\t\t/**\n\t\t\t * @type {number[][]}\n\t\t\t */\n\t\t\tlet scriptBytes = this.#scripts.map(s => s.toCbor());\n\n\t\t\tobject.set(6, Cbor.encodeDefList(scriptBytes));\n\t\t}\n\n\t\treturn Cbor.encodeObject(object);\n\t}\n\n\t/**\n\t * @param {number[]} bytes \n\t * @returns {TxWitnesses}\n\t */\n\tstatic fromCbor(bytes) {\n\t\tlet txWitnesses = new TxWitnesses();\n\n\t\tCbor.decodeObject(bytes, (i, fieldBytes) => {\n\t\t\tswitch(i) {\n\t\t\t\tcase 0:\n\t\t\t\t\tCbor.decodeList(fieldBytes, (_, itemBytes) => {\n\t\t\t\t\t\ttxWitnesses.#signatures.push(Signature.fromCbor(itemBytes));\n\t\t\t\t\t});\n\t\t\t\t\tbreak;\n\t\t\t\tcase 1:\n\t\t\t\t\tCbor.decodeList(fieldBytes, (_, itemBytes) => {\n\t\t\t\t\t\ttxWitnesses.#nativeScripts.push(NativeScript.fromCbor(itemBytes));\n\t\t\t\t\t});\n\t\t\t\t\tbreak;\n\t\t\t\tcase 2:\n\t\t\t\t\tthrow new Error(`unhandled TxWitnesses field ${i}`);\n\t\t\t\tcase 3:\n\t\t\t\t\tCbor.decodeList(fieldBytes, (_, itemBytes) => {\n\t\t\t\t\t\ttxWitnesses.#v1Scripts.push(itemBytes);\n\t\t\t\t\t});\n\t\t\t\t\tbreak;\n\t\t\t\tcase 4:\n\t\t\t\t\ttxWitnesses.#datums = ListData.fromCbor(fieldBytes);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 5:\n\t\t\t\t\tCbor.decodeList(fieldBytes, (_, itemBytes) => {\n\t\t\t\t\t\ttxWitnesses.#redeemers.push(Redeemer.fromCbor(itemBytes));\n\t\t\t\t\t});\n\t\t\t\t\tbreak;\n\t\t\t\tcase 6:\n\t\t\t\t\tCbor.decodeList(fieldBytes, (_, itemBytes) => {\n\t\t\t\t\t\ttxWitnesses.#scripts.push(UplcProgram.fromCbor(itemBytes));\n\t\t\t\t\t});\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new Error(\"unrecognized field\");\n\t\t\t}\n\t\t});\n\n\t\treturn txWitnesses;\n\t}\n\n\t/**\n\t * Throws error if signatures are incorrect\n\t * @internal\n\t * @param {number[]} bodyBytes \n\t */\n\tverifySignatures(bodyBytes) {\n\t\tfor (let signature of this.#signatures) {\n\t\t\tsignature.verify(Crypto.blake2b(bodyBytes));\n\t\t}\n\t}\n\n\t/**\n\t * @param {null | NetworkParams} params \n\t * @param {null | TxBody} body\n\t * @returns {Object}\n\t */\n\tdump(params = null, body = null) {\n\t\treturn {\n\t\t\tsignatures: this.#signatures.map(pkw => pkw.dump()),\n\t\t\tdatums: this.#datums.list.map(datum => datum.toString()),\n\t\t\tredeemers: this.#redeemers.map((redeemer, i) => {\n\t\t\t\tconst obj = redeemer.dump()\n\t\t\t\tif (params && body) {\n\t\t\t\t\tconst scriptContext = body.toScriptContextData(params, this.#redeemers, this.#datums, i);\n\t\t\t\t\t\n\t\t\t\t\tobj[\"ctx\"] = scriptContext.toCborHex();\n\n\t\t\t\t\tif (redeemer instanceof SpendingRedeemer) {\n\t\t\t\t\t\tconst idx = redeemer.inputIndex;\n\t\t\t\n\t\t\t\t\t\tconst origOutput = body.inputs[idx].origOutput;\n\t\t\t\n\t\t\t\t\t\tif (origOutput === null) {\n\t\t\t\t\t\t\tthrow new Error(\"expected origOutput to be non-null\");\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconst datumData = origOutput.getDatumData();\n\n\t\t\t\t\t\t\tobj[\"datum\"] = datumData.toCborHex();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn obj;\n\t\t\t}),\n\t\t\tnativeScripts: this.#nativeScripts.map(script => script.toJson()),\n\t\t\tscripts: this.#scripts.map(script => bytesToHex(script.toCbor())),\n\t\t\trefScripts: this.#refScripts.map(script => bytesToHex(script.toCbor())),\n\t\t};\n\t}\n\n\t/**\n\t * @internal\n\t * @param {NetworkParams} networkParams\n\t * @returns {bigint}\n\t */\n\testimateFee(networkParams) {\n\t\tlet sum = 0n;\n\n\t\tfor (let redeemer of this.#redeemers) {\n\t\t\tsum += redeemer.estimateFee(networkParams);\n\t\t}\n\n\t\treturn sum;\n\t}\n\n\t/**\n\t * @internal\n\t * @param {Signature} signature \n\t */\n\taddSignature(signature) {\n\t\t// only add unique signautres\n\t\tif (this.#signatures.every(s => !s.isDummy() && !s.pubKeyHash.eq(signature.pubKeyHash))) {\n\t\t\tthis.#signatures.push(signature);\n\t\t}\n\t}\n\n\t/**\n\t * @internal\n\t * @param {number} n\n\t */\n\taddDummySignatures(n) {\n\t\tfor (let i = 0 ; i < n; i++) {\n\t\t\tthis.#signatures.push(Signature.dummy());\n\t\t}\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tremoveDummySignatures() {\n\t\tthis.#signatures = this.#signatures.filter(pkw => !pkw.isDummy());\n\t}\n\n\t/**\n\t * Index is calculated later\n\t * @internal\n\t * @param {TxInput} input\n\t * @param {UplcData} redeemerData \n\t */\n\taddSpendingRedeemer(input, redeemerData) {\n\t\tthis.#redeemers.push(new SpendingRedeemer(input, -1, redeemerData)); // actual input index is determined later\n\t}\n\n\t/**\n\t * @internal\n\t * @param {MintingPolicyHash} mph\n\t * @param {UplcData} redeemerData\n\t */\n\taddMintingRedeemer(mph, redeemerData) {\n\t\tthis.#redeemers.push(new MintingRedeemer(mph, -1, redeemerData));\n\t}\n\n\t/**\n\t * @internal\n\t * @param {UplcData} data \n\t */\n\taddDatumData(data) {\n\t\t// check that it hasn't already been included\n\t\tfor (let prev of this.#datums.list) {\n\t\t\tif (eq(prev.toCbor(), data.toCbor())) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tlet lst = this.#datums.list;\n\t\tlst.push(data);\n\n\t\tthis.#datums = new ListData(lst);\n\t}\n\n\t/**\n\t * @internal\n\t * @param {NativeScript} script \n\t */\n\tattachNativeScript(script) {\n\t\tconst h = script.hash();\n\n\t\tif (this.#nativeScripts.some(other => eq(h, other.hash()))) {\n\t\t\treturn;\n\t\t} else {\n\t\t\tthis.#nativeScripts.push(script);\n\t\t}\n\t}\n\n\t/**\n\t * @internal\n\t * @param {UplcProgram} script \n\t */\n\tattachRefScript(script) {\n\t\tif (this.#refScripts.some(s => eq(s.hash(), script.hash()))) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.#refScripts.push(script);\n\t}\n\n\t/**\n\t * Throws error if script was already added before.\n\t * @internal\n\t * @param {UplcProgram} program \n\t * @param {boolean} isRef\n\t */\n\tattachPlutusScript(program, isRef = false) {\n\t\tconst h = program.hash();\n\n\t\tif (isRef) {\n\t\t\tassert(this.#scripts.every(s => !eq(s.hash(), h)));\n\n\t\t\tif (this.#refScripts.some(s => eq(s.hash(), h))) {\n\t\t\t\treturn;\n\t\t\t} else {\n\t\t\t\tthis.#refScripts.push(program);\n\t\t\t}\n\t\t} else {\n\t\t\tassert(this.#refScripts.every(s => !eq(s.hash(), h)));\n\n\t\t\tif (this.#scripts.some(s => eq(s.hash(), h))) {\n\t\t\t\treturn;\n\t\t\t} else {\n\t\t\t\tthis.#scripts.push(program);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Retrieves either a regular script or a reference script.\n\t * @internal\n\t * @param {Hash} scriptHash - can be ValidatorHash or MintingPolicyHash\n\t * @returns {UplcProgram}\n\t */\n\tgetUplcProgram(scriptHash) {\n\t\tconst p = this.scripts.find(s => eq(s.hash(), scriptHash.bytes));\n\n\t\tif (!(p instanceof UplcProgram)) {\n\t\t\tthrow new Error(\"not a uplc program\");\n\t\t}\n\n\t\treturn p;\n\t}\n\n\t/**\n\t * @internal\n\t * @param {TxBody} body\n\t */\n\tupdateRedeemerIndices(body) {\n\t\tfor (let redeemer of this.#redeemers) {\n\t\t\tredeemer.updateIndex(body);\n\t\t}\n\t}\n\n\t/**\n\t * @internal\n\t * @param {NetworkParams} networkParams \n\t * @returns {Hash | null} - returns null if there are no redeemers\n\t */\n\tcalcScriptDataHash(networkParams) {\n\t\tif (this.#redeemers.length > 0) {\n\t\t\tlet bytes = Cbor.encodeDefList(this.#redeemers);\n\n\t\t\tif (this.#datums.list.length > 0) {\n\t\t\t\tbytes = bytes.concat(this.#datums.toCbor());\n\t\t\t}\n\n\t\t\t// language view encodings?\n\t\t\tlet sortedCostParams = networkParams.sortedCostParams;\n\n\t\t\tbytes = bytes.concat(Cbor.encodeMap([[\n\t\t\t\tCbor.encodeInteger(1n), \n\t\t\t\tCbor.encodeDefList(sortedCostParams.map(cp => Cbor.encodeInteger(BigInt(cp)))),\n\t\t\t]]));\n\n\t\t\treturn new Hash(Crypto.blake2b(bytes));\n\t\t} else {\n\t\t\treturn null;\n\t\t}\n\t}\n\n\t/**\n\t * @internal\n\t * @param {NetworkParams} networkParams \n\t * @param {TxBody} body\n\t * @param {Redeemer} redeemer \n\t * @param {UplcData} scriptContext\n\t * @returns {Promise<Profile>} \n\t */\n\tasync executeRedeemer(networkParams, body, redeemer, scriptContext) {\n\t\tif (redeemer instanceof SpendingRedeemer) {\n\t\t\tconst idx = redeemer.inputIndex;\n\n\t\t\tconst origOutput = body.inputs[idx].origOutput;\n\n\t\t\tif (origOutput === null) {\n\t\t\t\tthrow new Error(\"expected origOutput to be non-null\");\n\t\t\t} else {\n\t\t\t\tconst datumData = origOutput.getDatumData();\n\n\t\t\t\tconst validatorHash = origOutput.address.validatorHash;\n\n\t\t\t\tif (validatorHash === null || validatorHash === undefined) {\n\t\t\t\t\tthrow new Error(\"expected validatorHash to be non-null\");\n\t\t\t\t} else {\n\t\t\t\t\tconst script = this.getUplcProgram(validatorHash);\n\n\t\t\t\t\tif (script.properties.name) {\n\t\t\t\t\t\tredeemer.setProgramName(script.properties.name);\n\t\t\t\t\t}\n\n\t\t\t\t\tconst args = [\n\t\t\t\t\t\tnew UplcDataValue(Site.dummy(), datumData), \n\t\t\t\t\t\tnew UplcDataValue(Site.dummy(), redeemer.data), \n\t\t\t\t\t\tnew UplcDataValue(Site.dummy(), scriptContext),\n\t\t\t\t\t];\n\n\t\t\t\t\tconst profile = await script.profile(args, networkParams);\n\n\t\t\t\t\tprofile.messages?.forEach(m => console.log(m));\n\n\t\t\t\t\tif (profile.result instanceof UserError || profile.result instanceof RuntimeError) {\t\n\t\t\t\t\t\tif (script.properties.name) {\n\t\t\t\t\t\t\tprofile.result.context[\"name\"] = script.properties.name;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tprofile.result.context[\"Datum\"] = bytesToHex(datumData.toCbor());\n\t\t\t\t\t\tprofile.result.context[\"Redeemer\"] = bytesToHex(redeemer.data.toCbor());\n\t\t\t\t\t\tprofile.result.context[\"ScriptContext\"] = bytesToHex(scriptContext.toCbor());\n\t\t\t\t\t\tthrow profile.result;\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn profile;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (redeemer instanceof MintingRedeemer) {\n\t\t\tconst mph = body.minted.mintingPolicies[redeemer.mphIndex];\n\n\t\t\tconst script = this.getUplcProgram(mph);\n\n\t\t\tif (script.properties.name) {\n\t\t\t\tredeemer.setProgramName(script.properties.name);\n\t\t\t}\n\n\t\t\tconst args = [\n\t\t\t\tnew UplcDataValue(Site.dummy(), redeemer.data),\n\t\t\t\tnew UplcDataValue(Site.dummy(), scriptContext),\n\t\t\t];\n\n\t\t\tconst profile = await script.profile(args, networkParams);\n\n\t\t\tprofile.messages?.forEach(m => console.log(m));\n\n\t\t\tif (profile.result instanceof UserError || profile.result instanceof RuntimeError) {\n\t\t\t\tif (script.properties.name) {\n\t\t\t\t\tprofile.result.context[\"name\"] = script.properties.name;\n\t\t\t\t}\n\t\t\t\tprofile.result.context[\"Redeemer\"] = bytesToHex(redeemer.data.toCbor());\n\t\t\t\tprofile.result.context[\"ScriptContext\"] = bytesToHex(scriptContext.toCbor());\n\t\t\t\tthrow profile.result;\n\t\t\t} else {\n\t\t\t\treturn profile;\n\t\t\t}\n\t\t} else {\n\t\t\tthrow new Error(\"unhandled redeemer type\");\n\t\t}\n\t}\n\n\t/**\n\t * Executes the redeemers in order to calculate the necessary ex units\n\t * @internal\n\t * @param {NetworkParams} networkParams \n\t * @param {TxBody} body - needed in order to create correct ScriptContexts\n\t * @param {Address} changeAddress - needed for dummy input and dummy output\n\t * @returns {Promise<void>}\n\t */\n\tasync executeScripts(networkParams, body, changeAddress) {\n\t\tawait this.executeRedeemers(networkParams, body, changeAddress);\n\n\t\tthis.executeNativeScripts(body);\n\t}\n\t\n\t/**\n\t * @internal\n\t * @param {TxBody} body\n\t */\n\texecuteNativeScripts(body) {\n\t\tconst ctx = new NativeContext(body.firstValidSlot, body.lastValidSlot, body.signers);\n\n\t\tthis.#nativeScripts.forEach(s => {\n\t\t\tif (!s.eval(ctx)) {\n\t\t\t\tthrow new Error(\"native script execution returned false\");\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * Executes the redeemers in order to calculate the necessary ex units\n\t * @internal\n\t * @param {NetworkParams} networkParams \n\t * @param {TxBody} body - needed in order to create correct ScriptContexts\n\t * @param {Address} changeAddress - needed for dummy input and dummy output\n\t * @returns {Promise<void>}\n\t */\n\tasync executeRedeemers(networkParams, body, changeAddress) {\n\t\tassert(config.N_DUMMY_INPUTS == 1 || config.N_DUMMY_INPUTS == 2, \"expected N_DUMMY_INPUTS==1 or N_DUMMY_INPUTS==2\");\n\t\tconst twoDummyInputs = config.N_DUMMY_INPUTS == 2;\n\n\t\tconst fee = networkParams.maxTxFee;\n\n\t\t// Additional 2 dummy inputs and 1 dummy output to compensate for balancing inputs and outputs that might be added later\n\t\t// The reason for needing 2 dummy inputs is that one needs to be at the beginning of the body.inputs list (TxId 0000...), and the other needs TxId ffffff (at the end of the list)\n\t\t// TxId ffffff overestimates the cost of printing the TxIds, and the dummy TxId 00000 overestimates iterating over body.inputs\n\t\t// We can't just prepend a dummy input with TxId ffffff, because some scripts might be relying on the order of the inputs (eg. counting votes in DAOs)\n\n\t\t// 1000 ADA should be enough as a dummy input/output\n\t\tconst dummyInput1 = new TxInput(\n\t\t\tnew TxOutputId(TxId.dummy(0), 0),\n\t\t\tnew TxOutput(\n\t\t\t\tchangeAddress,\n\t\t\t\tnew Value(fee + 1000_000_000n)\n\t\t\t)\n\t\t);\n\t\t\n\t\tconst dummyInput2 = new TxInput(\n\t\t\tnew TxOutputId(TxId.dummy(255), 999),\n\t\t\tnew TxOutput(\n\t\t\t\tchangeAddress,\n\t\t\t\tnew Value(1000_000_000n)\n\t\t\t)\n\t\t);\n\n\t\tconst dummyOutput = new TxOutput(\n\t\t\tchangeAddress,\n\t\t\tnew Value(twoDummyInputs ? 2000_000_000n : 1000_000_000n)\n\t\t);\n\n\t\tbody.setFee(fee);\n\t\tbody.addInput(dummyInput1, false);\n\t\tif (twoDummyInputs) {\n\t\t\tbody.addInput(dummyInput2, false);\n\t\t}\n\t\tbody.addOutput(dummyOutput);\n\n\t\tthis.updateRedeemerIndices(body);\n\n\t\tfor (let i = 0; i < this.#redeemers.length; i++) {\n\t\t\tconst redeemer = this.#redeemers[i];\n\n\t\t\tconst scriptContext = body.toScriptContextData(networkParams, this.#redeemers, this.#datums, i);\n\n\t\t\tconst cost = await this.executeRedeemer(networkParams, body, redeemer, scriptContext);\n\n\t\t\tredeemer.setProfile(cost);\n\t\t}\n\n\t\tbody.removeInput(dummyInput1);\n\t\tif (twoDummyInputs) {\n\t\t\tbody.removeInput(dummyInput2);\n\t\t}\n\t\tbody.removeOutput(dummyOutput);\n\n\t\tthis.updateRedeemerIndices(body);\n\t}\n\n\t/**\n\t * Reruns all the redeemers to make sure the ex budgets are still correct (can change due to outputs added during rebalancing)\n\t * @internal\n\t * @param {NetworkParams} networkParams \n\t * @param {TxBody} body \n\t */\n\tasync checkExecutionBudgets(networkParams, body) {\n\t\t// when check the tx is assumed to be finalized, so we can use the actual txId\n\t\tconst txId = new TxId(body.hash());\n\n\t\tfor (let i = 0; i < this.#redeemers.length; i++) {\n\t\t\tconst redeemer = this.#redeemers[i];\n\t\t\t\n\t\t\tconst scriptContext = body.toScriptContextData(networkParams, this.#redeemers, this.#datums, i, txId);\n\n\t\t\tconst cost = await this.executeRedeemer(networkParams, body, redeemer, scriptContext);\n\n\t\t\tif (redeemer.memCost < cost.mem) {\n\t\t\t\tthrow new Error(`internal finalization error, redeemer mem budget too low (${redeemer.memCost} < ${cost.mem})`);\n\t\t\t} else if (redeemer.cpuCost < cost.cpu) {\n\t\t\t\tthrow new Error(`internal finalization error, redeemer cpu budget too low (${redeemer.cpuCost} < ${cost.cpu})`);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Throws error if execution budget is exceeded\n\t * @internal\n\t * @param {NetworkParams} networkParams\n\t */\n\tcheckExecutionBudgetLimits(networkParams) {\n\t\tlet totalMem = 0n;\n\t\tlet totalCpu = 0n;\n\n\t\tfor (let redeemer of this.#redeemers) {\n\t\t\ttotalMem += redeemer.memCost;\n\t\t\ttotalCpu += redeemer.cpuCost;\n\t\t}\n\n\t\tlet [maxMem, maxCpu] = networkParams.maxTxExecutionBudget;\n\n\t\tif (totalMem > BigInt(maxMem)) {\n\t\t\tthrow new Error(`execution budget exceeded for mem (${totalMem.toString()} > ${maxMem.toString()})\\n${this.profileReport.split(\"\\n\").map(l => \"  \" + l).join(\"\\n\")}`);\n\t\t}\n\n\t\tif (totalCpu > BigInt(maxCpu)) {\n\t\t\tthrow new Error(`execution budget exceeded for cpu (${totalCpu.toString()} > ${maxCpu.toString()})\\n${this.profileReport.split(\"\\n\").map(l => \"  \" + l).join(\"\\n\")}`);\n\t\t}\n\t}\n\n\t/**\n\t * Compiles a report of each redeemer execution.\n\t * Only works after the tx has been finalized.\n\t * @type {string}\n\t */\n\tget profileReport() {\n\t\t/**\n\t\t * @type {string[]}\n\t\t */\n\t\tlet report = [];\n\n\t\tfor (let redeemer of this.#redeemers) {\n\t\t\tlet header = \"\";\n\n\t\t\tif (redeemer instanceof SpendingRedeemer) {\n\t\t\t\theader = `SpendingRedeemer ${redeemer.inputIndex.toString()}`;\n\t\t\t} else if (redeemer instanceof MintingRedeemer) {\n\t\t\t\theader = `MintingRedeemer ${redeemer.mphIndex.toString()}`;\n\t\t\t} else {\n\t\t\t\tthrow new Error(\"unhandled Redeemer type\");\n\t\t\t}\n\n\t\t\theader += `${redeemer.programName ? ` (${redeemer.programName})` : \"\"}: mem=${redeemer.memCost.toString()}, cpu=${redeemer.cpuCost.toString()}`;\n\n\t\t\treport.push(header);\n\n\t\t\tif (redeemer.profile.builtins) {\n\t\t\t\treport.push(`  builtins`);\n\n\t\t\t\tfor (let k in redeemer.profile.builtins) {\n\t\t\t\t\tconst c = redeemer.profile.builtins[k];\n\t\t\t\t\treport.push(`    ${k}: mem=${c.mem}, cpu=${c.cpu}`);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (redeemer.profile.terms) {\n\t\t\t\treport.push(`  terms`);\n\n\t\t\t\tfor (let k in redeemer.profile.terms) {\n\t\t\t\t\tconst c = redeemer.profile.terms[k];\n\n\t\t\t\t\treport.push(`    ${k}: mem=${c.mem}, cpu=${c.cpu}`);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn report.join(\"\\n\");\n\t}\n}\n\n/**\n * TxInput base-type\n */\nexport class TxInput extends CborData {\n\t/** \n\t * @readonly\n\t * @type {TxOutputId} \n\t */\n\toutputId;\n\n\t/** \n\t * @type {null | TxOutput} \n\t */\n\t#output;\n\n\t/**\n\t * @param {TxOutputId} outputId \n\t * @param {null | TxOutput} output - used during building, not part of serialization\n\t */\n\tconstructor(outputId, output = null) {\n\t\tsuper();\n\t\tthis.outputId = outputId;\n\t\tthis.#output = output;\n\t}\n\t\n\t/**\n\t * @deprecated\n\t * @type {TxId}\n\t */\n\tget txId() {\n\t\treturn this.outputId.txId;\n\t}\n\n\t/**\n\t * @deprecated\n\t * @type {number}\n\t */\n\tget utxoIdx() {\n\t\treturn Number(this.outputId.utxoIdx);\n\t}\n\n\t/**\n\t * \n\t * @param {TxInput} other \n\t * @returns {boolean}\n\t */\n\teq(other) {\n\t\treturn other.outputId.eq(this.outputId);\n\t}\n\n\t/**\n\t * @internal\n\t * @returns {boolean}\n\t */\n\thasOrigOutput() {\n\t\treturn this.#output !== null;\n\t}\n\n\t/**\n\t * @internal\n\t * @param {TxOutput} output \n\t */\n\tsetOrigOutput(output) {\n\t\tthis.#output = output;\n\t}\n\n\t/**\n\t * \n\t * @type {TxOutput}\n\t */\n\tget output() {\n\t\tif (this.#output === null) {\n\t\t\tthrow new Error(\"underlying output data not set\");\n\t\t} else {\n\t\t\treturn this.#output;\n\t\t}\n\t}\n\n\t/**\n\t * Backward compatible alias for `TxInput.output`\n\t * @type {TxOutput}\n\t */\n\tget origOutput() {\n\t\treturn this.output\n\t}\n\n\t/**\n\t * Shortcut\n\t * @type {Value}\n\t */\n\tget value() {\n\t\treturn assertDefined(this.#output).value;\n\t}\n\n\t/**\n\t * Shortcut\n\t * @type {Address}\n\t */\n\tget address() {\n\t\treturn assertDefined(this.#output).address;\n\t}\n\n\t/**\n\t * @internal\n\t * @returns {ConstrData}\n\t */\n\ttoOutputIdData() {\n\t\treturn this.outputId._toUplcData();\n\t}\n\n\t/**\n\t * @internal\n\t * @returns {ConstrData}\n\t */\n\ttoData() {\n\t\tif (this.#output === null) {\n\t\t\tthrow new Error(\"expected to be non-null\");\n\t\t} else {\n\t\t\treturn new ConstrData(0, [\n\t\t\t\tthis.toOutputIdData(),\n\t\t\t\tthis.#output.toData(),\n\t\t\t]);\n\t\t}\n\t}\n\n\t/**\n\t * @internal\n\t * @param {UplcData} data \n\t * @returns {TxInput}\n\t */\n\tstatic fromUplcData(data) {\n\t\tassert(data.index == 0);\n\t\tconst fields = data.fields;\n\n\t\tconst outputId = TxOutputId.fromUplcData(fields[0]);\n\n\t\treturn new TxInput(\n\t\t\toutputId,\n\t\t\tTxOutput.fromUplcData(fields[1])\n\t\t);\n\t}\n\n\t/**\n\t * @returns {number[]}\n\t */\n\ttoCbor() {\n\t\t//return Cbor.encodeTuple([\n\t\treturn this.outputId.toCbor();//,\n\t\t//\tthis.origOutput.toCbor()\n\t\t//]);\n\t}\n\n\t/**\n\t * @returns {number[]}\n\t */\n\ttoFullCbor() {\n\t\treturn Cbor.encodeTuple([\n\t\t\tthis.outputId.toCbor(),\n\t\t\tthis.origOutput.toCbor()\n\t\t]);\n\t}\n\n\t/**\n\t * Deserializes TxOutput format used by wallet connector\n\t * @param {string | number[]} rawBytes\n\t * @returns {TxInput}\n\t */\n\tstatic fromFullCbor(rawBytes) {\n\t\tconst bytes = Array.isArray(rawBytes) ? rawBytes : hexToBytes(rawBytes);\n\n\t\t/** @type {null | TxOutputId} */\n\t\tlet outputId = null;\n\n\t\t/** @type {null | TxOutput} */\n\t\tlet output = null;\n\n\t\tCbor.decodeTuple(bytes, (i, fieldBytes) => {\n\t\t\tswitch(i) {\n\t\t\t\tcase 0:\n\t\t\t\t\toutputId = TxOutputId.fromCbor(fieldBytes);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 1:\n\t\t\t\t\toutput = TxOutput.fromCbor(fieldBytes);\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new Error(\"unrecognized field\");\n\t\t\t}\n\t\t});\n\n\t\tif (outputId !== null && output !== null) {\n\t\t\treturn new TxInput(outputId, output);\n\t\t} else {\n\t\t\tthrow new Error(\"unexpected\");\n\t\t}\n\t}\n\n\t/**\n\t * @param {string | number[]} rawBytes \n\t * @returns {TxInput}\n\t */\n\tstatic fromCbor(rawBytes) {\n\t\tconst outputId = TxOutputId.fromCbor(rawBytes);\n\n\t\treturn new TxInput(outputId, null);\n\t}\n\n\t/**\n\t * Tx inputs must be ordered. \n\t * The following function can be used directly by a js array sort\n\t * @internal\n\t * @param {TxInput} a\n\t * @param {TxInput} b\n\t * @returns {number}\n\t */\n\tstatic comp(a, b) {\n\t\treturn TxOutputId.comp(a.outputId, b.outputId);\n\t} \n\n\t/**\n\t * @param {TxInput[]} inputs\n\t * @returns {Value}\n\t */\n\tstatic sumValue(inputs) {\n\t\tlet sum = new Value();\n\n\t\tfor (let input of inputs) {\n\t\t\tsum = sum.add(input.value);\n\t\t}\n\n\t\treturn sum;\n\t}\n\n\t/**\n\t * @returns {Object}\n\t */\n\tdump() {\n\t\treturn {\n\t\t\toutputId: this.outputId.toString(),\n\t\t\toutput: this.#output !== null ? this.#output.dump() : null\n\t\t};\n\t}\n}\n\n/**\n * Use TxInput instead\n * @deprecated\n */\nexport class UTxO extends TxInput {}\n\n/**\n * Use TxInput instead\n * @deprecated\n */\nexport class TxRefInput extends TxInput {}\n\n/**\n * Represents a transaction output that is used when building a transaction.\n */\nexport class TxOutput extends CborData {\n\t/** \n\t * @type {Address} \n\t */\n\t#address;\n\n\t/** \n\t * @type {Value} \n\t */\n\t#value;\n\n\t/** \n\t * @type {null | Datum} \n\t */\n\t#datum;\n\n\t/**\n\t * @type {null | UplcProgram} \n\t */\n\t#refScript;\n\n\t/**\n\t * Constructs a `TxOutput` instance using an `Address`, a `Value`, an optional `Datum`, and optional `UplcProgram` reference script.\n\t * @param {Address} address \n\t * @param {Value} value \n\t * @param {null | Datum} datum \n\t * @param {null | UplcProgram} refScript \n\t */\n\tconstructor(address, value, datum = null, refScript = null) {\n\t\tassert(datum === null || datum instanceof Datum); // check this explicitely because caller might be using this constructor without proper type-checking\n\t\tsuper();\n\t\tthis.#address = address;\n\t\tthis.#value = value;\n\t\tthis.#datum = datum;\n\t\tthis.#refScript = refScript;\n\t}\n\n\t/**\n\t * Get the `Address` to which the `TxOutput` will be sent.\n\t * @type {Address}\n\t */\n\tget address() {\n\t\treturn this.#address;\n\t}\n\n\t/**\n\t * Mutation is handy when correctin the quantity of lovelace in a utxo\n\t * @param {Address} addr\n\t */\n\tsetAddress(addr) {\n\t\tthis.#address = addr;\n\t}\n\n\t/**\n\t * Get the `Value` contained in the `TxOutput`.\n\t * @type {Value}\n\t */\n\tget value() {\n\t\treturn this.#value;\n\t}\n\n\t/**\n\t * Mutation is handy when correcting the quantity of lovelace in a utxo\n\t * @param {Value} val\n\t */\n\tsetValue(val) {\n\t\tthis.#value = val;\n\t}\n\n\t/**\n\t * Get the optional `Datum` associated with the `TxOutput`.\n\t * @type {null | Datum}\n\t */\n\tget datum() {\n\t\treturn this.#datum;\n\t}\n\n\t/**\n\t * Mutation is handy when correctin the quantity of lovelace in a utxo \n\t * @param {Datum} datum \n\t */\n\tsetDatum(datum) {\n\t\tthis.#datum = datum;\n\t}\n\n\t/**\n\t * @returns {UplcData}\n\t */\n\tgetDatumData() {\n\t\tif (this.#datum === null) {\n\t\t\tthrow new Error(\"no datum data available\");\n\t\t} else {\n\t\t\tlet data = this.#datum.data;\n\t\t\tif (data === null) {\n\t\t\t\tthrow new Error(\"no datum data available\");\n\t\t\t} else {\n\t\t\t\treturn data;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @type {null | UplcProgram}\n\t */\n\tget refScript() {\n\t\treturn this.#refScript;\n\t}\n\n\t/**\n\t * @returns {number[]}\n\t */\n\ttoCbor() {\n\t\tif ((this.#datum === null || this.#datum instanceof HashedDatum) && this.#refScript === null && !config.STRICT_BABBAGE) {\n\t\t\t// this is needed to match eternl wallet (de)serialization (annoyingly eternl deserializes the tx and then signs its own serialization)\n\t\t\t// hopefully cardano-cli signs whatever serialization we choose (so we use the eternl variant in order to be compatible with both)\n\n\t\t\tlet fields = [\n\t\t\t\tthis.#address.toCbor(),\n\t\t\t\tthis.#value.toCbor()\n\t\t\t];\n\n\t\t\tif (this.#datum !== null) {\n\t\t\t\tif (this.#datum instanceof HashedDatum) {\n\t\t\t\t\tfields.push(this.#datum.hash.toCbor());\n\t\t\t\t} else {\n\t\t\t\t\tthrow new Error(\"unexpected\");\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn Cbor.encodeTuple(fields);\n\t\t} else {\n\t\t\t/** @type {Map<number, number[]>} */\n\t\t\tlet object = new Map();\n\n\t\t\tobject.set(0, this.#address.toCbor());\n\t\t\tobject.set(1, this.#value.toCbor());\n\n\t\t\tif (this.#datum !== null) {\n\t\t\t\tobject.set(2, this.#datum.toCbor());\n\t\t\t}\n\n\t\t\tif (this.#refScript !== null) {\n\t\t\t\tobject.set(3, Cbor.encodeTag(24n).concat(Cbor.encodeBytes(\n\t\t\t\t\tCbor.encodeTuple([\n\t\t\t\t\t\tCbor.encodeInteger(BigInt(this.#refScript.versionTag())),\n\t\t\t\t\t\tthis.#refScript.toCbor()\n\t\t\t\t\t])\n\t\t\t\t)));\n\t\t\t}\n\n\t\t\treturn Cbor.encodeObject(object);\n\t\t}\n\t}\n\n\t/**\n\t * @param {number[]} bytes \n\t * @returns {TxOutput}\n\t */\n\tstatic fromCbor(bytes) {\n\t\t/** \n\t\t * @type {null | Address} \n\t\t */\n\t\tlet address = null;\n\n\t\t/** \n\t\t * @type {null | Value} \n\t\t */\n\t\tlet value = null;\n\n\t\t/** \n\t\t * @type {null | Datum} \n\t\t */\n\t\tlet outputDatum = null;\n\n\t\t/** \n\t\t * @type {null | UplcProgram} \n\t\t */\n\t\tlet refScript = null;\n\n\t\tif (Cbor.isObject(bytes)) {\n\t\t\tCbor.decodeObject(bytes, (i, fieldBytes) => {\n\t\t\t\tswitch(i) { \n\t\t\t\t\tcase 0:\n\t\t\t\t\t\taddress = Address.fromCbor(fieldBytes);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 1:\n\t\t\t\t\t\tvalue = Value.fromCbor(fieldBytes);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 2:\n\t\t\t\t\t\toutputDatum = Datum.fromCbor(fieldBytes);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 3:\n\t\t\t\t\t\tassert(Cbor.decodeTag(fieldBytes) == 24n);\n\n\t\t\t\t\t\tlet tupleBytes = Cbor.decodeBytes(fieldBytes);\n\n\t\t\t\t\t\tlet refScriptType = -1;\n\n\t\t\t\t\t\tCbor.decodeTuple(tupleBytes, (tupleIdx, innerTupleBytes) => {\n\t\t\t\t\t\t\tassert(refScript === null);\n\n\t\t\t\t\t\t\tswitch(tupleIdx) {\n\t\t\t\t\t\t\t\tcase 0:\n\t\t\t\t\t\t\t\t\trefScriptType = Number(Cbor.decodeInteger(innerTupleBytes));\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\tcase 1:\n\t\t\t\t\t\t\t\t\tswitch(refScriptType) {\n\t\t\t\t\t\t\t\t\t\tcase 0:\n\t\t\t\t\t\t\t\t\t\t\tthrow new Error(\"native refScript not handled\");\n\t\t\t\t\t\t\t\t\t\tcase 1:\n\t\t\t\t\t\t\t\t\t\t\tconsole.log(\"Warning: deserializing PlutusV1 refScript as PlutusV2 refScript\");\n\t\t\t\t\t\t\t\t\t\t\trefScript = UplcProgram.fromCbor(innerTupleBytes);\t\t\n\t\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t\tcase 2:\n\t\t\t\t\t\t\t\t\t\t\trefScript = UplcProgram.fromCbor(innerTupleBytes);\t\t\n\t\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\t\t\tthrow new Error(`unhandled refScript type ${refScriptType}`);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\tthrow new Error(\"unhandled refScript format\");\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tthrow new Error(\"unrecognized field\");\n\t\t\t\t}\n\t\t\t});\n\t\t} else if (Cbor.isTuple(bytes)) {\n\t\t\t// this is the pre-vasil format, which is still sometimes returned by wallet connector functions\n\t\t\tCbor.decodeTuple(bytes, (i, fieldBytes) => {\n\t\t\t\tswitch(i) { \n\t\t\t\t\tcase 0:\n\t\t\t\t\t\taddress = Address.fromCbor(fieldBytes);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 1:\n\t\t\t\t\t\tvalue = Value.fromCbor(fieldBytes);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 2:\n\t\t\t\t\t\toutputDatum = new HashedDatum(DatumHash.fromCbor(fieldBytes));\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tthrow new Error(\"unrecognized field\");\n\t\t\t\t}\n\t\t\t});\n\t\t} else {\n\t\t\tthrow new Error(\"expected object or tuple for TxOutput\");\n\t\t}\n\n\t\tif (address === null || value === null) {\n\t\t\tthrow new Error(\"unexpected\");\n\t\t} else {\n\t\t\treturn new TxOutput(address, value, outputDatum, refScript);\n\t\t}\n\t}\n\n\t/**\n\t * @returns {Object}\n\t */\n\tdump() {\n\t\treturn {\n\t\t\taddress: this.#address.dump(),\n\t\t\tvalue: this.#value.dump(),\n\t\t\tdatum: this.#datum === null ? null : this.#datum.dump(),\n\t\t\trefScript: this.#refScript === null ? null : bytesToHex(this.#refScript.toCbor()),\n\t\t};\n\t}\n\n\t/**\n\t * @returns {ConstrData}\n\t */\n\ttoData() {\n\t\tlet datum = new ConstrData(0, []); // none\n\t\tif (this.#datum !== null) {\n\t\t\tdatum = this.#datum.toData();\n\t\t}\n\n\t\treturn new ConstrData(0, [\n\t\t\tthis.#address._toUplcData(),\n\t\t\tthis.#value._toUplcData(),\n\t\t\tdatum,\n\t\t\tthis.#refScript ? new ConstrData(0, [new ByteArrayData(this.#refScript.hash())]) : new ConstrData(1, [])\n\t\t]);\n\t}\n\n\t/**\n\t * @param {UplcData} data \n\t * @returns {TxOutput}\n\t */\n\tstatic fromUplcData(data) {\n\t\tassert(data.index == 0);\n\t\tassert(data.fields.length == 4);\n\n\t\treturn new TxOutput(\n\t\t\tAddress.fromUplcData(data.fields[0]),\n\t\t\tValue.fromUplcData(data.fields[1]),\n\t\t\tDatum.fromUplcData(data.fields[2])\n\t\t);\n\t}\n\n\t/**\n\t * Each UTxO must contain some minimum quantity of lovelace to avoid that the blockchain is used for data storage.\n\t * @param {NetworkParams} networkParams\n\t * @returns {bigint}\n\t */\n\tcalcMinLovelace(networkParams) {\n\t\tlet lovelacePerByte = networkParams.lovelacePerUTXOByte;\n\n\t\tlet correctedSize = this.toCbor().length + 160; // 160 accounts for some database overhead?\n\n\t\treturn BigInt(correctedSize)*BigInt(lovelacePerByte);\n\t}\n\n\t/**\n\t * Makes sure the `TxOutput` contains the minimum quantity of lovelace.\n\t * The network requires this to avoid the creation of unusable dust UTxOs.\n\t * \n\t * Optionally an update function can be specified that allows mutating the datum of the `TxOutput` to account for an increase of the lovelace quantity contained in the value.\n\t * @param {NetworkParams} networkParams \n\t * @param {null | ((output: TxOutput) => void)} updater\n\t */\n\tcorrectLovelace(networkParams, updater = null) {\n\t\tlet minLovelace = this.calcMinLovelace(networkParams);\n\n\t\twhile (this.#value.lovelace < minLovelace) {\n\t\t\tthis.#value.setLovelace(minLovelace);\n\n\t\t\tif (updater != null) {\n\t\t\t\tupdater(this);\n\t\t\t}\n\n\t\t\tminLovelace = this.calcMinLovelace(networkParams);\n\t\t}\n\t}\n}\n\n/**\n * A `DCert` represents a staking action (eg. withdrawing rewards, delegating to another pool).\n */\nexport class DCert extends CborData {\n\t#certType;\n\n\t/**\n     * @param {number} certType\n     */\n\tconstructor(certType) {\n\t\tsuper();\n\t\tthis.#certType = certType;\n\t}\n\n\t/**\n\t * Get certificate type.\n\t * @type {number}\n\t */\n\tget certType() {\n\t\treturn this.#certType;\n\t}\n\n\t/**\n\t * Get stake hash.\n\t * @type {PubKeyHash | StakingValidatorHash}\n\t */\n\tget stakeHash() {\n\t\tthrow new Error(\"not yet implemented\");\n\t}\n\n\t/**\n\t * Get stake credential type.\n\t * @type {number}\n\t */\n\tget credentialType() {\n\t\tthrow new Error(\"not yet implemented\");\n\t}\n\n\n\t/**\n     * @returns {number[]}\n     */\n    typeToCbor() {\n        return Cbor.encodeInteger(BigInt(this.#certType));\n    }\n\n\t/**\n\t * @param {string | number[]} raw\n\t * @returns {DCert}\n\t */\n\tstatic fromCbor(raw) {\n\t\tconst bytes = (typeof raw == \"string\") ? hexToBytes(raw) : raw;\n\n\t\tif (bytes[0] == 0) {\n            bytes.shift();\n        }\n\n\t\tlet certType = -1;\n\t\tlet stakeHash, stakeHashType, poolHash;\n\n\t\t/**\n         * @type {DCert | null}\n         */\n        let cert = null;\n\n\t\tCbor.decodeTuple(bytes, (i, fieldBytes) => {\n\t\t\tif (i == 0) {\n                certType = Number(Cbor.decodeInteger(fieldBytes))\n            } else {\n\t\t\t\tswitch(certType) {\n\t\t\t\t\tcase 0: // fall through to case 1\n\t\t\t\t\tcase 1: // fall through to case 2\n\t\t\t\t\tcase 2:\n\t\t\t\t\t\tif (i == 1)\t{\n\t\t\t\t\t\t\tCbor.decodeList(fieldBytes, (i, itemBytes) => {\n\t\t\t\t\t\t\t\tif (i == 0){\n\t\t\t\t\t\t\t\t\tstakeHashType = Number(Cbor.decodeInteger(itemBytes));\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tif (stakeHashType == 0) { stakeHash = PubKeyHash.fromCbor(itemBytes) }\n\t\t\t\t\t\t\t\t\telse if (stakeHashType == 1) { stakeHash = StakingValidatorHash.fromCbor(itemBytes) }\n\t\t\t\t\t\t\t\t\telse { throw new Error(\"invalid stake credential\") }\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tif (certType == 0) cert = new DCertRegister(stakeHash);\n\t\t\t\t\t\t\tif (certType == 1) cert = new DCertDeregister(stakeHash);\n\t\t\t\t\t\t} else if (i == 2){\n\t\t\t\t\t\t\tpoolHash = PubKeyHash.fromCbor(Cbor.decodeBytes(fieldBytes));\n\t\t\t\t\t\t\tif (certType == 2) cert = new DCertDelegate(stakeHash, poolHash);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 3: // fall through\n\t\t\t\t\tcase 4: // fall through\n\t\t\t\t\tcase 5: // fall through\n\t\t\t\t\tcase 6:\n\t\t\t\t\t\tthrow new Error(\"DCert type not yet implemented\");\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tthrow new Error(\"invalid DCert type\");\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tif (!cert) {\n            throw new Error(\"unable to deserialize certificate\");\n        } else {\n            return cert;\n        }\n\t}\n\n\t/**\n\t * `DCertProps.type` can be:\n\t *     `0` for stake registration\n\t *     `1` for stake de-registration\n\t *     `2` for stake delegation\n\t *     `3` for stake pool registration (not yet implemented)\n\t *     `4` for stake pool retirement (not yet implemented)\n\t *     `5` for genesis key delegation (not yet implemented)\n\t *     `6` for moving instantaneous rewards (not yet implemented)\n\t *\n\t * `DCertProps.credential.type` can be:\n\t *     `0` for staking address key hash\n\t *     `1` for staking validator key hash (script hash)\n\t *\n\t * `DCertProps.poolHash` is needed only for stake delegation.\n\t * @typedef {{\n\t *   type: 0 | 1 | 2,\n\t *   credential: {\n\t *     type: 0 | 1,\n\t *     hash: string\n\t *   },\n\t *   poolHash?: string\n\t * }} DCertProps\n\t */\n\n\t/**\n\t * Create a DCert from a given json parameter.\n     * @param {string | DCertProps} json\n     * @returns {DCert}\n     */\n    static fromJson(json) {\n\t\tconst obj = (typeof json == \"string\") ? JSON.parse(json) : json;\n        const certType = obj?.type;\n\t\tconst stakeHashType = obj.credential.type;\n\n\t\tif (typeof certType !== \"number\") {\n            throw new Error(\"invalid or no certificate type specified\");\n        }\n\n\t\tlet stakeHash, poolHash;\n\n\t\t/**\n         * @type {DCert | null}\n         */\n        let cert = null;\n\n\t\tswitch (certType) {\n\t\t\tcase 0: // fall through to case 1\n\t\t\tcase 1: // fall through to case 2\n\t\t\tcase 2:\n\t\t\t\tstakeHash = stakeHashType === 0\n\t\t\t\t          ? PubKeyHash.fromHex(obj.credential.hash)\n\t\t\t\t\t\t  : StakingValidatorHash.fromHex(obj.credential.hash);\n\t\t\t\tif (certType == 0) cert = new DCertRegister(stakeHash);\n\t\t\t\tif (certType == 1) cert = new DCertDeregister(stakeHash);\n\t\t\t\tif (certType == 2){\n\t\t\t\t\tpoolHash = PubKeyHash.fromHex(obj.poolHash)\n\t\t\t\t\tcert = new DCertDelegate(stakeHash, poolHash);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 3: // fall through\n\t\t\tcase 4: // fall through\n\t\t\tcase 5: // fall through\n\t\t\tcase 6:\n\t\t\t\tthrow new Error(\"DCert type not yet implemented\");\n\t\t\tdefault:\n\t\t\t\tthrow new Error(\"invalid DCert type\");\n\t\t}\n\n\t\tif (!cert) {\n            throw new Error(\"unable to deserialize certificate\");\n        } else {\n            return cert;\n        }\n\t}\n\n\t/**\n\t * @param {UplcData} data \n\t * @returns {DCert}\n\t */\n\tstatic fromUplcData(data) {\n\t\tthrow new Error(\"not yet implemented\");\n\t}\n\n\t/**\n\t * @returns {ConstrData}\n\t */\n\ttoData() {\n\t\tthrow new Error(\"not yet implemented\");\n\t}\n\n\t/**\n\t * @returns {Object}\n\t */\n\tdump() {\n\t\treturn {}; // placeholder here only, to satisfy call from TxBody.dump (type checking); overwritten by child classes\n\t}\n}\n\n/**\n * @internal\n */\nexport class DCertRegister extends DCert {\n\t/**\n\t * @type {PubKeyHash | StakingValidatorHash}\n\t */\n\t#stakeHash;\n\n\t/**\n\t * @type {number}\n\t */\n\t#credentialType;\n\n\t/**\n     * @param {PubKeyHash | StakingValidatorHash} stakeHash\n     */\n    constructor(stakeHash) {\n        super(0);\n        assert(stakeHash instanceof PubKeyHash || stakeHash instanceof StakingValidatorHash);\n        this.#stakeHash = stakeHash;\n\t\tthis.#credentialType = stakeHash instanceof PubKeyHash ? 0 : 1;\n    }\n\n\t/**\n\t * Get stake hash.\n\t * @type {PubKeyHash | StakingValidatorHash}\n\t */\n\tget stakeHash() {\n\t\treturn this.#stakeHash;\n\t}\n\t\n\t/**\n\t * Get stake credential type.\n\t * @type {number}\n\t */\n\tget credentialType() {\n\t\treturn this.#credentialType;\n\t}\n\n\t/**\n     * @returns {number[]}\n     */\n    toCbor() {\n        return Cbor.encodeTuple([\n            this.typeToCbor(),\n            Cbor.encodeDefList([\n\t\t\t\tCbor.encodeInteger(BigInt(this.#credentialType)),\n\t\t\t\tthis.#stakeHash.toCbor()\n\t\t\t])\n        ]);\n    }\n\n    /**\n\t * @returns {Object}\n\t */\n\tdump() {\n\t\treturn {\n\t\t\tcertType: \"stake_registration\",\n\t\t\tstakeCredential: {\n\t\t\t\ttype: this.#credentialType,\n\t\t\t\thash: this.#stakeHash.dump()\n\t\t\t}\n\t\t};\n\t}\n}\n\n/**\n * @internal\n */\nexport class DCertDeregister extends DCert {\n\t/**\n\t * @type {PubKeyHash | StakingValidatorHash}\n\t */\n\t#stakeHash;\n\n\t/**\n\t * @type {number}\n\t */\n\t#credentialType;\n\n\t/**\n     * @param {PubKeyHash | StakingValidatorHash} stakeHash\n     */\n    constructor(stakeHash) {\n        super(1);\n        assert(stakeHash instanceof PubKeyHash || stakeHash instanceof StakingValidatorHash);\n        this.#stakeHash = stakeHash;\n\t\tthis.#credentialType = stakeHash instanceof PubKeyHash ? 0 : 1;\n    }\n\n\t/**\n\t * Get stake hash.\n\t * @type {PubKeyHash | StakingValidatorHash}\n\t */\n\tget stakeHash() {\n\t\treturn this.#stakeHash;\n\t}\n\t\n\t/**\n\t * Get stake credential type.\n\t * @type {number}\n\t */\n\tget credentialType() {\n\t\treturn this.#credentialType;\n\t}\n\n\t/**\n     * @returns {number[]}\n     */\n    toCbor() {\n        return Cbor.encodeTuple([\n            this.typeToCbor(),\n            Cbor.encodeDefList([\n\t\t\t\tCbor.encodeInteger(BigInt(this.#credentialType)),\n\t\t\t\tthis.#stakeHash.toCbor()\n\t\t\t])\n        ]);\n    }\n\n    /**\n\t * @returns {Object}\n\t */\n\tdump() {\n\t\treturn {\n\t\t\tcertType: \"stake_deregistration\",\n\t\t\tstakeCredential: {\n\t\t\t\ttype: this.#credentialType,\n\t\t\t\thash: this.#stakeHash.dump()\n\t\t\t}\n\t\t};\n\t}\n}\n\n/**\n * @internal\n */\nexport class DCertDelegate extends DCert {\n\t/**\n\t * @type {PubKeyHash | StakingValidatorHash}\n\t */\n\t#stakeHash;\n\n\t/**\n\t * @type {number}\n\t */\n\t#credentialType;\n\n\t/**\n\t * @type {PubKeyHash}\n\t */\n\t#poolHash;\n\n\t/**\n     * @param {PubKeyHash | StakingValidatorHash} stakeHash\n\t * @param {PubKeyHash} poolHash\n     */\n    constructor(stakeHash, poolHash) {\n        super(2);\n        assert(stakeHash instanceof PubKeyHash || stakeHash instanceof StakingValidatorHash);\n\t\tassert(poolHash instanceof PubKeyHash);\n        this.#stakeHash = stakeHash;\n\t\tthis.#credentialType = stakeHash instanceof PubKeyHash ? 0 : 1;\n\t\tthis.#poolHash = poolHash;\n    }\n\n\t/**\n\t * Get stake hash.\n\t * @type {PubKeyHash | StakingValidatorHash}\n\t */\n\tget stakeHash() {\n\t\treturn this.#stakeHash;\n\t}\n\n\t/**\n\t * Get stake credential type.\n\t * @type {number}\n\t */\n\tget credentialType() {\n\t\treturn this.#credentialType;\n\t}\n\n\t/**\n\t * Get stake pool hash.\n\t * @type {PubKeyHash}\n\t */\n\tget poolHash() {\n\t\treturn this.#poolHash;\n\t}\n\n\t/**\n     * @returns {number[]}\n     */\n    toCbor() {\n        return Cbor.encodeTuple([\n            this.typeToCbor(),\n            Cbor.encodeDefList([\n\t\t\t\tCbor.encodeInteger(BigInt(this.#credentialType)),\n\t\t\t\tthis.#stakeHash.toCbor()\n\t\t\t]),\n\t\t\tthis.#poolHash.toCbor()\n        ]);\n    }\n\n    /**\n\t * @returns {Object}\n\t */\n\tdump() {\n\t\treturn {\n\t\t\tcertType: \"stake_delegation\",\n\t\t\tstakeCredential: {\n\t\t\t\ttype: this.#credentialType,\n\t\t\t\thash: this.#stakeHash.dump()\n\t\t\t},\n\t\t\tpoolHash: this.#poolHash.dump()\n\t\t};\n\t}\n}\n\n/**\n * @internal\n */\nexport class DCertRegisterPool extends DCert {\n\n}\n\n/**\n * @internal\n */\nexport class DCertRetirePool extends DCert {\n\n}\n\n/**\n * Wrapper for Cardano stake address bytes. An StakeAddress consists of two parts internally:\n *   - Header (1 byte, see CIP 8)\n *   - Staking witness hash (28 bytes that represent the `PubKeyHash` or `StakingValidatorHash`)\n * \n * Stake addresses are used to query the assets held by given staking credentials.\n */\nexport class StakeAddress {\n\t#bytes;\n\n\t/**\n\t * @param {number[]} bytes \n\t */\n\tconstructor(bytes) {\n\t\tassert(bytes.length == 29);\n\n\t\tthis.#bytes = bytes;\n\t}\n\n\t/**\n\t * @type {number[]}\n\t */\n\tget bytes() {\n\t\treturn this.#bytes;\n\t}\n\n\t/**\n\t * Returns `true` if the given `StakeAddress` is a testnet address.\n\t * @param {StakeAddress} sa\n\t * @returns {boolean}\n\t */\n\tstatic isForTestnet(sa) {\n\t\treturn Address.isForTestnet(new Address(sa.bytes));\n\t}\n\n\t/**\n\t * Convert a regular `Address` into a `StakeAddress`. \n\t * Throws an error if the Address doesn't have a staking credential.\n\t * @param {Address} addr \n\t * @returns {StakeAddress}\n\t */\n\tstatic fromAddress(addr) {\n\t\tconst sh = addr.stakingHash;\n\n\t\tif (sh === null) {\n\t\t\tthrow new Error(\"address doesn't have a staking part\");\n\t\t} else {\n\t\t\treturn StakeAddress.fromHash(Address.isForTestnet(addr), sh);\n\t\t}\n\t}\n\n\t/**\n\t * Converts a `StakeAddress` into its CBOR representation.\n\t * @returns {number[]}\n\t */\n\ttoCbor() {\n\t\treturn Cbor.encodeBytes(this.#bytes);\n\t}\n\n\t/**\n\t * @param {number[]} bytes\n\t * @returns {StakeAddress}\n\t */\n\tstatic fromCbor(bytes) {\n\t\treturn new StakeAddress(Cbor.decodeBytes(bytes));\n\t}\n\n\t/**\n\t * Converts a `StakeAddress` into its Bech32 representation.\n\t * @returns {string}\n\t */\n\ttoBech32() {\n\t\treturn Crypto.encodeBech32(\n\t\t\tStakeAddress.isForTestnet(this) ? \"stake_test\" : \"stake\",\n\t\t\tthis.bytes\n\t\t);\n\t}\n\n\t/**\n\t * @param {string} str\n\t * @returns {StakeAddress}\n\t */\n\tstatic fromBech32(str) {\n\t\tlet [prefix, bytes] = Crypto.decodeBech32(str);\n\n\t\tlet result = new StakeAddress(bytes);\n\n\t\tassert(prefix == (StakeAddress.isForTestnet(result) ? \"stake_test\" : \"stake\"), \"invalid StakeAddress prefix\");\n\n\t\treturn result;\n\t}\n\n\t/**\n\t * Converts a `StakeAddress` into its hexadecimal representation.\n\t * @returns {string}\n\t */\n\ttoHex() {\n\t\treturn bytesToHex(this.#bytes);\n\t}\n\n\t/**\n\t * Converts a `StakeAddress` into its hexadecimal representation.\n\t * @type {string}\n\t */\n\tget hex() {\n\t\treturn this.toHex()\n\t}\n\n\t/**\n\t * Doesn't check validity\n\t * @param {string} hex\n\t * @returns {StakeAddress}\n\t */\n\tstatic fromHex(hex) {\n\t\treturn new StakeAddress(hexToBytes(hex));\n\t}\n\n\t/**\n\t * Address with only staking part (regular PubKeyHash)\n\t * @internal\n\t * @param {boolean} isTestnet\n\t * @param {PubKeyHash} hash\n\t * @returns {StakeAddress}\n\t */\n\tstatic fromPubKeyHash(isTestnet, hash) {\n\t\treturn new StakeAddress(\n\t\t\t[isTestnet ? 0xe0 : 0xe1].concat(hash.bytes)\n\t\t);\n\t}\n\n\t/**\n\t * Address with only staking part (script StakingValidatorHash)\n\t * @internal\n\t * @param {boolean} isTestnet\n\t * @param {StakingValidatorHash} hash\n\t * @returns {StakeAddress}\n\t */\n\tstatic fromStakingValidatorHash(isTestnet, hash) {\n\t\treturn new StakeAddress(\n\t\t\t[isTestnet ? 0xf0 : 0xf1].concat(hash.bytes)\n\t\t);\n\t}\n\n\t/**\n\t * Converts a `PubKeyHash` or `StakingValidatorHash` into `StakeAddress`.\n\t * @param {boolean} isTestnet\n\t * @param {PubKeyHash | StakingValidatorHash} hash\n\t * @returns {StakeAddress}\n\t */\n\tstatic fromHash(isTestnet, hash) {\n\t\tif (hash instanceof PubKeyHash) {\n\t\t\treturn StakeAddress.fromPubKeyHash(isTestnet, hash);\n\t\t} else {\n\t\t\treturn StakeAddress.fromStakingValidatorHash(isTestnet, hash);\n\t\t}\n\t}\n\n\t/**\n\t * Returns the underlying `PubKeyHash` or `StakingValidatorHash`.\n\t * @returns {PubKeyHash | StakingValidatorHash}\n\t */\n\tget stakingHash() {\n\t\tconst type = this.bytes[0];\n\n\t\tif (type == 0xe0 || type == 0xe1) {\n\t\t\treturn new PubKeyHash(this.bytes.slice(1));\n\t\t} else if (type == 0xf0 || type == 0xf1) {\n\t\t\treturn new StakingValidatorHash(this.bytes.slice(1));\n\t\t} else {\n\t\t\tthrow new Error(\"bad StakeAddress header\");\n\t\t}\n\t}\n}\n\n/**\n * Represents a Ed25519 signature.\n * \n * Also contains a reference to the PubKey that did the signing.\n */\nexport class Signature extends CborData {\n\t/**\n\t * @type {PubKey} \n\t */\n\t#pubKey;\n\n\t/** @type {number[]} */\n\t#signature;\n\n\t/**\n\t * @param {number[] | PubKey} pubKey \n\t * @param {number[]} signature \n\t */\n\tconstructor(pubKey, signature) {\n\t\tsuper();\n\t\tthis.#pubKey = (pubKey instanceof PubKey) ? pubKey : new PubKey(pubKey);\n\t\tthis.#signature = signature;\n\t}\n\n\t/**\n\t * @type {number[]}\n\t */\n\tget bytes() {\n\t\treturn this.#signature;\n\t}\n\n\t/**\n\t * @type {PubKey}\n\t */\n\tget pubKey() {\n\t\treturn this.#pubKey;\n\t}\n\n\t/**\n\t * @type {PubKeyHash}\n\t */\n\tget pubKeyHash() {\n\t\treturn this.#pubKey.pubKeyHash;\n\t}\n\n\t/**\n\t * @returns {Signature}\n\t */\n\tstatic dummy() {\n\t\treturn new Signature(PubKey.dummy(), (new Array(64)).fill(0));\n\t}\n\n\t/**\n\t * @returns {boolean}\n\t */\n\tisDummy() {\n\t\treturn this.#pubKey.isDummy() && this.#signature.every(b => b == 0);\n\t}\n\n\t/**\n\t * @returns {number[]}\n\t */\n\ttoCbor() {\n\t\treturn Cbor.encodeTuple([\n\t\t\tthis.#pubKey.toCbor(),\n\t\t\tCbor.encodeBytes(this.#signature),\n\t\t]);\n\t}\n\n\t/**\n\t * @param {number[]} bytes \n\t * @returns {Signature}\n\t */\n\tstatic fromCbor(bytes) {\n\t\t/** @type {null | PubKey} */\n\t\tlet pubKey = null;\n\n\t\t/** @type {null | number[]} */\n\t\tlet signature = null;\n\n\t\tlet n = Cbor.decodeTuple(bytes, (i, fieldBytes) => {\n\t\t\tswitch(i) {\n\t\t\t\tcase 0:\n\t\t\t\t\tpubKey = PubKey.fromCbor(fieldBytes);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 1:\n\t\t\t\t\tsignature = Cbor.decodeBytes(fieldBytes);\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new Error(\"unrecognized field\");\n\t\t\t}\n\t\t});\n\n\t\tassert(n == 2);\n\n\t\tif (pubKey === null || signature === null) {\n\t\t\tthrow new Error(\"unexpected\");\n\t\t} else {\n\t\t\treturn new Signature(pubKey, signature);\n\t\t}\n\t}\n\n\t/**\n\t * @returns {Object}\n\t */\n\tdump() {\n\t\treturn {\n\t\t\tpubKey: this.#pubKey.dump,\n\t\t\tpubKeyHash: this.pubKeyHash.dump(),\n\t\t\tsignature: bytesToHex(this.#signature),\n\t\t};\n\t}\n\n\t/**\n\t * Throws error if incorrect\n\t * @param {number[]} msg\n\t */\n\tverify(msg) {\n\t\tif (this.#signature === null) {\n\t\t\tthrow new Error(\"signature can't be null\");\n\t\t} else {\n\t\t\tif (this.#pubKey === null) {\n\t\t\t\tthrow new Error(\"pubKey can't be null\");\n\t\t\t} else {\n\t\t\t\tif (!Ed25519.verify(this.#signature, msg, this.#pubKey.bytes)) {\n\t\t\t\t\tthrow new Error(\"incorrect signature\");\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * @interface\n * @typedef {object} PrivateKey\n * @property {() => PubKey} derivePubKey Generates the corresponding public key.\n * @property {(msg: number[]) => Signature} sign Signs a byte-array payload, returning the signature.\n */\n\n/**\n * @implements {PrivateKey}\n */\nexport class Ed25519PrivateKey extends HeliosData {\n\t/**\n\t * @type {number[]}\n\t */\n\t#bytes;\n\n\t/**\n\t * cache the derived pubKey\n\t * @type {null | PubKey}\n\t */\n\t#pubKey\n\n\t/**\n\t * @param {string | number[]} bytes\n\t */\n\tconstructor(bytes) {\n\t\tsuper();\n\t\tthis.#bytes = Array.isArray(bytes) ? bytes : hexToBytes(bytes);\n\t\tthis.#pubKey = null;\n\t}\n\n \t/**\n     * Generate a private key from a random number generator.\n\t * This is not cryptographically secure, only use this for testing purpose\n     * @param {NumberGenerator} random \n     * @returns {Ed25519PrivateKey} - Ed25519 private key is 32 bytes long\n     */\n\tstatic random(random) {\n\t\treturn new Ed25519PrivateKey(randomBytes(random, 32));\n\t}\n\n\t/**\n\t * @type {number[]}\n\t */\n\tget bytes() {\n\t\treturn this.#bytes;\n\t}\n\n\t/**\n\t * @type {string}\n\t */\n\tget hex() {\n\t\treturn bytesToHex(this.#bytes);\n\t}\n\n\t/**\n\t * NOT the Ed25519-Bip32 hierarchial extension algorithm (see ExtendedPrivateKey below)\n\t * @returns {Ed25519PrivateKey}\n\t */\n\textend() {\n\t\treturn new Ed25519PrivateKey(Crypto.sha2_512(this.#bytes));\n\t}\n\n\t/**\n\t * @returns {PubKey}\n\t */\n\tderivePubKey() {\n\t\tif (this.#pubKey) {\n\t\t\treturn this.#pubKey;\n\t\t} else {\n\t\t\tthis.#pubKey = new PubKey(Ed25519.derivePublicKey(this.#bytes));\n\t\t\t\n\t\t\treturn this.#pubKey;\n\t\t}\n\t}\n\n\t/**\n\t * @param {number[]} message \n\t * @returns {Signature}\n\t */\n\tsign(message) {\n\t\treturn new Signature(\n\t\t\tthis.derivePubKey(),\n\t\t\tEd25519.sign(message, this.#bytes)\n\t\t);\n\t}\n}\n\n/**\n * Used during `Bip32PrivateKey` derivation, to create a new `Bip32PrivateKey` instance with a non-publicly deriveable `PubKey`.\n */\nexport const BIP32_HARDEN = 0x80000000;\n\n/**\n * Ed25519-Bip32 extendable `PrivateKey`.\n * @implements {PrivateKey}\n */\nexport class Bip32PrivateKey {\n\t/**\n\t * 96 bytes\n\t * @type {number[]}\n\t */\n\t#bytes;\n\n\t/**\n\t * @type {PubKey | null}\n\t */\n\t#pubKey;\n\n\t/**\n\t * @param {number[]} bytes\n\t */\n\tconstructor(bytes) {\n\t\tassert(bytes.length == 96);\n\t\tthis.#bytes = bytes;\n\t\tthis.#pubKey = null;\n\t}\n\n\t/**\n\t * @type {number[]}\n\t */\n\tget bytes() {\n\t\treturn this.#bytes.slice();\n\t}\n\n\t/**\n\t * @private\n\t * @type {number[]}\n\t */\n\tget k() {\n\t\treturn this.#bytes.slice(0, 64);\n\t}\n\n\t/**\n\t * @private\n\t * @type {number[]}\n\t */\n\tget kl() {\n\t\treturn this.#bytes.slice(0, 32);\n\t}\n\n\t/**\n\t * @private\n\t * @type {number[]}\n\t */\n\tget kr() {\n\t\treturn this.#bytes.slice(32, 64);\n\t}\n\n\t/**\n\t * @private\n\t * @type {number[]}\n\t */\n\tget c() {\n\t\treturn this.#bytes.slice(64, 96);\n\t}\n\n\t/**\n     * Generate a Bip32PrivateKey from a random number generator.\n\t * This is not cryptographically secure, only use this for testing purpose\n     * @param {NumberGenerator} random \n     * @returns {Bip32PrivateKey}\n     */\n\tstatic random(random = Crypto.rand(Math.random())) {\n\t\treturn new Bip32PrivateKey(randomBytes(random, 96));\n\t}\n\n\t/**\n\t * @param {number[]} entropy\n\t * @param {boolean} force\n\t */\n\tstatic fromBip39Entropy(entropy, force = true) {\n\t\tconst bytes = Crypto.pbkdf2(Crypto.hmacSha2_512, [], entropy, 4096, 96);\n\n\t\tconst kl = bytes.slice(0, 32);\n\t\tconst kr = bytes.slice(32, 64);\n\n\t\tif (!force) {\n\t\t\tassert((kl[31] & 0b00100000) == 0, \"invalid root secret\");\n\t\t}\n\n\t\tkl[0]  &= 0b11111000;\n\t\tkl[31] &= 0b00011111;\n\t\tkl[31] |= 0b01000000;\n\n\t\tconst c = bytes.slice(64, 96);\n\n\t\treturn new Bip32PrivateKey(kl.concat(kr).concat(c));\n\t}\n\n\t/**\n\t * @private\n\t * @param {number} i - child index\n\t */\n\tcalcChildZ(i) {\n\t\tconst ib = bigIntToBytes(BigInt(i)).reverse();\n\t\twhile (ib.length < 4) {\n\t\t\tib.push(0);\n\t\t}\n\n\t\tassert(ib.length == 4, \"child index too big\");\n\t\t\t\n\t\tif (i < BIP32_HARDEN) {\n\t\t\tconst A = this.derivePubKey().bytes;\n\t\t\t\n\t\t\treturn Crypto.hmacSha2_512(this.c, [0x02].concat(A).concat(ib));\n\t\t} else {\n\t\t\treturn Crypto.hmacSha2_512(this.c, [0x00].concat(this.k).concat(ib));\n\t\t}\n\t}\n\n\t/**\n\t * @private\n\t * @param {number} i \n\t */\n\tcalcChildC(i) {\n\t\tconst ib = bigIntToBytes(BigInt(i)).reverse();\n\t\twhile (ib.length < 4) {\n\t\t\tib.push(0);\n\t\t}\n\n\t\tassert(ib.length == 4, \"child index too big\");\n\t\t\t\n\t\tif (i < BIP32_HARDEN) {\n\t\t\tconst A = this.derivePubKey().bytes;\n\t\t\t\n\t\t\treturn Crypto.hmacSha2_512(this.c, [0x03].concat(A).concat(ib));\n\t\t} else {\n\t\t\treturn Crypto.hmacSha2_512(this.c, [0x01].concat(this.k).concat(ib));\n\t\t}\n\t}\n\n\t/**\n\t * @param {number} i\n\t * @returns {Bip32PrivateKey}\n\t */\n\tderive(i) {\n\t\tconst Z = this.calcChildZ(i);\n\n\t\tconst kl = bigIntToLe32Bytes(8n*leBytesToBigInt(Z.slice(0, 28)) + leBytesToBigInt(this.kl)).slice(0, 32);\n\t\tconst kr = bigIntToLe32Bytes(leBytesToBigInt(Z.slice(32, 64)) + (leBytesToBigInt(this.kr)%115792089237316195423570985008687907853269984665640564039457584007913129639936n)).slice(0, 32);\n\n\t\tconst c = this.calcChildC(i).slice(32, 64);\n\n\t\t// TODO: discard child key whose public key is the identity point\n\t\treturn new Bip32PrivateKey(kl.concat(kr).concat(c));\n\t}\n\n\t/**\n\t * @param {number[]} path \n\t * @returns {Bip32PrivateKey}\n\t */\n\tderivePath(path) {\n\t\t/**\n\t\t * @type {Bip32PrivateKey}\n\t\t */\n\t\tlet pk = this;\n\n\t\tpath.forEach(i => {\n\t\t\tpk = pk.derive(i);\n\t\t});\n\n\t\treturn pk;\n\t}\n\n\t/**\n\t * @returns {PubKey}\n\t */ \n\tderivePubKey() {\n\t\tif (this.#pubKey) {\n\t\t\treturn this.#pubKey;\n\t\t} else {\n\t\t\tthis.#pubKey = new PubKey(Ed25519.deriveBip32PublicKey(this.k));\n\n\t\t\treturn this.#pubKey;\n\t\t}\n\t}\n\n\t/**\n\t * @example\n\t * (new Bip32PrivateKey([0x60, 0xd3, 0x99, 0xda, 0x83, 0xef, 0x80, 0xd8, 0xd4, 0xf8, 0xd2, 0x23, 0x23, 0x9e, 0xfd, 0xc2, 0xb8, 0xfe, 0xf3, 0x87, 0xe1, 0xb5, 0x21, 0x91, 0x37, 0xff, 0xb4, 0xe8, 0xfb, 0xde, 0xa1, 0x5a, 0xdc, 0x93, 0x66, 0xb7, 0xd0, 0x03, 0xaf, 0x37, 0xc1, 0x13, 0x96, 0xde, 0x9a, 0x83, 0x73, 0x4e, 0x30, 0xe0, 0x5e, 0x85, 0x1e, 0xfa, 0x32, 0x74, 0x5c, 0x9c, 0xd7, 0xb4, 0x27, 0x12, 0xc8, 0x90, 0x60, 0x87, 0x63, 0x77, 0x0e, 0xdd, 0xf7, 0x72, 0x48, 0xab, 0x65, 0x29, 0x84, 0xb2, 0x1b, 0x84, 0x97, 0x60, 0xd1, 0xda, 0x74, 0xa6, 0xf5, 0xbd, 0x63, 0x3c, 0xe4, 0x1a, 0xdc, 0xee, 0xf0, 0x7a])).sign(textToBytes(\"Hello World\")).bytes == [0x90, 0x19, 0x4d, 0x57, 0xcd, 0xe4, 0xfd, 0xad, 0xd0, 0x1e, 0xb7, 0xcf, 0x16, 0x17, 0x80, 0xc2, 0x77, 0xe1, 0x29, 0xfc, 0x71, 0x35, 0xb9, 0x77, 0x79, 0xa3, 0x26, 0x88, 0x37, 0xe4, 0xcd, 0x2e, 0x94, 0x44, 0xb9, 0xbb, 0x91, 0xc0, 0xe8, 0x4d, 0x23, 0xbb, 0xa8, 0x70, 0xdf, 0x3c, 0x4b, 0xda, 0x91, 0xa1, 0x10, 0xef, 0x73, 0x56, 0x38, 0xfa, 0x7a, 0x34, 0xea, 0x20, 0x46, 0xd4, 0xbe, 0x04]\n\t * @param {number[]} message \n\t * @returns {Signature}\n\t */\n\tsign(message) {\n\t\treturn new Signature(\n\t\t\tthis.derivePubKey(),\n\t\t\tEd25519.signBip32(message, this.k)\n\t\t);\n\t}\n}\n\n/**\n * @implements {PrivateKey}\n */\nexport class RootPrivateKey {\n\t#entropy;\n\t#key;\n\n\t/**\n\t * @param {number[]} entropy \n\t */\n\tconstructor(entropy) {\n\t\tassert(entropy.length == 16 || entropy.length == 20 || entropy.length == 24 || entropy.length == 28 || entropy.length == 32, `expected 16, 20, 24, 28 or 32 bytes for the root entropy, got ${entropy.length}`);\n\t\t\n\t\tthis.#entropy = entropy;\n\t\tthis.#key = Bip32PrivateKey.fromBip39Entropy(entropy);\n\t}\n\n\t/**\n\t * @param {string[]} phrase \n\t * @param {string[]} dict \n\t * @returns {boolean}\n\t */\n\tstatic isValidPhrase(phrase, dict = BIP39_DICT_EN) {\n\t\tif (phrase.length != 12 && phrase.length != 15 && phrase.length != 18 && phrase.length != 21 && phrase.length != 24) {\n\t\t\treturn false;\n\t\t} else {\n\t\t\treturn phrase.every(w => dict.findIndex(dw => dw == w) != -1);\n\t\t}\n\t}\n\n\t/**\n\t * @param {string[]} phrase \n\t * @param {string[]} dict \n\t * @returns {RootPrivateKey}\n\t */\n\tstatic fromPhrase(phrase, dict = BIP39_DICT_EN) {\n\t\tassert(phrase.length == 12 || phrase.length == 15 || phrase.length == 18 || phrase.length == 21 || phrase.length == 24, `expected phrase with 12, 15, 18, 21 or 24 words, got ${phrase.length} words`);\n\n\t\tconst bw = new BitWriter();\n\n\t\tphrase.forEach(w => {\n\t\t\tconst i = dict.findIndex(dw => dw == w);\n\t\t\tassert(i != -1, `invalid phrase, ${w} not found in dict`);\n\n\t\t\tbw.write(padZeroes(i.toString(2), 11));\n\t\t});\n\n\t\tconst nChecksumBits = phrase.length/3;\n\t\tassert(nChecksumBits%1.0 == 0.0, \"bad nChecksumBits\");\n\t\tassert(nChecksumBits >= 4.0 && nChecksumBits <= 8.0, \"too many or too few nChecksumBits\");\n\n\t\tconst checksum = bw.pop(nChecksumBits);\n\n\t\tconst bytes = bw.finalize(false);\n\n\t\tassert(padZeroes(Crypto.sha2_256(bytes)[0].toString(2).slice(0, nChecksumBits), nChecksumBits) == checksum, \"invalid checksum\");\n\n\t\treturn new RootPrivateKey(bytes);\n\t}\n\n\t/**\n\t * @type {number[]}\n\t */\n\tget bytes() {\n\t\treturn this.#key.bytes;\n\t}\n\n\t/**\n\t * @type {number[]}\n\t */\n\tget entropy() {\n\t\treturn this.#entropy;\n\t}\n\n\t/**\n\t * @param {string[]} dict \n\t * @returns {string[]}\n\t */\n\ttoPhrase(dict = BIP39_DICT_EN) {\n\t\tconst nChecksumBits = this.#entropy.length/4;\n\t\tconst checksum = padZeroes(Crypto.sha2_256(this.#entropy)[0].toString(2).slice(0, nChecksumBits), nChecksumBits);\n\n\t\t/**\n\t\t * @type {string[]}\n\t\t */\n\t\tconst parts = [];\n\n\t\tthis.#entropy.forEach(b => {\n\t\t\tparts.push(padZeroes(b.toString(2), 8));\n\t\t});\n\n\t\tparts.push(checksum);\n\n\t\tlet bits = parts.join('');\n\n\t\tassert(bits.length%11 == 0.0);\n\n\t\t/**\n\t\t * @type {string[]}\n\t\t */\n\t\tconst words = [];\n\n\t\twhile (bits.length > 0) {\n\t\t\tconst part = bits.slice(0, 11);\n\t\t\tassert(part.length == 11, \"didn't slice of exactly 11 bits\");\n\n\t\t\tconst i = parseInt(part, 2);\n\n\t\t\twords.push(assertDefined(dict[i], `dict entry ${i} not found`));\n\n\t\t\tbits = bits.slice(11);\n\t\t}\n\n\t\tassert(RootPrivateKey.isValidPhrase(words, dict), \"internal error: invalid phrase\");\n\n\t\treturn words;\n\t}\n\n\t/**\n\t * @param {number} i - childIndex\n\t * @returns {Bip32PrivateKey}\n\t */\n\tderive(i) {\n\t\treturn this.#key.derive(i);\n\t}\n\n\t/**\n\t * @param {number[]} path \n\t * @returns {Bip32PrivateKey}\n\t */\n\tderivePath(path) {\n\t\treturn this.#key.derivePath(path);\n\t}\n\n\t/**\n\t * @param {number} accountIndex\n\t * @returns {Bip32PrivateKey}\n\t */\n\tderiveSpendingRootKey(accountIndex = 0) {\n\t\treturn this.derivePath([\n\t\t\t1852 + BIP32_HARDEN,\n\t\t\t1815 + BIP32_HARDEN,\n\t\t\taccountIndex + BIP32_HARDEN,\n\t\t\t0\n\t\t]);\n\t}\n\n\t/**\n\t * @param {number} accountIndex\n\t * @returns {Bip32PrivateKey}\n\t */\n\tderiveStakingRootKey(accountIndex) {\n\t\treturn this.derivePath([\n\t\t\t1852 + BIP32_HARDEN,\n\t\t\t1815 + BIP32_HARDEN,\n\t\t\taccountIndex + BIP32_HARDEN,\n\t\t\t2\n\t\t]);\n\t}\n\n\t/**\n\t * @param {number} accountIndex\n\t * @param {number} i\n\t * @returns {Bip32PrivateKey}\n\t */\n\tderiveSpendingKey(accountIndex = 0, i = 0) {\n\t\treturn this.deriveSpendingRootKey(accountIndex).derive(i);\n\t}\n\n\t/**\n\t * @param {number} accountIndex\n\t * @param {number} i\n\t * @returns {Bip32PrivateKey}\n\t */\n\tderiveStakingKey(accountIndex = 0, i = 0) {\n\t\treturn this.deriveStakingRootKey(accountIndex).derive(i);\n\t}\n\n\t/**\n\t * @returns {PubKey}\n\t */ \n\tderivePubKey() {\n\t\treturn this.#key.derivePubKey();\n\t}\n\n\t/**\n\t * @param {number[]} message \n\t * @returns {Signature}\n\t */\n\tsign(message) {\n\t\treturn this.#key.sign(message);\n\t}\n}\n\n/**\n * Base-type of SpendingRedeemer and MintingRedeemer\n */\nexport class Redeemer extends CborData {\n\t/** @type {UplcData} */\n\t#data;\n\n\t/** @type {Profile} */\n\t#profile;\n\n\t/**\n\t * @type {null | string}\n\t */\n\t#programName;\n\n\t/**\n\t * @param {UplcData} data \n\t * @param {Profile} profile \n\t */\n\tconstructor(data, profile = {mem: 0n, cpu: 0n}) {\n\t\tsuper();\n\t\tthis.#data = data;\n\t\tthis.#profile = profile;\n\t\tthis.#programName = null;\n\t}\n\n\t/**\n\t * @type {UplcData}\n\t */\n\tget data() {\n\t\treturn this.#data;\n\t}\n\n\t/**\n\t * @type {bigint}\n\t */\n\tget memCost() {\n\t\treturn this.#profile.mem;\n\t}\n\n\t/**\n\t * @type {bigint}\n\t */\n\tget cpuCost() {\n\t\treturn this.#profile.cpu;\n\t}\n\n\t/**\n\t * @param {string} name \n\t */\n\tsetProgramName(name) {\n\t\tthis.#programName = name;\n\t}\n\n\t/**\n\t * @type {null | string}\n\t */\n\tget programName() {\n\t\treturn this.#programName;\n\t}\n\n\t/**\n\t * type:\n\t *   0 -> spending\n\t *   1 -> minting \n\t *   2 -> certifying\n\t *   3 -> rewarding\n\t * @param {number} type \n\t * @param {number} index \n\t * @returns {number[]}\n\t */\n\ttoCborInternal(type, index) {\n\t\treturn Cbor.encodeTuple([\n\t\t\tCbor.encodeInteger(BigInt(type)),\n\t\t\tCbor.encodeInteger(BigInt(index)),\n\t\t\tthis.#data.toCbor(),\n\t\t\tCbor.encodeTuple([\n\t\t\t\tCbor.encodeInteger(this.#profile.mem),\n\t\t\t\tCbor.encodeInteger(this.#profile.cpu),\n\t\t\t]),\n\t\t]);\n\t}\n\n\t/**\n\t * @param {number[]} bytes \n\t * @returns {Redeemer}\n\t */\n\tstatic fromCbor(bytes) {\n\t\t/** @type {null | number} */\n\t\tlet type = null;\n\n\t\t/** @type {null | number} */\n\t\tlet index = null;\n\n\t\t/** @type {null | UplcData} */\n\t\tlet data = null;\n\n\t\t/** @type {null | Cost} */\n\t\tlet cost = null;\n\n\t\tlet n = Cbor.decodeTuple(bytes, (i, fieldBytes) => {\n\t\t\tswitch(i) {\n\t\t\t\tcase 0:\n\t\t\t\t\ttype = Number(Cbor.decodeInteger(fieldBytes));\n\t\t\t\t\tbreak;\n\t\t\t\tcase 1:\n\t\t\t\t\tindex = Number(Cbor.decodeInteger(fieldBytes));\n\t\t\t\t\tbreak;\n\t\t\t\tcase 2:\n\t\t\t\t\tdata = UplcData.fromCbor(fieldBytes);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 3: \n\t\t\t\t\t/** @type {null | bigint} */\n\t\t\t\t\tlet mem = null;\n\n\t\t\t\t\t/** @type {null | bigint} */\n\t\t\t\t\tlet cpu = null;\n\n\t\t\t\t\tlet m = Cbor.decodeTuple(fieldBytes, (j, subFieldBytes) => {\n\t\t\t\t\t\tswitch (j) {\n\t\t\t\t\t\t\tcase 0:\n\t\t\t\t\t\t\t\tmem = Cbor.decodeInteger(subFieldBytes);\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase 1:\n\t\t\t\t\t\t\t\tcpu = Cbor.decodeInteger(subFieldBytes);\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\tthrow new Error(\"unrecognized field\");\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\n\t\t\t\t\tassert(m == 2);\n\n\t\t\t\t\tif (mem === null || cpu === null) {\n\t\t\t\t\t\tthrow new Error(\"unexpected\");\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcost = {mem: mem, cpu: cpu};\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new Error(\"unrecognized field\");\n\t\t\t}\n\t\t});\n\n\t\tassert(n == 4);\n\n\t\tif (type === null || index === null || data === null || cost === null) {\n\t\t\tthrow new Error(\"unexpected\");\n\t\t} else {\n\n\t\t\tswitch(type) {\n\t\t\t\tcase 0:\n\t\t\t\t\treturn new SpendingRedeemer(null, index, data, cost);\n\t\t\t\tcase 1:\n\t\t\t\t\treturn new MintingRedeemer(null, index, data, cost);\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new Error(\"unhandled redeemer type (Todo)\");\t\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @returns {Object}\n\t */\n\tdumpInternal() {\n\t\treturn {\n\t\t\tjson: this.#data.toSchemaJson(),\n\t\t\tcbor: this.#data.toCborHex(),\n\t\t\texUnits: {\n\t\t\t\tmem: this.#profile.mem.toString(),\n\t\t\t\tcpu: this.#profile.cpu.toString(),\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @returns {Object}\n\t */\n\tdump() {\n\t\tthrow new Error(\"not yet implemented\");\n\t}\n\n\t/**\n\t * @param {TxBody} body \n\t * @returns {ConstrData}\n\t */\n\ttoScriptPurposeData(body) {\n\t\tthrow new Error(\"not yet implemented\");\n\t}\n\n\t/**\n\t * @param {TxBody} body \n\t */\n\tupdateIndex(body) {\n\t\tthrow new Error(\"not yet implemented\");\n\t}\n\n\t/**\n\t * @param {Profile} profile\n\t */\n\tsetProfile(profile) {\n\t\tthis.#profile = profile;\n\t}\n\n\t/**\n\t * @type {Profile}\n\t */\n\tget profile() {\n\t\treturn this.#profile;\n\t}\n\n\t/**\n\t * @param {NetworkParams} networkParams \n\t * @returns {bigint}\n\t */\n\testimateFee(networkParams) {\n\t\t// this.#exUnits.mem and this.#exUnits can be 0 if we are estimating the fee for an initial balance\n\t\t\n\t\tlet [memFee, cpuFee] = networkParams.exFeeParams;\n\n\t\treturn BigInt(Math.ceil(Number(this.#profile.mem)*memFee + Number(this.#profile.cpu)*cpuFee));\n\t}\n}\n\nexport class SpendingRedeemer extends Redeemer {\n\t#input;\n\t#inputIndex;\n\n\t/**\n\t * @param {null | TxInput} input\n\t * @param {number} inputIndex\n\t * @param {UplcData} data \n\t * @param {Cost} exUnits \n\t */\n\tconstructor(input, inputIndex, data, exUnits = {mem: 0n, cpu: 0n}) {\n\t\tsuper(data, exUnits);\n\n\t\tthis.#input = input\n\t\tthis.#inputIndex = inputIndex;\n\t}\n\n\t/**\n\t * @type {number}\n\t */\n\tget inputIndex() {\n\t\treturn this.#inputIndex;\n\t}\n\n\t/**\n\t * @returns {number[]}\n\t */\n\ttoCbor() {\n\t\treturn this.toCborInternal(0, this.#inputIndex);\n\t}\n\n\t/**\n\t * @returns {Object}\n\t */\n\tdump() {\n\t\tlet obj = super.dumpInternal();\n\n\t\tobj[\"type\"] = 0;\n\t\tobj[\"typeName\"] = \"spending\";\n\t\tobj[\"inputIndex\"] = this.#inputIndex;\n\n\t\treturn obj;\n\t}\n\n\t/**\n\t * @param {TxBody} body \n\t * @returns {ConstrData}\n\t */\n\ttoScriptPurposeData(body) {\n\t\treturn new ConstrData(1, [\n\t\t\tbody.inputs[this.#inputIndex].toOutputIdData(),\n\t\t]);\n\t}\n\n\t/**\n\t * @param {TxBody} body\n\t */\n\tupdateIndex(body) {\n\t\tif (this.#input == null) {\n\t\t\tthrow new Error(\"input can't be null\");\n\t\t} else {\n\t\t\tthis.#inputIndex = body.inputs.findIndex(i => {\n\t\t\t\treturn i.txId.eq(assertDefined(this.#input).txId) && (i.utxoIdx == assertDefined(this.#input).utxoIdx)\n\t\t\t});\n\n\t\t\tassert(this.#inputIndex != -1);\n\t\t}\n\t}\n}\n\nexport class MintingRedeemer extends Redeemer {\n\t#mph;\n\t#mphIndex;\n\n\t/**\n\t * @param {?MintingPolicyHash} mph\n\t * @param {number} mphIndex\n\t * @param {UplcData} data\n\t * @param {Cost} exUnits\n\t */\n\tconstructor(mph, mphIndex, data, exUnits = {mem: 0n, cpu: 0n}) {\n\t\tsuper(data, exUnits);\n\n\t\tthis.#mph = mph;\n\t\tthis.#mphIndex = mphIndex;\n\t}\n\n\t/**\n\t * @type {number}\n\t */\n\tget mphIndex() {\n\t\treturn this.#mphIndex;\n\t}\n\n\t/**\n\t * @returns {number[]}\n\t */\n\ttoCbor() {\n\t\treturn this.toCborInternal(1, this.#mphIndex);\n\t}\n\n\t/** \n\t * @returns {Object}\n\t */\n\tdump() {\n\t\tlet obj = super.dumpInternal();\n\n\t\tobj[\"type\"] = 1;\n\t\tobj[\"typeName\"] = \"minting\";\n\t\tobj[\"mphIndex\"] = this.#mphIndex;\n\n\t\treturn obj;\n\t}\n\n\t/**\n\t * @param {TxBody} body \n\t * @returns {ConstrData}\n\t */\n\ttoScriptPurposeData(body) {\n\t\tlet mph = body.minted.mintingPolicies[this.#mphIndex];\n\n\t\treturn new ConstrData(0, [\n\t\t\tnew ByteArrayData(mph.bytes),\n\t\t]);\n\t}\n\n\t/**\n\t * @param {TxBody} body \n\t */\n\tupdateIndex(body) {\n\t\tif (this.#mph === null) {\n\t\t\tthrow new Error(\"can't have null mph at this point\");\n\t\t} else {\n\t\t\tthis.#mphIndex = body.minted.mintingPolicies.findIndex(mph => mph.eq(assertDefined(this.#mph)));\n\n\t\t\tassert(this.#mphIndex != -1);\n\t\t}\n\t}\n}\n\n/**\n * Represents either an inline datum, or a hashed datum.\n * \n * Inside the Helios language this type is named `OutputDatum` in order to distinguish it from user defined Datums,\n * But outside helios scripts there isn't much sense to keep using the name 'OutputDatum' instead of Datum.\n */\nexport class Datum extends CborData {\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\t/**\n\t * @param {number[]} bytes \n\t * @returns {Datum}\n\t */\n\tstatic fromCbor(bytes) {\n\t\t/** @type {null | number} */\n\t\tlet type = null;\n\n\t\t/** @type {null | Datum} */\n\t\tlet res = null;\n\n\t\tlet n = Cbor.decodeTuple(bytes, (i, fieldBytes) => {\n\t\t\tswitch(i) {\n\t\t\t\tcase 0:\n\t\t\t\t\ttype = Number(Cbor.decodeInteger(fieldBytes));\n\t\t\t\t\tbreak;\n\t\t\t\tcase 1:\n\t\t\t\t\tif (type == 0) {\n\t\t\t\t\t\tres = new HashedDatum(DatumHash.fromCbor(fieldBytes));\n\t\t\t\t\t} else if (type == 1) {\n\t\t\t\t\t\tassert(Cbor.decodeTag(fieldBytes) == 24n);\n\n\t\t\t\t\t\tlet dataBytes = Cbor.decodeBytes(fieldBytes);\n\t\t\t\t\t\tlet data = UplcData.fromCbor(dataBytes);\n\n\t\t\t\t\t\tres = new InlineDatum(data);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new Error(\"unrecognized field label\");\n\t\t\t}\n\t\t});\n\n\t\tassert(n == 2);\n\n\t\tif (type === null || res === null) {\n\t\t\tthrow new Error(\"unexpected\");\n\t\t} else {\n\t\t\treturn res;\n\t\t}\n\t}\n\n\t/**\n\t * @param {UplcData} data\n\t * @returns {null | Datum}\n\t */\n\tstatic fromUplcData(data) {\n\t\tif (data.index == 0) {\n\t\t\tassert(data.fields.length == 0);\n\t\t\treturn null;\n\t\t} else if (data.index == 1) {\n\t\t\tassert(data.fields.length == 1);\n\t\t\treturn new HashedDatum(DatumHash.fromUplcData(data.fields[0]));\n\t\t} else if (data.index == 2) {\n\t\t\tassert(data.fields.length == 1);\n\t\t\treturn new InlineDatum(data.fields[0]);\n\t\t} else {\n\t\t\tthrow new Error(\"unhandled constr index\");\n\t\t}\n\t}\n\n\t/**\n\t * Constructs a `HashedDatum`. The input data is hashed internally.\n\t * @param {UplcDataValue | UplcData | HeliosData} data\n\t * @returns {Datum}\n\t */\n\tstatic hashed(data) {\n\t\tif (data instanceof HeliosData) {\n\t\t\treturn HashedDatum.fromData(data._toUplcData());\n\t\t} else {\n\t\t\treturn HashedDatum.fromData(UplcDataValue.unwrap(data));\n\t\t}\n\t}\n\n\t/**\n\t * @param {UplcDataValue | UplcData | HeliosData} data\n\t * @returns {Datum}\n\t */\n\tstatic inline(data) {\n\t\tif (data instanceof HeliosData) {\n\t\t\treturn new InlineDatum(data._toUplcData());\n\t\t} else {\n\t\t\treturn new InlineDatum(UplcDataValue.unwrap(data));\n\t\t}\n\t}\n\n\t/**\n\t * @returns {boolean}\n\t */\n\tisInline() {\n\t\tthrow new Error(\"not yet implemented\");\n\t}\n\n\t/**\n\t * @returns {boolean}\n\t */\n\tisHashed() {\n\t\tthrow new Error(\"not yet implemented\");\n\t}\n\n\t/**\n\t * @type {DatumHash}\n\t */\n\tget hash() {\n\t\tthrow new Error(\"not yet implemented\");\n\t}\n\n\t/**\n\t * @type {?UplcData}\n\t */\n\tget data() {\n\t\tthrow new Error(\"not yet implemented\");\n\t}\n\n\t/**\n\t * @returns {Object}\n\t */\n\tdump() {\n\t\tthrow new Error(\"not yet implemented\");\n\t}\n\n\t/**\n\t * @returns {ConstrData}\n\t */\n\ttoData() {\n\t\tthrow new Error(\"not yet implemented\");\n\t}\n}\n\n/**\n * Inside helios this type is named OutputDatum::Hash in order to distinguish it from the user defined Datum,\n * but outside helios scripts there isn't much sense to keep using the name 'OutputDatum' instead of Datum\n */\nexport class HashedDatum extends Datum {\n\t/** @type {DatumHash} */\n\t#hash;\n\n\t/** @type {null | UplcData} */\n\t#origData;\n\n\t/**\n\t * @param {DatumHash} hash \n\t * @param {null | UplcData} origData\n\t */\n\tconstructor(hash, origData = null) {\n\t\tsuper();\n\t\tthis.#hash = hash;\n\t\tthis.#origData = origData;\n\n\t\tif (this.#origData !== null) {\n\t\t\tassert(eq(this.#hash.bytes, Crypto.blake2b(this.#origData.toCbor())));\n\t\t}\n\t}\n\n\t/**\n\t * @returns {boolean}\n\t */\n\tisInline() {\n\t\treturn false;\n\t}\n\n\t/**\n\t * @returns {boolean}\n\t */\n\tisHashed() {\n\t\treturn true;\n\t}\n\n\t/**\n\t * @type {DatumHash}\n\t */\n\tget hash() {\n\t\treturn this.#hash;\n\t}\n\n\t/**\n\t * @type {?UplcData}\n\t */\n\tget data() {\n\t\treturn this.#origData;\n\t}\n\n\t/**\n\t * Used by script context emulation\n\t * @returns {ConstrData}\n\t */\n\ttoData() {\n\t\treturn new ConstrData(1, [new ByteArrayData(this.#hash.bytes)]);\n\t}\n\n\t/**\n\t * @returns {number[]}\n\t */\n\ttoCbor() {\n\t\treturn Cbor.encodeTuple([\n\t\t\tCbor.encodeInteger(0n),\n\t\t\tthis.#hash.toCbor(),\n\t\t]);\n\t}\n\n\t/**\n\t * Constructs a `HashedDatum`. The input data is hashed internally.\n\t * @param {UplcData} data \n\t * @returns {HashedDatum}\n\t */\n\tstatic fromData(data) {\n\t\treturn new HashedDatum(new Hash(Crypto.blake2b(data.toCbor())), data);\n\t}\n\n\t/**\n\t * @returns {Object}\n\t */\n\tdump() {\n\t\treturn {\n\t\t\thash: this.#hash.dump(),\n\t\t\tcbor: this.#origData === null ? null : bytesToHex(this.#origData.toCbor()),\n\t\t\tschema: this.#origData === null ? null : JSON.parse(this.#origData.toSchemaJson())\n\t\t};\n\t}\n}\n\n/**\n * Inside helios this type is named OutputDatum::Inline in order to distinguish it from the user defined Datum,\n * but outside helios scripts there isn't much sense to keep using the name 'OutputDatum' instead of Datum\n */\nclass InlineDatum extends Datum {\n\t/** @type {UplcData} */\n\t#data;\n\n\t/**\n\t * @param {UplcData} data\n\t */\n\tconstructor(data) {\n\t\tsuper();\n\t\tthis.#data = data;\n\t}\n\n\t/**\n\t * @returns {boolean}\n\t */\n\tisInline() {\n\t\treturn true;\n\t}\n\n\t/**\n\t * @returns {boolean}\n\t */\n\tisHashed() {\n\t\treturn false;\n\t}\n\n\t/**\n\t * @type {DatumHash}\n\t */\n\tget hash() {\n\t\treturn new DatumHash(Crypto.blake2b(this.#data.toCbor()));\n\t}\n\n\t/**\n\t * @type {UplcData}\n\t */\n\tget data() {\n\t\treturn this.#data;\n\t}\n\n\t/**\n\t * Used by script context emulation\n\t * @returns {ConstrData}\n\t */\n\ttoData() {\n\t\treturn new ConstrData(2, [this.#data]);\n\t}\n\n\t/**\n\t * @returns {number[]}\n\t */\n\ttoCbor() {\n\t\treturn Cbor.encodeTuple([\n\t\t\tCbor.encodeInteger(1n),\n\t\t\tCbor.encodeTag(24n).concat(Cbor.encodeBytes(this.#data.toCbor()))\n\t\t]);\n\t}\n\n\t/**\n\t * @returns {Object}\n\t */\n\tdump() {\n\t\treturn {\n\t\t\tinlineCbor: bytesToHex(this.#data.toCbor()),\n\t\t\tinlineSchema: JSON.parse(this.#data.toSchemaJson())\n\t\t};\n\t}\n}\n\n/**\n * The inner 'any' is also Metadata, but jsdoc doesn't allow declaring recursive types\n * Metadata is essentially a JSON schema object\n * @typedef {{map: [any, any][]} | any[] | string | number} Metadata\n */\n\n/**\n * @param {Metadata} metadata \n * @returns {number[]}\n */\nfunction encodeMetadata(metadata) {\n\tif (typeof metadata === 'string') {\n\t\treturn Cbor.encodeUtf8(metadata, true);\n\t} else if (typeof metadata === 'number') {\n\t\tassert(metadata % 1.0 == 0.0);\n\n\t\treturn Cbor.encodeInteger(BigInt(metadata));\n\t} else if (Array.isArray(metadata)) {\n\t\treturn Cbor.encodeDefList(metadata.map(item => encodeMetadata(item)));\n\t} else if (metadata instanceof Object && \"map\" in metadata && Object.keys(metadata).length == 1) {\n\t\tlet pairs = metadata[\"map\"];\n\n\t\tif (Array.isArray(pairs)) {\n\t\t\treturn Cbor.encodeMap(pairs.map(pair => {\n\t\t\t\tif (Array.isArray(pair) && pair.length == 2) {\n\t\t\t\t\treturn [\n\t\t\t\t\t\tencodeMetadata(pair[0]),\n\t\t\t\t\t\tencodeMetadata(pair[1])\n\t\t\t\t\t];\n\t\t\t\t} else {\n\t\t\t\t\tthrow new Error(\"invalid metadata schema\");\t\t\n\t\t\t\t}\n\t\t\t}));\n\t\t} else {\n\t\t\tthrow new Error(\"invalid metadata schema\");\n\t\t}\n\t} else {\n\t\tthrow new Error(\"invalid metadata schema\");\n\t}\n}\n\n/**\n * Shifts bytes to next Cbor element\n * @param {number[]} bytes \n * @returns {Metadata}\n */\nfunction decodeMetadata(bytes) {\n\tif (Cbor.isUtf8(bytes)) {\n\t\treturn Cbor.decodeUtf8(bytes);\n\t} else if (Cbor.isList(bytes)) {\n\t\t/**\n\t\t * @type {Metadata[]}\n\t\t */\n\t\tlet items = [];\n\n\t\tCbor.decodeList(bytes, (_, itemBytes) => {\n\t\t\titems.push(decodeMetadata(itemBytes));\n\t\t});\n\n\t\treturn items;\n\t} else if (Cbor.isMap(bytes)) {\n\t\t/**\n\t\t * @type {[Metadata, Metadata][]}\n\t\t */\n\t\tlet pairs = [];\n\n\t\tCbor.decodeMap(bytes, (_, pairBytes) => {\n\t\t\tpairs.push([\n\t\t\t\tdecodeMetadata(pairBytes),\n\t\t\t\tdecodeMetadata(pairBytes)\n\t\t\t]);\n\t\t});\n\n\t\treturn {\"map\": pairs};\n\t} else {\n\t\treturn Number(Cbor.decodeInteger(bytes));\n\t}\n}\n\nexport class TxMetadata {\n\t/**\n\t * @type {Object.<number, Metadata>} \n\t */\n\t#metadata;\n\n\tconstructor() {\n\t\tthis.#metadata = {};\n\t}\n\n\t/**\n\t *\n\t * @param {number} tag\n\t * @param {Metadata} data\n\t */\n\tadd(tag, data) {\n\t\tthis.#metadata[tag] = data;\n\t}\n\n\t/**\n\t * @type {number[]}\n\t */\n\tget keys() {\n\t\treturn Object.keys(this.#metadata).map(key => parseInt(key)).sort();\n\t}\n\n\t/**\n\t * @returns {Object}\n\t */\n\tdump() {\n\t\tlet obj = {};\n\n\t\tfor (let key of this.keys) {\n\t\t\tobj[key] =this.#metadata[key];\n\t\t}\n\n\t\treturn obj;\n\t}\n\n\t/**\n\t * @returns {number[]}\n\t */\n\ttoCbor() {\n\t\t/**\n\t\t * @type {[number[], number[]][]}\n\t\t */\n\t\tconst pairs = this.keys.map(key => [\n\t\t\tCbor.encodeInteger(BigInt(key)),\n\t\t\tencodeMetadata(this.#metadata[key])\n\t\t]);\n\t\t\n\t\treturn Cbor.encodeMap(pairs);\n\t}\n\n\t/**\n\t* Decodes a TxMetadata instance from Cbor\n\t* @param {number[]} data\n\t* @returns {TxMetadata}\n\t*/\n\tstatic fromCbor(data) {\n\t\tconst txMetadata = new TxMetadata();\n\n\t\tCbor.decodeMap(data, (_, pairBytes) => {\n\t\t\ttxMetadata.add(\n\t\t\t\tNumber(Cbor.decodeInteger(pairBytes)), \n\t\t\t\tdecodeMetadata(pairBytes)\n\t\t\t);\n\t\t});\n\n\t\treturn txMetadata;\n\t}\n}\n\n\n\n////////////////////////////////////\n// Section 36: Highlighting function\n////////////////////////////////////\n\n/**\n * Categories for syntax highlighting\n */\nconst SyntaxCategory = {\n\tNormal:     0,\n\tComment:    1,\n\tLiteral:    2,\n\tSymbol:     3,\n\tType:       4,\n\tKeyword:    5,\n\tError:      6,\n};\n\n/**\n * Returns Uint8Array with the same length as the number of chars in the script.\n * Each resulting byte respresents a different syntax category.\n * This approach should be faster than a RegExp based a approach.\n * @param {string} src\n * @returns {Uint8Array}\n */\nexport function highlight(src) {\n\tlet n = src.length;\n\n\tconst SyntaxState = {\n\t\tNormal:        0,\n\t\tSLComment:     1,\n\t\tMLComment:     2,\n\t\tString:        3,\n\t\tNumberStart:   4,\n\t\tHexNumber:     5,\n\t\tBinaryNumber:  6,\n\t\tOctalNumber:   7,\n\t\tDecimalNumber: 8,\n\t\tByteArray:     9,\n\t};\n\n\t// array of categories\n\tlet data = new Uint8Array(n);\n\n\tlet j = 0; // position in data\n\tlet state = SyntaxState.Normal;\n\n\t/** @type {SymbolToken[]} */\n\tlet groupStack = [];\n\t\n\tfor (let i = 0; i < n; i++) {\n\t\tlet c = src[i];\n\t\tlet isLast = i == n - 1;\n\n\t\tswitch (state) {\n\t\t\tcase SyntaxState.Normal:\n\t\t\t\tif (c == \"/\") {\n\t\t\t\t\t// maybe comment\n\t\t\t\t\tif (!isLast && src[i+1] == \"/\") {\n\t\t\t\t\t\tdata[j++] = SyntaxCategory.Comment;\n\t\t\t\t\t\tdata[j++] = SyntaxCategory.Comment;\n\t\t\n\t\t\t\t\t\ti++;\n\t\t\t\t\t\tstate = SyntaxState.SLComment;\n\t\t\t\t\t} else if (!isLast && src[i+1] == \"*\") {\n\t\t\t\t\t\tdata[j++] = SyntaxCategory.Comment;\n\t\t\t\t\t\tdata[j++] = SyntaxCategory.Comment;\n\n\t\t\t\t\t\ti++;\n\t\t\t\t\t\tstate = SyntaxState.MLComment;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdata[j++] = SyntaxCategory.Symbol;\n\t\t\t\t\t}\n\t\t\t\t} else if (c == \"[\" || c == \"]\" || c == \"{\" || c == \"}\" || c == \"(\" || c == \")\") {\n\t\t\t\t\tlet s = new SymbolToken(new Site(new Source(src, \"\"), i), c);\n\n\t\t\t\t\tif (Group.isOpenSymbol(s)) {\n\t\t\t\t\t\tgroupStack.push(s);\n\t\t\t\t\t\tdata[j++] = SyntaxCategory.Normal;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tlet prevGroup = groupStack.pop();\n\n\t\t\t\t\t\tif (prevGroup === undefined) {\n\t\t\t\t\t\t\tdata[j++] = SyntaxCategory.Error;\n\t\t\t\t\t\t} else if (c == Group.matchSymbol(prevGroup)) {\n\t\t\t\t\t\t\tdata[j++] = SyntaxCategory.Normal;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tdata[prevGroup.site.startPos] = SyntaxCategory.Error;\n\t\t\t\t\t\t\tdata[j++] = SyntaxCategory.Error;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else if (c == \"%\" || c == \"!\" || c == \"&\" || c == \"*\" || c == \"+\" || c == \"-\" || c == \"<\" || c == \"=\" || c == \">\" || c == \"|\") {\n\t\t\t\t\t// symbol\n\t\t\t\t\tswitch (c) {\n\t\t\t\t\t\tcase \"&\":\n\t\t\t\t\t\t\tif (!isLast && src[i+1] == \"&\") {\n\t\t\t\t\t\t\t\tdata[j++] = SyntaxCategory.Symbol;\n\t\t\t\t\t\t\t\tdata[j++] = SyntaxCategory.Symbol;\n\t\t\t\t\t\t\t\ti++;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tdata[j++] = SyntaxCategory.Normal;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase \"|\":\n\t\t\t\t\t\t\tif (!isLast && src[i+1] == \"|\") {\n\t\t\t\t\t\t\t\tdata[j++] = SyntaxCategory.Symbol;\n\t\t\t\t\t\t\t\tdata[j++] = SyntaxCategory.Symbol;\n\t\t\t\t\t\t\t\ti++;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tdata[j++] = SyntaxCategory.Normal;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase \"!\":\n\t\t\t\t\t\t\tif (!isLast && src[i+1] == \"=\") {\n\t\t\t\t\t\t\t\tdata[j++] = SyntaxCategory.Symbol;\n\t\t\t\t\t\t\t\tdata[j++] = SyntaxCategory.Symbol;\n\t\t\t\t\t\t\t\ti++;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tdata[j++] = SyntaxCategory.Symbol;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase \"=\":\n\t\t\t\t\t\t\tif (!isLast && (src[i+1] == \"=\" || src[i+1] == \">\")) {\n\t\t\t\t\t\t\t\tdata[j++] = SyntaxCategory.Symbol;\n\t\t\t\t\t\t\t\tdata[j++] = SyntaxCategory.Symbol;\n\t\t\t\t\t\t\t\ti++;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tdata[j++] = SyntaxCategory.Symbol;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase \">\":\n\t\t\t\t\t\t\tif (!isLast && src[i+1] == \"=\") {\n\t\t\t\t\t\t\t\tdata[j++] = SyntaxCategory.Symbol;\n\t\t\t\t\t\t\t\tdata[j++] = SyntaxCategory.Symbol;\n\t\t\t\t\t\t\t\ti++;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tdata[j++] = SyntaxCategory.Symbol;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase \"<\":\n\t\t\t\t\t\t\tif (!isLast && src[i+1] == \"=\") {\n\t\t\t\t\t\t\t\tdata[j++] = SyntaxCategory.Symbol;\n\t\t\t\t\t\t\t\tdata[j++] = SyntaxCategory.Symbol;\n\t\t\t\t\t\t\t\ti++;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tdata[j++] = SyntaxCategory.Symbol;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase \"-\":\n\t\t\t\t\t\t\tif (!isLast && src[i+1] == \">\") {\n\t\t\t\t\t\t\t\tdata[j++] = SyntaxCategory.Symbol;\n\t\t\t\t\t\t\t\tdata[j++] = SyntaxCategory.Symbol;\n\t\t\t\t\t\t\t\ti++;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tdata[j++] = SyntaxCategory.Symbol;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tdata[j++] = SyntaxCategory.Symbol;\n\t\t\t\t\t}\n\t\t\t\t} else if (c == \"\\\"\") {\n\t\t\t\t\t// literal string\n\t\t\t\t\tdata[j++] = SyntaxCategory.Literal;\n\t\t\t\t\tstate = SyntaxState.String;\n\t\t\t\t} else if (c == \"0\") {\n\t\t\t\t\t// literal number\n\t\t\t\t\tdata[j++] = SyntaxCategory.Literal;\n\t\t\t\t\tstate = SyntaxState.NumberStart;\n\t\t\t\t} else if (c >= \"1\" && c <= \"9\") {\n\t\t\t\t\t// literal decimal number\n\t\t\t\t\tdata[j++] = SyntaxCategory.Literal;\n\t\t\t\t\tstate = SyntaxState.DecimalNumber;\n\t\t\t\t} else if (c == \"#\") {\n\t\t\t\t\tdata[j++] = SyntaxCategory.Literal;\n\t\t\t\t\tstate = SyntaxState.ByteArray;\n\t\t\t\t} else if ((c >= \"a\" && c <= \"z\") || (c >= \"A\" && c <= \"Z\") || c == \"_\") {\n\t\t\t\t\t// maybe keyword, builtin type, or boolean\n\t\t\t\t\tlet i0 = i;\n\t\t\t\t\tlet chars = [c];\n\t\t\t\t\t// move i to the last word char\n\t\t\t\t\twhile (i + 1 < n) {\n\t\t\t\t\t\tlet d = src[i+1];\n\n\t\t\t\t\t\tif ((d >= \"a\" && d <= \"z\") || (d >= \"A\" && d <= \"Z\") || d == \"_\" || (d >= \"0\" && d <= \"9\")) {\n\t\t\t\t\t\t\tchars.push(d);\n\t\t\t\t\t\t\ti++;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tlet word = chars.join(\"\");\n\t\t\t\t\t/** @type {number} */\n\t\t\t\t\tlet type;\n\t\t\t\t\tswitch (word) {\n\t\t\t\t\t\tcase \"true\":\n\t\t\t\t\t\tcase \"false\":\n\t\t\t\t\t\t\ttype = SyntaxCategory.Literal;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase \"Bool\":\n\t\t\t\t\t\tcase \"Int\":\n\t\t\t\t\t\tcase \"ByteArray\":\n\t\t\t\t\t\tcase \"String\":\n\t\t\t\t\t\tcase \"Option\":\n\t\t\t\t\t\t\ttype = SyntaxCategory.Type;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase \"if\":\n\t\t\t\t\t\tcase \"else\":\n\t\t\t\t\t\tcase \"switch\":\n\t\t\t\t\t\tcase \"func\":\n\t\t\t\t\t\tcase \"const\":\n\t\t\t\t\t\tcase \"struct\":\n\t\t\t\t\t\tcase \"enum\":\n\t\t\t\t\t\tcase \"import\":\n\t\t\t\t\t\tcase \"print\":\n\t\t\t\t\t\tcase \"error\":\n\t\t\t\t\t\tcase \"self\":\n\t\t\t\t\t\t\ttype = SyntaxCategory.Keyword;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase \"testing\":\n\t\t\t\t\t\tcase \"spending\":\n\t\t\t\t\t\tcase \"staking\":\n\t\t\t\t\t\tcase \"minting\":\n\t\t\t\t\t\tcase \"endpoint\":\n\t\t\t\t\t\tcase \"module\":\n\t\t\t\t\t\t\tif (i0 == 0) {\n\t\t\t\t\t\t\t\ttype = SyntaxCategory.Keyword;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\ttype = SyntaxCategory.Normal;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\ttype = SyntaxCategory.Normal;\n\t\t\t\t\t}\n\n\t\t\t\t\tfor (let ii = i0; ii < i0 + chars.length; ii++) {\n\t\t\t\t\t\tdata[j++] = type;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tdata[j++] = SyntaxCategory.Normal;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase SyntaxState.SLComment:\n\t\t\t\tdata[j++] = SyntaxCategory.Comment;\n\t\t\t\tif (c == \"\\n\") {\n\t\t\t\t\tstate = SyntaxState.Normal;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase SyntaxState.MLComment:\n\t\t\t\tdata[j++] = SyntaxCategory.Comment;\n\n\t\t\t\tif (c == \"*\" && !isLast && src[i+1] == \"/\") {\n\t\t\t\t\ti++;\n\t\t\t\t\tdata[j++] = SyntaxCategory.Comment;\n\t\t\t\t\tstate = SyntaxState.Normal;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase SyntaxState.String:\n\t\t\t\tdata[j++] = SyntaxCategory.Literal;\n\n\t\t\t\tif (c == \"\\\"\") {\n\t\t\t\t\tstate = SyntaxState.Normal;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase SyntaxState.NumberStart:\n\t\t\t\tif (c == \"x\") {\n\t\t\t\t\tdata[j++] = SyntaxCategory.Literal;\n\t\t\t\t\tstate = SyntaxState.HexNumber;\n\t\t\t\t} else if (c == \"o\") {\n\t\t\t\t\tdata[j++] = SyntaxCategory.Literal;\n\t\t\t\t\tstate = SyntaxState.OctalNumber;\n\t\t\t\t} else if (c == \"b\") {\n\t\t\t\t\tdata[j++] = SyntaxCategory.Literal;\n\t\t\t\t\tstate = SyntaxState.BinaryNumber;\n\t\t\t\t} else if (c >= \"0\" && c <= \"9\") {\n\t\t\t\t\tdata[j++] = SyntaxCategory.Literal;\n\t\t\t\t\tstate = SyntaxState.DecimalNumber;\n\t\t\t\t} else {\n\t\t\t\t\ti--;\n\t\t\t\t\tstate = SyntaxState.Normal;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase SyntaxState.DecimalNumber:\n\t\t\t\tif (c >= \"0\" && c <= \"9\") {\n\t\t\t\t\tdata[j++] = SyntaxCategory.Literal;\n\t\t\t\t} else {\n\t\t\t\t\ti--;\n\t\t\t\t\tstate = SyntaxState.Normal;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase SyntaxState.HexNumber:\n\t\t\tcase SyntaxState.ByteArray:\n\t\t\t\tif ((c >= \"a\" && c <= \"f\") || (c >= \"0\" && c <= \"9\")) {\n\t\t\t\t\tdata[j++] = SyntaxCategory.Literal;\n\t\t\t\t} else {\n\t\t\t\t\ti--;\n\t\t\t\t\tstate = SyntaxState.Normal;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase SyntaxState.OctalNumber:\n\t\t\t\tif (c >= \"0\" && c <= \"7\") {\n\t\t\t\t\tdata[j++] = SyntaxCategory.Literal;\n\t\t\t\t} else {\n\t\t\t\t\ti--;\n\t\t\t\t\tstate = SyntaxState.Normal;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase SyntaxState.BinaryNumber:\n\t\t\t\tif (c == \"0\" || c == \"1\") {\n\t\t\t\t\tdata[j++] = SyntaxCategory.Literal;\n\t\t\t\t} else {\n\t\t\t\t\ti--;\n\t\t\t\t\tstate = SyntaxState.Normal;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tthrow new Error(\"unhandled SyntaxState\");\n\t\t}\t\t\n\t}\n\n\tfor (let s of groupStack) {\n\t\tdata[s.site.startPos] = SyntaxCategory.Error;\n\t}\n\n\treturn data;\n}\n\n\n////////////////////////////\n// Section 37: CoinSelection\n////////////////////////////\n\n/**\n * Returns two lists. The first list contains the selected UTxOs, the second list contains the remaining UTxOs.\n * @typedef {(utxos: TxInput[], amount: Value) => [TxInput[], TxInput[]]} CoinSelectionAlgorithm\n */\n\n/**\n * Collection of common [coin selection algorithms](https://cips.cardano.org/cips/cip2/).\n * @namespace\n */\nexport const CoinSelection = {\n    /**\n     * @internal\n     * @param {TxInput[]} utxos \n     * @param {Value} amount \n     * @param {boolean} largestFirst\n     * @returns {[TxInput[], TxInput[]]} - [picked, not picked that can be used as spares]\n     */\n    selectExtremumFirst: (utxos, amount, largestFirst) => {\n        let sum = new Value();\n\n        /** @type {TxInput[]} */\n        let notSelected = utxos.slice();\n\n        /** @type {TxInput[]} */\n        const selected = [];\n\n        /**\n         * Selects smallest utxos until 'needed' is reached\n         * @param {bigint} neededQuantity\n         * @param {(utxo: TxInput) => bigint} getQuantity\n         */\n        function select(neededQuantity, getQuantity) {\n            // first sort notYetPicked in ascending order when picking smallest first,\n            // and in descending order when picking largest first\n            // sort UTxOs that contain more assets last\n            notSelected.sort((a, b) => {\n                const qa = getQuantity(a);\n                const qb = getQuantity(b);\n\n                const sign = largestFirst ? -1 : 1;\n\n                if (qa != 0n && qb == 0n) {\n                    return sign;\n                } else if (qa == 0n && qb != 0n) {\n                    return -sign;\n                } else if (qa == 0n && qb == 0n) {\n                    return 0;\n                } else {\n                    const na = a.value.assets.nTokenTypes;\n                    const nb = b.value.assets.nTokenTypes;\n\n                    if (na == nb) {\n                        return Number(qa - qb)*sign;\n                    } else if (na < nb) {\n                        return sign;\n                    } else {\n                        return -sign\n                    }\n                }\n            });\n\n            let count = 0n;\n            const remaining = [];\n\n            while (count < neededQuantity || count == 0n) { // must select at least one utxo if neededQuantity == 0n\n                const utxo = notSelected.shift();\n\n                if (utxo === undefined) {\n                    console.error(selected.map(s => JSON.stringify(s.dump(), undefined, \"  \")));\n                    console.error(JSON.stringify(amount.dump(), undefined, \"  \"));\n                    throw new Error(\"not enough utxos to cover amount\");\n                } else {\n                    const qty = getQuantity(utxo);\n\n                    if (qty > 0n) {\n                        count += qty;\n                        selected.push(utxo);\n                        sum = sum.add(utxo.value);\n                    } else {\n                        remaining.push(utxo);\n                    }\n                }\n            }\n\n            notSelected = notSelected.concat(remaining);\n        }\n\n        /**\n         * Select UTxOs while looping through (MintingPolicyHash,TokenName) entries\n         */\n        const mphs = amount.assets.mintingPolicies;\n\n        for (const mph of mphs) {\n            const tokenNames = amount.assets.getTokenNames(mph);\n\n            for (const tokenName of tokenNames) {\n                const need = amount.assets.get(mph, tokenName);\n                const have = sum.assets.get(mph, tokenName);\n\n                if (have < need) {\n                    const diff = need - have;\n\n                    select(diff, (utxo) => utxo.value.assets.get(mph, tokenName));\n                }\n            }\n        }\n\n        // now use the same strategy for lovelace\n        const need = amount.lovelace;\n        const have = sum.lovelace;\n\n        if (have < need) {\n            const diff = need - have;\n\n            select(diff, (utxo) => utxo.value.lovelace);\n        }\n\n        assert(selected.length + notSelected.length == utxos.length, \"internal error: select algorithm doesn't conserve utxos\");\n\n        return [selected, notSelected];\n    },\n\n    /**\n     * Selects UTxOs from a list by iterating through the tokens in the given `Value` and picking the UTxOs containing the smallest corresponding amount first.\n     * This method can be used to eliminate dust UTxOs from a wallet.\n     * @type {CoinSelectionAlgorithm}\n     */\n    selectSmallestFirst: (utxos, amount) => {\n        return CoinSelection.selectExtremumFirst(utxos, amount, false);\n    },\n\n    /**\n     * * Selects UTxOs from a list by iterating through the tokens in the given `Value` and picking the UTxOs containing the largest corresponding amount first.\n     * @type {CoinSelectionAlgorithm}\n     */\n    selectLargestFirst: (utxos, amount) => {\n        return CoinSelection.selectExtremumFirst(utxos, amount, true);\n    }\n}\n\n\n//////////////////////\n// Section 38: Wallets\n//////////////////////\n\n/**\n * An interface type for a wallet that manages a user's UTxOs and addresses.\n * @interface\n * @typedef {object} Wallet\n * @property {() => Promise<boolean>} isMainnet Returns `true` if the wallet is connected to the mainnet.\n * @property {Promise<Address[]>} usedAddresses Returns a list of addresses which already contain UTxOs.\n * @property {Promise<Address[]>} unusedAddresses Returns a list of unique unused addresses which can be used to send UTxOs to with increased anonimity.\n * @property {Promise<TxInput[]>} utxos Returns a list of all the utxos controlled by the wallet.\n * @property {Promise<TxInput[]>} collateral\n * @property {(tx: Tx) => Promise<Signature[]>} signTx Signs a transaction, returning a list of signatures needed for submitting a valid transaction.\n * @property {(tx: Tx) => Promise<TxId>} submitTx Submits a transaction to the blockchain and returns the id of that transaction upon success.\n */\n\n/**\n * Convenience type for browser plugin wallets supporting the CIP 30 dApp connector standard (eg. Eternl, Nami, ...).\n * \n * This is useful in typescript projects to avoid type errors when accessing the handles in `window.cardano`.\n * \n * ```ts\n * // refer to this file in the 'typeRoots' list in tsconfig.json\n *\n * type Cip30SimpleHandle = {\n *   name: string,\n *   icon: string,\n *   enable(): Promise<helios.Cip30Handle>,\n *   isEnabled(): boolean\n * }\n *\n * declare global {\n *   interface Window {\n *     cardano: {\n *       [walletName: string]: Cip30SimpleHandle\n *     };\n *   }\n * }\n * ```\n * \n * @typedef {{\n *     getNetworkId(): Promise<number>,\n *     getUsedAddresses(): Promise<string[]>,\n *     getUnusedAddresses(): Promise<string[]>,\n *     getUtxos(): Promise<string[]>,\n *     getCollateral(): Promise<string[]>,\n *     signTx(txHex: string, partialSign: boolean): Promise<string>,\n *     submitTx(txHex: string): Promise<string>,\n *     experimental: {\n *         getCollateral(): Promise<string[]>\n *     },\n * }} Cip30Handle\n */\n\n/**\n * Implementation of `Wallet` that lets you connect to a browser plugin wallet.\n * @implements {Wallet}\n */\nexport class Cip30Wallet {\n    #handle;\n\n    /**\n     * Constructs Cip30Wallet using the Cip30Handle which is available in the browser window.cardano context.\n     * \n     * ```ts\n     * const handle: helios.Cip30Handle = await window.cardano.eternl.enable()\n     * const wallet = new helios.Cip30Wallet(handle)\n     * ```\n     * @param {Cip30Handle} handle\n     */\n    constructor(handle) {\n        this.#handle = handle;\n    }\n\n    /**\n     * Returns `true` if the wallet is connected to the mainnet.\n     * @returns {Promise<boolean>}\n     */\n    async isMainnet() {\n        return (await this.#handle.getNetworkId()) == 1;\n    }\n\n    /**\n     * Gets a list of addresses which contain(ed) UTxOs.\n     * @type {Promise<Address[]>}\n     */\n    get usedAddresses() {\n        return this.#handle.getUsedAddresses().then(addresses => addresses.map(a => new Address(a)));\n    }\n\n    /**\n     * Gets a list of unique unused addresses which can be used to UTxOs to.\n     * @type {Promise<Address[]>}\n     */\n    get unusedAddresses() {\n        return this.#handle.getUnusedAddresses().then(addresses => addresses.map(a => new Address(a)));\n    }\n\n    /**\n     * Gets the complete list of UTxOs (as `TxInput` instances) sitting at the addresses owned by the wallet.\n     * @type {Promise<TxInput[]>}\n     */\n    get utxos() {\n        return this.#handle.getUtxos().then(utxos => utxos.map(u => TxInput.fromFullCbor(hexToBytes(u))));\n    }\n\n    /**\n     * @type {Promise<TxInput[]>}\n     */\n    get collateral() {\n        const getCollateral = this.#handle.getCollateral || this.#handle.experimental.getCollateral;\n        return getCollateral().then(utxos => utxos.map(u => TxInput.fromFullCbor(hexToBytes(u))));\n    }\n\n    /**\n     * Signs a transaction, returning a list of signatures needed for submitting a valid transaction.\n     * @param {Tx} tx\n     * @returns {Promise<Signature[]>}\n     */\n    async signTx(tx) {\n        const res = await this.#handle.signTx(bytesToHex(tx.toCbor()), true);\n\n        return TxWitnesses.fromCbor(hexToBytes(res)).signatures;\n    }\n\n    /**\n     * Submits a transaction to the blockchain.\n     * @param {Tx} tx\n     * @returns {Promise<TxId>}\n     */\n    async submitTx(tx) {\n        const responseText = await this.#handle.submitTx(bytesToHex(tx.toCbor()));\n\n        return new TxId(responseText);\n    }\n}\n\n/**\n * High-level helper class for instances that implement the `Wallet` interface.\n */\nexport class WalletHelper {\n    #wallet;\n    #getUtxosFallback;\n\n    /**\n     * @param {Wallet} wallet\n     * @param {undefined | ((addr: Address[]) => Promise<TxInput[]>)} getUtxosFallback\n     */\n    constructor(wallet, getUtxosFallback = undefined) {\n        this.#wallet = wallet;\n        this.#getUtxosFallback = getUtxosFallback;\n    }\n\n    /**\n     * Concatenation of `usedAddresses` and `unusedAddresses`.\n     * @type {Promise<Address[]>}\n     */\n    get allAddresses() {\n        return this.#wallet.usedAddresses.then(usedAddress => this.#wallet.unusedAddresses.then(unusedAddresses => usedAddress.concat(unusedAddresses)));\n    }\n\n    /**\n     * @returns {Promise<Value>}\n     */\n    async calcBalance() {\n        let sum = new Value();\n\n        const utxos = await this.getUtxos();\n\n        for (const utxo of utxos) {\n            sum = sum.add(utxo.value);\n        }\n\n        return sum;\n    }\n\n    /**\n     * First `Address` in `allAddresses`.\n     * @type {Promise<Address>}\n     */\n    get baseAddress() {\n        return this.allAddresses.then(addresses => assertDefined(addresses[0]));\n    }\n\n    /**\n     * First `Address` in `unusedAddresses` (falls back to last `Address` in `usedAddresses` if not defined).\n     * @type {Promise<Address>}\n     */\n    get changeAddress() {\n        return this.#wallet.unusedAddresses.then(addresses => {\n            if (addresses.length == 0) {\n                return this.#wallet.usedAddresses.then(addresses => {\n                    if (addresses.length == 0) {\n                        throw new Error(\"no addresses found\")\n                    } else {\n                        return addresses[addresses.length-1];\n                    }\n                })\n            } else {\n                return addresses[0];\n            }\n        });\n    }\n\n    /**\n     * First UTxO in `utxos`. Can be used to distinguish between preview and preprod networks.\n     * @type {Promise<null | TxInput>}\n     */\n    get refUtxo() {\n        return this.getUtxos().then(utxos => {\n            if(utxos.length == 0) {\n                return null;\n            } else {\n                return assertDefined(utxos[0]);\n            }\n        });\n    }\n\n    /**\n     * @returns {Promise<TxInput[]>}\n     */\n    async getUtxos() {\n        try {\n            const utxos = await this.#wallet.utxos;\n\n            if (utxos.length > 0) {\n                return utxos;\n            }\n        } catch (e) {\n            if (!this.#getUtxosFallback) {\n                console.error(\"fallback not set\");\n                throw e;\n            }\n        }\n\n        if (this.#getUtxosFallback) {\n            console.log(\"falling back to retrieving UTxOs through query layer\");\n            return this.#getUtxosFallback(await this.#wallet.usedAddresses);\n        } else {\n            throw new Error(\"wallet returned 0 utxos, set the helper getUtxosFallback callback to use an Api query layer instead\");\n        }\n    }\n    /**\n     * Pick a number of UTxOs needed to cover a given Value. The default coin selection strategy is to pick the smallest first.\n     * @param {Value} amount\n     * @param {CoinSelectionAlgorithm} algorithm\n     * @returns {Promise<[TxInput[], TxInput[]]>} The first list contains the selected UTxOs, the second list contains the remaining UTxOs.\n     */\n    async pickUtxos(amount, algorithm = CoinSelection.selectSmallestFirst) {\n        return algorithm(await this.getUtxos(), amount);\n    }\n\n    /**\n     * Picks a single UTxO intended as collateral.\n     * @param {bigint} amount - 2 Ada should cover most things\n     * @returns {Promise<TxInput>}\n     */\n    async pickCollateral(amount = 2000000n) {\n        const pureUtxos = (await this.getUtxos()).filter(utxo => utxo.value.assets.isZero());\n\n        if (pureUtxos.length == 0) {\n            throw new Error(\"no pure UTxOs in wallet (needed for collateral)\");\n        }\n\n        const bigEnough = pureUtxos.filter(utxo => utxo.value.lovelace >= amount);\n\n        if (bigEnough.length == 0) {\n            throw new Error(\"no UTxO in wallet that is big enough to cover collateral\");\n        }\n\n        bigEnough.sort((a,b) => Number(a.value.lovelace - b.value.lovelace));\n\n        return bigEnough[0];\n    }\n\n    /**\n     * Returns `true` if the `PubKeyHash` in the given `Address` is controlled by the wallet.\n     * @param {Address} addr\n     * @returns {Promise<boolean>}\n     */\n    async isOwnAddress(addr) {\n        const pkh = addr.pubKeyHash;\n\n        if (pkh === null) {\n            return false;\n        } else {\n            return this.isOwnPubKeyHash(pkh);\n        }\n    }\n\n    /**\n     * Returns `true` if the given `PubKeyHash` is controlled by the wallet.\n     * @param {PubKeyHash} pkh\n     * @returns {Promise<boolean>}\n     */\n    async isOwnPubKeyHash(pkh) {\n        const addresses = await this.allAddresses;\n\n        for (const addr of addresses) {\n            const aPkh = addr.pubKeyHash;\n\n            if (aPkh !== null && aPkh.eq(pkh)) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    /**\n     * @returns {Promise<any>}\n     */\n    async toJson() {\n        const isMainnet = (await this.#wallet.isMainnet());\n        const usedAddresses = (await this.#wallet.usedAddresses);\n        const unusedAddresses = (await this.#wallet.unusedAddresses);\n\n        return {\n            isMainnet: isMainnet,\n            usedAddresses: usedAddresses.map(a => a.toBech32()),\n            unusedAddresses: unusedAddresses.map(a => a.toBech32()),\n            utxos: (await this.getUtxos()).map(u => bytesToHex(u.toFullCbor()))\n        };\n    }\n}\n\n/**\n * @implements {Wallet}\n */\nexport class RemoteWallet {\n    #isMainnet;\n    #usedAddresses;\n    #unusedAddresses;\n    #utxos;\n\n    /**\n     * @param {boolean} isMainnet\n     * @param {Address[]} usedAddresses \n     * @param {Address[]} unusedAddresses \n     * @param {TxInput[]} utxos \n     */\n    constructor(isMainnet, usedAddresses, unusedAddresses, utxos) {\n        this.#isMainnet = isMainnet;\n        this.#usedAddresses = usedAddresses;\n        this.#unusedAddresses = unusedAddresses;\n        this.#utxos = utxos;\n    }\n\n    /**\n     * @param {string | Object} obj \n     * @returns {RemoteWallet}\n     */\n    static fromJson(obj) {\n        if (typeof obj == \"string\") {\n            return RemoteWallet.fromJson(JSON.parse(obj));\n        } else {\n            return new RemoteWallet(\n                obj.isMainnet,\n                obj.usedAddresses.map(a => Address.fromBech32(a)),\n                obj.unusedAddresses.map(a => Address.fromBech32(a)),\n                obj.utxos.map(u => TxInput.fromFullCbor(u))\n            )\n        }\n    }\n\n    /**\n     * @returns {Promise<boolean>}\n     */\n    async isMainnet() {\n        return this.#isMainnet;\n    }\n\n    /**\n     * @type {Promise<Address[]>}\n     */\n    get usedAddresses() {\n        return new Promise((resolve, _) => resolve(this.#usedAddresses));\n    }\n    \n    /**\n     * @type {Promise<Address[]>}\n     */\n    get unusedAddresses() {\n        return new Promise((resolve, _) => resolve(this.#unusedAddresses));\n    }\n\n    /**\n     * @type {Promise<TxInput[]>}\n     */\n    get utxos() {\n        return new Promise((resolve, _) => resolve(this.#utxos));\n    }\n\n    /**\n     * @type {Promise<TxInput[]>}\n     */\n    get collateral() {\n        return new Promise((resolve, _) => resolve([]));\n    }\n\n    /**\n     * @param {Tx} tx \n     * @returns {Promise<Signature[]>}\n     */\n    async signTx(tx) {\n        throw new Error(\"a RemoteWallet can't sign a transaction\");\n    }\n\n    /**\n     * @param {Tx} tx \n     * @returns {Promise<TxId>}\n     */\n    async submitTx(tx) {\n        throw new Error(\"a RemoteWallet can't submit a transaction\");\n    }\n}\n\n\n\n//////////////////////\n// Section 39: Network\n//////////////////////\n\n\n/**\n * Blockchain query interface.\n * @interface\n * @typedef {object} Network\n * @property {(address: Address) => Promise<TxInput[]>} getUtxos Returns a complete list of UTxOs at a given address.\n * @property {(id: TxOutputId) => Promise<TxInput>} getUtxo Returns a single TxInput (that might already have been spent).\n * @property {() => Promise<NetworkParams>} getParameters Returns the latest network parameters.\n * @property {(tx: Tx) => Promise<TxId>} submitTx Submits a transaction to the blockchain and returns the id of that transaction upon success.\n */\n\n/**\n * Blockfrost specific implementation of `Network`.\n * @implements {Network}\n */\nexport class BlockfrostV0 {\n    #networkName;\n    #projectId;\n\n    /**\n     * Constructs a BlockfrostV0 using the network name (preview, preprod or mainnet) and your Blockfrost `project_id`.\n     * @param {\"preview\" | \"preprod\" | \"mainnet\"} networkName\n     * @param {string} projectId\n     */\n    constructor(networkName, projectId) {\n        this.#networkName = networkName;\n        this.#projectId = projectId\n    }\n\n    /**\n     * @type {string}\n     */\n    get networkName() {\n        return this.#networkName;\n    }\n\n    /**\n     * Throws an error if a Blockfrost project_id is missing for that specific network.\n     * @param {TxInput} refUtxo\n     * @param {{\n     *     preview?: string,\n     *     preprod?: string,\n     *     mainnet?: string\n     * }} projectIds\n     * @returns {Promise<BlockfrostV0>}\n     */\n    static async resolveUsingUtxo(refUtxo, projectIds) {\n        const mainnetProjectId = projectIds[\"mainnet\"];\n        const preprodProjectId = projectIds[\"preprod\"];\n        const previewProjectId = projectIds[\"preview\"];\n\n        if (preprodProjectId !== undefined) {\n            const preprodNetwork = new BlockfrostV0(\"preprod\", preprodProjectId);\n\n            if (await preprodNetwork.hasUtxo(refUtxo)) {\n                return preprodNetwork;\n            }\n        }\n\n        if (previewProjectId !== undefined) {\n            const previewNetwork = new BlockfrostV0(\"preview\", previewProjectId);\n\n            if (await previewNetwork.hasUtxo(refUtxo)) {\n                return previewNetwork;\n            }\n        }\n\n        if (mainnetProjectId !== undefined) {\n            const mainnetNetwork = new BlockfrostV0(\"mainnet\", mainnetProjectId);\n\n            if (await mainnetNetwork.hasUtxo(refUtxo)) {\n                return mainnetNetwork;\n            }\n        }\n\n        throw new Error(\"refUtxo not found on a network for which you have a project id\");\n    }\n\n    /**\n     * Connects to the same network a given `Wallet` is connected to (preview, preprod or mainnet).\n     * \n     * Throws an error if a Blockfrost project_id is missing for that specific network.\n     * @param {Wallet} wallet\n     * @param {{\n     *     preview?: string,\n     *     preprod?: string,\n     *     mainnet?: string\n     * }} projectIds\n     * @returns {Promise<BlockfrostV0>}\n     */\n    static async resolveUsingWallet(wallet, projectIds) {\n        if (await wallet.isMainnet()) {\n            return new BlockfrostV0(\"mainnet\", assertDefined(projectIds[\"mainnet\"]));\n        } else {\n            const helper = new WalletHelper(wallet);\n\n            const refUtxo = await helper.refUtxo;\n\n            if (refUtxo === null) {\n                throw new Error(\"empty wallet, can't determine which testnet you are connecting to\");\n            } else {\n                return BlockfrostV0.resolveUsingUtxo(refUtxo, projectIds);\n            }\n        }\n    }\n\n     /**\n     * Connects to the same network a given `Wallet` or the given `TxInput` (preview, preprod or mainnet).\n     * \n     * Throws an error if a Blockfrost project_id is missing for that specific network.\n     * @param {TxInput | Wallet} utxoOrWallet\n     * @param {{\n     *     preview?: string,\n     *     preprod?: string,\n     *     mainnet?: string\n     * }} projectIds\n     * @returns {Promise<BlockfrostV0>}\n     */\n    static async resolve(utxoOrWallet, projectIds) {\n        if (utxoOrWallet instanceof TxInput) {\n            return BlockfrostV0.resolveUsingUtxo(utxoOrWallet, projectIds);\n        } else {\n            return BlockfrostV0.resolveUsingWallet(utxoOrWallet, projectIds);\n        }\n    }\n\n    /**\n     * @internal\n     * @param {{unit: string, quantity: string}[]} obj\n     * @returns {Value}\n     */\n    static parseValue(obj) {\n        let value = new Value();\n\n        for (let item of obj) {\n            let qty = BigInt(item.quantity);\n\n            if (item.unit == \"lovelace\") {\n                value = value.add(new Value(qty));\n            } else {\n                let policyID = item.unit.substring(0, 56);\n                let mph = MintingPolicyHash.fromHex(policyID);\n\n                let token = hexToBytes(item.unit.substring(56));\n\n                value = value.add(new Value(0n, new Assets([\n                    [mph, [\n                        [token, qty]\n                    ]]\n                ])));\n            }\n        }\n\n        return value;\n    }\n\n    /**\n     * @returns {Promise<NetworkParams>}\n     */\n    async getParameters() {\n        const response = await fetch(`https://d1t0d7c2nekuk0.cloudfront.net/${this.#networkName}.json`);\n\n        // TODO: build networkParams from Blockfrost endpoints instead\n        return new NetworkParams(await response.json());\n    }\n\n    /**\n     * @returns {Promise<any>}\n     */\n    async getLatestEpoch() {\n        const response = await fetch(`https://cardano-${this.#networkName}.blockfrost.io/api/v0/epochs/latest`, {\n            method: \"GET\",\n            headers: {\n                \"project_id\": this.#projectId\n            }\n        });\n\n        return (await response.json());\n    }\n\n    /**\n     * If the UTxO isn't found an error is throw with the following message format: \"UTxO <txId.utxoId> not found\".\n     * @param {TxOutputId} id\n     * @returns {Promise<TxInput>}\n     */\n    async getUtxo(id) {\n        const txId = id.txId;\n\n        const url = `https://cardano-${this.#networkName}.blockfrost.io/api/v0/txs/${txId.hex}/utxos`;\n\n        const response = await fetch(url, {\n            method: \"GET\",\n            headers: {\n                \"project_id\": this.#projectId\n            }\n        });\n\n        if (!response.ok) {\n            throw new Error(`UTxO ${id.toString()} not found`);\n        } else if (response.status != 200) {\n            throw new Error(`Blockfrost error: ${await response.text()}`);\n        }\n\n        const responseObj = await response.json();\n\n        \n        \n        const outputs = responseObj.outputs;\n\n        if (!outputs) {\n            console.log(responseObj);\n            throw new Error(`unexpected response from Blockfrost`);\n        }\n\n        const obj = outputs[id.utxoIdx];\n\n        if (!obj) {\n            console.log(responseObj);\n            throw new Error(`UTxO ${id.toString()} not found`);\n        }\n\n        obj[\"tx_hash\"] = txId.hex;\n        obj[\"output_index\"] = Number(id.utxoIdx);\n\n        return await this.restoreTxInput(obj);\n    }\n\n    /**\n     * Used by `BlockfrostV0.resolve()`.\n     * @param {TxInput} utxo\n     * @returns {Promise<boolean>}\n     */\n    async hasUtxo(utxo) {\n        const txId = utxo.outputId.txId;\n\n        const url = `https://cardano-${this.#networkName}.blockfrost.io/api/v0/txs/${txId.hex}/utxos`;\n\n        const response = await fetch(url, {\n            method: \"GET\",\n            headers: {\n                \"project_id\": this.#projectId\n            }\n        });\n\n        return response.ok;\n    }\n\n    /**\n     * @internal\n     * @param {{\n     *   address: string\n     *   tx_hash: string\n     *   output_index: number\n     *   amount: {unit: string, quantity: string}[]\n     *   inline_datum: null | string\n     *   data_hash: null | string\n     *   collateral: boolean\n     *   reference_script_hash: null | string\n     * }} obj \n     */\n    async restoreTxInput(obj) {\n        /**\n         * @type {null | UplcProgram}\n         */\n        let refScript = null;\n        if (obj.reference_script_hash !== null) {\n            const url = `https://cardano-${this.#networkName}.blockfrost.io/api/v0/scripts/${obj.reference_script_hash}/cbor`;\n\n            const response = await fetch(url, {\n                method: \"GET\",\n                headers: {\n                    \"project_id\": this.#projectId\n                }\n            });\n\n            const cbor = (await response.json()).cbor;\n\n            refScript = UplcProgram.fromCbor(cbor);\n        }\n\n        return new TxInput(\n            new TxOutputId(TxId.fromHex(obj.tx_hash), obj.output_index),\n            new TxOutput(\n                Address.fromBech32(obj.address),\n                BlockfrostV0.parseValue(obj.amount),\n                obj.inline_datum ? Datum.inline(UplcData.fromCbor(hexToBytes(obj.inline_datum))) : null,\n                refScript\n            )\n        );\n    }\n\n    /**\n     * Gets a complete list of UTxOs at a given `Address`.\n     * Returns oldest UTxOs first, newest last.\n     * @param {Address} address\n     * @returns {Promise<TxInput[]>}\n     */\n    async getUtxos(address) {\n        /**\n         * TODO: pagination\n         */\n\n        const url = `https://cardano-${this.#networkName}.blockfrost.io/api/v0/addresses/${address.toBech32()}/utxos?order=asc`;\n\n        try {\n            const response = await fetch(url, {\n                headers: {\n                    \"project_id\": this.#projectId\n                }\n            });\n\n            if (response.status == 404) {\n                return []; \n            }\n\n            /**\n             * @type {any}\n             */\n            let all = await response.json();\n\n            if (all?.status_code >= 300) {\n                all = [];\n            }\n\n            try {\n                return await Promise.all(all.map(obj => {\n                    return this.restoreTxInput(obj);\n                }));\n            } catch (e) {\n                console.error(\"unable to parse blockfrost utxo format:\", all);\n                throw e;\n            }\n        } catch (e) {\n            if (e.message.includes(\"The requested component has not been found\")) {\n                return []\n            } else {\n                throw e\n            }\n        }\n    }\n\n    /**\n     * Submits a transaction to the blockchain.\n     * @param {Tx} tx\n     * @returns {Promise<TxId>}\n     */\n    async submitTx(tx) {\n        const data = new Uint8Array(tx.toCbor());\n        const url = `https://cardano-${this.#networkName}.blockfrost.io/api/v0/tx/submit`;\n\n        const response = await fetch(url, {\n            method: \"POST\",\n            headers: {\n                \"content-type\": \"application/cbor\",\n                \"project_id\": this.#projectId\n            },\n            body: data\n        }).catch(e => {\n            console.error(e);\n            throw e;\n        });\n\n        const responseText = await response.text();\n\n        if (response.status != 200) {\n            // analyze error and throw a different error if it was detected that an input UTxO might not exist\n            throw new Error(responseText);\n        } else {\n            return new TxId(JSON.parse(responseText));\n        }\n    }\n\n    /**\n     * Allows inspecting the live Blockfrost mempool.\n     */\n    async dumpMempool() {\n        const url = `https://cardano-${this.#networkName}.blockfrost.io/api/v0/mempool`;\n\n        const response = await fetch(url, {\n            method: \"GET\",\n            headers: {\n                \"project_id\": this.#projectId\n            }\n        });\n\n        console.log(await response.text());\n    }\n}\n\n/**\n * Koios network interface.\n * @implements {Network}\n */\nexport class KoiosV0 {\n    #networkName;\n\n    /**\n     * @param {\"preview\" | \"preprod\" | \"mainnet\"} networkName \n     */\n    constructor(networkName) {\n        this.#networkName = networkName;\n    }\n\n    /**\n     * @private\n     * @type {string}\n     */\n    get rootUrl() {\n        return {\n            preview: \"https://preview.koios.rest\",\n            preprod: \"https://preprod.koios.rest\",\n            guildnet: \"https://guild.koios.rest\",\n            mainnet: \"https://api.koios.rest\"\n        }[this.#networkName];\n    }\n\n     /**\n     * @returns {Promise<NetworkParams>}\n     */\n     async getParameters() {\n        const response = await fetch(`https://d1t0d7c2nekuk0.cloudfront.net/${this.#networkName}.json`);\n\n        // TODO: build networkParams from Koios endpoints instead\n        return new NetworkParams(await response.json());\n    }\n\n    /**\n     * @private\n     * @param {TxOutputId[]} ids \n     * @returns {Promise<TxInput[]>}\n     */\n    async getUtxosInternal(ids) {\n        const url = `${this.rootUrl}/api/v0/tx_info`;\n\n        /**\n         * @type {Map<string, number[]>}\n         */\n        const txIds = new Map();\n        \n        ids.forEach(id => {\n            const prev = txIds.get(id.txId.hex);\n\n            if (prev) {\n                prev.push(id.utxoIdx);\n            } else {\n                txIds.set(id.txId.hex, [id.utxoIdx]);\n            }\n        });\n\n        const response = await fetch(url, {\n            method: \"POST\",\n            headers: {\n                \"accept\": \"application/json\",\n                \"content-type\": \"application/json\"\n            },\n            body: JSON.stringify({\n                _tx_hashes: Array.from(txIds.keys())\n            })\n        });\n\n        const responseText = await response.text();\n\n        if (response.status != 200) {\n            // analyze error and throw a different error if it was detected that an input UTxO might not exist\n            throw new Error(responseText);\n        }\n\n        const obj = JSON.parse(responseText);\n\n        /**\n         * @type {Map<string, TxInput>}\n         */\n        const result = new Map();\n\n        const rawTxs = obj;\n\n        if (!Array.isArray(rawTxs)) {\n            throw new Error(`unexpected tx_info format: ${responseText}`);\n        }\n\n        rawTxs.forEach(rawTx => {\n            const rawOutputs = rawTx[\"outputs\"];\n            \n            if (!rawOutputs) {\n                throw new Error(`unexpected tx_info format: ${JSON.stringify(rawTx)}`);\n            }\n\n            const utxoIdxs = assertDefined(txIds.get(rawTx.tx_hash));\n\n            for (let utxoIdx of utxoIdxs) {\n                const id = new TxOutputId(new TxId(rawTx.tx_hash), utxoIdx);\n                \n                const rawOutput = rawOutputs[id.utxoIdx]\n\n                if (!rawOutput) {\n                    throw new Error(`UTxO ${id.toString()} doesn't exist`);\n                }\n\n                const rawPaymentAddr = rawOutput.payment_addr?.bech32;\n\n                if (!rawPaymentAddr || typeof rawPaymentAddr != \"string\") {\n                    throw new Error(`unexpected tx_info format: ${JSON.stringify(rawTx)}`);\n                }\n\n                const rawStakeAddr = rawOutput.stake_addr;\n\n                if (rawStakeAddr === undefined) {\n                    throw new Error(`unexpected tx_info format: ${JSON.stringify(rawTx)}`);\n                }\n\n                const paymentAddr = Address.fromBech32(rawPaymentAddr);\n                \n                const stakeAddr = rawStakeAddr ? StakeAddress.fromBech32(rawStakeAddr) : null;\n\n                const address = Address.fromHashes(\n                    assertDefined(paymentAddr.pubKeyHash ?? paymentAddr.validatorHash),\n                    stakeAddr?.stakingHash ?? null,\n                    this.#networkName != \"mainnet\"\n                );\n\n                const lovelace = BigInt(parseInt(assertDefined(rawOutput.value)));\n\n                assert(lovelace.toString() == rawOutput.value, `unexpected tx_info format: ${JSON.stringify(rawTx)}`)\n\n                /**\n                 * @type {[AssetClass, bigint][]}\n                 */\n                const assets = [];\n\n                for (let rawAsset of rawOutput.asset_list) {\n                    const qty = BigInt(parseInt(rawAsset.quantity));\n                    assert(qty.toString() == rawAsset.quantity, `unexpected tx_info format: ${JSON.stringify(rawTx)}`)\n\n                    assets.push([\n                        new AssetClass(`${rawAsset.policy_id}.${rawAsset.asset_name ?? \"\"}`),\n                        qty\n                    ]);\n                }\n\n                const datum = rawOutput.inline_datum ? \n                    (Datum.inline(UplcData.fromCbor(rawOutput.inline_datum.bytes))) : \n                    (rawOutput.datum_hash ? new HashedDatum(new DatumHash(rawOutput.datum_hash)) : null);\n\n                const refScript = rawOutput.reference_script ? UplcProgram.fromCbor(rawOutput.reference_script) : null;\n\n                const txInput =  new TxInput(\n                    id,\n                    new TxOutput(\n                        address,\n                        new Value(lovelace, new Assets(assets)),\n                        datum,\n                        refScript\n                    )\n                );\n\n                result.set(id.toString(), txInput);\n            }\n        });\n\n        return ids.map(id => assertDefined(result.get(id.toString())));\n    }\n\n     /**\n     * @param {TxInput} refUtxo\n     * @returns {Promise<KoiosV0>}\n     */\n    static async resolveUsingUtxo(refUtxo) {\n        const preprodNetwork = new KoiosV0(\"preprod\");\n\n        if (await preprodNetwork.hasUtxo(refUtxo)) {\n            return preprodNetwork;\n        }\n        \n        const previewNetwork = new KoiosV0(\"preview\");\n\n        if (await previewNetwork.hasUtxo(refUtxo)) {\n            return previewNetwork;\n        }\n\n        const mainnetNetwork = new KoiosV0(\"mainnet\");\n\n        if (await mainnetNetwork.hasUtxo(refUtxo)) {\n            return mainnetNetwork;\n        }\n\n        throw new Error(\"refUtxo not found on any network\");\n    }\n\n    /** \n     * @param {TxOutputId} id \n     * @returns {Promise<TxInput>}\n     */\n    async getUtxo(id) {\n        return assertDefined(await this.getUtxosInternal([id])[0]);\n    }\n\n     /**\n     * Used by `KoiosV0.resolveUsingUtxo()`.\n     * @param {TxInput} utxo\n     * @returns {Promise<boolean>}\n     */\n     async hasUtxo(utxo) {\n        const url = `${this.rootUrl}/api/v0/tx_info`;\n\n        const response = await fetch(url, {\n            method: \"GET\",\n            headers: {\n                \"accept\": \"application/json\",\n                \"content-type\": \"application/json\"\n            },\n            body: JSON.stringify({\n                _tx_hashes: [utxo.outputId.txId.hex]\n            })\n        });\n\n        return response.ok;\n    }\n\n    /**\n     * @param {Address} address \n     * @returns {Promise<TxInput[]>}\n     */\n    async getUtxos(address) {\n        const url = `${this.rootUrl}/api/v0/credential_utxos`;\n\n        const response = await fetch(url, {\n            method: \"POST\",\n            headers: {\n                \"accept\": \"application/json\",\n                \"content-type\": \"application/json\"\n            },\n            body: JSON.stringify({\n                _payment_credentials: [assertDefined(address.pubKeyHash ?? address.validatorHash).hex]\n            })\n        });\n\n        const responseText = await response.text();\n\n        if (response.status != 200) {\n            // analyze error and throw a different error if it was detected that an input UTxO might not exist\n            throw new Error(responseText);\n        }\n\n        const obj = JSON.parse(responseText);\n\n        if (!Array.isArray(obj)) {\n            throw new Error(`unexpected credential_utxos format: ${responseText}`);\n        }\n\n        const ids = obj.map(rawId => {\n            const utxoIdx = Number(rawId.tx_index);\n            const id = new TxOutputId(new TxId(rawId.tx_hash), utxoIdx);\n\n            return id;\n        });\n\n        return this.getUtxosInternal(ids);\n    }\n\n    /**\n     * @param {Tx} tx \n     * @returns {Promise<TxId>}\n     */\n    async submitTx(tx) {\n        const url = `${this.rootUrl}/api/v0/submittx`;\n\n        const response = await fetch(url, {\n            method: \"POST\",\n            headers: {\n                \"accept\": \"application/json\",\n                \"content-type\": \"application/cbor\"\n            },\n            body: new Uint8Array(tx.toCbor())\n        });\n\n        const responseText = await response.text();\n\n        if (response.status != 200) {\n            // analyze error and throw a different error if it was detected that an input UTxO might not exist\n            throw new Error(responseText);\n        }\n\n        return new TxId(responseText);\n    }\n}\n\n\n///////////////////////\n// Section 40: Emulator\n///////////////////////\n/**\n * Raw network parameters used by Emulator\n * @internal\n */\nexport const rawNetworkEmulatorParams = {\n    shelleyGenesis: {\n        activeSlotsCoeff: 0.05,\n        epochLength: 432000,\n        genDelegs: {\n            \"637f2e950b0fd8f8e3e811c5fbeb19e411e7a2bf37272b84b29c1a0b\": {\n                delegate: \"aae9293510344ddd636364c2673e34e03e79e3eefa8dbaa70e326f7d\",\n                vrf: \"227116365af2ed943f1a8b5e6557bfaa34996f1578eec667a5e2b361c51e4ce7\"\n            },\n            \"8a4b77c4f534f8b8cc6f269e5ebb7ba77fa63a476e50e05e66d7051c\": {\n                delegate: \"d15422b2e8b60e500a82a8f4ceaa98b04e55a0171d1125f6c58f8758\",\n                vrf: \"0ada6c25d62db5e1e35d3df727635afa943b9e8a123ab83785e2281605b09ce2\"\n            },\n            \"b00470cd193d67aac47c373602fccd4195aad3002c169b5570de1126\": {\n                delegate: \"b3b539e9e7ed1b32fbf778bf2ebf0a6b9f980eac90ac86623d11881a\",\n                vrf:\"0ff0ce9b820376e51c03b27877cd08f8ba40318f1a9f85a3db0b60dd03f71a7a\"\n            },\n            \"b260ffdb6eba541fcf18601923457307647dce807851b9d19da133ab\": {\n                delegate: \"7c64eb868b4ef566391a321c85323f41d2b95480d7ce56ad2abcb022\",\n                vrf: \"7fb22abd39d550c9a022ec8104648a26240a9ff9c88b8b89a6e20d393c03098e\"\n            },\n            \"ced1599fd821a39593e00592e5292bdc1437ae0f7af388ef5257344a\": {\n                delegate: \"de7ca985023cf892f4de7f5f1d0a7181668884752d9ebb9e96c95059\",\n                vrf:\"c301b7fc4d1b57fb60841bcec5e3d2db89602e5285801e522fce3790987b1124\"\n            },\n            \"dd2a7d71a05bed11db61555ba4c658cb1ce06c8024193d064f2a66ae\":{\n                delegate:\"1e113c218899ee7807f4028071d0e108fc790dade9fd1a0d0b0701ee\",\n                vrf:\"faf2702aa4893c877c622ab22dfeaf1d0c8aab98b837fe2bf667314f0d043822\"\n            },\n            \"f3b9e74f7d0f24d2314ea5dfbca94b65b2059d1ff94d97436b82d5b4\":{\n                delegate: \"fd637b08cc379ef7b99c83b416458fcda8a01a606041779331008fb9\",\n                vrf: \"37f2ea7c843a688159ddc2c38a2f997ab465150164a9136dca69564714b73268\"\n            }\n        },\n        initialFunds: {},\n        maxKESEvolutions: 120,\n        maxLovelaceSupply: 45000000000000000,\n        networkId: \"Testnet\",\n        networkMagic: 1,\n        protocolParams: {\n            a0:0.1,\n            decentralisationParam:1,\n            eMax:18,\n            extraEntropy:{\n                tag: \"NeutralNonce\"\n            },\n            keyDeposit:400000,\n            maxBlockBodySize:65536,\n            maxBlockHeaderSize:1100,\n            maxTxSize:16384,\n            minFeeA:44,\n            minFeeB:155381,\n            minPoolCost:0,\n            minUTxOValue:0,\n            nOpt:50,\n            poolDeposit:500000000,\n            protocolVersion:{\n                major:2,\n                minor:0\n            },\n            rho:0.00178650067,\n            tau:0.1\n        },\n        securityParam: 2160,\n        slotLength:1,\n        slotsPerKESPeriod:86400,\n        staking:{\n            pools:{},\n            stake:{}\n        },\n        systemStart:\"2022-06-01T00:00:00Z\",\n        updateQuorum:5\n    },\n    alonzoGenesis:{\n        lovelacePerUTxOWord:34482,\n        executionPrices:{\n            prSteps:{\n                numerator:721,\n                denominator:10000000\n            },\n            prMem:{\n                numerator:577,\n                denominator:10000\n            }\n        },\n        maxTxExUnits:{\n            exUnitsMem:10000000,\n            exUnitsSteps:10000000000\n        },\n        maxBlockExUnits:{\n            exUnitsMem:50000000,\n            exUnitsSteps:40000000000\n        },\n        maxValueSize:5000,\n        collateralPercentage:150,\n        maxCollateralInputs:3,\n        costModels:{\n            PlutusV1:{\n                \"sha2_256-memory-arguments\":4,\n                \"equalsString-cpu-arguments-constant\":1000,\n                \"cekDelayCost-exBudgetMemory\":100,\n                \"lessThanEqualsByteString-cpu-arguments-intercept\":103599,\n                \"divideInteger-memory-arguments-minimum\":1,\n                \"appendByteString-cpu-arguments-slope\":621,\n                \"blake2b-cpu-arguments-slope\":29175,\n                \"iData-cpu-arguments\":150000,\n                \"encodeUtf8-cpu-arguments-slope\":1000,\n                \"unBData-cpu-arguments\":150000,\n                \"multiplyInteger-cpu-arguments-intercept\":61516,\n                \"cekConstCost-exBudgetMemory\":100,\n                \"nullList-cpu-arguments\":150000,\n                \"equalsString-cpu-arguments-intercept\":150000,\n                \"trace-cpu-arguments\":150000,\n                \"mkNilData-memory-arguments\":32,\n                \"lengthOfByteString-cpu-arguments\":150000,\n                \"cekBuiltinCost-exBudgetCPU\":29773,\n                \"bData-cpu-arguments\":150000,\n                \"subtractInteger-cpu-arguments-slope\":0,\n                \"unIData-cpu-arguments\":150000,\n                \"consByteString-memory-arguments-intercept\":0,\n                \"divideInteger-memory-arguments-slope\":1,\n                \"divideInteger-cpu-arguments-model-arguments-slope\":118,\n                \"listData-cpu-arguments\":150000,\n                \"headList-cpu-arguments\":150000,\n                \"chooseData-memory-arguments\":32,\n                \"equalsInteger-cpu-arguments-intercept\":136542,\n                \"sha3_256-cpu-arguments-slope\":82363,\n                \"sliceByteString-cpu-arguments-slope\":5000,\n                \"unMapData-cpu-arguments\":150000,\n                \"lessThanInteger-cpu-arguments-intercept\":179690,\n                \"mkCons-cpu-arguments\":150000,\n                \"appendString-memory-arguments-intercept\":0,\n                \"modInteger-cpu-arguments-model-arguments-slope\":118,\n                \"ifThenElse-cpu-arguments\":1,\n                \"mkNilPairData-cpu-arguments\":150000,\n                \"lessThanEqualsInteger-cpu-arguments-intercept\":145276,\n                \"addInteger-memory-arguments-slope\":1,\n                \"chooseList-memory-arguments\":32,\"constrData-memory-arguments\":32,\n                \"decodeUtf8-cpu-arguments-intercept\":150000,\n                \"equalsData-memory-arguments\":1,\n                \"subtractInteger-memory-arguments-slope\":1,\n                \"appendByteString-memory-arguments-intercept\":0,\n                \"lengthOfByteString-memory-arguments\":4,\n                \"headList-memory-arguments\":32,\n                \"listData-memory-arguments\":32,\n                \"consByteString-cpu-arguments-intercept\":150000,\n                \"unIData-memory-arguments\":32,\n                \"remainderInteger-memory-arguments-minimum\":1,\n                \"bData-memory-arguments\":32,\n                \"lessThanByteString-cpu-arguments-slope\":248,\n                \"encodeUtf8-memory-arguments-intercept\":0,\n                \"cekStartupCost-exBudgetCPU\":100,\n                \"multiplyInteger-memory-arguments-intercept\":0,\n                \"unListData-memory-arguments\":32,\n                \"remainderInteger-cpu-arguments-model-arguments-slope\":118,\n                \"cekVarCost-exBudgetCPU\":29773,\n                \"remainderInteger-memory-arguments-slope\":1,\n                \"cekForceCost-exBudgetCPU\":29773,\n                \"sha2_256-cpu-arguments-slope\":29175,\n                \"equalsInteger-memory-arguments\":1,\n                \"indexByteString-memory-arguments\":1,\n                \"addInteger-memory-arguments-intercept\":1,\n                \"chooseUnit-cpu-arguments\":150000,\n                \"sndPair-cpu-arguments\":150000,\n                \"cekLamCost-exBudgetCPU\":29773,\n                \"fstPair-cpu-arguments\":150000,\n                \"quotientInteger-memory-arguments-minimum\":1,\n                \"decodeUtf8-cpu-arguments-slope\":1000,\n                \"lessThanInteger-memory-arguments\":1,\n                \"lessThanEqualsInteger-cpu-arguments-slope\":1366,\n                \"fstPair-memory-arguments\":32,\n                \"modInteger-memory-arguments-intercept\":0,\n                \"unConstrData-cpu-arguments\":150000,\n                \"lessThanEqualsInteger-memory-arguments\":1,\n                \"chooseUnit-memory-arguments\":32,\n                \"sndPair-memory-arguments\":32,\n                \"addInteger-cpu-arguments-intercept\":197209,\n                \"decodeUtf8-memory-arguments-slope\":8,\n                \"equalsData-cpu-arguments-intercept\":150000,\n                \"mapData-cpu-arguments\":150000,\n                \"mkPairData-cpu-arguments\":150000,\n                \"quotientInteger-cpu-arguments-constant\":148000,\n                \"consByteString-memory-arguments-slope\":1,\n                \"cekVarCost-exBudgetMemory\":100,\n                \"indexByteString-cpu-arguments\":150000,\n                \"unListData-cpu-arguments\":150000,\n                \"equalsInteger-cpu-arguments-slope\":1326,\n                \"cekStartupCost-exBudgetMemory\":100,\n                \"subtractInteger-cpu-arguments-intercept\":197209,\n                \"divideInteger-cpu-arguments-model-arguments-intercept\":425507,\n\t\t\t\t\"divideInteger-memory-arguments-intercept\":0,\n\t\t\t\t\"cekForceCost-exBudgetMemory\":100,\n\t\t\t\t\"blake2b-cpu-arguments-intercept\":2477736,\n\t\t\t\t\"remainderInteger-cpu-arguments-constant\":148000,\n\t\t\t\t\"tailList-cpu-arguments\":150000,\n\t\t\t\t\"encodeUtf8-cpu-arguments-intercept\":150000,\n\t\t\t\t\"equalsString-cpu-arguments-slope\":1000,\n\t\t\t\t\"lessThanByteString-memory-arguments\":1,\n\t\t\t\t\"multiplyInteger-cpu-arguments-slope\":11218,\n\t\t\t\t\"appendByteString-cpu-arguments-intercept\":396231,\n\t\t\t\t\"lessThanEqualsByteString-cpu-arguments-slope\":248,\n\t\t\t\t\"modInteger-memory-arguments-slope\":1,\n\t\t\t\t\"addInteger-cpu-arguments-slope\":0,\n\t\t\t\t\"equalsData-cpu-arguments-slope\":10000,\n\t\t\t\t\"decodeUtf8-memory-arguments-intercept\":0,\n\t\t\t\t\"chooseList-cpu-arguments\":150000,\n\t\t\t\t\"constrData-cpu-arguments\":150000,\n\t\t\t\t\"equalsByteString-memory-arguments\":1,\n\t\t\t\t\"cekApplyCost-exBudgetCPU\":29773,\n\t\t\t\t\"quotientInteger-memory-arguments-slope\":1,\n\t\t\t\t\"verifySignature-cpu-arguments-intercept\":3345831,\n\t\t\t\t\"unMapData-memory-arguments\":32,\n\t\t\t\t\"mkCons-memory-arguments\":32,\n\t\t\t\t\"sliceByteString-memory-arguments-slope\":1,\n\t\t\t\t\"sha3_256-memory-arguments\":4,\n\t\t\t\t\"ifThenElse-memory-arguments\":1,\n\t\t\t\t\"mkNilPairData-memory-arguments\":32,\n\t\t\t\t\"equalsByteString-cpu-arguments-slope\":247,\n\t\t\t\t\"appendString-cpu-arguments-intercept\":150000,\n\t\t\t\t\"quotientInteger-cpu-arguments-model-arguments-slope\":118,\n\t\t\t\t\"cekApplyCost-exBudgetMemory\":100,\n\t\t\t\t\"equalsString-memory-arguments\":1,\n\t\t\t\t\"multiplyInteger-memory-arguments-slope\":1,\n\t\t\t\t\"cekBuiltinCost-exBudgetMemory\":100,\n\t\t\t\t\"remainderInteger-memory-arguments-intercept\":0,\n\t\t\t\t\"sha2_256-cpu-arguments-intercept\":2477736,\n\t\t\t\t\"remainderInteger-cpu-arguments-model-arguments-intercept\":425507,\n\t\t\t\t\"lessThanEqualsByteString-memory-arguments\":1,\n\t\t\t\t\"tailList-memory-arguments\":32,\n\t\t\t\t\"mkNilData-cpu-arguments\":150000,\n\t\t\t\t\"chooseData-cpu-arguments\":150000,\n\t\t\t\t\"unBData-memory-arguments\":32,\n\t\t\t\t\"blake2b-memory-arguments\":4,\n\t\t\t\t\"iData-memory-arguments\":32,\n\t\t\t\t\"nullList-memory-arguments\":32,\n\t\t\t\t\"cekDelayCost-exBudgetCPU\":29773,\n\t\t\t\t\"subtractInteger-memory-arguments-intercept\":1,\n\t\t\t\t\"lessThanByteString-cpu-arguments-intercept\":103599,\n\t\t\t\t\"consByteString-cpu-arguments-slope\":1000,\n\t\t\t\t\"appendByteString-memory-arguments-slope\":1,\n\t\t\t\t\"trace-memory-arguments\":32,\n\t\t\t\t\"divideInteger-cpu-arguments-constant\":148000,\n\t\t\t\t\"cekConstCost-exBudgetCPU\":29773,\n\t\t\t\t\"encodeUtf8-memory-arguments-slope\":8,\n\t\t\t\t\"quotientInteger-cpu-arguments-model-arguments-intercept\":425507,\n\t\t\t\t\"mapData-memory-arguments\":32,\n\t\t\t\t\"appendString-cpu-arguments-slope\":1000,\n\t\t\t\t\"modInteger-cpu-arguments-constant\":148000,\n\t\t\t\t\"verifySignature-cpu-arguments-slope\":1,\n\t\t\t\t\"unConstrData-memory-arguments\":32,\n\t\t\t\t\"quotientInteger-memory-arguments-intercept\":0,\n\t\t\t\t\"equalsByteString-cpu-arguments-constant\":150000,\n\t\t\t\t\"sliceByteString-memory-arguments-intercept\":0,\n\t\t\t\t\"mkPairData-memory-arguments\":32,\n\t\t\t\t\"equalsByteString-cpu-arguments-intercept\":112536,\n\t\t\t\t\"appendString-memory-arguments-slope\":1,\n\t\t\t\t\"lessThanInteger-cpu-arguments-slope\":497,\n\t\t\t\t\"modInteger-cpu-arguments-model-arguments-intercept\":425507,\n\t\t\t\t\"modInteger-memory-arguments-minimum\":1,\n\t\t\t\t\"sha3_256-cpu-arguments-intercept\":0,\n\t\t\t\t\"verifySignature-memory-arguments\":1,\n\t\t\t\t\"cekLamCost-exBudgetMemory\":100,\n\t\t\t\t\"sliceByteString-cpu-arguments-intercept\":150000\n\t\t\t}\n\t\t}\n\t},\n\tlatestParams:{\n\t\tcollateralPercentage:150,\n\t\tcostModels:{\n\t\t\tPlutusScriptV1:{\n\t\t\t\t\"addInteger-cpu-arguments-intercept\":205665,\n\t\t\t\t\"addInteger-cpu-arguments-slope\":812,\n\t\t\t\t\"addInteger-memory-arguments-intercept\":1,\n\t\t\t\t\"addInteger-memory-arguments-slope\":1,\n\t\t\t\t\"appendByteString-cpu-arguments-intercept\":1000,\n\t\t\t\t\"appendByteString-cpu-arguments-slope\":571,\n\t\t\t\t\"appendByteString-memory-arguments-intercept\":0,\n\t\t\t\t\"appendByteString-memory-arguments-slope\":1,\n\t\t\t\t\"appendString-cpu-arguments-intercept\":1000,\n\t\t\t\t\"appendString-cpu-arguments-slope\":24177,\n\t\t\t\t\"appendString-memory-arguments-intercept\":4,\n\t\t\t\t\"appendString-memory-arguments-slope\":1,\n\t\t\t\t\"bData-cpu-arguments\":1000,\n\t\t\t\t\"bData-memory-arguments\":32,\n\t\t\t\t\"blake2b_256-cpu-arguments-intercept\":117366,\n\t\t\t\t\"blake2b_256-cpu-arguments-slope\":10475,\n\t\t\t\t\"blake2b_256-memory-arguments\":4,\n\t\t\t\t\"cekApplyCost-exBudgetCPU\":23000,\n\t\t\t\t\"cekApplyCost-exBudgetMemory\":100,\n\t\t\t\t\"cekBuiltinCost-exBudgetCPU\":23000,\n\t\t\t\t\"cekBuiltinCost-exBudgetMemory\":100,\n\t\t\t\t\"cekConstCost-exBudgetCPU\":23000,\n\t\t\t\t\"cekConstCost-exBudgetMemory\":100,\n\t\t\t\t\"cekDelayCost-exBudgetCPU\":23000,\n\t\t\t\t\"cekDelayCost-exBudgetMemory\":100,\n\t\t\t\t\"cekForceCost-exBudgetCPU\":23000,\n\t\t\t\t\"cekForceCost-exBudgetMemory\":100,\n\t\t\t\t\"cekLamCost-exBudgetCPU\":23000,\n\t\t\t\t\"cekLamCost-exBudgetMemory\":100,\n\t\t\t\t\"cekStartupCost-exBudgetCPU\":100,\n\t\t\t\t\"cekStartupCost-exBudgetMemory\":100,\n\t\t\t\t\"cekVarCost-exBudgetCPU\":23000,\n\t\t\t\t\"cekVarCost-exBudgetMemory\":100,\n\t\t\t\t\"chooseData-cpu-arguments\":19537,\n\t\t\t\t\"chooseData-memory-arguments\":32,\n\t\t\t\t\"chooseList-cpu-arguments\":175354,\n\t\t\t\t\"chooseList-memory-arguments\":32,\n\t\t\t\t\"chooseUnit-cpu-arguments\":46417,\n\t\t\t\t\"chooseUnit-memory-arguments\":4,\n\t\t\t\t\"consByteString-cpu-arguments-intercept\":221973,\n\t\t\t\t\"consByteString-cpu-arguments-slope\":511,\n\t\t\t\t\"consByteString-memory-arguments-intercept\":0,\n\t\t\t\t\"consByteString-memory-arguments-slope\":1,\n\t\t\t\t\"constrData-cpu-arguments\":89141,\n\t\t\t\t\"constrData-memory-arguments\":32,\n\t\t\t\t\"decodeUtf8-cpu-arguments-intercept\":497525,\n\t\t\t\t\"decodeUtf8-cpu-arguments-slope\":14068,\n\t\t\t\t\"decodeUtf8-memory-arguments-intercept\":4,\n\t\t\t\t\"decodeUtf8-memory-arguments-slope\":2,\n\t\t\t\t\"divideInteger-cpu-arguments-constant\":196500,\n\t\t\t\t\"divideInteger-cpu-arguments-model-arguments-intercept\":453240,\n\t\t\t\t\"divideInteger-cpu-arguments-model-arguments-slope\":220,\n\t\t\t\t\"divideInteger-memory-arguments-intercept\":0,\n\t\t\t\t\"divideInteger-memory-arguments-minimum\":1,\n\t\t\t\t\"divideInteger-memory-arguments-slope\":1,\n\t\t\t\t\"encodeUtf8-cpu-arguments-intercept\":1000,\n\t\t\t\t\"encodeUtf8-cpu-arguments-slope\":28662,\n\t\t\t\t\"encodeUtf8-memory-arguments-intercept\":4,\n\t\t\t\t\"encodeUtf8-memory-arguments-slope\":2,\n\t\t\t\t\"equalsByteString-cpu-arguments-constant\":245000,\n\t\t\t\t\"equalsByteString-cpu-arguments-intercept\":216773,\n\t\t\t\t\"equalsByteString-cpu-arguments-slope\":62,\n\t\t\t\t\"equalsByteString-memory-arguments\":1,\n\t\t\t\t\"equalsData-cpu-arguments-intercept\":1060367,\n\t\t\t\t\"equalsData-cpu-arguments-slope\":12586,\n\t\t\t\t\"equalsData-memory-arguments\":1,\n\t\t\t\t\"equalsInteger-cpu-arguments-intercept\":208512,\n\t\t\t\t\"equalsInteger-cpu-arguments-slope\":421,\n\t\t\t\t\"equalsInteger-memory-arguments\":1,\n\t\t\t\t\"equalsString-cpu-arguments-constant\":187000,\n\t\t\t\t\"equalsString-cpu-arguments-intercept\":1000,\n\t\t\t\t\"equalsString-cpu-arguments-slope\":52998,\n\t\t\t\t\"equalsString-memory-arguments\":1,\n\t\t\t\t\"fstPair-cpu-arguments\":80436,\n\t\t\t\t\"fstPair-memory-arguments\":32,\n\t\t\t\t\"headList-cpu-arguments\":43249,\n\t\t\t\t\"headList-memory-arguments\":32,\n\t\t\t\t\"iData-cpu-arguments\":1000,\n\t\t\t\t\"iData-memory-arguments\":32,\n\t\t\t\t\"ifThenElse-cpu-arguments\":80556,\n\t\t\t\t\"ifThenElse-memory-arguments\":1,\n\t\t\t\t\"indexByteString-cpu-arguments\":57667,\n\t\t\t\t\"indexByteString-memory-arguments\":4,\n\t\t\t\t\"lengthOfByteString-cpu-arguments\":1000,\n\t\t\t\t\"lengthOfByteString-memory-arguments\":10,\n\t\t\t\t\"lessThanByteString-cpu-arguments-intercept\":197145,\n\t\t\t\t\"lessThanByteString-cpu-arguments-slope\":156,\n\t\t\t\t\"lessThanByteString-memory-arguments\":1,\n\t\t\t\t\"lessThanEqualsByteString-cpu-arguments-intercept\":197145,\n\t\t\t\t\"lessThanEqualsByteString-cpu-arguments-slope\":156,\n\t\t\t\t\"lessThanEqualsByteString-memory-arguments\":1,\n\t\t\t\t\"lessThanEqualsInteger-cpu-arguments-intercept\":204924,\n\t\t\t\t\"lessThanEqualsInteger-cpu-arguments-slope\":473,\n\t\t\t\t\"lessThanEqualsInteger-memory-arguments\":1,\n\t\t\t\t\"lessThanInteger-cpu-arguments-intercept\":208896,\n\t\t\t\t\"lessThanInteger-cpu-arguments-slope\":511,\n\t\t\t\t\"lessThanInteger-memory-arguments\":1,\n\t\t\t\t\"listData-cpu-arguments\":52467,\n\t\t\t\t\"listData-memory-arguments\":32,\n\t\t\t\t\"mapData-cpu-arguments\":64832,\n\t\t\t\t\"mapData-memory-arguments\":32,\n\t\t\t\t\"mkCons-cpu-arguments\":65493,\n\t\t\t\t\"mkCons-memory-arguments\":32,\n\t\t\t\t\"mkNilData-cpu-arguments\":22558,\n\t\t\t\t\"mkNilData-memory-arguments\":32,\n\t\t\t\t\"mkNilPairData-cpu-arguments\":16563,\n\t\t\t\t\"mkNilPairData-memory-arguments\":32,\n\t\t\t\t\"mkPairData-cpu-arguments\":76511,\n\t\t\t\t\"mkPairData-memory-arguments\":32,\n\t\t\t\t\"modInteger-cpu-arguments-constant\":196500,\n\t\t\t\t\"modInteger-cpu-arguments-model-arguments-intercept\":453240,\n\t\t\t\t\"modInteger-cpu-arguments-model-arguments-slope\":220,\n\t\t\t\t\"modInteger-memory-arguments-intercept\":0,\n\t\t\t\t\"modInteger-memory-arguments-minimum\":1,\n\t\t\t\t\"modInteger-memory-arguments-slope\":1,\n\t\t\t\t\"multiplyInteger-cpu-arguments-intercept\":69522,\n\t\t\t\t\"multiplyInteger-cpu-arguments-slope\":11687,\n\t\t\t\t\"multiplyInteger-memory-arguments-intercept\":0,\n\t\t\t\t\"multiplyInteger-memory-arguments-slope\":1,\n\t\t\t\t\"nullList-cpu-arguments\":60091,\n\t\t\t\t\"nullList-memory-arguments\":32,\n\t\t\t\t\"quotientInteger-cpu-arguments-constant\":196500,\n\t\t\t\t\"quotientInteger-cpu-arguments-model-arguments-intercept\":453240,\n\t\t\t\t\"quotientInteger-cpu-arguments-model-arguments-slope\":220,\n\t\t\t\t\"quotientInteger-memory-arguments-intercept\":0,\n\t\t\t\t\"quotientInteger-memory-arguments-minimum\":1,\n\t\t\t\t\"quotientInteger-memory-arguments-slope\":1,\n\t\t\t\t\"remainderInteger-cpu-arguments-constant\":196500,\n\t\t\t\t\"remainderInteger-cpu-arguments-model-arguments-intercept\":453240,\n\t\t\t\t\"remainderInteger-cpu-arguments-model-arguments-slope\":220,\n\t\t\t\t\"remainderInteger-memory-arguments-intercept\":0,\n\t\t\t\t\"remainderInteger-memory-arguments-minimum\":1,\n\t\t\t\t\"remainderInteger-memory-arguments-slope\":1,\n\t\t\t\t\"sha2_256-cpu-arguments-intercept\":806990,\n\t\t\t\t\"sha2_256-cpu-arguments-slope\":30482,\n\t\t\t\t\"sha2_256-memory-arguments\":4,\n\t\t\t\t\"sha3_256-cpu-arguments-intercept\":1927926,\n\t\t\t\t\"sha3_256-cpu-arguments-slope\":82523,\n\t\t\t\t\"sha3_256-memory-arguments\":4,\n\t\t\t\t\"sliceByteString-cpu-arguments-intercept\":265318,\n\t\t\t\t\"sliceByteString-cpu-arguments-slope\":0,\n\t\t\t\t\"sliceByteString-memory-arguments-intercept\":4,\n\t\t\t\t\"sliceByteString-memory-arguments-slope\":0,\n\t\t\t\t\"sndPair-cpu-arguments\":85931,\n\t\t\t\t\"sndPair-memory-arguments\":32,\n\t\t\t\t\"subtractInteger-cpu-arguments-intercept\":205665,\n\t\t\t\t\"subtractInteger-cpu-arguments-slope\":812,\n\t\t\t\t\"subtractInteger-memory-arguments-intercept\":1,\n\t\t\t\t\"subtractInteger-memory-arguments-slope\":1,\n\t\t\t\t\"tailList-cpu-arguments\":41182,\n\t\t\t\t\"tailList-memory-arguments\":32,\n\t\t\t\t\"trace-cpu-arguments\":212342,\n\t\t\t\t\"trace-memory-arguments\":32,\n\t\t\t\t\"unBData-cpu-arguments\":31220,\n\t\t\t\t\"unBData-memory-arguments\":32,\n\t\t\t\t\"unConstrData-cpu-arguments\":32696,\n\t\t\t\t\"unConstrData-memory-arguments\":32,\n\t\t\t\t\"unIData-cpu-arguments\":43357,\n\t\t\t\t\"unIData-memory-arguments\":32,\n\t\t\t\t\"unListData-cpu-arguments\":32247,\n\t\t\t\t\"unListData-memory-arguments\":32,\n\t\t\t\t\"unMapData-cpu-arguments\":38314,\n\t\t\t\t\"unMapData-memory-arguments\":32,\n\t\t\t\t\"verifyEd25519Signature-cpu-arguments-intercept\":9462713,\n\t\t\t\t\"verifyEd25519Signature-cpu-arguments-slope\":1021,\n\t\t\t\t\"verifyEd25519Signature-memory-arguments\":10\n\t\t\t},\n\t\t\tPlutusScriptV2:{\n\t\t\t\t\"addInteger-cpu-arguments-intercept\":205665,\n\t\t\t\t\"addInteger-cpu-arguments-slope\":812,\n\t\t\t\t\"addInteger-memory-arguments-intercept\":1,\n\t\t\t\t\"addInteger-memory-arguments-slope\":1,\n\t\t\t\t\"appendByteString-cpu-arguments-intercept\":1000,\n\t\t\t\t\"appendByteString-cpu-arguments-slope\":571,\n\t\t\t\t\"appendByteString-memory-arguments-intercept\":0,\n\t\t\t\t\"appendByteString-memory-arguments-slope\":1,\n\t\t\t\t\"appendString-cpu-arguments-intercept\":1000,\n\t\t\t\t\"appendString-cpu-arguments-slope\":24177,\n\t\t\t\t\"appendString-memory-arguments-intercept\":4,\n\t\t\t\t\"appendString-memory-arguments-slope\":1,\n\t\t\t\t\"bData-cpu-arguments\":1000,\n\t\t\t\t\"bData-memory-arguments\":32,\n\t\t\t\t\"blake2b_256-cpu-arguments-intercept\":117366,\n\t\t\t\t\"blake2b_256-cpu-arguments-slope\":10475,\n\t\t\t\t\"blake2b_256-memory-arguments\":4,\n\t\t\t\t\"cekApplyCost-exBudgetCPU\":23000,\n\t\t\t\t\"cekApplyCost-exBudgetMemory\":100,\n\t\t\t\t\"cekBuiltinCost-exBudgetCPU\":23000,\n\t\t\t\t\"cekBuiltinCost-exBudgetMemory\":100,\n\t\t\t\t\"cekConstCost-exBudgetCPU\":23000,\n\t\t\t\t\"cekConstCost-exBudgetMemory\":100,\n\t\t\t\t\"cekDelayCost-exBudgetCPU\":23000,\n\t\t\t\t\"cekDelayCost-exBudgetMemory\":100,\n\t\t\t\t\"cekForceCost-exBudgetCPU\":23000,\n\t\t\t\t\"cekForceCost-exBudgetMemory\":100,\n\t\t\t\t\"cekLamCost-exBudgetCPU\":23000,\n\t\t\t\t\"cekLamCost-exBudgetMemory\":100,\n\t\t\t\t\"cekStartupCost-exBudgetCPU\":100,\n\t\t\t\t\"cekStartupCost-exBudgetMemory\":100,\n\t\t\t\t\"cekVarCost-exBudgetCPU\":23000,\n\t\t\t\t\"cekVarCost-exBudgetMemory\":100,\n\t\t\t\t\"chooseData-cpu-arguments\":19537,\n\t\t\t\t\"chooseData-memory-arguments\":32,\n\t\t\t\t\"chooseList-cpu-arguments\":175354,\n\t\t\t\t\"chooseList-memory-arguments\":32,\n\t\t\t\t\"chooseUnit-cpu-arguments\":46417,\n\t\t\t\t\"chooseUnit-memory-arguments\":4,\n\t\t\t\t\"consByteString-cpu-arguments-intercept\":221973,\n\t\t\t\t\"consByteString-cpu-arguments-slope\":511,\n\t\t\t\t\"consByteString-memory-arguments-intercept\":0,\n\t\t\t\t\"consByteString-memory-arguments-slope\":1,\n\t\t\t\t\"constrData-cpu-arguments\":89141,\n\t\t\t\t\"constrData-memory-arguments\":32,\n\t\t\t\t\"decodeUtf8-cpu-arguments-intercept\":497525,\n\t\t\t\t\"decodeUtf8-cpu-arguments-slope\":14068,\n\t\t\t\t\"decodeUtf8-memory-arguments-intercept\":4,\n\t\t\t\t\"decodeUtf8-memory-arguments-slope\":2,\n\t\t\t\t\"divideInteger-cpu-arguments-constant\":196500,\n\t\t\t\t\"divideInteger-cpu-arguments-model-arguments-intercept\":453240,\n\t\t\t\t\"divideInteger-cpu-arguments-model-arguments-slope\":220,\n\t\t\t\t\"divideInteger-memory-arguments-intercept\":0,\n\t\t\t\t\"divideInteger-memory-arguments-minimum\":1,\n\t\t\t\t\"divideInteger-memory-arguments-slope\":1,\n\t\t\t\t\"encodeUtf8-cpu-arguments-intercept\":1000,\n\t\t\t\t\"encodeUtf8-cpu-arguments-slope\":28662,\n\t\t\t\t\"encodeUtf8-memory-arguments-intercept\":4,\n\t\t\t\t\"encodeUtf8-memory-arguments-slope\":2,\n\t\t\t\t\"equalsByteString-cpu-arguments-constant\":245000,\n\t\t\t\t\"equalsByteString-cpu-arguments-intercept\":216773,\n\t\t\t\t\"equalsByteString-cpu-arguments-slope\":62,\n\t\t\t\t\"equalsByteString-memory-arguments\":1,\n\t\t\t\t\"equalsData-cpu-arguments-intercept\":1060367,\n\t\t\t\t\"equalsData-cpu-arguments-slope\":12586,\n\t\t\t\t\"equalsData-memory-arguments\":1,\n\t\t\t\t\"equalsInteger-cpu-arguments-intercept\":208512,\n\t\t\t\t\"equalsInteger-cpu-arguments-slope\":421,\n\t\t\t\t\"equalsInteger-memory-arguments\":1,\n\t\t\t\t\"equalsString-cpu-arguments-constant\":187000,\n\t\t\t\t\"equalsString-cpu-arguments-intercept\":1000,\n\t\t\t\t\"equalsString-cpu-arguments-slope\":52998,\n\t\t\t\t\"equalsString-memory-arguments\":1,\n\t\t\t\t\"fstPair-cpu-arguments\":80436,\n\t\t\t\t\"fstPair-memory-arguments\":32,\n\t\t\t\t\"headList-cpu-arguments\":43249,\n\t\t\t\t\"headList-memory-arguments\":32,\n\t\t\t\t\"iData-cpu-arguments\":1000,\n\t\t\t\t\"iData-memory-arguments\":32,\n\t\t\t\t\"ifThenElse-cpu-arguments\":80556,\n\t\t\t\t\"ifThenElse-memory-arguments\":1,\n\t\t\t\t\"indexByteString-cpu-arguments\":57667,\n\t\t\t\t\"indexByteString-memory-arguments\":4,\n\t\t\t\t\"lengthOfByteString-cpu-arguments\":1000,\n\t\t\t\t\"lengthOfByteString-memory-arguments\":10,\n\t\t\t\t\"lessThanByteString-cpu-arguments-intercept\":197145,\n\t\t\t\t\"lessThanByteString-cpu-arguments-slope\":156,\n\t\t\t\t\"lessThanByteString-memory-arguments\":1,\n\t\t\t\t\"lessThanEqualsByteString-cpu-arguments-intercept\":197145,\n\t\t\t\t\"lessThanEqualsByteString-cpu-arguments-slope\":156,\n\t\t\t\t\"lessThanEqualsByteString-memory-arguments\":1,\n\t\t\t\t\"lessThanEqualsInteger-cpu-arguments-intercept\":204924,\n\t\t\t\t\"lessThanEqualsInteger-cpu-arguments-slope\":473,\n\t\t\t\t\"lessThanEqualsInteger-memory-arguments\":1,\n\t\t\t\t\"lessThanInteger-cpu-arguments-intercept\":208896,\n\t\t\t\t\"lessThanInteger-cpu-arguments-slope\":511,\n\t\t\t\t\"lessThanInteger-memory-arguments\":1,\n\t\t\t\t\"listData-cpu-arguments\":52467,\n\t\t\t\t\"listData-memory-arguments\":32,\n\t\t\t\t\"mapData-cpu-arguments\":64832,\n\t\t\t\t\"mapData-memory-arguments\":32,\n\t\t\t\t\"mkCons-cpu-arguments\":65493,\n\t\t\t\t\"mkCons-memory-arguments\":32,\n\t\t\t\t\"mkNilData-cpu-arguments\":22558,\n\t\t\t\t\"mkNilData-memory-arguments\":32,\n\t\t\t\t\"mkNilPairData-cpu-arguments\":16563,\n\t\t\t\t\"mkNilPairData-memory-arguments\":32,\n\t\t\t\t\"mkPairData-cpu-arguments\":76511,\n\t\t\t\t\"mkPairData-memory-arguments\":32,\n\t\t\t\t\"modInteger-cpu-arguments-constant\":196500,\n\t\t\t\t\"modInteger-cpu-arguments-model-arguments-intercept\":453240,\n\t\t\t\t\"modInteger-cpu-arguments-model-arguments-slope\":220,\n\t\t\t\t\"modInteger-memory-arguments-intercept\":0,\n\t\t\t\t\"modInteger-memory-arguments-minimum\":1,\n\t\t\t\t\"modInteger-memory-arguments-slope\":1,\n\t\t\t\t\"multiplyInteger-cpu-arguments-intercept\":69522,\n\t\t\t\t\"multiplyInteger-cpu-arguments-slope\":11687,\n\t\t\t\t\"multiplyInteger-memory-arguments-intercept\":0,\n\t\t\t\t\"multiplyInteger-memory-arguments-slope\":1,\n\t\t\t\t\"nullList-cpu-arguments\":60091,\n\t\t\t\t\"nullList-memory-arguments\":32,\n\t\t\t\t\"quotientInteger-cpu-arguments-constant\":196500,\n\t\t\t\t\"quotientInteger-cpu-arguments-model-arguments-intercept\":453240,\n\t\t\t\t\"quotientInteger-cpu-arguments-model-arguments-slope\":220,\n\t\t\t\t\"quotientInteger-memory-arguments-intercept\":0,\n\t\t\t\t\"quotientInteger-memory-arguments-minimum\":1,\n\t\t\t\t\"quotientInteger-memory-arguments-slope\":1,\n\t\t\t\t\"remainderInteger-cpu-arguments-constant\":196500,\n\t\t\t\t\"remainderInteger-cpu-arguments-model-arguments-intercept\":453240,\n\t\t\t\t\"remainderInteger-cpu-arguments-model-arguments-slope\":220,\n\t\t\t\t\"remainderInteger-memory-arguments-intercept\":0,\n\t\t\t\t\"remainderInteger-memory-arguments-minimum\":1,\n\t\t\t\t\"remainderInteger-memory-arguments-slope\":1,\n\t\t\t\t\"serialiseData-cpu-arguments-intercept\":1159724,\n\t\t\t\t\"serialiseData-cpu-arguments-slope\":392670,\n\t\t\t\t\"serialiseData-memory-arguments-intercept\":0,\n\t\t\t\t\"serialiseData-memory-arguments-slope\":2,\n\t\t\t\t\"sha2_256-cpu-arguments-intercept\":806990,\n\t\t\t\t\"sha2_256-cpu-arguments-slope\":30482,\n\t\t\t\t\"sha2_256-memory-arguments\":4,\n\t\t\t\t\"sha3_256-cpu-arguments-intercept\":1927926,\n\t\t\t\t\"sha3_256-cpu-arguments-slope\":82523,\n\t\t\t\t\"sha3_256-memory-arguments\":4,\n\t\t\t\t\"sliceByteString-cpu-arguments-intercept\":265318,\n\t\t\t\t\"sliceByteString-cpu-arguments-slope\":0,\n\t\t\t\t\"sliceByteString-memory-arguments-intercept\":4,\n\t\t\t\t\"sliceByteString-memory-arguments-slope\":0,\n\t\t\t\t\"sndPair-cpu-arguments\":85931,\n\t\t\t\t\"sndPair-memory-arguments\":32,\n\t\t\t\t\"subtractInteger-cpu-arguments-intercept\":205665,\n\t\t\t\t\"subtractInteger-cpu-arguments-slope\":812,\n\t\t\t\t\"subtractInteger-memory-arguments-intercept\":1,\n\t\t\t\t\"subtractInteger-memory-arguments-slope\":1,\n\t\t\t\t\"tailList-cpu-arguments\":41182,\n\t\t\t\t\"tailList-memory-arguments\":32,\n\t\t\t\t\"trace-cpu-arguments\":212342,\n\t\t\t\t\"trace-memory-arguments\":32,\n\t\t\t\t\"unBData-cpu-arguments\":31220,\n\t\t\t\t\"unBData-memory-arguments\":32,\n\t\t\t\t\"unConstrData-cpu-arguments\":32696,\n\t\t\t\t\"unConstrData-memory-arguments\":32,\n\t\t\t\t\"unIData-cpu-arguments\":43357,\n\t\t\t\t\"unIData-memory-arguments\":32,\n\t\t\t\t\"unListData-cpu-arguments\":32247,\n\t\t\t\t\"unListData-memory-arguments\":32,\n\t\t\t\t\"unMapData-cpu-arguments\":38314,\n\t\t\t\t\"unMapData-memory-arguments\":32,\n\t\t\t\t\"verifyEcdsaSecp256k1Signature-cpu-arguments\":20000000000,\n\t\t\t\t\"verifyEcdsaSecp256k1Signature-memory-arguments\":20000000000,\n\t\t\t\t\"verifyEd25519Signature-cpu-arguments-intercept\":9462713,\n\t\t\t\t\"verifyEd25519Signature-cpu-arguments-slope\":1021,\n\t\t\t\t\"verifyEd25519Signature-memory-arguments\":10,\n\t\t\t\t\"verifySchnorrSecp256k1Signature-cpu-arguments-intercept\":20000000000,\n\t\t\t\t\"verifySchnorrSecp256k1Signature-cpu-arguments-slope\":0,\n\t\t\t\t\"verifySchnorrSecp256k1Signature-memory-arguments\":20000000000\n\t\t\t}\n\t\t},\n\t\texecutionUnitPrices:{\n\t\t\tpriceMemory:0.0577,\n\t\t\tpriceSteps:0.0000721\n\t\t},\n\t\tmaxBlockBodySize:90112,\n\t\tmaxBlockExecutionUnits:{\n\t\t\tmemory:62000000,\n\t\t\tsteps:40000000000\n\t\t},\n\t\tmaxBlockHeaderSize:1100,\n\t\tmaxCollateralInputs:3,\n\t\tmaxTxExecutionUnits:{\n\t\t\tmemory:14000000,\n\t\t\tsteps:10000000000\n\t\t},\n\t\tmaxTxSize:16384,\n\t\tmaxValueSize:5000,\n\t\tminPoolCost:340000000,\n\t\tmonetaryExpansion:0.003,\n\t\tpoolPledgeInfluence:0.3,\n\t\tpoolRetireMaxEpoch:18,\n\t\tprotocolVersion:{\n\t\t\tmajor:7,\n\t\t\tminor:0\n\t\t},\n\t\tstakeAddressDeposit:2000000,\n\t\tstakePoolDeposit:500000000,\n\t\tstakePoolTargetNum:500,\n\t\ttreasuryCut:0.2,\n\t\ttxFeeFixed:155381,\n\t\ttxFeePerByte:44,\n\t\tutxoCostPerByte:4310\n\t},\n\tlatestTip:{\n\t\tepoch:29,\n\t\thash:\"0de380c16222470e4cf4f7cce8af9a7b54d63e5aa4228520df9f2d252a0efcb5\",\n\t\tslot:11192926,\n\t\ttime:1666876126000\n\t}\n};\n\n/**\n * This wallet only has a single private/public key, which isn't rotated. Staking is not yet supported.\n * @implements {Wallet}\n */\nexport class SimpleWallet {\n    /**\n     * @type {Network}\n     */\n    #network;\n\n    /**\n     * @type {Bip32PrivateKey}\n     */\n    #privateKey;\n\n    /**\n     * @type {PubKey}\n     */\n    #pubKey;\n\n    /**\n     * @param {Network} network\n     * @param {Bip32PrivateKey} privateKey\n     */\n    constructor(network, privateKey) {\n        this.#network = network;\n        this.#privateKey = privateKey;\n        this.#pubKey = this.#privateKey.derivePubKey();\n\n        // TODO: staking credentials\n    }\n\n    /**\n     * @type {Bip32PrivateKey}\n     */\n    get privateKey() {\n        return this.#privateKey;\n    }\n\n    /**\n     * @type {PubKey}\n     */\n    get pubKey() {\n        return this.#pubKey;\n    }\n\n    /**\n     * @type {PubKeyHash}\n     */\n    get pubKeyHash() {\n        return this.#pubKey.pubKeyHash;\n    }\n\n    /**\n     * @type {Address}\n     */\n    get address() {\n        return Address.fromPubKeyHash(this.pubKeyHash);\n    }\n\n    /**\n     * @returns {Promise<boolean>}\n     */\n    async isMainnet() {\n        return false;\n    }\n\n    /**\n     * Assumed wallet was initiated with at least 1 UTxO at the pubkeyhash address.\n     * @type {Promise<Address[]>}\n     */\n    get usedAddresses() {\n        return new Promise((resolve, _) => {\n            resolve([this.address])\n        });\n    }\n\n    /**\n     * @type {Promise<Address[]>}\n     */\n    get unusedAddresses() {\n        return new Promise((resolve, _) => {\n            resolve([])\n        });\n    }\n\n    /**\n     * @type {Promise<TxInput[]>}\n     */\n    get utxos() {\n        return new Promise((resolve, _) => {\n            resolve(this.#network.getUtxos(this.address));\n        });\n    }\n\n    /**\n     * @type {Promise<TxInput[]>}\n     */\n     get collateral() {\n        return new Promise((resolve, _) => {\n            resolve([])\n        });\n    }\n\n    /**\n     * Simply assumed the tx needs to by signed by this wallet without checking.\n     * @param {Tx} tx\n     * @returns {Promise<Signature[]>}\n     */\n    async signTx(tx) {\n        return [\n            this.#privateKey.sign(tx.bodyHash)\n        ];\n    }\n\n    /**\n     * @param {Tx} tx\n     * @returns {Promise<TxId>}\n     */\n    async submitTx(tx) {\n        return await this.#network.submitTx(tx);\n    }\n}\n\n/**\n * collectUtxos removes tx inputs from the list, and appends txoutputs sent to the address to the end.\n * @internal\n * @typedef {{\n *     id(): TxId\n *     consumes(utxo: TxInput): boolean\n *     collectUtxos(address: Address, utxos: TxInput[]): TxInput[]\n *     getUtxo(id: TxOutputId): (null | TxInput)\n *     dump(): void\n * }} EmulatorTx\n */\n\n/**\n * @implements {EmulatorTx}\n */\nclass GenesisTx {\n    #id;\n    #address;\n    #lovelace;\n    #assets;\n\n    /**\n     * @param {number} id\n     * @param {Address} address\n     * @param {bigint} lovelace\n     * @param {Assets} assets\n     */\n    constructor(id, address, lovelace, assets) {\n        this.#id = id;\n        this.#address = address;\n        this.#lovelace = lovelace;\n        this.#assets = assets;\n    }\n\n    /**\n     * Simple incremental txId for genesis transactions.\n     * It's very unlikely that regular transactions have the same hash.\n     * @return {TxId}\n     */\n    id() {\n        let bytes = bigIntToBytes(BigInt(this.#id));\n\n        if (bytes.length < 32) {\n            bytes = (new Array(32 - bytes.length)).fill(0).concat(bytes);\n        }\n\n        return new TxId(bytes);\n    }\n\n    /**\n     * @param {TxInput} utxo\n     * @returns {boolean}\n     */\n    consumes(utxo) {\n        return false;\n    }\n\n    /**\n     * @param {Address} address\n     * @param {TxInput[]} utxos\n     * @returns {TxInput[]}\n     */\n    collectUtxos(address, utxos) {\n        if (eq(this.#address.bytes, address.bytes)) {\n            utxos = utxos.slice();\n\n            utxos.push(new TxInput(\n                new TxOutputId(this.id(), 0),\n                new TxOutput(\n                    this.#address,\n                    new Value(this.#lovelace, this.#assets)\n                )\n            ));\n\n            return utxos;\n        } else {\n            return utxos;\n        }\n    }\n\n    /**\n     * @param {TxOutputId} id \n     * @returns {null | TxInput}\n     */\n    getUtxo(id) {\n        if (!(this.id().eq(id.txId) && id.utxoIdx == 0)) {\n            return null;\n        }\n\n        return new TxInput(\n            new TxOutputId(this.id(), 0),\n            new TxOutput(\n                this.#address,\n                new Value(this.#lovelace, this.#assets)\n            )\n        );\n    }\n\n    dump() {\n        console.log(\"GENESIS TX\");\n        console.log(`id: ${this.#id.toString()},\\naddress: ${this.#address.toBech32()},\\nlovelace: ${this.#lovelace.toString()},\\nassets: ${JSON.stringify(this.#assets.dump(), undefined, \"    \")}`);\n    }\n}\n\n/**\n * @implements {EmulatorTx}\n */\nclass RegularTx {\n    #tx;\n\n    /**\n     * @param {Tx} tx\n     */\n    constructor(tx) {\n        this.#tx = tx;\n    }\n\n    /**\n     * @returns {TxId}\n     */\n    id() {\n        return this.#tx.id();\n    }\n\n    /**\n     * @param {TxInput} utxo\n     * @returns {boolean}\n     */\n    consumes(utxo) {\n        const txInputs = this.#tx.body.inputs;\n\n        return txInputs.some(txInput => txInput.eq(utxo));\n    }\n\n    /**\n     * @param {Address} address\n     * @param {TxInput[]} utxos\n     * @returns {TxInput[]}\n     */\n    collectUtxos(address, utxos) {\n        utxos = utxos.filter(utxo => !this.consumes(utxo));\n\n        const txOutputs = this.#tx.body.outputs;\n\n        txOutputs.forEach((txOutput, utxoId) => {\n            if (eq(txOutput.address.bytes, address.bytes)) {\n                utxos.push(new TxInput(\n                    new TxOutputId(this.id(), utxoId),\n                    txOutput\n                ));\n            }\n        });\n\n        return utxos;\n    }\n\n    /**\n     * @param {TxOutputId} id \n     * @returns {null | TxInput}\n     */\n    getUtxo(id) {\n        if (!id.txId.eq(this.id())) {\n            return null;\n        }\n\n        /**\n         * @type {null | TxInput}\n         */\n        let utxo = null;\n\n        this.#tx.body.outputs.forEach((output, i) => {\n            if (i == id.utxoIdx) {\n                utxo = new TxInput(\n                    id,\n                    output\n                );\n            }\n        });\n\n        return utxo;\n    }\n\n    dump() {\n        console.log(\"REGULAR TX\");\n        console.log(JSON.stringify(this.#tx.dump(), undefined, \"  \"));\n    }\n}\n\n/**\n * A simple emulated Network.\n * This can be used to do integration tests of whole dApps.\n * Staking is not yet supported.\n * @implements {Network}\n */\nexport class NetworkEmulator {\n    /**\n     * @type {bigint}\n     */\n    #slot;\n\n    /**\n     * @type {NumberGenerator}\n     */\n    #random;\n\n    /**\n     * @type {GenesisTx[]}\n     */\n    #genesis;\n\n    /**\n     * @type {EmulatorTx[]}\n     */\n    #mempool;\n\n    /**\n     * @type {EmulatorTx[][]}\n     */\n    #blocks;\n\n    /**\n     * Instantiates a NetworkEmulator at slot 0.\n     * An optional seed number can be specified, from which all emulated randomness is derived.\n     * @param {number} seed\n     */\n    constructor(seed = 0) {\n        this.#slot = 0n;\n        this.#random = Crypto.mulberry32(seed);\n        this.#genesis = [];\n        this.#mempool = [];\n        this.#blocks = [];\n    }\n\n    /**\n     * @type {bigint}\n     */\n    get currentSlot() {\n        return this.#slot;\n    }\n\n    /**\n     * Creates a new `NetworkParams` instance that has access to current slot \n     * (so that the `Tx` validity range can be set automatically during `Tx.finalize()`).\n     * @param {NetworkParams} networkParams\n     * @returns {NetworkParams}\n     */\n    initNetworkParams(networkParams) {\n        const raw = Object.assign({}, networkParams.raw);\n\n        raw.latestTip = {\n            epoch: 0,\n            hash: \"\",\n            slot: 0,\n            time: 0\n        };\n\n        return new NetworkParams(\n            raw,\n            () => {\n                return this.#slot;\n            }\n        );\n    }\n\n    /**\n     * Creates a new SimpleWallet and populates it with a given lovelace quantity and assets.\n     * Special genesis transactions are added to the emulated chain in order to create these assets.\n     * @param {bigint} lovelace\n     * @param {Assets} assets\n     * @returns {SimpleWallet}\n     */\n    createWallet(lovelace = 0n, assets = new Assets([])) {\n        const wallet = new SimpleWallet(this, Bip32PrivateKey.random(this.#random));\n\n        this.createUtxo(wallet, lovelace, assets);\n\n        return wallet;\n    }\n\n    /**\n     * Creates a UTxO using a GenesisTx.\n     * @param {SimpleWallet} wallet\n     * @param {bigint} lovelace\n     * @param {Assets} assets\n     */\n    createUtxo(wallet, lovelace, assets = new Assets([])) {\n        if (lovelace != 0n || !assets.isZero()) {\n            const tx = new GenesisTx(\n                this.#genesis.length,\n                wallet.address,\n                lovelace,\n                assets\n            );\n\n            this.#genesis.push(tx);\n            this.#mempool.push(tx);\n        }\n    }\n\n    /**\n     * Mint a block with the current mempool, and advance the slot by a number of slots.\n     * @param {bigint} nSlots\n     */\n    tick(nSlots) {\n        assert(nSlots > 0, `nSlots must be > 0, got ${nSlots.toString()}`);\n\n        if (this.#mempool.length > 0) {\n            this.#blocks.push(this.#mempool);\n\n            this.#mempool = [];\n        }\n\n        this.#slot += nSlots;\n    }\n    \n    /**\n     * @returns {Promise<NetworkParams>}\n     */\n    async getParameters() {\n        return this.initNetworkParams(new NetworkParams(rawNetworkEmulatorParams));\n    }\n\n    warnMempool() {\n        if (this.#mempool.length > 0) {\n            console.error(\"Warning: mempool not empty (hint: use 'network.tick()')\");\n        }\n    }\n\n    /**\n     * Throws an error if the UTxO isn't found\n     * @param {TxOutputId} id \n     * @returns {Promise<TxInput>}\n     */\n    async getUtxo(id) {\n        this.warnMempool();\n\n        for (let block of this.#blocks) {\n            for (let tx of block) {\n                const utxo = tx.getUtxo(id)\n                if (utxo) {\n                    return utxo;\n                }\n            }\n        }\n\n        throw new Error(`utxo with id ${id.toString()} doesn't exist`);\n    }\n\n    /**\n     * @param {Address} address\n     * @returns {Promise<TxInput[]>}\n     */\n    async getUtxos(address) {\n        this.warnMempool();\n\n        /**\n         * @type {TxInput[]}\n         */\n        let utxos = [];\n\n        for (let block of this.#blocks) {\n            for (let tx of block) {\n                utxos = tx.collectUtxos(address, utxos);\n            }\n        }\n\n        return utxos;\n    }\n\n    dump() {\n        console.log(`${this.#blocks.length} BLOCKS`);\n        this.#blocks.forEach((block, i) => {\n            console.log(`${block.length} TXs in BLOCK ${i}`);\n            for (let tx of block) {\n                tx.dump();\n            }\n        })\n    }\n\n    /**\n     * @param {TxInput} utxo\n     * @returns {boolean}\n     */\n    isConsumed(utxo) {\n        return this.#blocks.some(b => {\n            return b.some(tx => {\n                return tx.consumes(utxo)\n            })\n        }) || this.#mempool.some(tx => {\n            return tx.consumes(utxo);\n        })\n    }\n\n    /**\n     * @param {Tx} tx\n     * @returns {Promise<TxId>}\n     */\n    async submitTx(tx) {\n        this.warnMempool();\n        \n        assert(tx.isValid(this.#slot), \"tx invalid (not finalized or slot out of range)\");\n\n        // make sure that none of the inputs have been consumed before\n        assert(tx.body.inputs.every(input => !this.isConsumed(input)), \"input already consumed before\");\n\n        this.#mempool.push(new RegularTx(tx));\n\n        return tx.id();\n    }\n}\n\n/**\n * @internal\n * @implements {Wallet}\n */\nclass TxChainWallet {\n    #base;\n    #chain;\n    \n    /**\n     * \n     * @param {Wallet} base \n     * @param {TxChain} chain \n     */\n    constructor(base, chain) {\n        this.#base = base;\n        this.#chain = chain;\n    }\n\n    /**\n     * @returns {Promise<boolean>}\n     */\n    async isMainnet() {\n        return this.#base.isMainnet()\n    }\n\n    /**\n     * @param {Tx} tx \n     * @returns {Promise<Signature[]>}\n     */\n    async signTx(tx) {\n        return this.#base.signTx(tx)\n    }\n\n    /**\n     * @param {Tx} tx \n     * @returns {Promise<TxId>}\n     */\n    async submitTx(tx) {\n        return this.#chain.submitTx(tx)\n    }\n\n    get unusedAddresses() {\n        return this.#base.unusedAddresses;\n    }\n\n    get usedAddresses() {\n        return this.#base.usedAddresses;\n    }\n\n    /**\n     * @internal\n     * @param {TxInput[]} utxos \n     * @returns {Promise<TxInput[]>}\n     */\n    async filterUtxos(utxos) {\n        const ua = await this.usedAddresses;\n        const una = await this.unusedAddresses;\n\n        const addrs = ua.concat(una);\n\n        return await this.#chain.getUtxosInternal(utxos, addrs);\n    }\n\n    /**\n     * @type {Promise<TxInput[]>}\n     */\n    get collateral() {\n        return new Promise((resolve, reject) => {\n            this.#base.collateral.then(utxos => {\n                this.filterUtxos(utxos).then(utxos => {\n                    resolve(utxos);\n                });\n            });\n        });\n    }\n\n    /**\n     * @type {Promise<TxInput[]>}\n     */\n    get utxos() {\n        return new Promise((resolve, reject) => {\n            this.#base.utxos.then(utxos => {\n                this.filterUtxos(utxos).then(utxos => {\n                    resolve(utxos);\n                });\n            });\n        });\n    }\n}\n\n/**\n * Helper that \n * @implements {Network}\n */\nexport class TxChain {\n    #network;\n\n    /**\n     * @type {RegularTx[]}\n     */\n    #txs;\n\n    /**\n     * @param {Network} network \n     */\n    constructor(network) {\n        this.#network = network;\n        this.#txs = [];\n    }\n\n    /**\n     * @param {Tx} tx \n     * @returns {Promise<TxId>}\n     */\n    async submitTx(tx) {\n        const id = await this.#network.submitTx(tx);\n\n        this.#txs.push(new RegularTx(tx));\n\n        return id;\n    }\n\n    /**\n     * @returns {Promise<NetworkParams>}\n     */\n    async getParameters() {\n        return this.#network.getParameters()\n    }\n\n    /**\n     * @param {TxOutputId} id \n     * @returns {Promise<TxInput>}\n     */\n    async getUtxo(id) {\n        for (let i = 0; i < this.#txs.length; i++) {\n            const txInput = this.#txs[i].getUtxo(id);\n\n            if (txInput) {\n                return txInput;\n            }\n        }\n\n        return this.#network.getUtxo(id);\n    }\n\n    /**\n     * @param {TxInput[]} utxos\n     * @param {Address[]} addrs\n     * @returns {Promise<TxInput[]>}\n     */\n    async getUtxosInternal(utxos, addrs) {\n        for (let tx of this.#txs) {\n            addrs.forEach(addr => {\n                utxos = tx.collectUtxos(addr, utxos);\n            });\n        }\n\n        return utxos;\n    }\n    /**\n     * @param {Address} addr\n     * @returns {Promise<TxInput[]>}\n     */\n    async getUtxos(addr) {\n        let utxos = await this.#network.getUtxos(addr);\n\n        return this.getUtxosInternal(utxos, [addr])\n    }\n\n    /**\n     * @param {Wallet} baseWallet \n     * @returns {Wallet}\n     */\n    asWallet(baseWallet) {\n        return new TxChainWallet(baseWallet, this);\n    }\n}\n\n/**\n * @typedef {{\n *   [address: string]: TxInput[]\n * }} NetworkSliceUTxOs\n */\n\n/**\n * @implements {Network}\n */\nexport class NetworkSlice {\n    #params;\n    #utxos;\n\n    /**\n     * @param {NetworkParams} params\n     * @param {NetworkSliceUTxOs} utxos \n     */\n    constructor(params, utxos) {\n        this.#params = params;\n        this.#utxos = utxos;\n    }\n\n    /**\n     * @param {Network} network\n     * @param {Address[]} addresses\n     * @returns {Promise<NetworkSlice>}\n     */\n    static async init(network, addresses) {\n        /**\n         * @type {[Promise<NetworkParams>, ...Promise<TxInput[]>[]]}\n         */\n        const promises = [\n            network.getParameters(),\n            ...addresses.map(a => network.getUtxos(a))\n        ];\n\n        const resolved = await Promise.all(promises);\n\n        const [params, ...utxos] = resolved;\n\n        /**\n         * @type {NetworkSliceUTxOs}\n         */\n        const obj = {};\n\n        addresses.forEach((a, i) => {\n            obj[a.toBech32()] = utxos[i];\n        });\n\n        return new NetworkSlice(params, obj);\n    }\n\n    /**\n     * @returns {any}\n     */\n    toJson() {\n        const obj = {};\n\n        for (let a in this.#utxos) {\n            obj[a] = this.#utxos[a].map(utxo => bytesToHex(utxo.toFullCbor()));\n        }\n\n        return {\n            params: this.#params.raw,\n            utxos: obj\n        };\n    }\n\n    /**\n     * @param {any} obj \n     * @returns {NetworkSlice}\n     */\n    static fromJson(obj) {\n        const params = new NetworkParams(obj.params);\n\n        /**\n         * @type {NetworkSliceUTxOs}\n         */\n        const utxos = {};\n\n        for (let a in obj.utxos) {\n            utxos[a] = obj.utxos[a].map(utxo => TxInput.fromFullCbor(utxo));\n        }\n\n        return new NetworkSlice(params, utxos);\n    }\n\n    /**\n     * @returns {Promise<NetworkParams>}\n     */\n    async getParameters() {\n        return this.#params;\n    }\n\n    /**\n     * @param {TxOutputId} id \n     * @returns {Promise<TxInput>}\n     */\n    async getUtxo(id) {\n        for (let utxos of Object.values(this.#utxos)) {\n            for (let utxo of utxos) {\n                if (utxo.outputId.eq(id)) {\n                    return utxo;\n                }\n            }\n        }\n\n        throw new Error(`utxo ${id.toString()} not found`);\n    }\n\n    /**\n     * @param {Address} addr \n     * @returns {Promise<TxInput[]>}\n     */\n    async getUtxos(addr) {\n        const key = addr.toBech32();\n\n        if (key in this.#utxos) {\n            return this.#utxos[key];\n        } else {\n            return [];\n        }\n    }\n\n    /**\n     * @param {Tx} tx \n     * @returns {Promise<TxId>}\n     */\n    async submitTx(tx) {\n        throw new Error(\"can't submit tx through network slice\");\n    }\n}\n\n\n//////////////////////////////////////\n// Section 41: Fuzzy testing framework\n//////////////////////////////////////\n\n/**\n * @typedef {() => UplcData} ValueGenerator\n */\n\n/**\n * @typedef {(args: UplcValue[], res: (UplcValue | RuntimeError), isSimplfied?: boolean) => (boolean | Object.<string, boolean>)} PropertyTest\n */\n\n/**\n * Helper class for performing fuzzy property-based tests of Helios scripts.\n */\nexport class FuzzyTest {\n\t/**\n\t * @type {number}\n\t */\n\t#seed;\n\n\t/**\n\t * @type {NumberGenerator} - seed generator\n\t */\n\t#rand;\n\n\t#runsPerTest;\n\n\t#simplify;\n\n\t#printMessages;\n\n\t/**\n\t * @type {NetworkParams}\n\t */\n\t#dummyNetworkParams;\n\n\t/**\n\t * The simplify argument specifies whether optimized versions of the Helios sources should also be tested.\n\t * @param {number} seed\n\t * @param {number} runsPerTest\n\t * @param {boolean} simplify If true then also test the simplified program\n\t */\n\tconstructor(seed = 0, runsPerTest = 100, simplify = false, printMessages = false) {\n\t\tconsole.log(\"starting fuzzy testing  with seed\", seed);\n\n\t\tthis.#seed = seed;\n\t\tthis.#rand = Crypto.rand(seed);\n\t\tthis.#runsPerTest = runsPerTest;\n\t\tthis.#simplify = simplify;\n\t\tthis.#dummyNetworkParams = new NetworkParams(rawNetworkEmulatorParams);\n\t\tthis.#printMessages = printMessages;\n\t}\n\n\treset() {\n\t\tthis.#rand = Crypto.rand(this.#seed);\n\t}\n\n\t/**\n\t * @returns {NumberGenerator}\n\t */\n\tnewRand() {\n\t\tlet seed = this.#rand()*1000000;\n\n\t\treturn Crypto.rand(seed);\n\t}\n\n\t/**\n\t * Returns a gernator for whole numbers between min and max\n\t * @param {number} min\n\t * @param {number} max\n\t * @returns {() => bigint}\n\t */\n\trawInt(min = -10000000, max = 10000000) {\n\t\tlet rand = this.newRand();\n\n\t\treturn function() {\n\t\t\treturn BigInt(Math.floor(rand()*(max - min)) + min);\n\t\t}\n\t}\n\n\t/**\n\t * Returns a generator for whole numbers between min and max, wrapped with IntData\n\t * @param {number} min\n\t * @param {number} max\n\t * @returns {ValueGenerator}\n\t */\n\tint(min = -10000000, max = 10000000) {\t\t\n\t\tlet rand = this.rawInt(min, max);\n\n\t\treturn function() {\n\t\t\treturn new IntData(rand());\n\t\t}\n\t}\n\n\t/**\n\t * @param {number} min \n\t * @param {number} max \n\t * @returns {ValueGenerator}\n\t */\n\treal(min = -1000, max = 1000) {\n\t\tlet rand = this.newRand();\n\n\t\treturn function() {\n\t\t\treturn new IntData(BigInt(Math.floor(((rand()*(max - min)) + min)*1000000)))\n\t\t}\n\t}\n\n\t/**\n\t * Returns a generator for strings containing any utf-8 character.\n\t * @param {number} minLength\n\t * @param {number} maxLength\n\t * @returns {ValueGenerator}\n\t */\n\tstring(minLength = 0, maxLength = 64) {\n\t\tlet rand = this.newRand();\n\n\t\treturn function() {\n\t\t\tlet n = Math.round(rand()*(maxLength - minLength)) + minLength;\n\t\t\tif (n < 0) {\n\t\t\t\tn = 0;\n\t\t\t}\n\n\t\t\tlet chars = [];\n\t\t\tfor (let i = 0; i < n; i++) {\n\t\t\t\tchars.push(String.fromCodePoint(Math.round(rand()*1112064)));\n\t\t\t}\n\t\t\t\n\t\t\treturn ByteArrayData.fromString(chars.join(\"\"));\n\t\t}\n\t}\n\n\t/** \n\t * Returns a generator for strings with ascii characters from 32 (space) to 126 (tilde).\n\t * @param {number} minLength\n\t * @param {number} maxLength\n\t * @returns {ValueGenerator}\n\t */\n\tascii(minLength = 0, maxLength = 64) {\n\t\tlet rand = this.newRand();\n\n\t\treturn function() {\n\t\t\tlet n = Math.round(rand()*(maxLength - minLength)) + minLength;\n\t\t\tif (n < 0) {\n\t\t\t\tn = 0;\n\t\t\t}\n\n\t\t\tlet chars = [];\n\t\t\tfor (let i = 0; i < n; i++) {\n\t\t\t\tchars.push(String.fromCharCode(Math.round(rand()*94 + 32)));\n\t\t\t}\n\t\t\t\n\t\t\treturn ByteArrayData.fromString(chars.join(\"\"));\n\t\t}\n\t}\n\n\t/**\n\t * Returns a generator for bytearrays containing only valid ascii characters\n\t * @param {number} minLength\n\t * @param {number} maxLength\n\t * @returns {ValueGenerator}\n\t */\n\tasciiBytes(minLength = 0, maxLength = 64) {\n\t\tlet rand = this.newRand();\n\n\t\treturn function() {\n\t\t\tlet n = Math.round(rand()*(maxLength - minLength)) + minLength;\n\t\t\tif (n < 0) {\n\t\t\t\tn = 0;\n\t\t\t}\n\n\t\t\tlet bytes = [];\n\t\t\tfor (let i = 0; i < n; i++) {\n\t\t\t\tbytes.push(Math.floor(rand()*94 + 32));\n\t\t\t}\n\n\t\t\treturn new ByteArrayData(bytes);\n\t\t}\n\t}\n\n\t/**\n\t * Returns a generator for bytearrays the are also valid utf8 strings\n\t * @param {number} minLength - length of the string, not of the bytearray!\n\t * @param {number} maxLength - length of the string, not of the bytearray!\n\t * @returns {ValueGenerator}\n\t */\n\tutf8Bytes(minLength = 0, maxLength = 64) {\n\t\treturn this.string(minLength, maxLength);\n\t}\n\n\t/**\n\t * Returns a generator for number[]\n\t * @param {number} minLength\n\t * @param {number} maxLength\n\t * @returns {() => number[]}\n\t */\n\trawBytes(minLength = 0, maxLength = 64) {\n\t\tlet rand = this.newRand();\n\n\t\treturn function() {\n\t\t\tlet n = Math.round(rand()*(maxLength - minLength)) + minLength;\n\t\t\tif (n < 0) {\n\t\t\t\tn = 0;\n\t\t\t}\n\n\t\t\tlet bytes = [];\n\t\t\tfor (let i = 0; i < n; i++) {\n\t\t\t\tbytes.push(Math.floor(rand()*256));\n\t\t\t}\n\n\t\t\treturn bytes;\n\t\t}\n\t}\n\n\t/**\n\t * Returns a generator for bytearrays \n\t * @param {number} minLength\n\t * @param {number} maxLength\n\t * @returns {ValueGenerator}\n\t */\n\tbytes(minLength = 0, maxLength = 64) {\n\t\tlet rand = this.rawBytes(minLength, maxLength);\n\n\t\treturn function() {\n\t\t\tlet bytes = rand();\n\n\t\t\treturn new ByteArrayData(bytes);\n\t\t}\n\t}\n\t/**\n\t * Returns a generator for booleans,\n\t * @returns {() => boolean}\n\t */\n\trawBool() {\n\t\tlet rand = this.newRand();\n\n\t\treturn function() {\n\t\t\tlet x = rand();\n\n\t\t\treturn x >= 0.5;\n\t\t}\n\t}\n\n\t/**\n\t * Returns a generator for booleans, wrapped with ConstrData\n\t * @returns {ValueGenerator}\n\t */\n\tbool() {\n\t\tlet rand = this.rawBool();\n\n\t\treturn function() {\n\t\t\treturn new ConstrData(rand() ? 1 : 0, []);\n\t\t}\n\t}\n\n\t/**\n\t * Returns a generator for options\n\t * @param {ValueGenerator} someGenerator\n\t * @param {number} noneProbability\n\t * @returns {ValueGenerator}\n\t */\n\toption(someGenerator, noneProbability = 0.5) {\n\t\tlet rand = this.newRand();\n\n\t\treturn function() {\n\t\t\tlet x = rand();\n\n\t\t\tif (x < noneProbability) {\n\t\t\t\treturn new ConstrData(1, []);\n\t\t\t} else {\n\t\t\t\treturn new ConstrData(0, [someGenerator()]);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Returns a generator for lists\n\t * @param {ValueGenerator} itemGenerator\n\t * @param {number} minLength\n\t * @param {number} maxLength\n\t * @returns {ValueGenerator}\n\t */\n\tlist(itemGenerator, minLength = 0, maxLength = 10) {\n\t\tlet rand = this.newRand();\n\n\t\tif (minLength < 0) {\n\t\t\tminLength = 0;\n\t\t}\n\n\t\tif (maxLength < 0) {\n\t\t\tmaxLength = 0;\n\t\t}\n\n\t\treturn function() {\n\t\t\tlet n = Math.round(rand()*(maxLength - minLength)) + minLength;\n\t\t\tif (n < 0) {\n\t\t\t\tn = 0;\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * @type {UplcData[]}\n\t\t\t */\n\t\t\tlet items = [];\n\n\t\t\tfor (let i = 0; i < n; i++) {\n\t\t\t\titems.push(itemGenerator());\n\t\t\t}\n\n\t\t\treturn new ListData(items);\n\t\t}\n\t}\n\n\t/**\n\t * Returns a generator for maps\n\t * @param {ValueGenerator} keyGenerator\n\t * @param {ValueGenerator} valueGenerator\n\t * @param {number} minLength\n\t * @param {number} maxLength\n\t * @returns {ValueGenerator}\n\t */\n\tmap(keyGenerator, valueGenerator, minLength = 0, maxLength = 10) {\n\t\tlet rand = this.newRand();\n\n\t\tif (minLength < 0) {\n\t\t\tminLength = 0;\n\t\t}\n\n\t\tif (maxLength < 0) {\n\t\t\tmaxLength = 0;\n\t\t}\n\n\t\treturn function() {\n\t\t\tlet n = Math.round(rand()*(maxLength - minLength)) + minLength;\n\n\t\t\tif (n < 0) {\n\t\t\t\tn = 0;\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * @type {[UplcData, UplcData][]}\n\t\t\t */\n\t\t\tlet pairs = [];\n\n\t\t\tfor (let i = 0; i < n; i++) {\n\t\t\t\tpairs.push([keyGenerator(), valueGenerator()]);\n\t\t\t}\n\n\t\t\treturn new MapData(pairs);\n\t\t};\n\t}\n\n\t/**\n\t * Returns a generator for objects\n\t * @param {...ValueGenerator} itemGenerators\n\t * @returns {ValueGenerator}\n\t */\n\tobject(...itemGenerators) {\n\t\treturn function() {\n\t\t\tlet items = itemGenerators.map(g => g());\n\n\t\t\treturn new ConstrData(0, items);\n\t\t}\n\t}\n\n\t/**\n\t * Returns a generator for tagged constr\n\t * @param {number | NumberGenerator} tag\n\t * @param {...ValueGenerator} fieldGenerators\n\t * @returns {ValueGenerator}\n\t */\n\tconstr(tag, ...fieldGenerators) {\n\t\treturn function() {\n\t\t\tconst fields = fieldGenerators.map(g => g());\n\n\t\t\tconst finalTag = (typeof tag == \"number\") ? tag : Math.round(tag()*100);\n\t\t\t\n\t\t\treturn new ConstrData(finalTag, fields);\n\t\t}\n\t}\n\n\t/**\n\t * Perform a fuzzy/property-based test-run of a Helios source. One value generator must be specified per argument of main.\n\t * \n\t * Throws an error if the propTest fails. \n\t * \n\t * The propTest can simply return a boolean, or can return an object with boolean values, and if any of these booleans is false the propTest fails (the keys can be used to provide extra information).\n\t * @param {ValueGenerator[]} argGens\n\t * @param {string} src\n\t * @param {PropertyTest} propTest\n\t * @param {number} nRuns\n\t * @param {boolean} simplify\n\t * @returns {Promise<void>} - throws an error if any of the property tests fail\n\t */\n\tasync test(argGens, src, propTest, nRuns = this.#runsPerTest, simplify = false) {\n\t\t// compilation errors here aren't caught\n\n\t\tlet purposeName = extractScriptPurposeAndName(src);\n\n\t\tif (purposeName === null) {\n\t\t\tthrow new Error(\"failed to get script purpose and name\");\n\t\t} else {\n\t\t\tconst [_, testName] = purposeName;\n\n\t\t\tconst program = Program.new(src);\n\t\t\tconst uplcProgram = program.compile(simplify);\n\n\t\t\t/**\n\t\t\t * @type {Cost}\n\t\t\t */\n\t\t\tconst totalCost = {\n\t\t\t\tmem: 0n,\n\t\t\t\tcpu: 0n\n\t\t\t};\n\n\t\t\tlet nonErrorRuns = 0;\n\n\t\t\tfor (let it = 0; it < nRuns; it++) {\n\t\t\t\tlet args = argGens.map(gen => new UplcDataValue(Site.dummy(), gen()));\n\t\t\t\n\t\t\t\t/**\n\t\t\t\t * @type {Cost}\n\t\t\t\t */\n\t\t\t\tconst cost = {\n\t\t\t\t\tmem: 0n,\n\t\t\t\t\tcpu: 0n\n\t\t\t\t};\n\n\t\t\t\ttry {\n\t\t\t\t\tlet result = await uplcProgram.run(\n\t\t\t\t\t\targs, {\n\t\t\t\t\t\t\t...DEFAULT_UPLC_RTE_CALLBACKS,\n\t\t\t\t\t\t\tonPrint: this.#printMessages ? async (msg) => {console.log(msg)} : async (msg) => {return},\n\t\t\t\t\t\t\tonIncrCost: (name, isTerm, c) => {cost.mem = cost.mem + c.mem; cost.cpu = cost.cpu + c.cpu}\n\t\t\t\t\t\t},\n\t\t\t\t\t\tthis.#dummyNetworkParams\n\t\t\t\t\t);\n\t\t\t\t\n\t\t\t\t\tlet obj = propTest(args, result, simplify);\n\n\t\t\t\t\tif (!(result instanceof RuntimeError)) {\n\t\t\t\t\t\ttotalCost.mem += cost.mem;\n\t\t\t\t\t\ttotalCost.cpu += cost.cpu;\n\t\t\t\t\t\tnonErrorRuns += 1;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (typeof obj == \"boolean\") {\n\t\t\t\t\t\tif (!obj) {\n\t\t\t\t\t\t\tconsole.log(program.dumpIR(simplify, true));\n\t\t\t\t\t\t\tthrow new Error(`property test '${testName}' failed (info: (${args.map(a => a.toString()).join(', ')}) => ${result.toString()})`);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// check for failures\n\t\t\t\t\t\tfor (let key in obj) {\n\t\t\t\t\t\t\tif (!obj[key]) {\n\t\t\t\t\t\t\t\tconsole.log(program.dumpIR(simplify, true));\n\t\t\t\t\t\t\t\tthrow new Error(`property test '${testName}:${key}' failed (info: (${args.map(a => a.toString()).join(', ')}) => ${result.toString()})`);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} catch (e) {\n\t\t\t\t\tconsole.log(\"UNSIMPLIFIED:\", program.dumpIR(false, true));\n\t\t\t\t\tconsole.log(\"SIMPLIFIED:\", program.dumpIR(true, true));\n\t\t\t\t\t\n\t\t\t\t\tthrow e;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconsole.log(`property tests for '${testName}' succeeded${simplify ? \" (simplified)\":\"\"} (${uplcProgram.calcSize()} bytes, ${nonErrorRuns > 0 ? totalCost.mem/BigInt(nonErrorRuns): \"N/A\"} mem, ${nonErrorRuns > 0 ? totalCost.cpu/BigInt(nonErrorRuns): \"N/A\"} cpu)`);\n\t\t}\n\n\t\tif (!simplify && this.#simplify) {\n\t\t\tawait this.test(argGens, src, propTest, nRuns, true);\n\t\t}\n\t}\n\n\t/**\n\t * @param {Object.<string, ValueGenerator>} paramGenerators\n\t * @param {string[]} paramArgs\n\t * @param {string} src\n\t * @param {PropertyTest} propTest\n\t * @param {number} nRuns\n\t * @param {boolean} simplify\n\t * @returns {Promise<void>}\n\t */\n\tasync testParams(paramGenerators, paramArgs, src, propTest, nRuns = this.#runsPerTest, simplify = false) {\n\t\tlet program = Program.new(src);\n\n\t\tlet purposeName = extractScriptPurposeAndName(src);\n\n\t\tif (purposeName === null) {\n\t\t\tthrow new Error(\"failed to get script purpose and name\");\n\t\t} else {\n\t\t\tlet [_, testName] = purposeName;\n\n\t\t\tfor (let it = 0; it < nRuns; it++) {\n\n\t\t\t\tfor (let key in paramGenerators) {\n\t\t\t\t\tprogram.changeParamSafe(key, paramGenerators[key]())\n\t\t\t\t}\n\n\t\t\t\tlet args = paramArgs.map(paramArg => program.evalParam(paramArg));\n\t\t\t\n\t\t\t\tprogram = Program.new(src);\n\n\t\t\t\tlet coreProgram = program.compile(simplify);\n\n\t\t\t\tlet result = await coreProgram.run(\n\t\t\t\t\targs,\n\t\t\t\t\t{\n\t\t\t\t\t\t...DEFAULT_UPLC_RTE_CALLBACKS,\n\t\t\t\t\t\tonPrint: this.#printMessages ? async (msg) => {console.log(msg)} : async (msg) => {return}\n\t\t\t\t\t}\n\t\t\t\t);\n\n\t\t\t\tlet obj = propTest(args, result, simplify);\n\n\t\t\t\tif (typeof obj == \"boolean\") {\n\t\t\t\t\tif (!obj) {\n\t\t\t\t\t\tconsole.log(program.dumpIR(simplify, true));\n\n\t\t\t\t\t\tthrow new Error(`property test '${testName}' failed (info: (${args.map(a => a.toString()).join(', ')}) => ${result.toString()})`);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t// check for failures\n\t\t\t\t\tfor (let key in obj) {\n\t\t\t\t\t\tif (!obj[key]) {\n\t\t\t\t\t\t\tconsole.log(program.dumpIR(simplify, true));\n\n\t\t\t\t\t\t\tthrow new Error(`property test '${testName}:${key}' failed (info: (${args.map(a => a.toString()).join(', ')}) => ${result.toString()})`);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconsole.log(`property tests for '${testName}' succeeded${simplify ? \" (simplified)\":\"\"}`);\n\t\t}\n\n\t\tif (!simplify && this.#simplify) {\n\t\t\tawait this.testParams(paramGenerators, paramArgs, src, propTest, nRuns, true);\n\t\t}\n\t}\n}\n\n\n//////////////////////////////////////////\n// Section 42: Bundling specific functions\n//////////////////////////////////////////\n\n\n/**\n * @internal\n * @param {TypeSchema} schema\n * @param {any} obj\n * @param {JsToUplcHelpers} helpers\n * @returns {Promise<UplcData>}\n */\nexport async function jsToUplcInternal(schema, obj, helpers) {\n    if (schema.type == \"List\" && \"itemType\" in schema) {\n        if (!Array.isArray(obj)) {\n            throw new Error(`expected Array, got '${obj}'`);\n        }\n\n        const items = obj.map(item => jsToUplcInternal(schema.itemType, item, helpers))\n\n        return new ListData(await Promise.all(items));\n    } else if (schema.type == \"Map\" && \"keyType\" in schema && \"valueType\" in schema) {\n        if (!Array.isArray(obj)) {\n            throw new Error(`expected Array, got '${obj}'`);\n        }\n\n        /**\n         * @type {[Promise<UplcData>, Promise<UplcData>][]}\n         */\n        const pairs = obj.map(entry => {\n            if (!Array.isArray(entry)) {\n                throw new Error(`expected Array of Arrays, got '${obj}'`);\n            }\n\n            const [key, value] = entry;\n\n            if (!key || !value) {\n                throw new Error(`expected Array of Array[2], got '${obj}'`);\n            }\n\n            return [\n                jsToUplcInternal(schema.keyType, key, helpers),\n                jsToUplcInternal(schema.valueType, value, helpers)\n            ];\n        });\n\n        const keys = await Promise.all(pairs.map(p => p[0]));\n        const values = await Promise.all(pairs.map(p => p[1]));\n\n        return new MapData(keys.map((k, i) => [k, values[i]]));\n    } else if (schema.type == \"Option\" && \"someType\" in schema) {\n        if (obj === null) {\n            return new ConstrData(1, []);\n        } else {\n            return new ConstrData(0, [await jsToUplcInternal(schema.someType, obj, helpers)]);\n        }\n    } else if (schema.type == \"Struct\" && \"fieldTypes\" in schema) {\n        const fields = schema.fieldTypes.map((fieldSchema) => {\n            const fieldName = fieldSchema.name;\n            const fieldObj = obj[fieldName];\n\n            if (fieldObj === undefined) {\n                throw new Error(`field ${fieldName} not found in '${obj}'`);\n            }\n\n            return jsToUplcInternal(fieldSchema, fieldObj, helpers);\n        });\n\n        if (fields.length == 1) {\n            return fields[0];\n        } else {\n            return new ListData(await Promise.all(fields));\n        }\n    } else if (schema.type == \"Enum\" && \"variantTypes\" in schema) {\n        const keys = Object.keys(obj);\n\n        if (keys.length != 1) {\n            throw new Error(\"expected a single key for enum\");\n        }\n\n        const key = keys[0];\n\n        const index = schema.variantTypes.findIndex(variant => variant.name == key);\n\n        if (index == -1) {\n            throw new Error(`invalid variant ${key}`);\n        }\n\n        const fields = schema.variantTypes[index].fieldTypes.map((fieldSchema) => {\n            const fieldName = fieldSchema.name;\n            const fieldObj = obj[key][fieldName];\n\n            if (fieldObj === undefined) {\n                throw new Error(`field ${fieldName} not found in '${obj[key]}'`);\n            }\n\n            return jsToUplcInternal(fieldSchema, fieldObj, helpers);\n        });\n\n        return new ConstrData(index, await Promise.all(fields));\n    } else {\n        const builtinType = builtinTypes[schema.type];\n\n        if (!builtinType) {\n            throw new Error(`${schema.type} isn't a valid builtin type`);\n        }\n\n        return builtinType.jsToUplc(obj, helpers);\n    }\n}\n\n/**\n * @internal\n * @param {TypeSchema} schema\n * @param {any} obj\n * @param {JsToUplcHelpers} helpers\n * @returns {Promise<UplcData>}\n */\nexport function jsToUplc(schema, obj, helpers) {\n    return jsToUplcInternal(schema, obj, helpers);\n}\n\n/**\n * @internal\n * @param {TypeSchema} schema\n * @param {UplcData} data\n * @param {UplcToJsHelpers} helpers\n * @returns {Promise<any>}\n */\nasync function uplcToJsInternal(schema, data, helpers) {\n    if (schema.type == \"List\" && \"itemType\" in schema) {\n        return await Promise.all(data.list.map(item => uplcToJsInternal(schema.itemType, item, helpers)));\n    } else if (schema.type == \"Map\" && \"keyType\" in schema && \"valueType\" in schema) {\n        /**\n         * @type {[Promise<any>, Promise<any>][]}\n         */\n        const pairs = data.map.map(([key, value]) => [uplcToJsInternal(schema.keyType, key, helpers), uplcToJsInternal(schema.valueType, value, helpers)]);\n\n        const keys = await Promise.all(pairs.map(p => p[0]));\n        const values = await Promise.all(pairs.map(p => p[1]));\n\n        return keys.map((k, i) => [k, values[i]]);\n    } else if (schema.type == \"Option\" && \"someType\" in schema) {\n        if (data.index == 1) {\n            assert(data.fields.length == 0, \"not an Option ConstrData\");\n            return null;\n        } else if (data.index == 0) {\n            assert(data.fields.length == 1, \"not an Option ConstrData\");\n            return uplcToJsInternal(schema.someType, data.fields[0], helpers);\n        } else {\n            throw new Error(\"not an Option ConstrData\");\n        }\n    } else if (schema.type == \"Struct\" && \"fieldTypes\" in schema) {\n        const obj = {};\n\n        const fields = schema.fieldTypes.length == 1 ? [data] : data.list;\n\n        for (let i = 0; i < fields.length; i++) {\n            const field = fields[i];\n\n            const fieldType = schema.fieldTypes[i];\n\n            if (!fieldType) {\n                throw new Error(\"field out-of-range\");\n            }\n\n            obj[fieldType.name] = await uplcToJsInternal(fieldType, field, helpers);\n        }\n\n        return obj;\n    } else if (schema.type == \"Enum\" && \"variantTypes\" in schema) {\n        const index = data.index;\n\n        const variant = schema.variantTypes[index];\n\n        if (!variant) {\n            throw new Error(\"constr index out-of-range\");\n        }\n\n        const obj = {};\n\n        const fields = data.fields;\n\n        for (let i = 0; i< fields.length; i++) {\n            const field = fields[i];\n\n            const fieldType = variant.fieldTypes[i];\n\n            if (!fieldType) {\n                throw new Error(\"field out-of-range\");\n            }\n\n            obj[fieldType.name] = await uplcToJsInternal(fieldType, field, helpers);\n        }\n\n        return {[variant.name]: obj};\n    } else {\n        const builtinType = builtinTypes[schema.type];\n\n        if (!builtinType) {\n            throw new Error(`${schema.type} isn't a valid builtin type`);\n        }\n\n        return builtinType.uplcToJs(data, helpers);\n    }\n}\n\n/**\n * @internal\n * @param {TypeSchema} schema\n * @param {UplcData} data\n * @param {UplcToJsHelpers} helpers\n * @returns {Promise<any>}\n */\nexport function uplcToJs(schema, data, helpers) {\n    return uplcToJsInternal(schema, data, helpers);\n}","import path from \"path\";\nimport { createFilter } from \"rollup-pluginutils\";\nimport * as helios from \"@hyperionbt/helios\";\n\n/**\n * Rollup loader for Helios source files\n * @public\n **/\nexport function heliosRollupLoader(\n    opts = {\n        include: \"**/*.hl\",\n        exclude: [],\n    }\n)  {\n    if (!opts.include) {\n        throw Error(\"missing required 'include' option for helios loader\");\n    }\n\n    const filter = createFilter(opts.include, opts.exclude);\n\n    type Loader = { \n        code: string, \n        map: {mappings: string} \n    }\n    let esbuildApi;\n    return {\n        name: \"helios\",\n\n        transform(content, id) {\n            if (filter(id)) {\n                const relPath = path.relative(\".\", id);\n                console.warn(\n                    `heliosLoader: generating javascript for ${relPath}`\n                );\n\n                // helios.Program.new(content) // fails unless it can resolve deps\n\n                const [_, purpose, moduleName] =\n                    content.match(\n                        /(module|minting|spending|endpoint)\\s+([a-zA-Z0-9]+)/m\n                    ) || [];\n\n                if (!(purpose && moduleName))\n                    throw new Error(`Bad format for helios file ${id}`);\n\n                const code = `const code = new String(${JSON.stringify(content)});\\n\\n`+\n                    `code.srcFile = ${JSON.stringify(relPath)};\\n`+\n                    `code.purpose = ${JSON.stringify(purpose)}\\n`+\n                    `code.moduleName = ${JSON.stringify(moduleName)}\\n`+\n                    // `type foo={ hello: \"world\" }\\n`+\n                    `\\nexport default code\\n`\n                ;\n\n                return {\n                    code: code,                    \n                    map: { mappings: \"\" },\n                };\n            }\n        },\n\n        // buildStart({ plugins }) {\n\t\t// \tconst parentName = 'esbuild';\n\t\t// \tconst parentPlugin = plugins.find(\n\t\t// \t\tplugin => plugin.name === parentName\n\t\t// \t);\n\t\t// \tif (!parentPlugin) {\n\t\t// \t\t// or handle this silently if it is optional\n\t\t// \t\tthrow new Error(\n\t\t// \t\t\t`This plugin depends on the \"${parentName}\" plugin.`\n\t\t// \t\t);\n\t\t// \t}\n\t\t// \t// now you can access the API methods in subsequent hooks\n\t\t// \tesbuildApi = parentPlugin;\n\t\t// },\n\n    };\n}\n","import {\n    Address,\n    Datum,\n    Tx,\n    TxOutput,\n    TxInput,\n    Value,\n    bytesToText,\n    Assets,\n    MintingPolicyHash,\n    ByteArray,\n    ByteArrayData,\n    TxId,\n    TxOutputId,\n} from \"@hyperionbt/helios\";\nimport type { ErrorMap } from \"./delegation/RolesAndDelegates.js\";\nimport { StellarTxnContext } from \"./StellarTxnContext.js\";\n\n/**\n * converts a hex string to a printable alternative, with no assumptions about the underlying data\n * @remarks\n *\n * Unlike Helios' bytesToText, hexToPrintable() simply changes printable characters to characters,\n * and represents non-printable characters in '‹XX›' format.\n * @param ‹pName› - descr\n * @typeParam ‹pName› - descr (for generic types)\n * @public\n **/\nexport function hexToPrintableString(hexStr) {\n    let result = \"\";\n    for (let i = 0; i < hexStr.length; i += 2) {\n        let hexChar = hexStr.substring(i, i + 2);\n        let charCode = parseInt(hexChar, 16);\n\n        // ASCII printable characters are in the range 32 (space) to 126 (~)\n        if (charCode >= 32 && charCode <= 126) {\n            result += String.fromCharCode(charCode);\n        } else {\n            result += `‹${hexChar}›`;\n        }\n\n        // todo decode utf8 parts using bytesToText(...substring...)\n        // int         required_len;\n        // if (key[0] >> 7 == 0)\n        //     required_len = 1;\n        // else if (key[0] >> 5 == 0x6)\n        //     required_len = 2;\n        // else if (key[0] >> 4 == 0xE)\n        //     required_len = 3;\n        // else if (key[0] >> 5 == 0x1E)\n        //     required_len = 4;\n        // else\n        //     return (0);\n        // return (strlen(key) == required_len && chars_are_folow_uni(key + 1));\n    \n\n    }\n    return result;\n}\n/**\n * Converts an array of [ policyId, ‹tokens› ] tuples for on-screen presentation\n * @remarks\n *\n * Presents policy-ids with shortened identifiers, and shows a readable & printable\n * representation of token names even if they're not UTF-8 encoded.\n * @public\n **/\nexport function assetsAsString(a: Assets) {\n    //@ts-expect-error it's marked as private, but thankfully it's still accessible\n    const assets = a.assets;\n    return assets\n        .map(([policyId, tokenEntries]) => {\n\n            const tokenString = tokenEntries\n                .map(\n                    ([nameBytes, count]) => {\n                        const nameString = hexToPrintableString(nameBytes.hex);\n                        return `${count}×💴 ${nameString}`\n                    }\n                )\n                .join(\" + \");\n            return `⦑${policyIdAsString(policyId)} ${tokenString}⦒`;\n        })\n        .join(\"\\n  \");\n}\n\nexport function policyIdAsString(p: MintingPolicyHash) {\n    const pIdHex = p.hex;\n    return `🏦 ${pIdHex.slice(0, 8)}…${pIdHex.slice(\n        -4\n    )}`\n}\n\n/**\n * Converts lovelace to approximate ADA, in consumable 3-decimal form\n * @public\n **/\nexport function lovelaceToAda(l: bigint | number) {\n    const asNum = parseInt(l.toString());\n    const ada =\n        (asNum && `${(Math.round(asNum / 1000) / 1000).toFixed(3)} ADA`) || \"\";\n    return ada;\n}\n\n/**\n * Converts a Value to printable form\n * @public\n **/\nexport function valueAsString(v: Value) {\n    const ada = lovelaceToAda(v.lovelace);\n    const assets = assetsAsString(v.assets);\n    return [ada, assets].filter((x) => !!x).join(\" + \");\n}\n\n/**\n * Converts a Tx to printable form\n * @public\n **/\nexport function txAsString(tx: Tx): string {\n    const bodyAttrs = [\n        \"inputs\",\n        \"minted\",\n        \"collateral\",\n        \"refInputs\",\n        \"outputs\",\n        \"fee\",\n        \"lastValidSlot\",\n        \"firstValidSlot\",\n        \"metadataHash\",\n        \"scriptDataHash\",\n        \"signers\",\n        \"collateralReturn\",\n    ];\n    const witnessAttrs = [\n        \"signatures\",\n        \"datums\",\n        \"refScripts\",\n        \"scripts\",\n        \"redeemers\",\n        \"nativeScripts\",\n    ];\n\n    let details = \"\";\n\n    const d = tx.dump();\n    //!!! todo: improve interface of tx so useful things have a non-private api\n    //!!! todo: get rid of dump()\n    //!!! todo: get back to type-safety in this diagnostic suite\n    for (const x of bodyAttrs) {\n        let item = tx.body[x] || (d.body[x] as any);\n        let skipLabel = false;\n        // console.log(`attr '${x}'`)\n        if (Array.isArray(item) && !item.length) continue;\n\n        if (!item) continue;\n        if (\"inputs\" == x) {\n            item = `\\n  ${item.map((x) => txInputAsString(x)).join(\"\\n  \")}`;\n        }\n        if (\"refInputs\" == x) {\n            item = `\\n  ${item\n                .map((x) => txInputAsString(x, \"ℹ️  \"))\n                .join(\"\\n  \")}`;\n        }\n        if (\"collateral\" == x) {\n            //!!! todo: group collateral with inputs and reflect it being spent either way,\n            //     IFF it is also a tx `input`\n            //!!! todo: move collateral to bottom with collateralReturn,\n            //     IFF it is not part of the tx `inputs`\n            item = item.map((x) => txInputAsString(x, \"🔪\")).join(\"\\n    \");\n        }\n        if (\"minted\" == x) {\n            item = ` ❇️  ${assetsAsString(item)}`;\n        }\n        if (\"outputs\" == x) {\n            item = `\\n  ${item\n                .map((x, i) => txOutputAsString(x, `${i}  <-`))\n                .join(\"\\n  \")}`;\n        }\n        if (\"signers\" == x) {\n            item = item.map((x) => {\n                if (!x.hex) debugger;\n                return `🔑#${x.hex.slice(0, 6)}…${x.hex.slice(-4)}`;\n            });\n        }\n\n        if (\"fee\" == x) {\n            item = parseInt(item);\n            item =\n                `${(Math.round(item / 1000) / 1000).toFixed(3)} ADA ` +\n                tx.profileReport.split(\"\\n\")[0];\n\n            // console.log(\"fee\", item)\n        }\n\n        if (\"collateralReturn\" == x) {\n            skipLabel = true;\n            item = `  ${txOutputAsString(\n                item,\n                `0  <- ❓`\n            )} conditional: collateral change (returned in case of txn failure)`;\n        }\n\n        details += `${skipLabel ? \"\" : \"  \" + x + \": \"}${item}\\n`;\n    }\n    let hasWinfo = false;\n    const winfo = {};\n    for (const x of witnessAttrs) {\n        let item = tx.witnesses[x] || (d.witnesses[x] as any);\n        if (Array.isArray(item) && !item.length) continue;\n        if (\"datums\" == x && !Object.entries(item || {}).length) continue;\n        if (\"signatures\" == x) {\n            if (!item) continue;\n            item = item.map((s) => {\n                const addr = Address.fromHash(s.pubKeyHash);\n                return `🖊️ ${addrAsString(addr)} = 🔑…${s.pubKeyHash.hex.slice(\n                    -4\n                )}`;\n            });\n            if (item.length > 1) item.unshift(\"\");\n            item = item.join(\"\\n    \");\n        }\n        if (\"redeemers\" == x) {\n            if (!item) continue;\n            //!!! todo: augment with mph when that's available from the Activity.\n            item = item.map((x) => {\n                // console.log(\"redeemer keys\", ...[ ...Object.keys(x2) ], x2.dump());\n                const indexInfo =\n                    x.inputIndex == -1\n                        ? `spend txin #‹tbd›`\n                        : \"inputIndex\" in x\n                        ? `spend txin #${1 + x.inputIndex}`\n                        : `mint policy#${1 + x.mphIndex}`;\n\n                return `🏧  ${indexInfo} ${x.data.toString()}`;\n            });\n            if (item.length > 1) item.unshift(\"\");\n            item = item.join(\"\\n    \");\n        }\n        if (\"scripts\" == x) {\n            if (!item) continue;\n            item = item.map((s) => {\n                try {\n                    const mph = s.mintingPolicyHash.hex;\n                    // debugger\n                    return `🏦 ${mph.slice(0, 8)}…${mph.slice(-4)} (minting): ${s.serializeBytes().length} bytes`;\n                } catch (e) {\n                    const vh = s.validatorHash.hex;\n                    const addr = Address.fromHash(s.validatorHash);\n                    // debugger\n                    return `📜 ${vh.slice(0, 8)}…${vh.slice(\n                        -4\n                    )} (validator at ${addrAsString(addr)}): ${s.serializeBytes().length} bytes`;\n                }\n            });\n            if (item.length > 1) item.unshift(\"\");\n            item = item.join(\"\\n    \");\n        }\n\n        if (!item) continue;\n        hasWinfo = true;\n        winfo[x] = item;\n    }\n    if (hasWinfo) {\n        details += Object.entries(winfo)\n            .map(([k, v]) => `  ${k}: ${v}\\n`)\n            .join(\"\");\n    }\n    try {\n        details = details + `  txId: ${tx.id().hex}`;\n    } catch (e) {\n        details = details + `  (Tx not yet finalized!)`;\n    }\n    return details;\n}\n\n/**\n * Converts a TxInput to printable form\n * @remarks\n *\n * Shortens address and output-id for visual simplicity; doesn't include datum info\n * @public\n **/\nexport function txInputAsString(x: TxInput, prefix = \"-> \"): string {\n    return `${prefix}${addrAsString(x.address)} ${valueAsString(\n        x.value\n    )} = 📖 ${txOutputIdAsString(x.outputId)}`;\n}\n\n/**\n * Converts a list of UTxOs to printable form\n * @remarks\n *\n * ... using {@link txInputAsString}\n * @public\n **/\nexport function utxosAsString(utxos: TxInput[], joiner = \"\\n\"): string {\n    return utxos.map((u) => utxoAsString(u, \" 💵\")).join(joiner);\n}\n\nexport function txOutputIdAsString(x: TxOutputId) : string {\n    return txidAsString(x.txId) + \n        \"🔹\" /* <-- unicode blue bullet */ +\n        `#${x.utxoIdx}`;\n}\n\nexport function txidAsString(x: TxId) : string {\n    const tid = x.hex\n    return `${tid.slice(0, 6)}…${tid.slice(-4)}`\n}\n\n/**\n * converts a utxo to printable form\n * @remarks\n *\n * shows shortened output-id and the value being output, plus its datum\n * @internal\n **/\nexport function utxoAsString(x: TxInput, prefix = \"💵\"): string {\n    return ` 📖 ${txOutputIdAsString(x.outputId)}: ${txOutputAsString(\n        x.origOutput,\n        prefix\n    )}`; // or 🪙\n}\n\n/**\n * converts a Datum to a printable summary\n * @remarks\n *\n * using shortening techniques for the datumHash\n * @public\n **/\nexport function datumAsString(d: Datum | null | undefined): string {\n    if (!d) return \"\"; //\"‹no datum›\";\n\n    // debugger\n    const dh = d.hash.hex;\n    const dhss = `${dh.slice(0, 8)}…${dh.slice(-4)}`;\n    if (d.isInline()) return `d‹inline:${dhss} - ${d.toCbor().length} bytes›`;\n    return `d‹hash:${dhss}…›`;\n}\n\n/**\n * Converts a txOutput to printable form\n * @remarks\n *\n * including all its values, and shortened Address.\n * @public\n **/\nexport function txOutputAsString(x: TxOutput, prefix = \"<-\"): string {\n    return `${prefix} ${addrAsString(x.address)} ${valueAsString(x.value)} ${datumAsString(\n        x.datum\n    )}`;\n}\n\n/**\n * Renders an address in shortened bech32 form, with prefix and part of the bech32 suffix\n * @remarks\n * @param address - address\n * @public\n **/\nexport function addrAsString(address: Address): string {\n    const bech32 = (address as any).bech32 || address.toBech32();\n\n    return `${bech32.slice(0, 14)}…${bech32.slice(-4)}`;\n}\n\n/**\n * Converts an Errors object to a string for onscreen presentation\n * @public\n **/\nexport function errorMapAsString(em: ErrorMap, prefix = \"  \") {\n    return Object.keys(em)\n        .map((k) => `in field ${prefix}${k}: ${JSON.stringify(em[k])}`)\n        .join(\"\\n\");\n}\n\n/**\n * Converts a list of ByteArrays to printable form\n * @remarks\n *\n * ... using {@link hexToPrintableString}\n * @public\n **/\nexport function byteArrayListAsString(items: ByteArray[] | ByteArrayData[], joiner = \"\\n  \"): string {\n    return \"[\\n  \"+ items.map((ba) => byteArrayAsString(ba)).join(joiner) + \"\\n]\\n\";\n}\n\n/**\n * Renders a byteArray in printable form, assuming it contains (mostly) text\n * @remarks\n * \n * Because it uses {@link hexToPrintableString()}, it will render any non-printable \n * characters using ‹hex› notation.\n * @param ba - the byte array\n * @public\n **/\nexport function byteArrayAsString(ba: ByteArray | ByteArrayData): string {\n    return hexToPrintableString(ba.hex)\n}\n\n/**\n * Converts any (supported) input arg to string\n * @remarks\n *\n * more types to be supported TODO\n * @public\n **/\nexport function dumpAny(\n    x: Tx | StellarTxnContext | Address | Value | \n        TxOutput | TxInput | TxInput[] | \n        TxId |\n        ByteArray | ByteArray[] | ByteArrayData | ByteArrayData[]\n) {\n    if (Array.isArray(x)) {\n        if (x[0] instanceof TxInput) {\n        //@ts-expect-error sorry, typescript : /\n        return \"utxos: \\n\"+ utxosAsString(x)\n        } \n        if (x[0] instanceof ByteArray || x[0] instanceof ByteArrayData) {\n        //@ts-expect-error sorry, typescript : /\n        return \"byte array:\\n\"+ byteArrayListAsString(x)\n        }\n    }\n\n    if (x instanceof Tx) {\n        return txAsString(x);\n    }\n\n    if (x instanceof TxOutput) {\n        return txOutputAsString(x);\n    }\n\n    if (x instanceof TxOutputId) {\n        return txOutputIdAsString(x);\n    }\n\n    if (x instanceof TxId) {\n        return txidAsString(x);\n    }\n\n    if (x instanceof TxInput) {\n        return utxoAsString(x)\n    }\n    if (x instanceof Value) {\n        return valueAsString(x);\n    }\n    if (x instanceof Address) {\n        return addrAsString(x);\n    }\n    if (x instanceof MintingPolicyHash) {\n        return policyIdAsString(x)\n    }\n    if (x instanceof StellarTxnContext) {\n        return txAsString(x.tx);\n    }\n    if (x instanceof ByteArray || x[0] instanceof ByteArrayData) {\n        //@ts-expect-error sorry, typescript : /\n        return byteArrayAsString(x)\n    }\n\n    debugger\n    return \"dumpAny(): unsupported type or library mismatch\"\n}\n\nif (\"undefined\" == typeof window) {\n    globalThis.peek = dumpAny;\n} else {\n    //@ts-expect-error\n    window.peek = dumpAny;\n}\n","\nexport const _uutName = Symbol(\"uutName\");\nexport const maxUutName = 32;\n\n/**\n * a unique utility token having a unique name\n * @remarks\n *\n * This class contains a general 'purpose' name, mapped to a unique\n * `name`, which is generated using a seed-utxo pattern.\n *\n * @public\n **/\nexport class UutName {\n    private [_uutName]: string;\n    purpose: string;\n    constructor(purpose: string, fullUutName: string) {\n        this.purpose = purpose;\n        if (fullUutName.length > maxUutName) {\n            throw new Error(\n                `uut name '${fullUutName}' exceeds max length of ${maxUutName}`\n            );\n        }\n        this[_uutName] = fullUutName;\n    }\n    /**\n     * the full uniquified name of this UUT\n     * @remarks\n     *\n     * format: `purpose-‹...uniqifier...›`\n     * @public\n     **/\n    get name() {\n        return this[_uutName];\n    }\n    toString() {\n        return this[_uutName];\n    }\n}\n","import {\n    HeliosData,\n    Tx,\n    TxOutput,\n    TxInput,\n} from \"@hyperionbt/helios\";\nimport type {\n    Address,\n    Wallet,\n} from \"@hyperionbt/helios\";\n\nimport { txAsString } from \"./diagnostics.js\";\nimport type { hasUutContext } from \"./Capo.js\";\nimport { UutName } from \"./delegation/UutName.js\";\n\n//!!! if we could access the inputs and outputs in a building Tx,\n//  this might  not be necessary (unless it becomes a\n//   bigger-picture contextual container that serves various Stellar\n//   contract scripts with non-txn context for building a Tx)\n\nexport type emptyState = {\n    uuts: Record<string, UutName>\n};\nexport type anyState = emptyState;\nexport type uutMap = Record<string, UutName>;\nexport const emptyUuts: uutMap = Object.freeze({});\n\ntype addInputArgs = Parameters<Tx[\"addInput\"]>;\ntype addRefInputArgs = Parameters<Tx[\"addRefInput\"]>\ntype addRefInputsArgs = Parameters<Tx[\"addRefInputs\"]>\ntype _redeemerArg = addInputArgs[1]\n\ntype RedeemerArg = {\n    redeemer: _redeemerArg;\n};\n\n/**\n * Transaction-building context for Stellar Contract transactions\n * @remarks\n *\n * Uses same essential facade as Helios Tx.\n * \n * Adds a transaction-state container with strong typing of its contents,\n * enabling transaction-building code to use type-sensitive auto-complete\n * and allowing Stellar Contracts library code to require transaction contexts\n * having known states.\n * \n * Retains reflection capabilities to allow utxo-finding utilities to exclude \n * utxo's already included in the contract.\n * \n * @typeParam S - type of the context's `state` prop\n * @public\n **/\nexport class StellarTxnContext<S extends emptyState = anyState> {\n    tx = Tx.new();\n    inputs: TxInput[] = [];\n    collateral?: TxInput;\n    outputs: TxOutput[] = [];\n    feeLimit?: bigint;\n    state: S;\n    actor?: Wallet;\n    neededSigners: Address[] = []\n    constructor(\n        actor?: Wallet, \n        state: Partial<S> = {\n    }) {\n        this.actor = actor\n        const {uuts = {...emptyUuts}, ...moreState} = state;\n        //@ts-expect-error\n        this.state = {\n            uuts,\n            ...moreState\n        }\n    }\n\n    dump() {\n        const { tx } = this;\n        return txAsString(tx);\n    }\n\n    mintTokens(...args: Parameters<Tx[\"mintTokens\"]>): StellarTxnContext<S> {\n        this.tx.mintTokens(...args);\n\n        return this;\n    }\n\n    reservedUtxos(): TxInput[] {\n        return [...this.inputs, this.collateral].filter(\n            (x) => !!x\n        ) as TxInput[];\n    }\n\n    utxoNotReserved(u: TxInput): TxInput | undefined {\n        if (this.collateral?.eq(u)) return undefined;\n        if (this.inputs.find((i) => i.eq(u))) return undefined;\n        return u;\n    }\n\n    addUut<\n        T extends string\n    >(\n        uutName: UutName, ...names : T[]\n    ):  hasUutContext<T> & typeof this {\n        this.state.uuts = this.state.uuts || {};\n        \n        for( const name of names ) {\n            this.state.uuts[name] = uutName\n        }\n\n        return this as (typeof this & hasUutContext<T>)\n    }\n\n    addCollateral(collateral: TxInput) {\n        if (!collateral.value.assets.isZero()) {\n            throw new Error(\n                `invalid attempt to add non-pure-ADA utxo as collateral`\n            );\n        }\n        this.collateral = collateral;\n\n        this.tx.addCollateral(collateral);\n        return this;\n    }\n\n    validFor<TCX extends StellarTxnContext<S>>(\n        this: TCX, durationMs: number, backwardMs = 3 * 60 * 1000  // allow it to be up to ~12 slots / 3 minutes old by default\n    ) : TCX {\n        this.tx.\n            validFrom(new Date(Date.now() - backwardMs)).  \n            validTo(new Date(Date.now() + durationMs))\n            \n        return this\n    }\n\n    txRefInputs: TxInput[] = []\n    /**\n     * adds a reference input to the transaction context\n     * @remarks\n     * \n     * idempotent version of helios addRefInput()\n     * \n     * @typeParam ‹pName› - descr (for generic types)\n     * @public\n     **/\n    addRefInput<TCX extends StellarTxnContext<S>>(\n        this: TCX, \n        input: addRefInputArgs[0],\n    ) {\n        if ( this.txRefInputs.find(\n            (v) => v.outputId.eq(input.outputId)\n        )) {\n            console.warn(\"suppressing second add of refInput\")\n            return this;\n        }\n        this.txRefInputs.push(input);\n        this.tx.addRefInput(input);\n\n        return this\n    }\n\n    addRefInputs<TCX extends StellarTxnContext<S>>(\n        this: TCX, \n        ...args: addRefInputsArgs\n    ) {\n        const [inputs] = args\n        for ( const input of inputs ) {\n            this.addRefInput(input);\n        }\n        return this\n    }\n\n\n    addInput<TCX extends StellarTxnContext<S>>(\n        this: TCX, \n        input: addInputArgs[0], \n        r?: RedeemerArg\n    ) : TCX  {\n        if (input.address.pubKeyHash) this.neededSigners.push(input.address)\n        this.inputs.push(input);\n        this.tx.addInput(input, r?.redeemer);\n\n        return this;\n    }\n\n    addInputs<TCX extends StellarTxnContext<S>>(\n        this:TCX, \n        inputs: Parameters<Tx[\"addInputs\"]>[0], \n        r: RedeemerArg\n    ): TCX {\n        for (const input of inputs) {\n            if (input.address.pubKeyHash) this.neededSigners.push(input.address)\n        }\n        this.inputs.push(...inputs);\n        this.tx.addInputs(inputs, r.redeemer);\n\n        return this;\n    }\n\n    addOutput<TCX extends StellarTxnContext<S>>(\n        this:TCX, \n        ...args: Parameters<Tx[\"addOutput\"]>\n    ): TCX {\n        const [output, ..._otherArgs] = args;\n        this.outputs.push(output);\n        this.tx.addOutput(...args);\n        return this;\n    }\n\n    addOutputs<TCX extends StellarTxnContext<S>>(\n        this:TCX\n        ,...args: Parameters<Tx[\"addOutputs\"]>\n    ): TCX {\n        const [outputs, ..._otherArgs] = args;\n        this.outputs.push(...outputs);\n        this.tx.addOutputs(...args);\n\n        return this;\n    }\n\n    attachScript(...args: Parameters<Tx[\"attachScript\"]>) {\n        this.tx.attachScript(...args);\n\n        return this;\n    }\n\n    async addSignature(wallet: Wallet) {\n        const [sig] = await wallet.signTx(this.tx);\n\n        this.tx.addSignature(sig);\n    }\n\n    /**\n     * To add a script to the transaction context, use `attachScript`\n     *\n     * @deprecated - invalid method name; use attachScript\n     **/\n    addScript() {}\n}\n","import {\n    Address,\n    Assets,\n    MintingPolicyHash,\n    TxOutput,\n    Value,\n    textToBytes,\n    \n} from \"@hyperionbt/helios\";\nimport type { uutPurposeMap } from \"./Capo.js\";\nimport type { valuesEntry } from \"./HeliosPromotedTypes.js\";\nimport { UutName } from \"./delegation/UutName.js\";\n\n\n/**\n * Creates Value-creation entires for a list of uuts\n * @remarks\n * \n * returns a list of `entries` usable in Value's `[mph, entries[]]` tuple.\n * @param uuts - a list of {@link UutName}s or a {@link uutPurposeMap}\n * @public\n **/\nexport function mkUutValuesEntries(uuts: UutName[]): valuesEntry[];\n/** @public **/\nexport function mkUutValuesEntries(uuts: uutPurposeMap<any>): valuesEntry[];\n/** @public **/\nexport function mkUutValuesEntries(\n    uuts: UutName[] | uutPurposeMap<any>\n): valuesEntry[] {\n    const uutNs = Array.isArray(uuts) ? uuts : Object.values(uuts);\n    const uniqs : UutName[] = [];\n    for (const un of uutNs) {\n        if (!uniqs.includes(un)) uniqs.push(un)\n    }\n    return uniqs.map((uut) => mkValuesEntry(uut.name, BigInt(1)));\n}\n\n/**\n * Converts string to array of UTF-8 byte-values \n* @public\n **/\nexport const stringToNumberArray = textToBytes\n// func stringToNumberArray (str: string): number[] {\n//     let encoder = new TextEncoder();\n//     let byteArray = encoder.encode(str);\n//     return [...byteArray].map((x) => parseInt(x.toString()));\n// }\n\n/**\n * Creates a tuple usable in a Value, converting token-name to byte-array if needed\n * @public\n **/\nexport function mkValuesEntry(\n    tokenName: string | number[],\n    count: bigint\n): valuesEntry {\n    const tnBytes = Array.isArray(tokenName)\n        ? tokenName\n        : stringToNumberArray(tokenName);\n\n    // addrHint,  //moved to config\n    // reqdAddress,  // removed\n\n    return [tnBytes, count];\n}\n\n/**\n * construct a Value based on a token-name\n * @remarks\n *\n * A simpler version of the Value constructor to serve the\n * common case of a single, string-based token name.\n *\n * If you need the Value to contain its minUtx computed based\n * on network parameters, use the StellarContract's mkMinTv()\n * method instead.\n *\n * @param mph - policy-hash of the token\n * @param tokenName - string name of the token\n * @param count: number of the tokens to include in the value\n * @public\n **/\nexport function mkTv(\n    mph: MintingPolicyHash,\n    tokenName: string | number[],\n    count: bigint = 1n\n): Value {\n    const v = new Value(\n        undefined,\n        new Assets([[mph, [mkValuesEntry(tokenName, count)]]])\n    );\n    return v;\n}\n","import {\n    Address,\n    Assets,\n    DatumHash,\n    HInt,\n    HeliosData,\n    MintingPolicyHash,\n    NetworkParams,\n    Program,\n    TxOutput,\n    TxInput,\n    UplcData,\n    UplcDataValue,\n    UplcProgram,\n    Value,\n    extractScriptPurposeAndName,\n    Datum,\n    AssetClass,\n    //@ts-expect-error\n    DataDefinition,\n    ListData,\n    ConstrData,\n    WalletHelper,\n} from \"@hyperionbt/helios\";\nimport * as helios from \"@hyperionbt/helios\";\nimport type {\n    Network,\n    Wallet,\n} from \"@hyperionbt/helios\";\n\nimport { \n    StellarTxnContext,\n } from \"./StellarTxnContext.js\";\nimport { utxosAsString, valueAsString } from \"./diagnostics.js\";\nimport type { InlineDatum, valuesEntry } from \"./HeliosPromotedTypes.js\";\nimport type { HeliosModuleSrc } from \"./HeliosModuleSrc.js\";\nimport { mkTv, stringToNumberArray } from \"./utils.js\";\nimport { UutName } from \"./delegation/UutName.js\";\n\n\ntype tokenPredicate<tokenBearer extends canHaveToken> = ((\n    something: tokenBearer\n) => tokenBearer | undefined) & { value: Value };\n\ntype NetworkName = \"testnet\" | \"mainnet\";\nlet configuredNetwork : NetworkName | undefined = undefined\n\n/**\n * a type for redeemer/activity-factory functions declared with \\@Activity.redeemer\n *\n * @public\n */\nexport type isActivity = {\n    redeemer: UplcDataValue | UplcData;\n    // | HeliosData\n};\n\ntype WalletsAndAddresses = {\n    wallets: Wallet[];\n    addresses?: Address[];\n};\nexport type utxoInfo = {\n    u: TxInput;\n    sufficient: boolean;\n    free: bigint;\n    minAdaAmount: bigint;\n};\n\n/**\n * Type for the Class that constructs to a given type\n * @remarks\n *\n * Type of the matching literal class\n *\n * note: Typescript should make this pattern easier\n *\n * @typeParam S - the type of objects of this class\n * @typeParam CT - inferred type of the constructor args for the class\n * @public\n **/\nexport type stellarSubclass<\n    S extends StellarContract<CT>,\n    CT extends configBase = S extends StellarContract<infer iCT>\n        ? iCT\n        : configBase\n> = (new (args: StellarConstructorArgs<CT>) => S & StellarContract<CT>) & {\n    defaultParams: Partial<CT>;\n    parseConfig(rawJsonConfig: any): any\n};\n\n/**\n * Properties for Datum structures for on-chain scripts\n * @public\n **/\nexport type anyDatumProps = Record<string, any>;\n/**\n * Configuration details for StellarContract classes\n * @public\n **/\nexport type configBase = Record<string, any>;\n\n/**\n * Decorators for on-chain activity (redeemer) factory functions\n * @public\n **/\nexport const Activity = {\n    /**\n     * Decorates a partial-transaction function that spends a contract-locked UTxO using a specific activity (\"redeemer\")\n     * @remarks\n     *\n     * activity-linked transaction-partial functions must follow the txn\\{...\\}\n     * and active-verb (\"ing\") naming conventions.  `txnRetiringDelegation`,\n     * `txnModifyingVote` and `txnWithdrawingStake` would be examples\n     * of function names following this guidance.\n     *\n     * @public\n     **/\n    partialTxn(proto, thingName, descriptor) {\n        needsActiveVerb(thingName);\n        return partialTxn(proto, thingName, descriptor);\n    },\n    /**\n     * Decorates a factory-function for creating tagged redeemer data for a specific on-chain activity\n     * @remarks\n     *\n     * The factory function should follow an active-verb convention by including \"ing\" in the name of the factory function\n     * @public\n     **/\n    redeemer(proto, thingName, descriptor) {\n        needsActiveVerb(thingName, !!\"okwhatever\");\n        return Activity.redeemerData(proto, thingName, descriptor);\n    },\n    redeemerData(proto, thingName, descriptor) {\n        //!!! todo: registry and cross-checking for missing redeeming methods\n\n        //!!! todo: develop more patterns of \"redeemer uses an input of a certain mph/value\"\n        return descriptor;\n    },\n};\n\nfunction needsActiveVerb(thingName: string, okWorkaround?: boolean) {\n    if (!thingName.match(/ing/)) {\n        const orWorkaround =\n            okWorkaround &&\n            \"(or work around with @Activity.redeemerData instead)\";\n        throw new Error(\n            `Activity: ${thingName}: name should have 'ing' in it ${orWorkaround}`\n        );\n    }\n    if (thingName.match(/^ing/)) {\n        throw new Error(\n            `Activity: ${thingName}: name shouldn't start with 'ing'`\n        );\n    }\n}\n\n/**\n * Decorates datum-building functions\n * @remarks\n *\n * function names must follow the mkDatum... convention.\n *\n * The function should accept a single argument with input type\n * that feels Typescripty, and that can be fit to the on-chain type of\n * the underlying Datum variant of the given name.\n *\n * @public\n **/\nexport function datum(proto, thingName, descriptor) {\n    // console.log(\"+datum\", proto.constructor.name, thingName || \"none\", descriptor.value.name )\n    if (!thingName.match(/^mkDatum/)) {\n        throw new Error(\n            `@datum factory: ${thingName}: name should start with 'mkDatum...'`\n        );\n    }\n    return descriptor;\n}\n\n/**\n * Decorates functions that can construct a new transaction context for a specific use-case\n * @remarks\n *\n * function names must follow the mkTxn... convention.\n * @public\n **/\nexport function txn(proto, thingName, descriptor) {\n    // console.log(\"+datum\", proto.constructor.name, thingName || \"none\", descriptor.value.name )\n    if (!thingName.match(/^mkTxn/)) {\n        throw new Error(\n            `@txn factory: ${thingName}: name should start with 'mkTxn...'`\n        );\n    }\n    return descriptor;\n}\n\n/**\n * decorates functions that increment a transaction by adding needed details for a use-case\n * @remarks\n *\n * Function names must follow the txn\\{...\\} naming convention. Typical partial-transaction names\n * may describe the semantics of how the function augments the transaction.\n * `txnAddSignatures` or `txnReceivePayment` could be example names following\n * this guidance\n *\n * Partial transactions should have a \\<TCX extends StellarTxnContext\\<...\\>\\> type parameter,\n * matched to its first function argument, and should return a type extending that same TCX,\n * possibly with additional StellarTxnContext\\<...\\> type info.\n *\n * The TCX constraint can specify key requirements for an existing transaction context when\n * that's relevant.\n *\n * @public\n **/\nexport function partialTxn(proto, thingName, descriptor) {\n    // console.log(\"+datum\", proto.constructor.name, thingName || \"none\", descriptor.value.name )\n    if (!thingName.match(/^txn[A-Z]/)) {\n        let help = \"\";\n        if (thingName.match(/^mkTxn/)) {\n            help = `\\n  ... or, for transaction initiation with mkTxn, you might try @txn instead. `;\n        }\n        throw new Error(\n            `@partialTxn factory: ${thingName}: should start with 'txn[A-Z]...'${help}`\n        );\n    }\n    return descriptor;\n}\n\nexport async function findInputsInWallets(\n    v: Value,\n    searchIn: WalletsAndAddresses,\n    network: Network\n) {\n    const { wallets, addresses } = searchIn;\n\n    const lovelaceOnly = v.assets.isZero();\n    console.warn(\"finding inputs\", {\n        lovelaceOnly,\n    });\n\n    for (const w of wallets) {\n        const [a] = await w.usedAddresses;\n        console.log(\"finding funds in wallet\", a.toBech32().substring(0, 18));\n        const utxos = await w.utxos;\n        for (const u of utxos) {\n            if (lovelaceOnly) {\n                if (u.value.assets.isZero() && u.value.lovelace >= v.lovelace) {\n                    return u;\n                }\n                console.log(\"  - too small; skipping \", u.value.dump());\n            } else {\n                if (u.value.ge(v)) {\n                    return u;\n                }\n            }\n        }\n    }\n    if (lovelaceOnly) {\n        throw new Error(\n            `no ADA is present except those on token bundles.  TODO: findFreeLovelaceWithTokens`\n        );\n        // const spareChange = this.findFreeLovelaceWithTokens(v, w)\n    }\n    //!!! todo: allow getting free ada from a contract address?\n\n    if (addresses) {\n        for (const a of addresses) {\n            const utxos = await network.getUtxos(a);\n            for (const u of utxos) {\n                if (u.value.ge(v)) {\n                    return u;\n                }\n            }\n        }\n    }\n\n    throw new Error(\n        `None of these wallets${\n            (addresses && \" or addresses\") || \"\"\n        } have the needed tokens`\n    );\n}\n\n/**\n * standard setup for any Stellar Contract class\n * @public\n **/\nexport type SetupDetails = {\n    network: Network;\n    networkParams: NetworkParams;\n    isMainnet?: boolean;\n    myActor?: Wallet;\n    isTest?: boolean;\n    isDev?: boolean;\n    optimize?: boolean;\n};\n\n/**\n * @public\n * Extracts the config type for a Stellar Contract class\n **/\nexport type ConfigFor<\n    SC extends StellarContract<C>,\n    C extends configBase = SC extends StellarContract<infer inferredConfig>\n        ? inferredConfig\n        : never\n> = C;\n/**\n * Initializes a stellar contract class\n * @remarks\n *\n * Includes network and other standard setup details, and any configuration needed\n * for the specific class.\n * @public\n **/\nexport type StellarConstructorArgs<CT extends configBase> = {\n    setup: SetupDetails;\n    config?: CT;\n    partialConfig?: Partial<CT>;\n};\n\n/**\n * a function that can filter txInputs for coin-selection\n * @remarks\n *\n * short form: \"returns truthy\" if the input is matchy for the context\n * @public\n **/\nexport type utxoPredicate =\n    | ((u: TxInput) => TxInput | undefined)\n    | ((u: TxInput) => boolean)\n    | ((u: TxInput) => boolean | undefined);\n\ntype scriptPurpose =\n    | \"testing\"\n    | \"minting\"\n    | \"spending\"\n    | \"staking\"\n    | \"module\"\n    | \"endpoint\";\n\nexport type canHaveToken = TxInput | TxOutput | Assets;\ntype UtxoSearchScope = {\n    address?: Address;\n    wallet?: Wallet;\n    exceptInTcx?: StellarTxnContext;\n};\n\n//!!! todo: type configuredStellarClass = class -> networkStuff -> withParams = stellar instance.\n\n/*\n * Basic wrapper and off-chain facade for interacting with a single Plutus contract script\n * @remarks\n *\n * This class is normally used only for individual components of a higher-level {@link Capo | Capo or Leader contract},\n * which act as delegates within its application context.  Nonetheless, it is the base class for every Capo as well as\n * simpler contract scripts.\n *\n * The StellarContract class serves as an off-chain facade for transaction-building and interfacing to any on-chain\n * contract script.  Each StellarContract subclass must define a `contractSource()`, which is currently a Helios-language\n * script, compiled in any Javascript environment to an on-chain executable UPLC or \"plutus core\" form.  This enables\n * a static dApp to be self-sovereign, without need for any server (\"application back-end\") environment.\n *\n * @typeParam ConfigType - schema for the configuration needed for creating or reproducing a\n * specific instance of the contract script on-chain.\n *\n * @public\n **/\nexport class StellarContract<\n    // SUB extends StellarContract<any, ParamsType>,\n    ConfigType extends configBase\n> {\n    //! it has scriptProgram: a parameterized instance of the contract\n    //  ... with specific `parameters` assigned.\n    scriptProgram?: Program;\n    configIn?: ConfigType;\n    partialConfig?: Partial<ConfigType>;\n    contractParams?: configBase;\n    setup: SetupDetails;\n    network: Network;\n    networkParams: NetworkParams;\n    myActor?: Wallet;\n    // isTest?: boolean\n    static get defaultParams() {\n        return {};\n    }\n    static parseConfig(rawJsonConfig: any) {\n        throw new Error(`Stellar contract subclasses should define their own static parseConfig where needed to enable connection from a specific dApp to a specific Stellar Contract.`)\n    }\n\n    /**\n     * returns the wallet connection used by the current actor\n     * @remarks\n     *\n     * Throws an error if the strella contract facade has not been initialized with a wallet in settings.myActor\n     * @public\n     **/\n    get wallet() {\n        if (!this.myActor)\n            throw new Error(\n                `wallet is not connected to strella '${this.constructor.name}'`\n            );\n        return this.myActor;\n    }\n\n    //! can transform input configuration to contract script params\n    //! by default, all the config keys are used as script params\n    getContractScriptParams(\n        config: ConfigType\n    ): configBase & Partial<ConfigType> {\n        return config;\n    }\n\n    delegateReqdAddress(): false | Address {\n        return this.address;\n    }\n    delegateAddrHint(): Address[] | undefined {\n        return undefined;\n    }\n\n    walletNetworkCheck?: Promise<NetworkName> | NetworkName\n    constructor(args: StellarConstructorArgs<ConfigType>) {\n        const { setup, config, partialConfig } = args;\n        this.setup = setup;\n        const { network, networkParams, isTest, myActor, isMainnet } = setup;\n\n        const chosenNetwork = isMainnet ? \"mainnet\" : \"testnet\";\n        if (\"undefined\" !== typeof configuredNetwork) {\n            if (configuredNetwork != chosenNetwork) {\n                console.warn(\n                    `Possible CONFLICT:  previously configured as ${configuredNetwork}, while this setup indicates ${chosenNetwork}`+\n                    `\\n   ... are you or the user switching between networks?`\n                );\n            }\n        }\n        helios.config.set({IS_TESTNET: !isMainnet});\n        configuredNetwork = chosenNetwork;\n        this.network = network;\n        this.networkParams = networkParams;\n        // this.isTest = isTest        \n        if (myActor) {\n            this.walletNetworkCheck = myActor.isMainnet().then((isMain) => {\n                const foundNetwork = isMain ? \"mainnet\" : \"testnet\"\n                if (foundNetwork !== chosenNetwork) return Promise.reject(new Error(`wallet on ${foundNetwork} doesn't match network from setup`));\n                return this.walletNetworkCheck = foundNetwork\n            });\n            this.myActor = myActor;\n        }\n\n        if (config) {\n            this.configIn = config;\n\n            const fullScriptParams = (this.contractParams =\n                this.getContractScriptParams(config));\n\n            this.scriptProgram = this.loadProgramScript(fullScriptParams);\n        } else {\n            this.partialConfig = partialConfig;\n            this.scriptProgram = this.loadProgramScript();\n        }\n    }\n    compiledScript!: UplcProgram; // initialized in loadProgramScript\n\n    get datumType() {\n        return this.onChainDatumType;\n    }\n    /**\n     * @internal\n     **/\n    _purpose?: scriptPurpose;\n    get purpose() {\n        if (this._purpose) return this._purpose;\n\n        const purpose = this.scriptProgram?.purpose as scriptPurpose;\n        if (!purpose) return \"non-script\";\n        return (this._purpose = purpose as scriptPurpose);\n    }\n\n    get address(): Address {\n        return Address.fromHashes(this.compiledScript.validatorHash);\n    }\n\n    get mintingPolicyHash() {\n        if (\"minting\" != this.purpose) return undefined;\n\n        return this.compiledScript.mintingPolicyHash;\n    }\n\n    get identity() {\n        if (\"minting\" == this.purpose) {\n            const b32 = this.compiledScript.mintingPolicyHash.toBech32();\n            //!!! todo: verify bech32 checksum isn't messed up by this:\n            return b32.replace(/^asset/, \"mph\");\n        }\n\n        return this.address.toBech32();\n    }\n\n    //! searches the network for utxos stored in the contract,\n    //  returning those whose datum hash is the same as the input datum\n    async outputsSentToDatum(datum: InlineDatum) {\n        const myUtxos = await this.network.getUtxos(this.address);\n\n        // const dump = utxosAsString(myUtxos)\n        // console.log({dump})\n        return myUtxos.filter((u) => {\n            return u.origOutput.datum?.hash.hex == datum.hash.hex;\n        });\n    }\n\n    //! adds the values of the given TxInputs\n    totalValue(utxos: TxInput[]): Value {\n        return utxos.reduce((v: Value, u: TxInput) => {\n            return v.add(u.value);\n        }, new Value(0n));\n    }\n\n    /**\n     * Returns the indicated Value to the contract script\n     * @public\n     * @param tcx - transaction context\n     * @param value - a value already having minUtxo calculated\n     * @param datum - inline datum\n     **/\n    //! adds the indicated Value to the transaction;\n    //  ... EXPECTS  the value to already have minUtxo calculated on it.\n    @partialTxn // non-activity partial\n    txnKeepValue(tcx: StellarTxnContext, value: Value, datum: InlineDatum) {\n        tcx.addOutput(new TxOutput(this.address, value, datum));\n\n        return tcx;\n    }\n\n    addStrellaWithConfig<\n        SC extends StellarContract<any>\n        // P = SC extends StellarContract<infer P> ? P : never\n    >(\n        TargetClass: new (\n            a: SC extends StellarContract<any>\n                ? StellarConstructorArgs<ConfigFor<SC>>\n                : never\n        ) => SC,\n        config: SC extends StellarContract<infer iCT> ? iCT : never\n    ) {\n        const args: StellarConstructorArgs<ConfigFor<SC>> = {\n            config,\n            setup: this.setup,\n        };\n        //@ts-expect-error todo: why is the conditional type not matching enough?\n        const strella = new TargetClass(args);\n        return strella;\n    }\n\n    // async findDatum(d: Datum | DatumHash): Promise<TxInput[]>;\n    // async findDatum(predicate: utxoPredicate): Promise<TxInput[]>;\n    // async findDatum(d: Datum | DatumHash | utxoPredicate): Promise<TxInput[]> {\n    //     let targetHash: DatumHash | undefined =\n    //         d instanceof Datum\n    //             ? d.hash\n    //             : d instanceof DatumHash\n    //             ? d\n    //             : undefined;\n    //     let predicate =\n    //         \"function\" === typeof d\n    //             ? d\n    //             : (u: TxInput) => {\n    //                   const match =\n    //                       u.origOutput?.datum?.hash.hex == targetHash?.hex;\n    //                   console.log(\n    //                       txOutputAsString(\n    //                           u.origOutput,\n    //                           `    ${match ? \"✅ matched \" : \"❌ no match\"}`\n    //                       )\n    //                   );\n    //                   return !!match;\n    //               };\n\n    //     //prettier-ignore\n    //     console.log(\n    //         `finding utxo with datum ${\n    //             targetHash?.hex.substring(0,12)\n    //         }... in wallet`,\n    //         this.address.toBech32().substring(0,18)\n    //     );\n\n    //     const heldUtxos = await this.network.getUtxos(this.address);\n    //     console.log(`    - found ${heldUtxos.length} utxo:`);\n    //     return heldUtxos.filter(predicate);\n    // }\n\n    /**\n     * Returns all the types exposed by the contract script\n     * @remarks\n     *\n     * Passed directly from Helios; property names match contract's defined type names\n     *\n     * @public\n     **/\n    get onChainTypes() {\n        const types = { ...this.scriptProgram!.types };\n        //@ts-expect-error because allStatements is marked as internal\n        const statements = this.scriptProgram!.allStatements;\n\n        for (const [statement, _someBoolThingy] of statements) {\n            const name = statement.name.value;\n            if (types[name]) continue;\n            if (\n                \"StructStatement\" ==\n                Object.getPrototypeOf(statement).constructor.name\n            ) {\n                const type = statement.genOffChainType(); // an off-chain type **representing** an on-chain type\n                const name = type.name.value;\n                if (types[name]) throw new Error(`ruh roh`);\n                types[name] = type;\n            }\n        }\n        return types;\n    }\n\n    /**\n     * identifies the enum used for the script Datum\n     * @remarks\n     *\n     * Override this if your contract script uses a type name other than Datum.\n     * @public\n     **/\n    get scriptDatumName() {\n        return \"Datum\";\n    }\n\n    /**\n     * returns the on-chain type for datum\n     * @remarks\n     *\n     * returns the on-chain enum used for attaching data (or data hashes) to contract utxos\n     * the returned type (and its enum variants) are suitable for off-chain txn-creation\n     * override `get scriptDatumName()` if needed to match your contract script.\n     * @public\n     **/\n    get onChainDatumType() {\n        const { scriptDatumName: onChainDatumName } = this;\n        const { [onChainDatumName]: DatumType } = this.scriptProgram!.types;\n        return DatumType;\n    }\n\n    /**\n     * identifies the enum used for activities (redeemers) in the Helios script\n     * @remarks\n     *\n     * Override this if your contract script uses a type name other than Activity.\n     * @public\n     **/\n\n    get scriptActivitiesName() {\n        return \"Activity\";\n    }\n\n    /**\n     * returns the on-chain type for activites (\"redeemers\")\n     * @remarks\n     *\n     * returns the on-chain enum used for spending contract utxos or for different use-cases of minting (in a minting script).\n     * the returned type (and its enum variants) are suitable for off-chain txn-creation\n     * override `get onChainActivitiesName()` if needed to match your contract script.\n     * @public\n     **/\n    get onChainActivitiesType() {\n        const { scriptActivitiesName: onChainActivitiesName } = this;\n        const { [onChainActivitiesName]: ActivitiesType } =\n            this.scriptProgram!.types;\n        return ActivitiesType;\n    }\n    mustGetActivity(activityName) {\n        const { [activityName]: activityType } = this.onChainActivitiesType;\n        if (!activityType) {\n            const { scriptActivitiesName: onChainActivitiesName } = this;\n            throw new Error(\n                `$${this.constructor.name}: activity name mismatch ${onChainActivitiesName}::${activityName}''\\n` +\n                    `   known activities in this script: ${Object.keys(\n                        this.onChainActivitiesType\n                    ).join(\", \")}`\n            );\n        }\n        return activityType;\n    }\n\n    async readDatum<DPROPS extends anyDatumProps>(\n        datumName: string,\n        datum: Datum | InlineDatum\n    ): Promise<DPROPS | undefined> {\n        const thisDatumType = this.onChainDatumType[datumName];\n\n        // console.log(` ----- read datum ${datumName}`)\n\n        if (!thisDatumType) throw new Error(`invalid datumName ${datumName}`);\n        if (!datum.isInline())\n            throw new Error(\n                `datum must be an InlineDatum to be readable using readDatum()`\n            );\n\n        return this.readUplcDatum(thisDatumType, datum.data!).catch((e) => {\n            if (e.message?.match(/expected constrData/)) return undefined;\n            throw e;\n        }) as Promise<DPROPS | undefined>;\n    }\n\n    private async readUplcStructList(uplcType: any, uplcData: ListData) {\n        const { fieldNames, instanceMembers } = uplcType as any;\n\n        if (uplcType.fieldNames?.length == 1) {\n            throw new Error(`todo: support for single-field nested structs?`);\n        }\n\n        //@ts-expect-error until Helios exposes right type info for the list element\n        const nestedFieldList = uplcData.list;\n        return Object.fromEntries(\n            await Promise.all(\n                fieldNames.map(async (fn: string, i: number) => {\n                    const fieldData = nestedFieldList[i];\n                    const fieldType = instanceMembers[fn];\n                    // console.log(` ----- read struct field ${fn}`)\n                    const value = await this.readUplcField(\n                        fn,\n                        fieldType,\n                        fieldData\n                    );\n                    // console.log(` <----- struct field ${fn}`, value);\n\n                    return [fn, value];\n                })\n            )\n        );\n    }\n\n    private async readUplcEnumVariant(\n        uplcType: any,\n        enumDataDef: any,\n        uplcData: ConstrData & UplcData\n    ) {\n        const fieldNames: string[] = enumDataDef.fieldNames;\n\n        //@ts-expect-error TS doesn't understand this enum variant data\n        const { fields } = uplcData;\n        return Object.fromEntries(\n            await Promise.all(\n                fieldNames.map(async (fn, i) => {\n                    const fieldData = fields[i];\n                    const fieldType = enumDataDef.fields[i].type;\n                    const value = await this.readUplcField(\n                        fn,\n                        fieldType,\n                        fieldData\n                    ).catch((nestedError) => {\n                        console.warn(\n                            \"error parsing nested data inside enum variant\",\n                            { fn, fieldType, fieldData }\n                        );\n                        debugger;\n                        throw nestedError;\n                    });\n                    return [fn, value];\n                })\n            )\n        );\n    }\n\n    private async readUplcDatum(uplcType: any, uplcData: UplcData) {\n        const { fieldNames, instanceMembers } = uplcType as any;\n        if (!fieldNames) {\n            const enumVariant = uplcType.prototype._enumVariantStatement;\n            if (enumVariant) {\n                //@ts-expect-error because TS doesn't grok ConstrData here\n                const foundIndex = uplcData.index;\n                const { dataDefinition: enumDataDef, constrIndex } =\n                    enumVariant;\n                if (!(uplcData instanceof ConstrData))\n                    throw new Error(\n                        `uplcData mismatch - no constrData, expected constData#${constrIndex}`\n                    );\n                if (!(foundIndex == constrIndex))\n                    throw new Error(\n                        `uplcData expected constrData#${constrIndex}, got #${foundIndex}`\n                    );\n\n                const t = this.readUplcEnumVariant(\n                    uplcType,\n                    enumDataDef,\n                    uplcData\n                );\n                return t; // caller can deal with catching the error\n            }\n            throw new Error(\n                `can't determine how to parse UplcDatum without 'fieldNames'.  Tried enum`\n            );\n        }\n\n        // const heliosTypes = Object.fromEntries(\n        //     fieldNames.map((fn) => {\n        //         return [fn, instanceMembers[fn].name];\n        //     })\n        // );\n        // const inputTypes = Object.fromEntries(\n        //     fieldNames.map((fn) => {\n        //         return [fn, instanceMembers[fn].typeDetails.inputType];\n        //     })\n        // );\n        // const outputTypes = Object.fromEntries(\n        //     fieldNames.map((fn) => {\n        //         debugger\n        //         return [fn, instanceMembers[fn].typeDetails.outputType];\n        //     })\n        // );\n        return Object.fromEntries(\n            await Promise.all(\n                fieldNames.map(async (fn, i) => {\n                    let current;\n\n                    //@ts-expect-error\n                    const uplcDataField = uplcData.fields[i];\n                    const fieldType = instanceMembers[fn];\n                    // console.log(` ----- read field ${fn}`)\n\n                    current = await this.readUplcField(\n                        fn,\n                        fieldType,\n                        uplcDataField\n                    );\n\n                    return [fn, current];\n                })\n            )\n        );\n    }\n\n    private async readUplcField(\n        fn: string,\n        fieldType: any,\n        uplcDataField: any\n    ) {\n        let value;\n        const { offChainType } = fieldType;\n        const internalType = fieldType.typeDetails.internalType.type;\n        if (\"Struct\" == internalType) {\n            value = await this.readUplcStructList(fieldType, uplcDataField);\n            // console.log(`  <-- field value`, value)\n            return value;\n        }\n        try {\n            value = fieldType.uplcToJs(uplcDataField);\n            if (value.then) value = await value;\n\n            if (\"Enum\" === internalType && 0 === uplcDataField.fields.length) {\n                value = Object.keys(value)[0];\n            }\n        } catch (e: any) {\n            if (e.message?.match(/doesn't support converting from Uplc/)) {\n                try {\n                    value = await offChainType.fromUplcData(uplcDataField);\n                    if (value && \"some\" in value) value = value.some;\n                    if (value && \"string\" in value) value = value.string;\n                } catch (e: any) {\n                    console.error(`datum: field ${fn}: ${e.message}`);\n                    // console.log({outputTypes, fieldNames, offChainTypes, inputTypes, heliosTypes, thisDatumType});\n                    debugger;\n                    throw e;\n                }\n            } else {\n                throw e;\n            }\n        }\n        // console.log(`  <-- field value`, value)\n        return value;\n    }\n\n    findSmallestUnusedUtxo(\n        lovelace: bigint,\n        utxos: TxInput[],\n        tcx?: StellarTxnContext\n    ): TxInput | undefined {\n        const value = new Value({ lovelace });\n        const toSortInfo = this._mkUtxoSortInfo(value.lovelace);\n\n        const found = utxos\n            .map(toSortInfo)\n            .filter(this._utxoIsPureADA)\n            .filter(this._utxoIsSufficient)\n            .filter((uInfo: utxoInfo) => {\n                if (!tcx) return true;\n                return !!tcx?.utxoNotReserved(uInfo.u);\n            })\n            .sort(this._utxoSortSmallerAndPureADA)\n            .map(this._infoBackToUtxo);\n        console.log(\"smallest utxos: \", utxosAsString(found));\n        const chosen = found.at(0);\n\n        return chosen;\n    }\n\n    //! creates a filtering function, currently for TxInput-filtering only.\n    //! with the optional tcx argument, utxo's already reserved\n    //  ... in that transaction context will be skipped.\n    mkValuePredicate(\n        lovelace: bigint,\n        tcx?: StellarTxnContext\n    ): tokenPredicate<TxInput> {\n        const value = new Value({ lovelace });\n        const predicate = _adaPredicate.bind(this, tcx) as tokenPredicate<any>;\n        predicate.value = value;\n        return predicate;\n\n        function _adaPredicate(\n            this: StellarContract<ConfigType>,\n            tcx: StellarTxnContext | undefined,\n            utxo: TxInput\n        ): TxInput | undefined {\n            return this.hasOnlyAda(value, tcx, utxo);\n        }\n    }\n\n    mkMinTv(\n        mph: MintingPolicyHash,\n        tokenName: string | UutName | number[],\n        count: bigint = 1n\n    ) {\n        const tnBytes = Array.isArray(tokenName)\n            ? tokenName\n            : stringToNumberArray(tokenName.toString());\n\n        return this.mkMinAssetValue(new AssetClass([mph, tnBytes]), count);\n    }\n\n    mkAssetValue(tokenId: AssetClass, count: bigint = 1n) {\n        const assets = [[tokenId, count] as [AssetClass, bigint]];\n        const v = new Value(undefined, assets);\n        return v;\n    }\n\n    mkMinAssetValue(tokenId: AssetClass, count: bigint = 1n) {\n        const v = this.mkAssetValue(tokenId, count);\n        // uses a dummy address so it can be used even during bootstrap\n        const txo = new TxOutput(\n            new Address(Array<number>(29).fill(0)),\n            this.mkAssetValue(tokenId, count)\n        );\n        txo.correctLovelace(this.networkParams);\n        return txo.value;\n    }\n\n    mkTokenPredicate(val: Value): tokenPredicate<any>;\n    mkTokenPredicate(\n        mph: MintingPolicyHash,\n        tokenName: string,\n        quantity?: bigint\n    ): tokenPredicate<any>;\n    mkTokenPredicate(\n        vOrMph: AssetClass,\n        quantity?: bigint\n    ): tokenPredicate<any>;\n    mkTokenPredicate(\n        specifier: Value | MintingPolicyHash | AssetClass,\n        quantOrTokenName?: string | bigint,\n        quantity?: bigint\n    ): tokenPredicate<any> {\n        let v: Value;\n        let mph: MintingPolicyHash;\n        let tokenName: string;\n        //!!! todo: support (AssetClass, quantity) input form\n        if (!specifier)\n            throw new Error(\n                `missing required Value or MintingPolicyHash in arg1`\n            );\n        const predicate = _tokenPredicate.bind(this) as tokenPredicate<any>;\n\n        const isValue = specifier instanceof Value;\n        if (isValue) {\n            v = predicate.value = specifier;\n            return predicate;\n        } else if (specifier instanceof MintingPolicyHash) {\n            mph = specifier;\n            if (\"string\" !== typeof quantOrTokenName)\n                throw new Error(\n                    `with minting policy hash, token-name must be a string (or ByteArray support is TODO)`\n                );\n            tokenName = quantOrTokenName;\n            quantity = quantity || 1n;\n\n            v = predicate.value = this.tokenAsValue(tokenName, quantity, mph);\n            return predicate;\n        } else if (specifier instanceof AssetClass) {\n            mph = specifier.mintingPolicyHash;\n            if (!quantOrTokenName) quantOrTokenName = 1n;\n            if (\"bigint\" !== typeof quantOrTokenName)\n                throw new Error(\n                    `with AssetClass, the second arg must be a bigint like 3n, or omitted`\n                );\n            quantity = quantOrTokenName;\n\n            v = predicate.value = new Value(0n, [[specifier, quantity]]);\n            return predicate;\n        } else {\n            throw new Error(\n                `wrong token specifier (need Value, MPH+tokenName, or AssetClass`\n            );\n        }\n\n        function _tokenPredicate<tokenBearer extends canHaveToken>(\n            this: StellarContract<ConfigType>,\n            something: tokenBearer\n        ): tokenBearer | undefined {\n            return this.hasToken(something, v);\n        }\n    }\n\n    private hasToken<tokenBearer extends canHaveToken>(\n        something: tokenBearer,\n        value: Value,\n        tokenName?: string,\n        quantity?: bigint\n    ): tokenBearer | undefined {\n        if (something instanceof TxInput)\n            return (\n                (this.utxoHasToken(something, value, tokenName, quantity) &&\n                    something) ||\n                undefined\n            );\n        if (something instanceof TxOutput)\n            return (\n                (this.outputHasToken(something, value, tokenName, quantity) &&\n                    something) ||\n                undefined\n            );\n        if (something instanceof Assets)\n            return (\n                (this.assetsHasToken(something, value, tokenName, quantity) &&\n                    something) ||\n                undefined\n            );\n\n        //!!! todo: more explicit match for TxInput, which seems to be a type but not an 'instanceof'-testable thing.\n        return (\n            (this.inputHasToken(something, value, tokenName, quantity) &&\n                something) ||\n            undefined\n        );\n    }\n\n    private utxoHasToken(\n        u: TxInput,\n        value: Value,\n        tokenName?: string,\n        quantity?: bigint\n    ) {\n        return (\n            this.outputHasToken(u.origOutput, value, tokenName, quantity) && u\n        );\n    }\n    private inputHasToken(\n        i: TxInput,\n        value: Value,\n        tokenName?: string,\n        quantity?: bigint\n    ) {\n        return (\n            this.outputHasToken(i.origOutput, value, tokenName, quantity) && i\n        );\n    }\n\n    private assetsHasToken(\n        a: Assets,\n        vOrMph: Value | MintingPolicyHash,\n        tokenName?: string,\n        quantity?: bigint\n    ) {\n        const v =\n            vOrMph instanceof MintingPolicyHash\n                ? this.tokenAsValue(tokenName!, quantity!, vOrMph)\n                : vOrMph;\n\n        return a.ge(v.assets);\n    }\n\n    private outputHasToken(\n        o: TxOutput,\n        vOrMph: Value | MintingPolicyHash,\n        tokenName?: string,\n        quantity?: bigint\n    ) {\n        if (vOrMph instanceof MintingPolicyHash && !tokenName)\n            throw new Error(\n                `missing required tokenName (or use a Value in arg2`\n            );\n        if (vOrMph instanceof MintingPolicyHash && !quantity)\n            throw new Error(\n                `missing required quantity (or use a Value in arg2`\n            );\n\n        const v =\n            vOrMph instanceof MintingPolicyHash\n                ? this.tokenAsValue(tokenName!, quantity!, vOrMph)\n                : vOrMph;\n\n        return o.value.ge(v);\n    }\n\n    //! deprecated tokenAsValue - use Capo\n    tokenAsValue(\n        tokenName: string,\n        quantity: bigint,\n        mph?: MintingPolicyHash\n    ): Value {\n        throw new Error(\n            `deprecated tokenAsValue on StellarContract base class (Capo has mph, not so much any StellarContract`\n        );\n        // if (!mph) {\n        //     mph = (this as any).mph;\n        //     if (!mph)\n        //         throw new Error(\n        //             `tokenAsValue: mph in arg3 required unless the stellar contract (${this.constructor.name}) has an 'mph' getter.`\n        //         );\n        // }\n\n        // const v = new Value(\n        //     this.ADA(0),\n        //     new Assets([[mph, [this.mkValuesEntry(tokenName, quantity)]]])\n        // );\n        // const o = new TxOutput(this.address, v);\n        // v.setLovelace(o.calcMinLovelace(this.networkParams));\n\n        // return v;\n    }\n\n    hasOnlyAda(value: Value, tcx: StellarTxnContext | undefined, u: TxInput) {\n        const toSortInfo = this._mkUtxoSortInfo(value.lovelace);\n\n        const found = [u]\n            .map(toSortInfo)\n            .filter(this._utxoIsSufficient)\n            .filter(this._utxoIsPureADA)\n            .map(this._infoBackToUtxo)\n            .at(0);\n\n        return found;\n    }\n\n    /**\n     * @internal\n     **/\n    protected _utxoSortSmallerAndPureADA(\n        { free: free1, minAdaAmount: r1 }: utxoInfo,\n        { free: free2, minAdaAmount: r2 }: utxoInfo\n    ) {\n        {\n            //! primary: treats pure-ada utxos as always better\n            if (!r1 && r2) {\n                return -1;\n            }\n            if (r1 && !r2) {\n                return 1; //\n            }\n        }\n        //! secondary: smaller utxos are more preferred than larger ones\n        if (free2 > free1) return -1;\n        if (free2 < free1) return 1;\n        return 0;\n    }\n\n    /**\n     * @internal\n     **/\n    protected _utxoIsSufficient({ sufficient }: utxoInfo) {\n        return !!sufficient;\n    }\n    /**\n     * @internal\n     **/\n    protected _utxoIsPureADA({ u }: utxoInfo) {\n        return u.value.assets.isZero() ? u : undefined;\n    }\n    /*\n     * @internal\n     **/\n    protected _infoBackToUtxo({ u }: utxoInfo) {\n        return u;\n    }\n    /**\n     * @internal\n     **/\n    protected _mkUtxoSortInfo(min: bigint, max?: bigint) {\n        return (u: TxInput): utxoInfo => {\n            const minAdaAmount = u.value.assets.isZero()\n                ? BigInt(0)\n                : u.origOutput.calcMinLovelace(this.networkParams);\n            const free = u.value.lovelace - minAdaAmount;\n            const sufficient = free > min && (max ? free < max : true);\n            const t = { u, sufficient, free, minAdaAmount };\n            // console.log(t, utxoAsString(u))\n            return t;\n        };\n    }\n    /**\n     * @internal\n     **/\n    protected _utxoCountAdaOnly(c: number, { minAdaAmount }: utxoInfo): number {\n        return c + (minAdaAmount ? 0 : 1);\n    }\n\n    async findAnySpareUtxos(\n        tcx: StellarTxnContext\n    ): Promise<TxInput[] | never> {\n        if (!this.myActor) throw this.missingActorError;\n\n        const mightNeedFees = this.ADA(3.5);\n\n        const toSortInfo = this._mkUtxoSortInfo(mightNeedFees);\n        const notReserved = tcx\n            ? tcx.utxoNotReserved.bind(tcx)\n            : (u: TxInput) => u;\n\n        return this.myActor.utxos.then((utxos) => {\n            const allSpares = utxos\n                .filter(notReserved)\n                .map(toSortInfo)\n                .filter(this._utxoIsSufficient)\n                .sort(this._utxoSortSmallerAndPureADA);\n\n            if (allSpares.reduce(this._utxoCountAdaOnly, 0) > 0) {\n                return allSpares\n                    .filter(this._utxoIsPureADA)\n                    .map(this._infoBackToUtxo);\n            }\n            return allSpares.map(this._infoBackToUtxo);\n        });\n    }\n\n    async findChangeAddr(): Promise<Address> {\n        const { myActor } = this;\n        if (!myActor) {\n            throw new Error(\n                `⚠️ ${this.constructor.name}: no this.myActor; can't get required change address!`\n            );\n        }\n        let unused = (await myActor.unusedAddresses).at(0);\n        if (!unused) unused = (await myActor.usedAddresses).at(-1);\n        if (!unused)\n            throw new Error(\n                `⚠️ ${this.constructor.name}: can't find a good change address!`\n            );\n        return unused;\n    }\n\n    async submit(\n        tcx: StellarTxnContext,\n        {\n            signers = [],\n        }: {\n            signers?: Address[];\n        } = {}\n    ) {\n        let { tx, feeLimit = 2_000_000n } = tcx;\n        const { myActor: wallet } = this;\n\n        if (wallet || signers.length) {\n            const changeAddress = await this.findChangeAddr();\n\n            const spares = await this.findAnySpareUtxos(tcx);\n            const willSign = [...signers, ...tcx.neededSigners];\n\n            const wHelper = wallet && new WalletHelper(wallet);\n            if (wallet && wHelper) {\n                //@ts-expect-error on internal isSmart()\n                if (tx.isSmart() && !tcx.collateral) {\n                    let [c] = await wallet.collateral;\n                    if (!c) {\n                        c = await wHelper.pickCollateral(this.ADA(5n));\n                        if (c.value.lovelace > this.ADA(20n))\n                            throw new Error(\n                                `The only collateral-eligible utxos in this wallet have more than 20 ADA.  It's recommended to create and maintain collateral values between 2 and 20 ADA (or 5 and 20, for more complex txns)`\n                            );\n                    }\n                    tcx.addCollateral(c); // adds it also to the tx.\n                }\n            }\n            // if (sign && this.myActor) {\n            //     willSign.push(this.myActor);\n            // }\n            for (const { pubKeyHash: pkh } of willSign) {\n                if (!pkh) continue;\n                if (tx.body.signers.find((s) => pkh.eq(s))) continue;\n\n                tx.addSigner(pkh);\n            }\n            // const feeEstimated = tx.estimateFee(this.networkParams);\n            // if (feeEstimated > feeLimit) {\n            //     console.log(\"outrageous fee - adjust tcx.feeLimit to get a different threshold\")\n            //     throw new Error(`outrageous fee-computation found - check txn setup for correctness`)\n            // }\n            try {\n                await this.walletNetworkCheck;\n\n                // const t1 = new Date().getTime();\n                await tx.finalize(this.networkParams, changeAddress, spares);\n                // const t2 = new Date().getTime();\n                // const elapsed = t2 - t1;\n                // console.log(`::::::::::::::::::::::::::::::::: tx validation time: ${elapsed}ms`);\n                // result: validations for non-trivial txns can take ~800+ ms\n                //  - validations with simplify:true, ~250ms - but ...\n                //    ... with elided error messages that don't support negative-testing very well\n            } catch (e) {\n                console.log(\"FAILED submitting:\", tcx.dump());\n                debugger;\n                throw e;\n            }\n            if (wallet && wHelper) {\n                let actorMustSign = false;\n                for (const a of willSign) {\n                    if (!(await wHelper.isOwnAddress(a))) continue;\n                    actorMustSign = true;\n                }\n                if (actorMustSign) {\n                    const sigs = await wallet.signTx(tx);\n                    //! doesn't need to re-verify a sig it just collected\n                    //   (sig verification is ~2x the cost of signing)\n                    tx.addSignatures(sigs, false);\n                }\n            }\n        } else {\n            console.warn(\"no 'myActor'; not finalizing\");\n        }\n        console.log(\"Submitting tx: \", tcx.dump());\n        const promises = [\n            this.network.submitTx(tx).catch((e) => {\n                console.warn(\n                    \"submitting via helios Network failed: \",\n                    e.message\n                );\n                debugger;\n                throw e;\n            }),\n        ];\n        if (wallet) {\n            if (!this.setup.isTest)\n                promises.push(\n                    wallet.submitTx(tx).catch((e) => {\n                        console.warn(\n                            \"submitting via wallet failed: \",\n                            e.message\n                        );\n                        debugger;\n                        throw e;\n                    })\n                );\n        }\n        return Promise.any(promises);\n    }\n\n    ADA(n: bigint | number): bigint {\n        const bn =\n            \"number\" == typeof n\n                ? BigInt(Math.round(1_000_000 * n))\n                : ((BigInt(1_000_000) * n) as bigint);\n        return bn;\n    }\n\n    //! it requires an subclass to define a contractSource\n    contractSource(): string | never {\n        throw new Error(`missing contractSource impl`);\n    }\n\n    //!!! todo: implement more and/or test me:\n    // async findFreeLovelaceWithTokens(v: Value, w: Wallet) {\n    // it.todo(\"helps find spare lovelace in tokens\");\n    // it.todo(\"will help harvest spare lovelace in the future if minUtxo is changed\");\n    //     const utxos = await w.utxos;\n    //     const lovelaceOnly = v.assets.isZero();\n    //     //! it finds free lovelace in token bundles, if it can't find free lovelace otherwise\n    //     if (lovelaceOnly) {\n    //         let maxFree: TxInput, minToken: TxInput;\n    //         let minPolicyCount = Infinity;\n\n    //         for (const u of utxos) {\n    //             const policies = u.value.assets.mintingPolicies.length;\n    //             if (policies < minPolicyCount) {\n    //                 minPolicyCount = policies;\n    //                 minToken = u;\n    //             }\n\n    //             const free =\n    //                 u.value.lovelace -\n    //                 u.origOutput.calcMinLovelace(this.networkParams);\n    //             //@ts-ignore\n    //             if (!maxFree) {\n    //                 maxFree = u;\n    //             } else if (free > maxFree!.value.lovelace) {\n    //                 maxFree = u;\n    //             }\n    //         }\n    //     }\n    // }\n\n    importModules(): HeliosModuleSrc[] {\n        return [];\n    }\n\n    loadProgramScript(params?: Partial<ConfigType>): Program | undefined {\n        const src = this.contractSource();\n        const modules = this.importModules();\n\n        // console.log({src, Program)\n\n        try {\n            const script = Program.new(src, modules);\n            if (params) script.parameters = params;\n\n            const simplify =\n                \"optimize\" in this.setup\n                    ? this.setup.optimize\n                    : !this.setup.isTest && !this.setup.isDev;\n            // const t = new Date().getTime();\n            if (simplify) {\n                console.warn(\n                    `Loading optimized contract code for ` + script.name\n                );\n            }\n\n            //!!! todo: consider pushing this to JIT or async\n            this.compiledScript = script.compile(simplify);\n            // const t2 = new Date().getTime();\n\n            // Result: ~80ms cold-start or (much) faster on additional compiles\n            // console.log(\"::::::::::::::::::::::::compile time \"+ (t2 - t) + \"ms\")\n            // -> caching would not improve\n\n            // const configured = Program.new(source)\n            // configured.parameters = params;\n            // const compiledScript = configured.compile(simplify)\n            // const addr = Address.fromHashes(compiledScript.validatorHash)\n\n            return script;\n        } catch (e: any) {\n            if (e.message.match(/invalid parameter name/)) {\n                throw new Error(\n                    e.message +\n                        `\\n   ... this typically occurs when your StellarContract class (${this.constructor.name})` +\n                        \"\\n   ... can be missing a getContractScriptParams() method \" +\n                        \"\\n   ... to map from the configured settings to contract parameters\"\n                );\n            }\n            if (!e.src) {\n                console.error(\n                    `unexpected error while compiling helios program (or its imported module) \\n` +\n                        `> ${e.message}\\n` +\n                        `Suggested: connect with debugger (we provided a debugging point already)\\n` +\n                        `  ... and use 'break on caught exceptions' to analyze the error \\n` +\n                        `This likely indicates a problem in Helios' error reporting - \\n` +\n                        `   ... please provide a minimal reproducer as an issue report for repair!\\n\\n` +\n                        e.stack.split(\"\\n\").slice(1).join(\"\\n\")\n                );\n                try {\n                    debugger;\n                    // debugger'ing?  YOU ARE AWESOME!\n                    //  reminder: ensure \"pause on caught exceptions\" is enabled\n                    //  before playing this next line to dig deeper into the error.\n                    const script2 = Program.new(src, modules);\n                    if (params) script2.parameters = params;\n                } catch (sameError) {\n                    throw sameError;\n                }\n                throw e;\n            }\n            const moduleName = e.src.name;\n            const errorModule = [src, ...modules].find(\n                (m) => (m as any).moduleName == moduleName\n            );\n            const { srcFile = \"‹unknown path to module›\" } =\n                (errorModule as any) || {};\n            const [sl, sc, el, ec] = e.getFilePos();\n            const t = new Error(\"\");\n            const modifiedStack = t.stack!.split(\"\\n\").slice(1).join(\"\\n\");\n            const additionalErrors = e.src.errors\n                .slice(1)\n                .map((x) => `       |         ⚠️  also: ${x}`);\n            const addlErrorText = additionalErrors.length\n                ? [\"\", ...additionalErrors, \"       v\"].join(\"\\n\")\n                : \"\";\n            t.message = e.message + addlErrorText;\n\n            t.stack =\n                `${e.message}\\n    at ${moduleName} (${srcFile}:${1 + sl}:${\n                    1 + sc\n                })\\n` + modifiedStack;\n\n            throw t;\n        }\n    }\n\n    private get missingActorError(): string | undefined {\n        return `Wallet not connected to Stellar Contract '${this.constructor.name}'`;\n    }\n\n    async findActorUtxo(\n        name: string,\n        predicate: (u: TxInput) => TxInput | undefined,\n    ) {\n        const wallet = this.myActor;\n\n        if (!wallet) throw new Error(this.missingActorError);\n\n        return this.hasUtxo(name, predicate, {wallet})\n    }\n\n    async mustFindActorUtxo(\n        name: string,\n        predicate: (u: TxInput) => TxInput | undefined,\n        exceptInTcx: StellarTxnContext,\n        extraErrorHint?: string\n    ): Promise<TxInput | never>;\n    async mustFindActorUtxo(\n        name: string,\n        predicate: (u: TxInput) => TxInput | undefined,\n        extraErrorHint?: string\n    ): Promise<TxInput | never>;\n\n    async mustFindActorUtxo(\n        name: string,\n        predicate: (u: TxInput) => TxInput | undefined,\n        hintOrExcept?: string | StellarTxnContext,\n        hint?: string\n    ): Promise<TxInput | never> {\n        const wallet = this.myActor;\n\n        if (!wallet) throw new Error(this.missingActorError);\n        const isTcx = hintOrExcept instanceof StellarTxnContext;\n        const exceptInTcx = isTcx ? hintOrExcept : undefined;\n        const extraErrorHint = isTcx\n            ? hint\n            : \"string\" == typeof hintOrExcept\n            ? hintOrExcept\n            : undefined;\n\n        return this.mustFindUtxo(\n            name,\n            predicate,\n            { wallet, exceptInTcx },\n            extraErrorHint\n        );\n    }\n\n    /**\n     * Locates a UTxO locked in a validator contract address\n     * @remarks\n     *\n     * Throws an error if no matching UTxO can be found\n     * @param semanticName - descriptive name; used in diagnostic messages and any errors thrown\n     * @param predicate - filter function; returns its utxo if it matches expectations\n     * @param exceptInTcx - any utxos already in the transaction context are disregarded and not passed to the predicate function\n     * @param extraErrorHint - user- or developer-facing guidance for guiding them to deal with the miss\n     * @public\n     **/\n    //! finds a utxo (\n    async mustFindMyUtxo(\n        semanticName: string,\n        predicate: (u: TxInput) => TxInput | undefined,\n        exceptInTcx: StellarTxnContext,\n        extraErrorHint?: string\n    ): Promise<TxInput>;\n    async mustFindMyUtxo(\n        semanticName: string,\n        predicate: (u: TxInput) => TxInput | undefined,\n        extraErrorHint?: string\n    ): Promise<TxInput>;\n\n    async mustFindMyUtxo(\n        semanticName: string,\n        predicate: (u: TxInput) => TxInput | undefined,\n        hintOrExcept?: string | StellarTxnContext,\n        hint?: string\n    ): Promise<TxInput> {\n        const { address } = this;\n        const isTcx = hintOrExcept instanceof StellarTxnContext;\n        const exceptInTcx = isTcx ? hintOrExcept : undefined;\n        const extraErrorHint = isTcx\n            ? hint\n            : \"string\" == typeof hintOrExcept\n            ? hintOrExcept\n            : undefined;\n\n        return this.mustFindUtxo(\n            semanticName,\n            predicate,\n            { address, exceptInTcx },\n            extraErrorHint\n        );\n    }\n\n    async mustFindUtxo(\n        semanticName: string,\n        predicate: (u: TxInput) => TxInput | undefined,\n        searchScope: UtxoSearchScope,\n        extraErrorHint: string = \"\"\n    ): Promise<TxInput | never> {\n        const { address, wallet, exceptInTcx } = searchScope;\n\n        const found = await this.hasUtxo(semanticName, predicate, {\n            address,\n            wallet,\n            exceptInTcx,\n        });\n        if (!found) {\n            throw new Error(\n                this.utxoSearchError(semanticName, searchScope)\n            );\n        }\n\n        return found;\n    }\n\n    utxoSearchError(semanticName: string, searchScope: UtxoSearchScope, extraErrorHint?: string) : string {\n        const where = searchScope.address ? \"address\" : \"connected wallet\";\n        return `${this.constructor.name}: '${semanticName}' utxo not found (${extraErrorHint}) in ${where}`\n\n    }\n    toUtxoId(u: TxInput) {\n        return `${u.outputId.txId.hex}@${u.outputId.utxoIdx}`;\n    }\n\n    /**\n     * Try finding a utxo matching a predicate\n     * @remarks\n     * \n     * Finds the first matching utxo, if any, either in the indicated search-scope's `wallet` or `address`.\n     * \n     * @public\n     **/\n    async hasUtxo(\n        semanticName: string,\n        predicate: utxoPredicate,\n        { address, wallet, exceptInTcx }: UtxoSearchScope\n    ): Promise<TxInput | undefined> {\n        const utxos = address\n            ? await this.network.getUtxos(address)\n            : await wallet!.utxos;\n\n        const collateral = (wallet ? await wallet.collateral : [])[0];\n        // const filterUtxos = [\n        //     ...collateral,\n        //     ...(exceptInTcx?.reservedUtxos() || []),\n        // ];\n        const notCollateral = utxos.filter((u) => !collateral?.eq(u));\n        const filtered = exceptInTcx\n            ? notCollateral.filter(\n                  exceptInTcx.utxoNotReserved.bind(exceptInTcx)\n              )\n            : notCollateral;\n\n        console.log(\n            `finding '${semanticName}' utxo${\n                exceptInTcx ? \" (not already being spent in txn)\" : \"\"\n            } from set:\\n  ${utxosAsString(filtered, \"\\n  \")}`\n            // ...(exceptInTcx && filterUtxos?.length\n            //     ? [\n            //           \"\\n  ... after filtering out:\\n \",\n            //           utxosAsString(exceptInTcx.reservedUtxos(), \"\\n  \"),\n            //       ]\n            //     : [])\n        );\n\n        const found = filtered.find(predicate);\n        if (found) {\n            console.log(\"  <- found:\" + utxosAsString([found]));\n        } else {\n            console.log(\"  (not found)\");\n        }\n        return found;\n    }\n\n    async hasMyUtxo(\n        semanticName: string,\n        predicate: utxoPredicate\n    ): Promise<TxInput | undefined> {\n        return this.hasUtxo(semanticName, predicate, { address: this.address });\n    }\n}\n","//@ts-nocheck\n\n//! this file implements a workaround for a problem\n//  ... where a second imported .hl file in a single .ts file\n//  ... causes the dts rollup plugin to not find the second .hl file\nimport cmh from \"./CapoMintHelpers.hl\";\nimport type { HeliosModuleSrc } from \"./HeliosModuleSrc.js\";\n\nexport const CapoMintHelpers: HeliosModuleSrc = cmh;\n","//@ts-nocheck\n\n//! this file implements a workaround for a problem\n//  ... where a second imported .hl file in a single .ts file\n//  ... causes the dts rollup plugin to not find the second .hl file\nimport type { HeliosModuleSrc } from \"../HeliosModuleSrc.js\";\nimport cdh from \"./CapoDelegateHelpers.hl\";\n\nexport const CapoDelegateHelpers: HeliosModuleSrc = cdh;\n","import {\n    Address,\n    Value,\n    MintingPolicyHash,\n    Assets,\n    Crypto,\n    TxInput,\n    bytesToHex,\n} from \"@hyperionbt/helios\";\nimport {\n    Activity,\n    StellarContract,\n    partialTxn,\n    txn,\n} from \"../StellarContract.js\";\nimport type {\n    configBase,\n    isActivity,\n} from \"../StellarContract.js\";\n\n//@ts-expect-error\nimport contract from \"./DefaultMinter.hl\";\nexport const MinterContract = contract\n\n//@ts-expect-error\nimport StellarHeliosHelpers from \"../StellarHeliosHelpers.hl\";\n\nimport { CapoMintHelpers } from \"../CapoMintHelpers.js\";\n\nimport { StellarTxnContext, emptyUuts } from \"../StellarTxnContext.js\";\nimport type {\n    MintUutActivityArgs,\n    MinterBaseMethods,\n    hasUutContext,\n    uutPurposeMap,\n} from \"../Capo.js\";\nimport type { SeedTxnParams } from \"../SeedTxn.js\";\nimport type { valuesEntry } from \"../HeliosPromotedTypes.js\";\nimport { CapoDelegateHelpers } from \"../delegation/CapoDelegateHelpers.js\";\nimport { UutName } from \"../delegation/UutName.js\";\n\nimport type { HeliosModuleSrc } from \"../HeliosModuleSrc.js\";\nimport { mkUutValuesEntries, mkValuesEntry } from \"../utils.js\";\nimport { dumpAny } from \"../diagnostics.js\";\nimport type { DefaultCapo } from \"../DefaultCapo.js\";\n\ntype MintCharterActivityArgs<T = {}> = T & {\n    owner: Address;\n};\n\nexport type BasicMinterParams = SeedTxnParams & {\n    capo: DefaultCapo<any, any,any>\n}\n\n/**\n * A basic minting validator serving a Capo's family of contract scripts\n * @remarks\n * \n * Mints charter tokens based on seed UTxOs.  Can also mint UUTs and \n * other tokens as approved by the Capo's minting delegate.\n* @public\n **/\nexport class DefaultMinter\n    extends StellarContract<BasicMinterParams>\n    implements MinterBaseMethods\n{\n    contractSource() {\n        return contract;\n    }\n    getContractScriptParams(config: BasicMinterParams): configBase & SeedTxnParams {\n        const {seedIndex, seedTxn} = config\n\n        return { seedIndex, seedTxn }\n    }\n\n    importModules(): HeliosModuleSrc[] {\n        return [\n            //prettier-ignore\n            StellarHeliosHelpers,\n            CapoDelegateHelpers,\n            CapoMintHelpers,\n            this.configIn!.capo.specializedCapo,\n            this.configIn!.capo.capoHelpers,\n        ];\n    }\n\n\n    //!!! todo: fold args 2 & 4, allowing either array or map but not both.\n    @partialTxn\n    async txnWillMintUuts<\n        const purposes extends string,\n        existingTcx extends StellarTxnContext,\n        const RM extends Record<ROLES,purposes>,\n        const ROLES extends string & keyof RM = string & keyof RM\n    >(\n        tcx: existingTcx,\n        uutPurposes: purposes[],\n        seedUtxo: TxInput,\n        //@ts-expect-error\n        roles: RM = {} as Record<string, purposes>,\n    ): Promise<\n        hasUutContext<ROLES | purposes> & existingTcx \n    > {\n        const { txId, utxoIdx } = seedUtxo.outputId;\n\n        const { blake2b } = Crypto;\n\n        const uutMap: uutPurposeMap<ROLES | purposes> = Object.fromEntries(\n            uutPurposes.map((uutPurpose) => {\n                const txoId = txId.bytes.concat([\"@\".charCodeAt(0), utxoIdx]);\n                // console.warn(\"&&&&&&&& txoId\", bytesToHex(txoId));\n                const uutName = new UutName(\n                    uutPurpose,\n                    `${uutPurpose}-${bytesToHex(blake2b(txoId).slice(0, 6))}`\n                );\n                return [uutPurpose, uutName];\n            })\n        ) as uutPurposeMap<ROLES | purposes>;\n        for (const [role, uutPurpose] of Object.entries(roles)) {\n            uutMap[role] = uutMap[uutPurpose as string];\n        }\n        \n        if (!tcx.state) tcx.state = {uuts: {}};\n        tcx.state.uuts = {\n            ...(tcx.state.uuts),\n            ...(uutMap)\n        };\n\n        return tcx as hasUutContext<ROLES | purposes> & existingTcx \n    }\n\n    @txn\n    async mkTxnMintingUuts<\n        const purposes extends string,\n        existingTcx extends StellarTxnContext,\n        const RM extends Record<ROLES, purposes>,\n        const ROLES extends keyof RM & string = string & keyof RM,\n    >(\n        initialTcx: existingTcx,\n        uutPurposes: purposes[],\n        seedUtxo?: TxInput,\n        //@ts-expect-error\n        roles: RM = {} as Record<string, purposes>,\n    ): Promise<hasUutContext<ROLES | purposes> & existingTcx> {\n        const gettingSeed = seedUtxo\n            ? Promise.resolve<TxInput>(seedUtxo)\n            : new Promise<TxInput>((res) => {\n                  //!!! make it big enough to serve minUtxo for the new UUT(s)\n                  const uutSeed = this.mkValuePredicate(\n                      BigInt(42_000),\n                      initialTcx\n                  );\n\n                  this.mustFindActorUtxo(\n                      `seed-for-uut ${uutPurposes.join(\"+\")}`,\n                      uutSeed,\n                      initialTcx\n                  ).then(res);\n              });\n\n        return gettingSeed.then(async (seedUtxo) => {\n            const tcx = await this.txnWillMintUuts(\n                initialTcx,\n                uutPurposes,\n                seedUtxo,\n                roles,\n            );\n            const vEntries = mkUutValuesEntries(tcx.state.uuts);\n\n            tcx.addInput(seedUtxo);\n            const { txId: seedTxn, utxoIdx: seedIndex } = seedUtxo.outputId;\n            tcx.attachScript(this.compiledScript).mintTokens(\n                this.mintingPolicyHash!,\n                vEntries,\n                this.mintingUuts({\n                    seedTxn,\n                    seedIndex,\n                    purposes: uutPurposes,\n                }).redeemer\n            );\n\n            return tcx;\n        });\n    }\n\n    //! overrides base getter type with undefined not being allowed\n    get mintingPolicyHash(): MintingPolicyHash {\n        return super.mintingPolicyHash!;\n    }\n\n    @Activity.redeemer\n    protected mintingCharter({ owner }: MintCharterActivityArgs): isActivity {\n        const {mintingCharter} =this.onChainActivitiesType;\n        const { DelegateDetails: hlDelegateDetails } = this.onChainTypes;\n        const t = new mintingCharter(owner);\n\n        return { redeemer: t._toUplcData() };\n    }\n\n\n    @Activity.redeemer\n    protected mintingUuts({\n        seedTxn,\n        seedIndex: sIdx,\n        purposes,\n    }: MintUutActivityArgs): isActivity {\n        // debugger\n        const seedIndex = BigInt(sIdx);\n        console.log(\"UUT redeemer seedTxn\", seedTxn.hex);\n        const {mintingUuts} = this.onChainActivitiesType;\n        const t = new mintingUuts(\n            seedTxn,\n            seedIndex,\n            purposes\n        );\n\n        return { redeemer: t._toUplcData() };\n    }\n\n    get charterTokenAsValuesEntry(): valuesEntry {\n        return mkValuesEntry(\"charter\", BigInt(1));\n    }\n\n    tvCharter() {\n        const { mintingPolicyHash } = this;\n\n        const v = new Value(\n            undefined,\n            new Assets([[mintingPolicyHash, [this.charterTokenAsValuesEntry]]])\n        );\n        return v;\n    }\n\n    get charterTokenAsValue() {\n        console.warn(\n            \"deprecated use of `get minter.charterTokenAsValue`; use tvCharter() instead\"\n        );\n        return this.tvCharter();\n    }\n\n    @Activity.partialTxn\n    async txnMintingCharter<TCX extends StellarTxnContext>(\n        tcx: TCX,\n        {\n            owner,\n            capoGov,\n            mintDgt,\n        }: {\n            owner: Address;\n            capoGov: UutName;\n            mintDgt: UutName;\n        }\n    ): Promise<TCX> {\n        //!!! todo: can we expect capoGov & mintDgt in tcx.state.uuts? and update the type constraint here?\n\n        const charterVE = this.charterTokenAsValuesEntry;\n        const capoGovVE = mkValuesEntry(capoGov.name, BigInt(1));\n        const mintDgtVE = mkValuesEntry(mintDgt.name, BigInt(1));\n\n        return tcx\n            .mintTokens(\n                this.mintingPolicyHash!,\n                [\n                    charterVE, \n                    capoGovVE,\n                    mintDgtVE\n                ],\n                this.mintingCharter({\n                    owner,\n                }).redeemer\n            )\n            .attachScript(this.compiledScript) as TCX;\n    }\n}\n","/**\n * Documents one specific requirement\n * @remarks\n *\n * Describes the purpose, details, and implementation mechanism for a single requirement for a unit of software.\n *\n * Also references any other requirements in the host ReqtsMap structure, whose behavior this requirement\n * depends on.  The details of those other dependencies, are delegated entirely to the other requirement, facilitating\n * narrowly-focused capture of for key expectations within each individual semantic expectation of a software unit's\n * behavior.\n *\n * @typeParam reqts - constrains `requires` entries to the list of requirements in the host ReqtsMap structure\n * @public\n **/\nexport type RequirementEntry<reqts extends string> = {\n    purpose: string;\n    details: string[];\n    mech: string[];\n    impl?: string; // todo: constrained to method names of the object meeting the requirements\n    requires?: reqts[];\n};\n\nconst TODO = Symbol(\"needs to be implemented\");\n/**\n * tags requirement that aren't yet implemented\n * @public\n **/\nexport type TODO_TYPE = typeof TODO;\n\n/**\n * Describes the requirements for a unit of software\n * @remarks\n *\n * A requirements map is a list of described requirements, in which each requirement\n * has a synopsis, a description of its purpose, descriptive detail, and technical requirements\n * for the mechanism used for implementation.  The mech strings should be usable as unit-test titles.\n *\n * use the hasReqts() helper method to declare a type-safe set of requirements following this data structure.\n *\n * Each requirement also has space for nested 'requires', without the need for deeply nested data structures;\n * these reference other requirements in the same hasReqts() data structure. As a result, high-level and detail-\n * level requirements and 'impl' details can have progressive levels of detail.\n *\n * @typeParam reqts - the list of known requirement names.  Implicitly detected by the hasReqts() helper.\n * @public\n **/\nexport type ReqtsMap<validReqts extends string> = {\n    [reqtDescription in validReqts]: TODO_TYPE | RequirementEntry<validReqts>;\n};\n\n\n/**\n * Factory for type-safe requirements details for a unit of software\n * @remarks\n * \n * return `hasReqts({... requirements})` from a requirements() or other method in a class, to express\n * requirements using a standardized form that supports arbitrary amounts of detailed requirements\n * with references to unit-test labels that can verify the impl details.\n *\n * You don't need to provide the type params or TS type annotations.  `requirements() { return hasReqts({...yourReqts}) }` will work fine.\n *\n * See the {@link ReqtsMap} and {@link RequirementEntry} types for more details about expressing requirements.\n *\n * NOTE: Type parameters are inferred from the provided data structure\n * @param reqtsMap - the ReqtsMap structure for the software unit\n * @public\n **/\nexport function hasReqts<\n    R extends ReqtsMap<validReqts>,\n    const validReqts extends string = string & keyof R\n>(reqtsMap: R): ReqtsMap<validReqts> {\n    return reqtsMap;\n}\n/** @public **/\nhasReqts.TODO = TODO;\n","import {\n    Datum,\n    TxInput,\n    ValidatorHash,\n    Value,\n    bytesToText,\n} from \"@hyperionbt/helios\";\nimport { Activity, StellarContract, datum } from \"../StellarContract.js\";\nimport type { configBase } from \"../StellarContract.js\";\nimport { StellarTxnContext } from \"../StellarTxnContext.js\";\nimport { mkTv } from \"../utils.js\";\nimport type { InlineDatum } from \"../HeliosPromotedTypes.js\";\nimport type {\n    DelegationDetail,\n    capoDelegateConfig,\n} from \"./RolesAndDelegates.js\";\nimport { hasReqts } from \"../Requirements.js\";\nimport { dumpAny } from \"../diagnostics.js\";\n\n/**\n * Base class for modules that can serve as Capo delegates\n * @public\n * @remarks\n *\n * establishes a base protocol for delegates.\n * @typeParam CT - type of any specialized configuration; use capoDelegateConfig by default.\n **/\n\nexport abstract class StellarDelegate<\n    CT extends configBase & capoDelegateConfig = capoDelegateConfig,\n    DCCT extends Record<string, any> | string = string\n> extends StellarContract<CT> {\n    static currentRev = 1n;\n    static get defaultParams() {\n        return { rev: this.currentRev };\n    }\n\n    /**\n     * Finds and adds the delegate's authority token to the transaction\n     * @remarks\n     *\n     * calls the delegate-specific DelegateAddsAuthorityToken() method,\n     * with the uut found by DelegateMustFindAuthorityToken().\n     *\n     * returns the token back to the contract using {@link txnReceiveAuthorityToken | txnReceiveAuthorityToken() }\n     * @param tcx - transaction context\n     * @public\n     **/\n    async txnGrantAuthority<TCX extends StellarTxnContext>(tcx: TCX) {\n        const label = `${this.constructor.name} authority`;\n        const uutxo = await this.DelegateMustFindAuthorityToken(tcx, label);\n        const useMinTv = true;\n        const authorityVal = this.tvAuthorityToken(useMinTv);\n        console.log(\n            `   ------- delegate ${label} grants authority with ${dumpAny(\n                authorityVal\n            )}`\n        );\n\n        try {\n            const tcx2 = await this.DelegateAddsAuthorityToken(tcx, uutxo);\n            return this.txnReceiveAuthorityToken(tcx2, authorityVal, uutxo);\n        } catch (error: any) {\n            if (error.message.match(/input already added/)) {\n                throw new Error(\n                    `Delegate ${label}: already added: ${dumpAny(authorityVal)}`\n                );\n            }\n            throw error;\n        }\n    }\n\n    /**\n     * Finds the authority token and adds it to the transaction, tagged for retirement\n     * @public\n     * @remarks\n     * Doesn't return the token back to the contract.\n     **/\n    async txnRetireAuthorityToken<TCX extends StellarTxnContext> (\n        tcx: TCX\n    ) {\n        const uutxo = await this.DelegateMustFindAuthorityToken(\n            tcx,\n            `${this.constructor.name} authority`\n        );\n        return this.DelegateRetiresAuthorityToken(tcx, uutxo);\n    }\n\n    /**\n     * Standard delegate method for receiving the authority token as a txn output\n     * @remarks\n     *\n     * creates a UTxO / TxOutput, depositing the indicated token-name into the delegated destination.\n     *\n     * Each implemented subclass can use it's own style to match its strategy & mechanism,\n     * and is EXPECTED to use tcx.addOutput() to receive the indicated `tokenValue` into the\n     * contract or other destination address.\n     *\n     * This method is used both for the original deposit and for returning the token during a grant-of-authority.\n     *\n     * Impls should normally preserve the datum from an already-present sourceUtxo, possibly with evolved details.\n     *\n     * @param tcx - transaction-context\n     * @param tokenValue - the Value of the token that needs to be received.  Always includes\n     *   the minUtxo needed for this authority token\n     * @param fromFoundUtxo - always present when the authority token already existed; can be\n     *   used to duplicate or iterate on an existing datum, or to include any additional Value in the new\n     *   UTxO, to match the previous UTxO with minimal extra heuristics\n     * @public\n     **/\n\n    abstract txnReceiveAuthorityToken<TCX extends StellarTxnContext>(\n        tcx: TCX,\n        tokenValue: Value,\n        // delegateAddr: Address,\n        fromFoundUtxo?: TxInput\n    ): Promise<TCX>;\n\n    /**\n     * redeemer for exercising the authority of this delegate via its authority UUT\n     * @public\n     * @remarks\n     *\n     * The Authorizing redeemer indicates that the delegate is authorizing (certain parts of)\n     * a transaction.\n     *\n     **/\n    @Activity.redeemer\n    activityAuthorizing() {\n        const thisActivity = this.mustGetActivity(\"Authorizing\");\n        const t = new thisActivity();\n\n        return { redeemer: t._toUplcData() };\n    }\n\n    /**\n     * redeemer for spending the authority UUT for burning it.\n     * @public\n     * @remarks\n     *\n     * The Retiring redeemer indicates that the delegate is being\n     * removed.\n     *\n     **/\n    @Activity.redeemer\n    activityRetiring() {\n        const thisActivity = this.mustGetActivity(\"Retiring\");\n        const t = new thisActivity();\n\n        return { redeemer: t._toUplcData() };\n    }\n\n    /**\n     * creates the essential datum for a delegate UTxO\n     * @remarks\n     *\n     * Every delegate is expected to have a two-field 'IsDelegation' variant\n     * in the first position of its on-chain Datum type.  This helper method\n     * constructs a suitable UplcData structure, given appropriate inputs.\n     * @param dd - Delegation details\n     * @public\n     **/\n    @datum\n    mkDatumIsDelegation(\n        dd: DelegationDetail,\n        ...args: DCCT extends string ? [string] | [] : [DCCT]\n    ): InlineDatum {\n        const [customConfig = \"\"] = args;\n        const { IsDelegation } = this.onChainDatumType;\n        const { DelegationDetail } = this.onChainTypes;\n        const t = new IsDelegation(new DelegationDetail(dd), customConfig);\n        return Datum.inline(t._toUplcData());\n    }\n    /**\n     * returns the ValidatorHash of the delegate script, if relevant\n     * @public\n     * @remarks\n     *\n     * A delegate that doesn't use an on-chain validator should override this method and return undefined.\n     **/\n    get delegateValidatorHash(): ValidatorHash | undefined {\n        if (!this.compiledScript.validatorHash) {\n            throw new Error(\n                `${this.constructor.name}: address doesn't use a validator hash!\\n` +\n                    `  ... if that's by design, you may wish to override 'get delegateValidatorHash()' -> undefined`\n            );\n        }\n        return this.compiledScript.validatorHash;\n    }\n\n    mkAuthorityTokenPredicate() {\n        return this.mkTokenPredicate(this.tvAuthorityToken());\n    }\n    tvAuthorityToken(useMinTv: boolean = false) {\n        if (!this.configIn)\n            throw new Error(`must be instantiated with a configIn`);\n\n        const {\n            mph,\n            tn,\n            // reqdAddress,  // removed\n        } = this.configIn;\n        if (useMinTv) return this.mkMinTv(mph, tn);\n        return mkTv(mph, tn);\n    }\n\n    /**\n     * Finds the delegate authority token, normally in the delegate's contract address\n     * @public\n     * @remarks\n     *\n     * The default implementation finds the UTxO having the authority token\n     * in the delegate's contract address.\n     *\n     * It's possible to have a delegate that doesn't have an on-chain contract script.\n     * ... in this case, the delegate should use this.{@link StellarDelegate.tvAuthorityToken | tvAuthorityToken()} and a\n     * delegate-specific heuristic to locate the needed token.  It might consult the\n     * addrHint in its `configIn` or another technique for resolution.\n     *\n     * @param tcx - the transaction context\n     * @reqt It MUST resolve and return the UTxO (a TxInput type ready for spending)\n     *  ... or throw an informative error\n     **/\n    async findAuthorityToken(): Promise<TxInput | undefined> {\n        const { address } = this;\n        return this.hasUtxo(\n            `authority token: ${bytesToText(this.configIn!.tn)}`,\n            this.mkTokenPredicate(this.tvAuthorityToken()),\n            { address }\n        );\n    }\n\n    /**\n     * Tries to locate the Delegates authority token in the user's wallet (ONLY for non-smart-contract delegates)\n     * @remarks\n     *\n     * Locates the authority token,if available the current user's wallet.  \n     * \n     * If the token is located in a smart contract, this method will always return `undefined`.\n     * \n     * If the authority token is in a user wallet (not the same wallet as currently connected to the Capo contract class),\n     * it will return `undefined`.\n     * \n     * @public\n     **/\n    async findActorAuthorityToken() : Promise<TxInput | undefined> {\n        return undefined\n    }\n\n    /**\n     * Finds the delegate authority token, normally in the delegate's contract address\n     * @public\n     * @remarks\n     *\n     * The default implementation finds the UTxO having the authority token\n     * in the delegate's contract address.\n     *\n     * It's possible to have a delegate that doesn't have an on-chain contract script.\n     * ... in this case, the delegate should use this.{@link StellarDelegate.tvAuthorityToken | tvAuthorityToken()} and a\n     * delegate-specific heuristic to locate the needed token.  It might consult the\n     * addrHint in its `configIn` or another technique for resolution.\n     *\n     * @param tcx - the transaction context\n     * @reqt It MUST resolve and return the UTxO (a TxInput type ready for spending)\n     *  ... or throw an informative error\n     **/\n    async DelegateMustFindAuthorityToken(\n        tcx: StellarTxnContext,\n        label: string\n    ): Promise<TxInput> {\n        return this.mustFindMyUtxo(\n            `${label}: ${bytesToText(this.configIn!.tn)}`,\n            this.mkTokenPredicate(this.tvAuthorityToken()),\n            \"this delegate strategy might need to override txnMustFindAuthorityToken()\"\n        );\n    }\n\n    /**\n     * Adds the delegate's authority token to a transaction\n     * @public\n     * @remarks\n     * Given a delegate already configured by a Capo, this method implements\n     * transaction-building logic needed to include the UUT into the `tcx`.\n     * the `utxo` is discovered by {@link StellarDelegate.DelegateMustFindAuthorityToken | DelegateMustFindAuthorityToken() }\n     * \n     * The default implementation adds the `uutxo` to the transaction \n     * using {@link StellarDelegate.activityAuthorizing | activityAuthorizing() }.\n     * \n     * The off-chain code shouldn't need to check the details; it can simply\n     * arrange the details properly and spend the delegate's authority token, \n     * using this method.\n     * \n     * ### Reliance on this delegate\n     * \n    * Other contract scripts can rely on the delegate script to have validated its \n     * on-chain policy and enforced its own \"return to the delegate script\" logic.\n     * \n     * ### Enforcing on-chain policy\n     * \n     * When spending the authority token in this way, the delegate's authority is typically \n     * narrowly scoped, and it's expected that the delegate's on-chain script validates that \n     * those parts of the transaction detail should be authorized, in accordance with the \n     * delegate's core purpose/responsbility - i.e. that the txn does all of what the delegate \n     * expects, and none of what it shouldn't do in that department.\n     * \n     * The on-chain code SHOULD typically enforce:\n     *  * that the token is spent with Authorizing activity (redeemer).  NOTE:\n     *     the **CapoDelegateHelpers** helios module provides the `requiresDelegateAuthorizing()` \n     *     function for just this purpose\n    \n     *  * that the authority token is returned to the contract with its datum unchanged \n     *  * that any other tokens it may also hold in the same UTxO do not become \n     *     inaccessible as a result of the transactions - perhaps by requiring them to be \n     *     returned together with the authority token.\n     * \n     * It MAY enforce additional requirements as well.\n     *\n     * @example\n     * A minting delegate should check that all the expected tokens are \n     * minted, AND that no other tokens are minted.  \n     * \n     * @example\n     * A role-based authentication/signature-checking delegate can \n     * require an appropriate signature on the txn.\n     * \n    * @param tcx - the transaction context\n    * @param utxo - the utxo having the authority UUT for this delegate\n    * @reqt Adds the uutxo to the transaction inputs with appropriate redeemer.\n    * @reqt Does not output the value; can EXPECT txnReceiveAuthorityToken to be called for that purpose.\n     **/\n    protected async DelegateAddsAuthorityToken<\n        TCX extends StellarTxnContext\n    >(tcx: TCX, uutxo: TxInput) : Promise<TCX> {\n        return tcx\n            .addInput(\n                uutxo,\n                this\n                    .activityAuthorizing\n                    //!!!!! todo: include tagged info on which specific activity is being authorized\n                    ()\n            )\n            .attachScript(this.compiledScript);\n\n        // return this.txnKeepValue(\n        //     tcx,\n        //     uutxo.value,\n        //     uutxo.origOutput.datum as InlineDatum\n        // );\n    }\n\n    /**\n     * Adds any important transaction elemements supporting the authority token being retired, closing the delegate contracts' utxo.\n     * @remarks\n     *\n     * EXPECTS to receive a Utxo having the result of txnMustFindAuthorityToken()\n     *\n     * EXPECTS the `burn` instruction to be separately added to the transaction.\n     *\n     * The default implementation uses the conventional `Retiring` activity\n     * to spend the token.\n     *\n     * @reqt\n     * It MUST add the indicated utxo to the transaction as an input\n     *\n     * @reqt\n     * When backed by a contract:\n     *   * it should use an activity/redeemer allowing the token to be spent\n     *      **and NOT returned**.\n     *   * the contract script SHOULD ensure any other UTXOs it may also hold, related to this delegation,\n     *      do not become inaccessible as a result.\n     *\n     * It MAY enforce additional requirements and/or block the action.\n     *\n     *\n     * @param tcx - transaction context\n     * @param fromFoundUtxo - the utxo having the authority otken\n     * @public\n     **/\n    protected async DelegateRetiresAuthorityToken(\n        tcx: StellarTxnContext,\n        fromFoundUtxo: TxInput\n    ): Promise<StellarTxnContext> {\n        const utxo = fromFoundUtxo;\n        return tcx.addInput(\n            new TxInput(utxo.outputId, utxo.origOutput),\n            this.activityRetiring()\n        );\n    }\n\n    /**\n     * Captures requirements as data\n     * @remarks\n     *\n     * see reqts structure\n     * @public\n     **/\n    delegateRequirements() {\n        return hasReqts({\n            \"provides an interface for providing arms-length proof of authority to any other contract\":\n                {\n                    purpose:\n                        \"to decouple authority administration from its effects\",\n                    details: [\n                        \"Any contract can create a UUT for use with an authority policy.\",\n                        \"By depositing that UUT to the authority contract, it can delegate completely\",\n                        \"  ... all the implementation details for administration of the authority itself.\",\n                        \"It can then focus on implementing the effects of authority, requiring only \",\n                        \"  ... that the correct UUT has been spent, to indicate that the authority is granted.\",\n                        \"The authority contract can have its own internal details \",\n                        \"A subclass of this authority policy may provide additional administrative dynamics.\",\n                    ],\n                    mech: [],\n                    requires: [\n                        \"implementations SHOULD positively govern spend of the UUT\",\n                        \"implementations MUST provide an essential interface for transaction-building\",\n                    ],\n                },\n\n            \"implementations SHOULD positively govern spend of the UUT\": {\n                purpose: \"for sufficient assurance of desirable safeguards\",\n                details: [\n                    \"A subclass of the GenericAuthority should take care of guarding the UUT's spend\",\n                    \"  ... in whatever way is appropriate for its use-case\",\n                ],\n                mech: [],\n                requires: [],\n            },\n\n            \"implementations MUST provide an essential interface for transaction-building\":\n                {\n                    purpose:\n                        \"enabling a strategy-agnostic interface for making transactions using any supported strategy-variant\",\n                    details: [\n                        \"Subclasses MUST implement the interface methods\",\n                        \"  ... in whatever way is considered appropriate for its use-case.\",\n                        \"An interface method whose requirement is marked with 'MAY/SHOULD' behavior, \",\n                        \"  ... MUST still implement the method satisfying the interface, \",\n                        \"  ... but MAY throw an UnsupportedAction error, to indicate that\",\n                        \"  ... the strategy variant has no meaningful action to perform \",\n                        \"  ... that would serve the method's purpose\",\n                    ],\n                    mech: [],\n                    requires: [\n                        \"requires a txnReceiveAuthorityToken(tcx, delegateAddr, fromFoundUtxo?)\",\n                        \"requires a mustFindAuthorityToken(tcx)\",\n                        \"requires a txnGrantAuthority(tcx, delegateAddr, fromFoundUtxo)\",\n                        \"requires txnRetireCred(tcx, fromFoundUtxo)\",\n                    ],\n                },\n\n            \"requires a txnReceiveAuthorityToken(tcx, delegateAddr, fromFoundUtxo?)\":\n                {\n                    purpose:\n                        \"to deposit the authority token (back) to the delegated destination\",\n                    details: [\n                        \"impls MUST implement txnReceiveAuthorityToken\",\n                        \"Each implemented subclass can use it's own style to match its strategy & mechanism\",\n                        \"This is used both for the original deposit and for returning the token during a grant-of-authority\",\n                    ],\n                    mech: [\n                        \"impls MUST create a UTxO depositing the indicated token-name into the delegated destination.\",\n                        \"impls should normally preserve the datum from an already-present sourceUtxo\",\n                    ],\n                    requires: [],\n                },\n\n            \"requires a mustFindAuthorityToken(tcx)\": {\n                purpose: \"to locate the given authority token\",\n                details: [\n                    \"allows different strategies for finding the UTxO having the authority token\",\n                    \"impls MAY use details seen in the txn context to find the indicated token\",\n                ],\n                mech: [\n                    \"impls MUST resolve the indicated token to a specific UTxO or throw an informative error\",\n                ],\n            },\n\n            \"requires a txnGrantAuthority(tcx, delegateAddr, fromFoundUtxo)\": {\n                purpose: \"to use the delegated authority\",\n                details: [\n                    \"Adds the indicated utxo to the transaction with appropriate activity/redeemer\",\n                    \"Contracts needing the authority within a transaction can rely on the presence of this spent authority\",\n                    \"Impls can EXPECT the token will be returned via txnReceiveAuthorityToken\",\n                    \"a contract-backed impl SHOULD enforce the expected return in its on-chain code\",\n                ],\n                mech: [\n                    \"the base AuthorityPolicy MUST call txnReceiveAuthorityToken() with the token's sourceUtxo\",\n                ],\n            },\n\n            \"requires txnRetireCred(tcx, fromFoundUtxo)\": {\n                purpose: \"to allow burning the authority token\",\n                details: [\n                    \"Adds the indicated utxo to the transaction with appropriate activity/redeemer\",\n                    \"  ... allowing the token to be burned by the minting policy.\",\n                    \"Impls SHOULD ensure any other UTXOs it may hold do not become inaccessible as a result\",\n                ],\n                mech: [\n                    \"impls MUST add the token to the txn if it can be retired\",\n                    \"if the token cannot be retired, by appropriate policy, it SHOULD throw an informative error\",\n                ],\n            },\n        });\n    }\n}\n","import { Address, MintingPolicyHash, ValidatorHash, bytesToHex, bytesToText } from \"@hyperionbt/helios\";\nimport type {\n    ConfigFor,\n    configBase,\n    stellarSubclass,\n} from \"../StellarContract.js\";\nimport {\n    StellarContract,\n} from \"../StellarContract.js\";\n\nimport { StellarDelegate } from \"./StellarDelegate.js\";\n\n/**\n * An error type for reflecting configuration problems at time of delegate setup\n * @remarks\n * \n * acts like a regular error, plus has an `errors` object mapping field names\n * to problems found in those fields.   \n *\n * When a strategy-selection failure happens, the `availableStrategies` property \n * also has a list of known strategies for a selected delegation role.\n *  \n * @param ‹pName› - descr\n * @public\n **/\nexport class DelegateConfigNeeded extends Error {\n    errors?: ErrorMap;\n    availableStrategies?: string[];\n    constructor(\n        message: string,\n        options: {\n            errors?: ErrorMap;\n            availableStrategies?: string[];\n            errorRole? : string;\n        }\n    ) {\n        super(message);\n        const { errors, availableStrategies } = options;\n        if (errors) this.errors = errors;\n        if (availableStrategies) this.availableStrategies = availableStrategies;\n    }\n}\n\n/**\n * Reveals errors found during delegate selection\n * @remarks\n * \n * Each field name is mapped to an array of string error messages found on that field.\n * @public\n **/\nexport type ErrorMap = Record<string, string[]>;\n\n/**\n * return type for strategy's validateScriptParams()\n * @internal\n **/\nexport type strategyValidation = ErrorMap | undefined;\n\n/**\n * Captures normal details of every delegate relationship\n * @remarks\n * \n * Includes the address of the leader contract, its minting policy, and the token-name\n * used for the delegate\n * @public\n **/\nexport type DelegationDetail = {\n    capoAddr: Address;\n    mph: MintingPolicyHash;\n    tn: number[];\n};\n\n/**\n * Allows any targeted delegate class to access & use certain details originating in the leader contract\n * @remarks\n *\n * This setting is implicitly defined on all Delegate configurations.\n *\n * These allow any Capo delegate class to reference details from its essential\n * delegation context\n *\n * @public\n **/\nexport type capoDelegateConfig = configBase & {\n    capoAddr: Address;\n    mph: MintingPolicyHash;\n    tn: number[];\n    rev: bigint;\n    addrHint: Address[];\n};\n\n/**\n * Richly-typed structure that can capture the various delegation roles available\n * in a Capo contract\n * @remarks\n * \n * Defined in a delegateRoles() method using the standalone delegateRoles() \n * and defineRole() helper functions.\n * @typeParam KR - deep, strong type of the role map - always inferred by \n * delegateRoles() helper.\n * @public\n **/\nexport type RoleMap<KR extends Record<string, RoleInfo<any, any, any, any>>> = {\n    [roleName in keyof KR]: KR[roleName];\n};\n\n/**\n * Standalone helper method defining a specific RoleMap; used in a Capo's delegateRoles() instance method\n * @remarks\n * \n * Called with a set of literal role defintitions, the full type  of the RoleMap is inferred.\n * \n * Use {@link defineRole}() to create each role entry\n * \n * @param roleMap - maps role-names to role-definitions\n * @typeParam RM - inferred type of the `roleMap` param\n * @public\n **/\nexport function delegateRoles<const RM extends RoleMap<any>>(\n    roleMap: RM\n): RoleMap<RM> {\n    return roleMap;\n}\n\n/**\n * toJSON adapter for delegate links\n * @internal\n **/\nexport function delegateLinkSerializer(key: string, value: any) {\n    if (typeof value === \"bigint\") {\n        return value.toString();\n    } else if (\"bytes\" == key && Array.isArray(value)) {\n        return bytesToHex(value)\n    } else if (value instanceof Address) {\n        return value.toBech32()\n    } else if (\"tn\" == key && Array.isArray(value)) {\n        return bytesToText(value)\n    }\n    return value; // return everything else unchanged\n}\n\n/**\n * Describes one delegation role used in a Capo contract\n * @remarks\n * \n * Includes the base class for all the variants of the role, a \n * uutPurpose (base name for their authority tokens), and\n * named variants for that role\n * \n * All type-parameters are normally inferred from {@link defineRole}()\n * \n * @public\n **/\nexport type RoleInfo<\n    SC extends StellarContract<any>,\n    VM extends Record<variants, VariantStrategy<SC>>,\n    UUTP extends string,\n    variants extends string = string & keyof VM\n> = {\n    uutPurpose: UUTP;\n    baseClass: stellarSubclass<SC>;\n    variants: { [variant in variants]: VM[variant] };\n};\n\n/**\n * Creates a strongly-typed definition of a delegation role used in a Capo contract\n * \n * @remarks\n * The definition ncludes the different strategy variants that can serve in that role.\n * \n * NOTE: all type parameters are inferred from the function params.\n * \n* @param uutBaseName - token-name prefix for the tokens connecting delegates for the role\n * @param baseClass - each variant is expected to inherit from this base class\n * @param variants - maps each strategy-variant name to a detailed {@link VariantStrategy}  definition\n * @public\n **/\nexport function defineRole<\n    const UUTP extends string,\n    SC extends StellarContract<any>,\n    const VMv extends RoleInfo<SC, any, UUTP>[\"variants\"]\n>(\n    uutBaseName: UUTP,\n    baseClass: stellarSubclass<SC> & any,\n    variants: VMv\n): RoleInfo<SC, VMv, UUTP> {\n    return {\n        uutPurpose: uutBaseName,\n        baseClass,\n        variants,\n    };\n}\n\n//!!! todo: develop this further to allow easily enhancing a parent role-definition\n// ... with an additional strategy variant\n\n// type vmapBuilder<\n//     SC extends StellarContract<any>,\n//     UUTP extends string,\n//     VMv extends RoleInfo<SC, any, UUTP>[\"variants\"]\n// > = (variants: VMv) => RoleInfo<SC, VMv, UUTP>;\n// export function defineRole<\n//     SC extends StellarContract<any>,\n//     const PUUTP extends string,\n// >(\n//     inheritedRoleDefinition: RoleInfo<SC, any, PUUTP>\n// ) : vmapBuilder<SC, PUUTP, RoleInfo<SC, any, PUUTP>[\"variants\"]>\n// export function defineRole<\n//     const UUTP extends string,\n//     SC extends StellarContract<any>,\n// >(\n//     uutBaseName: UUTP,\n//     subclass: stellarSubclass<SC> & any,\n// ) : vmapBuilder<SC, UUTP, RoleInfo<SC, any, UUTP>[\"variants\"]>\n// export function defineRole<\n//     const UUTP extends string,\n//     SC extends StellarContract<any>,\n//     const Puutp extends string,\n// >(\n//     uBNorParentDef: Puutp | RoleInfo<SC, any, UUTP>,\n//     subclass?: stellarSubclass<SC> & any,\n// ) : vmapBuilder<SC, Puutp | UUTP, RoleInfo<SC, any, Puutp | UUTP>[\"variants\"]> {\n//     const uutBaseName = (\n//         \"string\" == typeof uBNorParentDef\n//      ) ? uBNorParentDef\n//         : uBNorParentDef.uutPurpose;\n\n//     return function vmapBuilder<\n//         const VMv extends RoleInfo<SC, any, UUTP>[\"variants\"]\n//     >(\n//         variants: VMv\n//     ): RoleInfo<SC, VMv, UUTP> {\n//         return {\n//             uutPurpose: uutBaseName,\n//             variants,\n//         };\n//     }\n\nexport type strategyParams = configBase;\nexport type delegateScriptParams = configBase;\n\nexport type PartialParamConfig<CT extends configBase> = Partial<CT>;\n\n/**\n * declaration for one strategy-variant of a delegate role\n * @remarks\n * \n * Indicates the details needed to construct a delegate script\n * \n * NOTE: the Type param is always inferred by defineRole()\n * @public\n **/\nexport type VariantStrategy<\n    DT extends StellarContract<capoDelegateConfig & any>\n> = {\n    delegateClass: stellarSubclass<DT>;\n    //! it MAY provide a partial configuration to be used for parameterizing\n    //  the underlying contract script, to be further customized by a delegate-selection\n    partialConfig?: PartialParamConfig<ConfigFor<DT>>;\n    //! it has a function used for validating parameter details\n    validateConfig?: (p: ConfigFor<DT>) => strategyValidation;\n};\n\n//! a map of delegate selections needed for a transaction\n//  ... to construct a concrete delegate that hasn't yet been manifested.\n//  ... This commonly is needed during initial setup of a contract,\n//  ... but may happen also at later moments in the contract's lifecycle.\nexport type SelectedDelegates = {\n    [roleName: string]: SelectedDelegate<StellarContract<any>>;\n};\n\n//! a single delegate selection, where a person chooses\n//  ... one of the strategy variants\n//  ... and the settings (script parameters) needed to create the on-chain contract\nexport type SelectedDelegate<SC extends StellarContract<any>> = {\n    strategyName: string;\n    config?: Partial<ConfigFor<SC>>;\n};\n\n// export type StellarDelegate =\n//     StellarDelegateClass<any & configBase & capoDelegateConfig> &\n//     StellarContract<any & configBase & capoDelegateConfig>;\n\n// export function selectDelegate<T extends StellarContract<any>>(\n//     sd: SelectedDelegate<T>\n// ) {\n//     return sd;\n// }\n\n/**\n * A complete, validated and resolved configuration for a specific delegate\n * @public\n * @remarks\n *\n * Use StellarContract's `txnCreateDelegateSettings()` method to resolve\n * from any (minimal or better) delegate details to a ResolvedDelegate object.\n * @typeParam DT - a StellarContract class conforming to the `roleName`,\n *     within the scope of a Capo class's `roles()`.\n **/\nexport type ConfiguredDelegate<DT extends StellarDelegate<any>> = {\n    delegateClass: stellarSubclass<DT>;\n    delegate: DT;\n    roleName: string;\n    config: ConfigFor<DT>;\n} & RelativeDelegateLink<DT>;\n\n/**\n * Minimal structure for connecting a specific Capo contract to a configured StellarDelegate\n * @remarks\n * \n * This structure can always resolve to a reproducible delegate class (a {@link StellarDelegate}),\n * given a specific Capo and roleName.  \n * \n * When the delegate isn't backed by a specific on-chain contract script, the delegateValidatorHash \n * is optional.\n * \n * @typeParam DT - the base class, to which all role-strategy variants conform\n * @public\n **/\nexport type RelativeDelegateLink<DT extends StellarDelegate<any>> = {\n    uutName: string;\n    strategyName: string;\n    config: Partial<ConfigFor<DT>>;\n    delegateValidatorHash?: ValidatorHash;\n    // reqdAddress?: Address; removed\n    // addrHint?: Address[]; moved to config\n};\n","import {\n    Address,\n    Assets,\n    Datum,\n    MintingPolicyHash,\n    TxId,\n    TxOutput,\n    TxInput,\n    Value,\n    AssetClass,\n    ValidatorHash,\n} from \"@hyperionbt/helios\";\nimport { DefaultMinter } from \"./minting/DefaultMinter.js\";\nimport type { BasicMinterParams } from \"./minting/DefaultMinter.js\";\nimport {\n    Activity,\n    StellarContract,\n    partialTxn,\n    txn,\n} from \"./StellarContract.js\";\nimport type {\n    StellarConstructorArgs,\n    isActivity,\n    configBase,\n    stellarSubclass,\n    ConfigFor,\n} from \"./StellarContract.js\";\nimport type { InlineDatum, valuesEntry } from \"./HeliosPromotedTypes.js\";\nimport { \n    StellarTxnContext, \n    type uutMap ,\n} from \"./StellarTxnContext.js\";\nimport {\n    DelegateConfigNeeded,\n    delegateLinkSerializer,\n} from \"./delegation/RolesAndDelegates.js\";\nimport { UutName } from \"./delegation/UutName.js\";\nimport type {\n    ConfiguredDelegate,\n    ErrorMap,\n    RoleMap,\n    VariantStrategy,\n    RelativeDelegateLink,\n    RoleInfo,\n} from \"./delegation/RolesAndDelegates.js\";\n\nimport { CapoDelegateHelpers } from \"./delegation/CapoDelegateHelpers.js\";\nimport type { SeedTxnParams } from \"./SeedTxn.js\";\nimport { CapoMintHelpers } from \"./CapoMintHelpers.js\";\n//@ts-expect-error\nimport StellarHeliosHelpers from \"./StellarHeliosHelpers.hl\";\nimport type { HeliosModuleSrc } from \"./HeliosModuleSrc.js\";\nimport { errorMapAsString } from \"./diagnostics.js\";\nimport { hasReqts } from \"./Requirements.js\";\nimport {\n    mkUutValuesEntries,\n    mkValuesEntry,\n    stringToNumberArray,\n} from \"./utils.js\";\nimport type {\n    DefaultCharterDatumArgs,\n    MinimalDelegateLink,\n} from \"./DefaultCapo.js\";\nimport type { DelegationDetail } from \"./delegation/RolesAndDelegates.js\";\nimport { StellarDelegate } from \"./delegation/StellarDelegate.js\";\nimport type { AuthorityPolicy } from \"../index.js\";\n\nexport type {\n    RoleMap,\n    strategyValidation,\n} from \"./delegation/RolesAndDelegates.js\";\n\n/**\n * strongly-typed map of purpose-names to Uut objects\n *\n * @public\n */\nexport type uutPurposeMap<unionPurpose extends string> = {\n    [purpose in unionPurpose]: UutName;\n};\n\n// export type hasSomeUuts<uutEntries extends string> = {\n//     uuts: Partial<uutPurposeMap<uutEntries>>;\n// };\n\n/**\n * used for transaction-context state having specific uut-purposes\n *\n * @public\n */\nexport type hasAllUuts<uutEntries extends string> = {\n    uuts: uutPurposeMap<uutEntries>;\n};\n\n/**\n * the uut-factory interface\n *\n * @public\n */\ninterface hasUutCreator {\n    txnWillMintUuts<\n        const purposes extends string,\n        existingTcx extends StellarTxnContext,\n        const RM extends Record<ROLES, purposes>,\n        const ROLES extends keyof RM & string = string & keyof RM\n    >(\n        initialTcx: existingTcx,\n        uutPurposes: purposes[],\n        seedUtxo: TxInput,\n        roles?: RM\n    ): Promise<hasUutContext<ROLES | purposes> & existingTcx>;\n    mkTxnMintingUuts<\n        const purposes extends string,\n        existingTcx extends StellarTxnContext,\n        const RM extends Record<ROLES, purposes>,\n        const ROLES extends keyof RM & string = string & keyof RM\n    >(\n        initialTcx: existingTcx,\n        uutPurposes: purposes[],\n        seedUtxo?: TxInput,\n        roles?: RM\n    ): Promise<hasUutContext<ROLES | purposes> & existingTcx>;\n}\n\n/**\n * UUT minting should always use these settings to guard for uniqueness\n *\n * @public\n */\nexport type MintUutActivityArgs = {\n    seedTxn: TxId;\n    seedIndex: bigint | number;\n    purposes: string[];\n};\n/**\n * A txn context having specifically-purposed UUTs in its state\n *\n * @public\n */\nexport type hasUutContext<uutEntries extends string> = StellarTxnContext<\n    hasAllUuts<uutEntries>\n>;\n\n/**\n * charter-minting interface\n *\n * @public\n */\nexport interface MinterBaseMethods extends hasUutCreator {\n    get mintingPolicyHash(): MintingPolicyHash;\n    txnMintingCharter<TCX extends StellarTxnContext>(\n        tcx: TCX,\n        charterMintArgs: {\n            owner: Address;\n            capoGov: UutName;\n        },\n        tVal: valuesEntry\n    ): Promise<TCX>;\n}\n\nexport type anyDatumArgs = Record<string, any>;\n\nexport type rootCapoConfig = {\n    rootCapoScriptHash?: ValidatorHash;\n};\n\n//!!! todo: let this be parameterized for more specificity\nexport type CapoBaseConfig = configBase &\n    rootCapoConfig &\n    SeedTxnParams & {\n        mph: MintingPolicyHash;\n        rev: bigint;\n        bootstrapping?: true;\n    };\n\n/**\n * StellarTransactionContext exposing a bootstrapped Capo configuration\n * @remarks\n *\n * During first-time setup of a Capo contract, its manifest configuration details\n * should be captured for reproducibility, and this type allows the bootstrap\n * transaction to expose that configuration.\n *\n * Capo's {@link Capo.mkTxnMintCharterToken | mkTxnMintCharterToken()} returns a transaction context\n * of this type, with `state.bootstrappedConfig`;\n * @public\n **/\nexport type hasBootstrappedConfig<CT extends CapoBaseConfig> =\n    StellarTxnContext<{\n        bsc: CT;\n        uuts: uutMap;\n        bootstrappedConfig: any;\n    }>;\n\ntype PreconfiguredDelegate<T extends StellarDelegate<any>> = Omit<\n    ConfiguredDelegate<T>,\n    \"delegate\" | \"delegateValidatorHash\"\n>;\n\n/**\n * Base class for the leader of a set of contracts\n * @remarks\n *\n * A Capo contract provides a central contract address that can act as a treasury or data registry;\n * it can mint tokens using its connected minting-policy, and it can delegate policies to other contract\n * scripts.  Subclasses of Capo can use these capabilities in custom ways for strong flexibility.\n *\n * Any Capo contract can (and must) define delegateRoles() to establish collaborating scripts; these are used for\n * separating granular responsbilities for different functional purposes within your (on-chain and off-chain)\n * application; this approach enables delegates to use any one of multiple strategies with different\n * functional logic to serve in any given role, thus providing flexibility and extensibility.\n *\n * The delegation pattern uses UUTs, which are non-fungible / unique utility tokens.  See DefaultCapo for more about them.\n *\n * **Capo is a foundational class**; you should consider using DefaultCapo as a starting point,\n * unless its govAuthority role conflicts with your goals.\n *\n * Inherits from: {@link StellarContract}\\<`configType`\\> (is this a redundant doc entry?) .\n *\n * @typeParam minterType - allows setting a different contract (script & off-chain class) for the minting policy\n * @typeParam charterDatumType - specifies schema for datum information held in the Capo's primary or \"charter\" UTXO\n * @typeParam configType - specifies schema for details required to pre-configure the contract suite, or to reproduce it in a specific application instance.\n * @public\n */\nexport abstract class Capo<\n        minterType extends MinterBaseMethods & DefaultMinter = DefaultMinter,\n        charterDatumType extends anyDatumArgs = anyDatumArgs,\n        configType extends CapoBaseConfig = CapoBaseConfig\n    >\n    extends StellarContract<configType>\n    implements hasUutCreator\n{\n    abstract get delegateRoles(): RoleMap<any>;\n    abstract verifyCoreDelegates(): Promise<any>;\n    verifyConfigs(): Promise<any> {\n        return this.verifyCoreDelegates();\n    }\n    abstract mkFullConfig(baseConfig: CapoBaseConfig): configType;\n    get isConfigured(): Promise<boolean> {\n        if (!this.configIn) return Promise.resolve(false);\n        if (this._verifyingConfigs) return this._verifyingConfigs;\n        return Promise.resolve(true);\n    }\n    _verifyingConfigs?: Promise<any>;\n    static parseConfig(rawJsonConfig: any) {\n        throw new Error(`Stellar contract subclasses should define their own static parseConfig where needed to enable connection from a specific dApp to a specific Stellar Contract.`)\n    }\n\n    constructor(args: StellarConstructorArgs<CapoBaseConfig>) {\n        //@ts-expect-error spurious \"could be instantiated with a different subtype\"\n        super(args);\n\n        const {\n            scriptDatumName: onChainDatumName,\n            scriptActivitiesName: onChainActivitiesName,\n        } = this;\n\n        const { CharterToken } = this.onChainDatumType;\n        const { updatingCharter, usingAuthority } = this.onChainActivitiesType;\n\n        if (!CharterToken)\n            throw new Error(\n                `datum type ${onChainDatumName} must have a 'CharterToken' variant`\n            );\n        if (!updatingCharter)\n            throw new Error(\n                `activities type ${onChainActivitiesName} must have a 'updatingCharter' variant`\n            );\n        if (!usingAuthority)\n            throw new Error(\n                `activities type${onChainActivitiesName} must have a 'usingAuthority' variant`\n            );\n\n        if (this.configIn && !this.configIn.bootstrapping) {\n            this._verifyingConfigs = this.verifyConfigs().then((r) => {\n                this._verifyingConfigs = undefined;\n                return r;\n            });\n        }\n    }\n    static bootstrapWith(args: StellarConstructorArgs<CapoBaseConfig>) {\n        const { setup, config } = args;\n        const Class = this;\n        //@ts-expect-error this is just Javascript.  Sorry, typescript!\n        return new Class({ setup, config: { ...config, bootstrapping: true } });\n    }\n    abstract contractSource(): HeliosModuleSrc;\n    abstract mkDatumCharterToken(args: charterDatumType): InlineDatum;\n    // abstract txnMustUseCharterUtxo(\n    //     tcx: StellarTxnContext,\n    //     newDatum?: InlineDatum\n    // ): Promise<TxInput | never>;\n\n    get minterClass(): stellarSubclass<DefaultMinter, BasicMinterParams> {\n        return DefaultMinter;\n    }\n\n    minter?: minterType;\n    @partialTxn\n    txnWillMintUuts<\n        const purposes extends string,\n        existingTcx extends StellarTxnContext,\n        const RM extends Record<ROLES, purposes>,\n        const ROLES extends keyof RM & string = string & keyof RM\n    >(\n        initialTcx: existingTcx,\n        uutPurposes: purposes[],\n        seedUtxo: TxInput,\n        //@ts-expect-error\n        roles: RM = {} as Record<string, purposes>\n    ): Promise<hasUutContext<ROLES | purposes> & existingTcx> {\n        const minter = this.connectMinter()\n        return minter.txnWillMintUuts(\n            initialTcx,\n            uutPurposes,\n            seedUtxo,\n            roles\n        );\n    }\n\n    @txn\n    async mkTxnMintingUuts<\n        const purposes extends string,\n        existingTcx extends StellarTxnContext,\n        const RM extends Record<ROLES, purposes>,\n        const ROLES extends keyof RM & string = string & keyof RM\n    >(\n        initialTcx: existingTcx,\n        uutPurposes: purposes[],\n        seedUtxo?: TxInput,\n        //@ts-expect-error\n        roles: RM = {} as Record<string, purposes>\n    ): Promise<hasUutContext<ROLES | purposes> & existingTcx> {\n        const minter = this.connectMinter()\n        const tcx = await minter.mkTxnMintingUuts(\n            initialTcx,\n            uutPurposes,\n            seedUtxo,\n            roles\n        );\n        return tcx;\n    }\n    // P extends paramsBase = SC extends StellarContract<infer P> ? P : never\n\n    /**\n     * returns a value representing the provided UUT(s)\n     * @remarks\n     *\n     * The inputs can be of a few forms - see the overload variants\n     * @param uutMap - a set of UUTs, all of which will be represented in the returned value\n     * @param tcx - a transaction context, whose `state.uuts` will be processed as in the `uutMap` variant\n     * @param uutName - a UutName object representinga single UUT\n     * @public\n     **/\n    uutsValue(uutMap: uutPurposeMap<any>): Value;\n    uutsValue(tcx: hasUutContext<any>): Value;\n    uutsValue(uutName: UutName): Value;\n    uutsValue(x: UutName | uutPurposeMap<any> | hasUutContext<any>): Value {\n        const uutMap =\n            x instanceof StellarTxnContext\n                ? x.state.uuts!\n                : x instanceof UutName\n                ? { single: x }\n                : x;\n        const vEntries = mkUutValuesEntries(uutMap);\n\n        return new Value(\n            undefined,\n            new Assets([[this.mintingPolicyHash!, vEntries]])\n        );\n    }\n\n    @Activity.redeemer\n    usingAuthority(): isActivity {\n        const { usingAuthority } = this.onChainActivitiesType;\n        if (!usingAuthority) {\n            throw new Error(\n                `invalid contract without a usingAuthority redeemer`\n            );\n        }\n        const t = new usingAuthority();\n\n        return { redeemer: t._toUplcData() };\n    }\n\n    protected abstract updatingCharter(args: charterDatumType): isActivity;\n\n    tvCharter() {\n        return this.connectMinter().tvCharter();\n    }\n\n    get charterTokenAsValue() {\n        console.warn(\n            \"deprecated get charterTokenAsValue; use tvCharter() instead\"\n        );\n        return this.tvCharter();\n    }\n\n    importModules(): HeliosModuleSrc[] {\n        return [StellarHeliosHelpers, CapoDelegateHelpers, CapoMintHelpers];\n    }\n\n    /**\n     * Initiates a seeding transaction, creating a new Capo contract of this type\n     * @remarks\n     *\n     * The returned transaction context has `state.bootstrappedConfig` for\n     * capturing the details for reproducing the contract's settings and on-chain\n     * address.\n     *\n     * @param charterDatumArgs - initial details for the charter datum\n     * @param tcx - any existing transaction context\n     * @typeParam TCX - inferred type of a provided transaction context\n     * @public\n     **/\n    abstract mkTxnMintCharterToken<TCX extends StellarTxnContext>(\n        charterDatumArgs: Partial<charterDatumType>,\n        existingTcx?: TCX\n    ): Promise<\n        | never\n        | (TCX &\n              // & hasUutContext<\"govAuthority\" | \"capoGov\" | \"mintDelegate\" | \"mintDgt\">\n              hasBootstrappedConfig<CapoBaseConfig & configType>)\n    >;\n\n    get charterTokenPredicate() {\n        const predicate = this.mkTokenPredicate(this.tvCharter());\n\n        return predicate;\n    }\n\n    //! forms a Value with minUtxo included\n    tokenAsValue(tokenName: string | UutName, count: bigint = 1n) {\n        const { mph } = this;\n\n        const tn = tokenName.toString();\n        return this.mkMinTv(mph, tn, count);\n    }\n\n    async mustFindCharterUtxo() {\n        const predicate = this.mkTokenPredicate(this.tvCharter());\n\n        return this.mustFindMyUtxo(\"charter\", predicate, \"has it been minted?\");\n    }\n\n    abstract findGovDelegate(): Promise<AuthorityPolicy>;\n    abstract txnAddGovAuthority<TCX extends StellarTxnContext>(\n        tcx: TCX\n    ): Promise<TCX>;\n\n    async txnMustUseCharterUtxo<TCX extends StellarTxnContext>(\n        tcx: TCX,\n        redeemer: isActivity,\n        newDatum?: InlineDatum\n    ): Promise<TCX>;\n\n    async txnMustUseCharterUtxo<TCX extends StellarTxnContext>(\n        tcx: TCX,\n        useReferenceInput: \"refInput\" | true\n    ): Promise<TCX>;\n\n    @partialTxn // non-activity partial\n    async txnMustUseCharterUtxo<TCX extends StellarTxnContext>(\n        tcx: TCX,\n        redeemerOrRefInput: isActivity | \"refInput\" | true,\n        newDatum?: InlineDatum\n    ): Promise<TCX> {\n        return this.mustFindCharterUtxo().then(async (ctUtxo: TxInput) => {\n            // await this.txnAddCharterAuthz(\n            //     tcx,\n            //     ctUtxo.origOutput.datum as InlineDatum\n            // );\n\n            if (\n                true === redeemerOrRefInput ||\n                \"refInput\" === redeemerOrRefInput\n            ) {\n                // using reference-input has been requested\n                if (\n                    newDatum\n                )\n                    throw new Error(\n                        `when using reference input for charter, arg3 must be omitted`\n                    );\n                tcx.addRefInput(\n                    ctUtxo,\n                );\n            } else {\n                // caller requested to **spend** the charter token with a speciic activity / redeemer\n                const redeemer = redeemerOrRefInput;\n                tcx.addInput(ctUtxo, redeemer).attachScript(\n                    this.compiledScript\n                );\n                const datum =\n                    newDatum || (ctUtxo.origOutput.datum as InlineDatum);\n\n                this.txnKeepCharterToken(tcx, datum);\n            }\n            return tcx;\n        });\n    }\n\n    @partialTxn // non-activity partial\n    async txnUpdateCharterUtxo(\n        tcx: StellarTxnContext,\n        redeemer: isActivity,\n        newDatum: InlineDatum\n    ): Promise<StellarTxnContext | never> {\n        // this helper function is very simple.  Why have it?\n        //   -> its 3rd arg is required,\n        //   -> and its name gives a more specific meaning.\n        return this.txnMustUseCharterUtxo(tcx, redeemer, newDatum);\n    }\n\n    @partialTxn // non-activity partial\n    txnKeepCharterToken<TCX extends StellarTxnContext>(tcx: TCX, datum: InlineDatum) : TCX {\n        const txo = new TxOutput(this.address, this.tvCharter(), datum);\n        txo.correctLovelace(this.networkParams);\n        tcx.addOutput(txo);\n\n        return tcx;\n    }\n\n    /**\n     * Tries to locate the Capo charter's gov-authority token through its configured delegate\n     * @remarks\n     *\n     * Uses the Capo's govAuthority delegate to locate the gov-authority token,\n     * if available.  If that token is located in a smart contract, it should always be\n     * found (note, however, that the current user may not have the direct permission \n     * to spend the token in a transaction).\n     * \n     * If the token is located in a user wallet, and that user is not the contract's current\n     * actor, then the token utxo will not be returned from this method.\n     * \n     * @public\n     **/\n    async findGovAuthority() : Promise<TxInput | undefined> {\n        const delegate = await this.findGovDelegate();\n        return delegate.findAuthorityToken()\n    }\n\n    /**\n     * Tries to locate the Capo charter's gov-authority token in the user's wallet, using its configured delegate\n     * @remarks\n     *\n     * Uses the Capo's govAuthority delegate to locate the gov-authority token,\n     * if available the current user's wallet.  \n     * \n     * A delegate whose authority token is located in a smart contract will always return `undefined`.\n     * \n     * If the authority token is in a user wallet (not the same wallet as currently connected to the Capo contract class),\n     * it will return `undefined`.\n     * \n     * @public\n     **/\n    async findActorGovAuthority() {\n        const delegate = await this.findGovDelegate();\n        return delegate.findActorAuthorityToken()\n    }\n\n\n    /**\n     * REDIRECT: Use txnAddGovAuthorityTokenRef to add the charter-governance authority token to a transaction,\n     * or findGovAuthority() or findActorGovAuthority() for locating that txo.\n     * @remarks\n     *\n     * this is a convenience method for redirecting developers to\n     * find the right method name for finding or including a gov-authority token\n     * in a transaction\n     * @deprecated - see other method names, depending on what result you want\n     * @public\n     **/\n    findCharterAuthority() {\n        throw new Error(`use findGovAuthority() to locate charter's gov-authority token`);\n    }\n\n    /**\n     * REDIRECT: use txnAddGovAuthorityTokenRef() instead\n     * @remarks\n     *\n     * this method was renamed.\n     * @deprecated - look for txnAddGovAuthorityTokenRef() instead\n     * @public\n     **/\n    async txnAddCharterAuthorityTokenRef<TCX extends StellarTxnContext>() {\n        throw new Error(`use txnAddGovAuthorityTokenRef() instead`);\n    }\n\n    /**\n     * adds the charter-token, along with its gov-authority UUT, to a transaction context\n     * @remarks\n     *\n     * Uses txnAddGovAuthority() to locate the govAuthority delegate and txnGrantAuthority() to\n     * add its authority token to a transaction.\n     * \n     * The charter-token is included as a reference input.\n     *\n     * @param tcx - the transaction context\n     * @public\n     **/\n    //!!! todo: If the Capo's mintDelegate is using the (TODO) \"undelegated\" strategy, this method can be used (?)\n    // ... to approve token-minting by the authority of the gov authZor\n    @partialTxn\n    async txnAddGovAuthorityTokenRef<TCX extends StellarTxnContext>(\n        tcx: TCX\n    ): Promise<TCX> {\n        const tcx2 = await this.txnMustUseCharterUtxo(tcx, \"refInput\");\n\n        const tcx3 = await this.txnAddGovAuthority(tcx2);\n        return tcx3;\n    }\n\n    /**\n     * provides minter-targeted params extracted from the input configuration\n     * @remarks\n     *\n     * extracts the seed-txn details that are key to parameterizing the minter contract\n     * @public\n     **/\n    getMinterParams() {\n        const { seedTxn, seedIndex } = this.configIn!;\n        return { seedTxn, seedIndex };\n    }\n    getCapoRev() {\n        return 1n;\n    }\n\n    /**\n     * extracts from the input configuration the key details needed to construct/reconstruct the on-chain contract address\n     * @remarks\n     *\n     * extracts the details that are key to parameterizing the Capo / leader's on-chain contract script\n     * @public\n     **/\n    getContractScriptParams(\n        config: configType\n    ): configBase & Partial<configType> {\n        if (this.configIn && config.mph && !config.mph.eq(this.mph))\n            throw new Error(`mph mismatch`);\n        const { mph } = config;\n        const rev = this.getCapoRev();\n        // console.log(\"this treasury uses mph\", mph?.hex);\n\n        //@ts-expect-error because TS only sees the abstract configType, not its constraint's props\n        return {\n            mph,\n            rev,\n        };\n    }\n    connectMinter() {\n        return this.minter || this.connectMintingScript(this.getMinterParams());\n    }\n    get mph() {\n        return this.connectMinter().mintingPolicyHash!;\n    }\n\n    get mintingPolicyHash() {\n        return this.mph;\n    }\n\n    connectMintingScript(params: SeedTxnParams): minterType {\n        if (this.minter)\n            throw new Error(`just use this.minter when it's already present`);\n        const { minterClass } = this;\n        const { seedTxn, seedIndex } = params;\n        const { mph: expectedMph } = this.configIn || {};\n\n        const minter = this.addStrellaWithConfig(minterClass, {\n            seedTxn,\n            seedIndex,\n            //@ts-expect-error - subclassing Capo in a different way than DefaultCapo\n            //   isn't actively supported yet\n            capo: this,\n        });\n        if (expectedMph && !minter.mintingPolicyHash.eq(expectedMph)) {\n            throw new Error(\n                `This minter script with this seed-utxo doesn't produce the required  minting policy hash\\n` +\n                    \"expected: \" +\n                    expectedMph.hex +\n                    \"\\nactual: \" +\n                    minter.mintingPolicyHash.hex\n            );\n        } else if (!expectedMph) {\n            console.log(`${this.constructor.name}: seeding new minting policy`);\n        }\n        const { mintingCharter, mintingUuts } = minter.onChainActivitiesType;\n        if (!mintingCharter)\n            throw new Error(\n                `minting script doesn't offer required 'mintingCharter' activity-redeemer`\n            );\n        if (!mintingUuts)\n            throw new Error(\n                `minting script doesn't offer required 'mintingUuts' activity-redeemer`\n            );\n\n        //@ts-ignore-error - can't seem to indicate to typescript that minter's type can be relied on to be enough\n        return (this.minter = minter);\n    }\n\n    /**\n     * Finds a sufficient-sized utxo for seeding one or more named tokens\n     * @remarks\n     *\n     * For allocating a charter token (/its minter), one or more UUTs, or other token name(s)\n     * to be minted, this function calculates the size of minUtxo needed for all the needed tokens,\n     * assuming they'll each be stored in separate utxos.  It then finds and returns a UTxO from the\n     * current actor's wallet.  The utxo is NOT added to the transaction.\n     *\n     * When the transaction context already has some utxo's being consumed, they're not\n     * eligible for selection.\n     *\n     * If the transaction doesn't store the new tokens in separate utxos, any spare lovelace\n     * are returned as change in the transaction.\n     *\n     * @param tcx - transaction context\n     * @param purpose - a descriptive purpose used during utxo-finding in case of problems\n     * @param tokenNames - the token names to be seeded.\n     * @public\n     **/\n    async txnMustGetSeedUtxo(\n        tcx: StellarTxnContext,\n        purpose: string,\n        tokenNames: string[]\n    ): Promise<TxInput | never> {\n        //! given a Capo-based contract instance having a free TxInput to seed its validator address,\n        //! prior to initial on-chain creation of contract,\n        //! it finds that specific TxInput in the current user's wallet.\n\n        const fakeMph = new MintingPolicyHash([]);\n\n        const totalMinUtxoValue = tokenNames.reduce(\n            addTokenValue.bind(this),\n            new Value(0n)\n        );\n        //! accumulates min-utxos for each stringy token-name in a reduce()\n        function addTokenValue(\n            this: Capo<any>,\n            accumulator: Value,\n            tn: string\n        ): Value {\n            const vMin = this.mkMinTv(fakeMph, tn);\n            return accumulator.add(vMin);\n        }\n\n        const uutSeed = this.mkValuePredicate(totalMinUtxoValue.lovelace, tcx);\n        const seedUtxo = await this.mustFindActorUtxo(\n            purpose,\n            uutSeed,\n            tcx\n        ).catch((x) => {\n            throw x;\n        });\n\n        const { txId: seedTxn, utxoIdx } = seedUtxo.outputId;\n        const seedIndex = BigInt(utxoIdx);\n        const count =\n            tokenNames.length > 1 ? `${tokenNames.length} uuts for ` : \"\";\n        console.log(\n            `Seed tx for ${count}${purpose}: ${seedTxn.hex.slice(\n                0,\n                8\n            )}…${seedTxn.hex.slice(-4)}#${seedIndex}`\n        );\n        return seedUtxo;\n    }\n\n    mockMinter?: minterType;\n\n    /**\n     * Creates a new delegate link, given a delegation role and and strategy-selection details\n     * @remarks\n     *\n     * Combines partal and implied configuration settings, validating the resulting configuration.\n     *\n     * The resulting \"relative\" delegate link can be used directly in a Datum field of type RelativeDelegateLink\n     * or can be stored off-chain in any way suitable for your dApp.\n     *\n     * To get a full DelegateSettings object, use txnCreateDelegateSettings() instead.\n     *\n     * @reqt throws DelegateConfigNeeded with an `errors` entry\n     *   ... if there are any problems in validating the net configuration settings.\n     * @reqt EXPECTS the `tcx` to be minting a UUT for the delegation,\n     *   ... whose UutName can be found in `tcx.state.uuts[roleName]`\n     * @reqt combines base settings from the selected delegate class's `defaultParams`\n     *   ... adding the delegateRoles()[roleName] configuration for the selected roleName,\n     *   ... along with any explicit `config` from the provided `delegateInfo`\n     *   ... and automatically applies a `uut` setting.\n     *   ... The later properties in this sequence take precedence.\n     *\n     * @param tcx - A transaction-context\n     * @param roleName - the role of the delegate, matched with the `delegateRoles()` of `this`\n     * @param delegateInfo - partial detail of the delegation, with `strategyName` and any other\n     *     details required by the particular role.  Its delegate type must be matchy with the type indicated by the `roleName`.\n     * @public\n     **/\n    async txnCreateDelegateLink<\n        DT extends StellarDelegate,\n        const RN extends string\n    >(\n        tcx: hasUutContext<RN>,\n        roleName: RN,\n        delegateInfo: MinimalDelegateLink<DT> = { strategyName: \"default\" }\n    ) {\n        const configured = this.txnCreateConfiguredDelegate(\n            tcx,\n            roleName,\n            delegateInfo\n        );\n        await configured.delegate.txnReceiveAuthorityToken(\n            tcx,\n            this.mkMinTv(this.mph, tcx.state.uuts[roleName])\n        );\n\n        return this.relativeLink(configured);\n    }\n\n    relativeLink<DT extends StellarDelegate<any>>(\n        configured: ConfiguredDelegate<DT>\n    ): RelativeDelegateLink<DT> {\n        const {\n            strategyName,\n            delegateValidatorHash,\n            uutName,\n            config,\n        }: // addrHint,  //moved to config\n        // reqdAddress,  // removed\n        RelativeDelegateLink<DT> = configured;\n\n        return {\n            strategyName,\n            uutName,\n            delegateValidatorHash,\n            config,\n            // addrHint,  //moved to config\n            // reqdAddress,  // removed\n        };\n    }\n\n    /**\n     * Generates and returns a complete set of delegate settings, given a delegation role and strategy-selection details. \n     * @remarks\n     *\n     * Maps the indicated delegation role to specific UUT details from the provided transaction-context \n     * to provide the resulting settings.  The transaction context isn't modified.\n     * \n     * Behaves exactly like (and provides the core implementation of) {@link Capo.txnCreateDelegateLink | txnCreateDelegateLink()},\n     * returning additional `roleName` and `delegateClass`, to conform with the DelegateSettings type.\n     *\n     * See txnCreateDelegateLink for further details.\n     * @public\n     **/\n    txnCreateConfiguredDelegate<\n        DT extends StellarDelegate<any>,\n        const RN extends string\n    >(\n        tcx: hasUutContext<RN>,\n        roleName: RN & keyof this[\"delegateRoles\"],\n        delegateInfo: MinimalDelegateLink<DT> = { strategyName: \"default\" }\n    ): ConfiguredDelegate<DT> {\n        const { strategyName, config: selectedConfig = {} } = delegateInfo;\n\n        const { delegateRoles } = this;\n        const uut = tcx.state.uuts[roleName];\n        const impliedDelegationDetails = this.mkImpliedDelegationDetails(uut);\n\n        const foundStrategies = \n            delegateRoles[roleName] as RoleInfo<DT, any, any, RN>; //prettier-ignore\n        const selectedStrategy = foundStrategies.variants[\n            strategyName\n        ] as VariantStrategy<DT>;\n        if (!selectedStrategy) {\n            let msg = `invalid strategyName '${strategyName}' for role '${roleName}'`;\n            if (strategyName == \"default\") {\n                msg = `no selected or default delegate for role '${roleName}'.  Specify strategyName`;\n            }\n            const e = new DelegateConfigNeeded(msg, {\n                errorRole: roleName,\n                availableStrategies: Object.keys(foundStrategies.variants),\n            });\n            throw e;\n        }\n        const { delegateClass, validateConfig } = selectedStrategy;\n        const { defaultParams: defaultParamsFromDelegateClass } = delegateClass;\n\n        const scriptParamsFromStrategyVariant =\n            selectedStrategy.partialConfig || {};\n        const mergedConfig: ConfigFor<DT> = {\n            ...defaultParamsFromDelegateClass,\n            ...(scriptParamsFromStrategyVariant || {}),\n            ...selectedConfig,\n            ...impliedDelegationDetails,\n        } as unknown as ConfigFor<DT>;\n\n        //! it validates the net configuration so it can return a working config.\n        const errors: ErrorMap | undefined =\n            validateConfig && validateConfig(mergedConfig);\n        if (errors) {\n            throw new DelegateConfigNeeded(\n                `validation errors in delegateInfo.config for ${roleName} '${strategyName}':\\n` +\n                    errorMapAsString(errors),\n                { errors }\n            );\n        }\n\n        const delegateSettings: PreconfiguredDelegate<DT> = {\n            ...delegateInfo,\n            roleName,\n            delegateClass,\n            uutName: uut.name,\n            config: mergedConfig,\n        };\n        let delegate: DT = this.mustGetDelegate(delegateSettings);\n\n        // const reqdAddress = delegate.delegateReqdAddress();\n        // if (reqdAddress) {\n        //     delegateSettings.reqdAddress = reqdAddress;\n        // } else {\n        //     const addrHint = delegate.delegateAddrHint();\n        //     if (addrHint) {\n        //         delegateSettings.addrHint = addrHint;\n        //     }\n        // }\n        const { delegateValidatorHash } = delegate;\n        const pcd: ConfiguredDelegate<DT> = {\n            ...delegateSettings,\n            delegateValidatorHash,\n            delegate,\n        };\n        return pcd;\n    }\n\n    mkImpliedDelegationDetails(uut: UutName): DelegationDetail {\n        return {\n            capoAddr: this.address,\n            mph: this.mph,\n            tn: stringToNumberArray(uut.name),\n        };\n    }\n\n    #_delegateCache: {\n        [roleName: string]: {\n            [delegateLink: string]: StellarDelegate<any>;\n        };\n    } = {};\n\n    // get connectDelegate()\n    async connectDelegateWithLink<\n        DelegateType extends StellarDelegate<any>,\n        configType extends (\n            DelegateType extends StellarContract<infer c> ? c : configBase //prettier-ignore\n         ) = DelegateType extends StellarContract<infer c> ? c : configBase //prettier-ignore\n    >(\n        roleName: string,\n        delegateLink: RelativeDelegateLink<DelegateType>\n    ): Promise<DelegateType> {\n        const cache = this.#_delegateCache;\n\n        const cacheKey = JSON.stringify(\n            delegateLink,\n            delegateLinkSerializer,\n            4\n        );\n        // console.log(`   ----- delegate '${roleName}' cache key `, cacheKey);\n        if (!cache[roleName]) cache[roleName] = {};\n        const roleCache = cache[roleName];\n        const cachedRole = roleCache[cacheKey];\n        if (cachedRole) {\n            // console.log(  \"   <---- cached delegate\");\n            return cachedRole as DelegateType;\n        }\n        const role = this.delegateRoles[roleName];\n        //!!! work on type-safety with roleName + available roles\n        const {\n            strategyName,\n            uutName,\n            delegateValidatorHash: edvh,\n            // addrHint,  //moved to config\n            // reqdAddress,  // removed\n            config: linkedConfig,\n        } = delegateLink;\n        const selectedStrat = role.variants[\n            strategyName\n        ] as unknown as ConfiguredDelegate<DelegateType>;\n        if (!selectedStrat) {\n            throw new Error(\n                `mismatched strategyName '${strategyName}' in delegate link for role '${roleName}'\\n` +\n                    `  ...available strategies: ${Object.keys(\n                        role.variants\n                    ).join(\", \")}.\\n\\n link details: ${this.showDelegateLink(\n                        delegateLink\n                    )}`\n            );\n        }\n        const { delegateClass, config: stratSettings } = selectedStrat;\n        const { defaultParams: defaultParamsFromDelegateClass } = delegateClass;\n        const impliedDelegationDetails = this.mkImpliedDelegationDetails(\n            new UutName(roleName, uutName)\n        );\n\n        //@xxxts-expect-error because this stack of generically partial\n        //  ... config elements isn't recognized as adding up to a full config type.\n        const config: configType = {\n            ...defaultParamsFromDelegateClass,\n            ...stratSettings,\n            // addrHint,  //moved to config\n            // reqdAddress,  // removed\n            ...linkedConfig,\n            ...impliedDelegationDetails,\n        };\n        //configured delegate:\n        // delegateClass: stellarSubclass<DT>;\n        //!  //  delegate: DT // omitted in \"pre-configured\";\n        // roleName: string;\n        // config: ConfigFor<DT>;\n        //... from relativeDelegateLink:\n        //      uutName: string;\n        //      strategyName: string;\n        //      config: Partial<ConfigFor<T>>;\n        //      reqdAddress?: Address;\n        //      addrHint?: Address[];\n\n        const delegate = this.mustGetDelegate({\n            delegateClass,\n            config,\n            roleName,\n            uutName,\n            strategyName,\n            // reqdAddress,\n            // addrHint,\n        });\n        const dvh = delegate.delegateValidatorHash;\n        if (edvh && dvh && !edvh.eq(dvh)) {\n            throw new Error(\n                `${this.constructor.name}: ${roleName}: mismatched delegate: expected validator ${edvh?.hex}, got ${dvh.hex}`\n            );\n        }\n        console.log(\n            `    <--- caching first instance of delegate ${roleName} @ key = ${cacheKey}`\n        );\n        roleCache[cacheKey] = delegate;\n        return delegate;\n    }\n\n    private showDelegateLink(delegateLink: RelativeDelegateLink<any>) {\n        return JSON.stringify(delegateLink, null, 2);\n    }\n\n    mustGetDelegate<T extends StellarDelegate<any>>(\n        configuredDelegate: PreconfiguredDelegate<T>\n    ): T {\n        const { delegateClass, config } = configuredDelegate;\n        try {\n            // delegate\n            const configured = this.addStrellaWithConfig(delegateClass, config);\n            return configured as T;\n        } catch (e: any) {\n            const t = e.message.match(/invalid parameter name '([^']+)'$/);\n\n            const [_, badParamName] = t || [];\n            if (badParamName) {\n                throw new DelegateConfigNeeded(\n                    \"configuration error while parameterizing contract script\",\n                    { errors: { [badParamName]: e.message } }\n                );\n            }\n            throw e;\n        }\n    }\n\n    tvForDelegate(dgtLink: RelativeDelegateLink<any>) {\n        return this.tokenAsValue(dgtLink.uutName);\n    }\n    mkDelegatePredicate(dgtLink: RelativeDelegateLink<any>) {\n        return this.mkTokenPredicate(this.tvForDelegate(dgtLink));\n    }\n\n    capoRequirements() {\n        return hasReqts({\n            \"is a base class for leader/Capo pattern\": {\n                purpose:\n                    \"so that smart contract developers can easily start multi-script development\",\n                details: [\n                    \"Instantiating a Capo contract always uses the seed-utxo pattern for uniqueness.\",\n                    \"Subclassing Capo with no type-params gives the default minter,\",\n                    \"  ... which only allows UUTs to be created\",\n                    \"Subclassing Capo<CustomMinter> gives an overloaded minter,\",\n                    \"  ... which must allow UUT minting and may allow more Activities too.\",\n                ],\n                mech: [\n                    \"provides a default minter\",\n                    \"allows the minter class to be overridden\",\n                ],\n            },\n            \"can create unique utility tokens\": {\n                purpose:\n                    \"so the contract can use UUTs for scoped-authority semantics\",\n                details: [\n                    \"That UUT (a Value) is returned, and then should be added to a TxOutput.\",\n                    \"The partial-helper doesn't constrain the semantics of the UUT.\",\n                    \"The uniqueness level can be iterated in future as needed.\",\n                    \"The UUT's token-name combines its textual purpose with a short hash \",\n                    \"   ... of the seed UTxO, formatted with bech32\",\n                ],\n                mech: [\n                    \"Building a txn with a UUT involves using the txnMintingUuts partial-helper on the Capo.\",\n                    \"Fills tcx.state.uuts with purpose-keyed unique token-names\",\n                    \"The UUT uses the seed-utxo pattern to form 64 bits of uniqueness, so that token-names stay short-ish.\",\n                ],\n            },\n            \"supports the Delegation pattern using roles and strategy-variants\":\n                {\n                    purpose: \"enables structured modularity and extensibility\",\n                    details: [\n                        \"A Capo constellation can declare a set of roles to be filled in the contract logic.\",\n                        \"The roles are typed, so that implementers of extensibility can know \",\n                        \"  ... which capabilities their plugins need to provide\",\n                        \"Each role should be filled by a StellarContract class, \",\n                        \"  ... which is required at the time it is needed during creation of a transaction.\",\n                        \"Each role should normally provide a base implementation \",\n                        \"  ... of a delegate that can serve the role.\",\n                        \"Strategies, strategy-variants, or simple 'variants' are all similar ways \",\n                        \"  ... of indicating different named plugins that can serve a particular role.\",\n                        \"Variant-names are human-readable, while the actual code\",\n                        \"  ... behind each variant name are the strategies\",\n                    ],\n                    mech: [],\n                    requires: [\n                        \"supports well-typed role declarations and strategy-adding\",\n                        \"supports just-in-time strategy-selection using txnCreateDelegateLink()\",\n                        \"given a configured delegate-link, it can create a ready-to-use Stellar subclass with all the right settings\",\n                        \"supports concrete resolution of existing role delegates\",\n                    ],\n                },\n            \"supports well-typed role declarations and strategy-adding\": {\n                purpose:\n                    \"for plugin implementers to have a clear picture of what to implement\",\n                details: [\n                    \"Each Capo class may declare a roles data structure.\",\n                    \"GOAL: The required type for each role must be matched when adding a plugin class serving a role\",\n                    \"A dApp using a Capo class can add strategy variants by subclassing\",\n                ],\n                mech: [\n                    \"Capo EXPECTS a synchronous getter for 'delegateRoles' to be defined\",\n                    \"Capo provides a default 'delegateRoles' having no specific roles (or maybe just minter - TBD)\",\n                    \"Subclasses can define their own get delegateRoles(), return a role-map-to-variant-map structure\",\n                ],\n                requires: [\n                    \"Each role uses a RoleVariants structure which can accept new variants\",\n                ],\n            },\n            \"supports just-in-time strategy-selection using txnCreateDelegateLink()\":\n                {\n                    purpose:\n                        \"enabling each transaction to select appropriate plugins for its contextual needs\",\n                    details: [\n                        \"When a transaction having an extensibility-point is being created,\",\n                        \"  ... it SHOULD require an explicit choice of the delegate to use in that role.\",\n                        \"When a 'mkTxn‹DoesThings›' method creates a new role-delegated UTxO, \",\n                        \"  ... it sets essential configuration details for the delegation \",\n                        \"  ... including a specific UUT that provides a linking mechanism for the delegate\",\n                        \"The delegate contract, including its address and/or reference-script UTxO \",\n                        \"  ... and/or its parameters and its StellarContract class, MUST be captured \",\n                        \"  ... so that it can be easily resolved and used/referenced\",\n                        \"  .... during a later transaction whose UTxO-spending is governed by the delegate contract.\",\n                        \"When the delegate serving the role is selected, \",\n                        \"  ... that delegate will be manifested as a concrete pair of StellarContract subclass \",\n                        \"  ... and contract address.  The contract address MAY be pre-existing \",\n                        \"  ... or be instantiated as a result of the delegation details.\",\n                    ],\n                    mech: [\n                        \"txnCreateDelegateLink(tcx, role, delegationSettings) method configures a new delegate\",\n                        \"txnCreateDelegateLink() will use a 'default' delegate strategy\",\n                        \"If there is no delegate configured (or defaulted) for the needed role, txnCreateDelegateLink throws a DelegateConfigNeeded error.\",\n                        \"If the strategy-configuration doesn't match available variants, the DelegateConfigNeeded error offers suggested strategy-names\",\n                        \"If the strategy-configuration has any configuration problems, the DelegateConfigNeeded error contains an 'errors' object\",\n                        \"txnCreateDelegateSettings(tcx, role, delegationSettings) returns the delegate link plus a concreted delegate instance\",\n                    ],\n                },\n            \"given a configured delegate-link, it can create a ready-to-use Stellar subclass with all the right settings\":\n                {\n                    purpose:\n                        \"allows the known facts about a delegate to be resolved to working SC class\",\n                    details: [\n                        \"A delegate link created by txnCreateDelegateLink(), can be captured in different ways\",\n                        \"  ... e.g. as a Datum property in a contract, \",\n                        \"  ... or in any off-chain way.\",\n                        \"A dApp then reconstitutes this key information to a StellarContract, \",\n                        \"  ... enabling simple multi-contract collaboration\",\n                    ],\n                    mech: [\n                        \"mustGetDelegate(configuredDelegate) method retrieves a configured delegate\",\n                    ],\n                },\n\n            \"Each role uses a RoleVariants structure which can accept new variants\":\n                {\n                    purpose:\n                        \"provides a type-safe container for adding strategy-variants to a role\",\n                    details: [\n                        \"Adding a strategy variant requires a human-readable name for the variant\",\n                        \"  ... and a reference to the StellarContract class implementing that variant.\",\n                        \"Each variant may indicate a type for its configuration data-structure\",\n                        \"  ... and may include a factory function accepting a data-structure of that type.\",\n                        \"TBD: base configuration type?  Capo txn-builders supporting utxo-creation can provide baseline details of the base type, \",\n                        \"  ... with additional strategy-specific details provided in the transaction-context.\",\n                        \"When adding strategies, existing variants cannot be removed or replaced.\",\n                    ],\n                    mech: [\n                        \"RoleVariants has type-parameters indicating the baseline types & interfaces for delegates in that role\",\n                        \"TODO: variants can augment the delegateRoles object without removing or replacing any existing variant\",\n                    ],\n                    requires: [\n                        \"provides a Strategy type for binding a contract to a strategy-variant name\",\n                    ],\n                },\n            \"provides a Strategy type for binding a contract to a strategy-variant name\":\n                {\n                    purpose:\n                        \"has all the strategy-specific bindings between a variant and the contract delegate\",\n                    details: [\n                        \"When adding a contract as a delegate serving in a role, its name\",\n                        \"  ... and its Strategy binding creates the connection between the host contract (suite) \",\n                        \"  ... and the StellarContract subclass implementing the details of the strategy.\",\n                        \"The Strategy and its underlying contract are type-matched\",\n                        \"  ... with the interface needed by the Role.\",\n                        \"The Strategy is a well-typed structure supporting \",\n                        \"  ... any strategy-specific configuration details (script parameters)\",\n                        \"  ... and validation of script parameters\",\n                    ],\n                    mech: [\n                        \"Each strategy must reference a type-matched implementation class\",\n                        \"Each strategy may define scriptParams always used for that strategy\",\n                        \"Each strategy may defer the definition of other script-params to be defined when a specific delegation relationship is being created\",\n                        \"Each strategy must define a validateScriptParams(allScriptParams) function, returning an errors object if there are problems\",\n                        \"validateScriptParams() should return undefined if there are no problems\",\n                    ],\n                    requires: [\n                        \"supports concrete resolution of existing role delegates\",\n                    ],\n                },\n            \"supports concrete resolution of existing role delegates\": {\n                purpose:\n                    \"so that transactions involving delegated responsibilities can be executed\",\n                details: [\n                    \"When a transaction needs to involve a UTxO governed by a delegate contract\",\n                    \"   ... the need for that delegate contract is signalled through Capo callbacks \",\n                    \"   ... during the transaction-building process.\",\n                    \"Those callbacks contain key information, such as role-name, parameters, and address\",\n                    \"  ... needed in the collaboration to find the correct concrete delegate.\",\n                    \"Once the delegate is resolved to a configured StellarContract class, \",\n                    \"   ... its established transaction-building interface is triggered, \",\n                    \"   ... augmenting the transaction with the correct details, \",\n                    \"   ... and enabling the right on-chain behaviors / verifications\",\n                    \"The Strategy adapter is expected to return the proper delegate with its matching address.\",\n                ],\n                mech: [\n                    \"TODO: with an existing delegate, the selected strategy class MUST exactly match the known delegate-address\",\n                ],\n            },\n        });\n    }\n}\n","import {\n    NetworkParams,\n    SimpleWallet as WalletEmulator,\n    SimpleWallet,\n} from \"@hyperionbt/helios\";\n\nimport type {\n    ConfigFor,\n    StellarContract,\n    configBase,\n    stellarSubclass,\n} from \"../StellarContract.js\";\nimport type { StellarTestContext } from \"./StellarTestContext.js\";\nimport type { StellarTestHelper } from \"./StellarTestHelper.js\";\nimport ppParams from \"../../preprod.json\" assert { type: \"json\" };\nimport type { DefaultCapoTestHelper } from \"./DefaultCapoTestHelper.js\";\nimport type { Capo } from \"../Capo.js\";\nimport type { DefaultCapo } from \"../DefaultCapo.js\";\n\nexport const preProdParams = ppParams;\n\nexport type enhancedNetworkParams = NetworkParams & {\n    slotToTimestamp(n: bigint): Date;\n};\nexport type stellarTestHelperSubclass<SC extends StellarContract<any>> = new (\n    config: ConfigFor<SC> & canHaveRandomSeed\n) => StellarTestHelper<SC>;\n\nexport type DefaultCapoTestHelperClass<SC extends DefaultCapo<any,any,any>> = new (\n    config: ConfigFor<SC> & canHaveRandomSeed\n) => StellarTestHelper<SC> & DefaultCapoTestHelper<SC> & { stellarClass: stellarSubclass<SC> };\n\n// type DefaultCapoTestHelperSubclass<SC extends DefaultCapo<any>> = new (\n//     args: StellarConstructorArgs<CapoBaseConfig>\n// ) => DefaultCapoTestHelper<SC>;\n\nexport type canHaveRandomSeed = {\n    randomSeed?: number;\n};\nexport type canSkipSetup = {\n    skipSetup?: true;\n};\n\n/**\n * Adds a test helper class to a `vitest` testing context.\n * @remarks\n *\n * @param context -  a vitest context, typically created with StellarTestContext\n * @param TestHelperClass - typically created with DefaultCapoTestHelper\n * @param params - preset configuration for the contract under test\n * @public\n **/\nexport async function addTestContext<\n    SC extends StellarContract<any>,\n    P extends configBase = SC extends StellarContract<infer PT> ? PT : never\n>(\n    context: StellarTestContext<any, SC>,\n    TestHelperClass: stellarTestHelperSubclass<SC>,\n    params?: P\n) {\n    console.log(\" ======== ========= ======== +test context\");\n    Object.defineProperty(context, \"strella\", {\n        get: function () {\n            return this.h.strella;\n        },\n    });\n\n    context.initHelper = async (params) => {\n        //@ts-expect-error\n        const helper = new TestHelperClass(params);\n        if (context.h) {\n            if (!params.skipSetup)\n                throw new Error(\n                    `re-initializing shouldn't be necessary without skipSetup`\n                );\n            console.log(\n                \"   ............. reinitializing test helper without setup\"\n            );\n        }\n        context.h = helper;\n        // console.log(\"context IS \", context)\n        return helper;\n    };\n    try {\n        //@ts-expect-error\n        await context.initHelper(params);\n    } catch (e) {\n        if (!params) {\n            // console.error(e.stack || e.message || JSON.stringify(e));\n            console.error(\n                `${TestHelperClass.name}: error during initialization; does this test helper require initialization with explicit params?`\n            );\n            throw e;\n        } else {\n            console.error(\"urgh\");\n            throw e;\n        }\n    }\n}\n\nexport type actorMap = Record<string, WalletEmulator>;\n\n/**\n * 1 million as bigint.  Multiply by this a `Bigint` ADA value to get lovelace\n * @public\n * @example\n *    const three = 3n * ADA\n *    const four = Bigint(4) * ADA\n **/\nexport const ADA = 1_000_000n; // lovelace\n","import * as helios from \"@hyperionbt/helios\";\nimport {\n    Address,\n    Crypto,\n    NetworkEmulator,\n    NetworkParams,\n    Tx,\n    TxId,\n    TxOutput,\n    Value,\n    SimpleWallet,\n    SimpleWallet as WalletEmulator,\n} from \"@hyperionbt/helios\";\nimport type { Wallet } from \"@hyperionbt/helios\";\n\nimport { StellarContract, findInputsInWallets } from \"../StellarContract.js\";\nimport type {\n    stellarSubclass,\n    ConfigFor,\n    StellarConstructorArgs,\n} from \"../StellarContract.js\";\n\nimport { dumpAny, lovelaceToAda, txAsString, utxosAsString } from \"../diagnostics.js\";\nimport { \n    ADA,\n    preProdParams,\n } from \"./types.js\";\nimport type {\n    actorMap,\n    canHaveRandomSeed,\n    canSkipSetup,\n    enhancedNetworkParams,\n} from \"./types.js\";\n\n/**\n * Base class for test-helpers on generic Stellar contracts\n * @remarks\n *\n * NOTE: DefaultCapoTestHelper is likely to be a better fit for typical testing needs and typical contract-development scenarios.\n * Use this class for specific unit-testing needs not sufficiently served by integration-testing on a Capo.\n * @public\n **/\nexport abstract class StellarTestHelper<SC extends StellarContract<any>> {\n    state: Record<string, any>;\n    abstract get stellarClass(): stellarSubclass<SC, any>;\n    config?: ConfigFor<SC>;\n    defaultActor?: string;\n    strella!: SC;\n    actors: actorMap;\n    optimize = false;\n    liveSlotParams: NetworkParams;\n    networkParams: NetworkParams;\n    network: NetworkEmulator;\n    private _actorName: string;\n\n    get actorName() {\n        return this._actorName\n    }\n    //@ts-ignore type mismatch in getter/setter until ts v5\n    get currentActor(): WalletEmulator {\n        return this.actors[this._actorName];\n    }\n    set currentActor(actorName: string) {\n        const thisActor = this.actors[actorName];\n        if (!thisActor)\n            throw new Error(\n                `setCurrentActor: invalid actor name '${actorName}'`\n            );\n        console.log(`\\n🎭 -> 🎭 changing actor 🎭 ->  🎭 from ${this._actorName} to ${actorName} ${dumpAny(thisActor.address)}`);\n        this._actorName = actorName;\n        if (this.strella) {\n            this.initStellarClass(this.state.parsedConfig || this.config);\n        }\n    }\n\n    address?: Address;\n\n    setupPending?: Promise<any>;\n    setupActors() {\n        console.warn(\n            `using 'hiro' as default actor because ${this.constructor.name} doesn't define setupActors()`\n        );\n        this.addActor(\"hiro\", 1863n * ADA);\n        this.currentActor = \"hiro\";\n    }\n\n    constructor(config?: ConfigFor<SC> & canHaveRandomSeed & canSkipSetup) {\n        this.state = {};\n        if (config) {\n            console.log(\n                \"XXXXXXXXXXXXXXXXXXXXXXXXXX test helper with config\",\n                config\n            );\n\n            this.config = config;\n        }\n\n        const [theNetwork, emuParams] = this.mkNetwork();\n        this.liveSlotParams = emuParams;\n        this.network = theNetwork;\n        this.networkParams = new NetworkParams(preProdParams);\n\n        this.actors = {};\n        this._actorName = \"\"; //only to make typescript happy\n        this.setupActors();\n        if (!this._actorName)\n            throw new Error(\n                `${this.constructor.name} doesn't set currentActor in setupActors()`\n            );\n        const now = new Date();\n        this.waitUntil(now);\n        if (config?.skipSetup) {\n            console.log(\"test helper skipping setup\");\n            return;\n        }\n\n        //@ts-expect-error - can serve no-params case or params case\n        this.setupPending = this.initialize(config);\n    }\n\n    async initialize(config: ConfigFor<SC> & canHaveRandomSeed) {\n        const { randomSeed, ...p } = config;\n        if (this.setupPending) await this.setupPending;\n        if (this.strella && this.randomSeed == randomSeed) {\n            console.log(\n                \"       ----- skipped duplicate setup() in test helper\"\n            );\n            return this.strella;\n        }\n        if (this.strella) {\n            console.warn(\n                \".... warning: new test helper setup with new seed....\"\n            );\n            this.rand = undefined;\n            this.randomSeed = randomSeed;\n        } else {\n            console.log(\n                \"???????????????????????? Test helper initializing without this.strella\"\n            );\n        }\n\n        return this.initStellarClass();\n    }\n\n    initStellarClass(config = this.config) {\n        const TargetClass = this.stellarClass;\n\n        const strella = this.initStrella(TargetClass, config);\n\n        this.strella = strella;\n        this.address = strella.address;\n        return strella;\n    }\n\n\n\n    //!!! reconnect tests to tcx-based config-capture\n    // onInstanceCreated: async (config: ConfigFor<SC>) => {\n    //     this.config = config\n    //     return {\n    //         evidence: this,\n    //         id: \"empheral\",\n    //         scope: \"unit test\"\n    //     }\n    // }\n\n    initStrella(\n        TargetClass: stellarSubclass<SC, ConfigFor<SC>>,\n        config?: ConfigFor<SC>\n    ) {\n        const setup = {\n            network: this.network,\n            myActor: this.currentActor,\n            networkParams: this.networkParams,\n            isTest: true,\n        };\n\n        let cfg: StellarConstructorArgs<ConfigFor<SC>> = {\n            setup,\n            config: config!,\n        };\n\n        if (!config)\n            cfg = {\n                setup,\n                partialConfig: {},\n            };\n        return new TargetClass(cfg);\n    }\n\n    //! it has a seed for mkRandomBytes, which must be set by caller\n    randomSeed?: number;\n    //! it makes a rand() function based on the randomSeed after first call to mkRandomBytes\n    rand?: () => number;\n\n    delay(ms) {\n        return new Promise((res) => setTimeout(res, ms));\n    }\n\n    async mkSeedUtxo(seedIndex: bigint = 0n) {\n        const { currentActor } = this;\n        const { network } = this;\n\n        const tx = new Tx();\n        const actorMoney = await currentActor.utxos;\n        console.log(\n            `${this._actorName} has money: \\n` + utxosAsString(actorMoney)\n        );\n\n        tx.addInput(\n            await findInputsInWallets(\n                new helios.Value(30n * ADA),\n                { wallets: [currentActor] },\n                network\n            )\n        );\n\n        tx.addOutput(new TxOutput(currentActor.address, new Value(10n * ADA)));\n        tx.addOutput(new TxOutput(currentActor.address, new Value(10n * ADA)));\n        let si = 2;\n        for (; si < seedIndex; si++) {\n            tx.addOutput(\n                new TxOutput(currentActor.address, new Value(10n * ADA))\n            );\n        }\n        const txId = await this.submitTx(tx, \"force\");\n\n        return txId;\n    }\n\n    async submitTx(tx: Tx, force?: \"force\"): Promise<TxId> {\n        const sendChangeToCurrentActor = this.currentActor.address;\n        const isAlreadyInitialized = !!this.strella;\n        try {\n            await tx.finalize(this.networkParams, sendChangeToCurrentActor);\n        } catch (e: any) {\n            throw new Error(\n                e.message +\n                    \"\\nin tx: \" +\n                    txAsString(tx) +\n                    \"\\nprofile: \" +\n                    tx.profileReport\n            );\n        }\n        if (isAlreadyInitialized && !force) {\n            throw new Error(\n                `helper is already initialized; use the submitTx from the testing-context's 'strella' object instead`\n            );\n        }\n\n        console.log(\n            `Test helper ${force || \"\"} submitting tx${\n                (force && \"\") || \" prior to instantiateWithParams()\"\n            }:\\n` + txAsString(tx)\n            // new Error(`at stack`).stack\n        );\n\n        try {\n            const txId = await this.network.submitTx(tx);\n            console.log(\"test helper submitted direct txn:\" + txAsString(tx));\n            this.network.tick(1n);\n            // await this.delay(1000)\n            // debugger\n            // this.network.dump();\n            return txId;\n        } catch (e: any) {\n            console.error(\n                `submit failed: ${e.message}\\n  ... in tx ${txAsString(tx)}`\n            );\n            throw e;\n        }\n    }\n\n    mkRandomBytes(length: number): number[] {\n        if (!this.randomSeed)\n            throw new Error(\n                `test must set context.randomSeed for deterministic randomness in tests`\n            );\n        if (!this.rand) this.rand = Crypto.rand(this.randomSeed);\n\n        const bytes: number[] = [];\n        for (let i = 0; i < length; i++) {\n            bytes.push(Math.floor(this.rand() * 256));\n        }\n        return bytes;\n    }\n\n    /**\n     * creates a new Actor in the transaction context with initial funds, returning a Wallet object\n     * @remarks\n     *\n     * Given an actor name (\"marcie\") or role name (\"marketer\"), and a number\n     * of indicated lovelace, creates and returns a wallet having the indicated starting balance.\n     *\n     * By default, three additional, separate 5-ADA utxos are created, to ensure sufficient Collateral and\n     * small-change are existing, making typical transaction scenarios work easily.  If you want to include\n     * other utxo's instead you can supply their lovelace sizes.\n     *\n     * To suppress creation of additional utxos, use `0n` for arg3.\n     *\n     * You may wish to import {@link ADA} = 1_000_000n from the testing/ module, and\n     * multiply smaller integers by that constant.\n     *\n     * @param roleName - an actor name or role-name for this wallet\n     * @param walletBalance - initial wallet balance\n     * @param moreUtxos - additional utxos to include\n     *\n     * @example\n     *     this.addActor(\"cheapo\", 14n * ADA, 0n);  //  14 ADA and no additional utxos\n     *     this.addActor(\"flexible\", 14n * ADA);  //  14 ADA + default 15 ADA in 3 additional utxos\n     *     this.addActor(\"moneyBags\", 42_000_000n * ADA, 5n, 4n);  //  many ADA and two collaterals\n     *\n     *     //  3O ADA in 6 separate utxos:\n     *     this.addActor(\"smallChange\", 5n * ADA, 5n * ADA, 5n * ADA, 5n * ADA, 5n * ADA, 5n * ADA);\n     *\n     * @public\n     **/\n    addActor(\n        roleName: string,\n        walletBalance: bigint,\n        ...moreUtxos: bigint[]\n    ): Wallet {\n        if (this.actors[roleName])\n            throw new Error(`duplicate role name '${roleName}'`);\n        //! it instantiates a wallet with the indicated balance pre-set\n\n        const a = this.network.createWallet(walletBalance);\n        const addr = a.address\n            .toBech32();\n        console.log(\n            `+🎭 Actor: ${roleName}: ${addr\n                .slice(0, 12)}…${addr.slice(-4)} ${lovelaceToAda(\n                walletBalance\n            )} (🔑#${a.address.pubKeyHash?.hex.substring(0, 8)}…)`\n        );\n\n        //! it makes collateral for each actor, above and beyond the initial balance,\n        //  ... so that the full balance is spendable and the actor can immediately\n        //  ... engage in smart-contract interactions.\n        this.network.tick(BigInt(2));\n        const five = 5n * ADA\n        if (0 == moreUtxos.length) moreUtxos = [five, five, five];\n        for (const moreLovelace of moreUtxos) {\n            if (moreLovelace > 0n) {\n                this.network.createUtxo(a, moreLovelace);\n            }\n        }\n        this.network.tick(BigInt(1));\n\n        this.actors[roleName] = a;\n        return a;\n    }\n\n    mkNetwork(): [NetworkEmulator, enhancedNetworkParams] {\n        const theNetwork = new NetworkEmulator();\n\n        //@ts-expect-error with missing methods\n        const emuParams = theNetwork.initNetworkParams({\n            ...preProdParams,\n            raw: { ...preProdParams },\n        }) as enhancedNetworkParams;\n\n        // debugger\n        //@xxxts-expect-error\n        // emuParams.timeToSlot = function (t) {\n        //     const seconds = BigInt(t / 1000n);\n        //     return seconds;\n        // };\n        // emuParams.slotToTimestamp = this.slotToTimestamp;\n\n        return [theNetwork, emuParams];\n    }\n\n    slotToTimestamp(s: bigint) {\n        return this.networkParams.slotToTime(s);\n\n        const num = parseInt(BigInt.asIntN(52, s * 1000n).toString());\n        return new Date(num);\n    }\n\n    currentSlot() {\n        return this.liveSlotParams.liveSlot;\n    }\n\n    waitUntil(time: Date) {\n        const targetTimeMillis = BigInt(time.getTime());\n        // debugger\n        const targetSlot = this.networkParams.timeToSlot(targetTimeMillis);\n        const c = this.currentSlot();\n\n        const slotsToWait = targetSlot - (c || 0n);\n        if (slotsToWait < 1) {\n            throw new Error(`the indicated time is not in the future`);\n        }\n        // console.warn(`waiting ${slotsToWait} slots -> ${time}`);\n        this.network.tick(slotsToWait);\n        return slotsToWait;\n    }\n}\n","import {\n    Capo,\n} from \"../Capo.js\";\nimport type {\n    CapoBaseConfig,\n    MinterBaseMethods,\n    anyDatumArgs,\n    hasBootstrappedConfig,\n    hasUutContext,\n} from \"../Capo.js\";\n\nimport { StellarTxnContext } from \"../StellarTxnContext.js\";\nimport { StellarTestHelper } from \"./StellarTestHelper.js\";\nimport type { MinimalDefaultCharterDatumArgs } from \"../DefaultCapo.js\";\nimport { DefaultMinter } from \"../minting/DefaultMinter.js\";\n\n/**\n * Base class for test helpers for Capo contracts\n * @remarks\n * \n * Unless you have a custom Capo not based on DefaultCapo, you \n * should probably use DefaultCapoTestHelper instead of this class.\n * @public\n **/\nexport abstract class CapoTestHelper<\n    SC extends Capo<DefaultMinter & MinterBaseMethods, CDT, CT>,\n    CDT extends anyDatumArgs = //prettier-ignore\n        SC extends Capo<DefaultMinter, infer iCDT> ? iCDT : anyDatumArgs, //prettier-ignore\n    CT extends CapoBaseConfig  =  //prettier-ignore\n        SC extends Capo<any, any, infer iCT> ? iCT : never //prettier-ignore\n> extends StellarTestHelper<SC> {\n    async initialize({\n        randomSeed = 42,\n        config,\n    }: { config?: CT; randomSeed?: number } = {}): Promise<SC> {\n        if (this.setupPending) await this.setupPending;\n        if (this.strella && this.randomSeed == randomSeed) {\n            console.log(\n                \"       ----- skipped duplicate setup() in test helper\"\n            );\n\n            return this.strella;\n        }\n        if (this.strella)\n            console.log(\n                `  ---  new test helper setup with new seed (was ${this.randomSeed}, now ${randomSeed})...\\n` +\n                    new Error(\"stack\")\n                        .stack!.split(\"\\n\")\n                        .slice(1)\n                        .filter(\n                            (line) =>\n                                !line.match(/node_modules/) &&\n                                !line.match(/node:internal/)\n                        )\n                        .join(\"\\n\")\n            );\n        this.randomSeed = randomSeed;\n        this.state.mintedCharterToken = undefined;\n        // console.log(new Error(\"setup from\").stack)\n\n        //! when there's not a preset config, it leaves the detailed setup to be done just-in-time\n        //   based on seedUtxo in mkTxnMintCharterToken\n        if (!config)\n            return (this.strella = this.initStrella(this.stellarClass));\n\n        //@ts-expect-error either we got too fancy for Typescript, or the other way round\n        const strella = this.initStrella(this.stellarClass, config);\n\n        this.strella = strella;\n        const { address, mintingPolicyHash: mph } = strella;\n\n        const { name } = strella.scriptProgram!;\n        console.log(\n            name,\n            address.toBech32().substring(0, 18) + \"…\",\n            \"vHash 📜 \" +\n                strella.compiledScript.validatorHash.hex.substring(0, 12) +\n                \"…\",\n            \"mph 🏦 \" + mph?.hex.substring(0, 12) + \"…\"\n        );\n        return strella;\n    }\n    \n    get ready() {\n        return !!(this.strella.configIn || this.state.parsedConfig)\n    }\n\n    async bootstrap(args?: MinimalDefaultCharterDatumArgs) {\n        let strella = this.strella || (await this.initialize());\n        if (this.ready) return;\n\n        await this.mintCharterToken(args);\n        return strella;\n    }\n    \n    abstract mkDefaultCharterArgs(): Partial<MinimalDefaultCharterDatumArgs<any>>\n    abstract mintCharterToken(\n        args?: MinimalDefaultCharterDatumArgs<any>\n    ): Promise<\n        & hasUutContext<\"govAuthority\" | \"capoGov\" | \"mintDelegate\" | \"mintDgt\">\n        & hasBootstrappedConfig<CapoBaseConfig>\n    >\n}\n","//@ts-nocheck\n\n//! this file implements a workaround for a problem\n//  ... where a second imported .hl file in a single .ts file\n//  ... causes the dts rollup plugin to not find the second .hl file\nimport type { HeliosModuleSrc } from \"../HeliosModuleSrc.js\";\nimport basics from \"./UnspecializedMintDelegate.hl\";\n\nexport const UnspecializedMintDelegate: HeliosModuleSrc = basics;\n","//@ts-nocheck\n\n//! this file implements a workaround for a problem\n//  ... where a second imported .hl file in a single .ts file\n//  ... causes the dts rollup plugin to not find the second .hl file\nimport type { HeliosModuleSrc } from \"./HeliosModuleSrc.js\";\nimport basics from \"./UnspecializedCapo.hl\";\n\nexport const UnspecializedCapo: HeliosModuleSrc = basics;\n","//@ts-nocheck\n\n//! this file implements a workaround for a problem\n//  ... where a second imported .hl file in a single .ts file\n//  ... causes the dts rollup plugin to not find the second .hl file\nimport ch from \"./CapoHelpers.hl\";\nimport type { HeliosModuleSrc } from \"./HeliosModuleSrc.js\";\n\nexport const CapoHelpers: HeliosModuleSrc = ch;\n","import {\n    Address,\n    AssetClass,\n    Datum,\n    TxInput,\n    TxOutput,\n    Value,\n} from \"@hyperionbt/helios\";\n\n//@ts-expect-error because TS can't import non-ts content : /\nimport contract from \"./BasicMintDelegate.hl\";\n//@ts-expect-error because TS can't import non-ts content : /\nimport StellarHeliosHelpers from \"../StellarHeliosHelpers.hl\";\n\nimport {\n    Activity,\n} from \"../StellarContract.js\";\nimport type {\n    configBase,\n} from \"../StellarContract.js\";\nimport { StellarTxnContext } from \"../StellarTxnContext.js\";\nimport type {\n    capoDelegateConfig,\n} from \"../delegation/RolesAndDelegates.js\";\n\n\nimport { StellarDelegate } from \"../delegation/StellarDelegate.js\";\nimport type { InlineDatum } from \"../HeliosPromotedTypes.js\";\nimport { CapoDelegateHelpers } from \"../delegation/CapoDelegateHelpers.js\";\nimport { CapoMintHelpers } from \"../CapoMintHelpers.js\";\nimport type { HeliosModuleSrc } from \"../HeliosModuleSrc.js\";\nimport { UnspecializedMintDelegate } from \"./UnspecializedMintDelegate.js\";\nimport { UnspecializedCapo } from \"../UnspecializedCapo.js\";\nimport { CapoHelpers } from \"../CapoHelpers.js\";\n\nexport type MintDelegateArgs = capoDelegateConfig & {\n    rev: bigint;\n};\n\n//!!! TODO: include adapter(s) for Datum, which has the same essential shape\ntype MintDelegateDatumProps = {\n    tokenName: string;\n    maxMintSize: bigint;\n};\n\n/**\n * Serves a delegated minting-policy role for Capo contracts\n * @remarks\n * \n * shifts detailed minting policy out of the minter and into the delegate.\n * @public\n **/\nexport class BasicMintDelegate extends StellarDelegate<MintDelegateArgs> {\n    static currentRev = 1n;\n    static get defaultParams() {\n        return { rev: this.currentRev };\n    }\n\n    contractSource() {\n        return contract;\n    }\n\n    /**\n     * specializedMintDelegate module for customizing policies atop the basic mint delegate\n     * @public\n     * @remarks\n     * \n     * The basic mint delegate contains an \"unspecialized\" implementation of this customization,\n     * which doesn't have any special restrictions.  It reserves a CustomConfig field\n     * at position 2 in the IsDelegation datum, allowing customizations to use any \n     * struct in that position to express any custom configurations.  \n     **/\n    get specializedMintDelegate(): HeliosModuleSrc {\n        return UnspecializedMintDelegate;\n    }\n\n    get specializedCapo(): HeliosModuleSrc {\n        return UnspecializedCapo;\n    }\n\n    importModules(): HeliosModuleSrc[] {\n        const specializedMintDelegate = this.specializedMintDelegate;\n        if (specializedMintDelegate.moduleName !== \"specializedMintDelegate\") {\n            throw new Error(\n                `${this.constructor.name}: specializedMintDelegate() module name must be ` +\n                    `'specializedMintDelegate', not '${specializedMintDelegate.moduleName}'\\n  ... in ${specializedMintDelegate.srcFile}`\n            );\n        }\n\n        return [\n            StellarHeliosHelpers,\n            CapoDelegateHelpers,\n            CapoHelpers,\n            CapoMintHelpers,\n            specializedMintDelegate,\n            this.specializedCapo\n        ];\n    }\n\n    get scriptDatumName() {\n        return \"MintDelegateDatum\";\n    }\n    get scriptActivitiesName() {\n        return \"MintDelegateActivity\";\n    }\n\n    getContractScriptParams(config: MintDelegateArgs): configBase {\n        return {\n            rev: config.rev,\n        };\n    }\n\n    /**\n     * Adds a mint-delegate-specific authority token to the txn output\n     * @remarks\n     * \n     * Implements {@link StellarDelegate.txnReceiveAuthorityToken | txnReceiveAuthorityToken() }.\n     * \n     * Uses {@link BasicMintDelegate.mkDelegationDatum | mkDelegationDatum()} to make the inline Datum for the output.\n     * @see {@link StellarDelegate.txnReceiveAuthorityToken | baseline txnReceiveAuthorityToken()'s doc }\n     * @public\n     **/\n    async txnReceiveAuthorityToken<TCX extends StellarTxnContext>(\n        tcx: TCX,\n        tokenValue: Value,\n        fromFoundUtxo?: TxInput\n    ): Promise<TCX> {\n        console.log(\n            `     ----- minting delegate validator receiving mintDgt token at `+\n            this.address.validatorHash!.hex\n        )\n        // const ffu = fromFoundUtxo;\n        // const v : Value = ffu?.value || this.mkMinAssetValue(this.configIn!.uut);\n        const datum = this.mkDelegationDatum(fromFoundUtxo);\n        return tcx.addOutput(new TxOutput(this.address, tokenValue, datum));\n    }\n\n    mkDelegationDatum(txin?: TxInput) {\n        if (txin) return txin.origOutput.datum!;\n        const { capoAddr, mph, tn, ..._otherCfgSettings } = this.configIn!;\n\n        return this.mkDatumIsDelegation({\n            capoAddr,\n            mph,\n            tn,\n        });\n    }\n\n    @Activity.partialTxn\n    async txnCreatingTokenPolicy(tcx: StellarTxnContext, tokenName: string) {\n        return tcx;\n    }\n\n    static mkDelegateWithArgs(a: MintDelegateArgs) {}\n}\n","import type { capoDelegateConfig } from \"../delegation/RolesAndDelegates.js\";\nimport { StellarDelegate } from \"../delegation/StellarDelegate.js\";\n\n/**\n * Generic class as base for pure authorization\n * @remarks\n * \n * This isn't different from StellarDelegate, but\n * using it as a base class more specific than \"any delegate\"\n * gives useful semantics for Capo's govAuthority role\n * @public\n **/\nexport abstract class AuthorityPolicy<\n    T extends capoDelegateConfig = capoDelegateConfig\n> extends StellarDelegate<T> {\n\n}\n","import {\n    Address,\n    AssetClass,\n    Assets,\n    TxInput,\n    TxOutput,\n    Value,\n    bytesToText,\n} from \"@hyperionbt/helios\";\nimport type { SeedTxnParams } from \"../SeedTxn.js\";\nimport { Activity, StellarContract, partialTxn } from \"../StellarContract.js\";\n\nimport type { isActivity } from \"../StellarContract.js\";\n\nimport { StellarTxnContext } from \"../StellarTxnContext.js\";\nimport { StellarDelegate } from \"../delegation/StellarDelegate.js\";\nimport { AuthorityPolicy } from \"./AuthorityPolicy.js\";\nimport { dumpAny } from \"../diagnostics.js\";\n\n/**\n * Token-based authority\n * @remarks\n * \n * Transferrable authority using a unique token and no smart-contract.\n *     Network,\n    Wallet,\n\n * @public\n **/\nexport class AnyAddressAuthorityPolicy extends AuthorityPolicy {\n    loadProgramScript(params) {\n        return undefined;\n    }\n\n    get delegateValidatorHash() {\n        return undefined;\n    }\n\n    @Activity.redeemer\n    protected usingAuthority(): isActivity {\n        const { usingAuthority } = this.onChainActivitiesType;\n        if (!usingAuthority) {\n            throw new Error(\n                `invalid contract without a usingAuthority activity`\n            );\n        }\n        const t = new usingAuthority();\n\n        return { redeemer: t._toUplcData() };\n    }\n\n    /**\n     * Finds the delegate authority token, normally in the delegate's contract address\n     * @public\n     * @remarks\n     *\n     * The default implementation finds the UTxO having the authority token\n     * in the delegate's contract address.\n     *\n     * It's possible to have a delegate that doesn't have an on-chain contract script.\n     * ... in this case, the delegate should use this.{@link StellarDelegate.tvAuthorityToken | tvAuthorityToken()} and a\n     * delegate-specific heuristic to locate the needed token.  It might consult the\n     * addrHint in its `configIn` or another technique for resolution.\n     *\n     * @param tcx - the transaction context\n     * @reqt It MUST resolve and return the UTxO (a TxInput type ready for spending)\n     *  ... or throw an informative error\n     **/\n    async findAuthorityToken(): Promise<TxInput | undefined> {\n        const { wallet } = this;\n        return this.hasUtxo(\n            `authority token: ${bytesToText(this.configIn!.tn)}`,\n            this.mkTokenPredicate(this.tvAuthorityToken()),\n            { wallet }\n        );\n    }\n\n    async findActorAuthorityToken(): Promise<TxInput | undefined> {\n        return this.findAuthorityToken();\n    }\n\n    //! impls MUST resolve the indicated token to a specific UTxO\n    //  ... or throw an informative error\n    async DelegateMustFindAuthorityToken(\n        tcx: StellarTxnContext,\n        label: string\n    ): Promise<TxInput> {\n        const v = this.tvAuthorityToken();\n        const { addrHint } = this.configIn!;\n\n        return this.mustFindActorUtxo(\n            `${label}: ${bytesToText(this.configIn!.tn)}`,\n            this.mkTokenPredicate(v),\n            tcx,\n            \"are you connected to the right wallet address? \" +\n                (addrHint?.length\n                    ? \"  maybe at:\\n    \" + addrHint.join(\"\\n or \")\n                    : \"\")\n        );\n    }\n\n    async txnReceiveAuthorityToken<TCX extends StellarTxnContext>(\n        tcx: TCX,\n        tokenValue: Value,\n        fromFoundUtxo: TxInput\n    ): Promise<TCX> {\n        let dest: Address;\n        console.log(\"🐞🐞  receive authority token\");\n        if (fromFoundUtxo) {\n            dest = fromFoundUtxo.address;\n            console.log(\"    🐞🐞  \" + dumpAny(fromFoundUtxo.address));\n        } else {\n            if (!this.configIn?.addrHint?.[0])\n                throw new Error(`missing addrHint`);\n            const {\n                addrHint,\n                // reqdAddress,  // removed\n            } = this.configIn;\n            dest = addrHint[0];\n        }\n\n        const output = new TxOutput(dest, tokenValue);\n        output.correctLovelace(this.networkParams);\n        tcx.addOutput(output);\n        console.log(\"    🐞🐞  ...with output\" + dumpAny(output));\n\n        return tcx;\n    }\n\n    //! Adds the indicated token to the txn as an input with apporpriate activity/redeemer\n    //! EXPECTS to receive a Utxo having the result of txnMustFindAuthorityToken()\n    async DelegateAddsAuthorityToken<TCX extends StellarTxnContext>(\n        tcx: TCX,\n        fromFoundUtxo: TxInput\n    ): Promise<TCX> {\n        //! no need to specify a redeemer\n        return tcx.addInput(fromFoundUtxo);\n    }\n\n    //! Adds the indicated utxo to the transaction with appropriate activity/redeemer\n    //  ... allowing the token to be burned by the minting policy.\n    //! EXPECTS to receive a Utxo having the result of txnMustFindAuthorityToken()\n    async DelegateRetiresAuthorityToken(\n        tcx: StellarTxnContext,\n        fromFoundUtxo: TxInput\n    ): Promise<StellarTxnContext> {\n        //! no need to specify a redeemer\n        return tcx.addInput(fromFoundUtxo);\n    }\n}\n","import { Address, AssetClass, TxInput, Value } from \"@hyperionbt/helios\";\n\n//@ts-expect-error\nimport contract from \"./MultisigAuthorityPolicy.hl\";\nexport const MultisigAuthorityScript = contract;\n\nimport { StellarTxnContext} from \"../StellarTxnContext.js\";\nimport { hasReqts } from \"../Requirements.js\";\nimport { AuthorityPolicy } from \"./AuthorityPolicy.js\";\n\n//! a contract enforcing policy for a registered credential\nexport class MultisigAuthorityPolicy extends AuthorityPolicy {\n    static currentRev = 1n;\n    static get defaultParams() {\n        return { rev: this.currentRev };\n    }\n    contractSource() {\n        return contract;\n    }\n\n    // @Activity.partialTxn\n    // async txnFresheningCredInfo(\n    //     tcx: StellarTxnContext,\n    //     tokenName: string\n    // ): Promise<StellarTxnContext> {\n    //     return tcx\n    // }\n\n    async txnReceiveAuthorityToken<\n        TCX extends StellarTxnContext\n    >(\n        tcx: TCX, \n        val: Value, \n        fromFoundUtxo?: TxInput | undefined\n    ): Promise<TCX> {\n        throw new Error(`todo`)        \n    }\n\n    //! Adds the indicated token to the txn as an input with apporpriate activity/redeemer\n    async DelegateAddsAuthorityToken<TCX extends StellarTxnContext>(\n        tcx: TCX,\n        fromFoundUtxo: TxInput\n    ): Promise<TCX> {\n        throw new Error(`todo`)\n        return tcx;\n    }\n\n    //! Adds the indicated utxo to the transaction with appropriate activity/redeemer\n    //  ... allowing the token to be burned by the minting policy.\n    async DelegateRetiresAuthorityToken(\n        tcx: StellarTxnContext,\n        fromFoundUtxo: TxInput\n    ): Promise<StellarTxnContext> {\n        return tcx;\n    }\n\n    requirements() {\n        return hasReqts({\n            \"provides arms-length proof of authority to any other contract\": {\n                purpose:\n                    \"to decouple authority administration from its effects\",\n                details: [\n                    \"See GenericAuthority for more background on authority delegation.\",\n                    \"This policy uses a trustee list and minSigs threshold to provide multisig-based authority\",\n                ],\n                mech: [],\n                requires: [\n                    \"positively governs spend of the UUT\",\n                    \"the trustee threshold is required to spend its UUT\",\n                    \"the trustee group can be changed\",\n                ],\n            },\n            \"positively governs spend of the UUT\": {\n                purpose: \"to maintain clear control by a trustee group\",\n                details: [\n                    // descriptive details of the requirement (not the tech):\n                    \"a trustee group is defined during contract creation\",\n                    \"the trustee list's signatures provide consent\",\n                    \"the trustee group can evolve by consent of the trustee group\",\n                    \"a threshold set of the trustee group can give consent for the whole group\",\n                ],\n                mech: [\n                    // descriptive details of the chosen mechanisms for implementing the reqts:\n                    \"the UUT has a trustee list in its Datum structure\",\n                    \"the UUT has a threshold setting in its Datum structure\",\n                    \"the Settings datum is updated when needed to reflect new trustees/thresholds\",\n                ],\n                requires: [\n                    \"TODO: has a unique authority UUT\",\n                    \"TODO: the trustee threshold is required to spend its UUT\",\n                    \"TODO: the trustee group can be changed\",\n                ],\n            },\n            \"TODO: has a unique authority UUT\": hasReqts.TODO,\n            \"TODO: the trustee threshold is required to spend its UUT\":\n                hasReqts.TODO,\n            \"TODO: the trustee group can be changed\": hasReqts.TODO,\n\n            \"the trustee threshold is required to spend its UUT\": {\n                purpose:\n                    \"allows progress in case a small fraction of trustees may not be available\",\n                details: [\n                    \"A group can indicate how many of the trustees are required to provide their explicit approval\",\n                    \"If a small number of trustees lose their keys, this allows the remaining trustees to directly regroup\",\n                    \"For example, they can replace the trustee list with a new set of trustees and a new approval threshold\",\n                    \"Normal day-to-day administrative activities can also be conducted while a small number of trustees are on vacation or otherwise temporarily unavailable\",\n                ],\n                mech: [\n                    \"TODO: doesn't allow the UUT to be spent without enough minSigs from the trustee list\",\n                ],\n                requires: [],\n            },\n\n            \"the trustee group can be changed\": {\n                purpose: \"to ensure administrative continuity for the group\",\n                details: [\n                    \"When the needed threshold for administrative modifications is achieved, the Settings datum can be updated\",\n                    \"When changing trustees, it should guard against mistakes in the new trustee list, \",\n                    \"  ... by validating signatures of the new trustees\",\n                    \"  ... and by validating new minSigs\",\n                ],\n                mech: [\n                    \"TODO: trustee list can be changed if the signature threshold is met\",\n                    \"TODO: the new trustees must sign any change of trustees\",\n                    \"TODO: does not allow minSigs to exceed the number of trustees\",\n                ],\n                requires: [],\n            },\n        });\n    }\n}\n","import { Address, AssetClass, TxInput, Value } from \"@hyperionbt/helios\";\n\n//@ts-expect-error because TS can't import non-ts content : /\nimport contract from \"./BasicMintDelegate.hl\";\nimport { Activity,  } from \"../StellarContract.js\";\nimport type { configBase } from \"../StellarContract.js\";\n\nimport { StellarTxnContext } from \"../StellarTxnContext.js\";\nimport type { MintDelegateArgs } from \"./BasicMintDelegate.js\";\nimport { StellarDelegate } from \"../delegation/StellarDelegate.js\";\n\n/**\n * Stores the mintDgt UUT together with the charter, thus requiring that the \n * govAuthority delegate directly approves any mint\n * @remarks\n * \n * @public\n **/\nexport class NoMintDelegation\n    extends StellarDelegate<MintDelegateArgs>\n{\n    static currentRev = 1n;\n    static get defaultParams() {\n        return { rev: this.currentRev };\n    }\n\nde\n    contractSource() {\n        return contract;\n    }\n\n    getContractScriptParams(config: MintDelegateArgs): configBase {\n        return {\n            rev: config.rev,\n        };\n    }\n    txnReceiveAuthorityToken<TCX extends StellarTxnContext>(\n        tcx: TCX,\n        value: Value,\n        fromFoundUtxo?: TxInput | undefined\n    ): Promise<TCX> {\n        throw new Error(`todo`);\n    }\n\n    @Activity.partialTxn\n    async txnCreatingTokenPolicy(\n        tcx: StellarTxnContext,\n        tokenName: string\n    ): Promise<StellarTxnContext> {\n        return tcx;\n    }\n\n    static mkDelegateWithArgs(a: MintDelegateArgs) {}\n}\n","import {\n    Address,\n    Program,\n    Tx,\n    UplcProgram,\n    TxOutput,\n    Value,\n    //@ts-expect-error\n    Option,\n    Datum,\n    TxInput,\n    DatumHash,\n    ByteArray,\n    Assets,\n    TxId,\n    UplcData,\n    Signature,\n    AssetClass,\n    ValidatorHash,\n    MintingPolicyHash,\n} from \"@hyperionbt/helios\";\n\nimport type { Wallet } from \"@hyperionbt/helios\";\n\nimport type { isActivity } from \"./StellarContract.js\";\n\nimport {\n    Activity,\n    datum,\n    partialTxn,\n    StellarContract,\n    txn,\n} from \"./StellarContract.js\";\nimport type { InlineDatum } from \"./HeliosPromotedTypes.js\";\n\nimport { StellarTxnContext } from \"./StellarTxnContext.js\";\n\n//@ts-expect-error\nimport contract from \"./DefaultCapo.hl\";\nexport { contract };\n// import contract from \"./BaselineCapo.hl\";\nimport { Capo } from \"./Capo.js\";\nimport type {\n    CapoBaseConfig,\n    hasBootstrappedConfig,\n    hasUutContext,\n    rootCapoConfig,\n} from \"./Capo.js\";\nimport type { DefaultMinter } from \"./minting/DefaultMinter.js\";\nimport {\n    delegateRoles,\n    defineRole,\n    delegateLinkSerializer,\n} from \"./delegation/RolesAndDelegates.js\";\nimport type {\n    ErrorMap,\n    RelativeDelegateLink,\n    strategyValidation,\n} from \"./delegation/RolesAndDelegates.js\";\nimport { BasicMintDelegate } from \"./minting/BasicMintDelegate.js\";\nimport { AnyAddressAuthorityPolicy } from \"./authority/AnyAddressAuthorityPolicy.js\";\nimport { txAsString } from \"./diagnostics.js\";\nimport { MultisigAuthorityPolicy } from \"./authority/MultisigAuthorityPolicy.js\";\nimport { hasReqts } from \"./Requirements.js\";\nimport type { HeliosModuleSrc } from \"./HeliosModuleSrc.js\";\nimport { UnspecializedCapo } from \"./UnspecializedCapo.js\";\nimport { NoMintDelegation } from \"./minting/NoMintDelegation.js\";\nimport { CapoHelpers } from \"./CapoHelpers.js\";\nimport { AuthorityPolicy } from \"./authority/AuthorityPolicy.js\";\nimport { StellarDelegate } from \"./delegation/StellarDelegate.js\";\n\n/**\n * Schema for Charter Datum, which allows state to be stored in the Leader contract\n * together with it's primary or \"charter\" utxo.\n * @public\n **/\nexport type DefaultCharterDatumArgs = {\n    govAuthorityLink: RelativeDelegateLink<AuthorityPolicy>;\n    mintDelegateLink: RelativeDelegateLink<BasicMintDelegate>;\n};\n\n/**\n * Includes key details needed to create a delegate link\n * @remarks\n *\n * Requires a `strategyName` and may include a partial `config` for the targeted SC contract type\n *\n * Because delegates can be of different subtypes, the SC and `config` are typically\n * generic at the type level.  When using the `config` entry for a specific delegate subtype,\n * additional details might be needed (not expected to be the norm).\n *\n * uutName can't be specified in this structure because creating a delegate link\n * should use txnMustGetSeedUtxo() instead, minting a new UUT for the purpose.\n * If you seek to reuse an existing uutName, probably you're modifying an existing\n * full RelativeDelegateLink structure instead - e.g. with a different `strategy` and\n * `config`; this type wouldn't be involved in that case.\n *\n * @typeParam SC - the type of StellarContract targeted for delegation\n * @public\n **/\nexport type MinimalDelegateLink<SC extends StellarDelegate<any>> = Required<\n    Pick<RelativeDelegateLink<SC>, \"strategyName\">\n> &\n    Partial<Omit<RelativeDelegateLink<SC>, \"uutName\">>;\n\n/**\n * Establishes minimum requirements for creating a charter-datum\n * @remarks\n *\n * requires a baseline configuration for the gov authority and mint delegate.\n *\n * @typeParam DAT - a charter-datum type that may have additional properties in case of advanced extensions to DefaultCapo.\n * @public\n **/\nexport type MinimalDefaultCharterDatumArgs<\n    DAT extends DefaultCharterDatumArgs = DefaultCharterDatumArgs\n> = {\n    // RemainingMinimalCharterDatumArgs<DAT> & {\n    govAuthorityLink: MinimalDelegateLink<AuthorityPolicy>;\n    mintDelegateLink?: MinimalDelegateLink<BasicMintDelegate>;\n};\n//!!! todo enable \"other\" datum args - (ideally, those other than delegate-link types) to be inlcuded in MDCDA above.\nexport type RemainingMinimalCharterDatumArgs<\n    DAT extends DefaultCharterDatumArgs = DefaultCharterDatumArgs\n> = Omit<DAT, \"govAuthorityLink\" | \"mintDelegateLink\">;\n\nexport type HeldAssetsArgs = {\n    purposeId?: string;\n    purpose?: string;\n};\n\n/**\n * Base class for leader contracts, with predefined roles for delegating governance authority and minting policies\n * @remarks\n * \n *  * A Capo contract provides a central contract address that can act as a treasury or data registry;\n * it can mint tokens using its connected minting-policy, and it can delegate policies to other contract \n * scripts.  Subclasses of Capo can use these capabilities in custom ways for strong flexibility.\n\n * Subclass and customize DefaultCapo's type-parameters if you need to customize further.\n * \n * Any Capo contract can (and must) define roles() to establish collaborating scripts; these are used for \n * separating granular responsbilities for different functional purposes within your (on-chain and off-chain) \n * application; this approach enables delegates to use any one of multiple strategies with different\n * functional logic to serve in any given role, thus providing flexibility and extensibility.\n *\n * DefaultCapo provides roles for govAuthority and mintDelegate, and methods to facilitate \n * the lifecycle of charter creation & update. \n * \n * **Example: Multisig authority delegation** - a Capo contract would get much more complicated if it \n * contained multisig logic.  Instead, the governance authority for the Capo can be delegated to a \n * standalone multi-sig contract, which can contain all (and only) the multi-sig logic.  Separating the \n * responsibilities makes each part simpler, easing the process of ensuring each part is doing its job \n * perfectly :pray:\n * \n * A Capo subclass can decorate an existing entry from `super.roles()` with additional strategy entries, or can add \n * extra roles useful in the operation of its application.\n * \n * The Capo base class provides utilities for creating and using UUT's, or **unique utility tokens**, \n * which are non-fungible assets that can form a positive linkage between the Capo (which should \n * normally retain a reference to that UUT) and any delegate; that delegate is most commonly another \n * contract script also referenced within the roles() definition, with a selected strategy.  \n * \n * Architecturally, UUTs provide a simple and unique handle for the Capo to use as a  **required transaction element** \n * in key operational activities (like updating the charter details); so that the delegate holding the UUT is entrusted to\n * approved the UUT's inclusion in a transaction, with all the policy-enforcement implicated on the other end of the \n * delegation.\n * \n * Customizing Datum and Activity\n * \n * The baseline contract script can have specialized Datum and Activity (\"redeemer\")\n * definitions by subclassing DefaultCapo with a `get specializedCapo()`.  This\n * should be an imported helios script having `module specializedCapo` at the top.\n * It MUST export Datum and Activity enums, with variants matching those in the provided \n * baseline/unspecializedCapo module.  \n * \n * A customized Datum::validateSpend(self, ctx) -\\> Bool method\n * should be defined, even if it doesn't put constraints on spending Datum.  \n * If it does choose to add hard constraints, note that this method doesn't\n * have access to the Activity (\"redeemer\") type.  It's a simple place to express simple\n * constraints on spending a custom Datum that only needs one 'spendingDatum' \n * activity.  \n * \n * A customized Activity: allowActivity(self, datum, ctx) -\\> Bool method\n * has access to both the redeemer (in self), as well as Datum and the transaction \n * context.  In this method, use self.switch\\{...\\} to implement activity-specific\n * validations.\n* \n * See the {@link Capo | Capo base class} and {@link StellarContract} for addition context.\n * @public\n */\n\nexport class DefaultCapo<\n    MinterType extends DefaultMinter = DefaultMinter,\n    CDT extends DefaultCharterDatumArgs = DefaultCharterDatumArgs,\n    configType extends CapoBaseConfig = CapoBaseConfig\n> extends Capo<MinterType, CDT, configType> {\n    contractSource() {\n        return contract;\n    }\n    static parseConfig(rawJsonConfig: any) {\n        const { mph, rev, seedTxn, seedIndex, rootCapoScriptHash } =\n            rawJsonConfig;\n\n        const outputConfig: any = {};\n        if (mph) outputConfig.mph = MintingPolicyHash.fromHex(mph.bytes);\n        if (rev) outputConfig.rev = BigInt(rev);\n        if (seedTxn) outputConfig.seedTxn = TxId.fromHex(seedTxn.bytes);\n        if (seedIndex) outputConfig.seedIndex = BigInt(seedIndex);\n        if (rootCapoScriptHash)\n            outputConfig.rootCapoScriptHash = ValidatorHash.fromHex(\n                rootCapoScriptHash.bytes\n            );\n\n        return outputConfig;\n    }\n\n    /**\n     * indicates any specialization of the baseline Capo types\n     * @remarks\n     *\n     * The default implementation is an UnspecialiedCapo, which\n     * you can use as a template for your specialized Capo.\n     *\n     * Every specalization MUST include Datum and Activity (\"redeemer\") enums,\n     * and MAY include additional functions, and methods on Datum / Activity.\n     *\n     * The datum SHOULD have a validateSpend(self, datum, ctx) method.\n     *\n     * The redeemer SHOULD have an allowActivity(self, datum, ctx) method.\n     *\n     * @public\n     **/\n    get specializedCapo(): HeliosModuleSrc {\n        return UnspecializedCapo;\n    }\n\n    /**\n     * indicates any specialization of the baseline Capo types\n     * @remarks\n     *\n     * The default implementation is an UnspecialiedCapo, which\n     * you can use as a template for your specialized Capo.\n     *\n     * Every specalization MUST include Datum and  Activity (\"redeemer\") enums,\n     * and MAY include additional functions, and methods on Datum / Activity.\n     *\n     * The datum enum SHOULD have a validateSpend(self, datum, ctx) method.\n     *\n     * The activity enum SHOULD have an allowActivity(self, datum, ctx) method.\n     *\n     * @public\n     **/\n    get capoHelpers(): HeliosModuleSrc {\n        return CapoHelpers;\n    }\n\n    importModules(): HeliosModuleSrc[] {\n        const parentModules = super.importModules();\n        const specializedCapo = this.specializedCapo;\n        if (specializedCapo.moduleName !== \"specializedCapo\") {\n            throw new Error(\n                `${this.constructor.name}: specializedCapo() module name must be ` +\n                    `'specializedCapo', not '${specializedCapo.moduleName}'\\n  ... in ${specializedCapo.srcFile}`\n            );\n        }\n\n        return [specializedCapo, this.capoHelpers, ...parentModules];\n    }\n\n    // // @Activity.redeemer\n    // updatingCharter() : isActivity {\n    //     return this.updatingDefaultCharter()\n    // }\n\n    /**\n     * Use the `delegateRoles` getter instead\n     * @remarks\n     *\n     * this no-op method is a convenience for Stellar Contracts maintainers\n     * and intuitive developers using autocomplete.  Including it enables an entry\n     * in VSCode \"Outline\" view, which doesn't include the delegateRoles getter : /\n     * @deprecated but please keep as a kind of redirect\n     * @public\n     **/\n    getDelegateRoles() {\n        throw new Error(`use the delegateRoles getter instead`); // for javascript devs\n    }\n\n    get delegateRoles() {\n        return delegateRoles({\n            govAuthority: defineRole(\"capoGov\", AuthorityPolicy, {\n                address: {\n                    delegateClass: AnyAddressAuthorityPolicy,\n                    validateConfig(args): strategyValidation {\n                        const { rev, tn, addrHint } = args;\n\n                        const errors: ErrorMap = {};\n                        if (!rev) errors.rev = [\"required\"];\n                        if (!tn?.length) errors.tn = [\"(token-name) required\"];\n\n                        if (!addrHint?.length)\n                            errors.addrHint = [\"destination address required\"];\n                        if (Object.keys(errors).length > 0) return errors;\n\n                        return undefined;\n                    },\n                },\n                multisig: {\n                    delegateClass: MultisigAuthorityPolicy,\n                    validateConfig(args): strategyValidation {\n                        const { rev, uut } = args;\n                        const errors: ErrorMap = {};\n                        if (!rev) errors.rev = [\"required\"];\n                        if (!uut) errors.uut = [\"required\"];\n                        if (Object.keys(errors).length > 0) return errors;\n\n                        return undefined;\n                    },\n                },\n            }),\n            mintDelegate: defineRole(\"mintDgt\", BasicMintDelegate, {\n                default: {\n                    delegateClass: BasicMintDelegate,\n                    partialConfig: {},\n                    validateConfig(args): strategyValidation {\n                        return undefined;\n                    },\n                },\n                // undelegated: { ... todo ... }\n            }),\n        });\n    }\n\n    /**\n     * Performs a validation of all critical delegate connections\n     * @remarks\n     *\n     * Checks that each delegate connection is correct and that the underlying\n     * scripts for those delegates have not been modified in unplanned ways.\n     *\n     * Every Capo subclass that adds new delegate types SHOULD implement\n     * this method, performing any checks needed to verify the scripts underlying\n     * those delegate-types.  It should return `Promise.all([ super(), ...myOwnChecks])`.\n     * @public\n     **/\n    async verifyCoreDelegates() {\n        const rcsh = this.configIn?.rootCapoScriptHash;\n        if (rcsh && !rcsh.eq(this.address.validatorHash!)) {\n            console.error(\n                `expected: ` +\n                    rcsh.hex +\n                    `\\n  actual: ` +\n                    this.address.validatorHash!.hex\n            );\n\n            throw new Error(\n                `${this.constructor.name}: the leader contract script '${this.scriptProgram?.name}', or one of its dependencies, has been modified`\n            );\n        }\n        this.connectMinter();\n\n        const charter = await this.findCharterDatum();\n        const { govAuthorityLink, mintDelegateLink } = charter;\n\n        return Promise.all([\n            this.connectDelegateWithLink(\"govAuthority\", govAuthorityLink),\n            this.connectDelegateWithLink(\"mintDelegate\", mintDelegateLink),\n        ]);\n    }\n\n    mkOnchainDelegateLink(dl: RelativeDelegateLink<any>) {\n        const { RelativeDelegateLink: hlRelativeDelegateLink } =\n            this.onChainTypes;\n\n        let {\n            uutName,\n            strategyName,\n            delegateValidatorHash,\n            config,\n            // reqdAddress: canRequireAddr,\n            // addrHint = [],\n        } = dl;\n        const OptValidator = Option(ValidatorHash);\n        // const needsAddr = new OptAddr(canRequireAddr);\n\n        return new hlRelativeDelegateLink(\n            uutName,\n            strategyName,\n            new OptValidator(delegateValidatorHash)\n            // config //!!! todo - support inline config if/when needed\n            // needsAddr,\n            // addrHint\n        );\n    }\n\n    @datum\n    mkDatumCharterToken(args: CDT): InlineDatum {\n        //!!! todo: make it possible to type these datum helpers more strongly\n        //  ... at the interface to Helios\n        console.log(\"--> mkDatumCharter\", args);\n        const { CharterToken: hlCharterToken } = this.onChainDatumType;\n\n        const govAuthority = this.mkOnchainDelegateLink(args.govAuthorityLink);\n        const mintDelegate = this.mkOnchainDelegateLink(args.mintDelegateLink);\n        const t = new hlCharterToken(govAuthority, mintDelegate);\n        return Datum.inline(t._toUplcData());\n    }\n\n    async findCharterDatum() {\n        return this.mustFindCharterUtxo().then(async (ctUtxo: TxInput) => {\n            const charterDatum = await this.readDatum<DefaultCharterDatumArgs>(\n                \"CharterToken\",\n                ctUtxo.origOutput.datum as InlineDatum\n            );\n            if (!charterDatum) throw Error(`invalid charter UTxO datum`);\n            return charterDatum;\n        });\n    }\n\n    async findGovDelegate() {\n        const charterDatum = await this.findCharterDatum();\n        const capoGovDelegate =\n            await this.connectDelegateWithLink<AuthorityPolicy>(\n                \"govAuthority\",\n                charterDatum.govAuthorityLink\n            );\n        console.log(\n            \"finding charter's govDelegate via link\",\n            charterDatum.govAuthorityLink\n        );\n\n        return capoGovDelegate;\n    }\n\n    async txnAddGovAuthority<TCX extends StellarTxnContext>(\n        tcx: TCX\n    ): Promise<TCX> {\n        const capoGovDelegate = await this.findGovDelegate();\n        console.log(\"adding charter's govAuthority\");\n\n        return capoGovDelegate.txnGrantAuthority(tcx);\n    }\n\n    // getMinterParams() {\n    //     const { seedTxn, seedIdx } = this.configIn\n    //     return { seedTxn, seedIdx }\n    // }\n\n    /**\n     * should emit a complete configuration structure that can reconstitute a contract (suite) after its first bootstrap transaction\n     * @remarks\n     *\n     * mkFullConfig is called during a bootstrap transaction.  The default implementation works\n     * for subclasses as long as they use CapoBaseConfig for their config type.  Or, if they're\n     * instantiated with a partialConfig that augments CapoBaseConfig with concrete details that\n     * fulfill their extensions to the config type.\n     *\n     * If you have a custom mkBootstrapTxn() that uses techniques to explicitly add config\n     * properties not provided by your usage of `partialConfig` in the constructor, then you'll\n     * need to provide a more specific impl of mkFullConfig().  It's recommended that you\n     * call super.mkFullConfig() from your impl.\n     * @param baseConfig - receives the BaseConfig properties: mph, seedTxn and seedIndex\n     * @public\n     **/\n\n    mkFullConfig(\n        baseConfig: CapoBaseConfig\n    ): CapoBaseConfig & configType & rootCapoConfig {\n        const pCfg = this.partialConfig || {};\n\n        const newClass = this.constructor;\n        // @ts-expect-error using constructor in this way\n        const newCapo = newClass.bootstrapWith({\n            setup: this.setup,\n            config: { ...baseConfig, ...pCfg },\n        });\n        return {\n            ...baseConfig,\n            ...pCfg,\n            rootCapoScriptHash: newCapo.compiledScript.validatorHash,\n        } as configType & CapoBaseConfig & rootCapoConfig;\n    }\n\n    async mkTxnMintingUuts<\n        const purposes extends string,\n        existingTcx extends StellarTxnContext,\n        const RM extends Record<ROLES, purposes>,\n        const ROLES extends keyof RM & string = string & keyof RM\n    >(\n        initialTcx: existingTcx,\n        uutPurposes: purposes[],\n        seedUtxo?: TxInput | undefined,\n        roles?: RM\n    ): Promise<hasUutContext<ROLES | purposes> & existingTcx> {\n        const tcx = await super.mkTxnMintingUuts(\n            initialTcx,\n            uutPurposes,\n            seedUtxo,\n            roles\n        );\n        const tcx2 = await this.txnMustUseCharterUtxo(tcx, \"refInput\");\n        return this.txnAddMintDelegate(tcx);\n    }\n\n    async getMintDelegate() {\n        const charterDatum = await this.findCharterDatum();\n\n        return this.connectDelegateWithLink(\n            \"mintDelegate\",\n            charterDatum.mintDelegateLink\n        );\n    }\n\n    async getGovDelegate() {\n        const charterDatum = await this.findCharterDatum();\n\n        return this.connectDelegateWithLink(\n            \"govDelegate\",\n            charterDatum.govAuthorityLink\n        );\n    }\n\n    async txnAddMintDelegate<TCX extends StellarTxnContext>(\n        tcx: TCX\n    ): Promise<TCX> {\n        const mintDelegate = await this.getMintDelegate();\n\n        await mintDelegate.txnGrantAuthority(tcx);\n        return tcx;\n    }\n\n    /**\n     * {@inheritdoc Capo.mkTxnMintCharterToken}\n     * @public\n     **/\n    @txn\n    //@ts-expect-error - typescript can't seem to understand that\n    //    <Type> - govAuthorityLink + govAuthorityLink is <Type> again\n    async mkTxnMintCharterToken<TCX extends StellarTxnContext>(\n        charterDatumArgs: MinimalDefaultCharterDatumArgs<CDT>,\n        existingTcx?: TCX\n    ): Promise<\n        | never\n        | (hasUutContext<\n              \"govAuthority\" | \"capoGov\" | \"mintDelegate\" | \"mintDgt\"\n          > &\n              TCX &\n              hasBootstrappedConfig<CapoBaseConfig & configType>)\n    > {\n        if (this.configIn)\n            throw new Error(\n                `this contract suite is already configured and can't be re-chartered`\n            );\n\n        type hasBsc = hasBootstrappedConfig<CapoBaseConfig & configType>;\n        //@ts-expect-error yet another case of seemingly spurious \"could be instantiated with a different subtype\" (actual fixes welcome :pray:)\n        const initialTcx: TCX & hasBsc =\n            existingTcx || (new StellarTxnContext(this.myActor) as hasBsc);\n\n        return this.txnMustGetSeedUtxo(initialTcx, \"charter bootstrapping\", [\n            \"charter\",\n        ]).then(async (seedUtxo) => {\n            const { txId: seedTxn, utxoIdx } = seedUtxo.outputId;\n            const seedIndex = BigInt(utxoIdx);\n\n            const minter = this.connectMintingScript({ seedIndex, seedTxn });\n\n            const { mintingPolicyHash: mph } = minter;\n            const rev = this.getCapoRev();\n            const bsc = this.mkFullConfig({\n                mph,\n                rev,\n                seedTxn,\n                seedIndex,\n            });\n            initialTcx.state.bsc = bsc;\n            initialTcx.state.bootstrappedConfig = JSON.parse(\n                JSON.stringify(bsc, delegateLinkSerializer)\n            );\n            const fullScriptParams = (this.contractParams =\n                this.getContractScriptParams(bsc));\n            this.configIn = bsc;\n\n            this.scriptProgram = this.loadProgramScript(fullScriptParams);\n\n            const tcx = await minter.txnWillMintUuts(\n                initialTcx,\n                [\"capoGov\", \"mintDgt\"],\n                seedUtxo,\n                {\n                    govAuthority: \"capoGov\",\n                    mintDelegate: \"mintDgt\",\n                }\n            );\n            const { capoGov, govAuthority, mintDgt, mintDelegate } =\n                tcx.state.uuts;\n            {\n                if (govAuthority !== capoGov)\n                    throw new Error(`assertion can't fail`);\n            }\n\n            const govAuthorityLink = await this.txnCreateDelegateLink<\n                AuthorityPolicy,\n                \"govAuthority\"\n            >(tcx, \"govAuthority\", charterDatumArgs.govAuthorityLink);\n\n            const mintDelegateLink = await this.txnCreateDelegateLink<\n                BasicMintDelegate,\n                \"mintDelegate\"\n            >(tcx, \"mintDelegate\", charterDatumArgs.mintDelegateLink);\n            //@ts-expect-error - typescript can't seem to understand that\n            //    <Type> - govAuthorityLink + govAuthorityLink is <Type> again\n            const fullCharterArgs: DefaultCharterDatumArgs & CDT = {\n                ...charterDatumArgs,\n                govAuthorityLink,\n                mintDelegateLink,\n            };\n            const datum = this.mkDatumCharterToken(fullCharterArgs);\n\n            const charterOut = new TxOutput(\n                this.address,\n                this.tvCharter(),\n                datum\n            );\n            charterOut.correctLovelace(this.networkParams);\n\n            tcx.addInput(seedUtxo);\n            tcx.addOutputs([charterOut]);\n\n            console.log(\n                \" ---------------- CHARTER MINT ---------------------\\n\",\n                txAsString(tcx.tx)\n            );\n            // debugger\n\n            return minter.txnMintingCharter(tcx, {\n                owner: this.address,\n                capoGov, // same as govAuthority,\n                mintDgt,\n            });\n        });\n    }\n\n    @Activity.redeemer\n    updatingCharter(): // args: CDT\n    isActivity {\n        const { updatingCharter } = this.onChainActivitiesType;\n        // let {uut, strategyName, reqdAddress: canRequireAddr, addrHint=[]} = args.govAuthority\n\n        // // const {Option} = this.onChainTypes;\n        // debugger\n        // const OptAddr = Option(Address);\n        // const needsAddr = new OptAddr(canRequireAddr);\n        const t = new updatingCharter();\n        // args.govDelegate,\n        // new hlRelativeDelegateLink(uut, strategyName, needsAddr, addrHint)\n\n        return { redeemer: t._toUplcData() };\n    }\n\n    @txn\n    async mkTxnUpdateCharter(\n        args: CDT,\n        tcx: StellarTxnContext = new StellarTxnContext(this.myActor)\n    ): Promise<StellarTxnContext> {\n        return this.txnUpdateCharterUtxo(\n            tcx,\n            this.updatingCharter(),\n            this.mkDatumCharterToken(args)\n        );\n    }\n\n    requirements() {\n        return hasReqts({\n            \"positively governs all administrative actions\": {\n                purpose: \"to maintain clear control by a trustee group\",\n                details: [\n                    // descriptive details of the requirement (not the tech):\n                    \"a trustee group is defined during contract creation\",\n                    \"the trustee list's signatures provide consent\",\n                    \"the trustee group can evolve by consent of the trustee group\",\n                    \"a threshold set of the trustee group can give consent for the whole group\",\n                ],\n                mech: [\n                    // descriptive details of the chosen mechanisms for implementing the reqts:\n                    \"uses a 'charter' token specialized for this contract\",\n                    \"the charter token has a trustee list in its Datum structure\",\n                    \"the charter token has a threshold setting in its Datum structure\",\n                    \"the charter Datum is updated when needed to reflect new trustees/thresholds\",\n                ],\n                requires: [\n                    \"has a unique, permanent charter token\",\n                    \"has a unique, permanent treasury address\",\n                    \"the trustee threshold is enforced on all administrative actions\",\n                    \"the trustee group can be changed\",\n                    \"the charter token is always kept in the contract\",\n                    \"can mint other tokens, on the authority of the Charter token\",\n                ],\n            },\n\n            \"has a singleton minting policy\": {\n                purpose: \"to mint various tokens authorized by the treasury\",\n                details: [\n                    \"A chosen minting script is bound deterministically to the contract constellation\",\n                    \"Its inaugural (aka 'initial Charter' or 'Charter Mint') transaction creates a charter token\",\n                    \"The minting script can issue further tokens approved by Treasury Trustees\",\n                    \"The minting script does not need to concern itself with details of Treasury Trustee approval\",\n                ],\n                mech: [\n                    \"has an initial UTxO chosen arbitrarily, and that UTxO is consumed during initial Charter\",\n                    \"makes a different address depending on (txId, outputIndex) parameters of the Minting script\",\n                ],\n                requires: [],\n            },\n\n            \"has a unique, permanent treasury address\": {\n                purpose: \"to give continuity for its stakeholders\",\n                details: [\n                    \"One-time creation is ensured by UTxO's unique-spendability property\",\n                    \"Determinism is transferred from the charter utxo to the MPH and to the treasury address\",\n                ],\n                mech: [\n                    \"uses the Minting Policy Hash as the sole parameter for the treasury spending script\",\n                ],\n                requires: [\"has a singleton minting policy\"],\n            },\n\n            \"has a unique, permanent charter token\": {\n                purpose:\n                    \"to guarantee permanent identity of a token constraining administrative actions\",\n                details: [\n                    \"a charter token is uniquely created when bootstrapping the constellation contract\",\n                    \"the charter token can't ever be recreated (it's non-fungible and can't be re-minted)\",\n                    \"the treasury address, minting policy hash, and charter token are all deterministic based on input utxo\",\n                ],\n                impl: \"txnMintCharterToken()\",\n                mech: [\n                    \"creates a unique 'charter' token, with assetId determined from minting-policy-hash+'charter'\",\n                    \"TODO: fails if minSigs is longer than trustee list\",\n                    \"doesn't work with a different spent utxo\",\n                ],\n                requires: [\n                    \"has a singleton minting policy\",\n                    \"the charter token is always kept in the contract\",\n                ],\n            },\n\n            \"the charter token is always kept in the contract\": {\n                purpose:\n                    \"so that the treasury contract is always in control of administrative changes\",\n                details: [\n                    \"The charter token's spendability' is used as a signal of administrative authority for transactions wanting proof of authority\",\n                    \"... thus, other scripts don't need to express any of the authority policy, but can simply verify the token's presence in the txn\",\n                    \"It shouldn't ever be possible to interfere with its spendability, e.g. by bundling it in an inconvenient way with other assets\",\n                    \"By enforcing that the charter token is always returned to the contract, \",\n                    \"... it has assurance of continuing ability to govern the next activity using that token\",\n                    \"Note: the charter mint can bind with any contract having suitable assurances, \",\n                    \"... but we only focus on the case of binding to this treasury contract\",\n                ],\n                mech: [\n                    \"builds transactions with the charter token returned to the contract\",\n                    \"fails to spend the charter token if it's not returned to the contract\",\n                    \"TODO: keeps the charter token separate from other assets in the contract\",\n                ],\n                requires: [],\n            },\n\n            \"can mint other tokens, on the authority of the Charter token\": {\n                purpose:\n                    \"to simplify the logic of minting, while being sure of minting authority\",\n                details: [\n                    \"the minting policy doesn't have to directly enforce the trustee-list policy\",\n                    \"instead, it delegates that to the treasury spending script, \",\n                    \"... and simply requires that the charter token is used for minting anything else\",\n                ],\n                mech: [\n                    \"can build transactions that mint non-'charter' tokens\",\n                    \"requires the charter-token to be spent as proof of authority\",\n                    \"fails if the charter-token is not returned to the treasury\",\n                    \"fails if the charter-token parameters are modified\",\n                ],\n            },\n\n            \"the trustee group can be changed\": {\n                purpose: \"to ensure administrative continuity for the group\",\n                details: [\n                    \"When the needed threshold for administrative modifications is achieved, the Charter Datum can be updated\",\n                    \"This type of administrative action should be explicit and separate from any other administrative activity\",\n                    \"If the CharterToken's Datum is being changed, no other redeemer activities are allowed\",\n                ],\n                mech: [\n                    \"requires the existing threshold of existing trustees to be met\",\n                    \"requires all of the new trustees to sign the transaction\",\n                    \"does not allow minSigs to exceed the number of trustees\",\n                ],\n                requires: [\n                    \"the trustee threshold is enforced on all administrative actions\",\n                ],\n            },\n\n            \"the trustee threshold is enforced on all administrative actions\": {\n                purpose:\n                    \"allows progress in case a small fraction of trustees may not be available\",\n                details: [\n                    \"A group can indicate how many of the trustees are required to provide their explicit approval\",\n                    \"If a small number of trustees lose their keys, this allows the remaining trustees to directly regroup\",\n                    \"For example, they can replace the trustee list with a new set of trustees and a new approval threshold\",\n                    \"Normal day-to-day administrative activities can also be conducted while a small number of trustees are on vacation or otherwise temporarily unavailable\",\n                ],\n                mech: [\n                    \"doesn't allow the charterToken to be sent without enough minSigs from the trustee list\",\n                ],\n                requires: [],\n            },\n\n            foo: {\n                purpose: \"\",\n                details: [],\n                mech: [],\n                requires: [],\n            },\n        });\n    }\n}\n","import type {\n    DefaultCharterDatumArgs,\n    MinimalDefaultCharterDatumArgs,\n} from \"../DefaultCapo.js\";\n\nimport {\n    DefaultCapo,\n} from \"../DefaultCapo.js\";\n\n\nimport { StellarTxnContext } from \"../StellarTxnContext.js\";\nimport { ADA} from \"./types.js\";\nimport type { DefaultCapoTestHelperClass, canHaveRandomSeed, stellarTestHelperSubclass } from \"./types.js\";\nimport { CapoTestHelper } from \"./CapoTestHelper.js\";\nimport type { stellarSubclass } from \"../StellarContract.js\";\nimport {\n    Capo,\n} from \"../Capo.js\";\nimport type {\n    CapoBaseConfig,\n    hasBootstrappedConfig,\n    hasUutContext,\n} from \"../Capo.js\";\nimport { DefaultMinter } from \"../minting/DefaultMinter.js\";\n\nimport type { expect as expectType } from \"vitest\";\n\ndeclare namespace NodeJS {\n    interface Global {\n        expect: typeof expectType\n    }\n}\ndeclare const expect: typeof  expectType;\n\n/**\n * Test helper for classes extending DefaultCapo\n * @remarks\n *\n * Arranges an test environment with predefined actor-names having various amounts of ADA in their (emulated) wallets,\n * and default helpers for setting up test scenarios.  Provides a simplified framework for testing Stellar contracts extending\n * the DefaultCapo class.\n *\n * To use it, you MUST extend DefaultCapoTestHelper<YourStellarCapoClass>.\n *\n * You MUST also implement a getter  for stellarClass, returning the specific class for YourStellarCapoClass\n *\n * You SHOULD also implement a setupActors method to arrange named actors for your test scenarios.\n * It's recommended to identify general roles of different people who will interact with the contract, and create\n * one or more actor names for each role, where the actor names start with the same letter as the role-names.\n * For example, a set of Trustees in a contract might have actor names tina, tracy and tom, while\n * unprivileged Public users might have actor names like pablo and peter.  setupActors() also\n * should pre-assign some ADA funds to each actor: e.g. `this.addActor(‹actorName›, 142n * ADA)`\n *\n * @typeParam DC - the specific DefaultCapo subclass under test\n * @public\n **/\nexport class DefaultCapoTestHelper<\n    //@ts-expect-error spurious fail on mkFullConfig type; it tries to strongly match the generic abstract type\n    //    from (abstract) Capo, instead of paying attention to the clearly-matching concrete version in DefaultCapo\n    DC extends DefaultCapo<DefaultMinter, CDT, CT> = DefaultCapo, //prettier-ignore\n    CDT extends DefaultCharterDatumArgs =        \n        DC extends Capo<DefaultMinter, infer iCDT> ? iCDT : DefaultCharterDatumArgs, //prettier-ignore\n    CT extends CapoBaseConfig  = \n        DC extends Capo<any, any, infer iCT> ? iCT : never //prettier-ignore\n    //@ts-expect-error because of a mismatch between the Capo's abstract mkTxnMintCharterToken's defined constraints\n    //    ... vs the only concrete impl in DefaultCapo, with types that are actually nicely matchy.\n> extends CapoTestHelper<DC, CDT, CT> {\n    /**\n     * Creates a prepared test helper for a given Capo class, with boilerplate built-in\n     *\n     * @remarks\n     *\n     * You may wish to provide an overridden setupActors() method, to arrange actor\n     * names that fit your project's user-roles / profiles.\n     *\n     * You may also wish to add methods that satisfy some of your application's key\n     * use-cases in simple predefined ways, so that your automated tests can re-use\n     * the logic and syntax instead of repeating them in multiple test-cases.\n     *\n     * @param s - your Capo class that extends DefaultCapo\n     * @typeParam DC - no need to specify it; it's inferred from your parameter\n     * @public\n     **/\n    static forCapoClass<DC extends DefaultCapo<DefaultMinter, any, any>>(\n        s: stellarSubclass<DC>\n    ):  DefaultCapoTestHelperClass<DC> {\n        class specificCapoHelper extends DefaultCapoTestHelper<DC> {\n            get stellarClass() {\n                return s;\n            }\n        }\n        return specificCapoHelper;\n    }\n\n    //@ts-expect-error\n    get stellarClass(): stellarSubclass<DC> {\n        //@ts-expect-error\n        return DefaultCapo;\n    }\n\n    //!!! todo: create type-safe ActorMap helper hasActors(), on same pattern as hasRequirements\n    setupActors() {\n        this.addActor(\"tina\", 1100n * ADA);\n        this.addActor(\"tracy\", 13n * ADA);\n        this.addActor(\"tom\", 120n * ADA);\n        this.currentActor = \"tina\";\n    }\n\n    async mkCharterSpendTx(): Promise<StellarTxnContext> {\n        await this.mintCharterToken();\n\n        const treasury = this.strella!;\n        const tcx: StellarTxnContext = new StellarTxnContext(this.currentActor);\n        const tcx2 = await treasury.txnAddGovAuthority(tcx);\n        return treasury.txnMustUseCharterUtxo(tcx2, treasury.usingAuthority());\n\n        // return treasury.txnAddCharterWithAuthority(tcx);\n    }\n\n    mkDefaultCharterArgs(): Partial<MinimalDefaultCharterDatumArgs<CDT>> {\n        const addr = this.currentActor.address;\n        console.log(\"test helper charter -> actor addr\", addr.toBech32());\n        return {\n            govAuthorityLink: {\n                strategyName: \"address\",\n                config: {\n                    addrHint: [addr],\n                },\n            },\n            // mintDelegateLink: {\n            //     strategyName: \"default\",\n            // },\n        };\n    }\n\n    async mintCharterToken(\n        args?: MinimalDefaultCharterDatumArgs<CDT>\n    ): Promise<\n        hasUutContext<\"govAuthority\" | \"capoGov\" | \"mintDelegate\" | \"mintDgt\"> &\n            hasBootstrappedConfig<CapoBaseConfig>\n    > {\n        const { delay } = this;\n        const { tina, tom, tracy } = this.actors;\n\n        if (this.state.mintedCharterToken) {\n            console.warn(\n                \"reusing minted charter from existing testing-context\"\n            );\n            return this.state.mintedCharterToken;\n        }\n\n        if (!this.strella) await this.initialize();\n        const script = this.strella!;\n        const goodArgs = (args ||\n            this.mkDefaultCharterArgs()) as MinimalDefaultCharterDatumArgs<CDT>;\n        // debugger\n\n        const tcx = await script.mkTxnMintCharterToken(goodArgs);\n        const rawConfig = this.state.rawConfig =\n        this.state.config = tcx.state.bootstrappedConfig;\n        \n        this.state.parsedConfig = this.stellarClass.parseConfig(rawConfig)\n\n        expect(script.network).toBe(this.network);\n\n        await script.submit(tcx);\n        console.log(\n            `----- charter token minted at slot ${this.network.currentSlot}`\n        );\n\n        this.network.tick(1n);\n        this.state.mintedCharterToken = tcx;\n        return tcx;\n    }\n\n    async updateCharter(args: CDT): Promise<StellarTxnContext> {\n        await this.mintCharterToken();\n        const treasury = this.strella!;\n\n        const { signers } = this.state;\n\n        const tcx = await treasury.mkTxnUpdateCharter(args);\n        return treasury.submit(tcx, { signers }).then(() => {\n            this.network.tick(1n);\n            return tcx;\n        });\n    }\n}\n","// declare module \"@donecollectively/stellar-contracts/testing\";\n\nexport { CapoTestHelper } from \"./CapoTestHelper.js\";\n\nexport { ADA, addTestContext } from \"./types.js\";\nexport type { DefaultCapoTestHelperClass } from \"./types.js\";\n\nexport const insufficientInputError =\n    /(need .* lovelace, but only have|transaction doesn't have enough inputs)/;\n\nexport type { StellarTestContext } from \"./StellarTestContext.js\";\n\nError.stackTraceLimit = 100;\n\nexport { DefaultCapoTestHelper } from \"./DefaultCapoTestHelper.js\";\nexport { StellarTestHelper } from \"./StellarTestHelper.js\";\n"],"names":["x","config","helios.config","datum","name","e","tcx","__decorateClass","cmh","cdh","contract","StellarHeliosHelpers","seedUtxo","params","helios.Value","basics","ch"],"mappings":";;;AAiBgB,SAAA,cAAA,CAAe,KAAa,QAAmC,EAAA;AAE3E,EAAM,MAAA,MAAA,GAA0B,IAAI,MAAA,CAAO,GAAG,CAAA,CAAA;AAC9C,EAAM,MAAA,CAAC,GAAG,OAAS,EAAA,UAAU,IACzB,GAAI,CAAA,KAAA,CAAM,sDAAsD,CAAA,IAAK,EAAC,CAAA;AAE1E,EAAA,MAAA,CAAO,OAAU,GAAA,QAAA,CAAA;AACjB,EAAA,MAAA,CAAO,OAAU,GAAA,OAAA,CAAA;AACjB,EAAA,MAAA,CAAO,UAAa,GAAA,UAAA,CAAA;AAEpB,EAAO,OAAA,MAAA,CAAA;AACX;;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAM,OAAO,GAAG,QAAQ,CAAC;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAM,GAAG,GAAG,IAAI,CAAC;AACxB;AACA;AACA;AACA;AACA;AACA;AACO,MAAM,cAAc,GAAG,CAAC,CAAC;AAChC;AACA;AACA;AACA;AACA;AACO,MAAM,MAAM,GAAG;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,GAAG,EAAE,CAAC,KAAK,KAAK;AACpB,QAAQ,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC,CAAC,IAAI;AACxC,YAAY,MAAM,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;AACjC,SAAS,CAAC,CAAC;AACX,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,KAAK,EAAE,KAAK;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,cAAc,EAAE,KAAK;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,UAAU,EAAE,IAAI;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,cAAc,EAAE,CAAC;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,uBAAuB,EAAE,KAAK;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,2BAA2B,EAAE,EAAE;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,yBAAyB,EAAE,GAAG;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,4BAA4B,EAAE,KAAK;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,WAAW,EAAE,KAAK;AACtB;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,4BAA4B,EAAE,SAAS;AAC3C,EAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS,MAAM,CAAC,IAAI,EAAE,GAAG,GAAG,YAAY,EAAE;AACjD,CAAC,IAAI,CAAC,IAAI,EAAE;AACZ,EAAE,MAAM,IAAI,KAAK,CAAC,GAAG,CAAC,CAAC;AACvB,EAAE;AACF,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS,aAAa,CAAC,GAAG,EAAE,GAAG,GAAG,4BAA4B,EAAE;AACvE,CAAC,IAAI,GAAG,KAAK,SAAS,IAAI,GAAG,KAAK,IAAI,GAAG;AACzC,EAAE,MAAM,IAAI,KAAK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E,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;AAClE,YAAY,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;AAClE,YAAY,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;AAClE,YAAY,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC;AAClE,YAAY,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC;AAClE,YAAY,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC;AAClE,YAAY,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EA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E,OAAO,EAAE,OAAO,EAAE,SAAS,EAAE,OAAO,EAAE,OAAO,EAAE,KAAK,EAAE,OAAO,EAAE,OAAO,EAAE,QAAQ,EAAE,OAAO,EAAE,OAAO,EAAE,SAAS,EAAE,MAAM,EAAE,OAAO,EAAE,QAAQ,EAAE,SAAS,EAAE,SAAS,EAAE,OAAO,EAAE,QAAQ,EAAE,QAAQ,EAAE,SAAS,EAAE,QAAQ,EAAE,SAAS,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,QAAQ,EAAE,OAAO,EAAE,UAAU,EAAE,QAAQ,EAAE,SAAS,EAAE,QAAQ,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,KAAK,EAAE,OAAO,EAAE,SAAS,EAAE,QAAQ,EAAE,OAAO,EAAE,SAAS,EAAE,OAAO,EAAE,MAAM,EAAE,QAAQ,EAAE,MAAM,EAAE,OAAO,EAAE,OAAO,EAAE,KAAK,EAAE,OAAO,EAAE,OAAO,EAAE,MAAM,EAAE,QAAQ,EAAE,SAAS,EAAE,QAAQ,EAAE,QAAQ,EAAE,OAAO,EAAE,KAAK,EAAE,UAAU,EAAE,QAAQ,EAAE,SAAS,EAAE,KAAK,EAAE,QAAQ,EAAE,SAAS,EAAE,OAAO,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,SAAS,EAAE,MAAM,EAAE,QAAQ,EAAE,QAAQ,EAAE,UAAU,EAAE,SAAS,EAAE,SAAS,EAAE,OAAO,EAAE,QAAQ,EAAE,MAAM,EAAE,QAAQ,EAAE,MAAM,EAAE,QAAQ,EAAE,SAAS,EAAE,SAAS,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,MAAM,EAAE,SAAS,EAAE,OAAO,EAAE,SAAS,EAAE,MAAM;AAClyC,IAAI,MAAM,EAAE,UAAU,EAAE,OAAO,EAAE,OAAO,EAAE,KAAK,EAAE,SAAS,EAAE,SAAS,EAAE,MAAM,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,KAAK,EAAE,QAAQ,EAAE,SAAS,EAAE,QAAQ,EAAE,MAAM,EAAE,OAAO,EAAE,QAAQ,EAAE,QAAQ,EAAE,OAAO,EAAE,MAAM,EAAE,QAAQ,EAAE,SAAS,EAAE,QAAQ,EAAE,MAAM,EAAE,QAAQ,EAAE,OAAO,EAAE,QAAQ,EAAE,QAAQ,EAAE,SAAS,EAAE,OAAO,EAAE,MAAM,EAAE,OAAO,EAAE,SAAS,EAAE,MAAM,EAAE,QAAQ,EAAE,QAAQ,EAAE,SAAS,EAAE,QAAQ,EAAE,SAAS,EAAE,KAAK,EAAE,MAAM,EAAE,MAAM,EAAE,SAAS,EAAE,MAAM,EAAE,OAAO,EAAE,QAAQ,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,SAAS,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,SAAS,EAAE,QAAQ,EAAE,MAAM,EAAE,MAAM,EAAE,OAAO,EAAE,OAAO,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,OAAO,EAAE,MAAM,EAAE,OAAO,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,MAAM,EAAE,QAAQ,EAAE,QAAQ,EAAE,KAAK,EAAE,KAAK,EAAE,SAAS,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,QAAQ,EAAE,OAAO,EAAE,QAAQ,EAAE,OAAO,EAAE,QAAQ,EAAE,OAAO,EAAE,OAAO,EAAE,UAAU,EAAE,QAAQ,EAAE,QAAQ,EAAE,OAAO,EAAE,SAAS,EAAE,OAAO,EAAE,OAAO,EAAE,QAAQ,EAAE,OAAO,EAAE,QAAQ,EAAE,SAAS,EAAE,OAAO,EAAE,MAAM,EAAE,MAAM,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,OAAO,EAAE,KAAK,EAAE,UAAU,EAAE,MAAM,EAAE,QAAQ,EAAE,OAAO,EAAE,MAAM;AACpkC,IAAI,SAAS,EAAE,OAAO,EAAE,OAAO,EAAE,QAAQ,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,QAAQ,EAAE,MAAM,EAAE,KAAK,EAAE,OAAO,EAAE,QAAQ,EAAE,OAAO,EAAE,QAAQ,EAAE,OAAO,EAAE,QAAQ,EAAE,QAAQ,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,KAAK,EAAE,QAAQ,EAAE,MAAM,EAAE,OAAO,EAAE,QAAQ,EAAE,OAAO,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,KAAK,EAAE,SAAS,EAAE,OAAO,EAAE,UAAU,EAAE,QAAQ,EAAE,QAAQ,EAAE,OAAO,EAAE,SAAS,EAAE,MAAM,EAAE,SAAS,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,SAAS,EAAE,QAAQ,EAAE,SAAS,EAAE,OAAO,EAAE,OAAO,EAAE,UAAU,EAAE,QAAQ,EAAE,OAAO,EAAE,SAAS,EAAE,QAAQ,EAAE,OAAO,EAAE,MAAM,EAAE,OAAO,EAAE,OAAO,EAAE,QAAQ,EAAE,MAAM,EAAE,QAAQ,EAAE,OAAO,EAAE,SAAS,EAAE,OAAO,EAAE,OAAO,EAAE,SAAS,EAAE,QAAQ,EAAE,QAAQ,EAAE,SAAS,EAAE,SAAS,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,UAAU,EAAE,QAAQ,EAAE,SAAS,EAAE,MAAM,EAAE,OAAO,EAAE,OAAO,EAAE,MAAM,EAAE,SAAS,EAAE,MAAM,EAAE,MAAM,EAAE,OAAO,EAAE,OAAO,EAAE,QAAQ,EAAE,OAAO,EAAE,QAAQ,EAAE,OAAO,EAAE,OAAO,EAAE,QAAQ,EAAE,MAAM,EAAE,OAAO,EAAE,MAAM,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,MAAM,EAAE,OAAO,EAAE,SAAS,EAAE,QAAQ,EAAE,OAAO,EAAE,OAAO,EAAE,SAAS,EAAE,MAAM,EAAE,QAAQ,EAAE,MAAM,EAAE,MAAM,EAAE,SAAS,EAAE,OAAO,EAAE,QAAQ,EAAE,SAAS,EAAE,MAAM,EAAE,SAAS,EAAE,OAAO,EAAE,QAAQ,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,UAAU,EAAE,SAAS,EAAE,UAAU,EAAE,SAAS,EAAE,UAAU,EAAE,MAAM,EAAE,MAAM,EAAE,QAAQ,EAAE,MAAM,EAAE,OAAO,EAAE,MAAM,EAAE,MAAM,EAAE,SAAS,EAAE,MAAM,EAAE,QAAQ,EAAE,OAAO,EAAE,SAAS,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,OAAO,EAAE,QAAQ,EAAE,OAAO,EAAE,QAAQ,EAAE,OAAO,EAAE,MAAM,EAAE,OAAO,EAAE,OAAO,EAAE,QAAQ,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,QAAQ,EAAE,OAAO,EAAE,MAAM,EAAE,SAAS,EAAE,OAAO,EAAE,OAAO,EAAE,QAAQ,EAAE,MAAM,EAAE,OAAO,EAAE,QAAQ,EAAE,OAAO,EAAE,SAAS,EAAE,OAAO,EAAE,QAAQ,EAAE,SAAS,EAAE,QAAQ,EAAE,OAAO,EAAE,KAAK,EAAE,SAAS,EAAE,MAAM,EAAE,SAAS,EAAE,KAAK,EAAE,UAAU,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,OAAO,EAAE,SAAS,EAAE,QAAQ,EAAE,MAAM,EAAE,OAAO;AAC9uD,IAAI,KAAK,EAAE,QAAQ,EAAE,MAAM,EAAE,OAAO,EAAE,QAAQ,EAAE,QAAQ,EAAE,MAAM,EAAE,UAAU,EAAE,MAAM,EAAE,KAAK,EAAE,MAAM,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,UAAU,EAAE,QAAQ,EAAE,SAAS,EAAE,UAAU,EAAE,UAAU,EAAE,MAAM,EAAE,SAAS,EAAE,QAAQ,EAAE,MAAM,EAAE,QAAQ,EAAE,OAAO,EAAE,SAAS,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,SAAS,EAAE,MAAM,EAAE,QAAQ,EAAE,QAAQ,EAAE,SAAS,EAAE,OAAO,EAAE,QAAQ,EAAE,QAAQ,EAAE,UAAU,EAAE,QAAQ,EAAE,QAAQ,EAAE,MAAM,EAAE,SAAS,EAAE,SAAS,EAAE,QAAQ,EAAE,QAAQ,EAAE,SAAS,EAAE,QAAQ,EAAE,QAAQ,EAAE,SAAS,EAAE,MAAM,EAAE,SAAS,EAAE,OAAO,EAAE,MAAM,EAAE,QAAQ,EAAE,MAAM,EAAE,QAAQ,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,QAAQ,EAAE,UAAU,EAAE,QAAQ,EAAE,MAAM,EAAE,UAAU,EAAE,UAAU,EAAE,SAAS,EAAE,MAAM,EAAE,SAAS,EAAE,UAAU,EAAE,SAAS,EAAE,UAAU,EAAE,QAAQ,EAAE,QAAQ,EAAE,SAAS,EAAE,OAAO,EAAE,QAAQ,EAAE,UAAU,EAAE,KAAK,EAAE,MAAM,EAAE,SAAS,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,OAAO,EAAE,MAAM,EAAE,MAAM,EAAE,QAAQ,EAAE,MAAM,EAAE,OAAO,EAAE,QAAQ,EAAE,OAAO,EAAE,SAAS,EAAE,MAAM,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,MAAM,EAAE,OAAO,EAAE,MAAM,EAAE,MAAM,EAAE,KAAK,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,QAAQ,EAAE,MAAM,EAAE,OAAO,EAAE,MAAM,EAAE,OAAO,EAAE,SAAS;AAC5jC,IAAI,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,MAAM,EAAE,OAAO,EAAE,QAAQ,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,SAAS,EAAE,SAAS,EAAE,MAAM,EAAE,MAAM,EAAE,SAAS,EAAE,QAAQ,EAAE,KAAK,EAAE,OAAO,EAAE,QAAQ,EAAE,OAAO,EAAE,OAAO,EAAE,UAAU,EAAE,SAAS,EAAE,SAAS,EAAE,UAAU,EAAE,UAAU,EAAE,OAAO,EAAE,MAAM,EAAE,QAAQ,EAAE,QAAQ,EAAE,SAAS,EAAE,QAAQ,EAAE,SAAS,EAAE,QAAQ,EAAE,SAAS,EAAE,OAAO,EAAE,QAAQ,EAAE,OAAO,EAAE,KAAK,EAAE,SAAS,EAAE,SAAS,EAAE,OAAO,EAAE,QAAQ,EAAE,SAAS,EAAE,QAAQ,EAAE,QAAQ,EAAE,SAAS,EAAE,OAAO,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,OAAO,EAAE,QAAQ,EAAE,OAAO,EAAE,UAAU,EAAE,SAAS,EAAE,OAAO,EAAE,OAAO,EAAE,KAAK,EAAE,OAAO,EAAE,OAAO,EAAE,SAAS,EAAE,OAAO,EAAE,OAAO,EAAE,QAAQ,EAAE,OAAO,EAAE,SAAS,EAAE,QAAQ,EAAE,SAAS,EAAE,QAAQ,EAAE,UAAU,EAAE,MAAM,EAAE,OAAO,EAAE,QAAQ,EAAE,OAAO,EAAE,SAAS,EAAE,QAAQ,EAAE,UAAU,EAAE,QAAQ,EAAE,SAAS,EAAE,QAAQ,EAAE,SAAS,EAAE,UAAU,EAAE,SAAS,EAAE,SAAS,EAAE,OAAO,EAAE,OAAO,EAAE,MAAM,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,SAAS,EAAE,QAAQ,EAAE,SAAS,EAAE,QAAQ,EAAE,OAAO,EAAE,KAAK,EAAE,SAAS;AACx9B,IAAI,QAAQ,EAAE,MAAM,EAAE,SAAS,EAAE,MAAM,EAAE,OAAO,EAAE,OAAO,EAAE,MAAM,EAAE,OAAO,EAAE,MAAM,EAAE,QAAQ,EAAE,QAAQ,EAAE,KAAK,EAAE,OAAO,EAAE,SAAS,EAAE,MAAM,EAAE,SAAS,EAAE,KAAK,EAAE,OAAO,EAAE,QAAQ,EAAE,SAAS,EAAE,OAAO,EAAE,UAAU,EAAE,SAAS,EAAE,UAAU,EAAE,SAAS,EAAE,KAAK,EAAE,MAAM,EAAE,MAAM,EAAE,QAAQ,EAAE,OAAO,EAAE,UAAU,EAAE,OAAO,EAAE,OAAO,EAAE,KAAK,EAAE,OAAO,EAAE,SAAS,EAAE,OAAO,EAAE,QAAQ,EAAE,MAAM,EAAE,MAAM,EAAE,QAAQ,EAAE,OAAO,EAAE,MAAM,EAAE,MAAM,EAAE,QAAQ,EAAE,QAAQ,EAAE,MAAM,EAAE,MAAM,EAAE,OAAO,EAAE,QAAQ,EAAE,MAAM,EAAE,KAAK,EAAE,SAAS,EAAE,KAAK,EAAE,MAAM,EAAE,OAAO,EAAE,OAAO,EAAE,MAAM,EAAE,QAAQ,EAAE,MAAM,EAAE,QAAQ,EAAE,MAAM,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,QAAQ,EAAE,OAAO,EAAE,OAAO,EAAE,KAAK,EAAE,MAAM,EAAE,OAAO,EAAE,KAAK,EAAE,MAAM,EAAE,MAAM,EAAE,QAAQ,EAAE,MAAM,EAAE,MAAM,EAAE,OAAO,EAAE,QAAQ,EAAE,QAAQ,EAAE,MAAM,EAAE,SAAS,EAAE,OAAO,EAAE,SAAS,EAAE,QAAQ,EAAE,QAAQ,EAAE,OAAO,EAAE,KAAK,EAAE,SAAS,EAAE,OAAO,EAAE,UAAU,EAAE,OAAO,EAAE,QAAQ,EAAE,QAAQ,EAAE,MAAM,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,QAAQ,EAAE,OAAO,EAAE,MAAM,EAAE,KAAK,EAAE,OAAO,EAAE,SAAS,EAAE,MAAM,EAAE,QAAQ;AACv8B,IAAI,QAAQ,EAAE,MAAM,EAAE,QAAQ,EAAE,SAAS,EAAE,MAAM,EAAE,KAAK,EAAE,QAAQ,EAAE,SAAS,EAAE,QAAQ,EAAE,QAAQ,EAAE,SAAS,EAAE,KAAK,EAAE,MAAM,EAAE,MAAM,EAAE,QAAQ,EAAE,OAAO,EAAE,MAAM,EAAE,SAAS,EAAE,QAAQ,EAAE,OAAO,EAAE,QAAQ,EAAE,SAAS,EAAE,SAAS,EAAE,OAAO,EAAE,OAAO,EAAE,MAAM,EAAE,QAAQ,EAAE,QAAQ,EAAE,SAAS,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,QAAQ,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,SAAS,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,SAAS,EAAE,MAAM,EAAE,MAAM,EAAE,OAAO,EAAE,SAAS,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,MAAM,EAAE,MAAM,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,SAAS,EAAE,OAAO,EAAE,OAAO,EAAE,MAAM,EAAE,OAAO,EAAE,MAAM,EAAE,SAAS,EAAE,OAAO,EAAE,MAAM,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,QAAQ,EAAE,KAAK,EAAE,KAAK;AAC1rB,IAAI,OAAO,EAAE,MAAM,EAAE,MAAM,EAAE,QAAQ,EAAE,SAAS,EAAE,MAAM,EAAE,OAAO,EAAE,QAAQ,EAAE,MAAM,EAAE,OAAO,EAAE,SAAS,EAAE,KAAK,EAAE,MAAM,EAAE,MAAM,EAAE,QAAQ,EAAE,MAAM,EAAE,QAAQ,EAAE,OAAO,EAAE,OAAO,EAAE,UAAU,EAAE,QAAQ,EAAE,OAAO,EAAE,QAAQ,EAAE,MAAM,EAAE,KAAK,EAAE,MAAM,EAAE,QAAQ,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,KAAK,EAAE,MAAM,EAAE,SAAS,EAAE,OAAO,EAAE,QAAQ,EAAE,MAAM,EAAE,MAAM,EAAE,SAAS,EAAE,QAAQ,EAAE,MAAM,EAAE,OAAO,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,QAAQ,EAAE,OAAO,EAAE,UAAU,EAAE,MAAM,EAAE,OAAO,EAAE,MAAM,EAAE,OAAO,EAAE,KAAK,EAAE,MAAM,EAAE,OAAO,EAAE,QAAQ,EAAE,OAAO,EAAE,SAAS,EAAE,QAAQ,EAAE,MAAM,EAAE,QAAQ,EAAE,OAAO,EAAE,MAAM,EAAE,SAAS,EAAE,QAAQ;AAClkB,IAAI,KAAK,EAAE,MAAM,EAAE,MAAM,EAAE,UAAU,EAAE,MAAM,EAAE,QAAQ,EAAE,KAAK,EAAE,SAAS,EAAE,SAAS,EAAE,OAAO,EAAE,SAAS,EAAE,SAAS,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,SAAS,EAAE,SAAS,EAAE,MAAM,EAAE,SAAS,EAAE,QAAQ,EAAE,UAAU,EAAE,OAAO,EAAE,UAAU,EAAE,QAAQ,EAAE,UAAU,EAAE,QAAQ,EAAE,SAAS,EAAE,QAAQ,EAAE,QAAQ,EAAE,SAAS,EAAE,SAAS,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,OAAO,EAAE,UAAU,EAAE,OAAO,EAAE,SAAS,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,SAAS,EAAE,SAAS,EAAE,QAAQ,EAAE,UAAU,EAAE,MAAM,EAAE,QAAQ,EAAE,QAAQ,EAAE,SAAS,EAAE,MAAM,EAAE,QAAQ,EAAE,SAAS,EAAE,OAAO,EAAE,MAAM,EAAE,OAAO;AACziB,IAAI,QAAQ,EAAE,QAAQ,EAAE,KAAK,EAAE,MAAM,EAAE,SAAS,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,KAAK,EAAE,MAAM,EAAE,MAAM,EAAE,SAAS,EAAE,KAAK,EAAE,OAAO,EAAE,OAAO,EAAE,MAAM,EAAE,QAAQ,EAAE,QAAQ,EAAE,MAAM,EAAE,MAAM;AAClL,IAAI,UAAU,EAAE,MAAM,EAAE,MAAM,EAAE,SAAS,EAAE,KAAK,EAAE,MAAM,EAAE,KAAK,EAAE,QAAQ,EAAE,MAAM,EAAE,SAAS,EAAE,MAAM,EAAE,KAAK,EAAE,SAAS,EAAE,MAAM,EAAE,QAAQ,EAAE,MAAM,EAAE,MAAM,EAAE,OAAO,EAAE,OAAO,EAAE,MAAM;AAClL,IAAI,KAAK,EAAE,OAAO,EAAE,OAAO,EAAE,QAAQ,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,UAAU,EAAE,QAAQ,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,SAAS,EAAE,MAAM,EAAE,KAAK,EAAE,MAAM,EAAE,SAAS,EAAE,OAAO,EAAE,MAAM,EAAE,QAAQ,EAAE,MAAM,EAAE,OAAO,EAAE,OAAO,EAAE,SAAS,EAAE,MAAM,EAAE,KAAK,EAAE,OAAO,EAAE,QAAQ,EAAE,SAAS,EAAE,OAAO,EAAE,MAAM,EAAE,QAAQ,EAAE,MAAM,EAAE,SAAS,EAAE,QAAQ,EAAE,QAAQ,EAAE,OAAO,EAAE,MAAM,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,MAAM,EAAE,MAAM,EAAE,OAAO,EAAE,MAAM,EAAE,MAAM,EAAE,OAAO,EAAE,MAAM,EAAE,MAAM,EAAE,QAAQ,EAAE,MAAM,EAAE,QAAQ,EAAE,MAAM,EAAE,QAAQ,EAAE,MAAM,EAAE,MAAM,EAAE,SAAS,EAAE,OAAO,EAAE,MAAM,EAAE,OAAO,EAAE,QAAQ,EAAE,MAAM,EAAE,MAAM,EAAE,SAAS,EAAE,MAAM,EAAE,QAAQ,EAAE,MAAM,EAAE,OAAO,EAAE,OAAO,EAAE,SAAS,EAAE,QAAQ,EAAE,OAAO,EAAE,OAAO,EAAE,QAAQ,EAAE,QAAQ;AACtrB,IAAI,SAAS,EAAE,KAAK,EAAE,OAAO,EAAE,QAAQ,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,OAAO,EAAE,MAAM,EAAE,QAAQ,EAAE,KAAK,EAAE,QAAQ,EAAE,SAAS,EAAE,OAAO,EAAE,SAAS,EAAE,QAAQ,EAAE,OAAO,EAAE,QAAQ,EAAE,OAAO,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,UAAU,EAAE,MAAM,EAAE,MAAM,EAAE,QAAQ,EAAE,OAAO,EAAE,UAAU,EAAE,MAAM,EAAE,QAAQ,EAAE,QAAQ,EAAE,SAAS,EAAE,MAAM,EAAE,QAAQ,EAAE,MAAM,EAAE,SAAS,EAAE,MAAM,EAAE,UAAU,EAAE,OAAO,EAAE,OAAO,EAAE,QAAQ,EAAE,MAAM,EAAE,QAAQ,EAAE,QAAQ,EAAE,SAAS,EAAE,MAAM,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,MAAM,EAAE,SAAS,EAAE,OAAO,EAAE,QAAQ,EAAE,QAAQ,EAAE,UAAU,EAAE,MAAM,EAAE,SAAS,EAAE,OAAO,EAAE,MAAM,EAAE,SAAS,EAAE,OAAO,EAAE,QAAQ,EAAE,SAAS,EAAE,QAAQ,EAAE,QAAQ,EAAE,MAAM,EAAE,SAAS,EAAE,KAAK,EAAE,OAAO,EAAE,SAAS,EAAE,QAAQ,EAAE,OAAO,EAAE,QAAQ,EAAE,KAAK,EAAE,QAAQ,EAAE,SAAS,EAAE,QAAQ,EAAE,SAAS,EAAE,OAAO,EAAE,MAAM,EAAE,OAAO,EAAE,MAAM,EAAE,SAAS,EAAE,UAAU,EAAE,QAAQ,EAAE,QAAQ,EAAE,OAAO,EAAE,UAAU,EAAE,OAAO,EAAE,MAAM,EAAE,OAAO,EAAE,MAAM,EAAE,QAAQ,EAAE,MAAM,EAAE,UAAU,EAAE,QAAQ,EAAE,QAAQ,EAAE,UAAU,EAAE,OAAO,EAAE,MAAM,EAAE,QAAQ,EAAE,QAAQ,EAAE,SAAS,EAAE,MAAM;AAC3+B,IAAI,OAAO,EAAE,MAAM,EAAE,QAAQ,EAAE,QAAQ,EAAE,OAAO,EAAE,QAAQ,EAAE,QAAQ,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,UAAU,EAAE,SAAS,EAAE,SAAS,EAAE,QAAQ,EAAE,OAAO,EAAE,MAAM,EAAE,KAAK,EAAE,SAAS,EAAE,SAAS,EAAE,OAAO,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,SAAS,EAAE,QAAQ,EAAE,QAAQ,EAAE,OAAO,EAAE,MAAM,EAAE,SAAS,EAAE,MAAM,EAAE,SAAS,EAAE,QAAQ,EAAE,OAAO,EAAE,KAAK,EAAE,SAAS,EAAE,QAAQ,EAAE,OAAO,EAAE,KAAK;AAC/X,IAAI,KAAK,EAAE,MAAM,EAAE,QAAQ,EAAE,QAAQ,EAAE,SAAS,EAAE,SAAS,EAAE,QAAQ,EAAE,SAAS,EAAE,OAAO,EAAE,OAAO,EAAE,SAAS,EAAE,MAAM,EAAE,KAAK,EAAE,OAAO,EAAE,QAAQ,EAAE,OAAO,EAAE,KAAK,EAAE,MAAM,EAAE,KAAK,EAAE,OAAO,EAAE,SAAS,EAAE,MAAM,EAAE,MAAM,EAAE,KAAK,EAAE,OAAO,EAAE,QAAQ,EAAE,MAAM,EAAE,MAAM,EAAE,OAAO,EAAE,SAAS,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,OAAO,EAAE,SAAS,EAAE,OAAO,EAAE,UAAU,EAAE,OAAO,EAAE,QAAQ,EAAE,UAAU,EAAE,QAAQ,EAAE,SAAS,EAAE,OAAO,EAAE,SAAS,EAAE,OAAO,EAAE,QAAQ,EAAE,SAAS,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,KAAK,EAAE,OAAO,EAAE,QAAQ,EAAE,QAAQ,EAAE,OAAO;AAClgB,IAAI,MAAM,EAAE,QAAQ,EAAE,MAAM,EAAE,MAAM,EAAE,QAAQ,EAAE,MAAM,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,SAAS,EAAE,OAAO,EAAE,QAAQ,EAAE,QAAQ,EAAE,MAAM,EAAE,QAAQ,EAAE,OAAO,EAAE,MAAM,EAAE,OAAO,EAAE,MAAM,EAAE,SAAS,EAAE,QAAQ,EAAE,SAAS,EAAE,OAAO,EAAE,MAAM,EAAE,SAAS,EAAE,OAAO,EAAE,QAAQ,EAAE,MAAM,EAAE,SAAS,EAAE,SAAS,EAAE,KAAK,EAAE,SAAS,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,SAAS,EAAE,QAAQ,EAAE,QAAQ,EAAE,KAAK,EAAE,OAAO,EAAE,OAAO,EAAE,QAAQ,EAAE,UAAU,EAAE,OAAO,EAAE,QAAQ,EAAE,SAAS,EAAE,OAAO,EAAE,KAAK,EAAE,QAAQ,EAAE,MAAM,EAAE,OAAO,EAAE,MAAM,EAAE,SAAS,EAAE,MAAM,EAAE,QAAQ,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,QAAQ,EAAE,SAAS,EAAE,OAAO,EAAE,MAAM,EAAE,QAAQ,EAAE,QAAQ,EAAE,OAAO,EAAE,MAAM,EAAE,QAAQ,EAAE,MAAM,EAAE,MAAM,EAAE,OAAO,EAAE,OAAO,EAAE,MAAM,EAAE,QAAQ,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,SAAS,EAAE,SAAS,EAAE,UAAU,EAAE,UAAU,EAAE,MAAM,EAAE,QAAQ,EAAE,SAAS,EAAE,SAAS,EAAE,QAAQ,EAAE,OAAO,EAAE,UAAU,EAAE,QAAQ,EAAE,SAAS,EAAE,QAAQ,EAAE,SAAS,EAAE,SAAS,EAAE,QAAQ,EAAE,SAAS,EAAE,OAAO,EAAE,OAAO,EAAE,SAAS,EAAE,OAAO,EAAE,UAAU,EAAE,QAAQ,EAAE,SAAS,EAAE,OAAO,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,QAAQ,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,OAAO,EAAE,UAAU,EAAE,SAAS,EAAE,SAAS,EAAE,OAAO,EAAE,SAAS,EAAE,QAAQ,EAAE,SAAS,EAAE,MAAM,EAAE,MAAM,EAAE,OAAO,EAAE,SAAS,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,UAAU,EAAE,QAAQ,EAAE,SAAS,EAAE,OAAO,EAAE,MAAM,EAAE,KAAK,EAAE,QAAQ,EAAE,SAAS;AAC9vC,IAAI,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,UAAU,EAAE,OAAO,EAAE,MAAM,EAAE,MAAM,EAAE,OAAO;AACjF,IAAI,QAAQ,EAAE,SAAS,EAAE,MAAM,EAAE,MAAM,EAAE,OAAO,EAAE,OAAO,EAAE,MAAM,EAAE,MAAM,EAAE,OAAO,EAAE,OAAO,EAAE,MAAM,EAAE,OAAO,EAAE,QAAQ,EAAE,OAAO,EAAE,OAAO,EAAE,MAAM,EAAE,MAAM,EAAE,QAAQ,EAAE,OAAO,EAAE,KAAK,EAAE,OAAO,EAAE,OAAO,EAAE,MAAM,EAAE,QAAQ,EAAE,OAAO,EAAE,SAAS,EAAE,QAAQ,EAAE,SAAS,EAAE,QAAQ,EAAE,QAAQ,EAAE,SAAS,EAAE,QAAQ,EAAE,SAAS,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,SAAS,EAAE,QAAQ,EAAE,OAAO,EAAE,SAAS,EAAE,QAAQ,EAAE,MAAM,EAAE,QAAQ,EAAE,UAAU,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,OAAO,EAAE,MAAM,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,SAAS,EAAE,QAAQ,EAAE,SAAS,EAAE,QAAQ,EAAE,UAAU,EAAE,QAAQ,EAAE,UAAU,EAAE,UAAU,EAAE,QAAQ,EAAE,QAAQ,EAAE,SAAS,EAAE,QAAQ,EAAE,SAAS,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,KAAK,EAAE,QAAQ,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,MAAM,EAAE,MAAM,EAAE,QAAQ,EAAE,MAAM,EAAE,QAAQ,EAAE,OAAO,EAAE,OAAO,EAAE,MAAM,EAAE,OAAO,EAAE,OAAO,EAAE,QAAQ,EAAE,QAAQ,EAAE,SAAS,EAAE,MAAM,EAAE,QAAQ,EAAE,MAAM,EAAE,MAAM,EAAE,QAAQ,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,QAAQ,EAAE,MAAM,EAAE,KAAK,EAAE,MAAM,EAAE,KAAK,EAAE,QAAQ,EAAE,OAAO;AAC5/B,IAAI,KAAK,EAAE,QAAQ,EAAE,SAAS,EAAE,MAAM,EAAE,MAAM,EAAE,OAAO,EAAE,QAAQ,EAAE,OAAO,EAAE,MAAM,EAAE,QAAQ,EAAE,MAAM,EAAE,QAAQ,EAAE,MAAM,EAAE,SAAS,EAAE,SAAS,EAAE,OAAO,EAAE,SAAS,EAAE,MAAM,EAAE,KAAK,EAAE,OAAO,EAAE,MAAM,EAAE,OAAO,EAAE,SAAS,EAAE,OAAO,EAAE,QAAQ,EAAE,QAAQ,EAAE,SAAS,EAAE,UAAU,EAAE,UAAU,EAAE,OAAO,EAAE,OAAO,EAAE,QAAQ,EAAE,QAAQ,EAAE,OAAO,EAAE,KAAK,EAAE,QAAQ,EAAE,QAAQ,EAAE,MAAM,EAAE,QAAQ,EAAE,QAAQ,EAAE,SAAS,EAAE,UAAU,EAAE,MAAM,EAAE,MAAM,EAAE,SAAS,EAAE,QAAQ,EAAE,MAAM,EAAE,SAAS,EAAE,QAAQ,EAAE,OAAO,EAAE,UAAU,EAAE,QAAQ,EAAE,SAAS,EAAE,SAAS,EAAE,QAAQ,EAAE,OAAO,EAAE,OAAO,EAAE,QAAQ,EAAE,OAAO,EAAE,SAAS,EAAE,OAAO,EAAE,MAAM,EAAE,OAAO,EAAE,SAAS,EAAE,QAAQ,EAAE,OAAO,EAAE,OAAO,EAAE,MAAM,EAAE,QAAQ,EAAE,OAAO,EAAE,MAAM,EAAE,OAAO,EAAE,MAAM,EAAE,OAAO,EAAE,UAAU,EAAE,OAAO,EAAE,QAAQ,EAAE,OAAO,EAAE,SAAS,EAAE,KAAK,EAAE,SAAS,EAAE,MAAM,EAAE,MAAM,EAAE,OAAO,EAAE,OAAO,EAAE,MAAM,EAAE,QAAQ,EAAE,MAAM,EAAE,OAAO,EAAE,QAAQ,EAAE,SAAS,EAAE,QAAQ,EAAE,OAAO,EAAE,MAAM,EAAE,OAAO,EAAE,QAAQ,EAAE,SAAS,EAAE,KAAK,EAAE,MAAM,EAAE,OAAO,EAAE,QAAQ,EAAE,KAAK,EAAE,OAAO,EAAE,MAAM,EAAE,OAAO,EAAE,OAAO,EAAE,MAAM,EAAE,MAAM,EAAE,OAAO,EAAE,SAAS,EAAE,OAAO,EAAE,OAAO,EAAE,QAAQ,EAAE,MAAM,EAAE,QAAQ,EAAE,MAAM,EAAE,MAAM,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,QAAQ,EAAE,OAAO,EAAE,OAAO,EAAE,MAAM,EAAE,OAAO,EAAE,MAAM,EAAE,MAAM,EAAE,QAAQ,EAAE,QAAQ,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,OAAO,EAAE,SAAS,EAAE,OAAO,EAAE,UAAU,EAAE,OAAO,EAAE,SAAS,EAAE,MAAM,EAAE,MAAM,EAAE,OAAO,EAAE,MAAM,EAAE,MAAM,EAAE,OAAO,EAAE,MAAM,EAAE,QAAQ,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,SAAS,EAAE,OAAO,EAAE,OAAO,EAAE,SAAS,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,QAAQ,EAAE,OAAO,EAAE,QAAQ,EAAE,OAAO,EAAE,MAAM,EAAE,QAAQ,EAAE,OAAO,EAAE,OAAO,EAAE,SAAS,EAAE,OAAO,EAAE,OAAO,EAAE,MAAM,EAAE,OAAO,EAAE,QAAQ,EAAE,QAAQ,EAAE,KAAK,EAAE,QAAQ,EAAE,SAAS,EAAE,UAAU,EAAE,QAAQ,EAAE,SAAS,EAAE,OAAO,EAAE,OAAO,EAAE,QAAQ,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,MAAM,EAAE,OAAO,EAAE,OAAO,EAAE,MAAM,EAAE,MAAM,EAAE,QAAQ,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,SAAS,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,UAAU,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,UAAU,EAAE,SAAS,EAAE,OAAO,EAAE,SAAS,EAAE,OAAO,EAAE,SAAS,EAAE,QAAQ,EAAE,QAAQ,EAAE,SAAS,EAAE,MAAM,EAAE,QAAQ,EAAE,QAAQ,EAAE,OAAO,EAAE,SAAS,EAAE,MAAM,EAAE,QAAQ,EAAE,KAAK,EAAE,OAAO,EAAE,QAAQ,EAAE,OAAO,EAAE,QAAQ,EAAE,SAAS,EAAE,MAAM,EAAE,SAAS,EAAE,OAAO,EAAE,UAAU,EAAE,UAAU,EAAE,QAAQ,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,OAAO,EAAE,MAAM,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,MAAM,EAAE,OAAO,EAAE,QAAQ,EAAE,OAAO,EAAE,QAAQ,EAAE,SAAS,EAAE,OAAO,EAAE,QAAQ;AAC7yE,IAAI,OAAO,EAAE,QAAQ,EAAE,KAAK,EAAE,MAAM,EAAE,QAAQ,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,QAAQ,EAAE,MAAM,EAAE,OAAO,EAAE,QAAQ,EAAE,MAAM,EAAE,OAAO,EAAE,MAAM,EAAE,MAAM,EAAE,KAAK,EAAE,QAAQ,EAAE,QAAQ,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,OAAO,EAAE,MAAM,EAAE,OAAO,EAAE,MAAM,EAAE,QAAQ,EAAE,OAAO,EAAE,MAAM,EAAE,OAAO,EAAE,MAAM,EAAE,SAAS,EAAE,OAAO,EAAE,QAAQ,EAAE,OAAO,EAAE,OAAO,EAAE,SAAS,EAAE,QAAQ,EAAE,MAAM,EAAE,OAAO,EAAE,MAAM,EAAE,QAAQ,EAAE,MAAM,EAAE,MAAM,EAAE,KAAK,EAAE,OAAO,EAAE,QAAQ,EAAE,OAAO,EAAE,OAAO,EAAE,SAAS,EAAE,OAAO,EAAE,SAAS,EAAE,KAAK,EAAE,UAAU,EAAE,QAAQ,EAAE,OAAO,EAAE,QAAQ,EAAE,UAAU,EAAE,MAAM,EAAE,QAAQ,EAAE,SAAS,EAAE,MAAM,EAAE,OAAO,EAAE,KAAK,EAAE,OAAO,EAAE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;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS,UAAU,CAAC,MAAM,EAAE,OAAO,GAAG,EAAE,EAAE;AACjD,CAAC,IAAI,GAAG,GAAG,IAAI,MAAM,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;AACtC;AACA;AACA,CAAC,IAAI,SAAS,GAAG,IAAI,SAAS,CAAC,GAAG,EAAE,OAAO,EAAE,IAAI,CAAC,CAAC;AACnD;AACA,CAAC,MAAM,EAAE,GAAG,SAAS,CAAC,QAAQ,EAAE,CAAC;AACjC;AACA,CAAC,IAAI,GAAG,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,EAAE;AAC5B,EAAE,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,MAAM,EAAE,CAAC,CAAC;AAC5B,EAAE,MAAM,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;AACtB,EAAE,MAAM,IAAI,EAAE,KAAK,IAAI,EAAE;AACzB,EAAE,MAAM,IAAI,KAAK,CAAC,6BAA6B,CAAC,CAAC;AACjD,EAAE;AACF;AACA,CAAC,OAAO,EAAE,CAAC;AACX,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS,UAAU,CAAC,UAAU,EAAE,GAAG,KAAK,EAAE;AACjD,IAAI,OAAO,aAAa,CAAC,UAAU,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,UAAU,CAAC,CAAC;AAC7D,CAAC;AACD;AACA;AACA;AACA;AACO,MAAM,MAAM,CAAC;AACpB,CAAC,WAAW,GAAG;AACf,EAAE;AACF;AACA;AACA;AACA;AACA,CAAC,YAAY,GAAG;AAChB,EAAE,OAAO,KAAK,CAAC;AACf,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,OAAO,UAAU,CAAC,CAAC,EAAE,CAAC,EAAE;AAC5B,QAAQ,OAAO,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;AAClC,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,OAAO,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE;AACtB,EAAE,OAAO,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;AACxC,EAAE;AACF;AACA;AACA;AACA;AACA,CAAC,OAAO,MAAM,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AACA;AACA;AACA;AACA,EAAE,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,GAAG,CAAC,IAAI,OAAO,CAAC,uBAAuB;AACxC,CAAC,CAAC;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,GAAG,CAAC,IAAI,OAAO,CAAC,0BAA0B;AAC3C,CAAC,CAAC;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,GAAG,CAAC,IAAI,OAAO,CAAC,+BAA+B;AAChD,CAAC,CAAC;AACF;AACA,EAAE,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,GAAG,CAAC,IAAI,OAAO,CAAC,8BAA8B;AAC/C,CAAC,CAAC;AACF;AACA,EAAE,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,GAAG,CAAC,IAAI,OAAO,CAAC,wBAAwB;AACzC,CAAC,CAAC;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,GAAG,CAAC,IAAI,OAAO,CAAC,6BAA6B;AAC9C,CAAC,CAAC;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,GAAG,CAAC,IAAI,OAAO,CAAC,wBAAwB;AACzC,CAAC,CAAC;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,GAAG,CAAC,IAAI,OAAO,CAAC,6BAA6B;AAC9C,CAAC,CAAC;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,GAAG,CAAC,IAAI,OAAO,CAAC,oCAAoC;AACrD,CAAC,CAAC;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,GAAG,CAAC,IAAI,OAAO,CAAC,wBAAwB;AACzC,CAAC,CAAC;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,GAAG,CAAC,IAAI,OAAO,CAAC,2BAA2B;AAC5C,CAAC,CAAC;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,GAAG,CAAC,IAAI,OAAO,CAAC,wCAAwC;AACzD,CAAC,CAAC;AACF;AACA,EAAE,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,GAAG,CAAC,IAAI,OAAO,CAAC,0BAA0B;AAC3C,CAAC,CAAC;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,GAAG,CAAC,IAAI,OAAO,CAAC,0BAA0B;AAC3C,CAAC,CAAC;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,GAAG,CAAC,IAAI,OAAO,CAAC,mCAAmC;AACpD,CAAC,CAAC;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,GAAG,CAAC,IAAI,OAAO,CAAC,+BAA+B;AAChD,CAAC,CAAC;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,GAAG,CAAC,IAAI,OAAO,CAAC,6BAA6B;AAC9C,CAAC,CAAC;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,CAAC,CAAC,CAAC,CAAC;AACN;AACA,CAAC,GAAG,CAAC,IAAI,OAAO,CAAC,+BAA+B;AAChD,CAAC,CAAC;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,CAAC,CAAC,CAAC,CAAC;AACN;AACA,CAAC,GAAG,CAAC,IAAI,OAAO,CAAC,oCAAoC;AACrD,CAAC,CAAC;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,GAAG,CAAC,IAAI,OAAO,CAAC,oCAAoC;AACrD,CAAC,CAAC;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,GAAG,CAAC,IAAI,OAAO,CAAC,+BAA+B;AAChD,CAAC,CAAC;AACF;AACA,EA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A;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,CAAC,CAAC,CAAC,CAAC;AACN;AACA;AACA;AACA,CAAC,GAAG,CAAC,IAAI,OAAO,CAAC,iBAAiB;AAClC,CAAC,CAAC;AACF;AACA,EAAE,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,GAAG,CAAC,IAAI,OAAO,CAAC,iBAAiB;AAClC,CAAC,CAAC;AACF;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,GAAG,CAAC,IAAI,OAAO,CAAC,kBAAkB;AACnC,CAAC,CAAC;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,CAAC,CAAC,CAAC,CAAC;AACN;AACA;AACA;AACA,CAAC,GAAG,CAAC,IAAI,OAAO,CAAC,qBAAqB,EAAE,uBAAuB,CAAC,CAAC,CAAC;AAClE,CAAC,GAAG,CAAC,IAAI,OAAO,CAAC,0BAA0B,EAAE,iBAAiB,CAAC,CAAC,CAAC;AACjE,CAAC,GAAG,CAAC,IAAI,OAAO,CAAC,+BAA+B;AAChD,CAAC,CAAC;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,GAAG,CAAC,IAAI,OAAO,CAAC,0BAA0B,EAAE,CAAC;AAC9C;AACA,EAAE,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,GAAG,CAAC,IAAI,OAAO,CAAC,0BAA0B,EAAE,eAAe,CAAC,CAAC,CAAC;AAC/D,CAAC,UAAU,CAAC,eAAe,CAAC,CAAC;AAC7B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N,CAAC,GAAG,CAAC,IAAI,OAAO,CAAC,8BAA8B;AAC/C,CAAC,CAAC;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,GAAG,CAAC,IAAI,OAAO,CAAC,8BAA8B;AAC/C,CAAC,CAAC;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,GAAG,CAAC,IAAI,OAAO,CAAC,wBAAwB;AACzC,CAAC,CAAC;AACF;AACA;AACA;AACA,EAAE,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,GAAG,CAAC,IAAI,OAAO,CAAC,wBAAwB;AACzC,CAAC,CAAC;AACF;AACA;AACA;AACA,EAAE,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,GAAG,CAAC,IAAI,OAAO,CAAC,uBAAuB;AACxC,CAAC,CAAC;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,GAAG,CAAC,IAAI,OAAO,CAAC,mCAAmC,EAAE,uHAAuH,CAAC,EAAC;AAC/K,CAAC,GAAG,CAAC,IAAI,OAAO,CAAC,0BAA0B;AAC3C,CAAC,CAAC;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,GAAG,CAAC,IAAI,OAAO,CAAC,0CAA0C,EAAE,mIAAmI,CAAC,CAAC,CAAC;AACnM,CAAC,GAAG,CAAC,IAAI,OAAO,CAAC,0CAA0C,EAAE,mIAAmI,CAAC,CAAC,CAAC;AACnM,CAAC,GAAG,CAAC,IAAI,OAAO,CAAC,mCAAmC;AACpD,CAAC,CAAC;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,GAAG,CAAC,IAAI,OAAO,CAAC,4BAA4B;AAC7C,CAAC,CAAC;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,GAAG,CAAC,IAAI,OAAO,CAAC,2BAA2B;AAC5C,CAAC,CAAC;AACF;AACA,EAAE,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,GAAG,CAAC,IAAI,OAAO,CAAC,qBAAqB;AACtC,CAAC,CAAC;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,CAAC,CAAC,CAAC,CAAC;AACN;AACA,CAAC,GAAG,CAAC,IAAI,OAAO,CAAC,4BAA4B;AAC7C,CAAC,CAAC;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,CAAC,CAAC,CAAC,CAAC;AACN;AACA,CAAC,GAAG,CAAC,IAAI,OAAO,CAAC,4BAA4B;AAC7C,CAAC,CAAC;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,GAAG,CAAC,IAAI,OAAO,CAAC,gCAAgC;AACjD,CAAC,CAAC;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,GAAG,CAAC,IAAI,OAAO,CAAC,sBAAsB;AACvC,CAAC,CAAC;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,GAAG,CAAC,IAAI,OAAO,CAAC,gCAAgC;AACjD,CAAC,CAAC;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,GAAG,CAAC,IAAI,OAAO,CAAC,mCAAmC;AACpD,CAAC,CAAC;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,GAAG,CAAC,IAAI,OAAO,CAAC,8BAA8B;AAC/C,CAAC,CAAC;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,GAAG,CAAC,IAAI,OAAO,CAAC,iCAAiC;AAClD,CAAC,CAAC;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,GAAG,CAAC,IAAI,OAAO,CAAC,qBAAqB;AACtC,CAAC,CAAC;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,CAAC,CAAC,CAAC,CAAC;AACN;AACA;AACA;AACA,CAAC,eAAe,CAAC,gBAAgB,CAAC,CAAC;AACnC,CAAC,GAAG,CAAC,IAAI,OAAO,CAAC,2BAA2B,EAAE,0BAA0B,CAAC,CAAC,CAAC;AAC3E,CAAC,GAAG,CAAC,IAAI,OAAO,CAAC,2BAA2B,EAAE,cAAc,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;AAC1E,CAAC,GAAG,CAAC,IAAI,OAAO,CAAC,qBAAqB,EAAE,GAAG,GAAG,IAAI,KAAK,CAAC,cAAc,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,CAA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O,CAAC,sBAAsB;AACvC,CAAC,CAAC;AACF;AACA;AACA;AACA,EAAE,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,GAAG,CAAC,IAAI,OAAO,CAAC,uBAAuB;AACxC,CAAC,CAAC;AACF;AACA;AACA;AACA,EAAE,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,GAAG,CAAC,IAAI,OAAO,CAAC,uBAAuB;AACxC,CAAC,CAAC;AACF;AACA;AACA;AACA,EAAE,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,GAAG,CAAC,IAAI,OAAO,CAAC,sBAAsB;AACvC,CAAC,CAAC;AACF;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,GAAG,CAAC,IAAI,OAAO,CAAC,uBAAuB;AACxC,CAAC,CAAC;AACF;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,GAAG,CAAC,IAAI,OAAO,CAAC,sBAAsB;AACvC,CAAC,CAAC;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,CAAC,CAAC,CAAC,CAAC;AACN;AACA;AACA;AACA,CAAC,gBAAgB,CAAC,gBAAgB,CAAC,CAAC;AACpC,CAAC,GAAG,CAAC,IAAI,OAAO,CAAC,2BAA2B;AAC5C,CAAC,CAAC;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,GAAG,CAAC,IAAI,OAAO,CAAC,sBAAsB;AACvC,CAAC,CAAC;AACF;AACA,EAAE,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,GAAG,CAAC,IAAI,OAAO,CAAC,uBAAuB;AACxC,CAAC,CAAC;A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CA;AACA;AACA;AACA,uBAAuB,EAAE,IAAI,CAAC;AAC9B;AACA;AACA;AACA;AACA,kBAAkB,EAAE,IAAI,CAAC;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,EAAE,IAAI,CAAC;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,CAAC;AACH,GAAG,CAAC,CAAC;AACL;AACA,EAAE,GAAG,CAAC,IAAI,OAAO,CAAC,CAAC,EAAE,QAAQ,CAAC,UAAU,CAAC;AACzC,CAAC,CAAC;AACF;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,EAAE,IAAI,CAAC;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,EAAE,IAAI,CAAC;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,CAAC;AACH,GAAG,CAAC,CAAC;AACL;AACA,EAAE,GAAG,CAAC,IAAI,OAAO,CAAC,CAAC,EAAE,QAAQ,CAAC,OAAO,EAAE,IAAI,CAAC,EAAE,CAAC;AAC/C,CAAC,CAAC;AACF;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,EAAE,IAAI,CAAC;AACvB;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,EAAE,IAAI,CAAC;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,CAAC;AACH,GAAG,CAAC,CAAC;AACL;AACA,EAAE,GAAG,CAAC,IAAI,OAAO,CAAC,CAAC,EAAE,QAAQ,CAAC,MAAM,CAAC;AACrC,CAAC,CAAC;AACF;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,EAAE,IAAI,CAAC;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,EAAE,IAAI,CAAC;AACpB;AACA,WAAW,EAAE,UAAU,CAAC;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,CAAC;AACH,GAAG,CAAC,CAAC;AACL;AACA,EAAE,GAAG,CAAC,IAAI,OAAO,CAAC,CAAC,EAAE,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AAe,EAAE,IAAI,CAAC,YAAY,CAAC,EAAE,0CAA0C,CAAC,CAAC,CAAC;AACpG,CAAC,GAAG,CAAC,IAAI,OAAO,CAAC,CAAC,wCAAwC,CAAC;AAC3D,CAAC,CAAC;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,GAAG,CAAC,IAAI,OAAO,CAAC,CAAC,eAAe,EAAE,IAAI,CAAC,QAAQ,CAAC,EAAE,sCAAsC,CAAC,CAAC,CAAC;AAC5F,CAAC,GAAG,CAAC,IAAI,OAAO,CAAC,sCAAsC;AACvD,CAAC,CAAC;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,GAAG,CAAC,IAAI,OAAO,CAAC,CAAC,eAAe,EAAE,IAAI,CAAC,YAAY,CAAC,EAAE,0CAA0C,CAAC,CAAC,CAAC;AACpG,CAAC,GAAG,CAAC,IAAI,OAAO,CAAC,0CAA0C;AAC3D,CAAC,CAAC;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,GAAG,CAAC,IAAI,OAAO,CAAC,CAAC,eAAe,EAAE,IAAI,CAAC,QAAQ,CAAC,EAAE,sCAAsC,CAAC,CAAC,CAAC;AAC5F,CAAC,GAAG,CAAC,IAAI,OAAO,CAAC,sCAAsC;AACvD,CAAC,CAAC;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,GAAG,CAAC,IAAI,OAAO,CAAC,CAAC,eAAe,EAAE,IAAI,CAAC,YAAY,CAAC,EAAE,0CAA0C,CAAC,CAAC,CAAC;AACpG,CAAC,GAAG,CAAC,IAAI,OAAO,CAAC,CAAC,wCAAwC,CAAC;AAC3D,CAAC,CAAC;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,GAAG,CAAC,IAAI,OAAO,CAAC,CAAC,eAAe,EAAE,IAAI,CAAC,OAAO,CAAC;AAChD,CAAC,CAAC;AACF;AACA;AACA;AACA;AACA,QAAQ,EAAE,IAAI,CAAC;AACf;AACA;AACA;AACA,EAAE,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,GAAG,CAAC,IAAI,OAAO,CAAC,CAAC,eAAe,EAAE,IAAI,CAAC,OAAO,CAAC;AAChD,CAAC,CAAC;AACF;AACA;AACA;AACA;AACA,QAAQ,EAAE,IAAI,CAAC;AACf;AACA;AACA;AACA,EAAE,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,GAAG,CAAC,IAAI,OAAO,CAAC,CAAC,sCAAsC,CAAC;AACzD,CAAC,CAAC;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A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U,EAAE,IAAI,CAAC;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,GAAG,CAAC,IAAI,OAAO,CAAC,CAAC,cAAc,EAAE,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,aAAa,CAAC;AAC9D,CAAC,CAAC;AACF;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,GAAG,CAAC,IAAI,OAAO,CAAC,CAAC,cAAc,EAAE,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,kBAAkB,CAAC;AACnE,CAAC,CAAC;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,GAAG,CAAC,IAAI,OAAO,CAAC,CAAC,cAAc,EAAE,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,QAAQ,CAAC;AACzD,CAAC,CAAC;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,EAAE,IAAI,CAAC;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,EAAE,IAAI,CAAC;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE,IAAI,CAAC,0CAA0C,EAAE,IAAI,CAAC;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,GAAG,CAAC,IAAI,OAAO,CAAC,CAAC,cAAc,EAAE,IAAI,CAAC,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CAAC,CAAC,cAAc,EAAE,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,OAAO,CAAC;AACxD,CAAC,CAAC;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,EAAE,IAAI,CAAC,mBAAmB,EAAE,IAAI,CAAC;AACtC;AACA,EAAE,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,GAAG,CAAC,IAAI,OAAO,CAAC,CAAC,cAAc,EAAE,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,eAAe,CAAC;AAChE,CAAC,CAAC;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU,EAAE,IAAI,CAAC;AACjB,UAAU,EAAE,IAAI,CAAC;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,GAAG,CAAC,IAAI,OAAO,CAAC,CAAC,cAAc,EAAE,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,iBAAiB,CAAC;AAClE,CAAC,CAAC;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,EAAE,IAAI,CAAC,qBAAqB,EAAE,IAAI,CAAC;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,GAAG,CAAC,IAAI,OAAO,CAAC,CAAC,cAAc,EAAE,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,UAAU,CAAC;AAC3D,CAAC,CAAC;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,EAAE,IAAI,CAAC,gBAAgB,EAAE,IAAI,CAAC;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A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CA;AACA;AACA;AACA;AACA;AACA,EAAE,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,GAAG,CAAC,IAAI,OAAO,CAAC,CAAC,8BAA8B,CAAC;AACjD,CAAC,CAAC;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,GAAG,CAAC,IAAI,OAAO,CAAC,CAAC,2BAA2B,CAAC;AAC9C,CAAC,CAAC;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,GAAG,CAAC,IAAI,OAAO,CAAC,CAAC,0BAA0B,CAAC;AAC7C,CAAC,CAAC;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,GAAG,CAAC,IAAI,OAAO,CAAC,CAAC,+BAA+B,CAAC;AAClD,CAAC,CAAC;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,CAAC,CAAC,EAAC;AACL,CAAC,GAAG,CAAC,IAAI,OAAO,CAAC,CAAC,4BAA4B,EAAE,IAAI,CAAC,EAAE,CAAC;AACxD,CAAC,CAAC;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,EAAE,IAAI,CAAC;AACb;AACA;AACA;AACA;AACA;AACA,EAAE,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,GAAG,CAAC,IAAI,OAAO,CAAC,CAAC,iCAAiC,EAAE,IAAI,CAAC,EAAE,CAAC;AAC7D,CAAC,CAAC;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,EAAE,IAAI,CAAC;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,GAAG,CAAC,IAAI,OAAO,CAAC,CAAC,+BAA+B,CAAC;AAClD,CAAC,CAAC;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,GAAG,CAAC,IAAI,OAAO,CAAC,CAAC,gCAAgC,CAAC;AACnD,CAAC,CAAC;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,GAAG,CAAC,IAAI,OAAO,CAAC,CAAC,yBAAyB,EAAE,IAAI,CAAC,EAAE,CAAC;AACrD,CAAC,CAAC;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,EAAE,IAAI,CAAC;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,GAAG,CAAC,IAAI,OAAO,CAAC,CAAC,iCAAiC,EAAE,IAAI,CAAC,EAAE,CAAC;AAC7D,CAAC,CAAC;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE,IAAI,CAAC;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,GAAG,CAAC,IAAI,OAAO,CAAC,CAAC,0BAA0B,EAAE,IAAI,CAAC,EAAE,CAAC;AACtD,CAAC,CAAC;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,EAAE,IAAI,CAAC;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,GAAG,CAAC,IAAI,OAAO,CAAC,CAAC,kCAAkC,CAAC;AACrD,CAAC,CAAC;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,GAAG,CAAC,IAAI,OAAO,CAAC,CAAC,+BAA+B,CAAC;AAClD,CAAC,CAAC;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,GAAG,CAAC,IAAI,OAAO,CAAC,CAAC,6BAA6B,CAAC;AAChD,CAAC,CAAC;AACF;AACA;AACA;AACA,EAAE,CAAC,CAAC,CAAC,CAAC;AACN;AACA;AACA;AACA,CAAC,YAAY,CAAC,cAAc,CAAC,CAAC;AAC9B;AACA,CAAC,GAAG,CAAC,IAAI,OAAO,CAAC,yBAAyB;AAC1C,CAAC,CAAC;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,GAAG,CAAC,IAAI,OAAO,CAAC,CAAC,kBAAkB,EAAE,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,EAAE,CAAC;AACvD,CAAC,CAAC;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,GAAG,CAAC,IAAI,OAAO,CAAC,sBAAsB;AACvC,CAAC,CAAC;AACF;AACA,EAAE,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,GAAG,CAAC,IAAI,OAAO,CAAC,0BAA0B;AA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C,CAAC,CAAC;AACP,CAAC,GAAG,CAAC,IAAI,OAAO,CAAC,2BAA2B,EAAE,CAAC;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,GAAG,CAAC,IAAI,OAAO,CAAC,yBAAyB,EAAE,CAAC;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,GAAG,CAAC,IAAI,OAAO,CAAC,gCAAgC;AACjD,CAAC,CAAC;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,GAAG,CAAC,IAAI,OAAO,CAAC,+BAA+B;AAChD,CAAC,CAAC;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,GAAG,CAAC,IAAI,OAAO,CAAC,+BAA+B;AAChD,CAAC,CAAC;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,GAAG,CAAC,IAAI,OAAO,CAAC,4BAA4B;AAC7C,CAAC,CAAC;AACF;AACA,EAAE,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,GAAG,CAAC,IAAI,OAAO,CAAC,0BAA0B;AAC3C,CAAC,CAAC;AACF;AACA,EAAE,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,GAAG,CAAC,IAAI,OAAO,CAAC,2BAA2B;AAC5C,CAAC,CAAC;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,CAAC,CAAC,EAAC;AACL;AACA;AACA;AACA,CAAC,YAAY,CAAC,sBAAsB,CAAC,CAAC;AACtC,CAAC,GAAG,CAAC,IAAI,OAAO,CAAC,iCAAiC;AAClD,CAAC,CAAC;AACF;AACA,EAAE,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,GAAG,CAAC,IAAI,OAAO,CAAC,2BAA2B,EAAE,CAAC,+BAA+B,CAAC,CAAC,CAAC,CAAC;AAClF,CAAC,GAAG,CAAC,IAAI,OAAO,CAAC,2BAA2B;AAC5C,CAAC,CAAC;AACF;AACA;AACA;AACA;AACA,EAAE,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,GAAG,CAAC,IAAI,OAAO,CAAC,2BAA2B;AAC5C,CAAC,CAAC;AACF;AACA,EAAE,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,GAAG,CAAC,IAAI,OAAO,CAAC,kCAAkC;AACnD,CAAC,CAAC;AACF;AACA,EAAE,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,GAAG,CAAC,IAAI,OAAO,CAAC,4BAA4B;AAC7C,CAAC,CAAC;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,GAAG,CAAC,IAAI,OAAO,CAAC,4BAA4B;AAC7C,CAAC,CAAC;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,GAAG,CAAC,IAAI,OAAO,CAAC,6BAA6B;AAC9C,CAAC,CAAC;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,GAAG,CAAC,IAAI,OAAO,CAAC,4BAA4B;AAC7C,CAAC,CAAC;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,GAAG,CAAC,IAAI,OAAO,CAAC,6BAA6B;AAC9C,CAAC,CAAC;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,CAAC,CAAC,CAAC,CAAC;AACN;AACA;AACA;AACA,CAAC,gBAAgB,CAAC,iBAAiB,CAAC,CAAC;AACrC;AACA,CAAC,GAAG,CAAC,IAAI,OAAO,CAAC,4BAA4B;AAC7C,CAAC,CAAC;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,GAAG,CAAC,IAAI,OAAO,CAAC,4BAA4B,EAAE,mBAAmB,CAAC,CAAC,CAAC;AACrE,CAAC,GAAG,CAAC,IAAI,OAAO,CAAC,iCAAiC;AAClD,CAAC,CAAC;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,GAAG,CAAC,IAAI,OAAO,CAAC,4BAA4B,EAAE,iBAAiB,CAAC,CAAC,CAAC;AACnE,CAAC,GAAG,CAAC,IAAI,OAAO,CAAC,wBAAwB,EAAE,4BAA4B,CAAC,CAAC,CAAC;AAC1E,CAAC,GAAG,CAAC,IAAI,OAAO,CAAC,uBAAuB,EAAE,2BAA2B,CAAC,CAAC,CAAC;AACxE,CAAC,GAAG,CAAC,IAAI,OAAO,CAAC,2BAA2B;AAC5C,CAAC,CAAC;AACF;AACA,EAAE,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,GAAG,CAAC,IAAI,OAAO,CAAC,sBAAsB;AACvC,CAAC,CAAC;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,GAAG,CAAC,IAAI,OAAO,CAAC,2BAA2B,EAAE,4BAA4B,CAAC,CAAC,CAAC;AAC7E,CAAC,GAAG,CAAC,IAAI,OAAO,CAAC,yBAAyB;AAC1C,CAAC,CAAC;AACF;AACA;AACA;AACA,EAAE,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,GAAG,CAAC,IAAI,OAAO,CAAC,+BAA+B;AAChD,CAAC,CAAC;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,GAAG,CAAC,IAAI,OAAO,CAAC,iCAAiC;AAClD,CAAC,CAAC;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,CAAC,CAAC,CAAC,CAAC;AACN;AACA,CAAC,GAAG,CAAC,IAAI,OAAO,CAAC,gCAAgC;AACjD,CAAC,CAAC;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,GAAG,CAAC,IAAI,OAAO,CAAC,oCAAoC;AACrD,CAAC,CAAC;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,GAAG,CAAC,IAAI,OAAO,CAAC,wCAAwC;AACzD,CAAC,CAAC;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,GAAG,CAAC,IAAI,OAAO,CAAC,kCAAkC;AACnD,CAAC,CAAC;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,GAAG,CAAC,IAAI,OAAO,CAAC,iCAAiC;AAClD,CAAC,CAAC;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,GAAG,CAAC,IAAI,OAAO,CAAC,gCAAgC;AACjD,CAAC,CAAC;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,GAAG,CAAC,IAAI,OAAO,CAAC,0BAA0B;AAC3C,CAAC,CAAC;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,GAAG,CAAC,IAAI,OAAO,CAAC,uBAAuB;AACxC,CAAC,CAAC;AACF;AACA,EAAE,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,GAAG,CAAC,IAAI,OAAO,CAAC,wBAAwB;AACzC,CAAC,CAAC;AACF;AACA,EAAE,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,GAAG,CAAC,IAAI,OAAO,CAAC,wBAAwB;AACzC,CAAC,CAAC;AACF;AACA,EAAE,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,GAAG,CAAC,IAAI,OAAO,CAAC,wBAAwB;AACzC,CAAC,CAAC;AACF;AACA,EAAE,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,GAAG,CAAC,IAAI,OAAO,CAAC,wBAAwB;AACzC,CAAC,CAAC;AACF;AACA,EAAE,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,GAAG,CAAC,IAAI,OAAO,CAAC,wBAAwB;AACzC,CAAC,CAAC;AACF;AACA,EAAE,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,GAAG,CAAC,IAAI,OAAO,CAAC,wBAAwB;AACzC,CAAC,CAAC;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,GAAG,CAAC,IAAI,OAAO,CAAC,2BAA2B,EAAE,CAAC;AAC/C;AACA;AACA;AACA;AACA,EAAE,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,GAAG,CAAC,IAAI,OAAO,CAAC,uBAAuB;AACxC,CAAC,CAAC;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,GAAG,CAAC,IAAI,OAAO,CAAC,wBAAwB;AACzC,CAAC,CAAC;AACF;AACA,EAAE,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,GAAG,CAAC,IAAI,OAAO,CAAC,uBAAuB;AACxC,CAAC,CAAC;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,GAAG,CAAC,IAAI,OAAO,CAAC,gCAAgC;AACjD,CAAC,CAAC;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,GAAG,CAAC,IAAI,OAAO,CAAC,0BAA0B;AAC3C,CAAC,CAAC;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,GAAG,CAAC,IAAI,OAAO,CAAC,sBAAsB;AACvC,CAAC,CAAC;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,GAAG,CAAC,IAAI,OAAO,CAAC,2BAA2B;AAC5C,CAAC,CAAC;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,GAAG,CAAC,IAAI,OAAO,CAAC,+BAA+B;AAChD,CAAC,CAAC;AACF;AACA;AACA;AACA,EAAE,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,GAAG,CAAC,IAAI,OAAO,CAAC,6BAA6B;AAC9C,CAAC,CAAC;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,GAAG,CAAC,IAAI,OAAO,CAAC,6BAA6B;AAC9C,CAAC,CAAC;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,GAAG,CAAC,IAAI,OAAO,CAAC,kCAAkC;AACnD,CAAC,CAAC;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,GAAG,CAAC,IAAI,OAAO,CAAC,uBAAuB;AACxC,CAAC,CAAC;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA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C;AACN,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,qBAAqB,CAAC,IAAI,EAAE;AAC7B,EAAE,IAAI,IAAI,CAAC,OAAO,EAAE,EAAE;AACtB;AACA;AACA;AACA,GAAG,IAAI,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC;AACpB;AACA;AACA;AACA;AACA,MAAM,EAAE,IAAI,CAAC;AACb;AACA;AACA;AACA;AACA,uCAAuC,EAAE,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC;AAC9D;AACA;AACA;AACA,IAAI,CAAC,CAAC,CAAC;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG,OAAO,EAAE,CAAC;AACb,GAAG,MAAM;AACT,GAAG,IAAI,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC;AACpB;AACA;AACA;AACA;AACA,MAAM,EAAE,IAAI,CAAC;AACb;AACA;AACA;AACA;AACA,uCAAuC,EAAE,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC;AAC9D;AACA;AACA;AACA,IAAI,CAAC,EAAC;AACN;AACA,GAAG,OAAO,EAAE,CAAC;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,WAAW,EAAE;AACnC;AACA;AACA;AACA,EAAE,MAAM,WAAW,GAAG,EAAE,CAAC;AACzB;AACA,EAAE,IAAI,IAAI,CAAC,OAAO,EAAE,EAAE;AACtB,GAAG,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC,EAA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AAC,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC;AACjE,aAAa;AACb,SAAS,MAAM;AACf,YAAY,MAAM,IAAI,KAAK,CAAC,kBAAkB,CAAC,CAAC;AAChD,SAAS;AACT,MAAK;AACL;AACA,IAAI,OAAO,QAAQ,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;AAC9B,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,eAAe,GAAG,GAAG,CAAC;AAC5B;AACA;AACA;AACA;AACA;AACA,SAAS,cAAc,CAAC,IAAI,EAAE;AAC9B,IAAI,IAAI,IAAI,YAAY,UAAU,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,IAAI,CAAC,IAAI,IAAI,CAAC,IAAI,YAAY,UAAU,IAAI,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE;AACtI,QAAQ,OAAO,IAAI,CAAC;AACpB,KAAK,MAAM;AACX,QAAQ,OAAO,KAAK,CAAC;AACrB,KAAK;AACL,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAM,WAAW,CAAC;AACzB,IAAI,UAAU,CAAC;AACf,IAAI,KAAK,CAAC;AACV,IAAI,WAAW,CAAC;AAChB;AACA;AACA;AACA;AACA,IAAI,SAAS,CAAC;AACd;AACA;AACA;AACA;AACA,IAAI,UAAU,CAAC;AACf;AACA;AACA;AACA;AACA;AACA,IAAI,WAAW,CAAC,IAAI,EAAE,UAAU,GAAG,KAAK,EAAE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","x_google_ignoreList":[1]}